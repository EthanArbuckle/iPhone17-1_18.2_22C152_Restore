id variable initialization expression of LockScreenDataModel.homeManager()
{
  id v0;
  id v1;

  sub_100004B50(0, &qword_100091F80);
  v0 = [(id)swift_getObjCClassFromMetadata() defaultPrivateConfiguration];
  [v0 setDiscretionary:0];
  [v0 setAdaptive:1];
  v1 = [objc_allocWithZone((Class)HMHomeManager) initWithConfiguration:v0];

  return v1;
}

uint64_t variable initialization expression of SecurityAccessoryConfigurationIntentResponse.code()
{
  return 0;
}

uint64_t variable initialization expression of LockScreenDataModel.defaultsHomeSensingChangedNotifyToken()
{
  return 0;
}

uint64_t sub_100003B70(long long *a1)
{
  long long v2 = *a1;
  if (sub_10006E50C(2, 17, 0, 0)) {
    return swift_getOpaqueTypeMetadata2();
  }
  else {
    return v2;
  }
}

uint64_t sub_100003BE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (sub_10006E50C(2, 17, 0, 0)) {
    return swift_getOpaqueTypeConformance2();
  }
  return v1;
}

void sub_100003C50(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_100003C5C(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_100003C70@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

char *sub_100003C80(char *a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  v17 = a1;
  v9 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_10006FAC8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      v12 = (a2 & 0xC000000000000001) != 0 ? (char *)sub_10006F9F8() : (char *)*(id *)(a2 + 8 * i);
      v9 = v12;
      uint64_t v13 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      v16 = v12;
      sub_10001BA30(&v17, (void **)&v16, a3, a4, a5);
      if (v5)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v9;
      }

      if (v13 == v10)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100003DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[33] = a3;
  v4[34] = a4;
  v4[31] = a1;
  v4[32] = a2;
  return _swift_task_switch(sub_100003DEC, 0, 0);
}

uint64_t sub_100003DEC()
{
  v29 = v0;
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = sub_10006EC68();
  v0[35] = sub_100004B08(v2, (uint64_t)qword_10009A7A0);
  id v3 = v1;
  swift_bridgeObjectRetain_n();
  id v4 = v3;
  uint64_t v5 = sub_10006EC48();
  os_log_type_t v6 = sub_10006F818();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = v0[34];
  if (v7)
  {
    os_log_type_t v26 = v6;
    uint64_t v9 = v0[33];
    uint64_t v27 = v0[32];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315650;
    swift_bridgeObjectRetain();
    v0[28] = sub_100022B5C(v9, v8, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    v0[29] = sub_100022B5C(0xD00000000000001DLL, 0x80000001000776F0, &v28);
    sub_10006F868();
    *(_WORD *)(v10 + 22) = 2080;
    if (v27)
    {
      id v11 = [v4 name];
      uint64_t v12 = sub_10006F4F8();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE400000000000000;
      uint64_t v12 = 1819047278;
    }
    v0[30] = sub_100022B5C(v12, v14, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  sub_100004960(&qword_1000917F0);
  uint64_t inited = swift_initStackObject();
  v0[36] = inited;
  *(_OWORD *)(inited + 16) = xmmword_100070910;
  if (qword_100091690 != -1) {
    swift_once();
  }
  uint64_t v16 = *((void *)&xmmword_10009A700 + 1);
  uint64_t v17 = qword_10009A710;
  uint64_t v18 = unk_10009A718;
  long long v19 = xmmword_10009A720;
  uint64_t v20 = qword_10009A730;
  *(void *)(inited + 32) = xmmword_10009A700;
  *(void *)(inited + 40) = v16;
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = v18;
  *(_OWORD *)(inited + 64) = v19;
  *(void *)(inited + 80) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v19 + 1));
  v21 = (void *)swift_task_alloc();
  v0[37] = v21;
  void *v21 = v0;
  v21[1] = sub_100004204;
  uint64_t v22 = v0[33];
  uint64_t v23 = v0[34];
  uint64_t v24 = v0[32];
  return LockScreenDataModel.reloadCharacteristics(matching:for:fetchId:)(inited, v24, v22, v23);
}

uint64_t sub_100004204(uint64_t a1)
{
  *(void *)(*(void *)v1 + 304) = a1;
  swift_task_dealloc();
  swift_setDeallocating();
  swift_arrayDestroy();
  return _swift_task_switch(sub_10000433C, 0, 0);
}

uint64_t sub_10000433C()
{
  uint64_t v43 = v0;
  uint64_t v1 = *(void **)(v0 + 256);
  long long v2 = *(_OWORD *)&qword_10009A710;
  *(_OWORD *)(v0 + 104) = xmmword_10009A700;
  *(_OWORD *)(v0 + 120) = v2;
  *(_OWORD *)(v0 + 136) = xmmword_10009A720;
  *(void *)(v0 + 152) = qword_10009A730;
  if (v1)
  {
    id v3 = [v1 accessories];
    sub_100004B50(0, (unint64_t *)&qword_1000917F8);
    unint64_t v4 = sub_10006F668();

    *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 144);
    *(void *)(v0 + 192) = *(void *)(v0 + 136);
    sub_100004B8C(v0 + 160);
    sub_100004BB8(v0 + 176);
    sub_100004BB8(v0 + 184);
    sub_100004BB8(v0 + 192);
    sub_100004B40(v5);
    os_log_type_t v6 = sub_100025574(v4, v0 + 104);
    sub_100004BE4(v0 + 160);
    sub_100004C10(v0 + 176);
    sub_100004C10(v0 + 184);
    sub_100004C10(v0 + 192);
    sub_100004C3C(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v6 = _swiftEmptyArrayStorage;
  }
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 264);
  unint64_t v9 = *(void *)(v0 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100003C80((char *)_swiftEmptyArrayStorage, (unint64_t)v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v10 + 2);
  if (v11)
  {
    uint64_t v12 = sub_10001CC58((uint64_t)v10);
    char v14 = v13;
    swift_bridgeObjectRelease();
    int v15 = v14 & 1;
    uint64_t v41 = sub_10001CEDC(v12, v14 & 1);
    unint64_t v17 = v16;
    if (v14)
    {
LABEL_7:
      uint64_t v19 = 0x6964656D2E697161;
      unint64_t v18 = 0xEA00000000006D75;
    }
    else
    {
      unint64_t v18 = 0xE700000000000000;
      uint64_t v19 = 0x776F6C2E697161;
      switch(v12)
      {
        case 1:
          break;
        case 5:
          unint64_t v18 = 0xE800000000000000;
          uint64_t v19 = 0x686769682E697161;
          break;
        default:
          goto LABEL_7;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_10006EC48();
    os_log_type_t v21 = sub_10006F818();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = *(void *)(v0 + 272);
    if (v22)
    {
      uint64_t v39 = *(void *)(v0 + 264);
      int v40 = v15;
      uint64_t v24 = swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 200) = sub_100022B5C(v39, v23, v42);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 208) = sub_100022B5C(v41, v17, v42);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "...{%s} airQuality is: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      int v15 = v40;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    if (v15) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = v12;
    }
    BOOL v32 = __OFSUB__(6, v31);
    uint64_t v33 = 6 - v31;
    if (v32)
    {
      __break(1u);
      JUMPOUT(0x10000494CLL);
    }
    double v34 = (double)v33;
    double v35 = 4.0;
  }
  else
  {
    unint64_t v18 = 0xEA00000000006D75;
    uint64_t v41 = 0x9380E29380E2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v25 = sub_10006EC48();
    os_log_type_t v26 = sub_10006F818();
    BOOL v27 = os_log_type_enabled(v25, v26);
    unint64_t v28 = *(void *)(v0 + 272);
    if (v27)
    {
      uint64_t v29 = *(void *)(v0 + 264);
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 216) = sub_100022B5C(v29, v28, v42);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "...{%s} has no air qualities, returning placeholder", v30, 0xCu);
      swift_arrayDestroy();
      unint64_t v18 = 0xEA00000000006D75;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v19 = 0x6964656D2E697161;
    unint64_t v17 = 0xA600000000000000;
    double v34 = 0.0;
    double v35 = 5.0;
  }
  uint64_t v36 = *(void *)(v0 + 248);
  *(void *)uint64_t v36 = 0;
  *(double *)(v36 + 8) = v35;
  *(double *)(v36 + 16) = v34;
  *(unsigned char *)(v36 + 24) = v11 == 0;
  *(void *)(v36 + 32) = v41;
  *(void *)(v36 + 40) = v17;
  *(void *)(v36 + 48) = v19;
  *(void *)(v36 + 56) = v18;
  *(unsigned char *)(v36 + 64) = 0;
  v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37();
}

uint64_t sub_100004960(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000049A4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1000049EC()
{
  unint64_t result = qword_1000917D0;
  if (!qword_1000917D0)
  {
    sub_1000049A4(&qword_1000917C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000917D0);
  }
  return result;
}

unint64_t sub_100004A48()
{
  unint64_t result = qword_1000917D8;
  if (!qword_1000917D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000917D8);
  }
  return result;
}

__n128 sub_100004A9C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_100004AAC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100004ACC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_100004B08(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_100004B40(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100004B50(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100004B8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100004BB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100004BE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100004C10(uint64_t a1)
{
  return a1;
}

uint64_t sub_100004C3C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void type metadata accessor for HMCharacteristicValueCurrentSecuritySystemState(uint64_t a1)
{
}

void sub_100004C60(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

_UNKNOWN **static CharacteristicKind.allCases.getter()
{
  return &off_10008B400;
}

unint64_t CharacteristicKind.rawValue.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_1000057D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s20HomeWidgetLockScreen18CharacteristicKindO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_100005808@<X0>(void *a1@<X8>)
{
  unint64_t result = CharacteristicKind.rawValue.getter();
  *a1 = 0xD000000000000024;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000583C()
{
  CharacteristicKind.rawValue.getter();
  uint64_t v1 = v0;
  CharacteristicKind.rawValue.getter();
  if (v1 == v2) {
    char v3 = 1;
  }
  else {
    char v3 = sub_10006FCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1000058C8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x737569736C6563;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x737569736C6563;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x61746E6563726570;
      unint64_t v3 = 0xEA00000000006567;
      break;
    case 2:
      uint64_t v5 = 0x6572676564637261;
      unint64_t v3 = 0xEA00000000007365;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7894380;
      break;
    case 4:
      uint64_t v5 = 0x73646E6F636573;
      break;
    case 5:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7373656C74696E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006567;
      if (v5 == 0x61746E6563726570) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEA00000000007365;
      if (v5 != 0x6572676564637261) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7894380) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x73646E6F636573;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7373656C74696E75) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_10006FCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

void sub_100005AD4(void *a1@<X8>)
{
  *a1 = &off_10008B400;
}

uint64_t sub_100005AE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return _s20HomeWidgetLockScreen18CharacteristicKindO1loiySbAC_ACtFZ_0(*a1, *a2);
}

BOOL sub_100005AF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (_s20HomeWidgetLockScreen18CharacteristicKindO1loiySbAC_ACtFZ_0(*a2, *a1) & 1) == 0;
}

BOOL sub_100005B20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (_s20HomeWidgetLockScreen18CharacteristicKindO1loiySbAC_ACtFZ_0(*a1, *a2) & 1) == 0;
}

uint64_t sub_100005B48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return _s20HomeWidgetLockScreen18CharacteristicKindO1loiySbAC_ACtFZ_0(*a2, *a1);
}

Swift::Int sub_100005B58()
{
  return sub_10006FDD8();
}

Swift::Int sub_100005BBC()
{
  return sub_10006FDD8();
}

uint64_t sub_100005CD0()
{
  CharacteristicKind.rawValue.getter();
  sub_10006F548();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100005D24()
{
  return sub_10006FDD8();
}

Swift::Int sub_100005D84()
{
  return sub_10006FDD8();
}

uint64_t sub_100005E94()
{
  return sub_10006F628();
}

uint64_t sub_100005EF4()
{
  return sub_10006F608();
}

uint64_t CharacteristicKind.description.getter(uint64_t a1)
{
  if (qword_100091660 != -1) {
    swift_once();
  }
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = off_100091808;
  if (*((void *)off_100091808 + 2))
  {
    unint64_t v4 = sub_10000C8B8(a1);
    if (v5)
    {
      uint64_t v2 = *(void *)(v3[7] + (v4 << 6) + 8);
      swift_bridgeObjectRetain();
    }
  }
  return v2;
}

uint64_t sub_100005FEC()
{
  uint64_t v1 = *v0;
  if (qword_100091660 != -1) {
    swift_once();
  }
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = off_100091808;
  if (*((void *)off_100091808 + 2))
  {
    unint64_t v4 = sub_10000C8B8(v1);
    if (v5)
    {
      uint64_t v2 = *(void *)(v3[7] + (v4 << 6) + 8);
      swift_bridgeObjectRetain();
    }
  }
  return v2;
}

unint64_t static CharacteristicKind.info(for:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result;
  if (qword_100091660 != -1) {
    unint64_t result = swift_once();
  }
  unint64_t v4 = off_100091808;
  long long v5 = 0uLL;
  if (*((void *)off_100091808 + 2))
  {
    unint64_t result = sub_10000C8B8(v2);
    if (v6)
    {
      char v7 = (unsigned __int8 *)(v4[7] + (result << 6));
      uint64_t v8 = *v7;
      uint64_t v10 = *((void *)v7 + 1);
      uint64_t v9 = *((void *)v7 + 2);
      uint64_t v11 = *((void *)v7 + 4);
      unint64_t v12 = *((unsigned int *)v7 + 10) | ((unint64_t)v7[44] << 32);
      long long v14 = *((_OWORD *)v7 + 3);
      uint64_t v13 = *((unsigned __int16 *)v7 + 12);
      swift_bridgeObjectRetain();
      unint64_t result = sub_100010B18(v11, v12);
      long long v5 = v14;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v10 = 0;
      uint64_t v9 = 0;
      uint64_t v13 = 0;
      uint64_t v11 = 0;
      unint64_t v12 = 0;
      long long v5 = 0uLL;
    }
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    uint64_t v13 = 0;
    uint64_t v11 = 0;
    unint64_t v12 = 0;
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v12;
  *(_OWORD *)(a2 + 48) = v5;
  return result;
}

uint64_t sub_1000061B8()
{
  if (qword_1000916A8 != -1) {
    swift_once();
  }
  uint64_t v23 = 0x6574636172616843;
  unint64_t v24 = 0xEF73636974736972;
  id v0 = [qword_10009A780 __swift_objectForKeyedSubscript:sub_10006FD28()];
  swift_unknownObjectRelease();
  if (v0)
  {
    uint64_t v1 = 0;
    sub_10006F898();
    swift_unknownObjectRelease();
    sub_100010C8C(&v33, &v34);
    sub_100004960(&qword_100091C68);
    swift_dynamicCast();
    uint64_t v2 = v32;
    uint64_t v19 = *(void *)(v32 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = 0;
      BOOL v22 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v18 = v32;
      do
      {
        uint64_t v31 = *(void *)(v2 + 8 * v3 + 32);
        swift_bridgeObjectRetain();
        sub_1000064A8(&v31, &v23);
        swift_bridgeObjectRelease();
        uint64_t v5 = v26;
        if (v26)
        {
          char v6 = v23;
          char v7 = v24;
          uint64_t v8 = v25;
          __int16 v10 = v27;
          uint64_t v9 = v28;
          uint64_t v11 = v29;
          long long v20 = v30;
          uint64_t v21 = v1;
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v12 = v22;
          }
          else {
            unint64_t v12 = sub_10000C250(0, *((void *)v22 + 2) + 1, 1, v22);
          }
          unint64_t v14 = *((void *)v12 + 2);
          unint64_t v13 = *((void *)v12 + 3);
          if (v14 >= v13 >> 1) {
            unint64_t v12 = sub_10000C250((char *)(v13 > 1), v14 + 1, 1, v12);
          }
          *((void *)v12 + 2) = v14 + 1;
          BOOL v22 = v12;
          unint64_t v4 = &v12[72 * v14];
          v4[32] = v6;
          v4[40] = v7;
          *((void *)v4 + 6) = v8;
          *((void *)v4 + 7) = v5;
          *((_WORD *)v4 + 32) = v10;
          *((void *)v4 + 9) = v9;
          v4[84] = BYTE4(v11);
          *((_DWORD *)v4 + 20) = v11;
          *(_OWORD *)(v4 + 88) = v20;
          uint64_t v1 = v21;
          uint64_t v2 = v18;
        }
        ++v3;
      }
      while (v19 != v3);
      swift_bridgeObjectRelease();
      int v15 = v22;
    }
    else
    {
      int v15 = (char *)&_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    if (*((void *)v15 + 2))
    {
      sub_100004960(&qword_100091C70);
      unint64_t v16 = (void *)sub_10006FAF8();
    }
    else
    {
      unint64_t v16 = &_swiftEmptyDictionarySingleton;
    }
    uint64_t v23 = (uint64_t)v16;
    sub_100010760((uint64_t)v15, 1, &v23);
    uint64_t result = swift_bridgeObjectRelease();
    off_100091808 = (_UNKNOWN *)v23;
  }
  else
  {
    __break(1u);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

void sub_1000064A8(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (*(void *)(*a1 + 16))
  {
    unint64_t v4 = sub_10000C940(1145656661, 0xE400000000000000);
    if (v5)
    {
      uint64_t v41 = *(void *)(*(void *)(v3 + 56) + 8 * v4);
      swift_unknownObjectRetain();
      if (swift_dynamicCast())
      {
        unsigned __int8 v6 = _s20HomeWidgetLockScreen18CharacteristicKindO8rawValueACSgSS_tcfC_0();
        if (v6 != 174)
        {
          if (*(void *)(v3 + 16))
          {
            unsigned __int8 v14 = v6;
            unint64_t v15 = sub_10000C940(1701667150, 0xE400000000000000);
            if (v16)
            {
              uint64_t v46 = *(void *)(*(void *)(v3 + 56) + 8 * v15);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              if (*(void *)(v3 + 16))
              {
                unint64_t v17 = sub_10000C940(0x74616D726F46, 0xE600000000000000);
                if (v18)
                {
                  uint64_t v43 = *(void **)(*(void *)(v3 + 56) + 8 * v17);
                  swift_unknownObjectRetain();
                  swift_dynamicCast();
                  unsigned __int8 v19 = _s20HomeWidgetLockScreen18CharacteristicKindO6FormatO8rawValueAESgSS_tcfC_0(v41, v42);
                  if (v19 != 11)
                  {
                    unsigned __int8 v20 = v19;
                    if (*(void *)(v3 + 16)
                      && (unint64_t v21 = sub_10000C940(1953066581, 0xE400000000000000), (v22 & 1) != 0)
                      && (uint64_t v43 = *(void **)(*(void *)(v3 + 56) + 8 * v21),
                          swift_unknownObjectRetain(),
                          swift_dynamicCast()))
                    {
                      uint64_t v23 = v41;
                      unint64_t v24 = v42;
                    }
                    else
                    {
                      uint64_t v23 = 0;
                      unint64_t v24 = (void *)0xE000000000000000;
                    }
                    unsigned __int8 v37 = _s20HomeWidgetLockScreen18CharacteristicKindO4UnitO8rawValueAESgSS_tcfC_0(v23, v24);
                    if (*(void *)(v3 + 16)
                      && (sub_10000C940(0x69617274736E6F43, 0xEB0000000073746ELL), (v25 & 1) != 0))
                    {
                      swift_unknownObjectRetain();
                      sub_100004960(&qword_100091C98);
                      if (swift_dynamicCast()) {
                        uint64_t v26 = (uint64_t)v43;
                      }
                      else {
                        uint64_t v26 = 0;
                      }
                    }
                    else
                    {
                      uint64_t v26 = 0;
                    }
                    unint64_t v27 = sub_10001005C(v26);
                    uint64_t v38 = v28;
                    unint64_t v39 = v27;
                    unsigned __int8 v40 = v20;
                    if (*(void *)(v3 + 16)
                      && (sub_10000C940(0x697373696D726550, 0xEB00000000736E6FLL), (v29 & 1) != 0))
                    {
                      uint64_t v30 = v45;
                      swift_unknownObjectRetain();
                      sub_100004960(&qword_100091C90);
                      if (swift_dynamicCast())
                      {
                        uint64_t v31 = v44;
                        uint64_t v32 = v43;
                        goto LABEL_36;
                      }
                    }
                    else
                    {
                      uint64_t v30 = v45;
                    }
                    uint64_t v31 = v44;
                    uint64_t v32 = &_swiftEmptyArrayStorage;
LABEL_36:
                    uint64_t v33 = sub_100010388((uint64_t)v32);
                    swift_bridgeObjectRelease();
                    if (*(void *)(v3 + 16)
                      && (sub_10000C940(0x69747265706F7250, 0xEA00000000007365), (v34 & 1) != 0)
                      && (swift_unknownObjectRetain(), sub_100004960(&qword_100091C90),
                                                       swift_dynamicCast()))
                    {
                      double v35 = v43;
                    }
                    else
                    {
                      double v35 = &_swiftEmptyArrayStorage;
                    }
                    uint64_t v36 = sub_1000104B0((uint64_t)v35);
                    swift_bridgeObjectRelease();
                    *a2 = v14;
                    a2[1] = v14;
                    a2[2] = v31;
                    a2[3] = v30;
                    a2[4] = v40 | ((unint64_t)v37 << 8);
                    a2[5] = v39;
                    a2[6] = v38 & 0xFFFFFFFFFFLL;
                    a2[7] = v33;
                    a2[8] = v36;
                    return;
                  }
LABEL_46:
                  __break(1u);
                  return;
                }
LABEL_45:
                __break(1u);
                goto LABEL_46;
              }
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_44;
        }
      }
    }
  }
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10006EC68();
  sub_100004B08(v7, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_10006EC48();
  os_log_type_t v9 = sub_10006F7F8();
  if (os_log_type_enabled(v8, v9))
  {
    __int16 v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)__int16 v10 = 136315138;
    if (*(void *)(v3 + 16))
    {
      sub_10000C940(1145656661, 0xE400000000000000);
      if (v11) {
        swift_unknownObjectRetain();
      }
    }
    sub_100004960(&qword_100091C88);
    uint64_t v12 = sub_10006F528();
    sub_100022B5C(v12, v13, &v44);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "missing characteristic %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  a2[8] = 0;
  *((_OWORD *)a2 + 2) = 0u;
  *((_OWORD *)a2 + 3) = 0u;
  *(_OWORD *)a2 = 0u;
  *((_OWORD *)a2 + 1) = 0u;
}

uint64_t CharacteristicKind.valueFormat.getter(uint64_t a1)
{
  if (qword_100091660 != -1) {
    swift_once();
  }
  uint64_t v2 = off_100091808;
  if (*((void *)off_100091808 + 2) && (unint64_t v3 = sub_10000C8B8(a1), (v4 & 1) != 0)) {
    return *(unsigned __int8 *)(v2[7] + (v3 << 6) + 24);
  }
  else {
    return 11;
  }
}

uint64_t CharacteristicKind.Value.id.getter(uint64_t a1, unint64_t a2, char a3)
{
  return a1;
}

uint64_t static CharacteristicKind.Value.typedValue(for:valueFormat:)(uint64_t a1, char a2)
{
  sub_100010BC4(a1, (uint64_t)&v34);
  if (v35)
  {
    sub_100010C8C(&v34, v36);
    sub_100010C9C((uint64_t)v36, (uint64_t)&v34);
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v3 = swift_dynamicCast();
      uint64_t v4 = v29;
      if (!v3) {
        uint64_t v4 = 0;
      }
      char v5 = v3 ^ 1;
LABEL_6:
      uint64_t v6 = sub_1000076D0(v4, v5, a2);
LABEL_54:
      uint64_t v7 = v6;
      sub_1000164E4((uint64_t)v36);
LABEL_55:
      sub_1000164E4((uint64_t)&v34);
      return v7;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v8 = swift_dynamicCast();
      __int16 v9 = v29;
      if (!v8) {
        __int16 v9 = 0;
      }
      uint64_t v6 = sub_1000071D4(v9 | (unsigned __int16)(((unsigned __int16)v8 ^ 1) << 8), a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v10 = swift_dynamicCast();
      int v11 = (unsigned __int16)v29;
      if (!v10) {
        int v11 = 0;
      }
      uint64_t v6 = sub_100007368(v11 | ((v10 ^ 1u) << 16), a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v12 = swift_dynamicCast();
      uint64_t v13 = v29;
      if (!v12) {
        uint64_t v13 = 0;
      }
      uint64_t v6 = sub_100007524(v13 | ((unint64_t)(v12 ^ 1u) << 32), a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v14 = swift_dynamicCast();
      uint64_t v4 = v29;
      if (!v14) {
        uint64_t v4 = 0;
      }
      char v5 = v14 ^ 1;
      goto LABEL_6;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v15 = swift_dynamicCast();
      __int16 v16 = v29;
      if (!v15) {
        __int16 v16 = 0;
      }
      uint64_t v6 = sub_100007884(v16 | (unsigned __int16)(((unsigned __int16)v15 ^ 1) << 8), a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v17 = swift_dynamicCast();
      int v18 = (unsigned __int16)v29;
      if (!v17) {
        int v18 = 0;
      }
      uint64_t v6 = sub_1000079C0(v18 | ((v17 ^ 1u) << 16), a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v19 = swift_dynamicCast();
      uint64_t v20 = v29;
      if (!v19) {
        uint64_t v20 = 0;
      }
      uint64_t v6 = sub_100007B08(v20 | ((unint64_t)(v19 ^ 1u) << 32), a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v21 = swift_dynamicCast();
      unint64_t v22 = v29;
      if (!v21) {
        unint64_t v22 = 0;
      }
      uint64_t v6 = sub_100007C64(v22, v21 ^ 1u, a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v23 = swift_dynamicCast();
      uint64_t v24 = v29;
      if (!v23) {
        uint64_t v24 = 0;
      }
      uint64_t v6 = sub_100007DBC(v24 | ((unint64_t)(v23 ^ 1u) << 32), a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      int v25 = swift_dynamicCast();
      uint64_t v26 = v29;
      if (!v25) {
        uint64_t v26 = 0;
      }
      uint64_t v6 = sub_10000806C(v26, v25 ^ 1u, a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      sub_100010C9C((uint64_t)v36, (uint64_t)v31);
      if (swift_dynamicCast()) {
        char v27 = v29;
      }
      else {
        char v27 = 2;
      }
      uint64_t v6 = sub_100010E48(v27, a2);
      goto LABEL_54;
    }
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      sub_100010C8C(v36, v31);
      if (swift_dynamicCast())
      {
        uint64_t v7 = v29;
        goto LABEL_55;
      }
LABEL_67:
      uint64_t v7 = 0;
      goto LABEL_55;
    }
    if (swift_dynamicCast())
    {
      sub_100010CF8(v32, v33);
      sub_100010C8C(v36, v31);
      if (swift_dynamicCast())
      {
        uint64_t v7 = v29;
        if (a2 == 10 || a2 == 9) {
          goto LABEL_55;
        }
        sub_100010CF8(v29, v30);
      }
      goto LABEL_67;
    }
    sub_1000164E4((uint64_t)v36);
    sub_1000164E4((uint64_t)&v34);
  }
  else
  {
    sub_100010C2C((uint64_t)&v34);
  }
  return 0;
}

uint64_t sub_1000071D4(__int16 a1, char a2)
{
  if ((a1 & 0x100) != 0)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    signed __int8 v2 = a1;
    *(double *)&uint64_t result = 0.0;
    switch(a2)
    {
      case 1:
        uint64_t result = v2 & ~(v2 >> 31);
        break;
      case 2:
        uint64_t result = v2 & ~(v2 >> 31);
        break;
      case 3:
        uint64_t result = v2 & ~(v2 >> 31);
        break;
      case 4:
        if (v2 < 0)
        {
          sub_10006FA98();
          __break(1u);
          JUMPOUT(0x10000733CLL);
        }
        uint64_t result = v2;
        break;
      case 5:
      case 6:
        uint64_t result = v2 & 0xFFFFFFFFLL;
        break;
      case 7:
        *(double *)&uint64_t result = (double)v2;
        break;
      case 8:
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_10006FCC8());
        break;
      case 9:
      case 10:
        return result;
      default:
        uint64_t result = v2 == 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100007368(int a1, char a2)
{
  if ((a1 & 0x10000) != 0)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    unsigned __int16 v2 = a1;
    *(double *)&uint64_t result = 0.0;
    switch(a2)
    {
      case 1:
        uint64_t v4 = v2;
        if (v2 > 0xFFu) {
          uint64_t v4 = 255;
        }
        if ((v2 & 0x8000) != 0) {
          *(double *)&uint64_t result = 0.0;
        }
        else {
          uint64_t result = v4;
        }
        break;
      case 2:
        uint64_t result = (__int16)v2 & ~((__int16)v2 >> 31);
        break;
      case 3:
        uint64_t v5 = (__int16)v2;
        if ((int)v5 >= 0) {
          uint64_t result = v5;
        }
        else {
          *(double *)&uint64_t result = 0.0;
        }
        break;
      case 4:
        if ((v2 & 0x8000) != 0)
        {
          sub_10006FA98();
          __break(1u);
          JUMPOUT(0x1000074F8);
        }
        uint64_t result = v2;
        break;
      case 5:
      case 6:
        uint64_t result = (__int16)v2;
        break;
      case 7:
        *(double *)&uint64_t result = (double)(__int16)v2;
        break;
      case 8:
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_10006FCC8());
        break;
      case 9:
      case 10:
        return result;
      default:
        uint64_t result = v2 == 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100007524(uint64_t a1, char a2)
{
  if ((a1 & 0x100000000) != 0)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    int v2 = a1;
    *(double *)&uint64_t result = 0.0;
    switch(a2)
    {
      case 1:
        uint64_t v4 = v2;
        if (v2 > 0xFF) {
          uint64_t v4 = 255;
        }
        goto LABEL_13;
      case 2:
        uint64_t v4 = (unsigned __int16)v2;
        if (HIWORD(v2)) {
          uint64_t v4 = 0xFFFFLL;
        }
LABEL_13:
        if (v2 >= 0) {
          uint64_t result = v4;
        }
        else {
          *(double *)&uint64_t result = 0.0;
        }
        break;
      case 3:
        uint64_t result = v2 & ~(v2 >> 31);
        break;
      case 4:
        if (v2 < 0)
        {
          sub_10006FA98();
          __break(1u);
          JUMPOUT(0x1000076A4);
        }
        uint64_t result = v2;
        break;
      case 5:
      case 6:
        uint64_t result = v2;
        break;
      case 7:
        *(double *)&uint64_t result = (double)v2;
        break;
      case 8:
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_10006FCC8());
        break;
      case 9:
      case 10:
        return result;
      default:
        uint64_t result = v2 == 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1000076D0(uint64_t a1, char a2, char a3)
{
  if (a2)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    *(double *)&uint64_t result = 0.0;
    switch(a3)
    {
      case 1:
        if (a1 >= 255) {
          a1 = 255;
        }
        uint64_t result = a1 & ~(a1 >> 63);
        break;
      case 2:
        if (a1 >= 0xFFFF) {
          a1 = 0xFFFFLL;
        }
        uint64_t result = a1 & ~(a1 >> 63);
        break;
      case 3:
        if (a1 >= 0xFFFFFFFFLL) {
          a1 = 0xFFFFFFFFLL;
        }
        uint64_t result = a1 & ~(a1 >> 63);
        break;
      case 4:
        if (a1 < 0)
        {
          sub_10006FA98();
          __break(1u);
          JUMPOUT(0x100007858);
        }
        uint64_t result = a1;
        break;
      case 5:
      case 6:
        if (a1 >= 0x7FFFFFFF) {
          a1 = 0x7FFFFFFFLL;
        }
        if (a1 <= (uint64_t)0xFFFFFFFF80000000) {
          LODWORD(a1) = 0x80000000;
        }
        uint64_t result = a1;
        break;
      case 7:
        *(double *)&uint64_t result = (double)a1;
        break;
      case 8:
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_10006FCC8());
        break;
      case 9:
      case 10:
        return result;
      default:
        uint64_t result = a1 == 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100007884(__int16 a1, char a2)
{
  if ((a1 & 0x100) != 0)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    unsigned __int8 v2 = a1;
    *(double *)&uint64_t result = 0.0;
    switch(a2)
    {
      case 1:
        uint64_t result = v2;
        break;
      case 2:
        uint64_t result = v2;
        break;
      case 3:
        uint64_t result = v2;
        break;
      case 4:
        uint64_t result = v2;
        break;
      case 5:
      case 6:
        uint64_t result = v2;
        break;
      case 7:
        *(double *)&uint64_t result = (double)v2;
        break;
      case 8:
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_10006FCC8());
        break;
      case 9:
      case 10:
        return result;
      default:
        uint64_t result = v2 == 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1000079C0(int a1, char a2)
{
  if ((a1 & 0x10000) != 0)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    unsigned __int16 v2 = a1;
    *(double *)&uint64_t result = 0.0;
    switch(a2)
    {
      case 1:
        if ((v2 & 0xFF00) != 0) {
          uint64_t result = 255;
        }
        else {
          uint64_t result = v2;
        }
        break;
      case 2:
        uint64_t result = v2;
        break;
      case 3:
        uint64_t result = v2;
        break;
      case 4:
        uint64_t result = v2;
        break;
      case 5:
      case 6:
        uint64_t result = v2;
        break;
      case 7:
        *(double *)&uint64_t result = (double)v2;
        break;
      case 8:
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_10006FCC8());
        break;
      case 9:
      case 10:
        return result;
      default:
        uint64_t result = v2 == 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100007B08(uint64_t a1, char a2)
{
  if ((a1 & 0x100000000) != 0)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    unsigned int v2 = a1;
    *(double *)&uint64_t result = 0.0;
    switch(a2)
    {
      case 1:
        if (v2 <= 0xFF) {
          uint64_t result = v2;
        }
        else {
          uint64_t result = 255;
        }
        break;
      case 2:
        if (HIWORD(v2)) {
          uint64_t result = 0xFFFFLL;
        }
        else {
          uint64_t result = (unsigned __int16)v2;
        }
        break;
      case 3:
        uint64_t result = v2;
        break;
      case 4:
        uint64_t result = v2;
        break;
      case 5:
      case 6:
        if (v2 >= 0x7FFFFFFF) {
          uint64_t result = 0x7FFFFFFFLL;
        }
        else {
          uint64_t result = v2;
        }
        break;
      case 7:
        *(double *)&uint64_t result = (double)v2;
        break;
      case 8:
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_10006FCC8());
        break;
      case 9:
      case 10:
        return result;
      default:
        uint64_t result = v2 == 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100007C64(unint64_t a1, char a2, char a3)
{
  if (a2)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    *(double *)&uint64_t result = 0.0;
    switch(a3)
    {
      case 1:
        if (a1 >= 0xFF) {
          uint64_t result = 255;
        }
        else {
          uint64_t result = a1;
        }
        break;
      case 2:
        if (a1 >= 0xFFFF) {
          uint64_t result = 0xFFFFLL;
        }
        else {
          uint64_t result = a1;
        }
        break;
      case 3:
        if (a1 >= 0xFFFFFFFF) {
          uint64_t result = 0xFFFFFFFFLL;
        }
        else {
          uint64_t result = a1;
        }
        break;
      case 4:
        uint64_t result = a1;
        break;
      case 5:
      case 6:
        if (a1 >= 0x7FFFFFFF) {
          uint64_t result = 0x7FFFFFFFLL;
        }
        else {
          uint64_t result = a1;
        }
        break;
      case 7:
        *(double *)&uint64_t result = (double)a1;
        break;
      case 8:
        *(double *)&uint64_t result = COERCE_DOUBLE(sub_10006FCC8());
        break;
      case 9:
      case 10:
        return result;
      default:
        uint64_t result = a1 == 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100007DBC(uint64_t a1, char a2)
{
  if ((a1 & 0x100000000) != 0)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    float v2 = *(float *)&a1;
    *(double *)&uint64_t result = 0.0;
    switch(a2)
    {
      case 1:
        sub_10000C0A0((uint64_t)&v8, v2);
        if (v9) {
          goto LABEL_28;
        }
        uint64_t v6 = v8;
        if (v8 >= 255) {
          uint64_t v6 = 255;
        }
        uint64_t result = v6 & ~(v6 >> 63);
        break;
      case 2:
        sub_10000C0A0((uint64_t)&v8, v2);
        if (v9) {
          goto LABEL_28;
        }
        uint64_t v5 = v8;
        if (v8 >= 0xFFFF) {
          uint64_t v5 = 0xFFFFLL;
        }
        uint64_t result = v5 & ~(v5 >> 63);
        break;
      case 3:
        sub_10000C0A0((uint64_t)&v8, v2);
        if (v9) {
          goto LABEL_28;
        }
        uint64_t v7 = v8;
        if (v8 >= 0xFFFFFFFFLL) {
          uint64_t v7 = 0xFFFFFFFFLL;
        }
        uint64_t result = v7 & ~(v7 >> 63);
        break;
      case 4:
        sub_10000C0A0((uint64_t)&v8, v2);
        if (v9) {
          goto LABEL_28;
        }
        uint64_t result = v8 & ~(v8 >> 63);
        break;
      case 5:
      case 6:
        sub_10000C0A0((uint64_t)&v8, v2);
        if (v9)
        {
LABEL_28:
          uint64_t v8 = 0;
          unint64_t v9 = 0xE000000000000000;
          sub_10006F9D8(80);
          v10._countAndFlagsBits = 0x74616F6C46;
          v10._object = (void *)0xE500000000000000;
          sub_10006F558(v10);
          v11._object = (void *)0x80000001000777B0;
          v11._countAndFlagsBits = 0xD00000000000001ELL;
          sub_10006F558(v11);
          v12._countAndFlagsBits = 7630409;
          v12._object = (void *)0xE300000000000000;
          sub_10006F558(v12);
          v13._countAndFlagsBits = 0xD00000000000002ELL;
          v13._object = (void *)0x80000001000777D0;
          sub_10006F558(v13);
          sub_10006FAA8();
          __break(1u);
          JUMPOUT(0x100008040);
        }
        int64_t v4 = v8;
        if (v8 >= 0x7FFFFFFF) {
          int64_t v4 = 0x7FFFFFFFLL;
        }
        if (v4 <= (uint64_t)0xFFFFFFFF80000000) {
          LODWORD(v4) = 0x80000000;
        }
        uint64_t result = v4;
        break;
      case 7:
        *(double *)&uint64_t result = v2;
        break;
      case 8:
        unint64_t v9 = 0xE000000000000000;
        sub_10006FA88();
        *(double *)&uint64_t result = 0.0;
        break;
      case 9:
      case 10:
        return result;
      default:
        uint64_t result = v2 != 0.0;
        break;
    }
  }
  return result;
}

uint64_t sub_10000806C(uint64_t a1, char a2, char a3)
{
  if (a2) {
    return 0;
  }
  uint64_t result = 0;
  switch(a3)
  {
    case 1:
      sub_10000BF18((uint64_t)&v9, *(double *)&a1);
      if (v10) {
        goto LABEL_28;
      }
      uint64_t v7 = v9;
      if (v9 >= 255) {
        uint64_t v7 = 255;
      }
      uint64_t result = v7 & ~(v7 >> 63);
      break;
    case 2:
      sub_10000BF18((uint64_t)&v9, *(double *)&a1);
      if (v10) {
        goto LABEL_28;
      }
      uint64_t v6 = v9;
      if (v9 >= 0xFFFF) {
        uint64_t v6 = 0xFFFFLL;
      }
      uint64_t result = v6 & ~(v6 >> 63);
      break;
    case 3:
      sub_10000BF18((uint64_t)&v9, *(double *)&a1);
      if (v10) {
        goto LABEL_28;
      }
      uint64_t v8 = v9;
      if (v9 >= 0xFFFFFFFFLL) {
        uint64_t v8 = 0xFFFFFFFFLL;
      }
      uint64_t result = v8 & ~(v8 >> 63);
      break;
    case 4:
      sub_10000BF18((uint64_t)&v9, *(double *)&a1);
      if (v10) {
        goto LABEL_28;
      }
      uint64_t result = v9 & ~(v9 >> 63);
      break;
    case 5:
    case 6:
      sub_10000BF18((uint64_t)&v9, *(double *)&a1);
      if (v10)
      {
LABEL_28:
        uint64_t v9 = 0;
        unint64_t v10 = 0xE000000000000000;
        sub_10006F9D8(80);
        v11._countAndFlagsBits = 0x656C62756F44;
        v11._object = (void *)0xE600000000000000;
        sub_10006F558(v11);
        v12._object = (void *)0x80000001000777B0;
        v12._countAndFlagsBits = 0xD00000000000001ELL;
        sub_10006F558(v12);
        v13._countAndFlagsBits = 7630409;
        v13._object = (void *)0xE300000000000000;
        sub_10006F558(v13);
        v14._countAndFlagsBits = 0xD00000000000002ELL;
        v14._object = (void *)0x80000001000777D0;
        sub_10006F558(v14);
        sub_10006FAA8();
        __break(1u);
        JUMPOUT(0x1000082F0);
      }
      int64_t v5 = v9;
      if (v9 >= 0x7FFFFFFF) {
        int64_t v5 = 0x7FFFFFFFLL;
      }
      if (v5 <= (uint64_t)0xFFFFFFFF80000000) {
        LODWORD(v5) = 0x80000000;
      }
      uint64_t result = v5;
      break;
    case 7:
      uint64_t result = a1;
      break;
    case 8:
      unint64_t v10 = 0xE000000000000000;
      sub_10006FA88();
      uint64_t result = 0;
      break;
    case 9:
    case 10:
      return result;
    default:
      uint64_t result = *(double *)&a1 != 0.0;
      break;
  }
  return result;
}

uint64_t CharacteristicKind.Value.description.getter(Swift::String a1, char a2)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t result = 0x6C6C756E2ELL;
  switch(a2)
  {
    case 1:
      uint64_t v11 = 0x2838746E69752ELL;
      goto LABEL_16;
    case 2:
      uint64_t v11 = 0x283631746E69752ELL;
      goto LABEL_16;
    case 3:
      uint64_t v11 = 0x283233746E69752ELL;
      goto LABEL_16;
    case 4:
      uint64_t v11 = 0x283436746E69752ELL;
      goto LABEL_16;
    case 5:
      uint64_t v7 = 0x28746E692ELL;
      goto LABEL_15;
    case 6:
      uint64_t v7 = 0x283233746E692ELL;
LABEL_15:
      uint64_t v11 = v7;
LABEL_16:
      v5._uint64_t countAndFlagsBits = sub_10006FCC8();
      goto LABEL_17;
    case 7:
      uint64_t v11 = 0;
      v13._uint64_t countAndFlagsBits = 0x2874616F6C662ELL;
      v13._object = (void *)0xE700000000000000;
      sub_10006F558(v13);
      sub_10006F718();
      goto LABEL_18;
    case 8:
      uint64_t v11 = 0x28676E697274732ELL;
      a1._uint64_t countAndFlagsBits = countAndFlagsBits;
      sub_10006F558(a1);
      goto LABEL_18;
    case 9:
      uint64_t v11 = 0x2838766C742ELL;
      sub_100010B40(countAndFlagsBits, (unint64_t)a1._object, 9);
      v14._uint64_t countAndFlagsBits = sub_10006EB18();
      sub_10006F558(v14);
      swift_bridgeObjectRelease();
      v15._uint64_t countAndFlagsBits = 41;
      v15._object = (void *)0xE100000000000000;
      sub_10006F558(v15);
      uint64_t v8 = countAndFlagsBits;
      unint64_t v9 = (unint64_t)object;
      char v10 = 9;
      goto LABEL_24;
    case 10:
      uint64_t v11 = 0x28617461642ELL;
      sub_100010B40(countAndFlagsBits, (unint64_t)a1._object, 10);
      v16._uint64_t countAndFlagsBits = sub_10006EB18();
      sub_10006F558(v16);
      swift_bridgeObjectRelease();
      v17._uint64_t countAndFlagsBits = 41;
      v17._object = (void *)0xE100000000000000;
      sub_10006F558(v17);
      uint64_t v8 = countAndFlagsBits;
      unint64_t v9 = (unint64_t)object;
      char v10 = 10;
LABEL_24:
      sub_100010FB0(v8, v9, v10);
      return v11;
    case 11:
      return result;
    default:
      uint64_t v11 = 0x286C6F6F622ELL;
      if (countAndFlagsBits) {
        v5._uint64_t countAndFlagsBits = 1702195828;
      }
      else {
        v5._uint64_t countAndFlagsBits = 0x65736C6166;
      }
      if (countAndFlagsBits) {
        uint64_t v6 = (void *)0xE400000000000000;
      }
      else {
        uint64_t v6 = (void *)0xE500000000000000;
      }
      v5._object = v6;
LABEL_17:
      sub_10006F558(v5);
      swift_bridgeObjectRelease();
LABEL_18:
      v12._uint64_t countAndFlagsBits = 41;
      v12._object = (void *)0xE100000000000000;
      sub_10006F558(v12);
      return v11;
  }
}

void CharacteristicKind.Value.hash(into:)(uint64_t a1, Swift::UInt64 a2, unint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      sub_10006FD88(2uLL);
      Swift::UInt8 v6 = a2;
      goto LABEL_4;
    case 2:
      sub_10006FD88(3uLL);
      sub_10006FDA8(a2);
      return;
    case 3:
      Swift::UInt v7 = 4;
      goto LABEL_10;
    case 4:
      sub_10006FD88(5uLL);
      sub_10006FDC8(a2);
      return;
    case 5:
      Swift::UInt v7 = 6;
      goto LABEL_10;
    case 6:
      Swift::UInt v7 = 7;
LABEL_10:
      sub_10006FD88(v7);
      sub_10006FDB8(a2);
      return;
    case 7:
      sub_10006FD88(8uLL);
      if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v8 = a2;
      }
      else {
        Swift::UInt64 v8 = 0;
      }
      sub_10006FDC8(v8);
      return;
    case 8:
      sub_10006FD88(9uLL);
      sub_10006F548();
      return;
    case 9:
      sub_10006FD88(0xAuLL);
      sub_100010B6C(a2, a3);
      sub_10006EB28();
      uint64_t v9 = a2;
      unint64_t v10 = a3;
      char v11 = 9;
      goto LABEL_20;
    case 10:
      sub_10006FD88(0xBuLL);
      sub_100010B6C(a2, a3);
      sub_10006EB28();
      uint64_t v9 = a2;
      unint64_t v10 = a3;
      char v11 = 10;
LABEL_20:
      sub_100010FB0(v9, v10, v11);
      break;
    case 11:
      sub_10006FD88(0);
      break;
    default:
      sub_10006FD88(1uLL);
      Swift::UInt8 v6 = a2 & 1;
LABEL_4:
      sub_10006FD98(v6);
      break;
  }
}

uint64_t static SecurityIntentAccessory.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_100008854()
{
  return 12383;
}

uint64_t sub_100008864()
{
  return 0;
}

void sub_100008870(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10000887C(uint64_t a1)
{
  unint64_t v2 = sub_100011410();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000088B8(uint64_t a1)
{
  unint64_t v2 = sub_100011410();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000088F4(char a1)
{
  uint64_t result = 1819047278;
  switch(a1)
  {
    case 1:
      uint64_t result = 1819242338;
      break;
    case 2:
      uint64_t result = 0x38746E6975;
      break;
    case 3:
      uint64_t result = 0x3631746E6975;
      break;
    case 4:
      uint64_t result = 0x3233746E6975;
      break;
    case 5:
      uint64_t result = 0x3436746E6975;
      break;
    case 6:
      uint64_t result = 7630441;
      break;
    case 7:
      uint64_t result = 0x3233746E69;
      break;
    case 8:
      uint64_t result = 0x74616F6C66;
      break;
    case 9:
      uint64_t result = 0x676E69727473;
      break;
    case 10:
      uint64_t result = 947285108;
      break;
    case 11:
      uint64_t result = 1635017060;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100008A20()
{
  return sub_1000088F4(*v0);
}

uint64_t sub_100008A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000114B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_100008A50(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_100008A5C(uint64_t a1)
{
  unint64_t v2 = sub_100011020();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008A98(uint64_t a1)
{
  unint64_t v2 = sub_100011020();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008AD4(uint64_t a1)
{
  unint64_t v2 = sub_100011074();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008B10(uint64_t a1)
{
  unint64_t v2 = sub_100011074();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008B4C(uint64_t a1)
{
  unint64_t v2 = sub_1000111C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008B88(uint64_t a1)
{
  unint64_t v2 = sub_1000111C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008BC4(uint64_t a1)
{
  unint64_t v2 = sub_100011218();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008C00(uint64_t a1)
{
  unint64_t v2 = sub_100011218();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008C3C(uint64_t a1)
{
  unint64_t v2 = sub_10001126C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008C78(uint64_t a1)
{
  unint64_t v2 = sub_10001126C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008CB4()
{
  return 0;
}

uint64_t sub_100008CC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_100008CF0(uint64_t a1)
{
  unint64_t v2 = sub_100011464();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008D2C(uint64_t a1)
{
  unint64_t v2 = sub_100011464();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008D68(uint64_t a1)
{
  unint64_t v2 = sub_100011170();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008DA4(uint64_t a1)
{
  unint64_t v2 = sub_100011170();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008DE0(uint64_t a1)
{
  unint64_t v2 = sub_10001111C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008E1C(uint64_t a1)
{
  unint64_t v2 = sub_10001111C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008E58(uint64_t a1)
{
  unint64_t v2 = sub_100011368();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008E94(uint64_t a1)
{
  unint64_t v2 = sub_100011368();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008ED0(uint64_t a1)
{
  unint64_t v2 = sub_100011314();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008F0C(uint64_t a1)
{
  unint64_t v2 = sub_100011314();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008F48(uint64_t a1)
{
  unint64_t v2 = sub_1000112C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008F84(uint64_t a1)
{
  unint64_t v2 = sub_1000112C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100008FC0(uint64_t a1)
{
  unint64_t v2 = sub_1000113BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100008FFC(uint64_t a1)
{
  unint64_t v2 = sub_1000113BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CharacteristicKind.Value.encode(to:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v89 = a4;
  unint64_t v84 = a3;
  uint64_t v85 = a2;
  uint64_t v5 = sub_100004960(&qword_100091818);
  uint64_t v82 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  __chkstk_darwin();
  v81 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004960(&qword_100091820);
  uint64_t v79 = *(void *)(v7 - 8);
  uint64_t v80 = v7;
  __chkstk_darwin();
  v78 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100004960(&qword_100091828);
  v53[1] = *(void *)(v77 - 8);
  __chkstk_darwin();
  v76 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004960(&qword_100091830);
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v75 = v10;
  __chkstk_darwin();
  v73 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100004960(&qword_100091838);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin();
  v70 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100004960(&qword_100091840);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin();
  v67 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100004960(&qword_100091848);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin();
  v64 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100004960(&qword_100091850);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin();
  v61 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100004960(&qword_100091858);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin();
  v58 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100004960(&qword_100091860);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin();
  int v18 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004960(&qword_100091868);
  uint64_t v55 = *(void *)(v19 - 8);
  __chkstk_darwin();
  int v21 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004960(&qword_100091870);
  uint64_t v54 = *(void *)(v22 - 8);
  __chkstk_darwin();
  uint64_t v24 = (char *)v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100004960(&qword_100091878);
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin();
  uint64_t v26 = (char *)v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010FDC(a1, a1[3]);
  sub_100011020();
  v87 = v26;
  sub_10006FDF8();
  switch((char)v89)
  {
    case 1:
      LOBYTE(v90) = 2;
      sub_1000113BC();
      uint64_t v31 = v87;
      uint64_t v30 = v88;
      sub_10006FBF8();
      uint64_t v32 = v57;
      sub_10006FC68();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v32);
      return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v31, v30);
    case 2:
      LOBYTE(v90) = 3;
      sub_100011368();
      unint64_t v33 = v58;
      uint64_t v35 = v87;
      uint64_t v34 = v88;
      sub_10006FBF8();
      uint64_t v36 = v60;
      sub_10006FC78();
      unsigned __int8 v37 = &v90;
      goto LABEL_11;
    case 3:
      LOBYTE(v90) = 4;
      sub_100011314();
      unint64_t v33 = v61;
      uint64_t v35 = v87;
      uint64_t v34 = v88;
      sub_10006FBF8();
      uint64_t v36 = v63;
      sub_10006FC88();
      unsigned __int8 v37 = &v92;
      goto LABEL_11;
    case 4:
      LOBYTE(v90) = 5;
      sub_1000112C0();
      unint64_t v33 = v64;
      uint64_t v35 = v87;
      uint64_t v34 = v88;
      sub_10006FBF8();
      uint64_t v36 = v66;
      sub_10006FC98();
      unsigned __int8 v37 = &v93;
      goto LABEL_11;
    case 5:
      LOBYTE(v90) = 6;
      sub_10001126C();
      unint64_t v33 = v67;
      uint64_t v35 = v87;
      uint64_t v34 = v88;
      sub_10006FBF8();
      uint64_t v36 = v69;
      sub_10006FC58();
      unsigned __int8 v37 = &v94;
      goto LABEL_11;
    case 6:
      LOBYTE(v90) = 7;
      sub_100011218();
      unint64_t v33 = v70;
      uint64_t v35 = v87;
      uint64_t v34 = v88;
      sub_10006FBF8();
      uint64_t v36 = v72;
      sub_10006FC58();
      unsigned __int8 v37 = &v95;
      goto LABEL_11;
    case 7:
      LOBYTE(v90) = 8;
      sub_1000111C4();
      unint64_t v33 = v73;
      uint64_t v35 = v87;
      uint64_t v34 = v88;
      sub_10006FBF8();
      uint64_t v36 = v75;
      sub_10006FC28();
      uint64_t v38 = v74;
      goto LABEL_12;
    case 8:
      LOBYTE(v90) = 9;
      sub_100011170();
      unint64_t v33 = v76;
      uint64_t v35 = v87;
      uint64_t v34 = v88;
      sub_10006FBF8();
      uint64_t v36 = v77;
      sub_10006FC08();
      unsigned __int8 v37 = &v85;
LABEL_11:
      uint64_t v38 = *(v37 - 32);
LABEL_12:
      (*(void (**)(char *, uint64_t))(v38 + 8))(v33, v36);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v35, v34);
      break;
    case 9:
      LOBYTE(v90) = 10;
      unint64_t v40 = v84;
      uint64_t v39 = v85;
      sub_100010B6C(v85, v84);
      sub_10001111C();
      uint64_t v41 = v78;
      uint64_t v43 = v87;
      uint64_t v42 = v88;
      sub_10006FBF8();
      uint64_t v90 = v39;
      unint64_t v91 = v40;
      sub_1000110C8();
      uint64_t v44 = v80;
      sub_10006FC48();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v41, v44);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v43, v42);
      uint64_t result = sub_100010FB0(v39, v40, 9);
      break;
    case 10:
      LOBYTE(v90) = 11;
      unint64_t v46 = v84;
      uint64_t v45 = v85;
      sub_100010B6C(v85, v84);
      sub_100011074();
      v47 = v81;
      v49 = v87;
      uint64_t v48 = v88;
      sub_10006FBF8();
      uint64_t v90 = v45;
      unint64_t v91 = v46;
      sub_1000110C8();
      uint64_t v50 = v83;
      sub_10006FC48();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v50);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v49, v48);
      uint64_t result = sub_100010FB0(v45, v46, 10);
      break;
    case 11:
      LOBYTE(v90) = 0;
      sub_100011464();
      v52 = v87;
      uint64_t v51 = v88;
      sub_10006FBF8();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v22);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v52, v51);
      break;
    default:
      LOBYTE(v90) = 1;
      sub_100011410();
      uint64_t v28 = v87;
      uint64_t v27 = v88;
      sub_10006FBF8();
      sub_10006FC18();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v19);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v28, v27);
      break;
  }
  return result;
}

Swift::Int CharacteristicKind.Value.hashValue.getter(Swift::UInt64 a1, unint64_t a2, char a3)
{
  sub_10006FD78();
  CharacteristicKind.Value.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_10006FDD8();
}

uint64_t CharacteristicKind.Value.init(from:)(void *a1)
{
  uint64_t result = sub_10001190C(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_100009E44()
{
  return CharacteristicKind.Value.description.getter(*(Swift::String *)v0, *(unsigned char *)(v0 + 16));
}

uint64_t sub_100009E50(uint64_t a1, uint64_t a2)
{
  return _s20HomeWidgetLockScreen18CharacteristicKindO5ValueO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

Swift::Int sub_100009E6C()
{
  Swift::UInt64 v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_10006FD78();
  CharacteristicKind.Value.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_10006FDD8();
}

void sub_100009EC8(uint64_t a1)
{
  CharacteristicKind.Value.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_100009ED4()
{
  Swift::UInt64 v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_10006FD78();
  CharacteristicKind.Value.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_10006FDD8();
}

uint64_t sub_100009F2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_100010B40(v2, v3, v4);
}

uint64_t sub_100009F40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10001190C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100009F70(void *a1)
{
  return CharacteristicKind.Value.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_100009F90()
{
  uint64_t v1 = 0x566D756D6978616DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x756C615670657473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x566D756D696E696DLL;
  }
}

uint64_t sub_100009FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100012BC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_10000A01C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10000A028(uint64_t a1)
{
  unint64_t v2 = sub_100012B74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10000A064(uint64_t a1)
{
  unint64_t v2 = sub_100012B74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CharacteristicKind.Constraints.MinMaxStepValues.encode(to:)(void *a1)
{
  uint64_t v3 = sub_100004960(&qword_1000918F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100010FDC(a1, a1[3]);
  sub_100012B74();
  sub_10006FDF8();
  v8[15] = 0;
  sub_10006FC38();
  if (!v1)
  {
    v8[14] = 1;
    sub_10006FC38();
    v8[13] = 2;
    sub_10006FC38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

float CharacteristicKind.Constraints.MinMaxStepValues.init(from:)(void *a1)
{
  return sub_100012D58(a1);
}

void sub_10000A268(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_100012D58(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
    *(_DWORD *)(a2 + 8) = v6;
  }
}

uint64_t sub_10000A298(void *a1)
{
  return CharacteristicKind.Constraints.MinMaxStepValues.encode(to:)(a1);
}

unint64_t sub_10000A2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  float v4 = v3;
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10000E85C(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
  }
  else
  {
    unint64_t result = sub_10000C9B8(a3);
    if ((v10 & 1) == 0) {
      return result;
    }
    unint64_t v11 = result;
    int v12 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v3;
    uint64_t v15 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!v12)
    {
      sub_10000D1E8();
      uint64_t v13 = v15;
    }
    sub_10000E6C4(v11, v13);
    uint64_t *v4 = v13;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_10000A3B0(unint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  unint64_t v3 = a2[1];
  uint64_t v5 = HIBYTE(v3) & 0xF;
  uint64_t v6 = *a2 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v7 = v6;
  }
  if (!v7) {
    return result;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = (uint64_t)sub_10000E5DC(v4, v3, 10);
    char v30 = v29;
    unint64_t result = swift_bridgeObjectRelease();
    if (v30) {
      return result;
    }
    goto LABEL_36;
  }
  if ((v3 & 0x2000000000000000) != 0)
  {
    v31[0] = v4;
    v31[1] = v3 & 0xFFFFFFFFFFFFFFLL;
    if (v4 == 43)
    {
      if (!v5) {
        goto LABEL_65;
      }
      if (v5 == 1) {
        goto LABEL_63;
      }
      if ((BYTE1(v4) - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v11 = (BYTE1(v4) - 48);
      if (v5 != 2)
      {
        if ((BYTE2(v4) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v11 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
        uint64_t v12 = v5 - 3;
        if (v5 != 3)
        {
          uint64_t v13 = (unsigned __int8 *)v31 + 3;
          while (1)
          {
            unsigned int v14 = *v13 - 48;
            if (v14 > 9) {
              goto LABEL_32;
            }
            uint64_t v15 = 10 * v11;
            if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
              goto LABEL_32;
            }
            uint64_t v11 = v15 + v14;
            if (__OFADD__(v15, v14)) {
              goto LABEL_32;
            }
            LOBYTE(v5) = 0;
            ++v13;
            if (!--v12) {
              goto LABEL_35;
            }
          }
        }
      }
    }
    else
    {
      if (v4 == 45)
      {
        if (v5)
        {
          if (v5 != 1)
          {
            if ((BYTE1(v4) - 48) > 9u) {
              goto LABEL_32;
            }
            if (v5 == 2)
            {
              LOBYTE(v5) = 0;
              uint64_t v11 = -(uint64_t)(BYTE1(v4) - 48);
              goto LABEL_35;
            }
            if ((BYTE2(v4) - 48) > 9u) {
              goto LABEL_32;
            }
            uint64_t v11 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
            uint64_t v25 = v5 - 3;
            if (v5 != 3)
            {
              uint64_t v26 = (unsigned __int8 *)v31 + 3;
              while (1)
              {
                unsigned int v27 = *v26 - 48;
                if (v27 > 9) {
                  goto LABEL_32;
                }
                uint64_t v28 = 10 * v11;
                if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
                  goto LABEL_32;
                }
                uint64_t v11 = v28 - v27;
                if (__OFSUB__(v28, v27)) {
                  goto LABEL_32;
                }
                LOBYTE(v5) = 0;
                ++v26;
                if (!--v25) {
                  goto LABEL_35;
                }
              }
            }
            goto LABEL_34;
          }
LABEL_63:
          uint64_t v11 = 0;
LABEL_35:
          if (v5) {
            return result;
          }
          goto LABEL_36;
        }
        __break(1u);
LABEL_65:
        __break(1u);
        return result;
      }
      if (!v5 || (v4 - 48) > 9u)
      {
LABEL_32:
        uint64_t v11 = 0;
        LOBYTE(v5) = 1;
        goto LABEL_35;
      }
      uint64_t v11 = (v4 - 48);
      if (v5 != 1)
      {
        if ((BYTE1(v4) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v11 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
        uint64_t v21 = v5 - 2;
        if (v5 != 2)
        {
          uint64_t v22 = (unsigned __int8 *)v31 + 2;
          while (1)
          {
            unsigned int v23 = *v22 - 48;
            if (v23 > 9) {
              goto LABEL_32;
            }
            uint64_t v24 = 10 * v11;
            if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
              goto LABEL_32;
            }
            uint64_t v11 = v24 + v23;
            if (__OFADD__(v24, v23)) {
              goto LABEL_32;
            }
            LOBYTE(v5) = 0;
            ++v22;
            if (!--v21) {
              goto LABEL_35;
            }
          }
        }
      }
    }
LABEL_34:
    LOBYTE(v5) = 0;
    goto LABEL_35;
  }
  if ((v4 & 0x1000000000000000) != 0) {
    uint64_t v9 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    uint64_t v9 = (unsigned __int8 *)sub_10006FA38();
  }
  unint64_t result = (unint64_t)sub_10000E9E4(v9, v6, 10);
  if (v10) {
    return result;
  }
  uint64_t v11 = result;
LABEL_36:
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_10000C940(v4, v3);
    if (v17)
    {
      int v18 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v16);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v20 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  return sub_10000A2B8(v19, v20, v11);
}

BOOL sub_10000A710(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10000A724()
{
  Swift::UInt v1 = *v0;
  sub_10006FD78();
  sub_10006FD88(v1);
  return sub_10006FDD8();
}

void sub_10000A76C()
{
  sub_10006FD88(*v0);
}

Swift::Int sub_10000A798()
{
  Swift::UInt v1 = *v0;
  sub_10006FD78();
  sub_10006FD88(v1);
  return sub_10006FDD8();
}

uint64_t sub_10000A7DC()
{
  unint64_t v1 = 0x74694264696C6176;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C615664696C6176;
  }
}

uint64_t sub_10000A848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000130D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10000A870(uint64_t a1)
{
  unint64_t v2 = sub_100012F30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10000A8AC(uint64_t a1)
{
  unint64_t v2 = sub_100012F30();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10000A8E8(uint64_t a1)
{
  unint64_t v2 = sub_100012F84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10000A924(uint64_t a1)
{
  unint64_t v2 = sub_100012F84();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10000A960()
{
}

uint64_t sub_10000A988(uint64_t a1)
{
  unint64_t v2 = sub_10001302C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10000A9C4(uint64_t a1)
{
  unint64_t v2 = sub_10001302C();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_10000AA00()
{
  return sub_10006FDD8();
}

Swift::Int sub_10000AA44()
{
  return sub_10006FDD8();
}

uint64_t sub_10000AA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_10006FCE8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10000AB04(uint64_t a1)
{
  unint64_t v2 = sub_100013080();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10000AB40(uint64_t a1)
{
  unint64_t v2 = sub_100013080();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CharacteristicKind.Constraints.encode(to:)(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v29 = a3;
  unint64_t v30 = a2;
  uint64_t v4 = sub_100004960(&qword_100091900);
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004960(&qword_100091908);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004960(&qword_100091910);
  uint64_t v24 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004960(&qword_100091918);
  uint64_t v31 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010FDC(a1, a1[3]);
  sub_100012F30();
  uint64_t v16 = v29;
  sub_10006FDF8();
  if (BYTE4(v16))
  {
    if (BYTE4(v16) != 1)
    {
      unsigned int v20 = v30;
      unint64_t v21 = HIDWORD(v30);
      LOBYTE(v32) = 2;
      sub_100012F84();
      sub_10006FBF8();
      unint64_t v32 = __PAIR64__(v21, v20);
      int v33 = v16;
      sub_100012FD8();
      uint64_t v22 = v28;
      sub_10006FC48();
      char v17 = *(void (**)(char *, uint64_t))(v27 + 8);
      int v18 = v6;
      uint64_t v19 = v22;
      goto LABEL_7;
    }
    LOBYTE(v32) = 1;
    sub_10001302C();
    sub_10006FBF8();
    unint64_t v32 = v30;
    sub_100004960(&qword_100091940);
    sub_100016588(&qword_100091948);
    uint64_t v10 = v26;
    sub_10006FC48();
    char v17 = *(void (**)(char *, uint64_t))(v25 + 8);
    int v18 = v9;
  }
  else
  {
    LOBYTE(v32) = 0;
    sub_100013080();
    sub_10006FBF8();
    unint64_t v32 = v30;
    sub_100004960(&qword_100091940);
    sub_100016588(&qword_100091948);
    sub_10006FC48();
    char v17 = *(void (**)(char *, uint64_t))(v24 + 8);
    int v18 = v12;
  }
  uint64_t v19 = v10;
LABEL_7:
  v17(v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v13);
}

uint64_t CharacteristicKind.Constraints.init(from:)(void *a1)
{
  uint64_t result = sub_10001324C(a1);
  if (v1) {
    return v3 & 0xFFFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_10000B020@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10001324C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(_DWORD *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 12) = BYTE4(v5);
  }
  return result;
}

uint64_t sub_10000B058(void *a1)
{
  return CharacteristicKind.Constraints.encode(to:)(a1, *(void *)v1, *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32));
}

void *CharacteristicKind.Permissions.securedRead.unsafeMutableAddressor()
{
  return &static CharacteristicKind.Permissions.securedRead;
}

void *CharacteristicKind.Permissions.securedWrite.unsafeMutableAddressor()
{
  return &static CharacteristicKind.Permissions.securedWrite;
}

uint64_t static CharacteristicKind.Permissions.securedWrite.getter()
{
  return 2;
}

void sub_10000B0A4()
{
  static CharacteristicKind.Permissions.allPermissions = (uint64_t)&off_10008B598;
}

uint64_t *CharacteristicKind.Permissions.allPermissions.unsafeMutableAddressor()
{
  if (qword_100091668 != -1) {
    swift_once();
  }
  return &static CharacteristicKind.Permissions.allPermissions;
}

uint64_t static CharacteristicKind.Permissions.allPermissions.getter()
{
  return sub_10000B304(&qword_100091668);
}

uint64_t sub_10000B130()
{
  return sub_10006F638();
}

uint64_t sub_10000B190()
{
  return sub_10006F618();
}

void sub_10000B1E0(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10000B1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t sub_10000B200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10006B654();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void *CharacteristicKind.Properties.read.unsafeMutableAddressor()
{
  return &static CharacteristicKind.Properties.read;
}

void *CharacteristicKind.Properties.write.unsafeMutableAddressor()
{
  return &static CharacteristicKind.Properties.write;
}

void *CharacteristicKind.Properties.cnotify.unsafeMutableAddressor()
{
  return &static CharacteristicKind.Properties.cnotify;
}

uint64_t static CharacteristicKind.Properties.cnotify.getter()
{
  return 4;
}

void *CharacteristicKind.Properties.uncnotify.unsafeMutableAddressor()
{
  return &static CharacteristicKind.Properties.uncnotify;
}

uint64_t static CharacteristicKind.Properties.uncnotify.getter()
{
  return 8;
}

void sub_10000B280()
{
  static CharacteristicKind.Properties.allProperties = (uint64_t)&off_10008B5C8;
}

uint64_t *CharacteristicKind.Properties.allProperties.unsafeMutableAddressor()
{
  if (qword_100091670 != -1) {
    swift_once();
  }
  return &static CharacteristicKind.Properties.allProperties;
}

uint64_t static CharacteristicKind.Properties.allProperties.getter()
{
  return sub_10000B304(&qword_100091670);
}

uint64_t sub_10000B304(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void *sub_10000B350@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

Swift::Int sub_10000B35C()
{
  Swift::UInt v1 = *v0;
  sub_10006FD78();
  sub_10006FD88(v1);
  return sub_10006FDD8();
}

void sub_10000B3A4()
{
  sub_10006FD88(*v0);
}

Swift::Int sub_10000B3D0()
{
  Swift::UInt v1 = *v0;
  sub_10006FD78();
  sub_10006FD88(v1);
  return sub_10006FDD8();
}

uint64_t sub_10000B414()
{
  return sub_10006F638();
}

uint64_t sub_10000B474()
{
  return sub_10006F618();
}

void *sub_10000B4C4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_10000B4D8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_10000B4EC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10000B500(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_10000B530@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10000B55C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_10000B580(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10000B594(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_10000B5A8(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_10000B5BC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10000B5D0(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10000B5E4(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_10000B5F8(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_10000B60C()
{
  return *v0 == 0;
}

void *sub_10000B61C(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t CharacteristicKind.Format.rawValue.getter(char a1)
{
  uint64_t result = 1819242338;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x38746E6975;
      break;
    case 2:
      uint64_t result = 0x3631746E6975;
      break;
    case 3:
      uint64_t result = 0x3233746E6975;
      break;
    case 4:
      uint64_t result = 0x3436746E6975;
      break;
    case 5:
      uint64_t result = 7630441;
      break;
    case 6:
      uint64_t result = 0x3233746E69;
      break;
    case 7:
      uint64_t result = 0x74616F6C66;
      break;
    case 8:
      uint64_t result = 0x676E69727473;
      break;
    case 9:
      uint64_t result = 947285108;
      break;
    case 10:
      uint64_t result = 1635017060;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO6FormatO2idSSvg_0(char a1)
{
  uint64_t result = 1819242338;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x38746E6975;
      break;
    case 2:
      uint64_t result = 0x3631746E6975;
      break;
    case 3:
      uint64_t result = 0x3233746E6975;
      break;
    case 4:
      uint64_t result = 0x3436746E6975;
      break;
    case 5:
      uint64_t result = 7630441;
      break;
    case 6:
      uint64_t result = 0x3233746E69;
      break;
    case 7:
      uint64_t result = 0x74616F6C66;
      break;
    case 8:
      uint64_t result = 0x676E69727473;
      break;
    case 9:
      uint64_t result = 947285108;
      break;
    case 10:
      uint64_t result = 1635017060;
      break;
    default:
      return result;
  }
  return result;
}

_UNKNOWN **static CharacteristicKind.Format.allCases.getter()
{
  return &off_10008B608;
}

uint64_t sub_10000B868@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s20HomeWidgetLockScreen18CharacteristicKindO6FormatO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10000B898@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CharacteristicKind.Format.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000B8C4()
{
  return CharacteristicKind.Format.id.getter(*v0);
}

void sub_10000B8CC(void *a1@<X8>)
{
  *a1 = &off_10008B608;
}

uint64_t sub_10000B8DC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = CharacteristicKind.Format.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == CharacteristicKind.Format.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10006FCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10000B968()
{
  char v1 = *v0;
  sub_10006FD78();
  CharacteristicKind.Format.rawValue.getter(v1);
  sub_10006F548();
  swift_bridgeObjectRelease();
  return sub_10006FDD8();
}

uint64_t sub_10000B9CC()
{
  CharacteristicKind.Format.rawValue.getter(*v0);
  sub_10006F548();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10000BA20()
{
  char v1 = *v0;
  sub_10006FD78();
  CharacteristicKind.Format.rawValue.getter(v1);
  sub_10006F548();
  swift_bridgeObjectRelease();
  return sub_10006FDD8();
}

uint64_t sub_10000BA80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CharacteristicKind.Format.id.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000BAAC()
{
  return sub_10006F628();
}

uint64_t sub_10000BB0C()
{
  return sub_10006F608();
}

_UNKNOWN **static CharacteristicKind.Unit.allCases.getter()
{
  return &off_10008B638;
}

uint64_t CharacteristicKind.Unit.rawValue.getter(char a1)
{
  uint64_t result = 0x737569736C6563;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x61746E6563726570;
      break;
    case 2:
      uint64_t result = 0x6572676564637261;
      break;
    case 3:
      uint64_t result = 7894380;
      break;
    case 4:
      uint64_t result = 0x73646E6F636573;
      break;
    case 5:
      uint64_t result = 0x7373656C74696E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10000BC34(unsigned __int8 *a1, char *a2)
{
  return sub_1000058C8(*a1, *a2);
}

Swift::Int sub_10000BC40()
{
  return sub_100005BBC();
}

uint64_t sub_10000BC48()
{
  sub_10006F548();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10000BD44()
{
  return sub_100005D84();
}

uint64_t sub_10000BD4C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s20HomeWidgetLockScreen18CharacteristicKindO4UnitO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10000BD7C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x737569736C6563;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x61746E6563726570;
      unint64_t v2 = 0xEA00000000006567;
      goto LABEL_3;
    case 2:
      *a1 = 0x6572676564637261;
      a1[1] = 0xEA00000000007365;
      break;
    case 3:
      *a1 = 7894380;
      a1[1] = 0xE300000000000000;
      break;
    case 4:
      *a1 = 0x73646E6F636573;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 0x7373656C74696E75;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_10000BE58(void *a1@<X8>)
{
  *a1 = &off_10008B638;
}

uint64_t sub_10000BE68()
{
  return sub_10006F628();
}

uint64_t sub_10000BEC8()
{
  return sub_10006F608();
}

BOOL sub_10000BF18(uint64_t a1, double a2)
{
  uint64_t v4 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v5 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v6 = v4 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    uint64_t v12 = 0;
    BOOL result = 1;
    goto LABEL_25;
  }
  if (v4 == 2047) {
    goto LABEL_28;
  }
  uint64_t v7 = sub_10006F728();
  if (v7 > 63) {
    goto LABEL_28;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_10006F708();
  BOOL result = v8 >= v9;
  uint64_t v11 = v9 + __clz(__rbit64(v5));
  uint64_t v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
LABEL_27:
    if (a2 < 0.0)
    {
LABEL_36:
      LOBYTE(v6) = 0;
      uint64_t v12 = 0x8000000000000000;
      goto LABEL_25;
    }
LABEL_28:
    uint64_t v12 = 0;
    BOOL result = 0;
    LOBYTE(v6) = 1;
    goto LABEL_25;
  }
  if (v11 > 63)
  {
    if (v12 < -64 || v12 > 64) {
      goto LABEL_11;
    }
  }
  else if (v12 < -64 || v12 > 64)
  {
    goto LABEL_11;
  }
  if (v12 < 0) {
    goto LABEL_32;
  }
  if ((unint64_t)v12 < 0x40)
  {
    unint64_t v14 = v5 << v12;
    if (v8 != 63) {
      goto LABEL_17;
    }
LABEL_34:
    if (a2 < 0.0 && !v14) {
      goto LABEL_36;
    }
    goto LABEL_28;
  }
LABEL_11:
  if (v8 == 63) {
    goto LABEL_27;
  }
  uint64_t v13 = 0;
  unint64_t v14 = 0;
  if (v8 < 0) {
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v13 = 1 << v8;
LABEL_20:
  while (1)
  {
    uint64_t v12 = v14 | v13;
    if (a2 >= 0.0) {
      break;
    }
    if ((v12 & 0x8000000000000000) == 0)
    {
      LOBYTE(v6) = 0;
      uint64_t v12 = -v12;
      goto LABEL_25;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0) {
      goto LABEL_11;
    }
    unint64_t v14 = v5 >> -(char)v12;
    if (v8 == 63) {
      goto LABEL_34;
    }
LABEL_17:
    if ((v8 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
    uint64_t v13 = 0;
  }
  if (v12 < 0) {
    goto LABEL_31;
  }
  LOBYTE(v6) = 0;
LABEL_25:
  *(void *)a1 = v12;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

BOOL sub_10000C0A0(uint64_t a1, float a2)
{
  int v4 = (LODWORD(a2) >> 23);
  unint64_t v5 = LODWORD(a2) & 0x7FFFFF;
  char v6 = v4 | LOBYTE(a2);
  if (!(v4 | v5))
  {
    unint64_t v14 = 0;
    BOOL result = 1;
    goto LABEL_26;
  }
  if (v4 == 255 || (uint64_t v7 = sub_10006F748(), v7 > 63))
  {
LABEL_38:
    unint64_t v14 = 0;
    BOOL result = 0;
    char v6 = 1;
    goto LABEL_26;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_10006F738();
  BOOL result = v8 >= v9;
  uint64_t v11 = v9 + __clz(__rbit32(v5));
  uint64_t v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 > 63)
  {
    if ((unint64_t)(v12 - 33) < 0xFFFFFFFFFFFFFFBFLL) {
      goto LABEL_12;
    }
    if (v12 < 0)
    {
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFE0) {
        LODWORD(v12) = 0;
      }
      else {
        LODWORD(v12) = v5 >> (v11 - v8);
      }
      goto LABEL_16;
    }
    if ((unint64_t)v12 >= 0x20) {
LABEL_12:
    }
      LODWORD(v12) = 0;
    else {
      LODWORD(v12) = v5 << v12;
    }
LABEL_16:
    uint64_t v12 = v12;
LABEL_17:
    if (v8 != 63)
    {
      if (v8 < 0)
      {
        uint64_t v13 = 0;
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_31:
    if (a2 >= 0.0 || v12) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  if (v12 >= -64 && v12 <= 64)
  {
    if (v12 < 0)
    {
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0) {
        goto LABEL_8;
      }
      uint64_t v12 = v5 >> (v11 - v8);
    }
    else
    {
      if ((unint64_t)v12 >= 0x40) {
        goto LABEL_8;
      }
      uint64_t v12 = v5 << v12;
    }
    goto LABEL_17;
  }
LABEL_8:
  if (v8 == 63) {
    goto LABEL_37;
  }
  uint64_t v13 = 0;
  uint64_t v12 = 0;
  if ((v8 & 0x8000000000000000) == 0) {
LABEL_20:
  }
    uint64_t v13 = 1 << v8;
LABEL_21:
  unint64_t v14 = v12 | v13;
  if (a2 >= 0.0)
  {
    if ((v14 & 0x8000000000000000) == 0)
    {
      char v6 = 0;
      goto LABEL_26;
    }
    goto LABEL_36;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0) {
      goto LABEL_38;
    }
LABEL_33:
    char v6 = 0;
    unint64_t v14 = 0x8000000000000000;
    goto LABEL_26;
  }
  char v6 = 0;
  unint64_t v14 = -(uint64_t)v14;
LABEL_26:
  *(void *)a1 = v14;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

char *sub_10000C250(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004960(&qword_100091C78);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[72 * v8 + 32]) {
          memmove(v12, a4 + 32, 72 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100010650(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10000C37C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004960(&qword_100091CC0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[56 * v8 + 32]) {
          memmove(v12, a4 + 32, 56 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100010D50(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_10000C4A4(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004960(&qword_100091CD8);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_10000F7D0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10000C5B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004960(&qword_100091CE0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 32]) {
          memmove(v13, a4 + 32, 8 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10000F7D0(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_10000C6C4(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004960(&qword_100091CC8);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_10000F7D0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10000C7D4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100004960(&qword_100091CB0);
  int v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10000C83C(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_10006F5B8();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_10006F588();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_10000C8B8(uint64_t a1)
{
  sub_10006FD78();
  CharacteristicKind.rawValue.getter();
  sub_10006F548();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_10006FDD8();

  return sub_10000CAF0(a1, v2);
}

unint64_t sub_10000C940(uint64_t a1, uint64_t a2)
{
  sub_10006FD78();
  sub_10006F548();
  Swift::Int v4 = sub_10006FDD8();

  return sub_10000CC5C(a1, a2, v4);
}

unint64_t sub_10000C9B8(uint64_t a1)
{
  uint64_t v2 = sub_10006FD68();

  return sub_10000CD40(a1, v2);
}

unint64_t sub_10000C9FC(unsigned __int8 a1)
{
  sub_10006FD78();
  sub_10006FD88(a1);
  Swift::Int v2 = sub_10006FDD8();

  return sub_10000CDDC(a1, v2);
}

unint64_t sub_10000CA68(uint64_t a1)
{
  sub_10006FD78();
  ServiceKind.rawValue.getter();
  sub_10006F548();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_10006FDD8();

  return sub_10000CE7C(a1, v2);
}

unint64_t sub_10000CAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    CharacteristicKind.rawValue.getter();
    uint64_t v7 = v6;
    CharacteristicKind.rawValue.getter();
    if (v7 == v8)
    {
LABEL_10:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    uint64_t v9 = v8;
    char v10 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = ~v4;
      unint64_t v5 = (v5 + 1) & v11;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          CharacteristicKind.rawValue.getter();
          if (v12 == v9) {
            break;
          }
          char v13 = sub_10006FCE8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v13 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v11;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_10;
      }
    }
  }
  return v5;
}

unint64_t sub_10000CC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_10006FCE8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_10006FCE8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10000CD40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10000CDDC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10000CE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    unint64_t v6 = ServiceKind.rawValue.getter();
    uint64_t v8 = v7;
    if (v6 == ServiceKind.rawValue.getter() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          unint64_t v13 = ServiceKind.rawValue.getter();
          uint64_t v15 = v14;
          if (v13 == ServiceKind.rawValue.getter() && v15 == v16) {
            break;
          }
          char v18 = sub_10006FCE8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

void *sub_10000CFF4()
{
  char v1 = v0;
  sub_100004960(&qword_100091C70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10006FAD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = *(void *)(v2 + 56) + (v15 << 6);
    char v17 = *(unsigned char *)v16;
    uint64_t v19 = *(void *)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
    __int16 v20 = *(_WORD *)(v16 + 24);
    uint64_t v21 = *(void *)(v16 + 32);
    uint64_t v22 = *(unsigned __int8 *)(v16 + 44);
    uint64_t v23 = *(unsigned int *)(v16 + 40);
    uint64_t v24 = v23 | (v22 << 32);
    long long v25 = *(_OWORD *)(v16 + 48);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    unint64_t v26 = *(void *)(v4 + 56) + (v15 << 6);
    *(unsigned char *)unint64_t v26 = v17;
    *(void *)(v26 + 8) = v19;
    *(void *)(v26 + 16) = v18;
    *(_WORD *)(v26 + 24) = v20;
    *(void *)(v26 + 32) = v21;
    *(unsigned char *)(v26 + 44) = v22;
    *(_DWORD *)(v26 + 40) = v23;
    *(_OWORD *)(v26 + 48) = v25;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)sub_100010B18(v21, v24);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10000D1E8()
{
  char v1 = v0;
  sub_100004960(&qword_100091CA8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10006FAD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *uint64_t v22 = v21;
    v22[1] = v20;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10000D398()
{
  return sub_10000D3B0(&qword_100091CB8);
}

void *sub_10000D3A4()
{
  return sub_10000D3B0(&qword_100091CD0);
}

void *sub_10000D3B0(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100004960(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10006FAD8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = v21 + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10000D538(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004960(&qword_100091C70);
  char v38 = a2;
  uint64_t v6 = sub_10006FAE8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v36[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v36[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      unint64_t v29 = *(void *)(v5 + 56) + (v20 << 6);
      char v30 = *(unsigned char *)v29;
      uint64_t v31 = *(void *)(v29 + 16);
      uint64_t v42 = *(void *)(v29 + 8);
      char v40 = *(unsigned char *)(v29 + 25);
      char v41 = *(unsigned char *)(v29 + 24);
      uint64_t v32 = *(void *)(v29 + 32);
      unint64_t v33 = *(unsigned int *)(v29 + 40) | ((unint64_t)*(unsigned __int8 *)(v29 + 44) << 32);
      long long v39 = *(_OWORD *)(v29 + 48);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_100010B18(v32, v33);
      }
      sub_10006FD78();
      CharacteristicKind.rawValue.getter();
      sub_10006F548();
      swift_bridgeObjectRelease();
      uint64_t result = sub_10006FDD8();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
      unint64_t v18 = *(void *)(v7 + 56) + (v17 << 6);
      *(unsigned char *)unint64_t v18 = v30;
      *(void *)(v18 + 8) = v42;
      *(void *)(v18 + 16) = v31;
      *(unsigned char *)(v18 + 24) = v41;
      *(unsigned char *)(v18 + 25) = v40;
      *(void *)(v18 + 32) = v32;
      *(unsigned char *)(v18 + 44) = BYTE4(v33);
      *(_DWORD *)(v18 + 40) = v33;
      *(_OWORD *)(v18 + 48) = v39;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10000D8BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004960(&qword_100091CA8);
  uint64_t result = sub_10006FAE8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *uint64_t v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      char v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_10006FD68();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      void *v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10000DB74(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004960(&qword_100091CB8);
  uint64_t result = sub_10006FAE8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_10006FD78();
      sub_10006FD88(v20);
      uint64_t result = sub_10006FDD8();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10000DE3C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100004960(&qword_100091CD0);
  uint64_t v6 = sub_10006FAE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v32 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    int64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v33;
          if ((v32 & 1) == 0) {
            goto LABEL_38;
          }
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_40;
            }
            if (v14 >= v11) {
              goto LABEL_31;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_10006FD78();
    ServiceKind.rawValue.getter();
    sub_10006F548();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10006FDD8();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v23;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  int64_t v19 = (void *)(v5 + 64);
  if ((v32 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10000E138@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100010B6C(a2, a3);
      unint64_t v10 = (char *)sub_10006EA48();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_10006EA68();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_10006EA58();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10000E39CLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_100010CF8(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      unint64_t v17 = (char *)sub_10006EA48();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_10006EA68();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_10006EA58();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_10000E3AC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_100010B6C(a1, a2);
      char v5 = sub_10000F8BC((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_100010CF8(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_10000F8BC(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_100010CF8(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_10000E138((uint64_t)__s1, a3, a4, &v14);
      sub_100010CF8(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

unsigned __int8 *sub_10000E5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10006F5C8();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_10000EC60();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_10006FA38();
  }
LABEL_7:
  uint64_t v11 = sub_10000E9E4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_10000E6C4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_10006F8C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_10006FD68();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (_OWORD *)(v15 + 16 * v3);
            unint64_t v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              _OWORD *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_10000E85C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10000C9B8(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10000D1E8();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    void *v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_10000D8BC(result, a4 & 1);
  uint64_t result = sub_10000C9B8(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_10006FD48();
  __break(1u);
  return result;
}

unint64_t sub_10000E9A0(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unsigned __int8 *sub_10000E9E4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10000EC60()
{
  unint64_t v0 = sub_10006F5D8();
  uint64_t v4 = sub_10000ECE0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10000ECE0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10000EE38(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10000C7D4(v9, 0),
          unint64_t v12 = sub_10000EF38((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_10006F538();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_10006F538();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_10006FA38();
LABEL_4:

  return sub_10006F538();
}

uint64_t sub_10000EE38(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_10000C83C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_10000C83C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_10000EF38(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_10000C83C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_10006F5A8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_10006FA38();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_10000C83C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_10006F578();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO8rawValueACSgSS_tcfC_0()
{
  uint64_t v0 = sub_10006FD18();
  swift_bridgeObjectRelease();
  uint64_t v1 = 0;
  uint64_t result = 66;
  switch(v0)
  {
    case 0:
      goto LABEL_70;
    case 1:
      uint64_t v1 = 1;
      goto LABEL_70;
    case 2:
      uint64_t v1 = 2;
      goto LABEL_70;
    case 3:
      uint64_t v1 = 3;
      goto LABEL_70;
    case 4:
      uint64_t v1 = 4;
      goto LABEL_70;
    case 5:
      uint64_t v1 = 5;
      goto LABEL_70;
    case 6:
      uint64_t v1 = 6;
      goto LABEL_70;
    case 7:
      uint64_t v1 = 7;
      goto LABEL_70;
    case 8:
      uint64_t v1 = 8;
      goto LABEL_70;
    case 9:
      uint64_t v1 = 9;
      goto LABEL_70;
    case 10:
      uint64_t v1 = 10;
      goto LABEL_70;
    case 11:
      uint64_t v1 = 11;
      goto LABEL_70;
    case 12:
      uint64_t v1 = 12;
      goto LABEL_70;
    case 13:
      uint64_t v1 = 13;
      goto LABEL_70;
    case 14:
      uint64_t v1 = 14;
      goto LABEL_70;
    case 15:
      uint64_t v1 = 15;
      goto LABEL_70;
    case 16:
      uint64_t v1 = 16;
      goto LABEL_70;
    case 17:
      uint64_t v1 = 17;
      goto LABEL_70;
    case 18:
      uint64_t v1 = 18;
      goto LABEL_70;
    case 19:
      uint64_t v1 = 19;
      goto LABEL_70;
    case 20:
      uint64_t v1 = 20;
      goto LABEL_70;
    case 21:
      uint64_t v1 = 21;
      goto LABEL_70;
    case 22:
      uint64_t v1 = 22;
      goto LABEL_70;
    case 23:
      uint64_t v1 = 23;
      goto LABEL_70;
    case 24:
      uint64_t v1 = 24;
      goto LABEL_70;
    case 25:
      uint64_t v1 = 25;
      goto LABEL_70;
    case 26:
      uint64_t v1 = 26;
      goto LABEL_70;
    case 27:
      uint64_t v1 = 27;
      goto LABEL_70;
    case 28:
      uint64_t v1 = 28;
      goto LABEL_70;
    case 29:
      uint64_t v1 = 29;
      goto LABEL_70;
    case 30:
      uint64_t v1 = 30;
      goto LABEL_70;
    case 31:
      uint64_t v1 = 31;
      goto LABEL_70;
    case 32:
      uint64_t v1 = 32;
      goto LABEL_70;
    case 33:
      uint64_t v1 = 33;
      goto LABEL_70;
    case 34:
      uint64_t v1 = 34;
      goto LABEL_70;
    case 35:
      uint64_t v1 = 35;
      goto LABEL_70;
    case 36:
      uint64_t v1 = 36;
      goto LABEL_70;
    case 37:
      uint64_t v1 = 37;
      goto LABEL_70;
    case 38:
      uint64_t v1 = 38;
      goto LABEL_70;
    case 39:
      uint64_t v1 = 39;
      goto LABEL_70;
    case 40:
      uint64_t v1 = 40;
      goto LABEL_70;
    case 41:
      uint64_t v1 = 41;
      goto LABEL_70;
    case 42:
      uint64_t v1 = 42;
      goto LABEL_70;
    case 43:
      uint64_t v1 = 43;
      goto LABEL_70;
    case 44:
      uint64_t v1 = 44;
      goto LABEL_70;
    case 45:
      uint64_t v1 = 45;
      goto LABEL_70;
    case 46:
      uint64_t v1 = 46;
      goto LABEL_70;
    case 47:
      uint64_t v1 = 47;
      goto LABEL_70;
    case 48:
      uint64_t v1 = 48;
      goto LABEL_70;
    case 49:
      uint64_t v1 = 49;
      goto LABEL_70;
    case 50:
      uint64_t v1 = 50;
      goto LABEL_70;
    case 51:
      uint64_t v1 = 51;
      goto LABEL_70;
    case 52:
      uint64_t v1 = 52;
      goto LABEL_70;
    case 53:
      uint64_t v1 = 53;
      goto LABEL_70;
    case 54:
      uint64_t v1 = 54;
      goto LABEL_70;
    case 55:
      uint64_t v1 = 55;
      goto LABEL_70;
    case 56:
      uint64_t v1 = 56;
      goto LABEL_70;
    case 57:
      uint64_t v1 = 57;
      goto LABEL_70;
    case 58:
      uint64_t v1 = 58;
      goto LABEL_70;
    case 59:
      uint64_t v1 = 59;
      goto LABEL_70;
    case 60:
      uint64_t v1 = 60;
      goto LABEL_70;
    case 61:
      uint64_t v1 = 61;
      goto LABEL_70;
    case 62:
      uint64_t v1 = 62;
      goto LABEL_70;
    case 63:
      uint64_t v1 = 63;
      goto LABEL_70;
    case 64:
      uint64_t v1 = 64;
      goto LABEL_70;
    case 65:
      uint64_t v1 = 65;
LABEL_70:
      uint64_t result = v1;
      break;
    case 66:
      return result;
    case 67:
      uint64_t result = 67;
      break;
    case 68:
      uint64_t result = 68;
      break;
    case 69:
      uint64_t result = 69;
      break;
    case 70:
      uint64_t result = 70;
      break;
    case 71:
      uint64_t result = 71;
      break;
    case 72:
      uint64_t result = 72;
      break;
    case 73:
      uint64_t result = 73;
      break;
    case 74:
      uint64_t result = 74;
      break;
    case 75:
      uint64_t result = 75;
      break;
    case 76:
      uint64_t result = 76;
      break;
    case 77:
      uint64_t result = 77;
      break;
    case 78:
      uint64_t result = 78;
      break;
    case 79:
      uint64_t result = 79;
      break;
    case 80:
      uint64_t result = 80;
      break;
    case 81:
      uint64_t result = 81;
      break;
    case 82:
      uint64_t result = 82;
      break;
    case 83:
      uint64_t result = 83;
      break;
    case 84:
      uint64_t result = 84;
      break;
    case 85:
      uint64_t result = 85;
      break;
    case 86:
      uint64_t result = 86;
      break;
    case 87:
      uint64_t result = 87;
      break;
    case 88:
      uint64_t result = 88;
      break;
    case 89:
      uint64_t result = 89;
      break;
    case 90:
      uint64_t result = 90;
      break;
    case 91:
      uint64_t result = 91;
      break;
    case 92:
      uint64_t result = 92;
      break;
    case 93:
      uint64_t result = 93;
      break;
    case 94:
      uint64_t result = 94;
      break;
    case 95:
      uint64_t result = 95;
      break;
    case 96:
      uint64_t result = 96;
      break;
    case 97:
      uint64_t result = 97;
      break;
    case 98:
      uint64_t result = 98;
      break;
    case 99:
      uint64_t result = 99;
      break;
    case 100:
      uint64_t result = 100;
      break;
    case 101:
      uint64_t result = 101;
      break;
    case 102:
      uint64_t result = 102;
      break;
    case 103:
      uint64_t result = 103;
      break;
    case 104:
      uint64_t result = 104;
      break;
    case 105:
      uint64_t result = 105;
      break;
    case 106:
      uint64_t result = 106;
      break;
    case 107:
      uint64_t result = 107;
      break;
    case 108:
      uint64_t result = 108;
      break;
    case 109:
      uint64_t result = 109;
      break;
    case 110:
      uint64_t result = 110;
      break;
    case 111:
      uint64_t result = 111;
      break;
    case 112:
      uint64_t result = 112;
      break;
    case 113:
      uint64_t result = 113;
      break;
    case 114:
      uint64_t result = 114;
      break;
    case 115:
      uint64_t result = 115;
      break;
    case 116:
      uint64_t result = 116;
      break;
    case 117:
      uint64_t result = 117;
      break;
    case 118:
      uint64_t result = 118;
      break;
    case 119:
      uint64_t result = 119;
      break;
    case 120:
      uint64_t result = 120;
      break;
    case 121:
      uint64_t result = 121;
      break;
    case 122:
      uint64_t result = 122;
      break;
    case 123:
      uint64_t result = 123;
      break;
    case 124:
      uint64_t result = 124;
      break;
    case 125:
      uint64_t result = 125;
      break;
    case 126:
      uint64_t result = 126;
      break;
    case 127:
      uint64_t result = 127;
      break;
    default:
      if ((unint64_t)(v0 - 128) >= 0x2E) {
        uint64_t result = 174;
      }
      else {
        uint64_t result = v0 | 0xFFFFFF80;
      }
      break;
  }
  return result;
}

char *sub_10000F7D0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_10000F8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_10006EA48();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_10006EA68();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_10006EA58();
  sub_10000E138(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO5ValueO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, unint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_64;
      }
      char v10 = a1 == a4;
      return v10 & 1;
    case 2:
      if (a6 != 2) {
        goto LABEL_64;
      }
      char v10 = (unsigned __int16)a1 == (unsigned __int16)a4;
      return v10 & 1;
    case 3:
      if (a6 != 3) {
        goto LABEL_64;
      }
      goto LABEL_15;
    case 4:
      if (a6 != 4) {
        goto LABEL_64;
      }
      char v10 = a1 == a4;
      return v10 & 1;
    case 5:
      if (a6 != 5) {
        goto LABEL_64;
      }
      goto LABEL_15;
    case 6:
      if (a6 != 6) {
        goto LABEL_64;
      }
LABEL_15:
      char v10 = a1 == a4;
      return v10 & 1;
    case 7:
      if (a6 != 7) {
        goto LABEL_64;
      }
      char v10 = *(double *)&a1 == *(double *)&a4;
      return v10 & 1;
    case 8:
      if (a6 != 8) {
        goto LABEL_64;
      }
      if (a1 == a4 && a2 == a5)
      {
LABEL_32:
        char v10 = 1;
        return v10 & 1;
      }
      else
      {
        return sub_10006FCE8();
      }
    case 9:
      if (a6 == 9)
      {
        uint64_t v12 = 0;
        switch(a2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(a1), a1))
            {
              __break(1u);
LABEL_70:
              __break(1u);
LABEL_71:
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
              JUMPOUT(0x10000FD94);
            }
            uint64_t v12 = HIDWORD(a1) - (int)a1;
LABEL_36:
            sub_100010B6C(a1, a2);
LABEL_37:
            switch(a5 >> 62)
            {
              case 1uLL:
                LODWORD(v16) = HIDWORD(a4) - a4;
                if (__OFSUB__(HIDWORD(a4), a4)) {
                  goto LABEL_73;
                }
                uint64_t v16 = (int)v16;
LABEL_48:
                if (v12 != v16)
                {
LABEL_53:
                  uint64_t v24 = a1;
                  unint64_t v25 = a2;
                  char v26 = 9;
                  goto LABEL_63;
                }
                if (v12 < 1)
                {
LABEL_66:
                  uint64_t v30 = a1;
                  unint64_t v31 = a2;
                  char v32 = 9;
                  goto LABEL_68;
                }
                sub_100010B6C(a4, a5);
                char v23 = sub_10000E3AC(a1, a2, a4, a5);
                sub_100010FB0(a1, a2, 9);
                if (v23) {
                  goto LABEL_32;
                }
                break;
              case 2uLL:
                uint64_t v21 = *(void *)(a4 + 16);
                uint64_t v20 = *(void *)(a4 + 24);
                BOOL v22 = __OFSUB__(v20, v21);
                uint64_t v16 = v20 - v21;
                if (!v22) {
                  goto LABEL_48;
                }
                goto LABEL_74;
              case 3uLL:
                if (v12) {
                  goto LABEL_53;
                }
                goto LABEL_66;
              default:
                uint64_t v16 = BYTE6(a5);
                goto LABEL_48;
            }
            break;
          case 2uLL:
            uint64_t v15 = *(void *)(a1 + 16);
            uint64_t v14 = *(void *)(a1 + 24);
            uint64_t v12 = v14 - v15;
            if (!__OFSUB__(v14, v15)) {
              goto LABEL_36;
            }
            goto LABEL_70;
          case 3uLL:
            goto LABEL_37;
          default:
            uint64_t v12 = BYTE6(a2);
            goto LABEL_37;
        }
      }
      goto LABEL_64;
    case 10:
      if (a6 == 10)
      {
        uint64_t v13 = 0;
        switch(a2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_71;
            }
            uint64_t v13 = HIDWORD(a1) - (int)a1;
LABEL_42:
            sub_100010B6C(a1, a2);
LABEL_43:
            switch(a5 >> 62)
            {
              case 1uLL:
                LODWORD(v19) = HIDWORD(a4) - a4;
                if (__OFSUB__(HIDWORD(a4), a4)) {
                  goto LABEL_75;
                }
                uint64_t v19 = (int)v19;
LABEL_57:
                if (v13 != v19)
                {
LABEL_62:
                  uint64_t v24 = a1;
                  unint64_t v25 = a2;
                  char v26 = 10;
LABEL_63:
                  sub_100010FB0(v24, v25, v26);
                  goto LABEL_64;
                }
                if (v13 < 1)
                {
LABEL_67:
                  uint64_t v30 = a1;
                  unint64_t v31 = a2;
                  char v32 = 10;
LABEL_68:
                  sub_100010FB0(v30, v31, v32);
                  char v10 = 1;
                  return v10 & 1;
                }
                sub_100010B6C(a4, a5);
                char v29 = sub_10000E3AC(a1, a2, a4, a5);
                sub_100010FB0(a1, a2, 10);
                if (v29) {
                  goto LABEL_32;
                }
                break;
              case 2uLL:
                uint64_t v28 = *(void *)(a4 + 16);
                uint64_t v27 = *(void *)(a4 + 24);
                BOOL v22 = __OFSUB__(v27, v28);
                uint64_t v19 = v27 - v28;
                if (!v22) {
                  goto LABEL_57;
                }
                goto LABEL_76;
              case 3uLL:
                if (v13) {
                  goto LABEL_62;
                }
                goto LABEL_67;
              default:
                uint64_t v19 = BYTE6(a5);
                goto LABEL_57;
            }
            break;
          case 2uLL:
            uint64_t v18 = *(void *)(a1 + 16);
            uint64_t v17 = *(void *)(a1 + 24);
            uint64_t v13 = v17 - v18;
            if (!__OFSUB__(v17, v18)) {
              goto LABEL_42;
            }
            goto LABEL_72;
          case 3uLL:
            goto LABEL_43;
          default:
            uint64_t v13 = BYTE6(a2);
            goto LABEL_43;
        }
      }
      goto LABEL_64;
    case 11:
      if (a6 == 11 && !(a5 | a4)) {
        goto LABEL_32;
      }
      goto LABEL_64;
    default:
      if (a6) {
LABEL_64:
      }
        char v10 = 0;
      else {
        char v10 = ((a1 & 1) == 0) ^ a4;
      }
      return v10 & 1;
  }
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO6FormatO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_10008B228;
  v6._object = a2;
  unint64_t v4 = sub_10006FB18(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xB) {
    return 11;
  }
  else {
    return v4;
  }
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO4UnitO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_10008B350;
  v6._object = a2;
  unint64_t v4 = sub_10006FB18(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t sub_10000FE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a1;
  uint64_t v6 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v19 = v18[1];
    v20[0] = *v18;
    v20[1] = v19;
    swift_bridgeObjectRetain();
    sub_10000A3B0((unint64_t)&v21, v20, a3);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_26:
    swift_release();
    return v21;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_10001005C(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  float v2 = 0.0;
  float v3 = 1.0;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_28;
  }
  sub_10000C940(0x74694264696C6156, 0xE900000000000073);
  if (v4)
  {
    swift_unknownObjectRetain();
    sub_100004960(&qword_100091CA0);
    if (swift_dynamicCast()) {
      goto LABEL_8;
    }
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_28;
  }
  sub_10000C940(0x6C615664696C6156, 0xEB00000000736575);
  if ((v5 & 1) == 0 || (swift_unknownObjectRetain(), sub_100004960(&qword_100091CA0), (swift_dynamicCast() & 1) == 0))
  {
    if (*(void *)(a1 + 16))
    {
      sub_10000C940(0x566D756D696E694DLL, 0xEC00000065756C61);
      if (v7)
      {
        swift_unknownObjectRetain();
        if (swift_dynamicCast()) {
          float v2 = *(float *)&v13;
        }
      }
      if (*(void *)(a1 + 16))
      {
        sub_10000C940(0x566D756D6978614DLL, 0xEC00000065756C61);
        if (v8)
        {
          swift_unknownObjectRetain();
          if (swift_dynamicCast()) {
            float v3 = *(float *)&v13;
          }
        }
        if (*(void *)(a1 + 16))
        {
          sub_10000C940(0x756C615670657473, 0xE900000000000065);
          if (v9)
          {
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            if (swift_dynamicCast())
            {
              if (v3 >= v2) {
                float v10 = v2;
              }
              else {
                float v10 = v3;
              }
              if (v2 > v3) {
                float v11 = v2;
              }
              else {
                float v11 = v3;
              }
              return LODWORD(v10) | ((unint64_t)LODWORD(v11) << 32);
            }
LABEL_29:
            if (v2 > v3) {
              float v11 = v2;
            }
            else {
              float v11 = v3;
            }
            if (v3 >= v2) {
              float v10 = v2;
            }
            else {
              float v10 = v3;
            }
            return LODWORD(v10) | ((unint64_t)LODWORD(v11) << 32);
          }
        }
      }
    }
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_10000FE9C((uint64_t)&_swiftEmptyDictionarySingleton, v13, v13);
  swift_bridgeObjectRelease_n();
  return v6;
}

uint64_t sub_100010388(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = 0;
  float v3 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v4 = *(v3 - 1);
    uint64_t v5 = *v3;
    BOOL v6 = v4 == 0x5264657275636573 && v5 == 0xEB00000000646165;
    if (v6 || (sub_10006FCE8() & 1) != 0)
    {
      v2 |= 1uLL;
    }
    else
    {
      BOOL v7 = v4 == 0x5764657275636573 && v5 == 0xEC00000065746972;
      if (v7 || (sub_10006FCE8()) && (v2 & 2) == 0) {
        v2 |= 2uLL;
      }
    }
    v3 += 2;
    --v1;
  }
  while (v1);
  return v2;
}

uint64_t sub_1000104B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = 0;
  float v3 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v4 = *(v3 - 1);
    uint64_t v5 = *v3;
    BOOL v6 = v4 == 1684104562 && v5 == 0xE400000000000000;
    if (v6 || (sub_10006FCE8() & 1) != 0)
    {
      v2 |= 1uLL;
    }
    else
    {
      BOOL v7 = v4 == 0x6574697277 && v5 == 0xE500000000000000;
      if (v7 || (sub_10006FCE8() & 1) != 0)
      {
        v2 |= 2uLL;
      }
      else if (v4 == 0x796669746F6E63 && v5 == 0xE700000000000000 || (sub_10006FCE8() & 1) != 0)
      {
        v2 |= 4uLL;
      }
      else if (v4 == 0x6669746F6E636E75 && v5 == 0xE900000000000079 || (sub_10006FCE8()) {
             && (v2 & 8) == 0)
      }
      {
        v2 |= 8uLL;
      }
    }
    v3 += 2;
    --v1;
  }
  while (v1);
  return v2;
}

uint64_t sub_100010650(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      sub_100004960(&qword_100091C80);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_100010760(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    unint64_t v5 = (uint64_t *)(a1 + 48);
    do
    {
      unint64_t v9 = *((unsigned int *)v5 + 8) | ((unint64_t)*((unsigned __int8 *)v5 + 36) << 32);
      char v36 = *((unsigned char *)v5 + 16);
      char v37 = *((unsigned char *)v5 + 17);
      char v35 = *((unsigned char *)v5 - 8);
      uint64_t v10 = *((unsigned __int8 *)v5 - 16);
      uint64_t v12 = v5[5];
      uint64_t v11 = v5[6];
      uint64_t v13 = v5[3];
      uint64_t v14 = v5[1];
      uint64_t v34 = *v5;
      swift_bridgeObjectRetain();
      sub_100010B18(v13, v9);
      if (!v14) {
        break;
      }
      uint64_t v32 = v12;
      uint64_t v33 = v11;
      uint64_t v31 = v4;
      uint64_t v15 = (void *)*a3;
      unint64_t v17 = sub_10000C8B8(v10);
      uint64_t v18 = v15[2];
      BOOL v19 = (v16 & 1) == 0;
      uint64_t v20 = v18 + v19;
      if (__OFADD__(v18, v19))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        uint64_t result = sub_10006FD48();
        __break(1u);
        return result;
      }
      char v21 = v16;
      if (v15[3] >= v20)
      {
        if ((a2 & 1) == 0) {
          sub_10000CFF4();
        }
      }
      else
      {
        sub_10000D538(v20, a2 & 1);
        unint64_t v22 = sub_10000C8B8(v10);
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_18;
        }
        unint64_t v17 = v22;
      }
      uint64_t v24 = (void *)*a3;
      if (v21)
      {
        unint64_t v6 = v24[7] + (v17 << 6);
        uint64_t v7 = *(void *)(v6 + 32);
        unint64_t v8 = *(unsigned int *)(v6 + 40) | ((unint64_t)*(unsigned __int8 *)(v6 + 44) << 32);
        swift_bridgeObjectRelease();
        sub_100016648(v7, v8);
        *(unsigned char *)unint64_t v6 = v35;
        *(void *)(v6 + 8) = v34;
        *(void *)(v6 + 16) = v14;
        *(unsigned char *)(v6 + 24) = v36;
        *(unsigned char *)(v6 + 25) = v37;
        *(void *)(v6 + 32) = v13;
        *(unsigned char *)(v6 + 44) = BYTE4(v9);
        *(_DWORD *)(v6 + 40) = v9;
        *(void *)(v6 + 48) = v32;
        *(void *)(v6 + 56) = v33;
      }
      else
      {
        v24[(v17 >> 6) + 8] |= 1 << v17;
        *(unsigned char *)(v24[6] + v17) = v10;
        unint64_t v25 = v24[7] + (v17 << 6);
        *(unsigned char *)unint64_t v25 = v35;
        *(void *)(v25 + 8) = v34;
        *(void *)(v25 + 16) = v14;
        *(unsigned char *)(v25 + 24) = v36;
        *(unsigned char *)(v25 + 25) = v37;
        *(void *)(v25 + 32) = v13;
        *(unsigned char *)(v25 + 44) = BYTE4(v9);
        *(_DWORD *)(v25 + 40) = v9;
        *(void *)(v25 + 48) = v32;
        *(void *)(v25 + 56) = v33;
        uint64_t v26 = v24[2];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27) {
          goto LABEL_17;
        }
        v24[2] = v28;
      }
      v5 += 9;
      a2 = 1;
      uint64_t v4 = v31 - 1;
    }
    while (v31 != 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_100091660 != -1) {
    swift_once();
  }
  uint64_t v4 = off_100091808;
  if (!*((void *)off_100091808 + 2))
  {
    unint64_t v8 = 0xE700000000000000;
    uint64_t v9 = 0x6E776F6E6B6E75;
    goto LABEL_12;
  }
  unint64_t v5 = sub_10000C8B8(a1);
  if (v6)
  {
    unint64_t v7 = v4[7] + (v5 << 6);
    uint64_t v9 = *(void *)(v7 + 8);
    unint64_t v8 = *(void *)(v7 + 16);
    swift_bridgeObjectRetain();
    if (!v4[2]) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v8 = 0xE700000000000000;
    uint64_t v9 = 0x6E776F6E6B6E75;
    if (!v4[2]) {
      goto LABEL_12;
    }
  }
  unint64_t v10 = sub_10000C8B8(a2);
  if (v11)
  {
    unint64_t v12 = v4[7] + (v10 << 6);
    uint64_t v13 = *(void *)(v12 + 8);
    unint64_t v14 = *(void *)(v12 + 16);
    swift_bridgeObjectRetain();
    if (v9 != v13) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v14 = 0xE700000000000000;
  if (v9 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    char v15 = sub_10006FCE8();
    goto LABEL_16;
  }
LABEL_13:
  if (v8 != v14) {
    goto LABEL_15;
  }
  char v15 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_100010B18(uint64_t result, uint64_t a2)
{
  if (BYTE4(a2) != 255) {
    return sub_100010B2C(result, a2, BYTE4(a2));
  }
  return result;
}

uint64_t sub_100010B2C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100010B40(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 10 || a3 == 9) {
    return sub_100010B6C(result, a2);
  }
  if (a3 == 8) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100010B6C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100010BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004960(&qword_100091810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100010C2C(uint64_t a1)
{
  uint64_t v2 = sub_100004960(&qword_100091810);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_100010C8C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100010C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100010CF8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100010D50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_100010E48(char a1, char a2)
{
  if (a1 == 2) {
    return 0;
  }
  uint64_t v3 = a1 & 1;
  uint64_t result = 0;
  switch(a2)
  {
    case 1:
      uint64_t result = v3;
      break;
    case 2:
      uint64_t result = v3;
      break;
    case 3:
      uint64_t result = v3;
      break;
    case 4:
      uint64_t result = v3;
      break;
    case 5:
    case 6:
      uint64_t result = v3;
      break;
    case 7:
      if (v3) {
        uint64_t result = 0x3FF0000000000000;
      }
      else {
        uint64_t result = 0;
      }
      break;
    case 8:
      if (v3) {
        v4._uint64_t countAndFlagsBits = 1702195828;
      }
      else {
        v4._uint64_t countAndFlagsBits = 0x65736C6166;
      }
      if (v3) {
        unint64_t v5 = (void *)0xE400000000000000;
      }
      else {
        unint64_t v5 = (void *)0xE500000000000000;
      }
      v4._object = v5;
      sub_10006F558(v4);
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      break;
    case 9:
    case 10:
      return result;
    default:
      uint64_t result = v3;
      break;
  }
  return result;
}

uint64_t sub_100010FB0(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 10 || a3 == 9) {
    return sub_100010CF8(result, a2);
  }
  if (a3 == 8) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100010FDC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_100011020()
{
  unint64_t result = qword_100091880;
  if (!qword_100091880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091880);
  }
  return result;
}

unint64_t sub_100011074()
{
  unint64_t result = qword_100091888;
  if (!qword_100091888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091888);
  }
  return result;
}

unint64_t sub_1000110C8()
{
  unint64_t result = qword_100091890;
  if (!qword_100091890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091890);
  }
  return result;
}

unint64_t sub_10001111C()
{
  unint64_t result = qword_100091898;
  if (!qword_100091898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091898);
  }
  return result;
}

unint64_t sub_100011170()
{
  unint64_t result = qword_1000918A0;
  if (!qword_1000918A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918A0);
  }
  return result;
}

unint64_t sub_1000111C4()
{
  unint64_t result = qword_1000918A8;
  if (!qword_1000918A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918A8);
  }
  return result;
}

unint64_t sub_100011218()
{
  unint64_t result = qword_1000918B0;
  if (!qword_1000918B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918B0);
  }
  return result;
}

unint64_t sub_10001126C()
{
  unint64_t result = qword_1000918B8;
  if (!qword_1000918B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918B8);
  }
  return result;
}

unint64_t sub_1000112C0()
{
  unint64_t result = qword_1000918C0;
  if (!qword_1000918C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918C0);
  }
  return result;
}

unint64_t sub_100011314()
{
  unint64_t result = qword_1000918C8;
  if (!qword_1000918C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918C8);
  }
  return result;
}

unint64_t sub_100011368()
{
  unint64_t result = qword_1000918D0;
  if (!qword_1000918D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918D0);
  }
  return result;
}

unint64_t sub_1000113BC()
{
  unint64_t result = qword_1000918D8;
  if (!qword_1000918D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918D8);
  }
  return result;
}

unint64_t sub_100011410()
{
  unint64_t result = qword_1000918E0;
  if (!qword_1000918E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918E0);
  }
  return result;
}

unint64_t sub_100011464()
{
  unint64_t result = qword_1000918E8;
  if (!qword_1000918E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918E8);
  }
  return result;
}

uint64_t sub_1000114B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1819047278 && a2 == 0xE400000000000000;
  if (v2 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1819242338 && a2 == 0xE400000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x38746E6975 && a2 == 0xE500000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x3631746E6975 && a2 == 0xE600000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x3233746E6975 && a2 == 0xE600000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x3436746E6975 && a2 == 0xE600000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7630441 && a2 == 0xE300000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x3233746E69 && a2 == 0xE500000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x74616F6C66 && a2 == 0xE500000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 947285108 && a2 == 0xE400000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_10001190C(void *a1)
{
  uint64_t v109 = sub_100004960(&qword_100091BF8);
  uint64_t v112 = *(void *)(v109 - 8);
  __chkstk_darwin();
  v117 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004960(&qword_100091C00);
  uint64_t v110 = *(void *)(v3 - 8);
  uint64_t v111 = v3;
  __chkstk_darwin();
  v116 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004960(&qword_100091C08);
  uint64_t v107 = *(void *)(v5 - 8);
  uint64_t v108 = v5;
  __chkstk_darwin();
  v122 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100004960(&qword_100091C10);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin();
  v121 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100004960(&qword_100091C18);
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin();
  v115 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100004960(&qword_100091C20);
  uint64_t v102 = *(void *)(v101 - 8);
  __chkstk_darwin();
  v120 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100004960(&qword_100091C28);
  uint64_t v100 = *(void *)(v99 - 8);
  __chkstk_darwin();
  v119 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100004960(&qword_100091C30);
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin();
  v118 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100004960(&qword_100091C38);
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin();
  v114 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100004960(&qword_100091C40);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin();
  v113 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100004960(&qword_100091C48);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin();
  char v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004960(&qword_100091C50);
  uint64_t v90 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004960(&qword_100091C58);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin();
  unint64_t v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1[3];
  v123 = a1;
  uint64_t v24 = (uint64_t)sub_100010FDC(a1, v23);
  sub_100011020();
  uint64_t v25 = v124;
  sub_10006FDE8();
  if (!v25)
  {
    v87 = v18;
    uint64_t v86 = v16;
    uint64_t v88 = v15;
    BOOL v27 = v118;
    uint64_t v26 = v119;
    uint64_t v28 = v120;
    char v29 = v121;
    uint64_t v30 = v122;
    uint64_t v89 = 0;
    uint64_t v124 = v20;
    uint64_t v31 = sub_10006FBE8();
    if (*(void *)(v31 + 16) == 1)
    {
      switch(*(unsigned char *)(v31 + 32))
      {
        case 1:
          LOBYTE(v125) = 1;
          sub_100011410();
          char v37 = v88;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v38 = v89;
          sub_10006FB28();
          if (v38) {
            goto LABEL_28;
          }
          uint64_t v39 = v92;
          char v40 = sub_10006FB58();
          (*(void (**)(char *, uint64_t))(v91 + 8))(v37, v39);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v124 + 8))(v22, v19);
          uint64_t v24 = v40 & 1;
          sub_1000164E4((uint64_t)v123);
          return v24;
        case 2:
          LOBYTE(v125) = 2;
          sub_1000113BC();
          char v41 = v113;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v42 = v89;
          sub_10006FB28();
          if (v42) {
            goto LABEL_28;
          }
          uint64_t v43 = v94;
          char v44 = sub_10006FBA8();
          uint64_t v45 = v124;
          LOBYTE(v24) = v44;
          (*(void (**)(char *, uint64_t))(v93 + 8))(v41, v43);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v22, v19);
          uint64_t v24 = v24;
          break;
        case 3:
          LOBYTE(v125) = 3;
          sub_100011368();
          unint64_t v46 = v114;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v47 = v89;
          sub_10006FB28();
          if (v47) {
            goto LABEL_28;
          }
          uint64_t v48 = v96;
          __int16 v49 = sub_10006FBB8();
          uint64_t v50 = v124;
          LOWORD(v24) = v49;
          (*(void (**)(char *, uint64_t))(v95 + 8))(v46, v48);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v19);
          uint64_t v24 = (unsigned __int16)v24;
          break;
        case 4:
          LOBYTE(v125) = 4;
          sub_100011314();
          uint64_t v24 = (uint64_t)v22;
          uint64_t v51 = v89;
          sub_10006FB28();
          if (v51) {
            goto LABEL_28;
          }
          uint64_t v52 = v98;
          int v53 = sub_10006FBC8();
          uint64_t v54 = v124;
          LODWORD(v24) = v53;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v27, v52);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v19);
          uint64_t v24 = v24;
          break;
        case 5:
          LOBYTE(v125) = 5;
          sub_1000112C0();
          uint64_t v24 = (uint64_t)v22;
          uint64_t v55 = v89;
          sub_10006FB28();
          if (v55) {
            goto LABEL_28;
          }
          uint64_t v56 = v99;
          uint64_t v57 = sub_10006FBD8();
          uint64_t v58 = v124;
          uint64_t v24 = v57;
          (*(void (**)(char *, uint64_t))(v100 + 8))(v26, v56);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v19);
          break;
        case 6:
          LOBYTE(v125) = 6;
          sub_10001126C();
          uint64_t v59 = v28;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v60 = v89;
          sub_10006FB28();
          if (v60) {
            goto LABEL_28;
          }
          uint64_t v61 = v101;
          int v62 = sub_10006FB98();
          uint64_t v63 = v124;
          LODWORD(v24) = v62;
          (*(void (**)(char *, uint64_t))(v102 + 8))(v59, v61);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v19);
          uint64_t v24 = v24;
          break;
        case 7:
          LOBYTE(v125) = 7;
          sub_100011218();
          v64 = v115;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v65 = v89;
          sub_10006FB28();
          if (v65) {
            goto LABEL_28;
          }
          uint64_t v66 = v104;
          int v67 = sub_10006FB98();
          uint64_t v68 = v124;
          LODWORD(v24) = v67;
          (*(void (**)(char *, uint64_t))(v103 + 8))(v64, v66);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v19);
          uint64_t v24 = v24;
          break;
        case 8:
          LOBYTE(v125) = 8;
          sub_1000111C4();
          uint64_t v69 = v29;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v70 = v89;
          sub_10006FB28();
          if (v70) {
            goto LABEL_28;
          }
          uint64_t v71 = v106;
          sub_10006FB68();
          uint64_t v72 = v124;
          uint64_t v85 = v84;
          (*(void (**)(char *, uint64_t))(v105 + 8))(v69, v71);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v22, v19);
          uint64_t v24 = v85;
          break;
        case 9:
          LOBYTE(v125) = 9;
          sub_100011170();
          uint64_t v24 = (uint64_t)v22;
          uint64_t v73 = v89;
          sub_10006FB28();
          if (v73) {
            goto LABEL_28;
          }
          uint64_t v74 = v108;
          uint64_t v24 = sub_10006FB48();
          (*(void (**)(char *, uint64_t))(v107 + 8))(v30, v74);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v124 + 8))(v22, v19);
          break;
        case 0xA:
          LOBYTE(v125) = 10;
          sub_10001111C();
          uint64_t v75 = v116;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v76 = v89;
          sub_10006FB28();
          if (v76) {
            goto LABEL_28;
          }
          sub_1000165F0();
          uint64_t v77 = v111;
          sub_10006FB88();
          uint64_t v78 = v124;
          (*(void (**)(char *, uint64_t))(v110 + 8))(v75, v77);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v78 + 8))(v22, v19);
          uint64_t v24 = v125;
          break;
        case 0xB:
          LOBYTE(v125) = 11;
          sub_100011074();
          uint64_t v79 = v117;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v80 = v89;
          sub_10006FB28();
          if (v80) {
            goto LABEL_28;
          }
          sub_1000165F0();
          uint64_t v81 = v109;
          sub_10006FB88();
          uint64_t v82 = v124;
          (*(void (**)(char *, uint64_t))(v112 + 8))(v79, v81);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v82 + 8))(v22, v19);
          uint64_t v24 = v125;
          break;
        default:
          LOBYTE(v125) = 0;
          sub_100011464();
          uint64_t v32 = v87;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v33 = v89;
          sub_10006FB28();
          if (v33)
          {
LABEL_28:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v124 + 8))(v22, v19);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v90 + 8))(v32, v86);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v124 + 8))(v22, v19);
            uint64_t v24 = 0;
          }
          break;
      }
    }
    else
    {
      uint64_t v34 = sub_10006FA28();
      swift_allocError();
      char v36 = v35;
      sub_100004960(&qword_100091BD8);
      uint64_t v24 = (uint64_t)v22;
      *char v36 = &type metadata for CharacteristicKind.Value;
      sub_10006FB38();
      sub_10006FA18();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, enum case for DecodingError.typeMismatch(_:), v34);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v124 + 8))(v22, v19);
    }
  }
  sub_1000164E4((uint64_t)v123);
  return v24;
}

unint64_t sub_100012B74()
{
  unint64_t result = qword_1000918F8;
  if (!qword_1000918F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000918F8);
  }
  return result;
}

uint64_t sub_100012BC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x566D756D696E696DLL && a2 == 0xEC00000065756C61;
  if (v2 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x566D756D6978616DLL && a2 == 0xEC00000065756C61 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756C615670657473 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

float sub_100012D58(void *a1)
{
  uint64_t v2 = sub_100004960(&qword_100091BF0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010FDC(a1, a1[3]);
  sub_100012B74();
  sub_10006FDE8();
  char v12 = 0;
  sub_10006FB78();
  float v7 = v6;
  char v11 = 1;
  sub_10006FB78();
  char v10 = 2;
  sub_10006FB78();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000164E4((uint64_t)a1);
  return v7;
}

unint64_t sub_100012F30()
{
  unint64_t result = qword_100091920;
  if (!qword_100091920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091920);
  }
  return result;
}

unint64_t sub_100012F84()
{
  unint64_t result = qword_100091928;
  if (!qword_100091928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091928);
  }
  return result;
}

unint64_t sub_100012FD8()
{
  unint64_t result = qword_100091930;
  if (!qword_100091930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091930);
  }
  return result;
}

unint64_t sub_10001302C()
{
  unint64_t result = qword_100091938;
  if (!qword_100091938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091938);
  }
  return result;
}

unint64_t sub_100013080()
{
  unint64_t result = qword_100091950;
  if (!qword_100091950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091950);
  }
  return result;
}

uint64_t sub_1000130D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C615664696C6176 && a2 == 0xEB00000000736575;
  if (v2 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74694264696C6176 && a2 == 0xE900000000000073 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100077710)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_10001324C(void *a1)
{
  uint64_t v30 = sub_100004960(&qword_100091BB8);
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin();
  uint64_t v33 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100004960(&qword_100091BC0);
  uint64_t v29 = *(void *)(v32 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004960(&qword_100091BC8);
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin();
  float v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_100091BD0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  char v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v34 = a1;
  sub_100010FDC(a1, v12);
  sub_100012F30();
  uint64_t v13 = v36;
  sub_10006FDE8();
  if (!v13)
  {
    uint64_t v27 = v5;
    uint64_t v14 = v33;
    uint64_t v36 = v9;
    uint64_t v15 = sub_10006FBE8();
    if (*(void *)(v15 + 16) == 1)
    {
      v26[1] = v15;
      if (*(unsigned char *)(v15 + 32))
      {
        if (*(unsigned char *)(v15 + 32) == 1)
        {
          LOBYTE(v35) = 1;
          sub_10001302C();
          uint64_t v16 = v4;
          sub_10006FB28();
          sub_100004960(&qword_100091940);
          sub_100016588(&qword_100091BE8);
          uint64_t v17 = v32;
          sub_10006FB88();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v17);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
        }
        else
        {
          LOBYTE(v35) = 2;
          sub_100012F84();
          unint64_t v22 = v14;
          sub_10006FB28();
          sub_100016534();
          uint64_t v24 = v30;
          sub_10006FB88();
          uint64_t v25 = v36;
          (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v24);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v8);
        }
        uint64_t v5 = v35;
      }
      else
      {
        LOBYTE(v35) = 0;
        sub_100013080();
        uint64_t v20 = v7;
        sub_10006FB28();
        sub_100004960(&qword_100091940);
        sub_100016588(&qword_100091BE8);
        uint64_t v21 = v27;
        sub_10006FB88();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v21);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
        uint64_t v5 = v35;
      }
    }
    else
    {
      uint64_t v5 = sub_10006FA28();
      swift_allocError();
      uint64_t v19 = v18;
      sub_100004960(&qword_100091BD8);
      *uint64_t v19 = &type metadata for CharacteristicKind.Constraints;
      sub_10006FB38();
      sub_10006FA18();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v19, enum case for DecodingError.typeMismatch(_:), v5);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
    }
  }
  sub_1000164E4((uint64_t)v34);
  return v5;
}

uint64_t sub_100013940()
{
  return sub_100013EA0(&qword_100091958, &qword_100091960);
}

unint64_t sub_10001396C()
{
  unint64_t result = qword_100091968;
  if (!qword_100091968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091968);
  }
  return result;
}

unint64_t sub_1000139C4()
{
  unint64_t result = qword_100091970;
  if (!qword_100091970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091970);
  }
  return result;
}

unint64_t sub_100013A1C()
{
  unint64_t result = qword_100091978;
  if (!qword_100091978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091978);
  }
  return result;
}

unint64_t sub_100013A74()
{
  unint64_t result = qword_100091980;
  if (!qword_100091980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091980);
  }
  return result;
}

unint64_t sub_100013ACC()
{
  unint64_t result = qword_100091988;
  if (!qword_100091988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091988);
  }
  return result;
}

unint64_t sub_100013B24()
{
  unint64_t result = qword_100091990;
  if (!qword_100091990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091990);
  }
  return result;
}

unint64_t sub_100013B7C()
{
  unint64_t result = qword_100091998;
  if (!qword_100091998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091998);
  }
  return result;
}

unint64_t sub_100013BD4()
{
  unint64_t result = qword_1000919A0;
  if (!qword_1000919A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000919A0);
  }
  return result;
}

unint64_t sub_100013C2C()
{
  unint64_t result = qword_1000919A8;
  if (!qword_1000919A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000919A8);
  }
  return result;
}

unint64_t sub_100013C84()
{
  unint64_t result = qword_1000919B0;
  if (!qword_1000919B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000919B0);
  }
  return result;
}

unint64_t sub_100013CDC()
{
  unint64_t result = qword_1000919B8;
  if (!qword_1000919B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000919B8);
  }
  return result;
}

void *sub_100013D30()
{
  return &protocol witness table for Int;
}

unint64_t sub_100013D40()
{
  unint64_t result = qword_1000919C0;
  if (!qword_1000919C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000919C0);
  }
  return result;
}

uint64_t sub_100013D94()
{
  return sub_100013EA0(&qword_1000919C8, &qword_1000919D0);
}

unint64_t sub_100013DC0()
{
  unint64_t result = qword_1000919D8;
  if (!qword_1000919D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000919D8);
  }
  return result;
}

void *sub_100013E14()
{
  return &protocol witness table for String;
}

unint64_t sub_100013E24()
{
  unint64_t result = qword_1000919E0;
  if (!qword_1000919E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000919E0);
  }
  return result;
}

uint64_t sub_100013E78()
{
  return sub_100013EA0(&qword_1000919E8, &qword_1000919F0);
}

uint64_t sub_100013EA0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000049A4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for CharacteristicKind(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x53) {
    goto LABEL_17;
  }
  if (a2 + 173 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 173) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 173;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 173;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 173;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xAE;
  int v8 = v6 - 174;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CharacteristicKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 173 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 173) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x53) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x52)
  {
    unsigned int v6 = ((a2 - 83) >> 8) + 1;
    *uint64_t result = a2 - 83;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100014058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 - 83;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind()
{
  return &type metadata for CharacteristicKind;
}

uint64_t initializeBufferWithCopyOfBuffer for CharacteristicKind.Info(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for CharacteristicKind.Info(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 44) != 255)
  {
    unint64_t v3 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 44) << 32);
    uint64_t v4 = *(void *)(a1 + 32);
    return sub_100014128(v4, v3, BYTE4(v3));
  }
  return result;
}

uint64_t sub_100014128(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for CharacteristicKind.Info(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v5 = (uint64_t *)(a2 + 32);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 44);
  uint64_t v7 = *(unsigned int *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v6 == 255)
  {
    *(void *)(a1 + 32) = *v5;
    *(void *)(a1 + 37) = *(uint64_t *)((char *)v5 + 5);
  }
  else
  {
    unint64_t v8 = v7 & 0xFFFFFF00FFFFFFFFLL | ((unint64_t)v6 << 32);
    uint64_t v9 = *v5;
    sub_100010B2C(v9, v8, BYTE4(v8));
    *(void *)(a1 + 32) = v9;
    *(_DWORD *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 44) = BYTE4(v8);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for CharacteristicKind.Info(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v4 = (uint64_t *)(a1 + 32);
  uint64_t v5 = (uint64_t *)(a2 + 32);
  unint64_t v6 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 44) << 32);
  char v7 = *(unsigned char *)(a2 + 44);
  if (*(unsigned __int8 *)(a1 + 44) == 255)
  {
    if (BYTE4(v6) == 255)
    {
      uint64_t v8 = *v5;
      *(void *)(a1 + 37) = *(void *)(a2 + 37);
      uint64_t *v4 = v8;
    }
    else
    {
      uint64_t v10 = *v5;
      sub_100010B2C(*v5, *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 44) << 32), BYTE4(v6));
      *(void *)(a1 + 32) = v10;
      *(_DWORD *)(a1 + 40) = v6;
      *(unsigned char *)(a1 + 44) = v7;
    }
  }
  else if (BYTE4(v6) == 255)
  {
    sub_100014328(a1 + 32);
    uint64_t v9 = *(void *)(a2 + 37);
    uint64_t *v4 = *v5;
    *(void *)(a1 + 37) = v9;
  }
  else
  {
    uint64_t v11 = *v5;
    sub_100010B2C(*v5, *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 44) << 32), BYTE4(v6));
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(unsigned int *)(a1 + 40);
    *(void *)(a1 + 32) = v11;
    *(_DWORD *)(a1 + 40) = v6;
    unsigned __int8 v14 = *(unsigned char *)(a1 + 44);
    *(unsigned char *)(a1 + 44) = v7;
    sub_100014128(v12, v13, v14);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t sub_100014328(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for CharacteristicKind.Info(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CharacteristicKind.Info(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v5 = (void *)(a2 + 32);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 44);
  if (v6 != 255)
  {
    unint64_t v7 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 44) << 32);
    if (HIDWORD(v7) <= 0xFE)
    {
      uint64_t v8 = *(unsigned int *)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 32) = *v5;
      *(_DWORD *)(a1 + 40) = v7;
      *(unsigned char *)(a1 + 44) = BYTE4(v7);
      sub_100014128(v9, v8, v6);
      goto LABEL_6;
    }
    sub_100014328(a1 + 32);
  }
  *(void *)(a1 + 32) = *v5;
  *(void *)(a1 + 37) = *(void *)(a2 + 37);
LABEL_6:
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Info(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind.Info(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Info()
{
  return &type metadata for CharacteristicKind.Info;
}

uint64_t destroy for CharacteristicKind.Value(uint64_t a1)
{
  return sub_100010FB0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO5ValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100010B40(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CharacteristicKind.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100010B40(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100010FB0(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for CharacteristicKind.Value(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CharacteristicKind.Value(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100010FB0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Value(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 245);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xB) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind.Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 245;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100014678(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 0xAu) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 11);
  }
}

uint64_t sub_100014690(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xB)
  {
    *(void *)__n128 result = a2 - 11;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 11;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value()
{
  return &type metadata for CharacteristicKind.Value;
}

uint64_t destroy for CharacteristicKind.Constraints(uint64_t a1)
{
  return sub_100014128(*(void *)a1, *(unsigned int *)(a1 + 8), *(unsigned char *)(a1 + 12));
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO11ConstraintsOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned int v4 = *(_DWORD *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 12);
  sub_100010B2C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 12) = v5;
  return a1;
}

uint64_t assignWithCopy for CharacteristicKind.Constraints(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned int v4 = *(_DWORD *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 12);
  sub_100010B2C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(unsigned int *)(a1 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 12);
  *(unsigned char *)(a1 + 12) = v5;
  sub_100014128(v6, v7, v8);
  return a1;
}

void *initializeWithTake for CharacteristicKind.Constraints(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *__n128 result = v2;
  return result;
}

uint64_t assignWithTake for CharacteristicKind.Constraints(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  int v4 = *((_DWORD *)a2 + 2);
  char v5 = *((unsigned char *)a2 + 12);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(unsigned int *)(a1 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 12);
  *(unsigned char *)(a1 + 12) = v5;
  sub_100014128(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Constraints(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 13)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind.Constraints(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 13) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 13) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 12) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100014878(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 12);
}

uint64_t sub_100014880(uint64_t result, char a2)
{
  *(unsigned char *)(result + 12) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Constraints()
{
  return &type metadata for CharacteristicKind.Constraints;
}

uint64_t initializeBufferWithCopyOfBuffer for CharacteristicKind.Constraints.MinMaxStepValues(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Constraints.MinMaxStepValues(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind.Constraints.MinMaxStepValues(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Constraints.MinMaxStepValues()
{
  return &type metadata for CharacteristicKind.Constraints.MinMaxStepValues;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Permissions()
{
  return &type metadata for CharacteristicKind.Permissions;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Properties()
{
  return &type metadata for CharacteristicKind.Properties;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Format(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CharacteristicKind.Format(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100014A84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Format()
{
  return &type metadata for CharacteristicKind.Format;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Unit(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CharacteristicKind.Unit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100014C18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Unit()
{
  return &type metadata for CharacteristicKind.Unit;
}

uint64_t sub_100014C58(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100014C60(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Constraints.CodingKeys()
{
  return &type metadata for CharacteristicKind.Constraints.CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Constraints.ValidValuesCodingKeys()
{
  return &type metadata for CharacteristicKind.Constraints.ValidValuesCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Constraints.ValidBitsCodingKeys()
{
  return &type metadata for CharacteristicKind.Constraints.ValidBitsCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Constraints.MinMaxStepValuesCodingKeys()
{
  return &type metadata for CharacteristicKind.Constraints.MinMaxStepValuesCodingKeys;
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO11ConstraintsO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20HomeWidgetLockScreen18CharacteristicKindO11ConstraintsO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100014E10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Constraints.MinMaxStepValues.CodingKeys()
{
  return &type metadata for CharacteristicKind.Constraints.MinMaxStepValues.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Value.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CharacteristicKind.Value.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100014FA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.NullCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.NullCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.BoolCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint8CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint8CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint16CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint16CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint32CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint32CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint64CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint64CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.IntCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.IntCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Int32CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Int32CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.FloatCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.FloatCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.StringCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.StringCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Tlv8CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Tlv8CodingKeys;
}

uint64_t _s20HomeWidgetLockScreen18CharacteristicKindO11ConstraintsO21ValidValuesCodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s20HomeWidgetLockScreen18CharacteristicKindO11ConstraintsO21ValidValuesCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100015178);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.DataCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.DataCodingKeys;
}

unint64_t sub_1000151B4()
{
  unint64_t result = qword_1000919F8;
  if (!qword_1000919F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000919F8);
  }
  return result;
}

unint64_t sub_10001520C()
{
  unint64_t result = qword_100091A00;
  if (!qword_100091A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A00);
  }
  return result;
}

unint64_t sub_100015264()
{
  unint64_t result = qword_100091A08;
  if (!qword_100091A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A08);
  }
  return result;
}

unint64_t sub_1000152BC()
{
  unint64_t result = qword_100091A10;
  if (!qword_100091A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A10);
  }
  return result;
}

unint64_t sub_100015314()
{
  unint64_t result = qword_100091A18;
  if (!qword_100091A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A18);
  }
  return result;
}

unint64_t sub_10001536C()
{
  unint64_t result = qword_100091A20;
  if (!qword_100091A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A20);
  }
  return result;
}

unint64_t sub_1000153C4()
{
  unint64_t result = qword_100091A28;
  if (!qword_100091A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A28);
  }
  return result;
}

unint64_t sub_10001541C()
{
  unint64_t result = qword_100091A30;
  if (!qword_100091A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A30);
  }
  return result;
}

unint64_t sub_100015474()
{
  unint64_t result = qword_100091A38;
  if (!qword_100091A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A38);
  }
  return result;
}

unint64_t sub_1000154CC()
{
  unint64_t result = qword_100091A40;
  if (!qword_100091A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A40);
  }
  return result;
}

unint64_t sub_100015524()
{
  unint64_t result = qword_100091A48;
  if (!qword_100091A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A48);
  }
  return result;
}

unint64_t sub_10001557C()
{
  unint64_t result = qword_100091A50;
  if (!qword_100091A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A50);
  }
  return result;
}

unint64_t sub_1000155D4()
{
  unint64_t result = qword_100091A58;
  if (!qword_100091A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A58);
  }
  return result;
}

unint64_t sub_10001562C()
{
  unint64_t result = qword_100091A60;
  if (!qword_100091A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A60);
  }
  return result;
}

unint64_t sub_100015684()
{
  unint64_t result = qword_100091A68;
  if (!qword_100091A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A68);
  }
  return result;
}

unint64_t sub_1000156DC()
{
  unint64_t result = qword_100091A70;
  if (!qword_100091A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A70);
  }
  return result;
}

unint64_t sub_100015734()
{
  unint64_t result = qword_100091A78;
  if (!qword_100091A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A78);
  }
  return result;
}

unint64_t sub_10001578C()
{
  unint64_t result = qword_100091A80;
  if (!qword_100091A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A80);
  }
  return result;
}

unint64_t sub_1000157E4()
{
  unint64_t result = qword_100091A88;
  if (!qword_100091A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A88);
  }
  return result;
}

unint64_t sub_10001583C()
{
  unint64_t result = qword_100091A90;
  if (!qword_100091A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A90);
  }
  return result;
}

unint64_t sub_100015894()
{
  unint64_t result = qword_100091A98;
  if (!qword_100091A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091A98);
  }
  return result;
}

unint64_t sub_1000158EC()
{
  unint64_t result = qword_100091AA0;
  if (!qword_100091AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AA0);
  }
  return result;
}

unint64_t sub_100015944()
{
  unint64_t result = qword_100091AA8;
  if (!qword_100091AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AA8);
  }
  return result;
}

unint64_t sub_10001599C()
{
  unint64_t result = qword_100091AB0;
  if (!qword_100091AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AB0);
  }
  return result;
}

unint64_t sub_1000159F4()
{
  unint64_t result = qword_100091AB8;
  if (!qword_100091AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AB8);
  }
  return result;
}

unint64_t sub_100015A4C()
{
  unint64_t result = qword_100091AC0;
  if (!qword_100091AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AC0);
  }
  return result;
}

unint64_t sub_100015AA4()
{
  unint64_t result = qword_100091AC8;
  if (!qword_100091AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AC8);
  }
  return result;
}

unint64_t sub_100015AFC()
{
  unint64_t result = qword_100091AD0;
  if (!qword_100091AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AD0);
  }
  return result;
}

unint64_t sub_100015B54()
{
  unint64_t result = qword_100091AD8;
  if (!qword_100091AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AD8);
  }
  return result;
}

unint64_t sub_100015BAC()
{
  unint64_t result = qword_100091AE0;
  if (!qword_100091AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AE0);
  }
  return result;
}

unint64_t sub_100015C04()
{
  unint64_t result = qword_100091AE8;
  if (!qword_100091AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AE8);
  }
  return result;
}

unint64_t sub_100015C5C()
{
  unint64_t result = qword_100091AF0;
  if (!qword_100091AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AF0);
  }
  return result;
}

unint64_t sub_100015CB4()
{
  unint64_t result = qword_100091AF8;
  if (!qword_100091AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091AF8);
  }
  return result;
}

unint64_t sub_100015D0C()
{
  unint64_t result = qword_100091B00;
  if (!qword_100091B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B00);
  }
  return result;
}

unint64_t sub_100015D64()
{
  unint64_t result = qword_100091B08;
  if (!qword_100091B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B08);
  }
  return result;
}

unint64_t sub_100015DBC()
{
  unint64_t result = qword_100091B10;
  if (!qword_100091B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B10);
  }
  return result;
}

unint64_t sub_100015E14()
{
  unint64_t result = qword_100091B18;
  if (!qword_100091B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B18);
  }
  return result;
}

unint64_t sub_100015E6C()
{
  unint64_t result = qword_100091B20;
  if (!qword_100091B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B20);
  }
  return result;
}

unint64_t sub_100015EC4()
{
  unint64_t result = qword_100091B28;
  if (!qword_100091B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B28);
  }
  return result;
}

unint64_t sub_100015F1C()
{
  unint64_t result = qword_100091B30;
  if (!qword_100091B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B30);
  }
  return result;
}

unint64_t sub_100015F74()
{
  unint64_t result = qword_100091B38;
  if (!qword_100091B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B38);
  }
  return result;
}

unint64_t sub_100015FCC()
{
  unint64_t result = qword_100091B40;
  if (!qword_100091B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B40);
  }
  return result;
}

unint64_t sub_100016024()
{
  unint64_t result = qword_100091B48;
  if (!qword_100091B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B48);
  }
  return result;
}

unint64_t sub_10001607C()
{
  unint64_t result = qword_100091B50;
  if (!qword_100091B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B50);
  }
  return result;
}

unint64_t sub_1000160D4()
{
  unint64_t result = qword_100091B58;
  if (!qword_100091B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B58);
  }
  return result;
}

unint64_t sub_10001612C()
{
  unint64_t result = qword_100091B60;
  if (!qword_100091B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B60);
  }
  return result;
}

unint64_t sub_100016184()
{
  unint64_t result = qword_100091B68;
  if (!qword_100091B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B68);
  }
  return result;
}

unint64_t sub_1000161DC()
{
  unint64_t result = qword_100091B70;
  if (!qword_100091B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B70);
  }
  return result;
}

unint64_t sub_100016234()
{
  unint64_t result = qword_100091B78;
  if (!qword_100091B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B78);
  }
  return result;
}

unint64_t sub_10001628C()
{
  unint64_t result = qword_100091B80;
  if (!qword_100091B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B80);
  }
  return result;
}

unint64_t sub_1000162E4()
{
  unint64_t result = qword_100091B88;
  if (!qword_100091B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B88);
  }
  return result;
}

unint64_t sub_10001633C()
{
  unint64_t result = qword_100091B90;
  if (!qword_100091B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B90);
  }
  return result;
}

unint64_t sub_100016394()
{
  unint64_t result = qword_100091B98;
  if (!qword_100091B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091B98);
  }
  return result;
}

unint64_t sub_1000163E8()
{
  unint64_t result = qword_100091BA0;
  if (!qword_100091BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091BA0);
  }
  return result;
}

unint64_t sub_10001643C()
{
  unint64_t result = qword_100091BA8;
  if (!qword_100091BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091BA8);
  }
  return result;
}

unint64_t sub_100016490()
{
  unint64_t result = qword_100091BB0;
  if (!qword_100091BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091BB0);
  }
  return result;
}

uint64_t sub_1000164E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_100016534()
{
  unint64_t result = qword_100091BE0;
  if (!qword_100091BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091BE0);
  }
  return result;
}

uint64_t sub_100016588(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000049A4(&qword_100091940);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000165F0()
{
  unint64_t result = qword_100091C60;
  if (!qword_100091C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091C60);
  }
  return result;
}

uint64_t sub_100016648(uint64_t result, uint64_t a2)
{
  if (BYTE4(a2) != 255) {
    return sub_100014128(result, a2, BYTE4(a2));
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimateCategoryWidget()
{
  return &type metadata for ClimateCategoryWidget;
}

uint64_t sub_1000166CC()
{
  return swift_getOpaqueTypeConformance2();
}

int *sub_1000166E8@<X0>(uint64_t a1@<X8>)
{
  if (__OFADD__(qword_10009A6B8, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_10009A6B8;
    v19[0] = 0x206574616D696C43;
    v19[1] = 0xE800000000000000;
    v20._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v20);
    swift_bridgeObjectRelease();
    uint64_t v2 = 0x206574616D696C43;
    unint64_t v1 = 0xE800000000000000;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v4 = sub_10006EC68();
  sub_100004B08(v4, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10006EC48();
  os_log_type_t v6 = sub_10006F818();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    sub_100022B5C(v2, v1, v19);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100022B5C(0xD000000000000010, 0x8000000100077A30, v19);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10006EB78();
  if (qword_100091678 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10009A6A8;
  uint64_t v8 = unk_10009A6B0;
  uint64_t v10 = qword_100091770;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_10009A9F8;
  swift_bridgeObjectRetain();
  sub_10006F408();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  unint64_t result = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v17 = (uint64_t *)(a1 + result[5]);
  uint64_t *v17 = v9;
  v17[1] = v8;
  *(void *)(a1 + result[6]) = v11;
  uint64_t v18 = (void *)(a1 + result[7]);
  *uint64_t v18 = v13;
  v18[1] = v15;
  return result;
}

uint64_t sub_100016A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for ThreeColumnDataEntry();
  uint64_t v12 = swift_task_alloc();
  v8[4] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v8[5] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_100016AEC;
  return sub_100016C78(v12, a6, a7, a8);
}

uint64_t sub_100016AEC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100016BE8, 0, 0);
}

uint64_t sub_100016BE8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_10001994C(v1, (uint64_t (*)(void))type metadata accessor for ThreeColumnDataEntry);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100016C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  sub_10006EC08();
  v4[16] = swift_task_alloc();
  sub_10006F4B8();
  v4[17] = swift_task_alloc();
  uint64_t v5 = sub_10006EB88();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v6 = sub_10006F348();
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  return _swift_task_switch(sub_100016E00, 0, 0);
}

uint64_t sub_100016E00()
{
  uint64_t v33 = v0;
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)(qword_10009A778 + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome);
  swift_beginAccess();
  uint64_t v2 = *v1;
  v0[25] = *v1;
  uint64_t v3 = qword_1000916B8;
  uint64_t v31 = (uint64_t)v2;
  id v4 = v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10006EC68();
  v0[26] = sub_100004B08(v5, (uint64_t)qword_10009A7A0);
  id v6 = v4;
  swift_bridgeObjectRetain_n();
  id v7 = v6;
  uint64_t v8 = sub_10006EC48();
  os_log_type_t v9 = sub_10006F818();
  BOOL v10 = os_log_type_enabled(v8, v9);
  unint64_t v11 = v0[15];
  if (v10)
  {
    os_log_type_t v30 = v9;
    uint64_t v12 = v0[14];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315650;
    swift_bridgeObjectRetain();
    v0[9] = sub_100022B5C(v12, v11, &v32);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    v0[10] = sub_100022B5C(0xD00000000000001ALL, 0x80000001000779F0, &v32);
    sub_10006F868();
    *(_WORD *)(v13 + 22) = 2080;
    if (v31)
    {
      id v14 = [v7 name];
      uint64_t v15 = sub_10006F4F8();
      unint64_t v17 = v16;
    }
    else
    {
      unint64_t v17 = 0xE300000000000000;
      uint64_t v15 = 7104878;
    }
    v0[11] = sub_100022B5C(v15, v17, &v32);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v19 = v0[23];
  uint64_t v18 = v0[24];
  uint64_t v20 = v0[21];
  uint64_t v21 = v0[22];
  sub_10006F418();
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for WidgetFamily.systemSmall(_:), v20);
  sub_100019ABC(&qword_100091E18, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_10006F5F8();
  sub_10006F5F8();
  uint64_t v23 = v0[5];
  uint64_t v22 = v0[6];
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v24(v19, v20);
  v24(v18, v20);
  if (v23 == v22) {
    uint64_t v25 = 5;
  }
  else {
    uint64_t v25 = 3;
  }
  uint64_t v26 = (void *)swift_task_alloc();
  v0[27] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100017278;
  uint64_t v27 = v0[14];
  uint64_t v28 = v0[15];
  return sub_100019B08(v31, v27, v28, v25);
}

uint64_t sub_100017278(uint64_t a1)
{
  *(void *)(*(void *)v1 + 224) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100017378, 0, 0);
}

uint64_t sub_100017378()
{
  os_log_type_t v30 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_10006EC48();
  os_log_type_t v2 = sub_10006F818();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[14];
    unint64_t v3 = v0[15];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    v0[7] = sub_100022B5C(v4, v3, &v29);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10006F678();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[8] = sub_100022B5C(v6, v8, &v29);
    sub_10006F868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "...{%s} climateSummaryRows are %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  sub_10006EB78();
  if (qword_100091678 != -1) {
    swift_once();
  }
  uint64_t v9 = v0[28];
  uint64_t v27 = qword_10009A6A8;
  uint64_t v28 = unk_10009A6B0;
  uint64_t v10 = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    sub_100004960(&qword_100091CC0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100070910;
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v11 = sub_10006F518();
    *(void *)(v9 + 32) = 0xD000000000000018;
    *(void *)(v9 + 40) = 0x80000001000779B0;
    *(void *)(v9 + 48) = 0;
    *(void *)(v9 + 56) = 0xE000000000000000;
    *(void *)(v9 + 64) = v11;
    *(void *)(v9 + 72) = v12;
    *(unsigned char *)(v9 + 80) = 0;
  }
  uint64_t v13 = (void *)v0[25];
  uint64_t v15 = v0[19];
  uint64_t v14 = v0[20];
  uint64_t v16 = v0[18];
  uint64_t v17 = v0[12];
  sub_10006F408();
  uint64_t v19 = v18;
  uint64_t v21 = v20;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v17, v14, v16);
  uint64_t v22 = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v23 = (uint64_t *)(v17 + v22[5]);
  *uint64_t v23 = v27;
  v23[1] = v28;
  *(void *)(v17 + v22[6]) = v9;
  uint64_t v24 = (void *)(v17 + v22[7]);
  *uint64_t v24 = v19;
  v24[1] = v21;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_10001775C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v39 = a6;
  uint64_t v40 = a2;
  uint64_t v11 = sub_10006F438();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004960(&qword_100091DE8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = qword_10009A6B8 + 1;
  if (__OFADD__(qword_10009A6B8, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v34 = a4;
    uint64_t v36 = a1;
    char v37 = v16;
    uint64_t v38 = a5;
    ++qword_10009A6B8;
    uint64_t v42 = 0x206574616D696C43;
    unint64_t v43 = 0xE800000000000000;
    uint64_t v41 = v17;
    v44._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v44);
    swift_bridgeObjectRelease();
    uint64_t v6 = v42;
    a4 = v43;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v35 = v13;
  uint64_t v18 = sub_10006EC68();
  sub_100004B08(v18, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_10006EC48();
  os_log_type_t v20 = sub_10006F818();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v33 = v11;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v32 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v42 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_100022B5C(v6, a4, &v42);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v41 = sub_100022B5C(0xD00000000000001BLL, v34, &v42);
    sub_10006F868();
    swift_arrayDestroy();
    uint64_t v14 = v32;
    swift_slowDealloc();
    uint64_t v11 = v33;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v24 = sub_10006F6F8();
  uint64_t v25 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v37, 1, 1, v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v36, v11);
  unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v27 = v14;
  unint64_t v28 = (v35 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  *((void *)v29 + 4) = v40;
  *((void *)v29 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v29[v26], v27, v11);
  os_log_type_t v30 = (uint64_t *)&v29[v28];
  *os_log_type_t v30 = v6;
  v30[1] = a4;
  swift_retain();
  sub_10003A10C(v25, v39, (uint64_t)v29);
  return swift_release();
}

uint64_t sub_100017B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  uint64_t v9 = sub_10006EB88();
  v8[7] = v9;
  v8[8] = *(void *)(v9 - 8);
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  sub_10006F3C8();
  v8[11] = swift_task_alloc();
  uint64_t v10 = sub_100004960(&qword_100091E00);
  v8[12] = v10;
  v8[13] = *(void *)(v10 - 8);
  v8[14] = swift_task_alloc();
  return _swift_task_switch(sub_100017CDC, 0, 0);
}

uint64_t sub_100017CDC()
{
  sub_100004960(&qword_100091E08);
  uint64_t v1 = type metadata accessor for ThreeColumnDataEntry();
  v0[15] = v1;
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  v0[16] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_100070910;
  uint64_t v4 = v3 + v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100017E04;
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  return sub_100016C78(v4, v8, v6, v7);
}

uint64_t sub_100017E04()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100017F00, 0, 0);
}

uint64_t sub_100017F00()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[13];
  uint64_t v11 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v10 = (void (*)(uint64_t))v0[2];
  sub_10006EB78();
  sub_10006EB58();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v4, v6);
  sub_10006F3B8();
  v7(v3, v6);
  sub_100019ABC(qword_100091DB0, (void (*)(uint64_t))type metadata accessor for ThreeColumnDataEntry);
  sub_10006F448();
  v10(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10001808C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001775C(a1, a2, a3, 0x8000000100077A10, (uint64_t)&unk_10008DCF8, (uint64_t)&unk_100091E28);
}

uint64_t sub_1000180D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10001775C(a1, a2, a3, 0x8000000100077990, (uint64_t)&unk_10008DCD0, (uint64_t)&unk_100091DF8);
}

uint64_t sub_100018114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100019B04;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_1000181C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100019B04;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_10001827C()
{
  sub_10006EC08();
  __chkstk_darwin();
  sub_10006F4B8();
  __chkstk_darwin();
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t result = sub_10006F518();
  qword_10009A6A8 = result;
  unk_10009A6B0 = v1;
  return result;
}

uint64_t sub_100018398()
{
  uint64_t v1 = v0;
  sub_100004960(&qword_100091DC8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ThreeColumnCategoryView(0);
  __chkstk_darwin();
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004960(&qword_100091DD0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018CC4(v1, (uint64_t)v6);
  uint64_t v11 = (uint64_t *)&v6[*(int *)(v4 + 20)];
  *uint64_t v11 = swift_getKeyPath();
  sub_100004960(&qword_100091DD8);
  swift_storeEnumTagMultiPayload();
  sub_10006EAF8();
  uint64_t v12 = sub_100019ABC(&qword_100091DE0, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryView);
  sub_10006F0F8();
  sub_10001947C((uint64_t)v3);
  sub_10001994C((uint64_t)v6, type metadata accessor for ThreeColumnCategoryView);
  v14[0] = v4;
  v14[1] = v12;
  swift_getOpaqueTypeConformance2();
  sub_10006F188();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100018638()
{
  return sub_10006F148();
}

uint64_t sub_100018658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  sub_10006EC08();
  __chkstk_darwin();
  v22[1] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006F4B8();
  __chkstk_darwin();
  uint64_t v2 = sub_100004960(&qword_100091CE8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004960(&qword_100091CF0);
  v22[0] = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004960(&qword_100091CF8);
  uint64_t v23 = *(void *)(v9 - 8);
  uint64_t v24 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClimateCategoryWidgetView();
  sub_100019ABC(&qword_100091D00, (void (*)(uint64_t))type metadata accessor for ClimateCategoryWidgetView);
  sub_100018C14();
  sub_10006F3A8();
  if (qword_100091678 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_10009A6A8;
  uint64_t v27 = (void *)unk_10009A6B0;
  unint64_t v12 = sub_100018C68();
  unint64_t v13 = sub_100004A48();
  sub_10006EF68();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v30 = sub_10006F518();
  uint64_t v31 = v14;
  uint64_t v26 = v2;
  uint64_t v27 = &type metadata for String;
  unint64_t v28 = v12;
  unint64_t v29 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_10006EF48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22[0] + 8))(v8, v6);
  sub_100004960(&qword_100091D18);
  uint64_t v16 = sub_10006F348();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100070910;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, enum case for WidgetFamily.accessoryRectangular(_:), v16);
  uint64_t v26 = v6;
  uint64_t v27 = &type metadata for String;
  unint64_t v28 = OpaqueTypeConformance2;
  unint64_t v29 = v13;
  swift_getOpaqueTypeConformance2();
  uint64_t v20 = v24;
  sub_10006EF58();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v20);
}

uint64_t sub_100018BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100018CC4(a1, a2);
}

uint64_t type metadata accessor for ClimateCategoryWidgetView()
{
  uint64_t result = qword_100091D78;
  if (!qword_100091D78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100018C14()
{
  unint64_t result = qword_100091D08;
  if (!qword_100091D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091D08);
  }
  return result;
}

unint64_t sub_100018C68()
{
  unint64_t result = qword_100091D10;
  if (!qword_100091D10)
  {
    sub_1000049A4(&qword_100091CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091D10);
  }
  return result;
}

uint64_t sub_100018CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ClimateCategoryTimelineProvider()
{
  return &type metadata for ClimateCategoryTimelineProvider;
}

uint64_t *sub_100018D38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100018E38(uint64_t a1)
{
  uint64_t v2 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for ThreeColumnDataEntry();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100018EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100018F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v5[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  return a1;
}

uint64_t sub_100019050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for ThreeColumnDataEntry();
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  return a1;
}

uint64_t sub_1000190E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  return a1;
}

uint64_t sub_100019194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000191A8);
}

uint64_t sub_1000191A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100019214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100019228);
}

uint64_t sub_100019228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100019298()
{
  uint64_t result = type metadata accessor for ThreeColumnDataEntry();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100019324()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100019414()
{
  return sub_100019ABC(qword_100091DB0, (void (*)(uint64_t))type metadata accessor for ThreeColumnDataEntry);
}

uint64_t sub_10001945C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001947C(uint64_t a1)
{
  uint64_t v2 = sub_100004960(&qword_100091DC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000194E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_100019620;
  return sub_100017B78(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_100019620()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100019718()
{
  uint64_t v1 = sub_10006F438();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10001980C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_100019B04;
  return sub_100016A04(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_10001994C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000199B0()
{
  unint64_t result = qword_100091E30;
  if (!qword_100091E30)
  {
    sub_1000049A4(&qword_100091E38);
    type metadata accessor for ThreeColumnCategoryView(255);
    sub_100019ABC(&qword_100091DE0, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryView);
    swift_getOpaqueTypeConformance2();
    sub_100019ABC(&qword_100091E40, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091E30);
  }
  return result;
}

uint64_t sub_100019ABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100019B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[44] = a4;
  v5[45] = v4;
  v5[42] = a2;
  v5[43] = a3;
  v5[41] = a1;
  sub_10006EC08();
  v5[46] = swift_task_alloc();
  sub_10006F4B8();
  v5[47] = swift_task_alloc();
  return _swift_task_switch(sub_100019BCC, 0, 0);
}

uint64_t sub_100019BCC()
{
  unint64_t v29 = v0;
  if (qword_1000916D0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0 + 41;
  uint64_t v2 = (void *)v0[41];
  uint64_t v3 = sub_10006EC68();
  sub_100004B08(v3, (uint64_t)qword_10009A7E8);
  id v4 = v2;
  swift_bridgeObjectRetain_n();
  id v5 = v4;
  uint64_t v6 = sub_10006EC48();
  os_log_type_t v7 = sub_10006F818();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = v0[43];
  if (v8)
  {
    os_log_type_t v27 = v7;
    uint64_t v10 = v0[42];
    uint64_t v26 = v0[41];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315650;
    swift_bridgeObjectRetain();
    v0[38] = sub_100022B5C(v10, v9, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    v0[39] = sub_100022B5C(0xD000000000000028, 0x8000000100077C40, &v28);
    sub_10006F868();
    *(_WORD *)(v11 + 22) = 2080;
    if (v26)
    {
      id v12 = [v5 name];
      uint64_t v13 = sub_10006F4F8();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v15 = 0xE300000000000000;
      uint64_t v13 = 7104878;
    }
    uint64_t v1 = v0 + 41;
    v0[40] = sub_100022B5C(v13, v15, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  if (*v1)
  {
    uint64_t v16 = qword_100091680;
    id v17 = v5;
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_10009A6C0;
    id v19 = v17;
    uint64_t v20 = (void *)swift_task_alloc();
    v0[48] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_100019FA4;
    uint64_t v21 = v0[42];
    uint64_t v22 = v0[43];
    uint64_t v23 = v0[41];
    return LockScreenDataModel.reloadCharacteristics(matching:for:fetchId:)(v18, v23, v21, v22);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(double *))v0[1];
    return v25(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100019FA4(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 328);
  *(void *)(*(void *)v1 + 392) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_10001A0C0, 0, 0);
}

uint64_t sub_10001A0C0()
{
  uint64_t v1 = (_OWORD *)(v0 + 128);
  uint64_t v2 = qword_100091688;
  id v3 = *(id *)(v0 + 328);
  if (v2 != -1)
  {
    swift_once();
    id v3 = *(id *)(v0 + 328);
  }
  uint64_t v93 = v0 + 232;
  uint64_t v95 = v0 + 240;
  uint64_t v97 = v0 + 272;
  uint64_t v99 = *(void *)(v0 + 392);
  unint64_t v90 = *(void *)(v0 + 344);
  uint64_t v101 = *(void *)(v0 + 336);
  long long v4 = *(_OWORD *)&qword_10009A6D8;
  *uint64_t v1 = xmmword_10009A6C8;
  *(_OWORD *)(v0 + 144) = v4;
  *(_OWORD *)(v0 + 160) = xmmword_10009A6E8;
  *(void *)(v0 + 176) = qword_10009A6F8;
  uint64_t v103 = v3;
  id v5 = [v3 accessories];
  sub_100004B50(0, (unint64_t *)&qword_1000917F8);
  unint64_t v6 = sub_10006F668();

  *(_OWORD *)(v0 + 200) = *v1;
  *(void *)(v0 + 264) = *(void *)(v0 + 144);
  *(int8x16_t *)(v0 + 248) = vextq_s8(*(int8x16_t *)(v0 + 152), *(int8x16_t *)(v0 + 152), 8uLL);
  uint64_t v7 = *(void *)(v0 + 168);
  sub_100004B8C(v0 + 200);
  sub_100004BB8(v0 + 264);
  sub_100004BB8(v0 + 256);
  sub_100004BB8(v0 + 248);
  sub_100004B40(v7);
  BOOL v8 = sub_100025574(v6, v0 + 128);
  sub_100004BE4(v0 + 200);
  sub_100004C10(v0 + 264);
  sub_100004C10(v0 + 256);
  sub_100004C10(v0 + 248);
  sub_100004C3C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1000637E4(_swiftEmptyArrayStorage, (unint64_t)v8, v99, v101, v90);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*((void *)v9 + 2))
  {
    type metadata accessor for LockScreenDataModel();
    uint64_t v10 = sub_10001D0B8((uint64_t)v9);
    uint64_t v12 = v11;
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v13 = sub_10006F518();
    uint64_t v15 = v14;
    uint64_t v16 = sub_10001AC10((uint64_t)v9);
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = sub_10000C37C(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v21 = *((void *)v19 + 2);
    unint64_t v20 = *((void *)v19 + 3);
    if (v21 >= v20 >> 1) {
      id v19 = sub_10000C37C((char *)(v20 > 1), v21 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21 + 1;
    uint64_t v104 = (double *)v19;
    uint64_t v22 = &v19[56 * v21];
    *((void *)v22 + 4) = v10;
    *((void *)v22 + 5) = v12;
    *((void *)v22 + 6) = v13;
    *((void *)v22 + 7) = v15;
    *((void *)v22 + 8) = v16;
    *((void *)v22 + 9) = v18;
    v22[80] = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v104 = _swiftEmptyArrayStorage;
  }
  uint64_t v23 = (_OWORD *)(v0 + 72);
  uint64_t v24 = qword_100091690;
  id v25 = *(id *)(v0 + 328);
  if (v24 != -1)
  {
    swift_once();
    id v25 = *(id *)(v0 + 328);
  }
  uint64_t v100 = v0 + 288;
  uint64_t v102 = v0 + 296;
  uint64_t v86 = *(void *)(v0 + 344);
  uint64_t v88 = *(void *)(v0 + 392);
  uint64_t v89 = *(void *)(v0 + 336);
  uint64_t v91 = v25;
  long long v26 = *(_OWORD *)&qword_10009A710;
  *uint64_t v23 = xmmword_10009A700;
  *(_OWORD *)(v0 + 88) = v26;
  *(_OWORD *)(v0 + 104) = xmmword_10009A720;
  *(void *)(v0 + 120) = qword_10009A730;
  id v27 = [v25 accessories:v86];
  unint64_t v28 = sub_10006F668();

  *(_OWORD *)(v0 + 216) = *v23;
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 88);
  uint64_t v29 = *(void *)(v0 + 112);
  *(void *)(v0 + 272) = *(void *)(v0 + 104);
  sub_100004B8C(v0 + 216);
  sub_100004BB8(v93);
  sub_100004BB8(v95);
  sub_100004BB8(v97);
  sub_100004B40(v29);
  uint64_t v30 = sub_100025574(v28, v0 + 72);
  sub_100004BE4(v0 + 216);
  sub_100004C10(v93);
  sub_100004C10(v95);
  sub_100004C10(v97);
  sub_100004C3C(v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_100003C80((char *)_swiftEmptyArrayStorage, (unint64_t)v30, v88, v89, v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*((void *)v31 + 2))
  {
    uint64_t v32 = sub_10001CC58((uint64_t)v31);
    char v34 = v33;
    swift_bridgeObjectRelease();
    if (v34)
    {
LABEL_14:
      uint64_t v36 = 0x6964656D2E697161;
      unint64_t v35 = 0xEA00000000006D75;
    }
    else
    {
      unint64_t v35 = 0xE700000000000000;
      uint64_t v36 = 0x776F6C2E697161;
      switch(v32)
      {
        case 1:
          break;
        case 2:
        case 3:
        case 4:
          uint64_t v36 = 0x6964656D2E697161;
          unint64_t v35 = 0xEA00000000006D75;
          break;
        case 5:
          unint64_t v35 = 0xE800000000000000;
          uint64_t v36 = 0x686769682E697161;
          break;
        default:
          goto LABEL_14;
      }
    }
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v37 = sub_10006F518();
    uint64_t v39 = v38;
    uint64_t v40 = sub_10001CEDC(v32, v34 & 1);
    uint64_t v42 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      unint64_t v43 = (char *)v104;
    }
    else {
      unint64_t v43 = sub_10000C37C(0, *((void *)v104 + 2) + 1, 1, (char *)v104);
    }
    unint64_t v45 = *((void *)v43 + 2);
    unint64_t v44 = *((void *)v43 + 3);
    if (v45 >= v44 >> 1) {
      unint64_t v43 = sub_10000C37C((char *)(v44 > 1), v45 + 1, 1, v43);
    }
    *((void *)v43 + 2) = v45 + 1;
    uint64_t v104 = (double *)v43;
    unint64_t v46 = &v43[56 * v45];
    *((void *)v46 + 4) = v36;
    *((void *)v46 + 5) = v35;
    *((void *)v46 + 6) = v37;
    *((void *)v46 + 7) = v39;
    *((void *)v46 + 8) = v40;
    *((void *)v46 + 9) = v42;
    v46[80] = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = (_OWORD *)(v0 + 16);
  uint64_t v48 = *(void **)(v0 + 328);
  swift_bridgeObjectRelease();
  uint64_t v49 = qword_100091698;
  id v50 = v48;
  if (v49 != -1) {
    swift_once();
  }
  unint64_t v92 = *(void *)(v0 + 344);
  uint64_t v94 = *(void *)(v0 + 392);
  uint64_t v51 = *(void **)(v0 + 328);
  uint64_t v96 = *(void *)(v0 + 336);
  uint64_t v98 = v51;
  uint64_t v52 = qword_10009A768;
  long long v54 = xmmword_10009A748;
  long long v53 = xmmword_10009A758;
  _OWORD *v47 = xmmword_10009A738;
  *(_OWORD *)(v0 + 32) = v54;
  *(_OWORD *)(v0 + 48) = v53;
  *(void *)(v0 + 64) = v52;
  id v55 = [v51 accessories];
  unint64_t v56 = sub_10006F668();

  *(_OWORD *)(v0 + 184) = *v47;
  *(_OWORD *)(v0 + 280) = *(_OWORD *)(v0 + 32);
  uint64_t v57 = *(void *)(v0 + 56);
  *(void *)(v0 + 296) = *(void *)(v0 + 48);
  sub_100004B8C(v0 + 184);
  sub_100004BB8(v0 + 280);
  sub_100004BB8(v100);
  sub_100004BB8(v102);
  sub_100004B40(v57);
  uint64_t v58 = sub_100025574(v56, v0 + 16);
  sub_100004BE4(v0 + 184);
  sub_100004C10(v0 + 280);
  sub_100004C10(v100);
  sub_100004C10(v102);
  sub_100004C3C(v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v59 = sub_100034060(_swiftEmptyArrayStorage, (unint64_t)v58, v94, v96, v92);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();

  if (*((void *)v59 + 2))
  {
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v60 = sub_10006F518();
    uint64_t v62 = v61;
    uint64_t v63 = sub_10001D200((uint64_t)v59);
    uint64_t v65 = v64;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v66 = (char *)v104;
    }
    else {
      uint64_t v66 = sub_10000C37C(0, *((void *)v104 + 2) + 1, 1, (char *)v104);
    }
    unint64_t v68 = *((void *)v66 + 2);
    unint64_t v67 = *((void *)v66 + 3);
    if (v68 >= v67 >> 1) {
      uint64_t v66 = sub_10000C37C((char *)(v67 > 1), v68 + 1, 1, v66);
    }
    *((void *)v66 + 2) = v68 + 1;
    uint64_t v69 = &v66[56 * v68];
    strcpy(v69 + 32, "humidity.fill");
    *((_WORD *)v69 + 23) = -4864;
    *((void *)v69 + 6) = v60;
    *((void *)v69 + 7) = v62;
    *((void *)v69 + 8) = v63;
    *((void *)v69 + 9) = v65;
    v69[80] = 1;
    uint64_t v70 = (uint64_t)v66;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v70 = (uint64_t)v104;
  }
  int64_t v71 = *(void *)(v0 + 352);
  swift_bridgeObjectRelease();
  int64_t v72 = sub_10005993C(v71, v70);
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  unint64_t v78 = v77;
  if ((v77 & 1) == 0) {
    goto LABEL_30;
  }
  sub_10006FD08();
  swift_unknownObjectRetain_n();
  uint64_t v81 = (double *)swift_dynamicCastClass();
  if (!v81)
  {
    swift_unknownObjectRelease();
    uint64_t v81 = _swiftEmptyArrayStorage;
  }
  uint64_t v82 = *((void *)v81 + 2);
  swift_release();
  if (__OFSUB__(v78 >> 1, v76))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v82 != (v78 >> 1) - v76)
  {
LABEL_45:
    swift_unknownObjectRelease();
LABEL_30:
    uint64_t v79 = *(void **)(v0 + 328);
    uint64_t v80 = sub_100051214(v72, v74, v76, v78);

    goto LABEL_37;
  }
  uint64_t v83 = *(void **)(v0 + 328);
  uint64_t v80 = (double *)swift_dynamicCastClass();
  swift_unknownObjectRelease();

  if (v80) {
    goto LABEL_38;
  }
  uint64_t v80 = _swiftEmptyArrayStorage;
LABEL_37:
  swift_unknownObjectRelease();
LABEL_38:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v84 = *(uint64_t (**)(double *))(v0 + 8);
  return v84(v80);
}

uint64_t sub_10001AC10(uint64_t a1)
{
  sub_100004960(&qword_100091E60);
  ((void (*)(void))__chkstk_darwin)();
  id v3 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006EC08();
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v86 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100004960(&qword_100091E88);
  id v5 = *(void (**)(char *, uint64_t))(v87 - 8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_100091E78);
  uint64_t v9 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v77 - v13;
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v77 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    double v19 = *(double *)(a1 + 32);
    uint64_t v20 = v18 - 1;
    uint64_t v88 = v15;
    uint64_t v81 = v5;
    if (v20)
    {
      uint64_t v22 = (double *)(a1 + 40);
      uint64_t v23 = v20;
      double v24 = v19;
      do
      {
        double v25 = *v22++;
        double v26 = v25;
        if (v25 < v24) {
          double v24 = v26;
        }
        --v23;
      }
      while (v23);
      id v27 = (double *)(a1 + 40);
      do
      {
        double v28 = *v27++;
        double v29 = v28;
        if (v19 < v28) {
          double v19 = v29;
        }
        --v20;
      }
      while (v20);
    }
    uint64_t v30 = self;
    id v31 = [v30 celsius];
    uint64_t v32 = sub_100004B50(0, &qword_100091E80);
    sub_10006E9E8();
    id v33 = [v30 celsius];
    uint64_t v85 = v32;
    sub_10006E9E8();
    sub_10001B3C0((uint64_t)v7);
    sub_10006EBE8();
    sub_10006EAA8();
    char v34 = (void *)sub_10006F828();
    uint64_t v83 = v17;
    sub_10006EA38();

    sub_10006E9F8();
    uint64_t v36 = v35;
    uint64_t v84 = v14;
    uint64_t v38 = v88 + 8;
    uint64_t v37 = *(void (**)(char *, uint64_t))(v88 + 8);
    v37(v11, v8);
    uint64_t v91 = v36;
    uint64_t v39 = v87;
    uint64_t v40 = sub_10006EA78();
    unint64_t v77 = v41;
    unint64_t v78 = v40;
    uint64_t v42 = (void (*)(char *, uint64_t))*((void *)v81 + 1);
    v42(v7, v39);
    sub_10001B3C0((uint64_t)v7);
    sub_10006EBE8();
    sub_10006EAA8();
    uint64_t v82 = v3;
    unint64_t v43 = (void *)sub_10006F828();
    sub_10006EA38();

    sub_10006E9F8();
    uint64_t v45 = v44;
    uint64_t v79 = v11;
    uint64_t v80 = v37;
    unint64_t v46 = v11;
    uint64_t v47 = v8;
    uint64_t v48 = v8;
    unint64_t v49 = v77;
    uint64_t v88 = v38;
    v37(v46, v48);
    uint64_t v91 = v45;
    uint64_t v50 = sub_10006EA78();
    uint64_t v52 = v51;
    uint64_t v81 = v42;
    v42(v7, v39);
    if (v78 == v50 && v49 == v52)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v53 = sub_10006FCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v53 & 1) == 0)
      {
        uint64_t v91 = 0;
        unint64_t v92 = 0xE000000000000000;
        sub_10006EBE8();
        sub_10006EAA8();
        uint64_t v65 = (void *)sub_10006F828();
        uint64_t v66 = v79;
        uint64_t v56 = v47;
        sub_10006EA38();

        sub_10006E9F8();
        uint64_t v68 = v67;
        uint64_t v69 = v47;
        uint64_t v61 = v80;
        v80(v66, v69);
        uint64_t v89 = v68;
        sub_10001B3C0((uint64_t)v7);
        unint64_t v78 = sub_10001D1AC();
        unint64_t v77 = sub_10001D3A4();
        uint64_t v70 = v87;
        sub_10006F458();
        v81(v7, v70);
        uint64_t countAndFlagsBits = v90._countAndFlagsBits;
        object = v90._object;
        swift_bridgeObjectRelease();
        uint64_t v91 = countAndFlagsBits;
        unint64_t v92 = (unint64_t)object;
        v93._uint64_t countAndFlagsBits = 9666786;
        v93._object = (void *)0xA300000000000000;
        sub_10006F558(v93);
        sub_10006EBE8();
        sub_10006EAA8();
        uint64_t v73 = (void *)sub_10006F828();
        uint64_t v57 = v84;
        sub_10006EA38();

        sub_10006E9F8();
        uint64_t v75 = v74;
        v61(v66, v56);
        uint64_t v89 = v75;
        sub_10001B3C0((uint64_t)v7);
        sub_10006F458();
        v81(v7, v70);
        sub_10006F558(v90);
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    uint64_t v91 = 0;
    unint64_t v92 = 0xE000000000000000;
    sub_10006EBE8();
    sub_10006EAA8();
    long long v54 = (void *)sub_10006F828();
    id v55 = v79;
    uint64_t v56 = v47;
    uint64_t v57 = v84;
    sub_10006EA38();

    sub_10006E9F8();
    uint64_t v59 = v58;
    uint64_t v60 = v47;
    uint64_t v61 = v80;
    v80(v55, v60);
    uint64_t v89 = v59;
    sub_10001B3C0((uint64_t)v7);
    sub_10001D1AC();
    sub_10001D3A4();
    uint64_t v62 = v87;
    sub_10006F458();
    v81(v7, v62);
    uint64_t v63 = v90._countAndFlagsBits;
    uint64_t v64 = v90._object;
    swift_bridgeObjectRelease();
    uint64_t v91 = v63;
    unint64_t v92 = (unint64_t)v64;
LABEL_19:
    v94._uint64_t countAndFlagsBits = 47810;
    v94._object = (void *)0xA200000000000000;
    sub_10006F558(v94);
    uint64_t v21 = v91;
    v61(v57, v56);
    v61(v83, v56);
    return v21;
  }
  return 0x9380E29380E2;
}

uint64_t sub_10001B3C0@<X0>(uint64_t a1@<X8>)
{
  v12[1] = a1;
  sub_100004960(&qword_100091E60);
  __chkstk_darwin();
  uint64_t v1 = sub_10006EAC8();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006EC08();
  __chkstk_darwin();
  uint64_t v5 = sub_100004960(&qword_100091E88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006EBE8();
  sub_10001D1AC();
  sub_10006EA88();
  sub_100004B50(0, &qword_100091E80);
  sub_10006EBE8();
  sub_10006EAA8();
  uint64_t v9 = (void *)sub_10006F828();
  id v10 = [self celsius];
  sub_10006F858();

  sub_10006EAB8();
  sub_10006EA98();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10001B674()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  v18[1] = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100004960(&qword_100091E58);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004960(&qword_100091E60);
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_100004960(&qword_100091E68);
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_100004960(&qword_100091E70);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = sub_100004960(&qword_100091E78);
  uint64_t v11 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [self celsius];
  sub_100004B50(0, &qword_100091E80);
  sub_10006E9E8();
  sub_10006EA18();
  sub_10006EAA8();
  sub_10001B3C0((uint64_t)v4);
  uint64_t v15 = sub_100004960(&qword_100091E88);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 0, 1, v15);
  sub_10006EBE8();
  sub_10006EA28();
  uint64_t v16 = sub_10006EA08();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void))(v11 + 8))(v13, v18[0]);
  return v16;
}

void sub_10001BA08(double **a1, void **a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
}

void sub_10001BA30(char **a1, void **a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8 = *a2;
  if (sub_10003D62C(*a2, a3))
  {
    if (qword_1000916D0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10006EC68();
    sub_100004B08(v9, (uint64_t)qword_10009A7E8);
    id v10 = v8;
    swift_bridgeObjectRetain_n();
    id v11 = v10;
    uint64_t v12 = sub_10006EC48();
    os_log_type_t v13 = sub_10006F818();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = 0x6E776F6E6B6E75;
      uint64_t v15 = swift_slowAlloc();
      v48[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)&long long v46 = sub_100022B5C(a4, a5, v48);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2080;
      id v16 = [v11 service];
      if (v16
        && (uint64_t v17 = v16, v18 = [v16 accessory], v17, v18))
      {
        id v19 = [v18 name];

        uint64_t v14 = sub_10006F4F8();
        unint64_t v21 = v20;
      }
      else
      {
        unint64_t v21 = 0xE700000000000000;
      }
      *(void *)&long long v46 = sub_100022B5C(v14, v21, v48);
      sub_10006F868();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "{%s} air quality sensor '%s' did not respond", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  if (qword_1000916D0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_10006EC68();
  sub_100004B08(v22, (uint64_t)qword_10009A7E8);
  id v23 = v8;
  swift_bridgeObjectRetain_n();
  id v24 = v23;
  double v25 = sub_10006EC48();
  os_log_type_t v26 = sub_10006F818();
  id v27 = &LockScreenDataModel;
  if (!os_log_type_enabled(v25, v26))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_28;
  }
  uint64_t v44 = a1;
  uint64_t v28 = 0x6E776F6E6B6E75;
  uint64_t v29 = swift_slowAlloc();
  uint64_t v30 = (void *)swift_slowAlloc();
  unint64_t v43 = (void *)swift_slowAlloc();
  id v50 = v43;
  *(_DWORD *)uint64_t v29 = 136315650;
  swift_bridgeObjectRetain();
  v48[0] = sub_100022B5C(a4, a5, (uint64_t *)&v50);
  sub_10006F868();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v29 + 12) = 2080;
  id v31 = [v24 service];
  if (v31
    && (uint64_t v32 = v31, v33 = [v31 accessory], v32, v33))
  {
    id v34 = [v33 name];

    uint64_t v28 = sub_10006F4F8();
    unint64_t v36 = v35;
  }
  else
  {
    unint64_t v36 = 0xE700000000000000;
  }
  v48[0] = sub_100022B5C(v28, v36, (uint64_t *)&v50);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v29 + 22) = 2112;
  if ([v24 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v46 = 0u;
    long long v47 = 0u;
  }
  a1 = v44;
  sub_10001CBF0((uint64_t)&v46, (uint64_t)v48);
  if (!v49)
  {
    sub_100010C2C((uint64_t)v48);
    goto LABEL_26;
  }
  sub_100004B50(0, &qword_100091E50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    NSString v37 = sub_10006F4D8();
    goto LABEL_27;
  }
  NSString v37 = v45;
LABEL_27:
  v48[0] = (uint64_t)v37;
  sub_10006F868();
  *uint64_t v30 = v37;

  _os_log_impl((void *)&_mh_execute_header, v25, v26, "{%s} air quality sensor '%s' cached value is: %@", (uint8_t *)v29, 0x20u);
  sub_100004960((uint64_t *)&unk_100092030);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  id v27 = &LockScreenDataModel;
LABEL_28:
  if (objc_msgSend(v24, (SEL)v27[363].count, v43))
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v46 = 0u;
    long long v47 = 0u;
  }
  sub_10001CBF0((uint64_t)&v46, (uint64_t)v48);
  if (v49)
  {
    sub_100004B50(0, &qword_100091E48);
    if (swift_dynamicCast())
    {
      id v38 = v50;
      id v39 = [v50 integerValue];

      uint64_t v40 = *a1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_10000C5B4(0, *((void *)v40 + 2) + 1, 1, v40);
      }
      unint64_t v42 = *((void *)v40 + 2);
      unint64_t v41 = *((void *)v40 + 3);
      if (v42 >= v41 >> 1) {
        uint64_t v40 = sub_10000C5B4((char *)(v41 > 1), v42 + 1, 1, v40);
      }
      *((void *)v40 + 2) = v42 + 1;
      *(void *)&v40[8 * v42 + 32] = v39;
      *a1 = v40;
    }
  }
  else
  {
    sub_100010C2C((uint64_t)v48);
  }
}

void sub_10001C190(double **a1, void **a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
}

void sub_10001C1B8(double **a1, void **a2, uint64_t a3, uint64_t a4, unint64_t a5, const char *a6, char *a7)
{
  uint64_t v12 = *a2;
  if (sub_10003D62C(*a2, a3))
  {
    if (qword_1000916D0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10006EC68();
    sub_100004B08(v13, (uint64_t)qword_10009A7E8);
    id v14 = v12;
    swift_bridgeObjectRetain_n();
    id v15 = v14;
    id v16 = sub_10006EC48();
    os_log_type_t v17 = sub_10006F818();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      v56[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)&long long v54 = sub_100022B5C(a4, a5, v56);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      id v19 = [v15 service];
      format = a7;
      if (v19
        && (unint64_t v20 = v19, v21 = [v19 accessory], v20, v21))
      {
        id v22 = [v21 name];

        uint64_t v23 = sub_10006F4F8();
        unint64_t v25 = v24;
      }
      else
      {
        unint64_t v25 = 0xE700000000000000;
        uint64_t v23 = 0x6E776F6E6B6E75;
      }
      *(void *)&long long v54 = sub_100022B5C(v23, v25, v56);
      sub_10006F868();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, format, (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  if (qword_1000916D0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_10006EC68();
  sub_100004B08(v26, (uint64_t)qword_10009A7E8);
  id v27 = v12;
  swift_bridgeObjectRetain_n();
  id v28 = v27;
  uint64_t v29 = sub_10006EC48();
  os_log_type_t v30 = sub_10006F818();
  if (!os_log_type_enabled(v29, v30))
  {

    swift_bridgeObjectRelease_n();
    uint64_t v40 = &LockScreenDataModel;
    goto LABEL_28;
  }
  uint64_t v49 = a6;
  formata = (char *)a1;
  uint64_t v31 = 0x6E776F6E6B6E75;
  uint64_t v32 = swift_slowAlloc();
  id v33 = (void *)swift_slowAlloc();
  uint64_t v48 = (void *)swift_slowAlloc();
  id v53 = v48;
  *(_DWORD *)uint64_t v32 = 136315650;
  swift_bridgeObjectRetain();
  v56[0] = sub_100022B5C(a4, a5, (uint64_t *)&v53);
  sub_10006F868();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v32 + 12) = 2080;
  id v34 = [v28 service];
  if (v34
    && (unint64_t v35 = v34, v36 = [v34 accessory], v35, v36))
  {
    id v37 = [v36 name];

    uint64_t v31 = sub_10006F4F8();
    unint64_t v39 = v38;
  }
  else
  {
    unint64_t v39 = 0xE700000000000000;
  }
  v56[0] = sub_100022B5C(v31, v39, (uint64_t *)&v53);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 22) = 2112;
  uint64_t v40 = &LockScreenDataModel;
  if ([v28 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  sub_10001CBF0((uint64_t)&v54, (uint64_t)v56);
  if (!v57)
  {
    sub_100010C2C((uint64_t)v56);
    goto LABEL_26;
  }
  sub_100004B50(0, &qword_100091E50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:
    NSString v41 = sub_10006F4D8();
    goto LABEL_27;
  }
  NSString v41 = v52;
LABEL_27:
  v56[0] = (uint64_t)v41;
  sub_10006F868();
  *id v33 = v41;

  _os_log_impl((void *)&_mh_execute_header, v29, v30, v49, (uint8_t *)v32, 0x20u);
  sub_100004960((uint64_t *)&unk_100092030);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  a1 = (double **)formata;
LABEL_28:
  if (objc_msgSend(v28, (SEL)v40[363].count, v48))
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  sub_10001CBF0((uint64_t)&v54, (uint64_t)v56);
  if (v57)
  {
    sub_100004B50(0, &qword_100091E48);
    if (swift_dynamicCast())
    {
      id v42 = v53;
      [v53 doubleValue];
      double v44 = v43;

      uint64_t v45 = *a1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v45 = sub_10000C4A4(0, *((void *)v45 + 2) + 1, 1, v45);
      }
      unint64_t v47 = *((void *)v45 + 2);
      unint64_t v46 = *((void *)v45 + 3);
      if (v47 >= v46 >> 1) {
        uint64_t v45 = sub_10000C4A4((double *)(v46 > 1), v47 + 1, 1, v45);
      }
      *((void *)v45 + 2) = v47 + 1;
      v45[v47 + 4] = v44;
      *a1 = v45;
    }
  }
  else
  {
    sub_100010C2C((uint64_t)v56);
  }
}

uint64_t sub_10001C924()
{
  sub_100004960(&qword_1000917F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100072A60;
  if (qword_100091688 != -1) {
    swift_once();
  }
  uint64_t v1 = *((void *)&xmmword_10009A6C8 + 1);
  uint64_t v2 = qword_10009A6D8;
  uint64_t v3 = unk_10009A6E0;
  long long v4 = xmmword_10009A6E8;
  uint64_t v5 = qword_10009A6F8;
  *(void *)(v0 + 32) = xmmword_10009A6C8;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v0 + 64) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v4 + 1));
  if (qword_100091690 != -1) {
    swift_once();
  }
  uint64_t v6 = *((void *)&xmmword_10009A700 + 1);
  uint64_t v7 = qword_10009A710;
  uint64_t v8 = unk_10009A718;
  long long v9 = xmmword_10009A720;
  uint64_t v10 = qword_10009A730;
  *(void *)(v0 + 88) = xmmword_10009A700;
  *(void *)(v0 + 96) = v6;
  *(void *)(v0 + 104) = v7;
  *(void *)(v0 + 112) = v8;
  *(_OWORD *)(v0 + 120) = v9;
  *(void *)(v0 + 136) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v9 + 1));
  if (qword_100091698 != -1) {
    swift_once();
  }
  uint64_t v11 = *((void *)&xmmword_10009A738 + 1);
  long long v12 = xmmword_10009A748;
  long long v13 = xmmword_10009A758;
  uint64_t v14 = qword_10009A768;
  *(void *)(v0 + 144) = xmmword_10009A738;
  *(void *)(v0 + 152) = v11;
  *(_OWORD *)(v0 + 160) = v12;
  *(_OWORD *)(v0 + 176) = v13;
  *(void *)(v0 + 192) = v14;
  qword_10009A6C0 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_100004B40(*((uint64_t *)&v13 + 1));
}

void sub_10001CB0C()
{
  *(void *)&xmmword_10009A6C8 = 0xD000000000000013;
  *((void *)&xmmword_10009A6C8 + 1) = 0x8000000100077AB0;
  qword_10009A6D8 = (uint64_t)&off_10008B660;
  unk_10009A6E0 = &_swiftEmptyArrayStorage;
  *((void *)&xmmword_10009A6E8 + 1) = 0;
  qword_10009A6F8 = 0;
  *(void *)&xmmword_10009A6E8 = &off_10008B688;
}

void sub_10001CB58()
{
  *(void *)&xmmword_10009A700 = 0xD000000000000013;
  *((void *)&xmmword_10009A700 + 1) = 0x8000000100077BC0;
  qword_10009A710 = (uint64_t)&off_100089C80;
  unk_10009A718 = &_swiftEmptyArrayStorage;
  *((void *)&xmmword_10009A720 + 1) = 0;
  qword_10009A730 = 0;
  *(void *)&xmmword_10009A720 = &off_100089CA8;
}

void sub_10001CBA4()
{
  *(void *)&xmmword_10009A738 = 0xD000000000000010;
  *((void *)&xmmword_10009A738 + 1) = 0x8000000100077A50;
  *(void *)&xmmword_10009A748 = &off_10008B6B0;
  *((void *)&xmmword_10009A748 + 1) = &_swiftEmptyArrayStorage;
  *((void *)&xmmword_10009A758 + 1) = 0;
  qword_10009A768 = 0;
  *(void *)&xmmword_10009A758 = &off_10008B6D8;
}

uint64_t sub_10001CBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004960(&qword_100091810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001CC58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    int64_t v7 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v7) {
      goto LABEL_11;
    }
LABEL_18:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v1; ++i)
  {
    double v6 = *(double *)(a1 + 8 * i + 32);
    if (v6 != 0.0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10002316C(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = *(void *)&_swiftEmptyArrayStorage[2];
      unint64_t v4 = *(void *)&_swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_10002316C(v4 > 1, v5 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = v5 + 1;
      _swiftEmptyArrayStorage[v5 + 4] = v6;
    }
  }
  swift_bridgeObjectRelease();
  int64_t v7 = *(void *)&_swiftEmptyArrayStorage[2];
  if (!v7) {
    goto LABEL_18;
  }
LABEL_11:
  sub_10002314C(0, v7, 0);
  uint64_t v8 = 0;
  unint64_t v9 = *(void *)&_swiftEmptyArrayStorage[2];
  unint64_t v10 = v9;
  do
  {
    uint64_t v11 = *(void *)&_swiftEmptyArrayStorage[v8 + 4];
    unint64_t v12 = *(void *)&_swiftEmptyArrayStorage[3];
    unint64_t v13 = v10 + 1;
    if (v10 >= v12 >> 1) {
      sub_10002314C(v12 > 1, v10 + 1, 1);
    }
    ++v8;
    *(void *)&_swiftEmptyArrayStorage[2] = v13;
    _swiftEmptyArrayStorage[v10++ + 4] = (double)v11;
  }
  while (v7 != v8);
  unint64_t v14 = v7 + v9;
  if (v7 + v9 < 2)
  {
    unint64_t v15 = 0;
    double v16 = 0.0;
    do
    {
LABEL_22:
      double v20 = _swiftEmptyArrayStorage[v15++ + 4];
      double v16 = v16 + v20;
    }
    while (v13 != v15);
    goto LABEL_23;
  }
  unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = &_swiftEmptyArrayStorage[5];
  double v16 = 0.0;
  unint64_t v19 = v14 & 0xFFFFFFFFFFFFFFFELL;
  do
  {
    double v16 = v16 + *(v18 - 1) + *v18;
    v18 += 2;
    v19 -= 2;
  }
  while (v19);
  if (v14 != v15) {
    goto LABEL_22;
  }
LABEL_23:
  swift_release();
  uint64_t result = swift_release();
  double v21 = round(fmax(fmin(v16 / (double)v7, 5.0), 1.0));
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v21 < 9.22337204e18) {
    return (uint64_t)v21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10001CEDC(uint64_t a1, char a2)
{
  uint64_t v4 = 0x9380E29380E2;
  uint64_t v5 = sub_10006EC08();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10006F4B8();
  __chkstk_darwin(v6 - 8);
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        sub_10006F4A8();
        sub_10006EBF8();
        uint64_t v4 = sub_10006F518();
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t sub_10001D0B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0x9380E29380E2;
  }
  if (v1 == 1)
  {
    uint64_t v2 = 0;
    double v3 = 0.0;
  }
  else
  {
    uint64_t v2 = v1 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v5 = (double *)(a1 + 40);
    double v3 = 0.0;
    uint64_t v6 = v1 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v3 = v3 + *(v5 - 1) + *v5;
      v5 += 2;
      v6 -= 2;
    }
    while (v6);
    if (v1 == v2) {
      goto LABEL_10;
    }
  }
  uint64_t v7 = v1 - v2;
  uint64_t v8 = (double *)(a1 + 8 * v2 + 32);
  do
  {
    double v9 = *v8++;
    double v3 = v3 + v9;
    --v7;
  }
  while (v7);
LABEL_10:
  double v10 = v3 / (double)v1;
  if (v10 < 15.0) {
    return 0x656D6F6D72656874;
  }
  if (v10 >= 21.0) {
    return 0xD000000000000010;
  }
  return 0xD000000000000012;
}

unint64_t sub_10001D1AC()
{
  unint64_t result = qword_100091E90;
  if (!qword_100091E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100091E90);
  }
  return result;
}

uint64_t sub_10001D200(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    goto LABEL_27;
  }
  double v2 = *(double *)(result + 32);
  double v3 = v2;
  uint64_t v4 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v5 = (double *)(result + 40);
    double v3 = *(double *)(result + 32);
    do
    {
      double v6 = *v5++;
      double v7 = v6;
      if (v6 < v3) {
        double v3 = v7;
      }
      --v4;
    }
    while (v4);
  }
  double v8 = round(v3);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = v1 - 1;
  if (v9)
  {
    double v10 = (double *)(result + 40);
    do
    {
      double v11 = *v10++;
      double v12 = v11;
      if (v2 < v11) {
        double v2 = v12;
      }
      --v9;
    }
    while (v9);
  }
  double v13 = round(v2);
  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0) {
    goto LABEL_24;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    return result;
  }
  if (*(uint64_t *)&v8 == *(uint64_t *)&v13) {
    return sub_10006FCC8();
  }
  uint64_t v14 = sub_10006FCC8();
  v15._uint64_t countAndFlagsBits = 9666786;
  v15._object = (void *)0xA300000000000000;
  sub_10006F558(v15);
  v16._uint64_t countAndFlagsBits = sub_10006FCC8();
  sub_10006F558(v16);
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_10001D3A4()
{
  unint64_t result = qword_100091EA0;
  if (!qword_100091EA0)
  {
    sub_1000049A4(&qword_100091E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091EA0);
  }
  return result;
}

uint64_t LockScreenDataModel.reloadCharacteristics(matching:for:fetchId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  return _swift_task_switch(sub_10001D428, 0, 0);
}

uint64_t sub_10001D428()
{
  id v28 = v0;
  if (qword_1000916C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = sub_10006EC68();
  sub_100004B08(v2, (uint64_t)qword_10009A7B8);
  id v3 = v1;
  swift_bridgeObjectRetain_n();
  id v4 = v3;
  uint64_t v5 = sub_10006EC48();
  os_log_type_t v6 = sub_10006F7E8();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = v0[8];
  if (v7)
  {
    uint64_t v9 = v0[7];
    uint64_t v26 = v0[6];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    swift_bridgeObjectRetain();
    v0[3] = sub_100022B5C(v9, v8, &v27);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    if (v26)
    {
      id v11 = [v4 name];
      uint64_t v12 = sub_10006F4F8();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE400000000000000;
      uint64_t v12 = 1819047278;
    }
    v0[4] = sub_100022B5C(v12, v14, &v27);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  if (v0[6])
  {
    uint64_t v16 = v0[8];
    uint64_t v15 = v0[9];
    uint64_t v17 = v0[7];
    uint64_t v18 = v0[5];
    unint64_t v19 = (void *)swift_task_alloc();
    v0[10] = v19;
    uint64_t v19[2] = v15;
    v19[3] = v18;
    v19[4] = v4;
    v19[5] = v17;
    v19[6] = v16;
    id v20 = v4;
    double v21 = (void *)swift_task_alloc();
    v0[11] = v21;
    uint64_t v22 = sub_100004960(&qword_100091EB0);
    void *v21 = v0;
    v21[1] = sub_10001D7F0;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000002CLL, 0x8000000100077C70, sub_100025564, v19, v22);
  }
  else
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_10006FAC8()) {
      sub_100025208((unint64_t)_swiftEmptyArrayStorage);
    }
    else {
      uint64_t v23 = &_swiftEmptySetSingleton;
    }
    unint64_t v24 = (uint64_t (*)(void *))v0[1];
    return v24(v23);
  }
}

uint64_t sub_10001D7F0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10001D908, 0, 0);
}

uint64_t sub_10001D908()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

double *LockScreenDataModel.characteristics(matching:for:filterOutHiddenStatusAccessories:)(uint64_t a1, id a2)
{
  if (!a2) {
    return _swiftEmptyArrayStorage;
  }
  id v3 = [a2 accessories];
  sub_100004B50(0, (unint64_t *)&qword_1000917F8);
  unint64_t v4 = sub_10006F668();

  long long v12 = *(_OWORD *)a1;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = v5;
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 32);
  sub_100004B8C((uint64_t)&v12);
  sub_100004BB8((uint64_t)&v11);
  sub_100004BB8((uint64_t)&v10);
  sub_100004BB8((uint64_t)&v9);
  sub_100004B40(v6);
  BOOL v7 = sub_100025574(v4, a1);
  sub_100004BE4((uint64_t)&v12);
  sub_100004C10((uint64_t)&v11);
  sub_100004C10((uint64_t)&v10);
  sub_100004C10((uint64_t)&v9);
  sub_100004C3C(v6);
  swift_bridgeObjectRelease();
  return v7;
}

double CharacteristicFetchSpecification.init(loggingName:serviceKinds:associatedServiceKinds:characteristicKind:processingBlock:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  sub_100004960(&qword_100091EB8);
  uint64_t v16 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v16 + 16) = xmmword_100070910;
  *(unsigned char *)(v16 + 32) = a5;
  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = v16;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t CharacteristicFetchSpecification.init(loggingName:serviceKinds:associatedServiceKinds:characteristicKinds:processingBlock:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t sub_10001DB34(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6)
{
  v17[1] = a2;
  uint64_t v11 = sub_100004960(&qword_100091F20);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  *(void *)(v15 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  swift_bridgeObjectRetain();
  LockScreenDataModel.reloadCharacteristics(matching:for:fetchId:completion:)(a3, a4, a5, a6, (void (*)(void, void *))sub_1000263B4, v15);
  return swift_release();
}

uint64_t sub_10001DCB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_1000916C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10006EC68();
  sub_100004B08(v7, (uint64_t)qword_10009A7B8);
  swift_bridgeObjectRetain_n();
  unint64_t v8 = sub_10006EC48();
  os_log_type_t v9 = sub_10006F7E8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_100022B5C(a3, a4, &v21);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_5;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a1)
    {
LABEL_5:
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_errorRetain();
      uint64_t v11 = sub_10006EC48();
      os_log_type_t v12 = sub_10006F7E8();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136315394;
        swift_bridgeObjectRetain();
        sub_100022B5C(a3, a4, &v21);
        sub_10006F868();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v13 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v14 = sub_10006FD58();
        sub_100022B5C(v14, v15, &v21);
        sub_10006F868();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "...{%s} returned error %s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_bridgeObjectRelease_n();
        swift_errorRelease();
        swift_errorRelease();
      }
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_10006EC48();
  os_log_type_t v17 = sub_10006F7E8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    sub_100022B5C(a3, a4, &v21);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "...{%s} returned NO error", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_12:
  uint64_t v21 = a2;
  swift_bridgeObjectRetain();
  sub_100004960(&qword_100091F20);
  return sub_10006F6D8();
}

uint64_t LockScreenDataModel.reloadCharacteristics(matching:for:fetchId:completion:)(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void (*a5)(void, void *), uint64_t a6)
{
  uint64_t v193 = a6;
  uint64_t v11 = sub_10006EC68();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v178 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  os_log_type_t v17 = (char *)&v178 - v16;
  os_log_t v188 = (os_log_t)sub_10006EB88();
  isa = (double *)v188[-1].isa;
  __chkstk_darwin(v188);
  v199 = (char *)&v178 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000916C0 != -1) {
    swift_once();
  }
  uint64_t v190 = v11;
  uint64_t v19 = sub_100004B08(v11, (uint64_t)qword_10009A7B8);
  swift_bridgeObjectRetain_n();
  v196 = (uint8_t *)v19;
  id v20 = sub_10006EC48();
  os_log_type_t v21 = sub_10006F7E8();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v189 = v12;
  v198 = v15;
  v197 = v17;
  v192 = a5;
  if (v22)
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    double aBlock = COERCE_DOUBLE(swift_slowAlloc());
    *(_DWORD *)uint64_t v23 = 136315138;
    swift_bridgeObjectRetain();
    v206 = (double *)sub_100022B5C(a3, a4, (uint64_t *)&aBlock);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v24 = sub_10006EC48();
  int v25 = sub_10006F7E8();
  BOOL v26 = os_log_type_enabled(v24, (os_log_type_t)v25);
  v195 = (uint8_t *)a3;
  if (v26)
  {
    LODWORD(v185) = v25;
    os_log_t v186 = v24;
    v187 = a2;
    uint64_t v27 = swift_slowAlloc();
    double v184 = COERCE_DOUBLE(swift_slowAlloc());
    double aBlock = v184;
    *(_DWORD *)uint64_t v27 = 136315394;
    swift_bridgeObjectRetain();
    v206 = (double *)sub_100022B5C(a3, a4, (uint64_t *)&aBlock);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    int64_t v28 = *(void *)(a1 + 16);
    uint64_t v29 = _swiftEmptyArrayStorage;
    if (v28)
    {
      v206 = _swiftEmptyArrayStorage;
      sub_10002318C(0, v28, 0);
      uint64_t v29 = v206;
      uint64_t v183 = a1;
      os_log_type_t v30 = (uint64_t *)(a1 + 40);
      do
      {
        uint64_t v32 = *(v30 - 1);
        uint64_t v31 = *v30;
        v206 = v29;
        unint64_t v34 = *((void *)v29 + 2);
        unint64_t v33 = *((void *)v29 + 3);
        swift_bridgeObjectRetain();
        if (v34 >= v33 >> 1)
        {
          sub_10002318C(v33 > 1, v34 + 1, 1);
          uint64_t v29 = v206;
        }
        v30 += 7;
        *((void *)v29 + 2) = v34 + 1;
        unint64_t v35 = &v29[2 * v34];
        *((void *)v35 + 4) = v32;
        *((void *)v35 + 5) = v31;
        --v28;
      }
      while (v28);
      a3 = (uint64_t)v195;
      a1 = v183;
    }
    v206 = v29;
    sub_100004960(&qword_100091C90);
    sub_10002643C(&qword_100091ED0, &qword_100091C90);
    uint64_t v36 = sub_10006F488();
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    v206 = (double *)sub_100022B5C(v36, v38, (uint64_t *)&aBlock);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v39 = v186;
    _os_log_impl((void *)&_mh_execute_header, v186, (os_log_type_t)v185, "...{%s} will process fetch specifications %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v187;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v40 = v194;
  NSString v41 = a2;
  unint64_t v42 = sub_1000256B8(a1, v41);

  if (!(v42 >> 62))
  {
    uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v43) {
      goto LABEL_17;
    }
LABEL_102:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    {
      v173 = &_swiftEmptySetSingleton;
      v174 = v192;
LABEL_104:
      v174(0, v173);
      return swift_bridgeObjectRelease();
    }
LABEL_107:
    uint64_t v175 = sub_10006FAC8();
    v174 = v192;
    if (v175)
    {
      sub_100025208((unint64_t)_swiftEmptyArrayStorage);
      v173 = v176;
    }
    else
    {
      v173 = &_swiftEmptySetSingleton;
    }
    goto LABEL_104;
  }
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_10006FAC8();
  swift_bridgeObjectRelease();
  if (!v43) {
    goto LABEL_102;
  }
LABEL_17:
  if (v43 < 1)
  {
    __break(1u);
    goto LABEL_107;
  }
  os_log_t v194 = v41;
  uint64_t v183 = v42 >> 62;
  unint64_t v44 = v42 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  uint64_t v45 = 0;
  do
  {
    if (v44) {
      double v46 = COERCE_DOUBLE(sub_10006F9F8());
    }
    else {
      *(void *)&double v46 = *(id *)(v42 + 8 * v45 + 32);
    }
    double v47 = v46;
    ++v45;
    double aBlock = v46;
    sub_10001FC90((void **)&aBlock, a3, a4, v42);
  }
  while (v43 != v45);
  swift_bridgeObjectRelease();
  double aBlock = COERCE_DOUBLE(_swiftEmptyArrayStorage);
  uint64_t v48 = self;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v43; ++i)
  {
    if (v44) {
      id v50 = (id)sub_10006F9F8();
    }
    else {
      id v50 = *(id *)(v42 + 8 * i + 32);
    }
    uint64_t v51 = v50;
    id v52 = [v48 readRequestWithCharacteristic:v50];

    if (v52)
    {
      sub_10006F648();
      if (*(void *)((*(void *)&aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)&aBlock & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
        sub_10006F698();
      sub_10006F6B8();
      sub_10006F688();
    }
  }
  swift_bridgeObjectRelease();
  sub_100004B50(0, &qword_100091EC0);
  Class v53 = sub_10006F658().super.isa;
  swift_bridgeObjectRelease();
  os_log_t v54 = (os_log_t)[self characteristicBatchRequestWithReadRequests:v53];

  if (!v54)
  {
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_10006FAC8())
    {
      sub_100025208((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v73 = v177;
    }
    else
    {
      uint64_t v73 = &_swiftEmptySetSingleton;
    }
    v192(0, v73);
    return swift_bridgeObjectRelease();
  }
  uint64_t v55 = swift_allocObject();
  unint64_t v56 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_100025A20(v56);
  swift_bridgeObjectRelease();
  *(void *)(v55 + 16) = v57;
  v185 = (uint64_t *)(v55 + 16);
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = 0;
  uint64_t v180 = v58 + 16;
  *(double *)&uint64_t v59 = COERCE_DOUBLE(swift_allocObject());
  *(void *)(v59 + 16) = 0;
  uint64_t v179 = v59 + 16;
  uint64_t v60 = (double *)swift_allocObject();
  uint64_t v61 = (uint64_t)v195;
  *((void *)v60 + 2) = v55;
  *((void *)v60 + 3) = v61;
  *((void *)v60 + 4) = a4;
  v60[5] = *(double *)&v59;
  v211 = sub_100025C04;
  v212 = v60;
  double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
  uint64_t v208 = 1107296256;
  v209 = sub_100020E14;
  v210 = &unk_10008DDB0;
  uint64_t v62 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  v187 = (void *)v55;
  swift_retain();
  double v184 = *(double *)&v59;
  swift_retain();
  swift_release();
  [v54 setProgressHandler:v62];
  _Block_release(v62);
  uint64_t v63 = swift_allocObject();
  *(unsigned char *)(v63 + 16) = 0;
  uint64_t v64 = (unsigned char *)(v63 + 16);
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v58;
  *(void *)(v65 + 24) = v63;
  v211 = sub_100025C78;
  v212 = (void *)v65;
  double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
  uint64_t v208 = 1107296256;
  v209 = sub_100020F24;
  v210 = &unk_10008DE28;
  uint64_t v66 = _Block_copy(&aBlock);
  uint64_t v182 = v58;
  swift_retain();
  uint64_t v181 = v63;
  swift_retain();
  swift_release();
  [v54 setCompletionHandler:v66];
  _Block_release(v66);
  swift_bridgeObjectRetain_n();
  uint64_t v67 = sub_10006EC48();
  os_log_type_t v68 = sub_10006F7E8();
  BOOL v69 = os_log_type_enabled(v67, v68);
  os_log_t v186 = v54;
  if (v69)
  {
    uint64_t v70 = (uint8_t *)swift_slowAlloc();
    double aBlock = COERCE_DOUBLE(swift_slowAlloc());
    *(_DWORD *)uint64_t v70 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v71 = (uint64_t)v195;
    v206 = (double *)sub_100022B5C((uint64_t)v195, a4, (uint64_t *)&aBlock);
    os_log_t v54 = v186;
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v72 = v71;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v72 = (uint64_t)v195;
  }
  os_log_t v74 = v188;
  [v194 performBatchCharacteristicRequest:v54];
  uint64_t v75 = v199;
  sub_10006EB78();
  sub_10006EB38();
  double v77 = v76;
  uint64_t v79 = isa + 1;
  unint64_t v78 = (void (*)(char *, os_log_t))*((void *)isa + 1);
  v78(v75, v74);
  swift_beginAccess();
  uint64_t v80 = v199;
  do
  {
    sub_10006EB78();
    sub_10006EB38();
    double v82 = v81;
    v78(v80, v74);
    if (v82 - v77 >= 10.0)
    {
      uint64_t v93 = v189;
      Swift::String v94 = v198;
      uint64_t v95 = v190;
      (*(void (**)(char *, uint8_t *, uint64_t, double))(v189 + 16))(v198, v196, v190, v82 - v77);
      swift_bridgeObjectRetain_n();
      uint64_t v96 = v187;
      swift_retain_n();
      swift_bridgeObjectRetain();
      double v97 = v184;
      swift_retain();
      uint64_t v98 = sub_10006EC48();
      LODWORD(v196) = sub_10006F7E8();
      if (!os_log_type_enabled(v98, (os_log_type_t)v196))
      {

        swift_release_n();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
        uint64_t v101 = v96;
LABEL_81:
        swift_beginAccess();
        uint64_t v142 = *(void *)(v182 + 16);
        swift_beginAccess();
        v143 = (void *)v101[2];
        swift_errorRetain();
        swift_bridgeObjectRetain();
        v192(v142, v143);
        swift_bridgeObjectRelease();
        swift_errorRelease();

        swift_release();
        swift_release();
        goto LABEL_100;
      }
      os_log_t v194 = v98;
      uint64_t v99 = swift_slowAlloc();
      isa = (double *)swift_slowAlloc();
      v202 = isa;
      *(_DWORD *)uint64_t v99 = 136316162;
      swift_bridgeObjectRetain();
      double aBlock = COERCE_DOUBLE(sub_100022B5C(v72, a4, (uint64_t *)&v202));
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v99 + 12) = 2048;
      double aBlock = 10.0;
      sub_10006F868();
      *(_WORD *)(v99 + 22) = 2048;
      swift_beginAccess();
      double aBlock = *(double *)(*(void *)&v97 + 16);
      sub_10006F868();
      swift_release();
      v195 = (uint8_t *)v99;
      *(_WORD *)(v99 + 32) = 2048;
      if (v183)
      {
        swift_bridgeObjectRetain();
        double v100 = COERCE_DOUBLE(sub_10006FAC8());
        swift_bridgeObjectRelease();
      }
      else
      {
        double v100 = *(double *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v102 = (uint64_t)v195;
      double aBlock = v100;
      sub_10006F868();
      swift_bridgeObjectRelease();
      *(_WORD *)(v102 + 42) = 2080;
      uint64_t v103 = v185;
      swift_beginAccess();
      uint64_t v104 = *v103;
      v199 = (char *)(v104 & 0xC000000000000001);
      if ((v104 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v105 = sub_10006F938();
        if (v105)
        {
LABEL_53:
          v200 = _swiftEmptyArrayStorage;
          sub_10002318C(0, v105 & ~(v105 >> 63), 0);
          if (v199)
          {
            uint64_t v106 = sub_10006F8E8();
            char v108 = 1;
          }
          else
          {
            uint64_t v106 = sub_10002509C(v104);
            char v108 = v116 & 1;
          }
          uint64_t v203 = v106;
          uint64_t v204 = v107;
          char v205 = v108;
          if (v105 < 0)
          {
            __break(1u);
            goto LABEL_113;
          }
          uint64_t v117 = v104 & 0xFFFFFFFFFFFFFF8;
          if (v104 < 0) {
            uint64_t v117 = v104;
          }
          v197 = (char *)v117;
          do
          {
            while (1)
            {
              int64_t v124 = v203;
              uint64_t v123 = v204;
              char v125 = v205;
              sub_100024E24(v203, v204, v205, v104);
              v127 = v126;
              id v128 = [v126 description];
              uint64_t v129 = sub_10006F4F8();
              uint64_t v131 = v130;

              v132 = v200;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_10002318C(0, *((void *)v132 + 2) + 1, 1);
                v132 = v200;
              }
              unint64_t v134 = *((void *)v132 + 2);
              unint64_t v133 = *((void *)v132 + 3);
              if (v134 >= v133 >> 1)
              {
                sub_10002318C(v133 > 1, v134 + 1, 1);
                v132 = v200;
              }
              *((void *)v132 + 2) = v134 + 1;
              v135 = &v132[2 * v134];
              *((void *)v135 + 4) = v129;
              *((void *)v135 + 5) = v131;
              if (v199) {
                break;
              }
              int64_t v118 = sub_100024D40(v124, v123, v125, v104);
              uint64_t v120 = v119;
              char v122 = v121;
              sub_100025C80(v124, v123, v125);
              uint64_t v203 = v118;
              uint64_t v204 = v120;
              char v205 = v122 & 1;
              Swift::String v94 = v198;
              if (!--v105) {
                goto LABEL_79;
              }
            }
            if ((v125 & 1) == 0) {
              goto LABEL_114;
            }
            if (sub_10006F908()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            Swift::String v94 = v198;
            sub_100004960(&qword_100091EC8);
            v136 = (void (*)(double *, void))sub_10006F768();
            sub_10006F988();
            v136(&aBlock, 0);
            --v105;
          }
          while (v105);
LABEL_79:
          sub_100025C80(v203, v204, v205);
          swift_bridgeObjectRelease();
          goto LABEL_80;
        }
      }
      else
      {
        uint64_t v105 = *(void *)(v104 + 16);
        swift_bridgeObjectRetain();
        if (v105) {
          goto LABEL_53;
        }
      }
      swift_bridgeObjectRelease();
LABEL_80:
      v137 = v195;
      uint64_t v138 = sub_10006F678();
      unint64_t v140 = v139;
      swift_bridgeObjectRelease();
      double aBlock = COERCE_DOUBLE(sub_100022B5C(v138, v140, (uint64_t *)&v202));
      sub_10006F868();
      uint64_t v101 = v187;
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v141 = v194;
      _os_log_impl((void *)&_mh_execute_header, v194, (os_log_type_t)v196, "...{%s} fetch timed out after %fs, got %ld results of %ld requested, nilCharacteristics = %s", v137, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v189 + 8))(v94, v190);
      goto LABEL_81;
    }
    [self sleepForTimeInterval:0.02];
  }
  while (*v64 != 1);
  isa = v79;
  uint64_t v83 = v189;
  uint64_t v84 = v197;
  uint64_t v85 = v190;
  (*(void (**)(char *, uint8_t *, uint64_t))(v189 + 16))(v197, v196, v190);
  swift_bridgeObjectRetain_n();
  uint64_t v86 = v187;
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v87 = sub_10006EC48();
  LODWORD(v194) = sub_10006F7E8();
  if (!os_log_type_enabled(v87, (os_log_type_t)v194))
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
    goto LABEL_99;
  }
  os_log_t v188 = v87;
  uint64_t v88 = swift_slowAlloc();
  uint64_t v179 = swift_slowAlloc();
  v201[0] = v179;
  *(_DWORD *)uint64_t v88 = 136315906;
  swift_bridgeObjectRetain();
  double aBlock = COERCE_DOUBLE(sub_100022B5C(v72, a4, v201));
  sub_10006F868();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v88 + 12) = 2048;
  uint64_t v89 = v199;
  sub_10006EB78();
  sub_10006EB38();
  double v91 = v90;
  v78(v89, v74);
  double aBlock = v91 - v77;
  sub_10006F868();
  v196 = (uint8_t *)v88;
  *(_WORD *)(v88 + 22) = 2048;
  if (v183)
  {
    swift_bridgeObjectRetain();
    double v92 = COERCE_DOUBLE(sub_10006FAC8());
    swift_bridgeObjectRelease();
  }
  else
  {
    double v92 = *(double *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v109 = v196;
  double aBlock = v92;
  sub_10006F868();
  swift_bridgeObjectRelease();
  *((_WORD *)v109 + 16) = 2080;
  uint64_t v110 = v185;
  swift_beginAccess();
  uint64_t v111 = *v110;
  v199 = (char *)(v111 & 0xC000000000000001);
  if ((v111 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v112 = sub_10006F938();
    if (v112) {
      goto LABEL_58;
    }
LABEL_63:
    swift_bridgeObjectRelease();
LABEL_98:
    v165 = v196;
    uint64_t v166 = sub_10006F678();
    unint64_t v168 = v167;
    swift_bridgeObjectRelease();
    double aBlock = COERCE_DOUBLE(sub_100022B5C(v166, v168, v201));
    sub_10006F868();
    uint64_t v86 = v187;
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v169 = v188;
    _os_log_impl((void *)&_mh_execute_header, v188, (os_log_type_t)v194, "...{%s} fetch completed in %fs, got %ld results, nilCharacteristics = %s", v165, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v189 + 8))(v84, v190);
LABEL_99:
    swift_beginAccess();
    uint64_t v170 = *(void *)(v182 + 16);
    swift_beginAccess();
    v171 = (void *)v86[2];
    swift_errorRetain();
    swift_bridgeObjectRetain();
    v192(v170, v171);
    swift_bridgeObjectRelease();
    swift_errorRelease();

    swift_release();
    swift_release();
LABEL_100:
    swift_release();
    return swift_release();
  }
  uint64_t v112 = *(void *)(v111 + 16);
  swift_bridgeObjectRetain();
  if (!v112) {
    goto LABEL_63;
  }
LABEL_58:
  v202 = _swiftEmptyArrayStorage;
  sub_10002318C(0, v112 & ~(v112 >> 63), 0);
  if (v199)
  {
    uint64_t v113 = sub_10006F8E8();
    char v115 = 1;
  }
  else
  {
    uint64_t v113 = sub_10002509C(v111);
    char v115 = v144 & 1;
  }
  uint64_t v203 = v113;
  uint64_t v204 = v114;
  char v205 = v115;
  if ((v112 & 0x8000000000000000) == 0)
  {
    uint64_t v145 = v111 & 0xFFFFFFFFFFFFFF8;
    if (v111 < 0) {
      uint64_t v145 = v111;
    }
    v198 = (char *)v145;
    do
    {
      while (1)
      {
        int64_t v152 = v203;
        uint64_t v151 = v204;
        char v153 = v205;
        sub_100024E24(v203, v204, v205, v111);
        v155 = v154;
        id v156 = [v154 description];
        uint64_t v157 = sub_10006F4F8();
        uint64_t v159 = v158;

        v160 = v202;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10002318C(0, *((void *)v160 + 2) + 1, 1);
          v160 = v202;
        }
        unint64_t v162 = *((void *)v160 + 2);
        unint64_t v161 = *((void *)v160 + 3);
        if (v162 >= v161 >> 1)
        {
          sub_10002318C(v161 > 1, v162 + 1, 1);
          v160 = v202;
        }
        *((void *)v160 + 2) = v162 + 1;
        v163 = &v160[2 * v162];
        *((void *)v163 + 4) = v157;
        *((void *)v163 + 5) = v159;
        if (v199) {
          break;
        }
        int64_t v146 = sub_100024D40(v152, v151, v153, v111);
        uint64_t v148 = v147;
        char v150 = v149;
        sub_100025C80(v152, v151, v153);
        uint64_t v203 = v146;
        uint64_t v204 = v148;
        char v205 = v150 & 1;
        uint64_t v84 = v197;
        if (!--v112) {
          goto LABEL_97;
        }
      }
      if ((v153 & 1) == 0) {
        goto LABEL_115;
      }
      if (sub_10006F908()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      uint64_t v84 = v197;
      sub_100004960(&qword_100091EC8);
      v164 = (void (*)(double *, void))sub_10006F768();
      sub_10006F988();
      v164(&aBlock, 0);
      --v112;
    }
    while (v112);
LABEL_97:
    sub_100025C80(v203, v204, v205);
    swift_bridgeObjectRelease();
    goto LABEL_98;
  }
LABEL_113:
  __break(1u);
LABEL_114:
  swift_release();
  __break(1u);
LABEL_115:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_10001FC90(void **a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7 = *a1;
  if (qword_1000916C0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10006EC68();
  sub_100004B08(v8, (uint64_t)qword_10009A7B8);
  id v9 = v7;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v10 = v9;
  uint64_t v11 = sub_10006EC48();
  os_log_type_t v12 = sub_10006F7E8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315906;
    swift_bridgeObjectRetain();
    sub_100022B5C(a2, a3, &v25);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2048;
    sub_100020038((uint64_t)v10, a4);

    swift_bridgeObjectRelease();
    sub_10006F868();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 22) = 2080;
    id v14 = [v10 service];
    if (v14
      && (v15 = v14, id v16 = [v14 accessory], v15, v16))
    {
      id v17 = [v16 name];

      uint64_t v18 = sub_10006F4F8();
      unint64_t v20 = v19;
    }
    else
    {
      unint64_t v20 = 0xE700000000000000;
      uint64_t v18 = 0x6E776F6E6B6E75;
    }
    sub_100022B5C(v18, v20, &v25);
    sub_10006F868();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 32) = 2080;
    id v21 = [v10 localizedDescription];
    uint64_t v22 = sub_10006F4F8();
    unint64_t v24 = v23;

    sub_100022B5C(v22, v24, &v25);
    sub_10006F868();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "...{%s} [%ld] will fetch accessory '%s' characteristic: '%s'", (uint8_t *)v13, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_100020038(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)sub_10006F9F8();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      sub_100004B50(0, (unint64_t *)&qword_100091EE0);
      char v6 = sub_10006F858();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)sub_10006F9F8();
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          id v9 = v8;
          char v10 = sub_10006F858();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_10006FAC8();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_1000201D4()
{
  uint64_t v0 = sub_10006ED18();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006ED38();
  sub_100026480(&qword_100091F58, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_10006F798();
  if ((v8 & 1) == 0) {
    return v7;
  }
  sub_10006F788();
  sub_10006F7B8();
  if (v9 == v7) {
    return 0;
  }
  while (1)
  {
    uint64_t v4 = sub_10006F7D8();
    (*(void (**)(char *))(v1 + 16))(v3);
    ((void (*)(uint64_t *, void))v4)(&v7, 0);
    sub_100026480((unint64_t *)&unk_100091F60, (void (*)(uint64_t))&type metadata accessor for LayoutSubview);
    LOBYTE(v4) = sub_10006F498();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (v4) {
      break;
    }
    sub_10006F7C8();
    sub_10006F7B8();
    if (v9 == v7) {
      return 0;
    }
  }
  return v9;
}

void sub_100020448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100004B50(0, (unint64_t *)&qword_100091EE0);
  sub_100026274();
  v20[1] = (id)sub_10006F758();
  sub_100025124(a1, a2, a3, (uint64_t)v21);
  uint64_t v6 = v21[0];
  uint64_t v7 = v21[3];
  unint64_t v9 = v21[4];
  char v8 = (uint64_t (*)(id *))v21[5];
  uint64_t v18 = v21[1];
  int64_t v10 = (unint64_t)(v21[2] + 64) >> 6;
  while (v6 < 0)
  {
    if (!sub_10006F968()) {
      goto LABEL_31;
    }
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v19;
    swift_unknownObjectRelease();
    uint64_t v13 = v7;
    uint64_t v11 = v9;
    if (!v19) {
      goto LABEL_31;
    }
LABEL_29:
    v20[0] = v14;
    if (v8(v20))
    {
      sub_1000327A0(v20, v14);
    }
    else
    {
    }
    uint64_t v7 = v13;
    unint64_t v9 = v11;
  }
  if (v9)
  {
    uint64_t v11 = (v9 - 1) & v9;
    unint64_t v12 = __clz(__rbit64(v9)) | (v7 << 6);
    uint64_t v13 = v7;
LABEL_28:
    id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  int64_t v15 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v15 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    uint64_t v13 = v7 + 1;
    if (!v16)
    {
      uint64_t v13 = v7 + 2;
      if (v7 + 2 >= v10) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v7 + 3;
        if (v7 + 3 >= v10) {
          goto LABEL_31;
        }
        unint64_t v16 = *(void *)(v18 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v7 + 4;
          if (v7 + 4 >= v10) {
            goto LABEL_31;
          }
          unint64_t v16 = *(void *)(v18 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v7 + 5;
            if (v7 + 5 >= v10) {
              goto LABEL_31;
            }
            unint64_t v16 = *(void *)(v18 + 8 * v13);
            if (!v16)
            {
              uint64_t v13 = v7 + 6;
              if (v7 + 6 >= v10) {
                goto LABEL_31;
              }
              unint64_t v16 = *(void *)(v18 + 8 * v13);
              if (!v16)
              {
                uint64_t v17 = v7 + 7;
                while (v10 != v17)
                {
                  unint64_t v16 = *(void *)(v18 + 8 * v17++);
                  if (v16)
                  {
                    uint64_t v13 = v17 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_31:
                sub_1000262DC();
                swift_release();
                return;
              }
            }
          }
        }
      }
    }
LABEL_27:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_28;
  }
  __break(1u);
}

void sub_1000206D4(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10006FAC8();
    if (!v10) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_10;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v11 = 0;
  uint64_t v12 = a2 + 16;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v13 = (id)sub_10006F9F8();
    }
    else {
      id v13 = *(id *)(a1 + 8 * v11 + 32);
    }
    id v14 = v13;
    ++v11;
    uint64_t v19 = (uint64_t)v13;
    sub_1000209A8((id *)&v19, v12, a3, a4, a5);
  }
  while (v10 != v11);
LABEL_10:
  swift_bridgeObjectRelease();
  if (qword_1000916C0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10006EC68();
  sub_100004B08(v15, (uint64_t)qword_10009A7B8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  unint64_t v16 = sub_10006EC48();
  os_log_type_t v17 = sub_10006F7E8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100022B5C(a3, a4, &v20);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2048;
    swift_beginAccess();
    swift_release();
    sub_10006F868();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "...{%s} fetch progress - %ld", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

uint64_t sub_1000209A8(id *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v8 = *a1;
  if ([*a1 value])
  {
    self;
    uint64_t v9 = swift_dynamicCastObjCClass();
    swift_unknownObjectRelease();
    if (v9)
    {
      id v10 = [v8 request];
      id v11 = [v10 characteristic];

      swift_beginAccess();
      uint64_t v12 = (void *)sub_10002419C(v11);
      swift_endAccess();
    }
  }
  if (qword_1000916C0 != -1) {
    swift_once();
  }
  id v13 = (void *)(a5 + 16);
  uint64_t v14 = sub_10006EC68();
  sub_100004B08(v14, (uint64_t)qword_10009A7B8);
  id v15 = v8;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v16 = v15;
  os_log_type_t v17 = sub_10006EC48();
  os_log_type_t v18 = sub_10006F7E8();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315906;
    swift_bridgeObjectRetain();
    sub_100022B5C(a3, a4, v26);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2048;
    swift_beginAccess();
    uint64_t v20 = *(void *)(a5 + 16);
    swift_release();
    uint64_t v27 = v20;
    sub_10006F868();
    swift_release();
    *(_WORD *)(v19 + 22) = 2112;
    id v21 = [v16 request];
    id v22 = [v21 characteristic];

    uint64_t v27 = (uint64_t)v22;
    sub_10006F868();
    void *v25 = v22;

    *(_WORD *)(v19 + 32) = 2112;
    if ([v16 value])
    {
      self;
      uint64_t v23 = swift_dynamicCastObjCClass();
      if (v23)
      {
LABEL_11:
        uint64_t v27 = v23;
        sub_10006F868();
        v25[1] = v23;

        _os_log_impl((void *)&_mh_execute_header, v17, v18, "...{%s} [%ld] fetched characteristic '%@' response %@", (uint8_t *)v19, 0x2Au);
        sub_100004960((uint64_t *)&unk_100092030);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_13;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v23 = (uint64_t)sub_10006F4D8();
    goto LABEL_11;
  }

  swift_bridgeObjectRelease_n();
  swift_release_n();
LABEL_13:
  uint64_t result = swift_beginAccess();
  if (__OFADD__(*v13, 1)) {
    __break(1u);
  }
  else {
    ++*v13;
  }
  return result;
}

uint64_t sub_100020E14(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_100004B50(0, &qword_100091EF8);
  uint64_t v2 = sub_10006F668();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100020E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(void *)(a2 + 16) = a1;
  swift_errorRetain();
  swift_errorRelease();
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100020F24(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_100020F90@<X0>(id *a1@<X0>, uint64_t a2@<X1>, double **a3@<X8>)
{
  id v4 = [*a1 services];
  sub_100004B50(0, (unint64_t *)&qword_100091F10);
  unint64_t v5 = sub_10006F668();

  v104[0] = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v105 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 40);
  uint64_t v102 = *(void *)(a2 + 32);
  uint64_t v103 = v6;
  uint64_t v101 = _swiftEmptyArrayStorage;
  unint64_t v89 = v5;
  if (v5 >> 62) {
    goto LABEL_319;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_100004B8C((uint64_t)v104);
  sub_100004BB8((uint64_t)&v105);
  sub_100004BB8((uint64_t)&v103);
  sub_100004BB8((uint64_t)&v102);
  sub_100004B40(v7);
  unint64_t v9 = v89;
  swift_bridgeObjectRetain();
  uint64_t v10 = v8;
  if (!v8)
  {
LABEL_320:
    swift_bridgeObjectRelease_n();
    uint64_t v80 = _swiftEmptyArrayStorage;
    goto LABEL_321;
  }
LABEL_3:
  unint64_t v11 = 0;
  unint64_t v88 = v9 & 0xC000000000000001;
  uint64_t v84 = v9 & 0xFFFFFFFFFFFFFF8;
  unint64_t v83 = v9 + 32;
  uint64_t v85 = v102;
  uint64_t v90 = v103;
  uint64_t v91 = v105;
  uint64_t v93 = *(void *)(v105 + 16);
  uint64_t v12 = &LockScreenDataModel;
  uint64_t v86 = v10;
  unint64_t v87 = v7;
  do
  {
    while (1)
    {
      if (v88)
      {
        unint64_t v13 = v11;
        id v14 = (id)sub_10006F9F8();
      }
      else
      {
        if (v11 >= *(void *)(v84 + 16)) {
          goto LABEL_317;
        }
        unint64_t v13 = v11;
        id v14 = *(id *)(v83 + 8 * v11);
      }
      id v15 = v14;
      BOOL v16 = __OFADD__(v13, 1);
      unint64_t v17 = v13 + 1;
      if (v16) {
        goto LABEL_314;
      }
      unint64_t v92 = v17;
      swift_bridgeObjectRetain();
      id v18 = [v15 serviceType];
      sub_10006F4F8();

      unsigned int v19 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
      if (v19 == 51) {
        unint64_t v7 = 0;
      }
      else {
        unint64_t v7 = v19;
      }
      if (!v93) {
        goto LABEL_129;
      }
      unint64_t v20 = ServiceKind.rawValue.getter();
      uint64_t v22 = v21;
      BOOL v24 = v20 == ServiceKind.rawValue.getter() && v22 == v23;
      double v97 = v15;
      if (v24)
      {
        swift_bridgeObjectRetain();
LABEL_131:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v25 = sub_10006FCE8();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          if (v93 == 1)
          {
LABEL_128:
            sub_100004C10((uint64_t)&v105);
LABEL_129:
            sub_100004C10((uint64_t)&v105);

            goto LABEL_311;
          }
          uint64_t v26 = 33;
          while (1)
          {
            uint64_t v27 = v26 - 31;
            if (__OFADD__(v26 - 32, 1)) {
              goto LABEL_315;
            }
            unint64_t v28 = 0x8000000100074BC0;
            switch(*(unsigned char *)(v91 + v26))
            {
              case 1:
                uint64_t v29 = "0000003E-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 2:
                uint64_t v29 = "00000270-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 3:
                uint64_t v29 = "000000BB-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 4:
                uint64_t v29 = "0000008D-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 5:
                uint64_t v29 = "00000096-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 6:
                uint64_t v29 = "00000042-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 7:
                uint64_t v29 = "00000110-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 8:
                uint64_t v29 = "00000204-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 9:
                uint64_t v29 = "00000097-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0xA:
                uint64_t v29 = "0000007F-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0xB:
                uint64_t v29 = "00000080-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0xC:
                uint64_t v29 = "00000129-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0xD:
                uint64_t v29 = "00000237-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0xE:
                uint64_t v29 = "00000081-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0xF:
                uint64_t v29 = "00000121-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x10:
                uint64_t v29 = "00000040-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x11:
                uint64_t v29 = "000000D7-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x12:
                uint64_t v29 = "000000BA-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x13:
                uint64_t v29 = "00000041-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x14:
                uint64_t v29 = "000000BC-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x15:
                uint64_t v29 = "000000BD-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x16:
                uint64_t v29 = "00000082-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x17:
                uint64_t v29 = "000000D9-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x18:
                uint64_t v29 = "000000CF-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x19:
                uint64_t v29 = "000000CC-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x1A:
                uint64_t v29 = "00000083-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x1B:
                uint64_t v29 = "00000084-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x1C:
                uint64_t v29 = "00000043-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x1D:
                uint64_t v29 = "00000044-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x1E:
                uint64_t v29 = "00000045-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x1F:
                uint64_t v29 = "00000112-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x20:
                uint64_t v29 = "00000085-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x21:
                uint64_t v29 = "00000086-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x22:
                uint64_t v29 = "00000047-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x23:
                uint64_t v29 = "0000007E-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x24:
                uint64_t v29 = "000000B9-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x25:
                uint64_t v29 = "00000087-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x26:
                uint64_t v29 = "00000113-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x27:
                uint64_t v29 = "00000088-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x28:
                uint64_t v29 = "00000089-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x29:
                uint64_t v29 = "00000049-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x2A:
                uint64_t v29 = "00000125-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x2B:
                uint64_t v29 = "00000122-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x2C:
                uint64_t v29 = "000000D8-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x2D:
                uint64_t v29 = "0000008A-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x2E:
                uint64_t v29 = "0000004A-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x2F:
                uint64_t v29 = "000000D0-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x30:
                uint64_t v29 = "000000B7-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x31:
                uint64_t v29 = "0000008B-0000-1000-8000-0026BB765291";
                goto LABEL_72;
              case 0x32:
                uint64_t v29 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_72:
                unint64_t v28 = (unint64_t)(v29 - 32) | 0x8000000000000000;
                break;
              default:
                break;
            }
            unint64_t v30 = 0x8000000100074BC0;
            switch((char)v7)
            {
              case 1:
                uint64_t v31 = "0000003E-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 2:
                uint64_t v31 = "00000270-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 3:
                uint64_t v31 = "000000BB-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 4:
                uint64_t v31 = "0000008D-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 5:
                uint64_t v31 = "00000096-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 6:
                uint64_t v31 = "00000042-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 7:
                uint64_t v31 = "00000110-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 8:
                uint64_t v31 = "00000204-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 9:
                uint64_t v31 = "00000097-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 10:
                uint64_t v31 = "0000007F-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 11:
                uint64_t v31 = "00000080-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 12:
                uint64_t v31 = "00000129-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 13:
                uint64_t v31 = "00000237-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 14:
                uint64_t v31 = "00000081-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 15:
                uint64_t v31 = "00000121-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 16:
                uint64_t v31 = "00000040-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 17:
                uint64_t v31 = "000000D7-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 18:
                uint64_t v31 = "000000BA-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 19:
                uint64_t v31 = "00000041-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 20:
                uint64_t v31 = "000000BC-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 21:
                uint64_t v31 = "000000BD-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 22:
                uint64_t v31 = "00000082-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 23:
                uint64_t v31 = "000000D9-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 24:
                uint64_t v31 = "000000CF-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 25:
                uint64_t v31 = "000000CC-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 26:
                uint64_t v31 = "00000083-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 27:
                uint64_t v31 = "00000084-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 28:
                uint64_t v31 = "00000043-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 29:
                uint64_t v31 = "00000044-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 30:
                uint64_t v31 = "00000045-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 31:
                uint64_t v31 = "00000112-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 32:
                uint64_t v31 = "00000085-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 33:
                uint64_t v31 = "00000086-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 34:
                uint64_t v31 = "00000047-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 35:
                uint64_t v31 = "0000007E-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 36:
                uint64_t v31 = "000000B9-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 37:
                uint64_t v31 = "00000087-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 38:
                uint64_t v31 = "00000113-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 39:
                uint64_t v31 = "00000088-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 40:
                uint64_t v31 = "00000089-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 41:
                uint64_t v31 = "00000049-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 42:
                uint64_t v31 = "00000125-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 43:
                uint64_t v31 = "00000122-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 44:
                uint64_t v31 = "000000D8-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 45:
                uint64_t v31 = "0000008A-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 46:
                uint64_t v31 = "0000004A-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 47:
                uint64_t v31 = "000000D0-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 48:
                uint64_t v31 = "000000B7-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 49:
                uint64_t v31 = "0000008B-0000-1000-8000-0026BB765291";
                goto LABEL_124;
              case 50:
                uint64_t v31 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_124:
                unint64_t v30 = (unint64_t)(v31 - 32) | 0x8000000000000000;
                break;
              default:
                break;
            }
            if (v28 == v30)
            {
              id v15 = v97;
              goto LABEL_131;
            }
            char v32 = sub_10006FCE8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v32) {
              break;
            }
            ++v26;
            id v15 = v97;
            if (v27 == v93) {
              goto LABEL_128;
            }
          }
          id v15 = v97;
        }
      }
      sub_100004C10((uint64_t)&v105);
      sub_100004C10((uint64_t)&v105);
      uint64_t v33 = *(void *)(v90 + 16);
      if (!v33) {
        break;
      }
      swift_bridgeObjectRetain();
      id v34 = [v15 associatedServiceType];
      if (v34)
      {
        unint64_t v35 = v34;
        sub_10006F4F8();

        unsigned int v36 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
        if (v36 == 51) {
          unint64_t v7 = 0;
        }
        else {
          unint64_t v7 = v36;
        }
      }
      else
      {
        unint64_t v7 = 0;
      }
      unint64_t v37 = ServiceKind.rawValue.getter();
      uint64_t v39 = v38;
      if (v37 == ServiceKind.rawValue.getter() && v39 == v40)
      {
        swift_bridgeObjectRetain();
LABEL_141:
        swift_bridgeObjectRelease_n();
LABEL_143:
        sub_100004C10((uint64_t)&v103);
        sub_100004C10((uint64_t)&v103);
        break;
      }
      char v41 = sub_10006FCE8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_143;
      }
      if (v33 != 1)
      {
        uint64_t v73 = 33;
        while (1)
        {
          uint64_t v74 = v73 - 31;
          if (__OFADD__(v73 - 32, 1)) {
            goto LABEL_316;
          }
          unint64_t v75 = 0x8000000100074BC0;
          switch(*(unsigned char *)(v90 + v73))
          {
            case 1:
              double v76 = "0000003E-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 2:
              double v76 = "00000270-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 3:
              double v76 = "000000BB-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 4:
              double v76 = "0000008D-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 5:
              double v76 = "00000096-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 6:
              double v76 = "00000042-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 7:
              double v76 = "00000110-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 8:
              double v76 = "00000204-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 9:
              double v76 = "00000097-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0xA:
              double v76 = "0000007F-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0xB:
              double v76 = "00000080-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0xC:
              double v76 = "00000129-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0xD:
              double v76 = "00000237-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0xE:
              double v76 = "00000081-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0xF:
              double v76 = "00000121-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x10:
              double v76 = "00000040-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x11:
              double v76 = "000000D7-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x12:
              double v76 = "000000BA-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x13:
              double v76 = "00000041-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x14:
              double v76 = "000000BC-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x15:
              double v76 = "000000BD-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x16:
              double v76 = "00000082-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x17:
              double v76 = "000000D9-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x18:
              double v76 = "000000CF-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x19:
              double v76 = "000000CC-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x1A:
              double v76 = "00000083-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x1B:
              double v76 = "00000084-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x1C:
              double v76 = "00000043-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x1D:
              double v76 = "00000044-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x1E:
              double v76 = "00000045-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x1F:
              double v76 = "00000112-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x20:
              double v76 = "00000085-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x21:
              double v76 = "00000086-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x22:
              double v76 = "00000047-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x23:
              double v76 = "0000007E-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x24:
              double v76 = "000000B9-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x25:
              double v76 = "00000087-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x26:
              double v76 = "00000113-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x27:
              double v76 = "00000088-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x28:
              double v76 = "00000089-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x29:
              double v76 = "00000049-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x2A:
              double v76 = "00000125-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x2B:
              double v76 = "00000122-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x2C:
              double v76 = "000000D8-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x2D:
              double v76 = "0000008A-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x2E:
              double v76 = "0000004A-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x2F:
              double v76 = "000000D0-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x30:
              double v76 = "000000B7-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x31:
              double v76 = "0000008B-0000-1000-8000-0026BB765291";
              goto LABEL_246;
            case 0x32:
              double v76 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_246:
              unint64_t v75 = (unint64_t)(v76 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          unint64_t v77 = 0x8000000100074BC0;
          switch((char)v7)
          {
            case 1:
              unint64_t v78 = "0000003E-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 2:
              unint64_t v78 = "00000270-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 3:
              unint64_t v78 = "000000BB-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 4:
              unint64_t v78 = "0000008D-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 5:
              unint64_t v78 = "00000096-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 6:
              unint64_t v78 = "00000042-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 7:
              unint64_t v78 = "00000110-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 8:
              unint64_t v78 = "00000204-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 9:
              unint64_t v78 = "00000097-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 10:
              unint64_t v78 = "0000007F-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 11:
              unint64_t v78 = "00000080-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 12:
              unint64_t v78 = "00000129-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 13:
              unint64_t v78 = "00000237-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 14:
              unint64_t v78 = "00000081-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 15:
              unint64_t v78 = "00000121-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 16:
              unint64_t v78 = "00000040-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 17:
              unint64_t v78 = "000000D7-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 18:
              unint64_t v78 = "000000BA-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 19:
              unint64_t v78 = "00000041-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 20:
              unint64_t v78 = "000000BC-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 21:
              unint64_t v78 = "000000BD-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 22:
              unint64_t v78 = "00000082-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 23:
              unint64_t v78 = "000000D9-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 24:
              unint64_t v78 = "000000CF-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 25:
              unint64_t v78 = "000000CC-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 26:
              unint64_t v78 = "00000083-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 27:
              unint64_t v78 = "00000084-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 28:
              unint64_t v78 = "00000043-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 29:
              unint64_t v78 = "00000044-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 30:
              unint64_t v78 = "00000045-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 31:
              unint64_t v78 = "00000112-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 32:
              unint64_t v78 = "00000085-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 33:
              unint64_t v78 = "00000086-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 34:
              unint64_t v78 = "00000047-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 35:
              unint64_t v78 = "0000007E-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 36:
              unint64_t v78 = "000000B9-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 37:
              unint64_t v78 = "00000087-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 38:
              unint64_t v78 = "00000113-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 39:
              unint64_t v78 = "00000088-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 40:
              unint64_t v78 = "00000089-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 41:
              unint64_t v78 = "00000049-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 42:
              unint64_t v78 = "00000125-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 43:
              unint64_t v78 = "00000122-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 44:
              unint64_t v78 = "000000D8-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 45:
              unint64_t v78 = "0000008A-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 46:
              unint64_t v78 = "0000004A-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 47:
              unint64_t v78 = "000000D0-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 48:
              unint64_t v78 = "000000B7-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 49:
              unint64_t v78 = "0000008B-0000-1000-8000-0026BB765291";
              goto LABEL_298;
            case 50:
              unint64_t v78 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_298:
              unint64_t v77 = (unint64_t)(v78 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          if (v75 == v77)
          {
            uint64_t v12 = &LockScreenDataModel;
            id v15 = v97;
            goto LABEL_141;
          }
          char v79 = sub_10006FCE8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v79) {
            break;
          }
          ++v73;
          id v15 = v97;
          if (v74 == v33) {
            goto LABEL_302;
          }
        }
        uint64_t v12 = &LockScreenDataModel;
        id v15 = v97;
        goto LABEL_143;
      }
LABEL_302:
      sub_100004C10((uint64_t)&v103);
      sub_100004C10((uint64_t)&v103);

      unint64_t v7 = v87;
      unint64_t v11 = v92;
      uint64_t v12 = &LockScreenDataModel;
      if (v92 == v86) {
        goto LABEL_312;
      }
    }
    unint64_t v42 = _swiftEmptyArrayStorage;
    unint64_t v100 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v43 = *(void *)(v85 + 16);
    swift_bridgeObjectRetain();
    if (v43)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = 0;
LABEL_148:
      id v45 = [v15 characteristics];
      sub_100004B50(0, (unint64_t *)&qword_100091EE0);
      unint64_t v7 = sub_10006F668();

      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_10006FAC8();
        if (!v46)
        {
LABEL_146:
          swift_bridgeObjectRelease_n();
          id v15 = v97;
          goto LABEL_147;
        }
      }
      else
      {
        uint64_t v46 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v46) {
          goto LABEL_146;
        }
      }
      uint64_t v95 = v44;
      uint64_t v47 = 4;
      while (1)
      {
        id v48 = (v7 & 0xC000000000000001) != 0 ? (id)sub_10006F9F8() : *(id *)(v7 + 8 * v47);
        uint64_t v49 = v48;
        uint64_t v50 = v47 - 3;
        if (__OFADD__(v47 - 4, 1)) {
          break;
        }
        id v51 = [v48 characteristicType];
        sub_10006F4F8();

        _s20HomeWidgetLockScreen18CharacteristicKindO8rawValueACSgSS_tcfC_0();
        unint64_t v52 = CharacteristicKind.rawValue.getter();
        uint64_t v54 = v53;
        if (v52 == CharacteristicKind.rawValue.getter() && v54 == v55)
        {
          swift_bridgeObjectRelease_n();
LABEL_163:
          swift_bridgeObjectRelease_n();
          unint64_t v7 = (unint64_t)&v100;
          sub_10006F648();
          uint64_t v12 = &LockScreenDataModel;
          id v15 = v97;
          if (*(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_10006F698();
          }
          sub_10006F6B8();
          sub_10006F688();
LABEL_166:
          uint64_t v44 = v95;
LABEL_147:
          if (++v44 == v43)
          {
            sub_100004C10((uint64_t)&v102);
            unint64_t v58 = v100;
            unint64_t v42 = _swiftEmptyArrayStorage;
            goto LABEL_171;
          }
          goto LABEL_148;
        }
        char v57 = sub_10006FCE8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v57) {
          goto LABEL_163;
        }

        ++v47;
        if (v50 == v46)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v12 = &LockScreenDataModel;
          id v15 = v97;
          goto LABEL_166;
        }
      }
      __break(1u);
LABEL_314:
      __break(1u);
LABEL_315:
      __break(1u);
LABEL_316:
      __break(1u);
LABEL_317:
      __break(1u);
LABEL_318:
      __break(1u);
LABEL_319:
      sub_100004B8C((uint64_t)v104);
      sub_100004BB8((uint64_t)&v105);
      sub_100004BB8((uint64_t)&v103);
      sub_100004BB8((uint64_t)&v102);
      sub_100004B40(v7);
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_10006FAC8();
      unint64_t v9 = v89;
      if (!v10) {
        goto LABEL_320;
      }
      goto LABEL_3;
    }
    unint64_t v58 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_171:
    sub_100004C10((uint64_t)&v102);
    unint64_t v100 = (unint64_t)_swiftEmptyArrayStorage;
    if (!(v58 >> 62))
    {
      uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v59) {
        goto LABEL_173;
      }
      goto LABEL_309;
    }
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_10006FAC8();
    swift_bridgeObjectRelease();
    if (v59)
    {
LABEL_173:
      if (v59 < 1) {
        goto LABEL_318;
      }
      uint64_t v60 = 0;
      unint64_t v98 = v58 & 0xC000000000000001;
      uint64_t v94 = v59;
      uint64_t v96 = (double *)v58;
      while (2)
      {
        if (v98) {
          id v61 = (id)sub_10006F9F8();
        }
        else {
          id v61 = *(id *)(v58 + 8 * v60 + 32);
        }
        uint64_t v62 = v61;
        id v63 = [v61 service];
        if (v63)
        {
          uint64_t v64 = v63;
          id v65 = [v63 (SEL)v12[384].count];
          NSString v66 = sub_10006F4D8();
          id v67 = [v65 objectForKeyedSubscript:v66];

          id v68 = [v64 accessory];
          if (v68)
          {
            BOOL v69 = v68;
            id v70 = [v68 (SEL)v12[384].count];
            NSString v71 = sub_10006F4D8();
            id v72 = [v70 objectForKeyedSubscript:v71];

            uint64_t v59 = v94;
            unint64_t v58 = (unint64_t)v96;
            if (v67)
            {
              sub_100004960(&qword_100091F18);
              if ((swift_dynamicCast() & 1) != 0 && (v99 & 1) == 0)
              {

                swift_unknownObjectRelease();
                uint64_t v12 = &LockScreenDataModel;
LABEL_177:
                if (v59 == ++v60)
                {
                  swift_bridgeObjectRelease();
                  unint64_t v42 = (double *)v100;
                  id v15 = v97;
                  goto LABEL_310;
                }
                continue;
              }
            }
            uint64_t v12 = &LockScreenDataModel;
            if (v72)
            {
              sub_100004960(&qword_100091F18);
              if ((swift_dynamicCast() & 1) != 0 && (v99 & 1) == 0)
              {

                goto LABEL_177;
              }
            }
          }
          else
          {

            swift_unknownObjectRelease();
            uint64_t v59 = v94;
            unint64_t v58 = (unint64_t)v96;
          }
        }
        break;
      }
      sub_10006FA48();
      sub_10006FA68();
      sub_10006FA78();
      sub_10006FA58();
      goto LABEL_177;
    }
LABEL_309:
    swift_bridgeObjectRelease();
LABEL_310:

    sub_100023CA8((unint64_t)v42);
LABEL_311:
    unint64_t v7 = v87;
    unint64_t v11 = v92;
  }
  while (v92 != v86);
LABEL_312:
  swift_bridgeObjectRelease_n();
  uint64_t v80 = v101;
LABEL_321:
  sub_100004BE4((uint64_t)v104);
  sub_100004C10((uint64_t)&v105);
  sub_100004C10((uint64_t)&v103);
  sub_100004C10((uint64_t)&v102);
  uint64_t result = sub_100004C3C(v7);
  *a3 = v80;
  return result;
}

uint64_t sub_10002279C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = ServiceKind.rawValue.getter();
  uint64_t v5 = v4;
  if (v3 == ServiceKind.rawValue.getter() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = sub_10006FCE8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 33;
  while (1)
  {
    uint64_t v11 = v10 - 31;
    if (__OFADD__(v10 - 32, 1)) {
      break;
    }
    unint64_t v12 = ServiceKind.rawValue.getter();
    uint64_t v14 = v13;
    if (v12 == ServiceKind.rawValue.getter() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000228F4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v4 = (unsigned char *)(a3 + 40);
    do
    {
      if (*v4)
      {
        if (a2) {
          return 1;
        }
      }
      else if ((a2 & 1) == 0 && *((void *)v4 - 1) == a1)
      {
        return 1;
      }
      v4 += 16;
      --v3;
    }
    while (v3);
  }
  return 0;
}

void LockScreenDataModel.characteristics(matching:from:)(long long *a1, uint64_t a2)
{
  long long v11 = *a1;
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v9 = *((void *)a1 + 3);
  uint64_t v10 = v4;
  uint64_t v5 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 4);
  uint64_t v6 = swift_allocObject();
  long long v7 = a1[1];
  *(_OWORD *)(v6 + 16) = *a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = a1[2];
  *(void *)(v6 + 64) = *((void *)a1 + 6);
  swift_bridgeObjectRetain();
  sub_100004B8C((uint64_t)&v11);
  sub_100004BB8((uint64_t)&v10);
  sub_100004BB8((uint64_t)&v9);
  sub_100004BB8((uint64_t)&v8);
  sub_100004B40(v5);
  sub_100020448(a2, (uint64_t)sub_100025CEC, v6);
}

uint64_t sub_100022A18(id *a1, uint64_t a2)
{
  id v3 = [*a1 service];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    id v6 = [v4 serviceType];
    sub_10006F4F8();

    LODWORD(v7) = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
    if (v7 == 51) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = v7;
    }
    char v8 = sub_10002279C(v7, v5);
    swift_bridgeObjectRelease();
    char v9 = 0;
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 24);
      if (*(void *)(v10 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = (uint64_t)[v4 associatedServiceType];
        if (v11)
        {
          unint64_t v12 = (void *)v11;
          sub_10006F4F8();

          LODWORD(v11) = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
          if (v11 == 51) {
            uint64_t v11 = 0;
          }
          else {
            uint64_t v11 = v11;
          }
        }
        char v9 = sub_10002279C(v11, v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v9 = 1;
      }
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_100022B5C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100022C30(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100010C9C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100010C9C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1000164E4((uint64_t)v12);
  return v7;
}

uint64_t sub_100022C30(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_10006F878();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100022DEC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_10006FA38();
  if (!v8)
  {
    sub_10006FA98();
    __break(1u);
LABEL_17:
    uint64_t result = sub_10006FB08();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100022DEC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100022E84(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100022FFC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100022FFC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100022E84(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10000C7D4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_10006F9E8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_10006FA98();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_10006F568();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_10006FB08();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_10006FA98();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100022FFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004960(&qword_100091CB0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_10002314C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10002322C(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10002316C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10002338C(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10002318C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000234EC(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000231AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100023658(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000231CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000237B8(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000231EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100023908(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_10002320C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100023A68(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_10002322C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004960(&qword_100091CD8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_10002338C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004960(&qword_100091CE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_1000234EC(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004960(&qword_100091EF0);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_100023658(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004960(&qword_100091CC8);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_1000237B8(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004960(&qword_100091F40);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_100023908(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004960(&qword_100091F48);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_100023A68(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004960(&qword_100091F50);
  uint64_t v10 = *(void *)(sub_10006ED18() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (double *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  *((void *)v13 + 2) = v8;
  *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10006ED18() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v18 = (char *)v13 + v17;
  unint64_t v19 = a4 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || (unint64_t)v18 >= v19 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = v19 + v20;
  if (v19 >= (unint64_t)v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_100023CA8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10006FAC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10006FAC8();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10006FA08();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1000248E8(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_10006FAC8();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_10006F688();
}

uint64_t sub_100023E74(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_10000C37C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[56 * v9 + 32];
  if (a1 + 32 < v10 + 56 * v8 && v10 < a1 + 32 + 56 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_100023FD4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = *v4;
  int64_t v8 = *(void *)(*v4 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native) {
    goto LABEL_8;
  }
  int64_t v13 = *(void *)(v7 + 24) >> 1;
  if (v13 < v9) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        int64_t v14 = v8 + v6;
      }
      else {
        int64_t v14 = v8;
      }
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_10000C37C((char *)isUniquelyReferenced_nonNull_native, v14, 1, (char *)v7);
      uint64_t v7 = isUniquelyReferenced_nonNull_native;
      int64_t v13 = *(void *)(isUniquelyReferenced_nonNull_native + 24) >> 1;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v15 = *(void *)(v7 + 16);
  if (v13 - v15 < v6) {
    goto LABEL_25;
  }
  if (v6 < 0) {
    goto LABEL_27;
  }
  unint64_t v16 = v7 + 56 * v15 + 32;
  unint64_t v17 = a2 + 56 * a3;
  if (v17 < v16 + 56 * v6 && v16 < v17 + 56 * v6) {
    goto LABEL_27;
  }
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_22:
    uint64_t result = swift_unknownObjectRelease();
    uint64_t *v4 = v7;
    return result;
  }
  uint64_t v19 = *(void *)(v7 + 16);
  BOOL v20 = __OFADD__(v19, v6);
  uint64_t v21 = v19 + v6;
  if (!v20)
  {
    *(void *)(v7 + 16) = v21;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_10002419C(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_10006F978();

    if (v6)
    {
      uint64_t v7 = sub_100024374();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = sub_10006F848(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_100004B50(0, (unint64_t *)&qword_100091EE0);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = sub_10006F858();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = sub_10006F858();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *unint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000337C0();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_100024510(v11);
  *unint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100024374()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_10006F938();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_100032C3C(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = sub_10006F848(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_100004B50(0, (unint64_t *)&qword_100091EE0);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = sub_10006F858();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_100024510(v8);
      if (sub_10006F858())
      {
        *uint64_t v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = sub_10006F858();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100024510(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10006F8C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = sub_10006F848(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            unint64_t v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              void *v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1000246B4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_10006FAC8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10006FAC8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10002643C(&qword_100091F38, &qword_100091F30);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100004960(&qword_100091F30);
          Swift::Int v12 = sub_100024B1C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100004B50(0, (unint64_t *)&qword_100092020);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_1000248E8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_10006FAC8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10006FAC8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10002643C(&qword_100091F08, &qword_100091F00);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100004960(&qword_100091F00);
          Swift::Int v12 = sub_100024B88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100004B50(0, (unint64_t *)&qword_100091EE0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t (*sub_100024B1C(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100024C38(v6, a2, a3);
  return sub_100024B84;
}

uint64_t (*sub_100024B88(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100024CB8(v6, a2, a3);
  return sub_100024B84;
}

void sub_100024BF0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_100024C38(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_10006F9F8();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000264D0;
  }
  __break(1u);
  return result;
}

void (*sub_100024CB8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_10006F9F8();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_100024D38;
  }
  __break(1u);
  return result;
}

void sub_100024D38(id *a1)
{
}

int64_t sub_100024D40(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_100024E24(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_10006F958();
      sub_100004B50(0, (unint64_t *)&qword_100091EE0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (sub_10006F918() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_10006F928();
  sub_100004B50(0, (unint64_t *)&qword_100091EE0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = sub_10006F848(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = sub_10006F858();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = sub_10006F858();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  id v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_10002509C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100025124@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if ((result & 0xC000000000000001) != 0)
  {
    sub_10006F8F8();
    sub_100004B50(0, (unint64_t *)&qword_100091EE0);
    sub_100026274();
    sub_10006F778();
    uint64_t result = v14;
    uint64_t v7 = v15;
    long long v8 = v16;
    uint64_t v9 = v17;
  }
  else
  {
    uint64_t v10 = -1;
    uint64_t v11 = -1 << *(unsigned char *)(result + 32);
    uint64_t v12 = ~v11;
    uint64_t v7 = result + 56;
    uint64_t v13 = -v11;
    if (v13 < 64) {
      uint64_t v10 = ~(-1 << v13);
    }
    uint64_t v9 = v10 & *(void *)(result + 56);
    long long v8 = (unint64_t)v12;
  }
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v7;
  *(_OWORD *)(a4 + 16) = v8;
  *(void *)(a4 + 32) = v9;
  *(void *)(a4 + 40) = a2;
  *(void *)(a4 + 48) = a3;
  return result;
}

void sub_100025208(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10006FAC8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100004960(&qword_100091F28);
      uint64_t v3 = (void *)sub_10006F9C8();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_10006FAC8();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = sub_10006F9F8();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = sub_10006F848(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_100004B50(0, (unint64_t *)&qword_100091EE0);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = sub_10006F858();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = sub_10006F858();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = sub_10006F848(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_100004B50(0, (unint64_t *)&qword_100091EE0);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = sub_10006F858();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = sub_10006F858();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_100025564(uint64_t a1)
{
  return sub_10001DB34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

double *sub_100025574(unint64_t a1, uint64_t a2)
{
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_10006FAC8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)sub_10006F9F8() : *(id *)(a1 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v12 = v7;
      sub_100020F90(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return (double *)swift_bridgeObjectRelease();
      }

      sub_100023CA8((unint64_t)v11);
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000256B8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = _swiftEmptyArrayStorage;
  unint64_t v31 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a1 + 16);
  if (!v22) {
    return (uint64_t)v4;
  }
  uint64_t v21 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v26 = v5;
    uint64_t v6 = (void *)(v21 + 56 * v5);
    uint64_t v8 = v6[2];
    uint64_t v7 = v6[3];
    uint64_t v10 = v6[4];
    uint64_t v9 = v6[5];
    uint64_t v11 = v6[6];
    uint64_t v12 = v6[1];
    v30[0] = *v6;
    v30[1] = v12;
    v30[2] = v8;
    v30[3] = v7;
    v30[4] = v10;
    v30[5] = v9;
    v30[6] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100004B40(v9);
    id v13 = [a2 accessories];
    sub_100004B50(0, (unint64_t *)&qword_1000917F8);
    unint64_t v14 = sub_10006F668();

    uint64_t v29 = _swiftEmptyArrayStorage;
    if (v14 >> 62) {
      break;
    }
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100004B40(v9);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_7;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = _swiftEmptyArrayStorage;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100004C3C(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v26 + 1;
    swift_bridgeObjectRelease();
    sub_100004C3C(v9);
    sub_100023CA8((unint64_t)v25);
    if (v26 + 1 == v22)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v31;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(v9);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10006FAC8();
  if (!v15) {
    goto LABEL_3;
  }
LABEL_7:
  uint64_t v24 = v9;
  uint64_t v16 = 4;
  while (1)
  {
    id v17 = (v14 & 0xC000000000000001) != 0 ? (id)sub_10006F9F8() : *(id *)(v14 + 8 * v16);
    id v18 = v17;
    uint64_t v19 = v16 - 3;
    if (__OFADD__(v16 - 4, 1)) {
      break;
    }
    id v28 = v17;
    sub_100020F90(&v28, (uint64_t)v30, &v27);
    if (v3) {
      goto LABEL_20;
    }
    uint64_t v3 = 0;

    sub_100023CA8((unint64_t)v27);
    ++v16;
    if (v19 == v15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v29;
      uint64_t v9 = v24;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_20:
  swift_bridgeObjectRelease();

  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1000259E8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100025A20(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_10006FAC8();
    swift_bridgeObjectRelease();
  }
  sub_100004B50(0, (unint64_t *)&qword_100091EE0);
  sub_100026274();
  uint64_t result = sub_10006F758();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_10006FAC8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)sub_10006F9F8();
        sub_1000327A0(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1000327A0(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100025B74()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100025BAC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100025BBC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100025C04(unint64_t a1)
{
  sub_1000206D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100025C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100025C20()
{
  return swift_release();
}

uint64_t sub_100025C28()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100025C38()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100025C78(uint64_t a1)
{
  return sub_100020E98(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100025C80(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100025C8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100025CEC(id *a1)
{
  return sub_100022A18(a1, v1 + 16);
}

uint64_t destroy for CharacteristicFetchSpecification(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for CharacteristicFetchSpecification(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v7 = a2 + 5;
  uint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = a2[6];
    a1[5] = v6;
    a1[6] = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 5) = *v7;
  }
  return a1;
}

void *assignWithCopy for CharacteristicFetchSpecification(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  if (!a1[5])
  {
    if (v4)
    {
      uint64_t v6 = a2[6];
      a1[5] = v4;
      a1[6] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[6];
  a1[5] = v4;
  a1[6] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for CharacteristicFetchSpecification(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CharacteristicFetchSpecification(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicFetchSpecification(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicFetchSpecification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicFetchSpecification()
{
  return &type metadata for CharacteristicFetchSpecification;
}

Swift::Int sub_10002605C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100004960(&qword_100091ED8);
    uint64_t v3 = sub_10006F9C8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v29 = v1;
    uint64_t v30 = a1 + 32;
    while (1)
    {
      char v6 = *(unsigned char *)(v30 + v4);
      sub_10006FD78();
      CharacteristicKind.rawValue.getter();
      sub_10006F548();
      swift_bridgeObjectRelease();
      Swift::Int result = sub_10006FDD8();
      uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v9 = result & ~v8;
      unint64_t v10 = v9 >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
      uint64_t v12 = 1 << v9;
      if (((1 << v9) & v11) != 0)
      {
        unint64_t v13 = CharacteristicKind.rawValue.getter();
        uint64_t v15 = v14;
        if (v13 == CharacteristicKind.rawValue.getter() && v15 == v16)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
          goto LABEL_4;
        }
        char v18 = sub_10006FCE8();
        swift_bridgeObjectRelease();
        Swift::Int result = swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_4;
        }
        uint64_t v19 = ~v8;
        while (1)
        {
          unint64_t v9 = (v9 + 1) & v19;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0) {
            break;
          }
          unint64_t v20 = CharacteristicKind.rawValue.getter();
          uint64_t v22 = v21;
          if (v20 == CharacteristicKind.rawValue.getter() && v22 == v23) {
            goto LABEL_3;
          }
          char v25 = sub_10006FCE8();
          swift_bridgeObjectRelease();
          Swift::Int result = swift_bridgeObjectRelease();
          if (v25) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
      uint64_t v26 = *(void *)(v3 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v28;
LABEL_4:
      if (++v4 == v29) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

unint64_t sub_100026274()
{
  unint64_t result = qword_100091EE8;
  if (!qword_100091EE8)
  {
    sub_100004B50(255, (unint64_t *)&qword_100091EE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100091EE8);
  }
  return result;
}

uint64_t sub_1000262DC()
{
  return swift_release();
}

uint64_t sub_1000262E4()
{
  uint64_t v1 = sub_100004960(&qword_100091F20);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000263B4(uint64_t a1, uint64_t a2)
{
  sub_100004960(&qword_100091F20);
  uint64_t v5 = *(void *)(v2 + 16);
  unint64_t v6 = *(void *)(v2 + 24);

  return sub_10001DCB0(a1, a2, v5, v6);
}

uint64_t sub_10002643C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000049A4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100026480(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id LockScreenDataModel.homeManager.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_homeManager);
}

void *LockScreenDataModel.currentHome.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void LockScreenDataModel.currentHome.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*LockScreenDataModel.currentHome.modify())()
{
  return j__swift_endAccess;
}

char *sub_1000265E8()
{
  uint64_t result = sub_100026608();
  qword_10009A778 = (uint64_t)result;
  return result;
}

char *sub_100026608()
{
  uint64_t v0 = sub_10006EB88();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (char *)[objc_allocWithZone((Class)type metadata accessor for LockScreenDataModel()) init];
  uint64_t v53 = OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_homeManager;
  uint64_t v54 = v4;
  [v4[OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_homeManager] setDelegate:];
  sub_10006EB78();
  sub_10006EB38();
  double v6 = v5;
  unint64_t v9 = *(void (**)(void, void))(v1 + 8);
  uint64_t v8 = v1 + 8;
  uint64_t v7 = v9;
  v9(v3, v0);
  uint64_t v11 = &unk_10009A000;
  p_info = SecurityAccessoryConfigurationIntentResponse.info;
  if ((byte_10009A770 & 1) == 0)
  {
    id v37 = &LockScreenDataModel;
    *(void *)&long long v10 = 138412546;
    long long v55 = v10;
    unint64_t v56 = v7;
    do
    {
      unint64_t v41 = self;
      [v41 count:0.2];
      if ((v11[1904] & 1) == 0)
      {
        if (p_info[215] != (__objc2_class_ro *)-1) {
          swift_once();
        }
        uint64_t v42 = sub_10006EC68();
        sub_100004B08(v42, (uint64_t)qword_10009A7A0);
        uint64_t v43 = sub_10006EC48();
        os_log_type_t v44 = sub_10006F818();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = swift_slowAlloc();
          uint64_t v46 = v8;
          uint64_t v47 = v0;
          id v48 = p_info;
          uint64_t v49 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v45 = v55;
          id v50 = [v41 mainThread];
          *(void *)(v45 + 4) = v50;
          void *v49 = v50;
          *(_WORD *)(v45 + 12) = 2112;
          id v51 = [v41 currentThread];
          *(void *)(v45 + 14) = v51;
          v49[1] = v51;
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "DataModel.shared is STILL spinning waiting for HomeKit — main thread is %@ current thread is %@", (uint8_t *)v45, 0x16u);
          sub_100004960((uint64_t *)&unk_100092030);
          swift_arrayDestroy();
          p_info = v48;
          uint64_t v0 = v47;
          uint64_t v8 = v46;
          uint64_t v7 = v56;
          swift_slowDealloc();
          uint64_t v11 = (unsigned char *)&unk_10009A000;
          swift_slowDealloc();
        }

        sub_10006EB78();
        sub_10006EB38();
        double v39 = v38;
        v7(v3, v0);
        id v37 = &LockScreenDataModel;
        if (v39 - v6 > 60.0) {
          exit(-1);
        }
      }
    }
    while ((v11[1904] & 1) == 0);
  }
  sub_100004B50(0, (unint64_t *)&unk_100092040);
  unint64_t v13 = sub_10006F838();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v54;
  *(void *)(v14 + 16) = v54;
  id v63 = sub_100028114;
  uint64_t v64 = v14;
  double aBlock = _NSConcreteStackBlock;
  uint64_t v60 = 1107296256;
  id v61 = sub_100026D3C;
  uint64_t v62 = &unk_10008DF58;
  uint64_t v16 = _Block_copy(&aBlock);
  id v17 = v15;
  swift_release();
  char v18 = (int *)&v17[OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_defaultsHomeSensingChangedNotifyToken];
  swift_beginAccess();
  notify_register_dispatch("com.apple.Home.homeSensingChanged", v18, v13, v16);
  swift_endAccess();
  _Block_release(v16);

  uint64_t v19 = sub_10006F838();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  id v63 = sub_100028150;
  uint64_t v64 = v20;
  double aBlock = _NSConcreteStackBlock;
  uint64_t v60 = 1107296256;
  id v61 = sub_100026D3C;
  uint64_t v62 = &unk_10008DFA8;
  uint64_t v21 = _Block_copy(&aBlock);
  uint64_t v22 = v17;
  swift_release();
  uint64_t v23 = (int *)&v22[OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_defaultsSelectedHomeChangedNotifyToken];
  swift_beginAccess();
  notify_register_dispatch("com.apple.Home.selectedHomeChanged", v23, v19, v21);
  swift_endAccess();
  _Block_release(v21);

  id v24 = *(id *)&v15[v53];
  uint64_t v25 = sub_100050024(v24);

  uint64_t v26 = (id *)&v22[OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome];
  swift_beginAccess();
  id v27 = *v26;
  *uint64_t v26 = (id)v25;

  if (p_info[215] != (__objc2_class_ro *)-1) {
    swift_once();
  }
  uint64_t v28 = sub_10006EC68();
  sub_100004B08(v28, (uint64_t)qword_10009A7A0);
  uint64_t v29 = v22;
  uint64_t v30 = sub_10006EC48();
  os_log_type_t v31 = sub_10006F818();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    if (*v26)
    {
      id v33 = [*v26 name];
      uint64_t v34 = sub_10006F4F8();
      unint64_t v36 = v35;
    }
    else
    {
      unint64_t v36 = 0xE400000000000000;
      uint64_t v34 = 1701736302;
    }
    uint64_t v57 = sub_100022B5C(v34, v36, &v58);
    sub_10006F868();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "User's home is now %s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v29;
}

id SecurityAccessoryConfigurationIntent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

uint64_t sub_100026D3C(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_100026D90(uint64_t a1, char *a2, const char *a3)
{
  uint64_t v5 = sub_100050024(*(void **)&a2[OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_homeManager]);
  double v6 = (id *)&a2[OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome];
  swift_beginAccess();
  id v7 = *v6;
  *double v6 = (id)v5;

  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10006EC68();
  sub_100004B08(v8, (uint64_t)qword_10009A7A0);
  unint64_t v9 = a2;
  long long v10 = sub_10006EC48();
  os_log_type_t v11 = sub_10006F818();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    if (*v6)
    {
      id v13 = [*v6 name];
      uint64_t v14 = sub_10006F4F8();
      unint64_t v16 = v15;
    }
    else
    {
      unint64_t v16 = 0xE400000000000000;
      uint64_t v14 = 1701736302;
    }
    sub_100022B5C(v14, v16, &v17);
    sub_10006F868();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a3, v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void *sub_100026FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a1;
  uint64_t v51 = sub_10006EBD8();
  unint64_t v4 = *(void *)(v51 - 8);
  uint64_t v5 = __chkstk_darwin(v51);
  id v48 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - v7;
  id v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_homeManager), "homes"));
  sub_100004B50(0, (unint64_t *)&qword_100092020);
  unint64_t v10 = sub_10006F668();

  uint64_t v52 = a2;
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v12 = (id)v2;
    if (v11) {
      goto LABEL_3;
    }
LABEL_52:

    goto LABEL_53;
  }
LABEL_51:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v39 = (id)v2;
  uint64_t v11 = sub_10006FAC8();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_52;
  }
LABEL_3:
  id v40 = (id)v2;
  uint64_t v2 = 0;
  unint64_t v44 = v10;
  unint64_t v45 = v10 & 0xC000000000000001;
  unint64_t v41 = v10 + 32;
  id v50 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v43 = v11;
  while (1)
  {
    if (v45)
    {
      swift_bridgeObjectRetain();
      id v13 = (id)sub_10006F9F8();
    }
    else
    {
      uint64_t v14 = *(void **)(v41 + 8 * v2);
      swift_bridgeObjectRetain();
      id v13 = v14;
    }
    unint64_t v15 = v13;
    id v16 = [v13 accessories:v40];
    uint64_t v42 = sub_100004B50(0, (unint64_t *)&qword_1000917F8);
    unint64_t v4 = sub_10006F668();

    id v46 = v15;
    unint64_t v47 = v2;
    if (v4 >> 62) {
      break;
    }
    uint64_t v17 = *(void **)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_9;
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    unint64_t v10 = v44;
    swift_bridgeObjectRelease();

    uint64_t v2 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (v2 == v43)
    {
LABEL_27:

LABEL_53:
      swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      goto LABEL_54;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v17 = (void *)sub_10006FAC8();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_22;
  }
LABEL_9:
  id v49 = (id)(v4 & 0xC000000000000001);
  uint64_t v18 = 4;
  while (1)
  {
    if (v49) {
      id v20 = (id)sub_10006F9F8();
    }
    else {
      id v20 = *(id *)(v4 + 8 * v18);
    }
    uint64_t v21 = v20;
    unint64_t v10 = v18 - 3;
    if (__OFADD__(v18 - 4, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    id v22 = [v20 uniqueIdentifier];
    sub_10006EBC8();

    uint64_t v2 = (uint64_t)v8;
    uint64_t v23 = sub_10006EBA8();
    uint64_t v25 = v24;
    uint64_t v26 = *v50;
    (*v50)(v8, v51);
    if (!v52)
    {

      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (v23 == v53 && v25 == v52)
    {

      unint64_t v27 = v44;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    char v19 = sub_10006FCE8();
    swift_bridgeObjectRelease();

    if (v19) {
      break;
    }
LABEL_11:
    ++v18;
    if ((void *)v10 == v17) {
      goto LABEL_22;
    }
  }
  unint64_t v27 = v44;
  swift_bridgeObjectRelease();

LABEL_26:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = (void *)v47;
  if (v47 == v43) {
    goto LABEL_27;
  }
  if (v45)
  {
    id v29 = (id)sub_10006F9F8();
    goto LABEL_33;
  }
  if ((v47 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_58;
  }
  if (v47 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_58:
    __break(1u);
    return result;
  }
  id v29 = *(id *)(v41 + 8 * v47);
LABEL_33:
  id v49 = v29;
  id v30 = [v29 accessories];
  unint64_t v4 = sub_10006F668();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (char *)sub_10006FAC8();
    if (v8) {
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v8 = *(char **)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_35:
      uint64_t v31 = 4;
      do
      {
        uint64_t v2 = v31 - 4;
        id v32 = (v4 & 0xC000000000000001) != 0 ? (id)sub_10006F9F8() : *(id *)(v4 + 8 * v31);
        uint64_t v17 = v32;
        unint64_t v10 = v31 - 3;
        if (__OFADD__(v2, 1)) {
          goto LABEL_49;
        }
        id v33 = [v32 uniqueIdentifier];
        uint64_t v34 = v48;
        sub_10006EBC8();

        uint64_t v35 = sub_10006EBA8();
        uint64_t v37 = v36;
        v26(v34, v51);
        if (v35 == v53 && v37 == v52) {
          goto LABEL_45;
        }
        char v38 = sub_10006FCE8();
        swift_bridgeObjectRelease();
        if (v38)
        {

          swift_bridgeObjectRelease();
          goto LABEL_47;
        }

        ++v31;
      }
      while ((char *)v10 != v8);
    }
  }
  swift_bridgeObjectRelease_n();

  __break(1u);
LABEL_45:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_47:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_54:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1000275D8()
{
  uint64_t v0 = sub_10006EB08();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004960(&qword_100091DC8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self mainBundle];
  NSString v7 = sub_10006F4D8();
  NSString v8 = sub_10006F4D8();
  id v9 = [v6 URLForResource:v7 withExtension:v8];

  if (!v9)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v5, 1, 1, v0);
    goto LABEL_6;
  }
  sub_10006EAE8();

  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v5, 0, 1, v0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v5, 1, v0);
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v11 = objc_allocWithZone((Class)NSDictionary);
  sub_10006EAD8(v12);
  uint64_t v14 = v13;
  id v15 = [v11 initWithContentsOfURL:v13];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v5, v0);
  if (v15)
  {
    qword_10009A780 = (uint64_t)v15;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

id LockScreenDataModel.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_homeManager;
  sub_100004B50(0, &qword_100091F80);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v3 = v0;
  id v4 = [ObjCClassFromMetadata defaultPrivateConfiguration];
  [v4 setDiscretionary:0];
  [v4 setAdaptive:1];
  id v5 = [objc_allocWithZone((Class)HMHomeManager) initWithConfiguration:v4];

  *(void *)&v0[v1] = v5;
  *(void *)&v3[OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome] = 0;
  *(_DWORD *)&v3[OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_defaultsHomeSensingChangedNotifyToken] = 0;
  *(_DWORD *)&v3[OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_defaultsSelectedHomeChangedNotifyToken] = 0;

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for LockScreenDataModel();
  return [super init];
}

uint64_t type metadata accessor for LockScreenDataModel()
{
  return self;
}

id LockScreenDataModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LockScreenDataModel();
  return [super dealloc];
}

void sub_100027A8C()
{
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10006EC68();
  sub_100004B08(v0, (uint64_t)qword_10009A7A0);
  oslog = sub_10006EC48();
  os_log_type_t v1 = sub_10006F818();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 67109376;
    sub_10006F868();
    *(_WORD *)(v2 + 8) = 1024;
    sub_10006F868();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "homeHasUpdatedOnce was %{BOOL}d is now %{BOOL}d", (uint8_t *)v2, 0xEu);
    swift_slowDealloc();
  }
  else
  {
  }
}

void _s20HomeWidgetLockScreen0cD9DataModelC25homeManagerDidUpdateHomesyySo06HMHomeH0CF_0(void *a1)
{
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10006EC68();
  sub_100004B08(v2, (uint64_t)qword_10009A7A0);
  id v3 = a1;
  id v4 = sub_10006EC48();
  os_log_type_t v5 = sub_10006F818();
  if (!os_log_type_enabled(v4, v5))
  {

LABEL_22:
    sub_100027A8C();
    byte_10009A770 = 1;
    return;
  }
  os_log_type_t v35 = v5;
  uint64_t v6 = swift_slowAlloc();
  uint64_t v34 = (void *)swift_slowAlloc();
  uint64_t v37 = swift_slowAlloc();
  *(_DWORD *)uint64_t v6 = 136315906;
  id v7 = [v3 currentHome];
  if (v7)
  {
    NSString v8 = v7;
    id v9 = [v7 name];

    uint64_t v10 = sub_10006F4F8();
    unint64_t v12 = v11;
  }
  else
  {
    unint64_t v12 = 0xE400000000000000;
    uint64_t v10 = 1701736302;
  }
  sub_100022B5C(v10, v12, &v37);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v6 + 12) = 2080;
  id v33 = v3;
  id v13 = [v3 homes];
  sub_100004B50(0, (unint64_t *)&qword_100092020);
  unint64_t v14 = sub_10006F668();

  if (!(v14 >> 62))
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_10;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v26 = sub_10006F678();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    sub_100022B5C(v26, v28, &v37);
    sub_10006F868();

    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2112;
    id v29 = self;
    id v30 = [v29 mainThread];
    sub_10006F868();
    *uint64_t v34 = v30;
    *(_WORD *)(v6 + 32) = 2112;
    id v36 = [v29 currentThread];
    sub_10006F868();
    v34[1] = v36;
    sub_100004960((uint64_t *)&unk_100092030);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10006FAC8();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_20;
  }
LABEL_10:
  sub_10002318C(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v31 = v6;
    id v32 = v4;
    uint64_t v16 = 0;
    do
    {
      if ((v14 & 0xC000000000000001) != 0) {
        id v17 = (id)sub_10006F9F8();
      }
      else {
        id v17 = *(id *)(v14 + 8 * v16 + 32);
      }
      uint64_t v18 = v17;
      id v19 = [v17 name:v31, v32];
      uint64_t v20 = sub_10006F4F8();
      uint64_t v22 = v21;

      double v24 = _swiftEmptyArrayStorage[2];
      double v23 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v24 >= *(void *)&v23 >> 1) {
        sub_10002318C(*(void *)&v23 > 1uLL, *(void *)&v24 + 1, 1);
      }
      ++v16;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v24 + 1;
      uint64_t v25 = &_swiftEmptyArrayStorage[2 * *(void *)&v24];
      *((void *)v25 + 4) = v20;
      *((void *)v25 + 5) = v22;
    }
    while (v15 != v16);
    swift_bridgeObjectRelease();
    uint64_t v6 = v31;
    id v4 = v32;
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_1000280DC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100028114(uint64_t a1)
{
  sub_100026D90(a1, *(char **)(v1 + 16), "User Home Sensing preference has been updated, current home is now '%s'");
}

uint64_t sub_100028138(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100028148()
{
  return swift_release();
}

void sub_100028150(uint64_t a1)
{
  sub_100026D90(a1, *(char **)(v1 + 16), "User Selected Home preference has been updated, current home is now '%s'");
}

int *sub_100028180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10006EC08();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  sub_10006EB78();
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v4 = sub_10006F518();
  uint64_t v6 = v5;
  sub_10006F408();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t result = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v12 = a1 + result[5];
  *(void *)uint64_t v12 = v4;
  *(void *)(v12 + 8) = v6;
  *(void *)(v12 + 16) = 0xD000000000000010;
  *(void *)(v12 + 24) = 0x8000000100077650;
  *(void *)(v12 + 32) = 0x9380E29380E2;
  *(void *)(v12 + 40) = 0xA600000000000000;
  *(unsigned char *)(v12 + 48) = 0;
  id v13 = (void *)(a1 + result[6]);
  *id v13 = 0;
  v13[1] = 0;
  unint64_t v14 = (void *)(a1 + result[7]);
  *unint64_t v14 = v8;
  v14[1] = v10;
  return result;
}

uint64_t sub_100028320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[17] = a5;
  v6[18] = v5;
  v6[15] = a3;
  v6[16] = a4;
  v6[13] = a1;
  v6[14] = a2;
  uint64_t v7 = sub_10006EB88();
  v6[19] = v7;
  v6[20] = *(void *)(v7 - 8);
  v6[21] = swift_task_alloc();
  return _swift_task_switch(sub_1000283E8, 0, 0);
}

uint64_t sub_1000283E8()
{
  uint64_t v63 = v0;
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = sub_10006EC68();
  *(void *)(v0 + 176) = sub_100004B08(v2, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  id v3 = v1;
  uint64_t v4 = sub_10006EC48();
  os_log_type_t v5 = sub_10006F818();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = *(void *)(v0 + 136);
  uint64_t v8 = &LockScreenDataModel;
  if (v6)
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = *(void **)(v0 + 112);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    uint64_t v62 = v59;
    *(_DWORD *)uint64_t v11 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_100022B5C(v9, v7, &v62);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    *(void *)(v0 + 88) = sub_100022B5C(0xD00000000000001ELL, 0x8000000100078120, &v62);
    sub_10006F868();
    *(_WORD *)(v11 + 22) = 2080;
    id v12 = [v10 accessory];
    if (v12
      && (id v13 = v12, v14 = [v12 identifier], v13, v14))
    {
      uint64_t v15 = sub_10006F4F8();
      unint64_t v17 = v16;

      uint64_t v18 = v15;
      uint64_t v8 = &LockScreenDataModel;
    }
    else
    {
      unint64_t v17 = 0xE400000000000000;
      uint64_t v8 = &LockScreenDataModel;
      uint64_t v18 = 1819047278;
    }
    uint64_t v20 = *(void **)(v0 + 112);
    *(void *)(v0 + 96) = sub_100022B5C(v18, v17, &v62);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v19 = *(void **)(v0 + 112);
    swift_bridgeObjectRelease_n();
  }
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  id v21 = [*(id *)(v0 + 112) count:v59];
  uint64_t v22 = v21;
  if (v21)
  {
    id v23 = [v21 identifier];

    if (v23)
    {
      uint64_t v24 = sub_10006F4F8();
      uint64_t v22 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v22 = 0;
    }
  }
  else
  {
    uint64_t v24 = 0;
  }
  uint64_t v26 = sub_100026FB0(v24, (uint64_t)v22);
  *(void *)(v0 + 184) = v26;
  swift_bridgeObjectRelease();
  if (v26)
  {
    swift_bridgeObjectRetain_n();
    id v27 = v26;
    unint64_t v28 = sub_10006EC48();
    os_log_type_t v29 = sub_10006F818();
    BOOL v30 = os_log_type_enabled(v28, v29);
    unint64_t v31 = *(void *)(v0 + 136);
    if (v30)
    {
      uint64_t v32 = *(void *)(v0 + 128);
      uint64_t v33 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 64) = sub_100022B5C(v32, v31, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2080;
      id v34 = [v27 name];
      uint64_t v35 = sub_10006F4F8();
      unint64_t v37 = v36;

      *(void *)(v0 + 72) = sub_100022B5C(v35, v37, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease();

      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    id v61 = (uint64_t (*)(uint64_t))((char *)&dword_100093110 + dword_100093110);
    id v53 = v27;
    uint64_t v54 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v54;
    *uint64_t v54 = v0;
    v54[1] = sub_100028C10;
    return v61((uint64_t)v26);
  }
  else
  {
    char v38 = *(void **)(v0 + 112);
    swift_bridgeObjectRetain_n();
    id v39 = v38;
    id v40 = sub_10006EC48();
    os_log_type_t v41 = sub_10006F818();
    BOOL v42 = os_log_type_enabled(v40, v41);
    unint64_t v43 = *(void *)(v0 + 136);
    if (v42)
    {
      unint64_t v44 = v8;
      uint64_t v45 = *(void *)(v0 + 128);
      id v60 = *(id *)(v0 + 112);
      uint64_t v46 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_100022B5C(v45, v43, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2080;
      id v47 = [v60 (SEL)v44[366].count];
      if (v47
        && (id v48 = v47, v49 = [v47 identifier], v48, v49))
      {
        uint64_t v50 = sub_10006F4F8();
        unint64_t v52 = v51;
      }
      else
      {
        unint64_t v52 = 0xE400000000000000;
        uint64_t v50 = 1819047278;
      }
      uint64_t v57 = *(void **)(v0 + 112);
      *(void *)(v0 + 24) = sub_100022B5C(v50, v52, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease();

      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v56 = *(void **)(v0 + 112);
      swift_bridgeObjectRelease_n();
    }
    sub_100028180(*(void *)(v0 + 104));
    swift_task_dealloc();
    uint64_t v58 = *(uint64_t (**)(void))(v0 + 8);
    return v58();
  }
}

uint64_t sub_100028C10(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void **)(*v2 + 184);
  *(void *)(v3 + 200) = a1;
  *(unsigned char *)(v3 + 208) = a2;
  swift_task_dealloc();

  return _swift_task_switch(sub_100028D30, 0, 0);
}

uint64_t sub_100028D30()
{
  uint64_t v57 = v0;
  unint64_t v1 = 0xD000000000000010;
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_10006EC48();
  os_log_type_t v3 = sub_10006F818();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = *(unsigned char *)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 128);
    unint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315906;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_100022B5C(v7, v6, &v56);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2048;
    if (v4) {
      uint64_t v9 = -1;
    }
    else {
      uint64_t v9 = v5;
    }
    *(void *)(v0 + 40) = v9;
    sub_10006F868();
    *(_WORD *)(v8 + 22) = 2080;
    uint64_t v10 = sub_10006043C(v5, v4 & 1);
    *(void *)(v0 + 48) = sub_100022B5C(v10, v11, &v56);
    sub_10006F868();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 32) = 2080;
    if (v4)
    {
LABEL_9:
      unint64_t v1 = 0xD000000000000010;
      uint64_t v13 = 0xD00000000000002ELL;
      unint64_t v12 = 0x80000001000780D0;
    }
    else
    {
      unint64_t v12 = 0x8000000100077650;
      uint64_t v13 = 0xD000000000000010;
      unint64_t v1 = 0xD000000000000010;
      switch(*(void *)(v0 + 200))
      {
        case 0:
        case 2:
        case 3:
          break;
        case 1:
          uint64_t v13 = 0xD000000000000012;
          id v14 = "door.garage.closed";
          goto LABEL_11;
        case 4:
          uint64_t v13 = 0xD00000000000002ELL;
          id v14 = "door.garage.open.trianglebadge.exclamationmark";
LABEL_11:
          unint64_t v12 = (unint64_t)(v14 - 32) | 0x8000000000000000;
          break;
        default:
          goto LABEL_9;
      }
    }
    *(void *)(v0 + 56) = sub_100022B5C(v13, v12, &v56);
    sub_10006F868();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v15 = *(unsigned char *)(v0 + 208);
  unint64_t v16 = *(void **)(v0 + 184);
  sub_10006EB78();
  id v17 = [v16 name];
  uint64_t v18 = sub_10006F4F8();
  uint64_t v20 = v19;

  uint64_t v21 = *(void *)(v0 + 200);
  uint64_t v53 = v20;
  uint64_t v54 = v18;
  if (v15)
  {
LABEL_16:
    unint64_t v1 = 0xD00000000000002ELL;
    id v23 = "door.garage.open.trianglebadge.exclamationmark";
LABEL_17:
    unint64_t v22 = (unint64_t)(v23 - 32) | 0x8000000000000000;
  }
  else
  {
    unint64_t v22 = 0x8000000100077650;
    switch(v21)
    {
      case 0:
      case 2:
      case 3:
        break;
      case 1:
        unint64_t v1 = 0xD000000000000012;
        id v23 = "door.garage.closed";
        goto LABEL_17;
      default:
        goto LABEL_16;
    }
  }
  unint64_t v52 = v22;
  uint64_t v24 = *(void **)(v0 + 112);
  int v25 = *(unsigned char *)(v0 + 208) & 1;
  uint64_t v26 = sub_10006043C(v21, *(unsigned char *)(v0 + 208) & 1);
  uint64_t v50 = v27;
  uint64_t v51 = v26;
  id v28 = [v24 accessory];
  os_log_type_t v29 = v28;
  unint64_t v55 = v1;
  if (v28)
  {
    id v30 = [v28 identifier];

    if (v30)
    {
      os_log_type_t v29 = (void *)sub_10006F4F8();
      uint64_t v32 = v31;

      goto LABEL_23;
    }
    os_log_type_t v29 = 0;
  }
  uint64_t v32 = 0;
LABEL_23:
  if (v25) {
    BOOL v33 = 0;
  }
  else {
    BOOL v33 = v21 == 1;
  }
  char v34 = v33;
  uint64_t v35 = *(void **)(v0 + 184);
  uint64_t v36 = *(void *)(v0 + 160);
  uint64_t v37 = *(void *)(v0 + 168);
  uint64_t v38 = *(void *)(v0 + 152);
  uint64_t v39 = *(void *)(v0 + 104);
  sub_10006F408();
  uint64_t v41 = v40;
  uint64_t v43 = v42;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v39, v37, v38);
  unint64_t v44 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v45 = v39 + v44[5];
  *(void *)uint64_t v45 = v54;
  *(void *)(v45 + 8) = v53;
  *(void *)(v45 + 16) = v55;
  *(void *)(v45 + 24) = v52;
  *(void *)(v45 + 32) = v51;
  *(void *)(v45 + 40) = v50;
  *(unsigned char *)(v45 + 48) = v34;
  uint64_t v46 = (void *)(v39 + v44[6]);
  *uint64_t v46 = v29;
  v46[1] = v32;
  id v47 = (void *)(v39 + v44[7]);
  void *v47 = v41;
  v47[1] = v43;
  swift_task_dealloc();
  id v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_100029220()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for GarageDoorSecurityDataFetcher()
{
  return self;
}

uint64_t sub_100029254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[16] = a4;
  v5[17] = v4;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  uint64_t v6 = sub_10006EB88();
  v5[18] = v6;
  v5[19] = *(void *)(v6 - 8);
  v5[20] = swift_task_alloc();
  return _swift_task_switch(sub_10002931C, 0, 0);
}

uint64_t sub_10002931C()
{
  uint64_t v54 = v0;
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0 + 13;
  unint64_t v1 = (void *)v0[13];
  uint64_t v3 = sub_10006EC68();
  v0[21] = sub_100004B08(v3, (uint64_t)qword_10009A7A0);
  id v4 = v1;
  swift_bridgeObjectRetain_n();
  id v5 = v4;
  uint64_t v6 = sub_10006EC48();
  os_log_type_t v7 = sub_10006F818();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = v0[15];
  if (v8)
  {
    os_log_type_t type = v7;
    uint64_t v10 = v0[14];
    os_log_t log = (os_log_t)v0[13];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315650;
    swift_bridgeObjectRetain();
    v0[10] = sub_100022B5C(v10, v9, &v53);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    v0[11] = sub_100022B5C(0xD00000000000002DLL, 0x8000000100078190, &v53);
    sub_10006F868();
    *(_WORD *)(v11 + 22) = 2080;
    if (log)
    {
      id v12 = [v5 name];
      uint64_t v13 = sub_10006F4F8();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v15 = 0xE300000000000000;
      uint64_t v13 = 7104878;
    }
    v0[12] = sub_100022B5C(v13, v15, &v53);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!*v2) {
      goto LABEL_21;
    }
  }
  else
  {
    swift_bridgeObjectRelease_n();

    if (!*v2) {
      goto LABEL_21;
    }
  }
  id v16 = v5;
  id v17 = [v16 currentUser];
  Swift::Bool v18 = HMHome.shouldShowNoAccessOutsideOfSchedule(forRestrictedUser:)((HMUser)v17);

  if (v18)
  {
    id v19 = v16;
    uint64_t v20 = sub_10006EC48();
    os_log_type_t v21 = sub_10006F818();
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t typea = v21;
      uint64_t v23 = v0[19];
      uint64_t v22 = v0[20];
      uint64_t v46 = v0[13];
      uint64_t v47 = v0[18];
      uint64_t v24 = swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315650;
      v0[7] = sub_100022B5C(0xD00000000000002DLL, 0x8000000100078190, &v53);
      sub_10006F868();
      *(_WORD *)(v24 + 12) = 2112;
      v0[8] = v19;
      id v25 = v19;
      sub_10006F868();
      *uint64_t v51 = v46;

      *(_WORD *)(v24 + 22) = 2080;
      sub_10006EB68();
      sub_10002BF78();
      uint64_t v26 = sub_10006FCC8();
      unint64_t v28 = v27;
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v47);
      v0[9] = sub_100022B5C(v26, v28, &v53);
      sub_10006F868();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, typea, "{%s} Displaying No Access for RG in home %@ because %s is outside of allowed schedule.", (uint8_t *)v24, 0x20u);
      sub_100004960((uint64_t *)&unk_100092030);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    if (qword_100091778 != -1) {
      swift_once();
    }
    uint64_t v38 = &qword_10009AA00;
LABEL_28:
    uint64_t v44 = *v38;
    swift_bridgeObjectRetain();

    swift_task_dealloc();
    uint64_t v45 = (uint64_t (*)(uint64_t))v0[1];
    return v45(v44);
  }

  id v29 = v16;
  id v30 = [v29 currentUser];
  Swift::Bool v31 = HMHome.shouldShowNoAccessAwayFromHome(forRestrictedUser:)((HMUser)v30);

  if (v31)
  {
    id v32 = v29;
    BOOL v33 = sub_10006EC48();
    os_log_type_t v34 = sub_10006F818();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v52 = *v2;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = (void *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      v0[5] = sub_100022B5C(0xD00000000000002DLL, 0x8000000100078190, &v53);
      sub_10006F868();
      *(_WORD *)(v35 + 12) = 2112;
      v0[6] = v32;
      id v37 = v32;
      sub_10006F868();
      *uint64_t v36 = v52;

      _os_log_impl((void *)&_mh_execute_header, v33, v34, "{%s} Displaying No Access Away from Home for RG in home %@.", (uint8_t *)v35, 0x16u);
      sub_100004960((uint64_t *)&unk_100092030);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    if (qword_100091780 != -1) {
      swift_once();
    }
    uint64_t v38 = &qword_10009AA08;
    goto LABEL_28;
  }

LABEL_21:
  uint64_t v39 = (void *)swift_task_alloc();
  v0[22] = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_100029B6C;
  uint64_t v40 = v0[14];
  uint64_t v41 = v0[15];
  uint64_t v42 = v0[13];
  return sub_100019B08(v42, v40, v41, 3);
}

uint64_t sub_100029B6C(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  uint64_t v10 = (void *)*v1;
  v3[23] = a1;
  swift_task_dealloc();
  id v4 = (void *)swift_task_alloc();
  v3[24] = v4;
  void *v4 = v10;
  v4[1] = sub_100029CF8;
  uint64_t v5 = v2[15];
  uint64_t v6 = v2[14];
  uint64_t v7 = v2[13];
  uint64_t v8 = v2[17];
  return sub_10002A348(v8, v7, v6, v5);
}

uint64_t sub_100029CF8(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  unint64_t v9 = (void *)*v1;
  v3[25] = a1;
  swift_task_dealloc();
  id v4 = (void *)swift_task_alloc();
  v3[26] = v4;
  void *v4 = v9;
  v4[1] = sub_100029E88;
  uint64_t v5 = v2[15];
  uint64_t v6 = v2[14];
  uint64_t v7 = v2[13];
  return sub_100059980(v7, v6, v5, 3);
}

uint64_t sub_100029E88(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100029F88, 0, 0);
}

void sub_100029F88()
{
  uint64_t v46 = v0;
  uint64_t v1 = v0[16];
  uint64_t v2 = *(void *)(v0[25] + 16);
  uint64_t v3 = v1 - v2;
  if (__OFSUB__(v1, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v3 >= 0) {
    uint64_t v4 = v1 - v2;
  }
  else {
    uint64_t v4 = v3 + 1;
  }
  int64_t v5 = sub_10005993C(v4 >> 1, v0[3]);
  uint64_t v40 = v8;
  unint64_t v9 = (v7 >> 1) - v6;
  if (__OFSUB__(v7 >> 1, v6)) {
    goto LABEL_16;
  }
  uint64_t v10 = v5;
  if (__OFSUB__(v3, v9))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v11 = v6;
  unint64_t v12 = v7;
  int64_t v13 = sub_10005993C(v3 - v9, v0[23]);
  uint64_t v15 = v14;
  unint64_t v38 = v17;
  uint64_t v39 = v16;
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  Swift::Bool v18 = sub_10006EC48();
  os_log_type_t v19 = sub_10006F818();
  uint64_t v37 = v15;
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t type = v19;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v41 = v34;
    uint64_t v42 = (char *)v13;
    uint64_t v43 = v15;
    uint64_t v44 = v39;
    unint64_t v45 = v38;
    swift_unknownObjectRetain();
    uint64_t v21 = swift_bridgeObjectRetain();
    sub_10002B638(v21);
    swift_bridgeObjectRelease();
    uint64_t v22 = swift_unknownObjectRetain();
    sub_10002BC7C(v22, v40, v11, v12);
    swift_unknownObjectRelease();
    uint64_t v23 = sub_10006F8A8();
    uint64_t v36 = v2;
    unint64_t v24 = v12;
    unint64_t v26 = v25;
    swift_unknownObjectRelease();
    v0[4] = sub_100022B5C(v23, v26, &v41);
    sub_10006F868();
    unint64_t v12 = v24;
    uint64_t v2 = v36;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, type, "homeOverview got rows: %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }

  unint64_t v27 = (v38 >> 1) - v39;
  if (__OFSUB__(v38 >> 1, v39)) {
    goto LABEL_18;
  }
  BOOL v28 = __OFADD__(v2, v27);
  uint64_t v29 = v2 + v27;
  if (v28)
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v30 = v0[25];
  uint64_t v42 = sub_10000C37C(0, v29 & ~(v29 >> 63), 0, (char *)_swiftEmptyArrayStorage);
  uint64_t v31 = swift_unknownObjectRetain();
  sub_100023FD4(v31, v37, v39, v38);
  sub_100023E74(v30);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_100023FD4(v10, v40, v11, v12);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  id v32 = v42;
  swift_task_dealloc();
  BOOL v33 = (void (*)(char *))v0[1];
  v33(v32);
}

uint64_t sub_10002A348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10006EC08();
  v4[12] = swift_task_alloc();
  sub_10006F4B8();
  v4[13] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v4[14] = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_10002A468;
  return sub_10003D78C((uint64_t)(v4 + 7), a2, a3, a4);
}

uint64_t sub_10002A468()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10002A564, 0, 0);
}

uint64_t sub_10002A564()
{
  sub_10002BFD0((uint64_t)(v0 + 7), (uint64_t)(v0 + 2));
  uint64_t v1 = v0[6];
  if (v1)
  {
    if ((uint64_t)v0[4] >= 1)
    {
      uint64_t v2 = v0[5];
      sub_100004960(&qword_100091CC0);
      uint64_t v3 = (double *)swift_allocObject();
      *((_OWORD *)v3 + 1) = xmmword_100070910;
      sub_10006F4A8();
      sub_10006EBF8();
      uint64_t v4 = sub_10006F518();
      strcpy((char *)v3 + 32, "lightbulb.fill");
      *((unsigned char *)v3 + 47) = -18;
      *((void *)v3 + 6) = v4;
      *((void *)v3 + 7) = v5;
      *((void *)v3 + 8) = v2;
      *((void *)v3 + 9) = v1;
      *((unsigned char *)v3 + 80) = 0;
      goto LABEL_6;
    }
    sub_10002C038((uint64_t)(v0 + 7));
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(double *))v0[1];
  return v6(v3);
}

size_t sub_10002A718(size_t result)
{
  int64_t v2 = result;
  unint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(double **)v1;
  int64_t v5 = v3 >> 1;
  if ((v3 & 1) == 0 || (result = swift_isUniquelyReferenced_nonNull(), *(void *)uint64_t v1 = v4, (result & 1) == 0))
  {
    unint64_t v9 = v4;
    goto LABEL_9;
  }
  uint64_t v6 = *(void *)(v1 + 16);
  int64_t v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v8 = *(void *)(v1 + 8);
  sub_10006FD08();
  swift_unknownObjectRetain();
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = (size_t)_swiftEmptyArrayStorage;
  }
  unint64_t v9 = *(double **)(result + 16);
  if (v8 + 56 * v6 + 56 * v7 == result + 56 * (void)v9 + 32) {
    goto LABEL_29;
  }
  uint64_t result = swift_release();
  while (1)
  {
    if (v7 >= v2) {
      goto LABEL_26;
    }
    unint64_t v9 = *(double **)v1;
LABEL_9:
    uint64_t v10 = *(void *)(v1 + 16);
    int64_t v7 = v5 - v10;
    if (__OFSUB__(v5, v10))
    {
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v11 = *(void *)(v1 + 8);
    if (!(v7 <= v2 ? v2 : v5 - v10)) {
      break;
    }
    sub_100004960(&qword_100091CC0);
    uint64_t v4 = (double *)swift_allocObject();
    uint64_t result = j__malloc_size(v4);
    *((void *)v4 + 2) = v7;
    *((void *)v4 + 3) = 2 * ((uint64_t)(result - 32) / 56);
    if (v5 >= v10) {
      goto LABEL_15;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    unint64_t v18 = *(void *)(result + 24);
    uint64_t result = swift_release();
    unint64_t v19 = (v18 >> 1) - (void)v9;
    BOOL v20 = __OFADD__(v7, v19);
    v7 += v19;
    if (v20) {
      goto LABEL_38;
    }
  }
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (v5 < v10) {
    goto LABEL_28;
  }
LABEL_15:
  if ((v7 & 0x8000000000000000) == 0)
  {
    unint64_t v13 = (unint64_t)(v4 + 4);
    unint64_t v14 = v11 + 56 * v10;
    if (v14 >= (unint64_t)&v4[7 * v7 + 4] || v13 >= v14 + 56 * v7)
    {
      swift_arrayInitWithCopy();
      if (!__OFSUB__(0, v10))
      {
        uint64_t v16 = *((void *)v4 + 2);
        uint64_t v17 = v10 + v16;
        if (!__OFADD__(v10, v16))
        {
          if (v17 >= v10)
          {
            uint64_t result = swift_unknownObjectRelease();
            if ((v17 & 0x8000000000000000) == 0)
            {
              *(void *)(v1 + 8) = v13 - 56 * v10;
              *(void *)(v1 + 16) = v10;
              *(void *)(v1 + 24) = (2 * v17) | 1;
LABEL_26:
              *(void *)uint64_t v1 = v4;
              return result;
            }
            goto LABEL_36;
          }
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
LABEL_39:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_10002A9B8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  uint64_t v6 = v4[3] >> 1;
  int64_t v7 = (double *)(v6 - v5);
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v15 = (char *)v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  BOOL v11 = __OFSUB__(v15, v14);
  uint64_t v16 = &v15[-v14];
  if (v11)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v34 = v16;
  size_t v17 = 56 * a2;
  __dst = (char *)(v9 + 32);
  uint64_t v18 = v9 + 32 + 56 * a2;
  BOOL v33 = (char *)(v18 + 56 * a3);
  uint64_t v19 = sub_10002AFE8(v7);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v32 = v9;
    uint64_t v21 = v4[2];
    uint64_t v22 = (char *)(v4[1] + 56 * v21);
    swift_arrayDestroy();
    if (a2 < 0) {
      goto LABEL_46;
    }
    uint64_t v23 = &v22[v17];
    if (__dst != v22 || __dst >= v23) {
      memmove(__dst, v22, v17);
    }
    swift_arrayDestroy();
    a4(v18, a3);
    if (v14 < 0) {
      goto LABEL_46;
    }
    unint64_t v24 = &v23[56 * (void)v34];
    if (v33 != v24 || v33 >= &v24[56 * v14]) {
      memmove(v33, v24, 56 * v14);
    }
    swift_arrayDestroy();
    *(void *)(v20 + 16) = 0;
    swift_release();
    uint64_t v9 = v32;
LABEL_26:
    swift_retain();
    uint64_t result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v21))
    {
      uint64_t v30 = *(void *)(v9 + 16);
      BOOL v11 = __OFADD__(v21, v30);
      uint64_t v31 = v21 + v30;
      if (!v11)
      {
        if (v31 >= v21)
        {
          if ((v31 & 0x8000000000000000) == 0)
          {
            void *v4 = v9;
            v4[1] = &__dst[-56 * v21];
            v4[2] = v21;
            v4[3] = (2 * v31) | 1;
            return result;
          }
          goto LABEL_39;
        }
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v21 = v4[2];
  uint64_t v26 = v21 + a2;
  if (__OFADD__(v21, a2))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v26 < v21)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (__OFSUB__(v26, v21))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  swift_arrayInitWithCopy();
  a4((uint64_t)&__dst[56 * a2], a3);
  unint64_t v27 = &v34[v26];
  if (__OFADD__(v26, v34))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  BOOL v28 = (char *)(v4[3] >> 1);
  if ((uint64_t)v28 < (uint64_t)v27)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (!__OFSUB__(v28, v27))
  {
    swift_arrayInitWithCopy();
    goto LABEL_26;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

double *sub_10002ACF0(double *result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = v3 >> 1;
  BOOL v5 = __OFSUB__(v3 >> 1, v2);
  uint64_t v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  int64_t v7 = (char *)result - v6;
  if (__OFSUB__(result, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7) {
    return result;
  }
  sub_10006FD08();
  swift_unknownObjectRetain();
  uint64_t result = (double *)swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = *((void *)result + 2);
  BOOL v5 = __OFADD__(v8, v7);
  uint64_t v9 = &v7[v8];
  if (v5) {
    goto LABEL_13;
  }
  *((void *)result + 2) = v9;
  uint64_t result = (double *)swift_release();
  uint64_t v10 = &v7[v4];
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (((unint64_t)v10 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *(void *)(v1 + 24) = v3 & 1 | (2 * (void)v10);
  return result;
}

double *sub_10002ADA8(double *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = a2;
  uint64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_32;
  }
  sub_10006FD08();
  swift_unknownObjectRetain();
  BOOL v11 = (double *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    BOOL v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = *((void *)v11 + 2);
  uint64_t v13 = a4 + 56 * a5 + 56 * v8;
  if ((double *)v13 == &v11[7 * v12 + 4])
  {
    unint64_t v15 = *((void *)v11 + 3);
    uint64_t result = (double *)swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  size_t v17 = (double *)swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      size_t v17 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = *((void *)v17 + 2);
    if ((double *)v13 == &v17[7 * v18 + 4])
    {
      unint64_t v20 = *((void *)v17 + 3);
      uint64_t result = (double *)swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t result = (double *)swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    size_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v19 = *((void *)v17 + 2);
  if ((double *)v13 == &v17[7 * v19 + 4])
  {
    unint64_t v23 = *((void *)v17 + 3);
    uint64_t result = (double *)swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= (uint64_t)v6) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = (double *)v25;
  }
  if (!v26) {
    return _swiftEmptyArrayStorage;
  }
  sub_100004960(&qword_100091CC0);
  unint64_t v27 = (void *)swift_allocObject();
  size_t v28 = j__malloc_size(v27);
  v27[2] = v6;
  v27[3] = 2 * ((uint64_t)(v28 - 32) / 56);
  return (double *)v27;
}

uint64_t (*sub_10002AFCC())()
{
  return SecurityAccessoryConfigurationIntentResponseCode.rawValue.getter;
}

uint64_t sub_10002AFE8(double *a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  sub_10006FD08();
  swift_unknownObjectRetain();
  uint64_t v9 = (double *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = *((void *)v9 + 2);
  if ((double *)(v8 + 56 * v6 + 56 * v7) != &v9[7 * v10 + 4])
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = *((void *)v9 + 3);
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < (uint64_t)a1) {
      return 0;
    }
    sub_10006FD08();
    swift_unknownObjectRetain();
    a1 = (double *)swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = _swiftEmptyArrayStorage;
    }
    uint64_t v16 = (v8 + 56 * v6 - (uint64_t)a1 - 32) / 56;
    uint64_t isUniquelyReferenced_nonNull = v7 + v16;
    if (!__OFADD__(v7, v16))
    {
      uint64_t v4 = *((void *)a1 + 2);
      if (isUniquelyReferenced_nonNull >= v4) {
        return (uint64_t)a1;
      }
LABEL_19:
      sub_10002B170(isUniquelyReferenced_nonNull, v4, 0);
      return (uint64_t)a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

char *sub_10002B170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 56 * a1;
  uint64_t result = (char *)swift_arrayDestroy();
  BOOL v10 = __OFSUB__(a3, v4);
  uint64_t v11 = a3 - v4;
  if (v10)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v10 = __OFSUB__(v12, a2);
  uint64_t v13 = v12 - a2;
  if (v10) {
    goto LABEL_15;
  }
  if (v13 < 0)
  {
LABEL_18:
    uint64_t result = (char *)sub_10006FB08();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v8 + 56 * a3);
  uint64_t v14 = (char *)(v7 + 32 + 56 * a2);
  size_t v15 = 56 * v13;
  if (result != v14 || result >= &v14[v15]) {
    uint64_t result = (char *)memmove(result, v14, v15);
  }
  uint64_t v16 = *(void *)(v7 + 16);
  BOOL v10 = __OFADD__(v16, v11);
  uint64_t v17 = v16 + v11;
  if (v10) {
    goto LABEL_16;
  }
  *(void *)(v7 + 16) = v17;
LABEL_11:
  if (a3 > 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

double *sub_10002B29C(double *result, unint64_t a2)
{
  unint64_t v3 = v2[3];
  uint64_t v34 = v2[2];
  uint64_t v4 = (v3 >> 1) - v34;
  if (__OFSUB__(v3 >> 1, v34))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v29 = result;
  unint64_t v41 = *((void *)result + 2);
  if (v41 != a2)
  {
    if (v41 <= a2)
    {
LABEL_44:
      __break(1u);
      return result;
    }
    uint64_t v6 = &result[7 * a2];
    char v42 = *((unsigned char *)v6 + 80);
    double v7 = v6[8];
    double v8 = v6[9];
    double v10 = v6[6];
    double v9 = v6[7];
    double v11 = v6[4];
    double v12 = v6[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (double *)swift_bridgeObjectRetain();
    if (v12 != 0.0)
    {
      unint64_t v13 = a2 + 1;
      uint64_t v36 = v2;
      while (!__OFADD__(v4, 1))
      {
        uint64_t v43 = sub_10002ADA8((double *)v4, v4 + 1, *v2, v2[1], v34, v3);
        uint64_t v14 = sub_10002AFCC();
        sub_10002A9B8((uint64_t *)&v43, v4, 0, (void (*)(uint64_t, uint64_t))v14);
        swift_release();
        uint64_t result = (double *)swift_release();
        unint64_t v15 = v36[3];
        uint64_t v34 = v36[2];
        if (__OFSUB__(v15 >> 1, v34)) {
          goto LABEL_37;
        }
        uint64_t v33 = (v15 >> 1) - v34;
        unint64_t v31 = v15 >> 1;
        uint64_t v32 = v36[1];
        uint64_t v35 = v36[3];
        if (v15)
        {
          sub_10006FD08();
          swift_unknownObjectRetain();
          uint64_t v16 = (double *)swift_dynamicCastClass();
          if (!v16)
          {
            swift_unknownObjectRelease();
            uint64_t v16 = _swiftEmptyArrayStorage;
          }
          uint64_t v17 = *((void *)v16 + 2);
          uint64_t v30 = 56 * v34;
          if ((double *)(v32 + 56 * v34 + 56 * v33) == &v16[7 * v17 + 4])
          {
            unint64_t v40 = *((void *)v16 + 3);
            uint64_t result = (double *)swift_release();
            uint64_t v18 = (v40 >> 1) - v17;
            uint64_t v39 = v33 + v18;
            if (__OFADD__(v33, v18)) {
              goto LABEL_42;
            }
          }
          else
          {
            uint64_t result = (double *)swift_release();
            uint64_t v39 = v33;
          }
        }
        else
        {
          uint64_t v30 = 56 * v34;
          uint64_t v39 = (v15 >> 1) - v34;
        }
        unint64_t v19 = v41;
        if (v13 > v41) {
          unint64_t v19 = v13;
        }
        unint64_t v38 = v19;
        if (v4 < v39)
        {
          uint64_t v20 = 0;
          uint64_t v21 = v4 + 1;
          uint64_t v37 = &v29[7 * v13];
          uint64_t v22 = v32 + v30 + 56 * v4;
          while (1)
          {
            uint64_t v4 = v21;
            uint64_t v23 = v22 + v20 * 8;
            *(double *)uint64_t v23 = v11;
            *(double *)(v23 + 8) = v12;
            *(double *)(v23 + 16) = v10;
            *(double *)(v23 + 24) = v9;
            *(double *)(v23 + 32) = v7;
            *(double *)(v23 + 40) = v8;
            *(unsigned char *)(v23 + 48) = v42 & 1;
            if (v41 == v13)
            {
              char v42 = 0;
              double v8 = 0.0;
              double v7 = 0.0;
              double v9 = 0.0;
              double v10 = 0.0;
              double v12 = 0.0;
              double v11 = 0.0;
              unint64_t v13 = v41;
              goto LABEL_25;
            }
            if (v38 == v13) {
              break;
            }
            ++v13;
            char v42 = LOBYTE(v37[v20 + 10]);
            double v7 = v37[v20 + 8];
            double v8 = v37[v20 + 9];
            double v10 = v37[v20 + 6];
            double v9 = v37[v20 + 7];
            double v11 = v37[v20 + 4];
            double v12 = v37[v20 + 5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t result = (double *)swift_bridgeObjectRetain();
            if (v12 != 0.0)
            {
              uint64_t v21 = v4 + 1;
              v20 += 7;
              if (v4 < v39) {
                continue;
              }
            }
            goto LABEL_25;
          }
          __break(1u);
          break;
        }
LABEL_25:
        uint64_t v24 = v4 - v33;
        if (__OFSUB__(v4, v33)) {
          goto LABEL_38;
        }
        if (v24)
        {
          sub_10006FD08();
          swift_unknownObjectRetain();
          uint64_t result = (double *)swift_dynamicCastClass();
          if (!result)
          {
            swift_unknownObjectRelease();
            uint64_t result = _swiftEmptyArrayStorage;
          }
          uint64_t v25 = *((void *)result + 2);
          BOOL v26 = __OFADD__(v25, v24);
          uint64_t v27 = v25 + v24;
          if (v26) {
            goto LABEL_39;
          }
          *((void *)result + 2) = v27;
          uint64_t result = (double *)swift_release();
          unint64_t v28 = v31 + v24;
          if (__OFADD__(v31, v24)) {
            goto LABEL_40;
          }
          if ((v28 & 0x8000000000000000) != 0) {
            goto LABEL_41;
          }
          uint64_t v35 = v35 & 1 | (2 * v28);
          v36[3] = v35;
        }
        unint64_t v3 = v35;
        uint64_t v2 = v36;
        if (v12 == 0.0) {
          return result;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
  }
  return result;
}

double *sub_10002B638(uint64_t a1)
{
  uint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  int64_t v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3))
  {
    __break(1u);
    goto LABEL_39;
  }
  int64_t v6 = *(void *)(a1 + 16);
  if ((v2 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v7 = v1[1];
  sub_10006FD08();
  swift_unknownObjectRetain();
  double v8 = (double *)swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    double v8 = _swiftEmptyArrayStorage;
  }
  uint64_t v9 = *((void *)v8 + 2);
  if ((double *)(v7 + 56 * v3 + 56 * v4) != &v8[7 * v9 + 4])
  {
    swift_release();
LABEL_7:
    int64_t v10 = v4;
    goto LABEL_9;
  }
  unint64_t v11 = *((void *)v8 + 3);
  swift_release();
  uint64_t v12 = (v11 >> 1) - v9;
  BOOL v13 = __OFADD__(v4, v12);
  int64_t v10 = v4 + v12;
  if (v13)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_9:
  int64_t v14 = v4 + v6;
  if (__OFADD__(v4, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v10 < v14)
  {
    if (v10 + 0x4000000000000000 < 0)
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v15 = 2 * v10;
    if (v15 > v14) {
      int64_t v14 = v15;
    }
  }
  uint64_t result = (double *)sub_10002A718(v14);
  uint64_t v18 = v1[2];
  unint64_t v17 = v1[3];
  uint64_t v19 = (v17 >> 1) - v18;
  if (__OFSUB__(v17 >> 1, v18)) {
    goto LABEL_40;
  }
  unint64_t v20 = v1[1] + 56 * v18 + 56 * v19;
  if ((v17 & 1) == 0)
  {
LABEL_20:
    uint64_t v23 = v19;
    goto LABEL_22;
  }
  sub_10006FD08();
  swift_unknownObjectRetain();
  uint64_t v21 = (double *)swift_dynamicCastClass();
  if (!v21)
  {
    swift_unknownObjectRelease();
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = *((void *)v21 + 2);
  if ((double *)v20 != &v21[7 * v22 + 4])
  {
    uint64_t result = (double *)swift_release();
    goto LABEL_20;
  }
  unint64_t v24 = *((void *)v21 + 3);
  uint64_t result = (double *)swift_release();
  uint64_t v25 = (v24 >> 1) - v22;
  BOOL v13 = __OFADD__(v19, v25);
  uint64_t v23 = v19 + v25;
  if (v13)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    uint64_t result = (double *)sub_10006FB08();
    __break(1u);
    return result;
  }
LABEL_22:
  int64_t v26 = v23 - v19;
  if (__OFSUB__(v23, v19))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (!v6) {
    goto LABEL_33;
  }
  if (v26 < v6) {
    goto LABEL_42;
  }
  if (a1 + 32 < v20 + 56 * v6 && v20 < a1 + 32 + 56 * v6) {
    goto LABEL_47;
  }
  uint64_t result = (double *)swift_arrayInitWithCopy();
  if (v6 > 0)
  {
    if (!__OFADD__(v19, v6))
    {
      uint64_t result = sub_10002ACF0((double *)(v19 + v6));
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_33:
  if (v6 == v26)
  {
    return sub_10002B29C((double *)a1, v6);
  }
  return result;
}

double *sub_10002B8CC(double *result)
{
  uint64_t v32 = *(void *)(v1 + 16);
  unint64_t v33 = *(void *)(v1 + 24);
  uint64_t v2 = (v33 >> 1) - v32;
  if (__OFSUB__(v33 >> 1, v32))
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    return result;
  }
  uint64_t v30 = (uint64_t *)v1;
  uint64_t v3 = *((void *)result + 4);
  uint64_t v41 = *((void *)result + 3) >> 1;
  if (v3 != v41)
  {
    uint64_t v34 = *((void *)result + 2);
    if (v3 < v34 || v3 >= v41) {
      goto LABEL_48;
    }
    uint64_t v27 = *((void *)result + 1);
    unint64_t v5 = (uint64_t *)(v27 + 56 * v3);
    char v6 = *((unsigned char *)v5 + 48);
    uint64_t v8 = v5[4];
    uint64_t v7 = v5[5];
    uint64_t v10 = v5[2];
    uint64_t v9 = v5[3];
    uint64_t v11 = *v5;
    uint64_t v12 = v5[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (double *)swift_bridgeObjectRetain();
    if (v12)
    {
      uint64_t v40 = v3 + 1;
      while (!__OFADD__(v2, 1))
      {
        char v42 = sub_10002ADA8((double *)v2, v2 + 1, *v30, v30[1], v32, v33);
        BOOL v13 = sub_10002AFCC();
        sub_10002A9B8((uint64_t *)&v42, v2, 0, (void (*)(uint64_t, uint64_t))v13);
        swift_release();
        uint64_t result = (double *)swift_release();
        unint64_t v14 = v30[3];
        uint64_t v32 = v30[2];
        unint64_t v29 = v14 >> 1;
        if (__OFSUB__(v14 >> 1, v32)) {
          goto LABEL_42;
        }
        uint64_t v31 = (v14 >> 1) - v32;
        uint64_t v36 = v30[1];
        unint64_t v33 = v30[3];
        if (v14)
        {
          sub_10006FD08();
          swift_unknownObjectRetain();
          uint64_t v15 = (double *)swift_dynamicCastClass();
          if (!v15)
          {
            swift_unknownObjectRelease();
            uint64_t v15 = _swiftEmptyArrayStorage;
          }
          uint64_t v16 = *((void *)v15 + 2);
          uint64_t v28 = 56 * v32;
          if ((double *)(v36 + 56 * v32 + 56 * v31) == &v15[7 * v16 + 4])
          {
            unint64_t v39 = *((void *)v15 + 3);
            uint64_t result = (double *)swift_release();
            uint64_t v17 = (v39 >> 1) - v16;
            uint64_t v38 = v31 + v17;
            if (__OFADD__(v31, v17)) {
              goto LABEL_46;
            }
          }
          else
          {
            uint64_t result = (double *)swift_release();
            uint64_t v38 = v31;
          }
        }
        else
        {
          uint64_t v28 = 56 * v32;
          uint64_t v38 = (v14 >> 1) - v32;
        }
        if (v2 < v38)
        {
          uint64_t v18 = 0;
          uint64_t v19 = v2 + 1;
          uint64_t v20 = v40;
          uint64_t v35 = v27 + 56 * v40;
          uint64_t v37 = v36 + v28 + 56 * v2;
          while (1)
          {
            uint64_t v2 = v19;
            uint64_t v21 = v37 + v18;
            *(void *)uint64_t v21 = v11;
            *(void *)(v21 + 8) = v12;
            *(void *)(v21 + 16) = v10;
            *(void *)(v21 + 24) = v9;
            *(void *)(v21 + 32) = v8;
            *(void *)(v21 + 40) = v7;
            *(unsigned char *)(v21 + 48) = v6 & 1;
            if (v41 == v20)
            {
              char v6 = 0;
              uint64_t v7 = 0;
              uint64_t v8 = 0;
              uint64_t v9 = 0;
              uint64_t v10 = 0;
              uint64_t v12 = 0;
              uint64_t v11 = 0;
              uint64_t v20 = v41;
              goto LABEL_31;
            }
            if (v40 < v34 || v20 >= v41) {
              break;
            }
            ++v20;
            char v6 = *(unsigned char *)(v35 + v18 + 48);
            uint64_t v8 = *(void *)(v35 + v18 + 32);
            uint64_t v7 = *(void *)(v35 + v18 + 40);
            uint64_t v10 = *(void *)(v35 + v18 + 16);
            uint64_t v9 = *(void *)(v35 + v18 + 24);
            uint64_t v11 = *(void *)(v35 + v18);
            uint64_t v12 = *(void *)(v35 + v18 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t result = (double *)swift_bridgeObjectRetain();
            if (v12)
            {
              uint64_t v19 = v2 + 1;
              v18 += 56;
              if (v2 < v38) {
                continue;
              }
            }
            goto LABEL_31;
          }
          __break(1u);
          break;
        }
        uint64_t v20 = v40;
LABEL_31:
        uint64_t v22 = v2 - v31;
        if (__OFSUB__(v2, v31)) {
          goto LABEL_43;
        }
        if (v22)
        {
          sub_10006FD08();
          swift_unknownObjectRetain();
          uint64_t result = (double *)swift_dynamicCastClass();
          if (!result)
          {
            swift_unknownObjectRelease();
            uint64_t result = _swiftEmptyArrayStorage;
          }
          uint64_t v23 = *((void *)result + 2);
          BOOL v24 = __OFADD__(v23, v22);
          uint64_t v25 = v23 + v22;
          if (v24) {
            goto LABEL_44;
          }
          *((void *)result + 2) = v25;
          uint64_t result = (double *)swift_release();
          unint64_t v26 = v29 + v22;
          if (__OFADD__(v29, v22)) {
            goto LABEL_45;
          }
          if ((v26 & 0x8000000000000000) != 0)
          {
            __break(1u);
            return result;
          }
          unint64_t v33 = v33 & 1 | (2 * v26);
          v30[3] = v33;
        }
        uint64_t v40 = v20;
        if (!v12) {
          return result;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
  }
  return result;
}

double *sub_10002BC7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  *(void *)&double v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v8 = v4[2];
  unint64_t v7 = v4[3];
  int64_t v9 = (v7 >> 1) - v8;
  if (__OFSUB__(v7 >> 1, v8))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if ((v7 & 1) == 0)
  {
LABEL_8:
    int64_t v15 = v9;
    goto LABEL_10;
  }
  uint64_t v12 = v4[1];
  sub_10006FD08();
  swift_unknownObjectRetain();
  BOOL v13 = (double *)swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    BOOL v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = *((void *)v13 + 2);
  if ((double *)(v12 + 56 * v8 + 56 * v9) != &v13[7 * v14 + 4])
  {
    swift_release();
    goto LABEL_8;
  }
  unint64_t v16 = *((void *)v13 + 3);
  swift_release();
  uint64_t v17 = (v16 >> 1) - v14;
  BOOL v18 = __OFADD__(v9, v17);
  int64_t v15 = v9 + v17;
  if (v18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_10:
  int64_t v19 = v9 + v6;
  if (__OFADD__(v9, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v15 < v19)
  {
    if (v15 + 0x4000000000000000 < 0)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    uint64_t v20 = 2 * v15;
    if (v20 > v19) {
      int64_t v19 = v20;
    }
  }
  uint64_t result = (double *)sub_10002A718(v19);
  uint64_t v23 = v4[2];
  unint64_t v22 = v4[3];
  uint64_t v24 = (v22 >> 1) - v23;
  if (__OFSUB__(v22 >> 1, v23)) {
    goto LABEL_40;
  }
  unint64_t v25 = v4[1] + 56 * v23 + 56 * v24;
  if ((v22 & 1) == 0)
  {
LABEL_21:
    uint64_t v28 = v24;
    goto LABEL_23;
  }
  sub_10006FD08();
  swift_unknownObjectRetain();
  unint64_t v26 = (double *)swift_dynamicCastClass();
  if (!v26)
  {
    swift_unknownObjectRelease();
    unint64_t v26 = _swiftEmptyArrayStorage;
  }
  uint64_t v27 = *((void *)v26 + 2);
  if ((double *)v25 != &v26[7 * v27 + 4])
  {
    uint64_t result = (double *)swift_release();
    goto LABEL_21;
  }
  unint64_t v29 = *((void *)v26 + 3);
  uint64_t result = (double *)swift_release();
  uint64_t v30 = (v29 >> 1) - v27;
  BOOL v18 = __OFADD__(v24, v30);
  uint64_t v28 = v24 + v30;
  if (v18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_23:
  uint64_t v31 = v28 - v24;
  if (__OFSUB__(v28, v24))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (*(void *)&v5 == a3)
  {
    if (v6 <= 0)
    {
      uint64_t v6 = 0;
      double v5 = *(double *)&a3;
      goto LABEL_34;
    }
    goto LABEL_42;
  }
  if (v31 < v6)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v6 < 0) {
    goto LABEL_48;
  }
  unint64_t v32 = a2 + 56 * a3;
  if (v32 < v25 + 56 * v6 && v25 < v32 + 56 * v6) {
    goto LABEL_48;
  }
  uint64_t result = (double *)swift_arrayInitWithCopy();
  if (v6)
  {
    if (__OFADD__(v24, v6))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      uint64_t result = (double *)sub_10006FB08();
      __break(1u);
      return result;
    }
    uint64_t result = sub_10002ACF0((double *)(v24 + v6));
  }
LABEL_34:
  if (v6 == v31)
  {
    *(void *)&v35[0] = a1;
    *(void *)&v35[1] = a2;
    *(void *)&v35[2] = a3;
    *(void *)&v35[3] = a4;
    v35[4] = v5;
    return sub_10002B8CC(v35);
  }
  return result;
}

unint64_t sub_10002BF78()
{
  unint64_t result = qword_100092160;
  if (!qword_100092160)
  {
    sub_10006EB88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092160);
  }
  return result;
}

uint64_t sub_10002BFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004960(&qword_100092168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002C038(uint64_t a1)
{
  return a1;
}

uint64_t DefaultWidgetConfiguration<A, B, C>(kind:intent:provider:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v13[0] = a5;
  v13[1] = a8;
  __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v10, v11);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_10006F388();
}

uint64_t sub_10002C198()
{
  sub_10006F398();

  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for HomeSummaryWidget()
{
  return &type metadata for HomeSummaryWidget;
}

uint64_t sub_10002C1F4()
{
  return swift_getOpaqueTypeConformance2();
}

int *sub_10002C210@<X0>(uint64_t a1@<X8>)
{
  if (__OFADD__(qword_10009A798, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_10009A798;
    strcpy((char *)v19, "Home Summary ");
    HIWORD(v19[1]) = -4864;
    v20._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v20);
    swift_bridgeObjectRelease();
    uint64_t v2 = v19[0];
    unint64_t v1 = v19[1];
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v4 = sub_10006EC68();
  sub_100004B08(v4, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain();
  double v5 = sub_10006EC48();
  os_log_type_t v6 = sub_10006F818();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    sub_100022B5C(v2, v1, v19);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100022B5C(0xD000000000000010, 0x8000000100077A30, v19);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10006EB78();
  if (qword_1000916B0 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10009A788;
  uint64_t v8 = unk_10009A790;
  uint64_t v10 = qword_100091770;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_10009A9F8;
  swift_bridgeObjectRetain();
  sub_10006F408();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  unint64_t result = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v17 = (uint64_t *)(a1 + result[5]);
  uint64_t *v17 = v9;
  v17[1] = v8;
  *(void *)(a1 + result[6]) = v11;
  BOOL v18 = (void *)(a1 + result[7]);
  *BOOL v18 = v13;
  v18[1] = v15;
  return result;
}

uint64_t sub_10002C538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v7 = sub_10006F438();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_100091DE8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = qword_10009A798 + 1;
  if (__OFADD__(qword_10009A798, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = v9;
    unint64_t v33 = v13;
    ++qword_10009A798;
    strcpy((char *)v36, "Home Summary ");
    HIWORD(v36[1]) = -4864;
    uint64_t v35 = v14;
    v37._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v37);
    swift_bridgeObjectRelease();
    uint64_t v3 = v36[0];
    unint64_t v4 = v36[1];
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v15 = sub_10006EC68();
  sub_100004B08(v15, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  unint64_t v16 = sub_10006EC48();
  os_log_type_t v17 = sub_10006F818();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v31 = a3;
    uint64_t v19 = v18;
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v29 = v7;
    uint64_t v30 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_100022B5C(v3, v4, v36);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v35 = sub_100022B5C(0xD00000000000001BLL, 0x8000000100077A10, v36);
    uint64_t v7 = v29;
    uint64_t v10 = v30;
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v31;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = v32;
  uint64_t v21 = sub_10006F6F8();
  uint64_t v22 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v33, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v23 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v24 = (v20 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = 0;
  *((void *)v25 + 3) = 0;
  *((void *)v25 + 4) = v34;
  *((void *)v25 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v25[v23], v10, v7);
  unint64_t v26 = (uint64_t *)&v25[v24];
  *unint64_t v26 = v3;
  v26[1] = v4;
  swift_retain();
  sub_10003A10C(v22, (uint64_t)&unk_100092260, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_10002C96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for ThreeColumnDataEntry();
  uint64_t v12 = swift_task_alloc();
  v8[4] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v8[5] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_100016AEC;
  return sub_10002CA54(v12, a6, a7, a8);
}

uint64_t sub_10002CA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  uint64_t v5 = sub_10006EB88();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  sub_10006EC08();
  v4[18] = swift_task_alloc();
  sub_10006F4B8();
  v4[19] = swift_task_alloc();
  uint64_t v6 = sub_10006F348();
  v4[20] = v6;
  v4[21] = *(void *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  return _swift_task_switch(sub_10002CBDC, 0, 0);
}

uint64_t sub_10002CBDC()
{
  uint64_t v32 = v0;
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  unint64_t v1 = (void **)(qword_10009A778 + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome);
  swift_beginAccess();
  uint64_t v2 = *v1;
  v0[24] = *v1;
  uint64_t v3 = qword_1000916B8;
  id v4 = v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10006EC68();
  v0[25] = sub_100004B08(v5, (uint64_t)qword_10009A7A0);
  id v6 = v4;
  swift_bridgeObjectRetain_n();
  id v7 = v6;
  uint64_t v8 = sub_10006EC48();
  os_log_type_t v9 = sub_10006F818();
  BOOL v10 = os_log_type_enabled(v8, v9);
  unint64_t v11 = v0[14];
  if (v10)
  {
    uint64_t v12 = v0[13];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    v0[9] = sub_100022B5C(v12, v11, &v31);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v30 = v2;
    if (v2)
    {
      id v14 = [v7 name];
      uint64_t v15 = sub_10006F4F8();
      unint64_t v17 = v16;
    }
    else
    {
      unint64_t v17 = 0xE300000000000000;
      uint64_t v15 = 7104878;
    }
    v0[10] = sub_100022B5C(v15, v17, &v31);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v30;
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v19 = v0[22];
  uint64_t v18 = v0[23];
  uint64_t v20 = v0[20];
  uint64_t v21 = v0[21];
  sub_10006F418();
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v19, enum case for WidgetFamily.systemSmall(_:), v20);
  sub_10002F078(&qword_100091E18, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_10006F5F8();
  sub_10006F5F8();
  uint64_t v23 = v0[5];
  uint64_t v22 = v0[6];
  unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v24(v19, v20);
  v24(v18, v20);
  if (v23 == v22) {
    uint64_t v25 = 5;
  }
  else {
    uint64_t v25 = 3;
  }
  unint64_t v26 = (void *)swift_task_alloc();
  v0[26] = v26;
  *unint64_t v26 = v0;
  v26[1] = sub_10002D018;
  uint64_t v27 = v0[13];
  uint64_t v28 = v0[14];
  return sub_100029254((uint64_t)v2, v27, v28, v25);
}

uint64_t sub_10002D018(uint64_t a1)
{
  *(void *)(*(void *)v1 + 216) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10002D118, 0, 0);
}

uint64_t sub_10002D118()
{
  uint64_t v38 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_10006EC48();
  os_log_type_t v2 = sub_10006F818();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = *(void *)(v0 + 104);
    unint64_t v3 = *(void *)(v0 + 112);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_100022B5C(v4, v3, &v37);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10006F678();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 64) = sub_100022B5C(v6, v8, &v37);
    sub_10006F868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "...{%s} homeOverviewSummaryRows are %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  if (qword_1000916B0 != -1) {
    swift_once();
  }
  os_log_type_t v9 = *(void **)(v0 + 192);
  uint64_t v10 = qword_10009A788;
  uint64_t v11 = unk_10009A790;
  if (v9)
  {
    id v12 = v9;
    swift_bridgeObjectRetain();
    id v13 = [v12 currentUser];
    LOBYTE(v12) = HMHome.shouldShowNoAccessOutsideOfSchedule(forRestrictedUser:)((HMUser)v13);

    if ((v12 & 1) != 0
      || (id v14 = [*(id *)(v0 + 192) currentUser],
          Swift::Bool v15 = HMHome.shouldShowNoAccessAwayFromHome(forRestrictedUser:)((HMUser)v14),
          v14,
          v15))
    {
      unint64_t v16 = *(void **)(v0 + 192);
      swift_bridgeObjectRelease();
      sub_10006F4A8();
      sub_10006EBF8();
      uint64_t v10 = sub_10006F518();
      uint64_t v11 = v17;
    }
    else
    {
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = *(void *)(v0 + 216);
  sub_10006EB78();
  uint64_t v19 = *(void *)(v0 + 216);
  uint64_t v36 = v10;
  if (!*(void *)(v18 + 16))
  {
    swift_bridgeObjectRelease();
    sub_100004960(&qword_100091CC0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_100070910;
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v20 = sub_10006F518();
    *(void *)(v19 + 32) = 0xD000000000000018;
    *(void *)(v19 + 40) = 0x80000001000779B0;
    *(void *)(v19 + 48) = 0;
    *(void *)(v19 + 56) = 0xE000000000000000;
    *(void *)(v19 + 64) = v20;
    *(void *)(v19 + 72) = v21;
    *(unsigned char *)(v19 + 80) = 0;
  }
  uint64_t v22 = *(void **)(v0 + 192);
  uint64_t v23 = *(void *)(v0 + 136);
  uint64_t v24 = *(void *)(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 128);
  uint64_t v26 = *(void *)(v0 + 88);
  sub_10006F408();
  uint64_t v28 = v27;
  uint64_t v30 = v29;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v26, v23, v24);
  uint64_t v31 = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v32 = (uint64_t *)(v26 + v31[5]);
  *uint64_t v32 = v36;
  v32[1] = v11;
  *(void *)(v26 + v31[6]) = v19;
  uint64_t v33 = (void *)(v26 + v31[7]);
  *uint64_t v33 = v28;
  v33[1] = v30;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34();
}

uint64_t sub_10002D608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v5 = sub_10006F438();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004960(&qword_100091DE8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = qword_10009A798 + 1;
  if (__OFADD__(qword_10009A798, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = v7;
    ++qword_10009A798;
    strcpy((char *)v42, "Home Summary ");
    HIWORD(v42[1]) = -4864;
    uint64_t v41 = v12;
    v43._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v43);
    swift_bridgeObjectRelease();
    unint64_t v3 = v42[1];
    uint64_t v40 = v42[0];
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v13 = sub_10006EC68();
  uint64_t v14 = sub_100004B08(v13, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  Swift::Bool v15 = sub_10006EC48();
  os_log_type_t v16 = sub_10006F818();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v33[1] = v14;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = v5;
    v42[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v35 = a1;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_100022B5C(v40, v3, v42);
    uint64_t v34 = v11;
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v41 = sub_100022B5C(0xD00000000000001BLL, 0x8000000100077990, v42);
    uint64_t v11 = v34;
    a1 = v35;
    sub_10006F868();
    swift_arrayDestroy();
    uint64_t v5 = v36;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if ((sub_10006F428() & 1) == 0)
  {
    uint64_t v34 = v8;
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_10006EC48();
    os_log_type_t v21 = sub_10006F818();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v36 = v5;
      v42[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v35 = a1;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_100022B5C(v40, v3, v42);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v41 = sub_100022B5C(0xD000000000000026, 0x8000000100078260, v42);
      a1 = v35;
      sub_10006F868();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "...{%s} is preview, notifying homed that '%s' is active", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      uint64_t v5 = v36;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v24 = [self defaultCenter];
    NSString v25 = sub_10006F4D8();
    [v24 postNotificationName:v25 object:0];

    unint64_t v8 = v34;
  }
  uint64_t v26 = sub_10006F6F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 1, 1, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v27 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v28 = (v37 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  uint64_t v30 = v38;
  *((void *)v29 + 4) = v39;
  *((void *)v29 + 5) = v30;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v29[v27], v8, v5);
  uint64_t v31 = &v29[v28];
  *(void *)uint64_t v31 = v40;
  *((void *)v31 + 1) = v3;
  swift_retain();
  sub_10003A10C((uint64_t)v11, (uint64_t)&unk_100092248, (uint64_t)v29);
  return swift_release();
}

uint64_t sub_10002DC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  uint64_t v9 = sub_10006EB88();
  v8[7] = v9;
  v8[8] = *(void *)(v9 - 8);
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  sub_10006F3C8();
  v8[11] = swift_task_alloc();
  uint64_t v10 = sub_100004960(&qword_100091E00);
  v8[12] = v10;
  v8[13] = *(void *)(v10 - 8);
  v8[14] = swift_task_alloc();
  return _swift_task_switch(sub_10002DDAC, 0, 0);
}

uint64_t sub_10002DDAC()
{
  sub_100004960(&qword_100091E08);
  uint64_t v1 = type metadata accessor for ThreeColumnDataEntry();
  v0[15] = v1;
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  v0[16] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_100070910;
  uint64_t v4 = v3 + v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10002DED4;
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  return sub_10002CA54(v4, v8, v6, v7);
}

uint64_t sub_10002DED4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10002DFD0, 0, 0);
}

uint64_t sub_10002DFD0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[13];
  uint64_t v11 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v10 = (void (*)(uint64_t))v0[2];
  sub_10006EB78();
  sub_10006EB58();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v4, v6);
  sub_10006F3B8();
  v7(v3, v6);
  sub_10002F078(qword_100091DB0, (void (*)(uint64_t))type metadata accessor for ThreeColumnDataEntry);
  sub_10006F448();
  v10(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10002E164()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006F4B8();
  __chkstk_darwin(v1 - 8);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t result = sub_10006F518();
  qword_10009A788 = result;
  unk_10009A790 = v3;
  return result;
}

uint64_t sub_10002E280()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004960(&qword_100091DC8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ThreeColumnCategoryView(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_100091DD0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018CC4(v1, (uint64_t)v7);
  uint64_t v12 = (uint64_t *)&v7[*(int *)(v5 + 20)];
  uint64_t *v12 = swift_getKeyPath();
  sub_100004960(&qword_100091DD8);
  swift_storeEnumTagMultiPayload();
  sub_10006EAF8();
  uint64_t v13 = sub_10002F078(&qword_100091DE0, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryView);
  sub_10006F0F8();
  sub_10001947C((uint64_t)v4);
  sub_10001994C((uint64_t)v7, type metadata accessor for ThreeColumnCategoryView);
  v15[0] = v5;
  v15[1] = v13;
  swift_getOpaqueTypeConformance2();
  sub_10006F188();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10002E520@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10006EC08();
  __chkstk_darwin(v1 - 8);
  v24[1] = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100004960(&qword_100092170);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_100092178);
  v24[0] = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_100092180);
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HomeSummaryWidgetView();
  sub_10002F078(&qword_100092188, (void (*)(uint64_t))type metadata accessor for HomeSummaryWidgetView);
  sub_10002EAD4();
  sub_10006F3A8();
  if (qword_1000916B0 != -1) {
    swift_once();
  }
  uint64_t v28 = qword_10009A788;
  uint64_t v29 = (void *)unk_10009A790;
  unint64_t v14 = sub_10002EB28();
  unint64_t v15 = sub_100004A48();
  sub_10006EF68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v32 = sub_10006F518();
  uint64_t v33 = v16;
  uint64_t v28 = v4;
  uint64_t v29 = &type metadata for String;
  unint64_t v30 = v14;
  unint64_t v31 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_10006EF48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24[0] + 8))(v10, v8);
  sub_100004960(&qword_100091D18);
  uint64_t v18 = sub_10006F348();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100070910;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, enum case for WidgetFamily.accessoryRectangular(_:), v18);
  uint64_t v28 = v8;
  uint64_t v29 = &type metadata for String;
  unint64_t v30 = OpaqueTypeConformance2;
  unint64_t v31 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v26;
  sub_10006EF58();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v22);
}

uint64_t type metadata accessor for HomeSummaryWidgetView()
{
  uint64_t result = qword_1000921F8;
  if (!qword_1000921F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10002EAD4()
{
  unint64_t result = qword_100092190;
  if (!qword_100092190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092190);
  }
  return result;
}

unint64_t sub_10002EB28()
{
  unint64_t result = qword_100092198;
  if (!qword_100092198)
  {
    sub_1000049A4(&qword_100092170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092198);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeSummaryTimelineProvider()
{
  return &type metadata for HomeSummaryTimelineProvider;
}

uint64_t sub_10002EB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002EBA8);
}

uint64_t sub_10002EBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10002EC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002EC28);
}

uint64_t sub_10002EC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10002EC98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002ED88()
{
  return sub_10002F078(qword_100091DB0, (void (*)(uint64_t))type metadata accessor for ThreeColumnDataEntry);
}

uint64_t sub_10002EDD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002EDF4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *unint64_t v14 = v2;
  v14[1] = sub_100019620;
  return sub_10002DC48(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_10002EF38(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *unint64_t v14 = v2;
  v14[1] = sub_100019B04;
  return sub_10002C96C(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_10002F078(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HMAccessory.subscript.getter()
{
  id v1 = [v0 services];
  sub_10002F638();
  unint64_t v2 = sub_10006F668();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10006FAC8();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t result = swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_20;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_31;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)sub_10006F9F8();
    }
    else {
      id v5 = *(id *)(v2 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    id v7 = [v5 serviceType];
    sub_10006F4F8();

    _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
    unint64_t v8 = ServiceKind.rawValue.getter();
    uint64_t v10 = v9;
    if (v8 == ServiceKind.rawValue.getter() && v10 == v11)
    {
      swift_bridgeObjectRelease_n();
LABEL_6:
      sub_10006FA48();
      sub_10006FA68();
      sub_10006FA78();
      sub_10006FA58();
      continue;
    }
    char v13 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_6;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0)
  {
LABEL_21:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0) {
      goto LABEL_27;
    }
    if (*(void *)&_swiftEmptyArrayStorage[2]) {
      goto LABEL_23;
    }
LABEL_28:
    swift_release();
    return 0;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_10006FAC8();
  uint64_t result = swift_release();
  if (!v17) {
    goto LABEL_28;
  }
LABEL_23:
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
  {
LABEL_31:
    id v15 = (id)sub_10006F9F8();
LABEL_26:
    id v16 = v15;
    swift_release();
    return (uint64_t)v16;
  }
  if (*(void *)&_swiftEmptyArrayStorage[2])
  {
    id v15 = *(id *)&_swiftEmptyArrayStorage[4];
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t HMAccessory.categoryType.getter()
{
  id v1 = [v0 category];
  id v2 = [v1 categoryType];

  uint64_t v3 = sub_10006F4F8();
  return v3;
}

uint64_t HMAccessory.primaryServiceKind.getter()
{
  uint64_t v0 = (void *)HMAccessory.primaryHomeService.getter();
  id v1 = v0;
  if (v0)
  {
    id v2 = [v0 serviceType];

    sub_10006F4F8();
  }
  LODWORD(result) = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  if (result == 51) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t HMAccessory.primaryHomeService.getter()
{
  id v1 = [v0 services];
  sub_10002F638();
  unint64_t v2 = sub_10006F668();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10006FAC8();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
        goto LABEL_26;
      }
      for (uint64_t i = 0; i != v3; ++i)
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v5 = (id)sub_10006F9F8();
        }
        else {
          id v5 = *(id *)(v2 + 8 * i + 32);
        }
        uint64_t v6 = v5;
        if ([v5 isPrimaryService])
        {
          sub_10006FA48();
          sub_10006FA68();
          sub_10006FA78();
          sub_10006FA58();
        }
        else
        {
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_22;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_22;
  }
LABEL_16:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10006FAC8();
    uint64_t result = swift_release();
    if (!v10) {
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  if (!*(void *)&_swiftEmptyArrayStorage[2])
  {
LABEL_23:
    swift_release();
    return 0;
  }
LABEL_18:
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
  {
LABEL_26:
    id v8 = (id)sub_10006F9F8();
    goto LABEL_21;
  }
  if (*(void *)&_swiftEmptyArrayStorage[2])
  {
    id v8 = *(id *)&_swiftEmptyArrayStorage[4];
LABEL_21:
    id v9 = v8;
    swift_release();
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

unint64_t sub_10002F638()
{
  unint64_t result = qword_100091F10;
  if (!qword_100091F10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100091F10);
  }
  return result;
}

uint64_t HMCharacteristic.characteristicKind.getter()
{
  id v1 = [v0 characteristicType];
  sub_10006F4F8();

  LODWORD(result) = _s20HomeWidgetLockScreen18CharacteristicKindO8rawValueACSgSS_tcfC_0();
  if (result == 174) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t HMCharacteristic.description.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_10006EBD8();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)0xE000000000000000;
  *(void *)&v37[0] = 0;
  *((void *)&v37[0] + 1) = 0xE000000000000000;
  sub_10006F9D8(17);
  long long v38 = v37[0];
  id v7 = [v0 service];
  id v8 = v7;
  if (v7)
  {
    id v9 = [v7 accessory];

    if (v9)
    {
      id v10 = [v9 home];

      if (v10)
      {
        id v11 = [v10 name];

        id v8 = (void *)sub_10006F4F8();
        uint64_t v6 = v12;
      }
      else
      {
        id v8 = 0;
        uint64_t v6 = (void *)0xE000000000000000;
      }
    }
    else
    {
      id v8 = 0;
    }
  }
  v39._uint64_t countAndFlagsBits = (uint64_t)v8;
  v39._object = v6;
  sub_10006F558(v39);
  swift_bridgeObjectRelease();
  v40._uint64_t countAndFlagsBits = 58;
  v40._object = (void *)0xE100000000000000;
  sub_10006F558(v40);
  id v13 = [v1 service];
  if (v13
    && (unint64_t v14 = v13, v15 = [v13 accessory], v14, v15))
  {
    id v16 = [v15 name];

    uint64_t v17 = sub_10006F4F8();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = (void *)0xE000000000000000;
  }
  v41._uint64_t countAndFlagsBits = v17;
  v41._object = v19;
  sub_10006F558(v41);
  swift_bridgeObjectRelease();
  v42._uint64_t countAndFlagsBits = 58;
  v42._object = (void *)0xE100000000000000;
  sub_10006F558(v42);
  v20._uint64_t countAndFlagsBits = (uint64_t)[v1 service];
  if (v20._countAndFlagsBits)
  {
    uint64_t countAndFlagsBits = (void *)v20._countAndFlagsBits;
    id v22 = [(id)v20._countAndFlagsBits serviceType];
    sub_10006F4F8();

    char v23 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
    if (v23 == 51) {
      char v24 = 0;
    }
    else {
      char v24 = v23;
    }
    v20._uint64_t countAndFlagsBits = ServiceKind.localizedDescription.getter(v24);
    object = v20._object;
  }
  else
  {
    object = (void *)0xE000000000000000;
  }
  v20._object = object;
  sub_10006F558(v20);
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = 58;
  v43._object = (void *)0xE100000000000000;
  sub_10006F558(v43);
  id v26 = [v1 characteristicType];
  sub_10006F4F8();

  unsigned int v27 = _s20HomeWidgetLockScreen18CharacteristicKindO8rawValueACSgSS_tcfC_0();
  if (v27 == 174) {
    uint64_t v28 = 0;
  }
  else {
    uint64_t v28 = v27;
  }
  if (qword_100091660 != -1) {
    swift_once();
  }
  uint64_t v29 = 0x6E776F6E6B6E75;
  unint64_t v30 = off_100091808;
  if (*((void *)off_100091808 + 2) && (unint64_t v31 = sub_10000C8B8(v28), (v32 & 1) != 0))
  {
    unint64_t v33 = v30[7] + (v31 << 6);
    uint64_t v29 = *(void *)(v33 + 8);
    uint64_t v34 = *(void **)(v33 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v34 = (void *)0xE700000000000000;
  }
  v44._uint64_t countAndFlagsBits = v29;
  v44._object = v34;
  sub_10006F558(v44);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 58;
  v45._object = (void *)0xE100000000000000;
  sub_10006F558(v45);
  if ([v1 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v37, 0, sizeof(v37));
  }
  sub_100004960(&qword_100091810);
  v46._uint64_t countAndFlagsBits = sub_10006F528();
  sub_10006F558(v46);
  swift_bridgeObjectRelease();
  v47._uint64_t countAndFlagsBits = 58;
  v47._object = (void *)0xE100000000000000;
  sub_10006F558(v47);
  id v35 = [v1 uniqueIdentifier];
  sub_10006EBC8();

  sub_100030E44();
  v48._uint64_t countAndFlagsBits = sub_10006FCC8();
  sub_10006F558(v48);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v38;
}

uint64_t HMCharacteristic.fetchedValue()(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return _swift_task_switch(sub_10002FC08, 0, 0);
}

uint64_t sub_10002FC08()
{
  uint64_t v1 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_10002FCFC;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10002FF50;
  v0[13] = &unk_10008E078;
  v0[14] = v2;
  [v1 readValueWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10002FCFC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_10002FEA0;
  }
  else {
    uint64_t v2 = sub_10002FE0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002FE0C()
{
  id v1 = [*(id *)(v0 + 128) value];
  uint64_t v2 = *(_OWORD **)(v0 + 120);
  if (v1)
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    *uint64_t v2 = 0u;
    v2[1] = 0u;
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10002FEA0()
{
  swift_willThrow();
  swift_errorRelease();
  id v1 = [*(id *)(v0 + 128) value];
  uint64_t v2 = *(_OWORD **)(v0 + 120);
  if (v1)
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    *uint64_t v2 = 0u;
    v2[1] = 0u;
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10002FF50(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_100004960(&qword_1000922A0);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return _swift_continuation_throwingResume(v7);
  }
}

double HMCharacteristic.cachedValue.getter@<D0>(_OWORD *a1@<X8>)
{
  if ([v1 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t HMCharacteristic.BOOL.getter()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100030104;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return _swift_task_switch(sub_10002FC08, 0, 0);
}

uint64_t sub_100030104()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100030200, 0, 0);
}

uint64_t sub_100030200()
{
  if (*(void *)(v0 + 40))
  {
    if (swift_dynamicCast()) {
      uint64_t v1 = *(unsigned __int8 *)(v0 + 56);
    }
    else {
      uint64_t v1 = 2;
    }
  }
  else
  {
    sub_100010C2C(v0 + 16);
    uint64_t v1 = 2;
  }
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t HMCharacteristic.cachedBool.getter()
{
  if ([v0 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_10001CBF0((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return LOBYTE(v2[0]);
    }
    else {
      return 2;
    }
  }
  else
  {
    sub_100010C2C((uint64_t)v3);
    return 2;
  }
}

uint64_t HMCharacteristic.int.getter()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100030408;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return _swift_task_switch(sub_10002FC08, 0, 0);
}

uint64_t sub_100030408()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100030504, 0, 0);
}

uint64_t sub_100030504()
{
  if (v0[5])
  {
    int v1 = swift_dynamicCast();
    if (v1) {
      uint64_t v2 = v0[6];
    }
    else {
      uint64_t v2 = 0;
    }
    uint64_t v3 = v1 ^ 1u;
  }
  else
  {
    sub_100010C2C((uint64_t)(v0 + 2));
    uint64_t v2 = 0;
    uint64_t v3 = 1;
  }
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v2, v3);
}

uint64_t HMCharacteristic.cachedInt.getter()
{
  if ([v0 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_10001CBF0((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return *(void *)&v2[0];
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100010C2C((uint64_t)v3);
    return 0;
  }
}

uint64_t HMCharacteristic.float.getter()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10003071C;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return _swift_task_switch(sub_10002FC08, 0, 0);
}

uint64_t sub_10003071C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100030818, 0, 0);
}

uint64_t sub_100030818()
{
  if (v0[5])
  {
    int v1 = swift_dynamicCast();
    if (v1) {
      uint64_t v2 = v0[6];
    }
    else {
      uint64_t v2 = 0;
    }
    uint64_t v3 = v1 ^ 1u;
  }
  else
  {
    sub_100010C2C((uint64_t)(v0 + 2));
    uint64_t v2 = 0;
    uint64_t v3 = 1;
  }
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v2, v3);
}

uint64_t HMCharacteristic.cachedFloat.getter()
{
  if ([v0 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_10001CBF0((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return *(void *)&v2[0];
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100010C2C((uint64_t)v3);
    return 0;
  }
}

uint64_t HMCharacteristic.data.getter()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100030A30;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return _swift_task_switch(sub_10002FC08, 0, 0);
}

uint64_t sub_100030A30()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100030B2C, 0, 0);
}

uint64_t sub_100030B2C()
{
  if (v0[5])
  {
    int v1 = swift_dynamicCast();
    BOOL v2 = v1 == 0;
    if (v1) {
      uint64_t v3 = v0[6];
    }
    else {
      uint64_t v3 = 0;
    }
    if (v2) {
      unint64_t v4 = 0xF000000000000000;
    }
    else {
      unint64_t v4 = v0[7];
    }
  }
  else
  {
    sub_100010C2C((uint64_t)(v0 + 2));
    uint64_t v3 = 0;
    unint64_t v4 = 0xF000000000000000;
  }
  uint64_t v5 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
  return v5(v3, v4);
}

uint64_t HMCharacteristic.tlv8.getter()
{
  BOOL v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  *BOOL v2 = v1;
  v2[1] = sub_100030C88;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return _swift_task_switch(sub_10002FC08, 0, 0);
}

uint64_t sub_100030C88()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100030E9C, 0, 0);
}

uint64_t _sSo16HMCharacteristicC20HomeWidgetLockScreenE10cachedTLV810Foundation4DataVSgvg_0()
{
  if ([v0 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_10001CBF0((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast()) {
      return *(void *)&v2[0];
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100010C2C((uint64_t)v3);
    return 0;
  }
}

unint64_t sub_100030E44()
{
  unint64_t result = qword_100092268;
  if (!qword_100092268)
  {
    sub_10006EBD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092268);
  }
  return result;
}

uint64_t sub_100030EA0(uint64_t a1)
{
  return sub_100030FDC(a1, qword_10009A7A0);
}

uint64_t *sub_100030ECC(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100030F30(uint64_t a1)
{
  return sub_100030FDC(a1, qword_10009A7B8);
}

uint64_t sub_100030F5C(uint64_t a1)
{
  return sub_100030FDC(a1, qword_10009A7D0);
}

uint64_t sub_100030F88(uint64_t a1)
{
  return sub_100030FDC(a1, qword_10009A7E8);
}

uint64_t sub_100030FB4(uint64_t a1)
{
  return sub_100030FDC(a1, qword_10009A800);
}

uint64_t sub_100030FDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10006EC68();
  sub_100030ECC(v3, a2);
  sub_100004B08(v3, (uint64_t)a2);
  return sub_10006EC58();
}

uint64_t HMCharacteristic.bestNameForAccessory.getter()
{
  uint64_t v1 = 0x6E776F6E6B6E75;
  id v2 = [v0 service];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v2 accessory];

    if (v4)
    {
      id v5 = [v4 name];

      uint64_t v1 = sub_10006F4F8();
    }
  }
  return v1;
}

uint64_t HMService.serviceKind.getter()
{
  id v1 = [v0 serviceType];
  sub_10006F4F8();

  LODWORD(result) = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  if (result == 51) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t HMService.associatedServiceKind.getter()
{
  id v1 = [v0 associatedServiceType];
  if (!v1) {
    return 51;
  }
  id v2 = v1;
  sub_10006F4F8();

  LODWORD(result) = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  if (result == 51) {
    return 0;
  }
  else {
    return result;
  }
}

void *HMService.subscript.getter()
{
  id v1 = [v0 characteristics];
  sub_100034020();
  unint64_t v2 = sub_10006F668();

  if (v2 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_10006FAC8())
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0 ? (id)sub_10006F9F8() : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = [v5 characteristicType];
      sub_10006F4F8();

      _s20HomeWidgetLockScreen18CharacteristicKindO8rawValueACSgSS_tcfC_0();
      unint64_t v9 = CharacteristicKind.rawValue.getter();
      uint64_t v11 = v10;
      if (v9 == CharacteristicKind.rawValue.getter() && v11 == v12)
      {
        swift_bridgeObjectRelease_n();
LABEL_16:
        swift_bridgeObjectRelease_n();
        return v6;
      }
      char v14 = sub_10006FCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_16;
      }

      ++v4;
      if (v7 == v3) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t HMService.allRelevantCharacteristicKinds.getter()
{
  id v1 = [v0 serviceType];
  sub_10006F4F8();

  char v2 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  if (v2 == 51) {
    char v2 = 0;
  }
  uint64_t v3 = ServiceKind.requiredCharacteristicKinds.getter(v2);
  id v4 = [v0 serviceType];
  sub_10006F4F8();

  char v5 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  if (v5 == 51) {
    char v5 = 0;
  }
  uint64_t v6 = ServiceKind.optionalCharacteristicKinds.getter(v5);

  return sub_100031494((uint64_t)v6, (uint64_t)v3);
}

uint64_t sub_100031494(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_100032A20(&v14, *(unsigned __int8 *)(*(void *)(v2 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t HMService.fetchedValue(for:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 48) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return _swift_task_switch(sub_100031618, 0, 0);
}

uint64_t sub_100031618()
{
  id v1 = HMService.subscript.getter();
  v0[4] = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[5] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100031704;
    uint64_t v3 = v0[2];
    return HMCharacteristic.fetchedValue()(v3);
  }
  else
  {
    uint64_t v5 = (_OWORD *)v0[2];
    *uint64_t v5 = 0u;
    v5[1] = 0u;
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100031704()
{
  id v1 = *(void **)(*v0 + 32);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

void HMService.cachedValue(for:)(_OWORD *a1@<X8>)
{
  uint64_t v2 = HMService.subscript.getter();
  if (v2)
  {
    uint64_t v3 = v2;
    if ([v2 value])
    {
      sub_10006F898();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v4, 0, sizeof(v4));
    }
    sub_10001CBF0((uint64_t)v4, (uint64_t)a1);
  }
  else
  {
    *a1 = 0u;
    a1[1] = 0u;
  }
}

uint64_t HMService.BOOL(for:)(char a1)
{
  *(void *)(v2 + 48) = v1;
  *(unsigned char *)(v2 + 73) = a1;
  return _swift_task_switch(sub_1000318C4, 0, 0);
}

uint64_t sub_1000318C4()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 56) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1000319BC;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_100010C2C(v0 + 16);
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v4(2);
  }
}

uint64_t sub_1000319BC()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 56);
  swift_task_dealloc();

  return _swift_task_switch(sub_100031AD0, 0, 0);
}

uint64_t sub_100031AD0()
{
  if (*(void *)(v0 + 40))
  {
    if (swift_dynamicCast()) {
      uint64_t v1 = *(unsigned __int8 *)(v0 + 72);
    }
    else {
      uint64_t v1 = 2;
    }
  }
  else
  {
    sub_100010C2C(v0 + 16);
    uint64_t v1 = 2;
  }
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

Swift::Bool_optional __swiftcall HMService.cachedBool(for:)(HomeWidgetLockScreen::CharacteristicKind a1)
{
  uint64_t v1 = HMService.subscript.getter();
  if (!v1)
  {
    long long v5 = 0u;
    long long v6 = 0u;
LABEL_10:
    sub_100010C2C((uint64_t)&v5);
    return (Swift::Bool_optional)2;
  }
  uint64_t v2 = v1;
  if ([v1 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_10001CBF0((uint64_t)v4, (uint64_t)&v5);

  if (!*((void *)&v6 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast()) {
    return (Swift::Bool_optional)v4[0];
  }
  else {
    return (Swift::Bool_optional)2;
  }
}

uint64_t HMService.int(for:)(char a1)
{
  *(void *)(v2 + 56) = v1;
  *(unsigned char *)(v2 + 80) = a1;
  return _swift_task_switch(sub_100031C68, 0, 0);
}

uint64_t sub_100031C68()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100031D64;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_100010C2C(v0 + 16);
    uint64_t v4 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
    return v4(0, 1);
  }
}

uint64_t sub_100031D64()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 64);
  swift_task_dealloc();

  return _swift_task_switch(sub_100030504, 0, 0);
}

Swift::Int_optional __swiftcall HMService.cachedInt(for:)(HomeWidgetLockScreen::CharacteristicKind a1)
{
  uint64_t v1 = HMService.subscript.getter();
  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_11:
    sub_100010C2C((uint64_t)&v7);
    Swift::Int v4 = 0;
    char v5 = 1;
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  if ([v1 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_10001CBF0((uint64_t)v6, (uint64_t)&v7);

  if (!*((void *)&v8 + 1)) {
    goto LABEL_11;
  }
  int v3 = swift_dynamicCast();
  if (v3) {
    Swift::Int v4 = *(void *)&v6[0];
  }
  else {
    Swift::Int v4 = 0;
  }
  char v5 = v3 ^ 1;
LABEL_12:
  result.value = v4;
  result.is_nil = v5;
  return result;
}

uint64_t HMService.float(for:)(char a1)
{
  *(void *)(v2 + 56) = v1;
  *(unsigned char *)(v2 + 80) = a1;
  return _swift_task_switch(sub_100031F74, 0, 0);
}

uint64_t sub_100031F74()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100032070;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_100010C2C(v0 + 16);
    Swift::Int v4 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
    return v4(0, 1);
  }
}

uint64_t sub_100032070()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 64);
  swift_task_dealloc();

  return _swift_task_switch(sub_100030818, 0, 0);
}

Swift::Double_optional __swiftcall HMService.cachedFloat(for:)(HomeWidgetLockScreen::CharacteristicKind a1)
{
  uint64_t v1 = HMService.subscript.getter();
  if (!v1)
  {
    long long v6 = 0u;
    long long v7 = 0u;
LABEL_11:
    sub_100010C2C((uint64_t)&v6);
    char v4 = 0;
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  if ([v1 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10001CBF0((uint64_t)v5, (uint64_t)&v6);

  if (!*((void *)&v7 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    char v4 = v5[0];
  }
  else {
    char v4 = 0;
  }
LABEL_12:
  result.value = v3;
  result.is_nil = v4;
  return result;
}

uint64_t HMService.data(for:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 88) = a1;
  return _swift_task_switch(sub_100032280, 0, 0);
}

uint64_t sub_100032280()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 72) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10003237C;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_100010C2C(v0 + 16);
    char v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xF000000000000000);
  }
}

uint64_t sub_10003237C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 72);
  swift_task_dealloc();

  return _swift_task_switch(sub_100030B2C, 0, 0);
}

uint64_t HMService.tlv8(for:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 88) = a1;
  return _swift_task_switch(sub_1000324B8, 0, 0);
}

uint64_t sub_1000324B8()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 72) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1000325B4;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_100010C2C(v0 + 16);
    char v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xF000000000000000);
  }
}

uint64_t sub_1000325B4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 72);
  swift_task_dealloc();

  return _swift_task_switch(sub_100030E9C, 0, 0);
}

uint64_t _sSo9HMServiceC20HomeWidgetLockScreenE10cachedTLV83for10Foundation4DataVSgAC18CharacteristicKindO_tF_0()
{
  uint64_t v0 = HMService.subscript.getter();
  if (!v0)
  {
    long long v4 = 0u;
    long long v5 = 0u;
LABEL_11:
    sub_100010C2C((uint64_t)&v4);
    return 0;
  }
  uint64_t v1 = v0;
  if ([v0 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_10001CBF0((uint64_t)v3, (uint64_t)&v4);

  if (!*((void *)&v5 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v3[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_1000327A0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_10006F948();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100034020();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_10006F938();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_100032C3C(v7, result + 1);
    uint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_100032E24();
      char v23 = v28;
    }
    else
    {
      char v23 = (void *)v22;
      id v24 = v8;
    }
    sub_10003339C((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_10006F848(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100034020();
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_10006F858();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        Swift::String v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_10006F858();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_100033420((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_100032A20(unsigned char *a1, Swift::Int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_10006FD78();
  CharacteristicKind.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  Swift::Int v7 = sub_10006FDD8();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    unint64_t v10 = CharacteristicKind.rawValue.getter();
    uint64_t v12 = v11;
    if (v10 == CharacteristicKind.rawValue.getter() && v12 == v13)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    char v15 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_18:
      uint64_t result = 0;
      LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v9);
      goto LABEL_19;
    }
    uint64_t v16 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v16;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      unint64_t v17 = CharacteristicKind.rawValue.getter();
      uint64_t v19 = v18;
      if (v17 == CharacteristicKind.rawValue.getter() && v19 == v20) {
        goto LABEL_17;
      }
      char v22 = sub_10006FCE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_100033598(a2, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v25;
  swift_bridgeObjectRelease();
  uint64_t result = 1;
LABEL_19:
  *a1 = a2;
  return result;
}

Swift::Int sub_100032C3C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100004960(&qword_100091F28);
    uint64_t v2 = sub_10006F9B8();
    uint64_t v14 = v2;
    sub_10006F8F8();
    if (sub_10006F968())
    {
      sub_100034020();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_100032E24();
          uint64_t v2 = v14;
        }
        Swift::Int result = sub_10006F848(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_10006F968());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_100032E24()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004960(&qword_100091F28);
  uint64_t v3 = sub_10006F9A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_10006F848(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000330C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004960(&qword_100091ED8);
  uint64_t v3 = sub_10006F9A8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_10006FD78();
      CharacteristicKind.rawValue.getter();
      sub_10006F548();
      swift_bridgeObjectRelease();
      uint64_t result = sub_10006FDD8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_10003339C(uint64_t a1, void *a2)
{
  sub_10006F848(a2[5]);
  unint64_t result = sub_10006F8D8();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

void sub_100033420(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100032E24();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1000337C0();
      goto LABEL_14;
    }
    sub_100033B00();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = sub_10006F848(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100034020();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_10006F858();

    if (v12)
    {
LABEL_13:
      sub_10006FD38();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_10006F858();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

Swift::Int sub_100033598(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1000330C4();
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = (Swift::Int)sub_10003396C();
LABEL_22:
      uint64_t v24 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(unsigned char *)(*(void *)(v24 + 48) + a2) = v6;
      uint64_t v25 = *(void *)(v24 + 16);
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (!v26)
      {
        *(void *)(v24 + 16) = v27;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_100033D7C();
  }
  uint64_t v9 = *v3;
  sub_10006FD78();
  CharacteristicKind.rawValue.getter();
  sub_10006F548();
  swift_bridgeObjectRelease();
  unint64_t result = sub_10006FDD8();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  unint64_t v11 = CharacteristicKind.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == CharacteristicKind.rawValue.getter() && v13 == v14)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v16 = sub_10006FCE8();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    uint64_t v17 = ~v10;
    do
    {
      a2 = (a2 + 1) & v17;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      unint64_t v18 = CharacteristicKind.rawValue.getter();
      uint64_t v20 = v19;
      if (v18 == CharacteristicKind.rawValue.getter() && v20 == v21) {
        goto LABEL_25;
      }
      char v23 = sub_10006FCE8();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
    }
    while ((v23 & 1) == 0);
  }
LABEL_26:
  unint64_t result = sub_10006FD38();
  __break(1u);
  return result;
}

id sub_1000337C0()
{
  uint64_t v1 = v0;
  sub_100004960(&qword_100091F28);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10006F998();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10003396C()
{
  uint64_t v1 = v0;
  sub_100004960(&qword_100091ED8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10006F998();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100033B00()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004960(&qword_100091F28);
  uint64_t v3 = sub_10006F9A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_10006F848(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100033D7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100004960(&qword_100091ED8);
  uint64_t v3 = sub_10006F9A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_10006FD78();
    CharacteristicKind.rawValue.getter();
    sub_10006F548();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10006FDD8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_100034020()
{
  unint64_t result = qword_100091EE0;
  if (!qword_100091EE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100091EE0);
  }
  return result;
}

double *sub_100034060(double *a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v17 = a1;
  int64_t v9 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_10006FAC8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      int64_t v12 = (a2 & 0xC000000000000001) != 0 ? (double *)sub_10006F9F8() : (double *)*(id *)(a2 + 8 * i);
      int64_t v9 = v12;
      uint64_t v13 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      int64_t v16 = v12;
      sub_10001C190(&v17, (void **)&v16, a3, a4, a5);
      if (v5)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v9;
      }

      if (v13 == v10)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1000341A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[34] = a3;
  v4[35] = a4;
  v4[32] = a1;
  v4[33] = a2;
  return _swift_task_switch(sub_1000341CC, 0, 0);
}

uint64_t sub_1000341CC()
{
  uint64_t v28 = v0;
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = sub_10006EC68();
  v0[36] = sub_100004B08(v2, (uint64_t)qword_10009A7A0);
  id v3 = v1;
  swift_bridgeObjectRetain_n();
  id v4 = v3;
  uint64_t v5 = sub_10006EC48();
  os_log_type_t v6 = sub_10006F818();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = v0[35];
  if (v7)
  {
    os_log_type_t v25 = v6;
    uint64_t v9 = v0[34];
    uint64_t v26 = v0[33];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315650;
    swift_bridgeObjectRetain();
    v0[29] = sub_100022B5C(v9, v8, &v27);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    v0[30] = sub_100022B5C(0xD00000000000001DLL, 0x80000001000776F0, &v27);
    sub_10006F868();
    *(_WORD *)(v10 + 22) = 2080;
    if (v26)
    {
      id v11 = [v4 name];
      uint64_t v12 = sub_10006F4F8();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE400000000000000;
      uint64_t v12 = 1819047278;
    }
    v0[31] = sub_100022B5C(v12, v14, &v27);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  sub_100004960(&qword_1000917F0);
  uint64_t inited = swift_initStackObject();
  v0[37] = inited;
  *(_OWORD *)(inited + 16) = xmmword_100070910;
  if (qword_100091698 != -1) {
    swift_once();
  }
  uint64_t v16 = *((void *)&xmmword_10009A738 + 1);
  long long v17 = xmmword_10009A748;
  long long v18 = xmmword_10009A758;
  uint64_t v19 = qword_10009A768;
  *(void *)(inited + 32) = xmmword_10009A738;
  *(void *)(inited + 40) = v16;
  *(_OWORD *)(inited + 48) = v17;
  *(_OWORD *)(inited + 64) = v18;
  *(void *)(inited + 80) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v18 + 1));
  uint64_t v20 = (void *)swift_task_alloc();
  v0[38] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000345E4;
  uint64_t v21 = v0[34];
  uint64_t v22 = v0[35];
  uint64_t v23 = v0[33];
  return LockScreenDataModel.reloadCharacteristics(matching:for:fetchId:)(inited, v23, v21, v22);
}

uint64_t sub_1000345E4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 312) = a1;
  swift_task_dealloc();
  swift_setDeallocating();
  swift_arrayDestroy();
  return _swift_task_switch(sub_10003471C, 0, 0);
}

void sub_10003471C()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void **)(v0 + 264);
  long long v2 = xmmword_10009A748;
  *(_OWORD *)(v0 + 104) = xmmword_10009A738;
  *(_OWORD *)(v0 + 120) = v2;
  *(_OWORD *)(v0 + 136) = xmmword_10009A758;
  *(void *)(v0 + 152) = qword_10009A768;
  if (v1)
  {
    id v3 = [v1 accessories];
    sub_100034CCC();
    unint64_t v4 = sub_10006F668();

    *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 144);
    *(void *)(v0 + 192) = *(void *)(v0 + 136);
    sub_100004B8C(v0 + 160);
    sub_100004BB8(v0 + 176);
    sub_100004BB8(v0 + 184);
    sub_100004BB8(v0 + 192);
    sub_100004B40(v5);
    os_log_type_t v6 = sub_100025574(v4, v0 + 104);
    sub_100004BE4(v0 + 160);
    sub_100004C10(v0 + 176);
    sub_100004C10(v0 + 184);
    sub_100004C10(v0 + 192);
    sub_100004C3C(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v6 = _swiftEmptyArrayStorage;
  }
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v8 = *(void *)(v0 + 272);
  unint64_t v9 = *(void *)(v0 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100034060(_swiftEmptyArrayStorage, (unint64_t)v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v10 + 2);
  if (!v11)
  {
    uint64_t v14 = 0x9380E29380E2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    unint64_t v15 = sub_10006EC48();
    os_log_type_t v16 = sub_10006F818();
    BOOL v17 = os_log_type_enabled(v15, v16);
    unint64_t v18 = *(void *)(v0 + 280);
    if (v17)
    {
      uint64_t v19 = *(void *)(v0 + 272);
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      v38[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 224) = sub_100022B5C(v19, v18, v38);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "...{%s} has no humidities, returning placeholder", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v11 = 0;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    unint64_t v34 = 0xA600000000000000;
    double v26 = 0.0;
    goto LABEL_23;
  }
  if (v11 == 1)
  {
    uint64_t v12 = 0;
    double v13 = 0.0;
  }
  else
  {
    uint64_t v12 = v11 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v21 = v10 + 5;
    double v13 = 0.0;
    uint64_t v22 = v11 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v13 = v13 + *(v21 - 1) + *v21;
      v21 += 2;
      v22 -= 2;
    }
    while (v22);
    if (v11 == v12) {
      goto LABEL_14;
    }
  }
  uint64_t v23 = v11 - v12;
  unint64_t v24 = &v10[v12 + 4];
  do
  {
    double v25 = *v24++;
    double v13 = v13 + v25;
    --v23;
  }
  while (v23);
LABEL_14:
  swift_bridgeObjectRelease();
  double v26 = v13 / (double)v11;
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_10006EC48();
  os_log_type_t v28 = sub_10006F818();
  BOOL v29 = os_log_type_enabled(v27, v28);
  unint64_t v30 = *(void *)(v0 + 280);
  if (v29)
  {
    uint64_t v31 = *(void *)(v0 + 272);
    uint64_t v37 = v11;
    uint64_t v32 = swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 208) = sub_100022B5C(v31, v30, v38);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2048;
    *(double *)(v0 + 216) = v26;
    sub_10006F868();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "...{%s} humidity is: %f%%", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v37;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  double v33 = round(v26);
  if ((~*(void *)&v33 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v33 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v33 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    return;
  }
  *(void *)(v0 + 200) = (uint64_t)v33;
  uint64_t v14 = sub_10006FCC8();
LABEL_23:
  uint64_t v35 = *(void *)(v0 + 256);
  *(_OWORD *)uint64_t v35 = xmmword_100072D10;
  *(double *)(v35 + 16) = v26;
  *(unsigned char *)(v35 + 24) = v11 == 0;
  *(void *)(v35 + 32) = v14;
  *(void *)(v35 + 40) = v34;
  strcpy((char *)(v35 + 48), "humidity.fill");
  *(_WORD *)(v35 + 62) = -4864;
  *(unsigned char *)(v35 + 64) = 1;
  uint64_t v36 = *(void (**)(void))(v0 + 8);
  v36();
}

unint64_t sub_100034CCC()
{
  unint64_t result = qword_1000917F8;
  if (!qword_1000917F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000917F8);
  }
  return result;
}

uint64_t *sub_100034D0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for LightsCategoryEntry(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = v8[6];
    double v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *(void *)double v13 = *(void *)v14;
    v13[8] = v14[8];
    uint64_t v15 = v8[7];
    os_log_type_t v16 = (char *)a1 + v15;
    BOOL v17 = (char *)a2 + v15;
    v16[8] = v17[8];
    *(void *)os_log_type_t v16 = *(void *)v17;
    uint64_t v18 = v8[8];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    *uint64_t v19 = v22;
    v19[1] = v21;
    *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
    uint64_t v23 = *(int *)(a3 + 20);
    unint64_t v24 = (uint64_t *)((char *)a1 + v23);
    double v25 = (uint64_t *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_10006F348();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *unint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100034EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for LightsCategoryEntry(0);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10006F348();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100034FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = v7[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = v7[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (void *)(a1 + v22);
  unint64_t v24 = (void *)(a2 + v22);
  swift_bridgeObjectRetain();
  sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_10006F348();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10003516C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  char v15 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = v15;
  uint64_t v16 = v7[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  char v19 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = v19;
  uint64_t v20 = v7[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[9];
  unint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *unint64_t v24 = *v25;
  v24[1] = v25[1];
  if (a1 != a2)
  {
    uint64_t v26 = *(int *)(a3 + 20);
    uint64_t v27 = (void *)(a1 + v26);
    os_log_type_t v28 = (void *)(a2 + v26);
    sub_100039078(a1 + v26, &qword_100091DD8);
    sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_10006F348();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100035334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = v7[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = v7[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = (void *)(a1 + v17);
  char v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_10006F348();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000354B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = v7[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = v7[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)(a1 + v17);
  char v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  if (a1 != a2)
  {
    uint64_t v22 = *(int *)(a3 + 20);
    uint64_t v23 = (void *)(a1 + v22);
    unint64_t v24 = (const void *)(a2 + v22);
    sub_100039078(a1 + v22, &qword_100091DD8);
    uint64_t v25 = sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_10006F348();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100035668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003567C);
}

uint64_t sub_10003567C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LightsCategoryEntry(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100004960(&qword_1000922E0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100035778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003578C);
}

uint64_t sub_10003578C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LightsCategoryEntry(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100004960(&qword_1000922E0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for LightsCategoryView(uint64_t a1)
{
  return sub_100035FD8(a1, (uint64_t *)&unk_100092340);
}

void sub_1000358B4()
{
  type metadata accessor for LightsCategoryEntry(319);
  if (v0 <= 0x3F)
  {
    sub_10003597C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10003597C()
{
  if (!qword_100092350)
  {
    sub_10006F348();
    unint64_t v0 = sub_10006ECA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100092350);
    }
  }
}

uint64_t sub_1000359D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000359F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v21 = type metadata accessor for LightsCategoryViewAccessoryRectangular(0);
  __chkstk_darwin(v21);
  uint64_t v20 = (uint64_t)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004960(&qword_100092380);
  __chkstk_darwin(v23);
  uint64_t v22 = (uint64_t)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004960(&qword_100092388);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004960(&qword_100092390);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LightsCategoryViewSystemSmall(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10006F348();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LightsCategoryView(0);
  sub_1000534F4((uint64_t)v15);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_100036134(v1, (uint64_t)v11, type metadata accessor for LightsCategoryEntry);
    sub_100036134((uint64_t)v11, (uint64_t)v6, type metadata accessor for LightsCategoryViewSystemSmall);
    swift_storeEnumTagMultiPayload();
    sub_1000360EC(&qword_1000923A0, (void (*)(uint64_t))type metadata accessor for LightsCategoryViewSystemSmall);
    sub_1000360EC(&qword_1000923A8, (void (*)(uint64_t))type metadata accessor for LightsCategoryViewAccessoryRectangular);
    sub_10006EF88();
    sub_10003619C((uint64_t)v8, v22);
    swift_storeEnumTagMultiPayload();
    sub_100036010();
    sub_10006EF88();
    sub_100039078((uint64_t)v8, &qword_100092390);
    return sub_100036204((uint64_t)v11, type metadata accessor for LightsCategoryViewSystemSmall);
  }
  else
  {
    uint64_t v18 = v22;
    if (v16 == enum case for WidgetFamily.accessoryRectangular(_:))
    {
      uint64_t v19 = v20;
      sub_100036134(v1, v20, type metadata accessor for LightsCategoryEntry);
      sub_100036134(v19, (uint64_t)v6, type metadata accessor for LightsCategoryViewAccessoryRectangular);
      swift_storeEnumTagMultiPayload();
      sub_1000360EC(&qword_1000923A0, (void (*)(uint64_t))type metadata accessor for LightsCategoryViewSystemSmall);
      sub_1000360EC(&qword_1000923A8, (void (*)(uint64_t))type metadata accessor for LightsCategoryViewAccessoryRectangular);
      sub_10006EF88();
      sub_10003619C((uint64_t)v8, v18);
      swift_storeEnumTagMultiPayload();
      sub_100036010();
      sub_10006EF88();
      sub_100039078((uint64_t)v8, &qword_100092390);
      return sub_100036204(v19, type metadata accessor for LightsCategoryViewAccessoryRectangular);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_100036010();
      sub_10006EF88();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
}

uint64_t type metadata accessor for LightsCategoryViewAccessoryRectangular(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092408);
}

uint64_t type metadata accessor for LightsCategoryViewSystemSmall(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092498);
}

uint64_t sub_100035FD8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100036010()
{
  unint64_t result = qword_100092398;
  if (!qword_100092398)
  {
    sub_1000049A4(&qword_100092390);
    sub_1000360EC(&qword_1000923A0, (void (*)(uint64_t))type metadata accessor for LightsCategoryViewSystemSmall);
    sub_1000360EC(&qword_1000923A8, (void (*)(uint64_t))type metadata accessor for LightsCategoryViewAccessoryRectangular);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092398);
  }
  return result;
}

uint64_t sub_1000360EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100036134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003619C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004960(&qword_100092390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100036204(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003627C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100036290);
}

uint64_t sub_100036294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000362A8);
}

uint64_t *sub_1000362B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for LightsCategoryEntry(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
    uint64_t v11 = v6[6];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = v6[7];
    uint64_t v15 = (char *)a1 + v14;
    int v16 = (char *)a2 + v14;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v6[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000363F0(uint64_t a1)
{
  uint64_t v2 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for LightsCategoryEntry(0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003646C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  uint64_t v9 = v5[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = v5[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  uint64_t v15 = v5[8];
  int v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100036554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  uint64_t v10 = v5[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  char v13 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = v13;
  uint64_t v14 = v5[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  uint64_t v18 = v5[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v5[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  return a1;
}

uint64_t sub_100036668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  uint64_t v9 = v5[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = v5[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(_OWORD *)(a1 + v5[8]) = *(_OWORD *)(a2 + v5[8]);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_100036740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  uint64_t v9 = v5[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = v5[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  uint64_t v15 = v5[8];
  uint64_t v16 = (void *)(a1 + v15);
  char v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_100036834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100036848);
}

uint64_t sub_10003684C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LightsCategoryEntry(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000368B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000368CC);
}

uint64_t sub_1000368D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LightsCategoryEntry(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100036940()
{
  uint64_t result = type metadata accessor for LightsCategoryEntry(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1000369D0()
{
  unint64_t result = qword_1000924D0;
  if (!qword_1000924D0)
  {
    sub_1000049A4(&qword_1000924D8);
    sub_100036010();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000924D0);
  }
  return result;
}

uint64_t sub_100036A4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100036A68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = sub_10006EFD8();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004960(&qword_100092510);
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LightsCategoryEntry(0);
  sub_10006F058();
  uint64_t v12 = enum case for Font.Design.default(_:);
  uint64_t v13 = sub_10006F048();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v10, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
  uint64_t v15 = sub_10006F078();
  sub_100039078((uint64_t)v10, &qword_100092508);
  uint64_t v16 = v1 + *(int *)(v11 + 24);
  uint64_t v17 = v1 + *(int *)(v11 + 28);
  int v18 = *(unsigned __int8 *)(v17 + 8);
  if (*(unsigned char *)(v16 + 8))
  {
    BOOL v19 = 0;
  }
  else
  {
    uint64_t v20 = *(void *)v16;
    int v18 = (v20 == *(void *)v17) & ~v18;
    BOOL v19 = v20 > 0;
  }
  uint64_t v21 = sub_10006EE98();
  uint64_t v22 = sub_10006EF18();
  sub_100036EE8(v15, v18, v1, v19, (uint64_t)v36);
  v37[384] = 0;
  memcpy(&v37[7], v36, 0x179uLL);
  v38[0] = v22;
  v38[1] = 0;
  LOBYTE(v38[2]) = 0;
  memcpy((char *)&v38[2] + 1, v37, 0x180uLL);
  memcpy(v40, v38, 0x191uLL);
  char v39 = 0;
  v41[0] = v22;
  v41[1] = 0;
  char v42 = 0;
  memcpy(v43, v37, sizeof(v43));
  sub_10003921C((uint64_t)v38);
  sub_10003952C((uint64_t)v41);
  v44[415] = 1;
  memcpy(&v44[7], v40, 0x198uLL);
  uint64_t v23 = sub_10006F208();
  uint64_t KeyPath = swift_getKeyPath();
  v35[0] = v21;
  v35[1] = 0;
  LOBYTE(v35[2]) = 1;
  memcpy((char *)&v35[2] + 1, v44, 0x19FuLL);
  v35[54] = 0;
  LOBYTE(v35[55]) = 0;
  v35[56] = KeyPath;
  v35[57] = v23;
  sub_10006EFC8();
  uint64_t v25 = sub_100004960(&qword_100092518);
  unint64_t v26 = sub_100039838();
  sub_10006F178();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v31);
  memcpy(v45, v35, 0x1D0uLL);
  sub_1000398FC((uint64_t)v45);
  v35[0] = v25;
  v35[1] = v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v33;
  sub_10006F188();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v7, v27);
}

uint64_t sub_100036EE8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  LODWORD(v121) = a4;
  uint64_t v122 = a3;
  LODWORD(v123) = a2;
  uint64_t v119 = a5;
  uint64_t v6 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10006EC08();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10006F4B8();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10006EE98();
  sub_100037CC0(a1, (uint64_t)v167);
  *(_OWORD *)((char *)&v169[6] + 7) = v167[6];
  *(_OWORD *)((char *)&v169[5] + 7) = v167[5];
  *(_OWORD *)((char *)&v169[2] + 7) = v167[2];
  *(_OWORD *)((char *)&v169[1] + 7) = v167[1];
  *(_OWORD *)((char *)&v169[7] + 7) = v168[0];
  v169[8] = *(_OWORD *)((char *)v168 + 9);
  char v170 = 1;
  *(_OWORD *)((char *)&v169[3] + 7) = v167[3];
  *(_OWORD *)((char *)&v169[4] + 7) = v167[4];
  *(_OWORD *)((char *)v169 + 7) = v167[0];
  int v117 = 1;
  long long v176 = v169[5];
  long long v177 = v169[6];
  long long v178 = v169[7];
  long long v179 = *(_OWORD *)((char *)v168 + 9);
  long long v173 = v169[2];
  long long v174 = v169[3];
  long long v175 = v169[4];
  long long v171 = v169[0];
  long long v172 = v169[1];
  if (v123)
  {
    sub_10006F4A8();
    sub_10006EBF8();
    *(void *)unint64_t v139 = sub_10006F518();
    *(void *)&v139[8] = v15;
    sub_100004A48();
    uint64_t v16 = sub_10006F0E8();
    uint64_t v121 = v17;
    uint64_t v122 = v16;
    LODWORD(v120) = v18;
    uint64_t v123 = v19;
    uint64_t KeyPath = swift_getKeyPath();
    sub_10006F068();
    uint64_t v21 = enum case for Font.Design.default(_:);
    uint64_t v22 = sub_10006F048();
    uint64_t v23 = *(void *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v8, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v22);
    uint64_t v24 = sub_10006F078();
    sub_100039078((uint64_t)v8, &qword_100092508);
    uint64_t v25 = swift_getKeyPath();
    uint64_t v26 = swift_getKeyPath();
    *(void *)unint64_t v139 = v122;
    *(void *)&v139[8] = v121;
    v139[16] = v120 & 1;
    *(void *)&v139[24] = v123;
    *(void *)&v139[32] = KeyPath;
    *(void *)&v139[40] = 1;
    v139[48] = 0;
    *(void *)&v139[56] = v25;
    *(void *)&v139[64] = v24;
    *(void *)&v139[72] = v26;
    *(void *)&v139[80] = 0x3FC999999999999ALL;
    sub_100039F68((uint64_t)v139);
    sub_100039ADC((uint64_t)v139, (uint64_t)&v141);
    sub_100004960(&qword_100092550);
    sub_100004960(&qword_100092558);
    sub_100039C2C();
    sub_10002643C(&qword_1000925B8, &qword_100092558);
    sub_10006EF88();
  }
  else
  {
    uint64_t v110 = v14;
    uint64_t v111 = v11;
    uint64_t v109 = type metadata accessor for LightsCategoryEntry(0);
    uint64_t v27 = (uint64_t *)(v122 + *(int *)(v109 + 32));
    unint64_t v28 = v27[1];
    if (v28)
    {
      uint64_t v29 = *v27;
      unint64_t v30 = v28;
    }
    else
    {
      unint64_t v30 = 0xA600000000000000;
      uint64_t v29 = 0x9380E29380E2;
    }
    *(void *)unint64_t v139 = v29;
    *(void *)&v139[8] = v30;
    unint64_t v31 = sub_100004A48();
    swift_bridgeObjectRetain();
    uint64_t v107 = v31;
    uint64_t v32 = sub_10006F0E8();
    uint64_t v114 = v33;
    int v112 = v34;
    uint64_t v116 = v35;
    uint64_t v115 = swift_getKeyPath();
    LOBYTE(v31) = v121;
    sub_10006F068();
    uint64_t v36 = enum case for Font.Design.default(_:);
    uint64_t v37 = sub_10006F048();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v104 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 104);
    uint64_t v105 = v38 + 104;
    v104(v8, v36, v37);
    uint64_t v106 = *(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56);
    v106(v8, 0, 1, v37);
    uint64_t v123 = sub_10006F078();
    sub_100039078((uint64_t)v8, &qword_100092508);
    uint64_t v108 = swift_getKeyPath();
    uint64_t v39 = swift_getKeyPath();
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v120 = v39;
    if (v31)
    {
      sub_10006F4A8();
      sub_10006EBF8();
      sub_10006F518();
      sub_100004960(&qword_1000925C0);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_100070910;
      uint64_t v51 = (uint64_t *)(v122 + *(int *)(v109 + 24));
      uint64_t v52 = *v51;
      LODWORD(v51) = *((unsigned __int8 *)v51 + 8);
      *(void *)(v50 + 56) = &type metadata for Int;
      *(void *)(v50 + 64) = &protocol witness table for Int;
      if (v51) {
        uint64_t v53 = 0;
      }
      else {
        uint64_t v53 = v52;
      }
      *(void *)(v50 + 32) = v53;
      LODWORD(v111) = v36;
      uint64_t v54 = sub_10006F508();
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      *(void *)unint64_t v139 = v54;
      *(void *)&v139[8] = v56;
      uint64_t v107 = sub_10006F0E8();
      uint64_t v109 = v57;
      uint64_t v121 = v58 & 1;
      uint64_t v122 = v59;
      uint64_t v60 = swift_getKeyPath();
      sub_10006F068();
      v104(v8, v111, v37);
      v106(v8, 0, 1, v37);
      uint64_t v47 = sub_10006F078();
      sub_100039078((uint64_t)v8, &qword_100092508);
      uint64_t v61 = swift_getKeyPath();
      uint64_t v62 = swift_getKeyPath();
      uint64_t v46 = v61;
      uint64_t v45 = 1;
      uint64_t v44 = v60;
      uint64_t v42 = v121;
      uint64_t v43 = v122;
      uint64_t v41 = v109;
      uint64_t v40 = v107;
      uint64_t v48 = v62;
      uint64_t v39 = v120;
      uint64_t v49 = 0x3FC999999999999ALL;
    }
    uint64_t v109 = v41;
    uint64_t v110 = (char *)v45;
    uint64_t v121 = v42;
    uint64_t v122 = v43;
    uint64_t v111 = (char *)v46;
    *(void *)&long long v153 = v32;
    *((void *)&v153 + 1) = v114;
    uint64_t v113 = v32;
    LOBYTE(v154[0]) = v112 & 1;
    char v63 = v112 & 1;
    v112 &= 1u;
    *((void *)&v154[0] + 1) = v116;
    *(void *)&v154[1] = v115;
    *((void *)&v154[1] + 1) = 1;
    LOBYTE(v154[2]) = 0;
    *((void *)&v154[2] + 1) = v108;
    *(void *)&v154[3] = v123;
    *((void *)&v154[3] + 1) = v39;
    *(void *)&v154[4] = 0x3FC999999999999ALL;
    *((void *)&v154[4] + 1) = v40;
    *(void *)&v154[5] = v41;
    *((void *)&v154[5] + 1) = v42;
    *(void *)&v154[6] = v43;
    *((void *)&v154[6] + 1) = v44;
    v154[7] = (unint64_t)v45;
    *(void *)&v154[8] = v46;
    *((void *)&v154[8] + 1) = v47;
    *(void *)&v154[9] = v48;
    *((void *)&v154[9] + 1) = v49;
    long long v127 = v154[0];
    long long v128 = v154[1];
    long long v133 = v154[6];
    long long v134 = (unint64_t)v45;
    long long v126 = v153;
    long long v131 = v154[4];
    long long v132 = v154[5];
    long long v129 = v154[2];
    long long v130 = v154[3];
    long long v135 = v154[8];
    long long v136 = v154[9];
    uint64_t v64 = v32;
    uint64_t v65 = v40;
    NSString v66 = (void (*)(char *, void, uint64_t, uint64_t))v44;
    uint64_t v67 = v47;
    uint64_t v68 = v48;
    BOOL v69 = (void (*)(char *, uint64_t, uint64_t))v49;
    sub_100038D70(v64, v114, v63);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v103[1] = v67;
    uint64_t v70 = v109;
    sub_1000394AC(v65, v109, v121, v122);
    sub_100038D70(v113, v114, v112);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v104 = v69;
    uint64_t v105 = v68;
    uint64_t v71 = v65;
    uint64_t v106 = v66;
    uint64_t v107 = v65;
    uint64_t v72 = v65;
    uint64_t v73 = v70;
    uint64_t v74 = v70;
    LOBYTE(v70) = v121;
    uint64_t v75 = v122;
    sub_1000394AC(v72, v73, v121, v122);
    sub_1000397B8(v71, v74, v70, v75);
    uint64_t v76 = v114;
    sub_100038EA0(v113, v114, v112);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    *(_OWORD *)&v139[128] = v134;
    *(_OWORD *)&v139[144] = v135;
    *(_OWORD *)&v139[160] = v136;
    *(_OWORD *)&v139[64] = v130;
    *(_OWORD *)&v139[80] = v131;
    *(_OWORD *)&v139[96] = v132;
    *(_OWORD *)&v139[112] = v133;
    *(_OWORD *)unint64_t v139 = v126;
    *(_OWORD *)&v139[16] = v127;
    *(_OWORD *)&v139[32] = v128;
    *(_OWORD *)&v139[48] = v129;
    sub_100039AD0((uint64_t)v139);
    sub_100039ADC((uint64_t)v139, (uint64_t)&v155);
    sub_100039B44((uint64_t)&v126);
    sub_100004960(&qword_100092550);
    sub_100004960(&qword_100092558);
    sub_100039C2C();
    sub_10002643C(&qword_1000925B8, &qword_100092558);
    sub_10006EF88();
    sub_1000397B8(v107, v109, v121, v122);
    sub_100039E0C((uint64_t)&v153);
    sub_100038EA0(v113, v76, v112);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    long long v163 = v149;
    long long v164 = v150;
    long long v165 = v151;
    char v166 = v152;
    long long v159 = v145;
    long long v160 = v146;
    long long v161 = v147;
    long long v162 = v148;
    long long v155 = v141;
    long long v156 = v142;
    long long v157 = v143;
    long long v158 = v144;
  }
  long long v77 = v163;
  long long v78 = v162;
  long long v149 = v163;
  long long v150 = v164;
  long long v79 = v164;
  long long v151 = v165;
  long long v80 = v159;
  long long v81 = v158;
  long long v145 = v159;
  long long v146 = v160;
  long long v82 = v160;
  long long v83 = v161;
  long long v147 = v161;
  long long v148 = v162;
  long long v141 = v155;
  long long v142 = v156;
  long long v85 = v155;
  long long v84 = v156;
  long long v86 = v157;
  long long v143 = v157;
  long long v144 = v158;
  *(_OWORD *)&v125[81] = v176;
  *(_OWORD *)&v125[97] = v177;
  *(_OWORD *)&v125[113] = v178;
  *(_OWORD *)&v125[129] = v179;
  *(_OWORD *)&v125[17] = v172;
  *(_OWORD *)&v125[33] = v173;
  *(_OWORD *)&v125[49] = v174;
  uint64_t v87 = v118;
  long long v124 = (unint64_t)v118;
  char v88 = v117;
  v125[0] = v117;
  *(_OWORD *)&v125[65] = v175;
  *(_OWORD *)&v125[1] = v171;
  long long v134 = v163;
  long long v135 = v164;
  long long v136 = v165;
  long long v130 = v159;
  long long v131 = v160;
  long long v132 = v161;
  long long v133 = v162;
  long long v126 = v155;
  long long v127 = v156;
  long long v128 = v157;
  long long v129 = v158;
  long long v89 = *(_OWORD *)&v125[128];
  uint64_t v90 = v119;
  *(_OWORD *)(v119 + 128) = *(_OWORD *)&v125[112];
  *(_OWORD *)(v90 + 144) = v89;
  long long v91 = *(_OWORD *)&v125[64];
  *(_OWORD *)(v90 + 64) = *(_OWORD *)&v125[48];
  *(_OWORD *)(v90 + 80) = v91;
  long long v92 = *(_OWORD *)&v125[96];
  *(_OWORD *)(v90 + 96) = *(_OWORD *)&v125[80];
  *(_OWORD *)(v90 + 112) = v92;
  long long v93 = *(_OWORD *)v125;
  *(_OWORD *)uint64_t v90 = v124;
  *(_OWORD *)(v90 + 16) = v93;
  long long v94 = *(_OWORD *)&v125[32];
  *(_OWORD *)(v90 + 32) = *(_OWORD *)&v125[16];
  *(_OWORD *)(v90 + 48) = v94;
  *(_OWORD *)&v139[135] = v77;
  *(_OWORD *)&v139[151] = v79;
  *(_OWORD *)&v139[167] = v165;
  *(_OWORD *)&v139[71] = v80;
  *(_OWORD *)&v139[87] = v82;
  *(_OWORD *)&v139[103] = v83;
  *(_OWORD *)&v139[119] = v78;
  v139[183] = v166;
  *(_OWORD *)&v139[7] = v85;
  *(_OWORD *)&v139[23] = v84;
  *(_OWORD *)&v139[39] = v86;
  *(_OWORD *)&v139[55] = v81;
  long long v95 = *(_OWORD *)&v139[128];
  long long v96 = *(_OWORD *)&v139[160];
  *(_OWORD *)(v90 + 321) = *(_OWORD *)&v139[144];
  *(_OWORD *)(v90 + 337) = v96;
  long long v97 = *(_OWORD *)&v139[80];
  *(_OWORD *)(v90 + 241) = *(_OWORD *)&v139[64];
  long long v98 = *(_OWORD *)&v139[96];
  long long v99 = *(_OWORD *)&v139[112];
  *(_OWORD *)(v90 + 257) = v97;
  *(_OWORD *)(v90 + 273) = v98;
  *(_OWORD *)(v90 + 289) = v99;
  *(_OWORD *)(v90 + 305) = v95;
  long long v100 = *(_OWORD *)&v139[16];
  *(_OWORD *)(v90 + 177) = *(_OWORD *)v139;
  *(_OWORD *)(v90 + 193) = v100;
  long long v101 = *(_OWORD *)&v139[48];
  *(_OWORD *)(v90 + 209) = *(_OWORD *)&v139[32];
  char v152 = v166;
  char v137 = v166;
  *(unsigned char *)(v90 + 160) = v125[144];
  char v140 = 0;
  char v138 = 0;
  *(void *)(v90 + 168) = 0;
  *(unsigned char *)(v90 + 176) = 0;
  *(void *)(v90 + 353) = *(void *)&v139[176];
  *(_OWORD *)(v90 + 225) = v101;
  *(void *)(v90 + 368) = 0;
  *(unsigned char *)(v90 + 376) = 0;
  sub_1000390DC((uint64_t)&v124);
  sub_100039EF4((uint64_t)&v126, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100039380);
  sub_100039EF4((uint64_t)&v141, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10003968C);
  *(_OWORD *)((char *)&v154[5] + 1) = v176;
  *(_OWORD *)((char *)&v154[6] + 1) = v177;
  *(_OWORD *)((char *)&v154[7] + 1) = v178;
  *(_OWORD *)((char *)&v154[8] + 1) = v179;
  *(_OWORD *)((char *)&v154[1] + 1) = v172;
  *(_OWORD *)((char *)&v154[2] + 1) = v173;
  *(_OWORD *)((char *)&v154[3] + 1) = v174;
  *(_OWORD *)((char *)&v154[4] + 1) = v175;
  long long v153 = (unint64_t)v87;
  LOBYTE(v154[0]) = v88;
  *(_OWORD *)((char *)v154 + 1) = v171;
  return sub_10003917C((uint64_t)&v153);
}

uint64_t sub_100037CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10006EC08();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10006F4B8();
  __chkstk_darwin(v5 - 8);
  uint64_t v24 = sub_10006F228();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  sub_10006F4A8();
  sub_10006EBF8();
  sub_10006F518();
  sub_100004A48();
  uint64_t v6 = sub_10006F0E8();
  uint64_t v8 = v7;
  uint64_t v20 = v7;
  uint64_t v22 = v9;
  char v11 = v10 & 1;
  uint64_t v21 = swift_getKeyPath();
  uint64_t v12 = sub_10006F088();
  uint64_t v13 = swift_getKeyPath();
  char v14 = sub_10006F028();
  sub_10006EC98();
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = a1;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v22;
  *(void *)(a2 + 56) = v21;
  *(void *)(a2 + 64) = 1;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v13;
  *(void *)(a2 + 88) = v12;
  *(unsigned char *)(a2 + 96) = v14;
  *(void *)(a2 + 104) = v15;
  *(void *)(a2 + 112) = v16;
  *(void *)(a2 + 120) = v17;
  *(void *)(a2 + 128) = v18;
  *(unsigned char *)(a2 + 136) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v6, v20, v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038EA0(v6, v20, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100037F7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100037F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v25 = sub_10006EFD8();
  uint64_t v2 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004960(&qword_1000924E0);
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LightsCategoryEntry(0);
  uint64_t v24 = sub_10006EE98();
  uint64_t v8 = sub_10006EF18();
  sub_1000383D4(v1, (uint64_t)v29);
  *(_OWORD *)&v30[199] = v29[12];
  *(_OWORD *)&v30[215] = v29[13];
  *(_OWORD *)&v30[231] = v29[14];
  *(_OWORD *)&v30[247] = v29[15];
  *(_OWORD *)&v30[135] = v29[8];
  *(_OWORD *)&v30[151] = v29[9];
  *(_OWORD *)&v30[167] = v29[10];
  *(_OWORD *)&v30[183] = v29[11];
  *(_OWORD *)&v30[71] = v29[4];
  *(_OWORD *)&v30[87] = v29[5];
  *(_OWORD *)&v30[103] = v29[6];
  *(_OWORD *)&v30[119] = v29[7];
  *(_OWORD *)&v30[7] = v29[0];
  *(_OWORD *)&v30[23] = v29[1];
  *(_OWORD *)&v30[39] = v29[2];
  v30[264] = 0;
  *(_OWORD *)&v30[55] = v29[3];
  uint64_t v9 = sub_10006F208();
  uint64_t KeyPath = swift_getKeyPath();
  v31[0] = v8;
  v31[1] = 0;
  LOBYTE(v31[2]) = 0;
  memcpy((char *)&v31[2] + 1, v30, 0x107uLL);
  v31[35] = KeyPath;
  v31[36] = v9;
  memcpy(v33, v31, sizeof(v33));
  char v32 = 0;
  v34[0] = v8;
  v34[1] = 0;
  char v35 = 0;
  memcpy(v36, v30, sizeof(v36));
  uint64_t v37 = KeyPath;
  uint64_t v38 = v9;
  sub_100038C50((uint64_t)v31);
  sub_100038D80((uint64_t)v34);
  v39[303] = 1;
  memcpy(&v39[7], v33, 0x128uLL);
  LOBYTE(v8) = sub_10006F018();
  sub_10006EC98();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  v39[311] = 0;
  v28[0] = v24;
  v28[1] = 0;
  LOBYTE(v28[2]) = 1;
  memcpy((char *)&v28[2] + 1, v39, 0x12FuLL);
  v28[40] = 0;
  LOBYTE(v28[41]) = 0;
  LOBYTE(v28[42]) = v8;
  v28[43] = v12;
  v28[44] = v14;
  v28[45] = v16;
  v28[46] = v18;
  LOBYTE(v28[47]) = 0;
  sub_10006EFC8();
  uint64_t v19 = sub_100004960(&qword_1000924E8);
  unint64_t v20 = sub_100038EB0();
  sub_10006F178();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v25);
  memcpy(v40, v28, 0x179uLL);
  sub_100038F50((uint64_t)v40);
  v28[0] = v19;
  v28[1] = v20;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v26;
  sub_10006F188();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v21);
}

uint64_t sub_1000383D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10006EE98();
  sub_100038810((uint64_t)v65);
  *(_OWORD *)((char *)&v67[6] + 7) = v65[6];
  *(_OWORD *)((char *)&v67[5] + 7) = v65[5];
  *(_OWORD *)((char *)&v67[2] + 7) = v65[2];
  *(_OWORD *)((char *)&v67[1] + 7) = v65[1];
  *(_OWORD *)((char *)&v67[7] + 7) = v66[0];
  v67[8] = *(_OWORD *)((char *)v66 + 9);
  *(_OWORD *)((char *)&v67[3] + 7) = v65[3];
  char v68 = 1;
  *(_OWORD *)((char *)&v67[4] + 7) = v65[4];
  *(_OWORD *)((char *)v67 + 7) = v65[0];
  int v34 = 1;
  long long v75 = v67[6];
  long long v76 = v67[7];
  long long v77 = *(_OWORD *)((char *)v66 + 9);
  long long v71 = v67[2];
  long long v72 = v67[3];
  long long v73 = v67[4];
  long long v74 = v67[5];
  long long v69 = v67[0];
  long long v70 = v67[1];
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for LightsCategoryEntry(0) + 32));
  unint64_t v8 = v7[1];
  if (v8)
  {
    uint64_t v9 = *v7;
    unint64_t v10 = v8;
  }
  else
  {
    unint64_t v10 = 0xA600000000000000;
    uint64_t v9 = 0x9380E29380E2;
  }
  uint64_t v53 = v9;
  unint64_t v54 = v10;
  sub_100004A48();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_10006F0E8();
  uint64_t v32 = v12;
  uint64_t v33 = v13;
  char v15 = v14 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006F068();
  uint64_t v16 = enum case for Font.Design.default(_:);
  uint64_t v17 = sub_10006F048();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v6, v16, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v6, 0, 1, v17);
  uint64_t v19 = sub_10006F078();
  sub_100039078((uint64_t)v6, &qword_100092508);
  uint64_t v20 = swift_getKeyPath();
  long long v42 = v75;
  long long v43 = v76;
  long long v44 = v77;
  long long v38 = v71;
  long long v39 = v72;
  long long v40 = v73;
  long long v41 = v74;
  long long v36 = v69;
  long long v37 = v70;
  *(_OWORD *)&v46[97] = v75;
  *(_OWORD *)&v46[81] = v74;
  *(_OWORD *)&v46[33] = v71;
  *(_OWORD *)&v46[17] = v70;
  *(_OWORD *)&v46[113] = v76;
  *(_OWORD *)&v46[129] = v77;
  *(_OWORD *)&v46[49] = v72;
  long long v45 = (unint64_t)v35;
  LOBYTE(v18) = v34;
  v46[0] = v34;
  *(_OWORD *)&v46[65] = v73;
  *(_OWORD *)&v46[1] = v69;
  long long v21 = *(_OWORD *)&v46[128];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v46[112];
  *(_OWORD *)(a2 + 144) = v21;
  *(unsigned char *)(a2 + 160) = v46[144];
  long long v22 = *(_OWORD *)&v46[64];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v46[48];
  *(_OWORD *)(a2 + 80) = v22;
  long long v23 = *(_OWORD *)&v46[96];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v46[80];
  *(_OWORD *)(a2 + 112) = v23;
  long long v24 = *(_OWORD *)v46;
  *(_OWORD *)a2 = v45;
  *(_OWORD *)(a2 + 16) = v24;
  long long v25 = *(_OWORD *)&v46[32];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v46[16];
  *(_OWORD *)(a2 + 48) = v25;
  char v52 = 0;
  char v50 = v15;
  char v48 = 0;
  *(_DWORD *)(a2 + 177) = *(_DWORD *)v51;
  *(_DWORD *)(a2 + 180) = *(_DWORD *)&v51[3];
  *(_DWORD *)(a2 + 201) = *(_DWORD *)v49;
  *(_DWORD *)(a2 + 204) = *(_DWORD *)&v49[3];
  *(_DWORD *)(a2 + 233) = *(_DWORD *)v47;
  *(_DWORD *)(a2 + 236) = *(_DWORD *)&v47[3];
  *(void *)(a2 + 168) = 0;
  *(unsigned char *)(a2 + 176) = 0;
  uint64_t v26 = v32;
  uint64_t v27 = v33;
  *(void *)(a2 + 184) = v11;
  *(void *)(a2 + 192) = v26;
  *(unsigned char *)(a2 + 200) = v15;
  uint64_t v28 = KeyPath;
  *(void *)(a2 + 208) = v27;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = 1;
  *(unsigned char *)(a2 + 232) = 0;
  *(void *)(a2 + 240) = v20;
  *(void *)(a2 + 248) = v19;
  sub_1000390DC((uint64_t)&v45);
  sub_100038D70(v11, v26, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038EA0(v11, v26, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v61 = v41;
  long long v62 = v42;
  long long v63 = v43;
  long long v64 = v44;
  long long v57 = v37;
  long long v58 = v38;
  long long v59 = v39;
  long long v60 = v40;
  uint64_t v53 = v35;
  unint64_t v54 = 0;
  char v55 = v18;
  long long v56 = v36;
  return sub_10003917C((uint64_t)&v53);
}

uint64_t sub_100038810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10006F228();
  sub_10006F058();
  uint64_t v5 = enum case for Font.Design.default(_:);
  uint64_t v6 = sub_10006F048();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v8(v4, v5, v6);
  uint64_t v9 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  v9(v4, 0, 1, v6);
  uint64_t v34 = sub_10006F078();
  sub_100039078((uint64_t)v4, &qword_100092508);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006EEE8();
  uint64_t v10 = sub_10006F0D8();
  uint64_t v31 = v11;
  uint64_t v32 = v10;
  uint64_t v33 = v12;
  char v14 = v13 & 1;
  uint64_t v30 = swift_getKeyPath();
  sub_10006F058();
  v8(v4, v5, v6);
  v9(v4, 0, 1, v6);
  uint64_t v29 = sub_10006F078();
  sub_100039078((uint64_t)v4, &qword_100092508);
  uint64_t v15 = swift_getKeyPath();
  HIDWORD(v28) = sub_10006F028();
  sub_10006EC98();
  char v42 = v14;
  char v40 = 0;
  char v37 = 0;
  *(_DWORD *)(a1 + 41) = *(_DWORD *)v41;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)&v41[3];
  *(_DWORD *)(a1 + 73) = *(_DWORD *)v39;
  *(_DWORD *)(a1 + 76) = *(_DWORD *)&v39[3];
  int v16 = *(_DWORD *)v38;
  *(_DWORD *)(a1 + 100) = *(_DWORD *)&v38[3];
  *(_DWORD *)(a1 + 97) = v16;
  uint64_t v17 = KeyPath;
  *(void *)a1 = v36;
  *(void *)(a1 + 8) = v17;
  uint64_t v18 = v33;
  uint64_t v19 = v31;
  uint64_t v20 = v32;
  *(void *)(a1 + 16) = v34;
  *(void *)(a1 + 24) = v20;
  *(void *)(a1 + 32) = v19;
  *(unsigned char *)(a1 + 40) = v14;
  uint64_t v21 = v29;
  uint64_t v22 = v30;
  *(void *)(a1 + 48) = v18;
  *(void *)(a1 + 56) = v22;
  *(void *)(a1 + 64) = 1;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v21;
  *(unsigned char *)(a1 + 96) = BYTE4(v28);
  *(void *)(a1 + 104) = v23;
  *(void *)(a1 + 112) = v24;
  *(void *)(a1 + 120) = v25;
  *(void *)(a1 + 128) = v26;
  *(unsigned char *)(a1 + 136) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v20, v19, v14);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038EA0(v20, v19, v14);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100038BA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006ED98();
  *a1 = result;
  return result;
}

uint64_t sub_100038BCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006ED98();
  *a1 = result;
  return result;
}

uint64_t sub_100038BF8()
{
  return sub_10006EDA8();
}

uint64_t sub_100038C24()
{
  return sub_10006EDA8();
}

uint64_t sub_100038C50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 216);
  uint64_t v8 = *(void *)(a1 + 208);
  char v6 = *(unsigned char *)(a1 + 224);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100038D70(v8, v7, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100038D70(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100038D80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 216);
  uint64_t v8 = *(void *)(a1 + 208);
  char v6 = *(unsigned char *)(a1 + 224);
  swift_release();
  swift_release();
  swift_release();
  sub_100038EA0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100038EA0(v8, v7, v6);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100038EA0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_100038EB0()
{
  unint64_t result = qword_1000924F0;
  if (!qword_1000924F0)
  {
    sub_1000049A4(&qword_1000924E8);
    sub_10002643C(&qword_1000924F8, &qword_100092500);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000924F0);
  }
  return result;
}

uint64_t sub_100038F50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 240);
  uint64_t v8 = *(void *)(a1 + 232);
  char v6 = *(unsigned char *)(a1 + 248);
  swift_release();
  swift_release();
  swift_release();
  sub_100038EA0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100038EA0(v8, v7, v6);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100039078(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100004960(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000390DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10003917C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  swift_release();
  swift_release();
  swift_release();
  sub_100038EA0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_10003921C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 216);
  uint64_t v22 = *(void *)(a1 + 208);
  uint64_t v19 = *(void *)(a1 + 232);
  uint64_t v20 = *(void *)(a1 + 224);
  uint64_t v17 = *(void *)(a1 + 248);
  uint64_t v18 = *(void *)(a1 + 240);
  uint64_t v15 = *(void *)(a1 + 264);
  uint64_t v16 = *(void *)(a1 + 256);
  long long v14 = *(_OWORD *)(a1 + 272);
  long long v13 = *(_OWORD *)(a1 + 288);
  long long v12 = *(_OWORD *)(a1 + 304);
  long long v11 = *(_OWORD *)(a1 + 320);
  long long v9 = *(_OWORD *)(a1 + 352);
  long long v10 = *(_OWORD *)(a1 + 336);
  uint64_t v6 = *(void *)(a1 + 368);
  uint64_t v5 = *(void *)(a1 + 376);
  char v7 = *(unsigned char *)(a1 + 384);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100039380(v22, v21, v20, v19, v18, v17, v16, v15, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, SBYTE8(v12), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9,
    *((uint64_t *)&v9 + 1),
    v6,
    v5,
    v7);
  return a1;
}

uint64_t sub_100039380(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  sub_100038D70(a1, a2, a3 & 1);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = swift_retain();
  if (a23)
  {
    return sub_1000394AC(a12, a13, a14, a15);
  }
  return result;
}

uint64_t sub_1000394AC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100038D70(result, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10003952C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 216);
  uint64_t v22 = *(void *)(a1 + 208);
  uint64_t v19 = *(void *)(a1 + 232);
  uint64_t v20 = *(void *)(a1 + 224);
  uint64_t v17 = *(void *)(a1 + 248);
  uint64_t v18 = *(void *)(a1 + 240);
  uint64_t v15 = *(void *)(a1 + 264);
  uint64_t v16 = *(void *)(a1 + 256);
  long long v13 = *(_OWORD *)(a1 + 288);
  long long v14 = *(_OWORD *)(a1 + 272);
  long long v11 = *(_OWORD *)(a1 + 320);
  long long v12 = *(_OWORD *)(a1 + 304);
  long long v10 = *(_OWORD *)(a1 + 336);
  long long v9 = *(_OWORD *)(a1 + 352);
  uint64_t v6 = *(void *)(a1 + 368);
  uint64_t v5 = *(void *)(a1 + 376);
  char v7 = *(unsigned char *)(a1 + 384);
  swift_release();
  swift_release();
  swift_release();
  sub_100038EA0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10003968C(v22, v21, v20, v19, v18, v17, v16, v15, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, SBYTE8(v12), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9,
    *((uint64_t *)&v9 + 1),
    v6,
    v5,
    v7);
  return a1;
}

uint64_t sub_10003968C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  sub_100038EA0(a1, a2, a3 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (a23)
  {
    return sub_1000397B8(a12, a13, a14, a15);
  }
  return result;
}

uint64_t sub_1000397B8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100038EA0(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_100039838()
{
  unint64_t result = qword_100092520;
  if (!qword_100092520)
  {
    sub_1000049A4(&qword_100092518);
    sub_10002643C(&qword_100092528, &qword_100092530);
    sub_10002643C(&qword_100092538, &qword_100092540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092520);
  }
  return result;
}

uint64_t sub_1000398FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  uint64_t v21 = *(void *)(a1 + 240);
  uint64_t v22 = *(void *)(a1 + 232);
  uint64_t v19 = *(void *)(a1 + 256);
  uint64_t v20 = *(void *)(a1 + 248);
  uint64_t v17 = *(void *)(a1 + 272);
  uint64_t v18 = *(void *)(a1 + 264);
  uint64_t v15 = *(void *)(a1 + 288);
  uint64_t v16 = *(void *)(a1 + 280);
  long long v14 = *(_OWORD *)(a1 + 296);
  long long v13 = *(_OWORD *)(a1 + 312);
  long long v11 = *(_OWORD *)(a1 + 344);
  long long v12 = *(_OWORD *)(a1 + 328);
  long long v9 = *(_OWORD *)(a1 + 376);
  long long v10 = *(_OWORD *)(a1 + 360);
  uint64_t v6 = *(void *)(a1 + 392);
  uint64_t v5 = *(void *)(a1 + 400);
  char v7 = *(unsigned char *)(a1 + 408);
  swift_release();
  swift_release();
  swift_release();
  sub_100038EA0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10003968C(v22, v21, v20, v19, v18, v17, v16, v15, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, SBYTE8(v12), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9,
    *((uint64_t *)&v9 + 1),
    v6,
    v5,
    v7);
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100039A7C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10006EDD8();
  *a1 = v3;
  return result;
}

uint64_t sub_100039AA8()
{
  return sub_10006EDE8();
}

uint64_t sub_100039AD0(uint64_t result)
{
  *(unsigned char *)(result + 176) = 1;
  return result;
}

uint64_t sub_100039ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004960(&qword_100092548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100039B44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 88);
  sub_100038D70(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000394AC(v6, v2, v3, v4);
  return a1;
}

unint64_t sub_100039C2C()
{
  unint64_t result = qword_100092560;
  if (!qword_100092560)
  {
    sub_1000049A4(&qword_100092550);
    sub_100039CCC();
    sub_10002643C(&qword_1000925A8, &qword_1000925B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092560);
  }
  return result;
}

unint64_t sub_100039CCC()
{
  unint64_t result = qword_100092568;
  if (!qword_100092568)
  {
    sub_1000049A4(&qword_100092570);
    sub_100039D6C();
    sub_10002643C(&qword_100092598, &qword_1000925A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092568);
  }
  return result;
}

unint64_t sub_100039D6C()
{
  unint64_t result = qword_100092578;
  if (!qword_100092578)
  {
    sub_1000049A4(&qword_100092580);
    sub_10002643C(&qword_100092588, &qword_100092590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092578);
  }
  return result;
}

uint64_t sub_100039E0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 88);
  sub_100038EA0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000397B8(v6, v2, v3, v4);
  return a1;
}

uint64_t sub_100039EF4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t sub_100039F68(uint64_t result)
{
  *(unsigned char *)(result + 176) = 0;
  return result;
}

uint64_t sub_100039F70()
{
  return sub_100039FF8(&qword_1000925C8, &qword_1000925D0, &qword_1000924E8, (void (*)(void))sub_100038EB0);
}

uint64_t sub_100039FB4()
{
  return sub_100039FF8(&qword_1000925D8, &qword_1000925E0, &qword_100092518, (void (*)(void))sub_100039838);
}

uint64_t sub_100039FF8(unint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000049A4(a2);
    sub_1000049A4(a3);
    a4();
    swift_getOpaqueTypeConformance2();
    sub_1000360EC(&qword_100091E40, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LightsCategoryWidget()
{
  return &type metadata for LightsCategoryWidget;
}

uint64_t sub_10003A0F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003A10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006F6F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_10006F6E8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100039078(a1, &qword_100091DE8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10006F6C8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

int *sub_10003A2B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_10006EC08();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10006F4B8();
  __chkstk_darwin(v5 - 8);
  if (__OFADD__(qword_10009A828, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_10009A828;
    v23[0] = 0x2073746867694CLL;
    v23[1] = 0xE700000000000000;
    v24._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v24);
    swift_bridgeObjectRelease();
    uint64_t v2 = 0x2073746867694CLL;
    unint64_t v1 = 0xE700000000000000;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v6 = sub_10006EC68();
  sub_100004B08(v6, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10006EC48();
  os_log_type_t v8 = sub_10006F818();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    sub_100022B5C(v2, v1, v23);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    sub_100022B5C(0xD000000000000010, 0x8000000100077A30, v23);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10006EB78();
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v10 = sub_10006F518();
  uint64_t v12 = v11;
  sub_10006F408();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t result = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v18 = a1 + result[5];
  *(void *)uint64_t v18 = 1;
  *(unsigned char *)(v18 + 8) = 0;
  uint64_t v19 = a1 + result[6];
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 0;
  uint64_t v20 = a1 + result[7];
  *(void *)uint64_t v20 = 1;
  *(unsigned char *)(v20 + 8) = 0;
  uint64_t v21 = (uint64_t *)(a1 + result[8]);
  uint64_t *v21 = v10;
  v21[1] = v12;
  uint64_t v22 = (void *)(a1 + result[9]);
  *uint64_t v22 = v14;
  v22[1] = v16;
  return result;
}

uint64_t sub_10003A684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v7 = sub_10006F438();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_100091DE8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = qword_10009A828 + 1;
  if (__OFADD__(qword_10009A828, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = v9;
    uint64_t v33 = v13;
    ++qword_10009A828;
    uint64_t v36 = 0x2073746867694CLL;
    unint64_t v37 = 0xE700000000000000;
    uint64_t v35 = v14;
    v38._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v38);
    swift_bridgeObjectRelease();
    uint64_t v3 = v36;
    unint64_t v4 = v37;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v15 = sub_10006EC68();
  sub_100004B08(v15, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_10006EC48();
  os_log_type_t v17 = sub_10006F818();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v31 = a3;
    uint64_t v19 = v18;
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v29 = v7;
    uint64_t v30 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_100022B5C(v3, v4, &v36);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v35 = sub_100022B5C(0xD00000000000001BLL, 0x8000000100077A10, &v36);
    uint64_t v7 = v29;
    uint64_t v10 = v30;
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v31;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = v32;
  uint64_t v21 = sub_10006F6F8();
  uint64_t v22 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v33, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v23 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v24 = (v20 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = 0;
  *((void *)v25 + 3) = 0;
  *((void *)v25 + 4) = v34;
  *((void *)v25 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v25[v23], v10, v7);
  uint64_t v26 = (uint64_t *)&v25[v24];
  *uint64_t v26 = v3;
  v26[1] = v4;
  swift_retain();
  sub_10003A10C(v22, (uint64_t)&unk_1000927A8, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_10003AAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for LightsCategoryEntry(0);
  uint64_t v12 = swift_task_alloc();
  v8[4] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v8[5] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_10003ABA0;
  v13[17] = a7;
  v13[18] = a8;
  v13[15] = v12;
  v13[16] = a6;
  return _swift_task_switch(sub_10003AD50, 0, 0);
}

uint64_t sub_10003ABA0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10003AC9C, 0, 0);
}

uint64_t sub_10003AC9C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_10003D544(v1, type metadata accessor for LightsCategoryEntry);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10003AD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a3;
  v4[18] = a4;
  v4[15] = a1;
  v4[16] = a2;
  return _swift_task_switch(sub_10003AD50, 0, 0);
}

uint64_t sub_10003AD50()
{
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void **)(qword_10009A778 + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome);
  swift_beginAccess();
  uint64_t v2 = *v1;
  v0[19] = v2;
  id v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  void *v4 = v0;
  v4[1] = sub_10003AE64;
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  return sub_10003D78C((uint64_t)(v0 + 7), (uint64_t)v2, v5, v6);
}

uint64_t sub_10003AE64()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10003AF60, 0, 0);
}

uint64_t sub_10003AF60()
{
  sub_10002BFD0((uint64_t)(v0 + 7), (uint64_t)(v0 + 2));
  uint64_t v1 = v0[6];
  if (v1) {
    BOOL v2 = v1 == 1;
  }
  else {
    BOOL v2 = 1;
  }
  char v3 = v2;
  if (v2)
  {
    uint64_t v4 = 0;
    uint64_t v1 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v5 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v7 = v0[2];
    uint64_t v6 = v0[3];
  }
  uint64_t v8 = (void *)v0[19];
  uint64_t v9 = v0[15];
  sub_10006EB78();
  sub_10006F408();
  uint64_t v11 = v10;
  uint64_t v13 = v12;

  uint64_t v14 = (int *)type metadata accessor for LightsCategoryEntry(0);
  uint64_t v15 = v9 + v14[5];
  *(void *)uint64_t v15 = v7;
  *(unsigned char *)(v15 + 8) = v3;
  uint64_t v16 = v9 + v14[6];
  *(void *)uint64_t v16 = v6;
  *(unsigned char *)(v16 + 8) = v3;
  uint64_t v17 = v9 + v14[7];
  *(void *)uint64_t v17 = v5;
  *(unsigned char *)(v17 + 8) = v3;
  uint64_t v18 = (void *)(v9 + v14[8]);
  *uint64_t v18 = v4;
  v18[1] = v1;
  uint64_t v19 = (void *)(v9 + v14[9]);
  *uint64_t v19 = v11;
  v19[1] = v13;
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_10003B090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v7 = sub_10006F438();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_100091DE8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = qword_10009A828 + 1;
  if (__OFADD__(qword_10009A828, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v43 = v9;
    ++qword_10009A828;
    uint64_t v46 = 0x2073746867694CLL;
    unint64_t v47 = 0xE700000000000000;
    uint64_t v45 = v14;
    v48._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v48);
    swift_bridgeObjectRelease();
    uint64_t v3 = v46;
    unint64_t v4 = v47;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v15 = sub_10006EC68();
  uint64_t v16 = sub_100004B08(v15, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v38 = v16;
  uint64_t v17 = sub_10006EC48();
  os_log_type_t v18 = sub_10006F818();
  BOOL v19 = os_log_type_enabled(v17, v18);
  unint64_t v41 = v4;
  uint64_t v42 = v3;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    char v40 = v10;
    uint64_t v21 = v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = v7;
    uint64_t v46 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v39 = a1;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_100022B5C(v3, v4, &v46);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v45 = sub_100022B5C(0xD00000000000001BLL, 0x8000000100077990, &v46);
    a1 = v39;
    sub_10006F868();
    swift_arrayDestroy();
    uint64_t v7 = v37;
    swift_slowDealloc();
    uint64_t v10 = v40;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if ((sub_10006F428() & 1) == 0)
  {
    unint64_t v23 = sub_10006EC48();
    os_log_type_t v24 = sub_10006F818();
    if (os_log_type_enabled(v23, v24))
    {
      char v40 = v10;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v39 = a1;
      uint64_t v46 = v26;
      uint64_t v38 = v8;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v45 = sub_100022B5C(0xD000000000000025, 0x80000001000784F0, &v46);
      uint64_t v10 = v40;
      uint64_t v8 = v38;
      sub_10006F868();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Notifying homed that '%s' is active", v25, 0xCu);
      swift_arrayDestroy();
      a1 = v39;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    id v27 = [self defaultCenter];
    NSString v28 = sub_10006F4D8();
    [v27 postNotificationName:v28 object:0];
  }
  uint64_t v29 = sub_10006F6F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 1, 1, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v30 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v31 = (v43 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = (char *)swift_allocObject();
  *((void *)v32 + 2) = 0;
  *((void *)v32 + 3) = 0;
  *((void *)v32 + 4) = v44;
  *((void *)v32 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v32[v30], v10, v7);
  uint64_t v33 = (uint64_t *)&v32[v31];
  unint64_t v34 = v41;
  *uint64_t v33 = v42;
  v33[1] = v34;
  swift_retain();
  sub_10003A10C((uint64_t)v13, (uint64_t)&unk_100092770, (uint64_t)v32);
  return swift_release();
}

uint64_t sub_10003B66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  uint64_t v9 = sub_10006EB88();
  v8[7] = v9;
  v8[8] = *(void *)(v9 - 8);
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  sub_10006F3C8();
  v8[11] = swift_task_alloc();
  uint64_t v10 = sub_100004960(&qword_100092788);
  v8[12] = v10;
  v8[13] = *(void *)(v10 - 8);
  v8[14] = swift_task_alloc();
  return _swift_task_switch(sub_10003B7D0, 0, 0);
}

uint64_t sub_10003B7D0()
{
  sub_100004960(&qword_100092790);
  uint64_t v1 = type metadata accessor for LightsCategoryEntry(0);
  *(void *)(v0 + 120) = v1;
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 128) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_100070910;
  unint64_t v4 = v3 + v2;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  *(void *)uint64_t v5 = v0;
  *(void *)(v5 + 8) = sub_10003B914;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(void *)(v5 + 144) = *(void *)(v0 + 48);
  *(_OWORD *)(v5 + 128) = v6;
  *(void *)(v5 + 120) = v4;
  return _swift_task_switch(sub_10003AD50, 0, 0);
}

uint64_t sub_10003B914()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10003BA10, 0, 0);
}

uint64_t sub_10003BA10()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[13];
  uint64_t v11 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v10 = (void (*)(uint64_t))v0[2];
  sub_10006EB68();
  sub_10006EB58();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v4, v6);
  sub_10006F3B8();
  v7(v3, v6);
  sub_10003CF90(qword_100092748, (void (*)(uint64_t))type metadata accessor for LightsCategoryEntry);
  sub_10006F448();
  v10(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10003BBA4()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006F4B8();
  __chkstk_darwin(v1 - 8);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t result = sub_10006F518();
  qword_10009A818 = result;
  unk_10009A820 = v3;
  return result;
}

uint64_t sub_10003BCBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10006EB88();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_10003BD28()
{
  uint64_t v1 = sub_100004960(&qword_100091DC8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LightsCategoryView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C510(v0, (uint64_t)v6);
  uint64_t v7 = (uint64_t *)&v6[*(int *)(v4 + 20)];
  *uint64_t v7 = swift_getKeyPath();
  sub_100004960(&qword_100091DD8);
  swift_storeEnumTagMultiPayload();
  sub_10006EAF8();
  sub_10003CF90(&qword_100092760, (void (*)(uint64_t))type metadata accessor for LightsCategoryView);
  sub_10006F0F8();
  sub_100039078((uint64_t)v3, &qword_100091DC8);
  return sub_10003D544((uint64_t)v6, type metadata accessor for LightsCategoryView);
}

uint64_t sub_10003BECC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10006EC08();
  __chkstk_darwin(v1 - 8);
  v24[1] = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100004960(&qword_1000925E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_1000925F0);
  v24[0] = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_1000925F8);
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LightsCategoryWidgetView(0);
  sub_10003CF90(&qword_100092600, (void (*)(uint64_t))type metadata accessor for LightsCategoryWidgetView);
  sub_10003C460();
  sub_10006F3A8();
  if (qword_1000916E0 != -1) {
    swift_once();
  }
  uint64_t v28 = qword_10009A818;
  uint64_t v29 = (void *)unk_10009A820;
  unint64_t v14 = sub_10003C4B4();
  unint64_t v15 = sub_100004A48();
  sub_10006EF68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v32 = sub_10006F518();
  uint64_t v33 = v16;
  uint64_t v28 = v4;
  uint64_t v29 = &type metadata for String;
  unint64_t v30 = v14;
  unint64_t v31 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_10006EF48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24[0] + 8))(v10, v8);
  sub_100004960(&qword_100091D18);
  uint64_t v18 = sub_10006F348();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100070910;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, enum case for WidgetFamily.accessoryRectangular(_:), v18);
  uint64_t v28 = v8;
  uint64_t v29 = &type metadata for String;
  unint64_t v30 = OpaqueTypeConformance2;
  unint64_t v31 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v26;
  sub_10006EF58();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v22);
}

uint64_t sub_10003C434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003C510(a1, a2);
}

uint64_t type metadata accessor for LightsCategoryWidgetView(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092710);
}

unint64_t sub_10003C460()
{
  unint64_t result = qword_100092608;
  if (!qword_100092608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092608);
  }
  return result;
}

unint64_t sub_10003C4B4()
{
  unint64_t result = qword_100092610;
  if (!qword_100092610)
  {
    sub_1000049A4(&qword_1000925E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092610);
  }
  return result;
}

uint64_t sub_10003C510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LightsCategoryEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LightsCategoryEntry(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092670);
}

uint64_t *sub_10003C594(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v15);
    uint64_t v19 = (uint64_t *)((char *)a2 + v15);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10003C6C4(uint64_t a1)
{
  uint64_t v2 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003C73C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = (void *)(a1 + v14);
  uint64_t v18 = (void *)(a2 + v14);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10003C81C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  unint64_t v23 = (void *)(a1 + v22);
  os_log_type_t v24 = (void *)(a2 + v22);
  *unint64_t v23 = *v24;
  v23[1] = v24[1];
  return a1;
}

uint64_t sub_10003C928(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10003C9FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = (void *)(a1 + v14);
  char v18 = (uint64_t *)(a2 + v14);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10003CAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003CAF4);
}

uint64_t sub_10003CAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_10003CBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003CBD8);
}

uint64_t sub_10003CBD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10006EB88();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = a2;
  }
  return result;
}

uint64_t sub_10003CC98()
{
  uint64_t result = sub_10006EB88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LightsCategoryTimelineProvider()
{
  return &type metadata for LightsCategoryTimelineProvider;
}

uint64_t sub_10003CD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003CD68);
}

uint64_t sub_10003CD68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LightsCategoryEntry(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10003CDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003CDE8);
}

uint64_t sub_10003CDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LightsCategoryEntry(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10003CE58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003CF48()
{
  return sub_10003CF90(qword_100092748, (void (*)(uint64_t))type metadata accessor for LightsCategoryEntry);
}

uint64_t sub_10003CF90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003CFD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003CFFC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  int v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_100019620;
  return sub_10003B66C(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_10003D13C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_10003D218;
  return v6(a1);
}

uint64_t sub_10003D218()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10003D310()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003D348(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100019620;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100092778 + dword_100092778);
  return v6(a1, v4);
}

uint64_t sub_10003D404(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  int v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_100019B04;
  return sub_10003AAAC(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_10003D544(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003D5A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003D62C(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_10006F978();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v6 = sub_10006F848(*(void *)(a2 + 40)),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_100004B50(0, (unint64_t *)&qword_100091EE0);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_10006F858();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_10006F858();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_10003D78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[43] = a4;
  v5[44] = v4;
  v5[41] = a2;
  v5[42] = a3;
  v5[40] = a1;
  return _swift_task_switch(sub_10003D7B4, 0, 0);
}

uint64_t sub_10003D7B4()
{
  uint64_t v29 = v0;
  if (qword_1000916D8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[41];
  uint64_t v2 = sub_10006EC68();
  v0[45] = sub_100004B08(v2, (uint64_t)qword_10009A800);
  id v3 = v1;
  swift_bridgeObjectRetain_n();
  id v4 = v3;
  unint64_t v5 = sub_10006EC48();
  os_log_type_t v6 = sub_10006F818();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = v0[43];
  if (v7)
  {
    os_log_type_t v27 = v6;
    uint64_t v9 = v0[42];
    uint64_t v26 = v0[41];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315650;
    swift_bridgeObjectRetain();
    v0[37] = sub_100022B5C(v9, v8, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    v0[38] = sub_100022B5C(0xD00000000000001BLL, 0x80000001000785A0, &v28);
    sub_10006F868();
    *(_WORD *)(v10 + 22) = 2080;
    if (v26)
    {
      id v11 = [v4 name];
      uint64_t v12 = sub_10006F4F8();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE800000000000000;
      uint64_t v12 = 0x656D6F68206C696ELL;
    }
    v0[39] = sub_100022B5C(v12, v14, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  if (v0[41])
  {
    uint64_t v15 = qword_1000916E8;
    id v16 = v4;
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_10009A830;
    id v18 = v16;
    uint64_t v19 = (void *)swift_task_alloc();
    v0[46] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_10003DB7C;
    uint64_t v20 = v0[43];
    uint64_t v21 = v0[41];
    uint64_t v22 = v0[42];
    return LockScreenDataModel.reloadCharacteristics(matching:for:fetchId:)(v17, v21, v22, v20);
  }
  else
  {
    uint64_t v24 = v0[40];
    *(void *)(v24 + 32) = 0;
    *(_OWORD *)uint64_t v24 = 0u;
    *(_OWORD *)(v24 + 16) = 0u;
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
}

uint64_t sub_10003DB7C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 328);
  *(void *)(*(void *)v1 + 376) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_10003DC98, 0, 0);
}

uint64_t sub_10003DC98()
{
  uint64_t v54 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 72);
  uint64_t v46 = v0 + 232;
  uint64_t v49 = v0 + 272;
  uint64_t v50 = v0 + 240;
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = 0;
  if (qword_1000916F0 != -1) {
    swift_once();
  }
  uint64_t v44 = (_OWORD *)(v0 + 16);
  uint64_t v45 = (_OWORD *)(v0 + 176);
  unint64_t v40 = *(void *)(v0 + 344);
  uint64_t v42 = *(void *)(v0 + 376);
  uint64_t v47 = *(void *)(v0 + 336);
  uint64_t v2 = *(void **)(v0 + 328);
  long long v3 = *(_OWORD *)&qword_10009A848;
  *uint64_t v1 = xmmword_10009A838;
  *(_OWORD *)(v0 + 88) = v3;
  *(_OWORD *)(v0 + 104) = xmmword_10009A858;
  *(void *)(v0 + 120) = qword_10009A868;
  id v38 = v2;
  id v4 = [v38 accessories];
  sub_100004B50(0, (unint64_t *)&qword_1000917F8);
  unint64_t v5 = sub_10006F668();

  *(_OWORD *)(v0 + 192) = *v1;
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 112);
  *(void *)(v0 + 224) = *(void *)(v0 + 104);
  sub_100004B8C(v0 + 192);
  sub_100004BB8(v0 + 208);
  sub_100004BB8(v0 + 216);
  sub_100004BB8(v0 + 224);
  sub_100004B40(v6);
  BOOL v7 = sub_100025574(v5, v0 + 72);
  sub_100004BE4(v0 + 192);
  sub_100004C10(v0 + 208);
  sub_100004C10(v0 + 216);
  sub_100004C10(v0 + 224);
  sub_100004C3C(v6);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = v7;
  Swift::String v48 = sub_10003EEDC(0, (unint64_t)v7, v47, v40, v42, v52, "{%s} lightbulb '%s' cached value is: %@");
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1000916F8 != -1) {
    swift_once();
  }
  unint64_t v39 = *(void *)(v0 + 344);
  uint64_t v41 = *(void *)(v0 + 376);
  uint64_t v43 = *(void *)(v0 + 336);
  unint64_t v8 = *(void **)(v0 + 328);
  uint64_t v9 = qword_10009A8A0;
  long long v11 = xmmword_10009A880;
  long long v10 = *(_OWORD *)&qword_10009A890;
  *uint64_t v44 = xmmword_10009A870;
  *(_OWORD *)(v0 + 32) = v11;
  *(_OWORD *)(v0 + 48) = v10;
  *(void *)(v0 + 64) = v9;
  id v37 = v8;
  id v12 = [v37 accessories];
  unint64_t v13 = sub_10006F668();

  *uint64_t v45 = *v44;
  uint64_t v14 = *(void *)(v0 + 32);
  *(void *)(v0 + 272) = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 48);
  uint64_t v16 = *(void *)(v0 + 56);
  *(void *)(v0 + 232) = v14;
  *(void *)(v0 + 240) = v15;
  sub_100004B8C((uint64_t)v45);
  sub_100004BB8(v46);
  sub_100004BB8(v49);
  sub_100004BB8(v50);
  sub_100004B40(v16);
  unint64_t v17 = (unint64_t)sub_100025574(v13, (uint64_t)v44);
  sub_100004BE4((uint64_t)v45);
  sub_100004C10(v46);
  sub_100004C10(v49);
  sub_100004C10(v50);
  sub_100004C3C(v16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = sub_10003EEDC(0, v17, v43, v39, v41, v52, "{%s} outlet or switch light '%s' cached value is: %@");
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v51 = (uint64_t)v18 + (void)v48;
  if (__OFADD__(v48, v18))
  {
    __break(1u);
  }
  else if (!((unint64_t)v36 >> 62))
  {
    uint64_t v19 = *(void *)(((unint64_t)v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_10006FAC8();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_10006FAC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v22 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    unint64_t v23 = sub_10006EC48();
    os_log_type_t v24 = sub_10006F818();
    BOOL v25 = os_log_type_enabled(v23, v24);
    unint64_t v26 = *(void *)(v0 + 344);
    if (v25)
    {
      uint64_t v27 = *(void *)(v0 + 336);
      uint64_t v28 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136316162;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 248) = sub_100022B5C(v27, v26, &v53);
      sub_10006F868();
      swift_retain();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2048;
      *(void *)(v0 + 256) = v48;
      sub_10006F868();
      *(_WORD *)(v28 + 22) = 2048;
      *(void *)(v0 + 264) = v18;
      sub_10006F868();
      *(_WORD *)(v28 + 32) = 2048;
      swift_beginAccess();
      *(void *)(v0 + 280) = *(void *)(v52 + 16);
      sub_10006F868();
      swift_release();
      *(_WORD *)(v28 + 42) = 2048;
      *(void *)(v0 + 288) = v22;
      sub_10006F868();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "{%s} lightbulbs on: %ld switches for lightbulbs on: %ld nonresponsive lights: %ld totalLightsInHome: %ld", (uint8_t *)v28, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    uint64_t v29 = *(void **)(v0 + 328);
    if (v22 < 1)
    {
      swift_release();

      uint64_t v51 = 0;
      uint64_t v33 = 0;
      uint64_t v22 = 0;
      uint64_t v30 = 0;
      uint64_t v32 = 0;
    }
    else
    {
      uint64_t v30 = sub_10003EA9C(v51, v22);
      uint64_t v32 = v31;

      swift_beginAccess();
      uint64_t v33 = *(void *)(v52 + 16);
      swift_release();
    }
    unint64_t v34 = *(uint64_t **)(v0 + 320);
    *unint64_t v34 = v51;
    v34[1] = v33;
    void v34[2] = v22;
    v34[3] = v30;
    v34[4] = v32;
    uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
    return v35();
  }
  return result;
}

void sub_10003E3E0(void *a1, void **a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, const char *a7)
{
  long long v10 = *a2;
  if (qword_1000916D8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10006EC68();
  sub_100004B08(v11, (uint64_t)qword_10009A800);
  id v12 = v10;
  swift_bridgeObjectRetain_n();
  id v13 = v12;
  uint64_t v14 = sub_10006EC48();
  os_log_type_t v15 = sub_10006F818();
  if (!os_log_type_enabled(v14, v15))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  uint64_t v31 = a1;
  uint64_t v32 = v11;
  uint64_t v33 = a6;
  uint64_t v16 = 0x6E776F6E6B6E75;
  uint64_t v17 = swift_slowAlloc();
  uint64_t v30 = (void *)swift_slowAlloc();
  id v42 = (id)swift_slowAlloc();
  *(_DWORD *)uint64_t v17 = 136315650;
  swift_bridgeObjectRetain();
  v40[0] = sub_100022B5C(a3, a4, (uint64_t *)&v42);
  sub_10006F868();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v17 + 12) = 2080;
  id v18 = [v13 service];
  if (v18
    && (uint64_t v19 = v18, v20 = [v18 accessory], v19, v20))
  {
    id v21 = [v20 name];

    uint64_t v16 = sub_10006F4F8();
    unint64_t v23 = v22;
  }
  else
  {
    unint64_t v23 = 0xE700000000000000;
  }
  v40[0] = sub_100022B5C(v16, v23, (uint64_t *)&v42);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 22) = 2112;
  if ([v13 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  a6 = v33;
  sub_10001CBF0((uint64_t)&v38, (uint64_t)v40);
  if (!v41)
  {
    sub_100010C2C((uint64_t)v40);
    goto LABEL_16;
  }
  sub_100004B50(0, &qword_100091E50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    NSString v24 = sub_10006F4D8();
    goto LABEL_17;
  }
  NSString v24 = v37;
LABEL_17:
  v40[0] = v24;
  sub_10006F868();
  *uint64_t v30 = v24;

  _os_log_impl((void *)&_mh_execute_header, v14, v15, a7, (uint8_t *)v17, 0x20u);
  sub_100004960((uint64_t *)&unk_100092030);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  a1 = v31;
  uint64_t v11 = v32;
LABEL_18:
  if ((sub_10003D62C(v13, a5) & 1) == 0)
  {
    if ([v13 value])
    {
      sub_10006F898();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v38 = 0u;
      long long v39 = 0u;
    }
    sub_10001CBF0((uint64_t)&v38, (uint64_t)v40);
    if (v41)
    {
      sub_100004B50(0, &qword_100091E48);
      if (swift_dynamicCast())
      {
        id v25 = v42;
        unsigned int v26 = [v42 BOOLValue];

        if (__OFADD__(*a1, v26)) {
          __break(1u);
        }
        else {
          *a1 += v26;
        }
        return;
      }
    }
    else
    {
      sub_100010C2C((uint64_t)v40);
    }
  }
  swift_beginAccess();
  if (__OFADD__(*(void *)(a6 + 16), 1))
  {
    __break(1u);
  }
  else
  {
    ++*(void *)(a6 + 16);
    if (qword_1000916C8 == -1) {
      goto LABEL_29;
    }
  }
  swift_once();
LABEL_29:
  sub_100004B08(v11, (uint64_t)qword_10009A7D0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v27 = sub_10006EC48();
  os_log_type_t v28 = sub_10006F818();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    id v42 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v38 = sub_100022B5C(a3, a4, (uint64_t *)&v42);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 12) = 2048;
    swift_beginAccess();
    swift_release();
    sub_10006F868();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "{%s} non-responsive light bulb count: %ld", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

uint64_t sub_10003EA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EC08();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10006F4B8();
  __chkstk_darwin(v5 - 8);
  if (a1 && a2 != a1)
  {
    sub_10006F4A8();
    sub_10006EBF8();
    sub_10006F518();
    sub_100004960(&qword_1000925C0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_100070910;
    *(void *)(v7 + 56) = &type metadata for Int;
    *(void *)(v7 + 64) = &protocol witness table for Int;
    *(void *)(v7 + 32) = a1;
    uint64_t v6 = sub_10006F508();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10006F4A8();
    sub_10006EBF8();
    return sub_10006F518();
  }
  return v6;
}

uint64_t sub_10003ECCC()
{
  sub_100004960(&qword_1000917F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100073160;
  if (qword_1000916F0 != -1) {
    swift_once();
  }
  uint64_t v1 = *((void *)&xmmword_10009A838 + 1);
  uint64_t v2 = qword_10009A848;
  uint64_t v3 = unk_10009A850;
  long long v4 = xmmword_10009A858;
  uint64_t v5 = qword_10009A868;
  *(void *)(v0 + 32) = xmmword_10009A838;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v0 + 64) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v4 + 1));
  if (qword_1000916F8 != -1) {
    swift_once();
  }
  uint64_t v6 = *((void *)&xmmword_10009A870 + 1);
  long long v7 = xmmword_10009A880;
  uint64_t v8 = qword_10009A890;
  uint64_t v9 = qword_10009A898;
  uint64_t v10 = qword_10009A8A0;
  *(void *)(v0 + 88) = xmmword_10009A870;
  *(void *)(v0 + 96) = v6;
  *(_OWORD *)(v0 + 104) = v7;
  *(void *)(v0 + 120) = v8;
  *(void *)(v0 + 128) = v9;
  *(void *)(v0 + 136) = v10;
  qword_10009A830 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_100004B40(v9);
}

void sub_10003EE34()
{
  *(void *)&xmmword_10009A838 = 0x6C7562746867694CLL;
  *((void *)&xmmword_10009A838 + 1) = 0xEA00000000007362;
  qword_10009A848 = (uint64_t)&off_10008B700;
  unk_10009A850 = &_swiftEmptyArrayStorage;
  *((void *)&xmmword_10009A858 + 1) = 0;
  qword_10009A868 = 0;
  *(void *)&xmmword_10009A858 = &off_10008B728;
}

void sub_10003EE80()
{
  *(void *)&xmmword_10009A870 = 0xD00000000000001CLL;
  *((void *)&xmmword_10009A870 + 1) = 0x8000000100078610;
  *(void *)&xmmword_10009A880 = &off_10008B750;
  *((void *)&xmmword_10009A880 + 1) = &off_10008B778;
  qword_10009A898 = 0;
  qword_10009A8A0 = 0;
  qword_10009A890 = (uint64_t)&off_10008B7A0;
}

uint64_t sub_10003EECC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10003EEDC(void *a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, const char *a7)
{
  id v21 = a1;
  uint64_t v11 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = sub_10006FAC8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v14 = (a2 & 0xC000000000000001) != 0 ? (id)sub_10006F9F8() : *(id *)(a2 + 8 * i);
      uint64_t v11 = v14;
      uint64_t v15 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v20 = v14;
      sub_10003E3E0(&v21, &v20, a3, a4, a5, a6, a7);
      if (v7)
      {
        swift_bridgeObjectRelease();

        return v11;
      }

      if (v15 == v12)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v11;
}

int *sub_10003F020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10006EC08();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  sub_10006EB78();
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v4 = sub_10006F518();
  uint64_t v6 = v5;
  sub_10006F408();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t result = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v12 = a1 + result[5];
  *(void *)uint64_t v12 = v4;
  *(void *)(v12 + 8) = v6;
  strcpy((char *)(v12 + 16), "lock.open.fill");
  *(unsigned char *)(v12 + 31) = -18;
  *(void *)(v12 + 32) = 0x9380E29380E2;
  *(void *)(v12 + 40) = 0xA600000000000000;
  *(unsigned char *)(v12 + 48) = 0;
  id v13 = (void *)(a1 + result[6]);
  *id v13 = 0;
  v13[1] = 0;
  id v14 = (void *)(a1 + result[7]);
  *id v14 = v8;
  v14[1] = v10;
  return result;
}

uint64_t sub_10003F1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[16] = a4;
  v5[17] = a5;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  uint64_t v6 = sub_10006EB88();
  v5[18] = v6;
  v5[19] = *(void *)(v6 - 8);
  v5[20] = swift_task_alloc();
  return _swift_task_switch(sub_10003F298, 0, 0);
}

uint64_t sub_10003F298()
{
  uint64_t v63 = v0;
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = sub_10006EC68();
  *(void *)(v0 + 168) = sub_100004B08(v2, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  id v3 = v1;
  uint64_t v4 = sub_10006EC48();
  os_log_type_t v5 = sub_10006F818();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = *(void *)(v0 + 136);
  uint64_t v8 = &LockScreenDataModel;
  if (v6)
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = *(void **)(v0 + 112);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    uint64_t v62 = v59;
    *(_DWORD *)uint64_t v11 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_100022B5C(v9, v7, &v62);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    *(void *)(v0 + 88) = sub_100022B5C(0xD00000000000001ELL, 0x8000000100078120, &v62);
    sub_10006F868();
    *(_WORD *)(v11 + 22) = 2080;
    id v12 = [v10 accessory];
    if (v12
      && (id v13 = v12, v14 = [v12 identifier], v13, v14))
    {
      uint64_t v15 = sub_10006F4F8();
      unint64_t v17 = v16;

      uint64_t v18 = v15;
      uint64_t v8 = &LockScreenDataModel;
    }
    else
    {
      unint64_t v17 = 0xE400000000000000;
      uint64_t v8 = &LockScreenDataModel;
      uint64_t v18 = 1819047278;
    }
    id v20 = *(void **)(v0 + 112);
    *(void *)(v0 + 96) = sub_100022B5C(v18, v17, &v62);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = *(void **)(v0 + 112);
    swift_bridgeObjectRelease_n();
  }
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  id v21 = [*(id *)(v0 + 112) count:v59];
  unint64_t v22 = v21;
  if (v21)
  {
    id v23 = [v21 identifier];

    if (v23)
    {
      uint64_t v24 = sub_10006F4F8();
      unint64_t v22 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v22 = 0;
    }
  }
  else
  {
    uint64_t v24 = 0;
  }
  unsigned int v26 = sub_100026FB0(v24, (uint64_t)v22);
  *(void *)(v0 + 176) = v26;
  swift_bridgeObjectRelease();
  if (v26)
  {
    swift_bridgeObjectRetain_n();
    id v27 = v26;
    os_log_type_t v28 = sub_10006EC48();
    os_log_type_t v29 = sub_10006F818();
    BOOL v30 = os_log_type_enabled(v28, v29);
    unint64_t v31 = *(void *)(v0 + 136);
    if (v30)
    {
      uint64_t v32 = *(void *)(v0 + 128);
      uint64_t v33 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 64) = sub_100022B5C(v32, v31, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2080;
      id v34 = [v27 name];
      uint64_t v35 = sub_10006F4F8();
      unint64_t v37 = v36;

      *(void *)(v0 + 72) = sub_100022B5C(v35, v37, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v28, v29, "...{%s} found homeAccessory: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    long long v61 = (uint64_t (*)(uint64_t))((char *)&dword_100093100 + dword_100093100);
    id v53 = v27;
    uint64_t v54 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v54;
    *uint64_t v54 = v0;
    v54[1] = sub_10003FAC0;
    return v61((uint64_t)v26);
  }
  else
  {
    long long v38 = *(void **)(v0 + 112);
    swift_bridgeObjectRetain_n();
    id v39 = v38;
    unint64_t v40 = sub_10006EC48();
    os_log_type_t v41 = sub_10006F818();
    BOOL v42 = os_log_type_enabled(v40, v41);
    unint64_t v43 = *(void *)(v0 + 136);
    if (v42)
    {
      uint64_t v44 = v8;
      uint64_t v45 = *(void *)(v0 + 128);
      id v60 = *(id *)(v0 + 112);
      uint64_t v46 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_100022B5C(v45, v43, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2080;
      id v47 = [v60 (SEL)v44[366].count];
      if (v47
        && (Swift::String v48 = v47, v49 = [v47 identifier], v48, v49))
      {
        uint64_t v50 = sub_10006F4F8();
        unint64_t v52 = v51;
      }
      else
      {
        unint64_t v52 = 0xE400000000000000;
        uint64_t v50 = 1819047278;
      }
      long long v57 = *(void **)(v0 + 112);
      *(void *)(v0 + 24) = sub_100022B5C(v50, v52, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v40, v41, "...{%s} did NOT find HMAccessory for %s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      long long v56 = *(void **)(v0 + 112);
      swift_bridgeObjectRelease_n();
    }
    sub_10003F020(*(void *)(v0 + 104));
    swift_task_dealloc();
    long long v58 = *(uint64_t (**)(void))(v0 + 8);
    return v58();
  }
}

uint64_t sub_10003FAC0(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void **)(*v2 + 176);
  *(void *)(v3 + 192) = a1;
  *(unsigned char *)(v3 + 200) = a2;
  swift_task_dealloc();

  return _swift_task_switch(sub_10003FBE0, 0, 0);
}

uint64_t sub_10003FBE0()
{
  uint64_t v56 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_10006EC48();
  os_log_type_t v2 = sub_10006F818();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = *(unsigned char *)(v0 + 200);
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v6 = *(void *)(v0 + 128);
    unint64_t v5 = *(void *)(v0 + 136);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315906;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_100022B5C(v6, v5, &v55);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2048;
    if (v3) {
      uint64_t v8 = -1;
    }
    else {
      uint64_t v8 = v4;
    }
    *(void *)(v0 + 40) = v8;
    sub_10006F868();
    *(_WORD *)(v7 + 22) = 2080;
    uint64_t v9 = sub_100060A88(v4, v3 & 1);
    *(void *)(v0 + 48) = sub_100022B5C(v9, v10, &v55);
    sub_10006F868();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 32) = 2080;
    if (v3)
    {
LABEL_9:
      unint64_t v12 = 0x8000000100078630;
      uint64_t v11 = 0xD000000000000022;
    }
    else
    {
      uint64_t v11 = 0x65706F2E6B636F6CLL;
      unint64_t v12 = 0xEE006C6C69662E6ELL;
      switch(*(void *)(v0 + 192))
      {
        case 0:
          break;
        case 1:
          uint64_t v11 = 0x6C69662E6B636F6CLL;
          unint64_t v12 = 0xE90000000000006CLL;
          break;
        case 2:
          uint64_t v11 = 0xD000000000000027;
          unint64_t v12 = 0x8000000100078660;
          break;
        case 3:
          unint64_t v12 = 0x8000000100078630;
          uint64_t v11 = 0xD000000000000022;
          break;
        default:
          goto LABEL_9;
      }
    }
    *(void *)(v0 + 56) = sub_100022B5C(v11, v12, &v55);
    sub_10006F868();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "...{%s} got value: %ld, statusString: %s, iconName %s)", (uint8_t *)v7, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v13 = *(unsigned char *)(v0 + 200);
  id v14 = *(void **)(v0 + 176);
  sub_10006EB78();
  id v15 = [v14 name];
  uint64_t v16 = sub_10006F4F8();
  uint64_t v18 = v17;

  uint64_t v19 = *(void *)(v0 + 192);
  if (v13)
  {
LABEL_14:
    unint64_t v21 = 0x8000000100078630;
    unint64_t v20 = 0xD000000000000022;
  }
  else
  {
    unint64_t v20 = 0x65706F2E6B636F6CLL;
    unint64_t v21 = 0xEE006C6C69662E6ELL;
    switch(v19)
    {
      case 0:
        break;
      case 1:
        unint64_t v20 = 0x6C69662E6B636F6CLL;
        unint64_t v21 = 0xE90000000000006CLL;
        break;
      case 2:
        unint64_t v20 = 0xD000000000000027;
        unint64_t v21 = 0x8000000100078660;
        break;
      default:
        goto LABEL_14;
    }
  }
  unint64_t v22 = *(void **)(v0 + 112);
  int v23 = *(unsigned char *)(v0 + 200) & 1;
  uint64_t v24 = sub_100060A88(*(void *)(v0 + 192), *(unsigned char *)(v0 + 200) & 1);
  uint64_t v26 = v25;
  id v27 = [v22 accessory];
  os_log_type_t v28 = v27;
  uint64_t v53 = v18;
  uint64_t v54 = v16;
  unint64_t v51 = v21;
  unint64_t v52 = v20;
  uint64_t v49 = v26;
  uint64_t v50 = v24;
  if (v27)
  {
    id v29 = [v27 identifier];

    if (v29)
    {
      os_log_type_t v28 = (void *)sub_10006F4F8();
      uint64_t v31 = v30;

      goto LABEL_20;
    }
    os_log_type_t v28 = 0;
  }
  uint64_t v31 = 0;
LABEL_20:
  if (v23) {
    BOOL v32 = 0;
  }
  else {
    BOOL v32 = v19 == 1;
  }
  char v33 = v32;
  id v34 = *(void **)(v0 + 176);
  uint64_t v35 = *(void *)(v0 + 152);
  uint64_t v36 = *(void *)(v0 + 160);
  uint64_t v37 = *(void *)(v0 + 144);
  uint64_t v38 = *(void *)(v0 + 104);
  sub_10006F408();
  uint64_t v40 = v39;
  uint64_t v42 = v41;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v38, v36, v37);
  unint64_t v43 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v44 = v38 + v43[5];
  *(void *)uint64_t v44 = v54;
  *(void *)(v44 + 8) = v53;
  *(void *)(v44 + 16) = v52;
  *(void *)(v44 + 24) = v51;
  *(void *)(v44 + 32) = v50;
  *(void *)(v44 + 40) = v49;
  *(unsigned char *)(v44 + 48) = v33;
  uint64_t v45 = (void *)(v38 + v43[6]);
  *uint64_t v45 = v28;
  v45[1] = v31;
  uint64_t v46 = (void *)(v38 + v43[7]);
  *uint64_t v46 = v40;
  v46[1] = v42;
  swift_task_dealloc();
  id v47 = *(uint64_t (**)(void))(v0 + 8);
  return v47();
}

Swift::Bool __swiftcall HMHome.shouldShowNoAccessOutsideOfSchedule(forRestrictedUser:)(HMUser forRestrictedUser)
{
  uint64_t v3 = sub_10006EC38();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (objc_class *)((char *)v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10006EB88();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v1 homeAccessControlForUser:forRestrictedUser.super.isa];
  id v12 = [v11 restrictedGuestAccessSettings];
  if (!v12)
  {
    if (qword_1000916B8 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_10006EC68();
    sub_100004B08(v54, (uint64_t)qword_10009A7A0);
    uint64_t v55 = forRestrictedUser.super.isa;
    id v56 = v11;
    uint64_t v57 = v55;
    id v58 = v56;
    uint64_t v59 = sub_10006EC48();
    os_log_type_t v60 = sub_10006F818();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc();
      long long v98 = (void *)swift_slowAlloc();
      id isa = (id)swift_slowAlloc();
      id v101 = isa;
      *(_DWORD *)uint64_t v61 = 136315650;
      uint64_t v100 = sub_100022B5C(0xD000000000000037, 0x80000001000786B0, (uint64_t *)&v101);
      sub_10006F868();
      *(_WORD *)(v61 + 12) = 2080;
      id v62 = [(objc_class *)v57 debugDescription];
      uint64_t v63 = sub_10006F4F8();
      unint64_t v65 = v64;

      uint64_t v100 = sub_100022B5C(v63, v65, (uint64_t *)&v101);
      sub_10006F868();

      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 22) = 2112;
      uint64_t v100 = (uint64_t)v58;
      id v66 = v58;
      sub_10006F868();
      *long long v98 = v58;

      _os_log_impl((void *)&_mh_execute_header, v59, v60, "%s: user = %s. Returning false because restrictedGuestAccessSettings is nil. accessControl = %@", (uint8_t *)v61, 0x20u);
      sub_100004960((uint64_t *)&unk_100092030);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_18;
  }
  char v13 = v12;
  id isa = forRestrictedUser.super.isa;
  id v14 = [v12 guestAccessSchedule];
  if (!v14)
  {
    if (qword_1000916B8 != -1) {
      swift_once();
    }
    uint64_t v67 = sub_10006EC68();
    sub_100004B08(v67, (uint64_t)qword_10009A7A0);
    id v68 = isa;
    id v69 = v11;
    id v70 = v13;
    id v71 = v68;
    id v72 = v69;
    id v73 = v70;
    long long v74 = sub_10006EC48();
    os_log_type_t v75 = sub_10006F818();
    int v76 = v75;
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v77 = swift_slowAlloc();
      long long v97 = (void *)swift_slowAlloc();
      id isa = (id)swift_slowAlloc();
      id v101 = isa;
      *(_DWORD *)uint64_t v77 = 136315906;
      long long v98 = v13;
      uint64_t v100 = sub_100022B5C(0xD000000000000037, 0x80000001000786B0, (uint64_t *)&v101);
      sub_10006F868();
      *(_WORD *)(v77 + 12) = 2080;
      id v78 = [v71 debugDescription];
      LODWORD(v96) = v76;
      id v79 = v78;
      uint64_t v80 = sub_10006F4F8();
      unint64_t v82 = v81;

      uint64_t v100 = sub_100022B5C(v80, v82, (uint64_t *)&v101);
      sub_10006F868();

      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 22) = 2112;
      uint64_t v100 = (uint64_t)v72;
      id v83 = v72;
      sub_10006F868();
      long long v84 = v97;
      *long long v97 = v72;

      *(_WORD *)(v77 + 32) = 2112;
      uint64_t v100 = (uint64_t)v73;
      id v85 = v73;
      sub_10006F868();
      v84[1] = v98;

      _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v96, "%s: user = %s. Returning false because rgAccessSchedule is nil. accessControl = %@. rgAccessSettings = %@.", (uint8_t *)v77, 0x2Au);
      sub_100004960((uint64_t *)&unk_100092030);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_18:
    LOBYTE(v21) = 0;
    return (char)v21;
  }
  id v15 = v14;
  long long v98 = v13;
  long long v97 = self;
  sub_10006EB68();
  uint64_t v16 = v1;
  uint64_t v17 = v6;
  Class v21 = sub_10006EB48().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v18 = [v16 timeZone];
  sub_10006EC28();

  Class v19 = sub_10006EC18().super.isa;
  unint64_t v20 = *(void (**)(Class, uint64_t))(v4 + 8);
  long long v94 = v17;
  uint64_t v95 = v4 + 8;
  uint64_t v96 = v3;
  long long v93 = v20;
  v20(v17, v3);
  LODWORD(v17) = [v97 isDate:v21 withinAllowedTimeForSchedule:v15 forHomeInTimeZone:v19];

  LODWORD(v21) = v17 ^ 1;
  unint64_t v22 = v15;
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_10006EC68();
  sub_100004B08(v23, (uint64_t)qword_10009A7A0);
  id v24 = isa;
  id v25 = v11;
  id v26 = v15;
  id v27 = v16;
  id v28 = v24;
  id v29 = v25;
  id v30 = v26;
  id v31 = v27;
  BOOL v32 = sub_10006EC48();
  os_log_type_t v33 = sub_10006F818();
  int v34 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v35 = swift_slowAlloc();
    id v90 = v30;
    uint64_t v36 = v35;
    long long v89 = (void *)swift_slowAlloc();
    id isa = (id)swift_slowAlloc();
    id v101 = isa;
    *(_DWORD *)uint64_t v36 = 136316418;
    LODWORD(v97) = v34;
    uint64_t v100 = sub_100022B5C(0xD000000000000037, 0x80000001000786B0, (uint64_t *)&v101);
    os_log_t v92 = v32;
    sub_10006F868();
    *(_WORD *)(v36 + 12) = 2080;
    id v37 = [v28 debugDescription];
    uint64_t v38 = sub_10006F4F8();
    id v88 = v31;
    unint64_t v40 = v39;

    uint64_t v100 = sub_100022B5C(v38, v40, (uint64_t *)&v101);
    sub_10006F868();

    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 22) = 1024;
    LODWORD(v100) = v21;
    sub_10006F868();
    *(_WORD *)(v36 + 28) = 2112;
    uint64_t v100 = (uint64_t)v29;
    uint64_t v41 = v22;
    id v42 = v29;
    id v91 = v42;
    v87[1] = &v101;
    sub_10006F868();
    unint64_t v43 = v89;
    *long long v89 = v29;

    *(_WORD *)(v36 + 38) = 2112;
    uint64_t v100 = (uint64_t)v90;
    id v44 = v90;
    sub_10006F868();
    v43[1] = v41;

    *(_WORD *)(v36 + 48) = 2080;
    id v45 = v88;
    id v46 = [v88 timeZone];
    char v47 = (char)v21;
    Class v21 = v94;
    sub_10006EC28();

    sub_100041224();
    uint64_t v48 = v96;
    uint64_t v49 = sub_10006FCC8();
    unint64_t v51 = v50;
    Class v52 = v21;
    LOBYTE(v21) = v47;
    v93(v52, v48);
    uint64_t v100 = sub_100022B5C(v49, v51, (uint64_t *)&v101);
    sub_10006F868();

    swift_bridgeObjectRelease();
    os_log_t v53 = v92;
    _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v97, "%s: user = %s. Returning %{BOOL}d. accessControl = %@. guestAccessSchedule = %@. timeZone = %s", (uint8_t *)v36, 0x3Au);
    sub_100004960((uint64_t *)&unk_100092030);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return (char)v21;
}

Swift::Bool __swiftcall HMHome.shouldShowNoAccessAwayFromHome(forRestrictedUser:)(HMUser forRestrictedUser)
{
  os_log_type_t v2 = v1;
  id v4 = [v2 homeAccessControlForUser:forRestrictedUser.super.isa];
  if ([v4 isRestrictedGuest])
  {
    if (qword_1000916B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10006EC68();
    sub_100004B08(v5, (uint64_t)qword_10009A7A0);
    uint64_t v6 = forRestrictedUser.super.isa;
    id v7 = v2;
    uint64_t v8 = v6;
    id v9 = v7;
    unint64_t v10 = sub_10006EC48();
    os_log_type_t v11 = sub_10006F818();
    id v12 = &LockScreenDataModel;
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v13 = swift_slowAlloc();
      id v14 = (void *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315650;
      sub_100022B5C(0xD000000000000032, 0x80000001000786F0, &v33);
      sub_10006F868();
      *(_WORD *)(v13 + 12) = 2112;
      id v15 = v8;
      sub_10006F868();
      *id v14 = v8;

      *(_WORD *)(v13 + 22) = 2080;
      [v9 homeLocationStatus];
      id v16 = (id)HMStringFromHomeLocation();
      uint64_t v17 = sub_10006F4F8();
      unint64_t v19 = v18;

      sub_100022B5C(v17, v19, &v33);
      sub_10006F868();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s: user = %@. homeLocationStatus = %s", (uint8_t *)v13, 0x20u);
      sub_100004960((uint64_t *)&unk_100092030);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      id v12 = &LockScreenDataModel;
      swift_slowDealloc();
    }
    else
    {
    }
    id v31 = [v9 (SEL)v12[414].count];

    return v31 == (id)2;
  }
  else
  {
    if (qword_1000916B8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_10006EC68();
    sub_100004B08(v20, (uint64_t)qword_10009A7A0);
    Class v21 = forRestrictedUser.super.isa;
    id v22 = v4;
    uint64_t v23 = v21;
    id v24 = v22;
    id v25 = sub_10006EC48();
    os_log_type_t v26 = sub_10006F818();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      id v28 = (void *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315650;
      sub_100022B5C(0xD000000000000032, 0x80000001000786F0, &v33);
      sub_10006F868();
      *(_WORD *)(v27 + 12) = 2112;
      id v29 = v23;
      sub_10006F868();
      *id v28 = v23;

      *(_WORD *)(v27 + 22) = 2112;
      id v30 = v24;
      sub_10006F868();
      v28[1] = v24;

      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s: user = %@. Returning false because isRestrictedGuest is NO. accessControl = %@", (uint8_t *)v27, 0x20u);
      sub_100004960((uint64_t *)&unk_100092030);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
}

unint64_t sub_100041224()
{
  unint64_t result = qword_1000927C0;
  if (!qword_1000927C0)
  {
    sub_10006EC38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000927C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SecurityAccessoryWidget()
{
  return &type metadata for SecurityAccessoryWidget;
}

uint64_t sub_10004128C()
{
  return swift_getOpaqueTypeConformance2();
}

int *sub_1000412A8@<X0>(uint64_t a1@<X8>)
{
  p_cb = &OBJC_PROTOCOL___HMHomeManagerDelegate.cb;
  if (__OFADD__(qword_1000927D8, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_1000927D8;
    sub_10006F9D8(21);
    swift_bridgeObjectRelease();
    v9[0] = 0xD000000000000013;
    v9[1] = 0x80000001000787B0;
    v10._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v10);
    swift_bridgeObjectRelease();
    uint64_t v1 = 0xD000000000000013;
    p_cb = (uint32_t *)0x80000001000787B0;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v4 = sub_10006EC68();
  sub_100004B08(v4, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10006EC48();
  os_log_type_t v6 = sub_10006F818();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v9[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    sub_100022B5C(v1, (unint64_t)p_cb, v9);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100022B5C(0xD000000000000010, 0x8000000100077A30, v9);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  type metadata accessor for GarageDoorSecurityDataFetcher();
  return sub_100028180(a1);
}

uint64_t sub_100041538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  sub_10006EC08();
  v3[10] = swift_task_alloc();
  sub_10006F4B8();
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_1000415F8, 0, 0);
}

uint64_t sub_1000415F8()
{
  int v34 = v1;
  p_cb = &OBJC_PROTOCOL___HMHomeManagerDelegate.cb;
  if (__OFADD__(qword_1000927D8, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_1000927D8;
    sub_10006F9D8(21);
    swift_bridgeObjectRelease();
    uint64_t v32 = 0xD000000000000013;
    unint64_t v33 = 0x80000001000787B0;
    v1[2] = qword_1000927D8;
    v36._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v36);
    swift_bridgeObjectRelease();
    uint64_t v0 = v32;
    p_cb = (uint32_t *)v33;
    v1[12] = v33;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v3 = sub_10006EC68();
  sub_100004B08(v3, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_10006EC48();
  os_log_type_t v5 = sub_10006F818();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v1[5] = sub_100022B5C(v0, (unint64_t)p_cb, &v32);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    v1[6] = sub_100022B5C(0xD000000000000011, 0x80000001000788C0, &v32);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v7 = sub_10006F428();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = sub_10006EC48();
    os_log_type_t v9 = sub_10006F818();
    if (os_log_type_enabled(v8, v9))
    {
      Swift::String v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)Swift::String v10 = 136315138;
      swift_bridgeObjectRetain();
      v1[4] = sub_100022B5C(v0, (unint64_t)p_cb, &v32);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "...{%s} context is PREVIEW", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v14 = v1[7];
    sub_10006EB78();
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v15 = sub_10006F518();
    uint64_t v17 = v16;
    sub_10006F408();
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    id v22 = (int *)type metadata accessor for SecurityAccessoryEntry();
    uint64_t v23 = v14 + v22[5];
    *(void *)uint64_t v23 = v15;
    *(void *)(v23 + 8) = v17;
    strcpy((char *)(v23 + 16), "lock.open.fill");
    *(unsigned char *)(v23 + 31) = -18;
    *(void *)(v23 + 32) = 0x9380E29380E2;
    *(void *)(v23 + 40) = 0xA600000000000000;
    *(unsigned char *)(v23 + 48) = 0;
    id v24 = (void *)(v14 + v22[6]);
    *id v24 = 0;
    v24[1] = 0;
    id v25 = (void *)(v14 + v22[7]);
    void *v25 = v19;
    v25[1] = v21;
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v26 = (uint64_t (*)(void))v1[1];
    return v26();
  }
  else
  {
    swift_bridgeObjectRetain();
    os_log_type_t v11 = sub_10006EC48();
    os_log_type_t v12 = sub_10006F818();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_bridgeObjectRetain();
      v1[3] = sub_100022B5C(v0, (unint64_t)p_cb, &v32);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "...{%s} context is SNAPSHOT", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id v28 = (void *)swift_task_alloc();
    v1[13] = v28;
    *id v28 = v1;
    v28[1] = sub_100041C9C;
    uint64_t v29 = v1[8];
    uint64_t v30 = v1[9];
    uint64_t v31 = v1[7];
    return sub_100041DEC(v31, v29, v30, v0, (uint64_t)p_cb);
  }
}

uint64_t sub_100041C9C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100041DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a1;
  uint64_t v11 = sub_10006EB88();
  v5[14] = v11;
  v5[15] = *(void *)(v11 - 8);
  v5[16] = swift_task_alloc();
  os_log_type_t v12 = (void *)swift_task_alloc();
  v5[17] = v12;
  void *v12 = v5;
  v12[5] = a4;
  v12[6] = a5;
  uint64_t v12[3] = a2;
  v12[4] = a3;
  v12[1] = sub_100041F1C;
  void v12[2] = a1;
  return _swift_task_switch(sub_100043640, 0, 0);
}

uint64_t sub_100041F1C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100042018, 0, 0);
}

uint64_t sub_100042018()
{
  unint64_t v40 = v0;
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  uint64_t v1 = &unk_10009A000;
  os_log_type_t v2 = (void **)(qword_10009A778 + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = &LockScreenDataModel;
  if (*v2)
  {
    id v5 = v3;
    id v6 = [v5 currentUser];
    Swift::Bool v7 = HMHome.shouldShowNoAccessOutsideOfSchedule(forRestrictedUser:)((HMUser)v6);

    if (v7)
    {
      if (qword_1000916B8 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_10006EC68();
      sub_100004B08(v8, (uint64_t)qword_10009A7A0);
      id v9 = v5;
      Swift::String v10 = sub_10006EC48();
      os_log_type_t v11 = sub_10006F818();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = v0[14];
        uint64_t v36 = v0[16];
        uint64_t v37 = v0[15];
        uint64_t v13 = swift_slowAlloc();
        uint64_t v35 = (void *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136315650;
        v0[10] = sub_100022B5C(0xD000000000000027, 0x8000000100078860, &v39);
        sub_10006F868();
        *(_WORD *)(v13 + 12) = 2112;
        v0[11] = v9;
        id v14 = v9;
        sub_10006F868();
        *uint64_t v35 = v3;

        *(_WORD *)(v13 + 22) = 2080;
        sub_10006EB68();
        sub_10004599C((unint64_t *)&qword_100092160, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v15 = sub_10006FCC8();
        unint64_t v17 = v16;
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v12);
        v0[12] = sub_100022B5C(v15, v17, &v39);
        sub_10006F868();
        uint64_t v4 = &LockScreenDataModel;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "{%s} Displaying No Access for RG in home %@ because %s is outside of allowed schedule.", (uint8_t *)v13, 0x20u);
        sub_100004960((uint64_t *)&unk_100092030);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v1 = (void *)&unk_10009A000;
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v18 = v0[13];

      uint64_t v19 = v18 + *(int *)(type metadata accessor for SecurityAccessoryEntry() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v19 = 0xD000000000000027;
      *(void *)(v19 + 8) = 0x8000000100078890;
      *(void *)(v19 + 16) = 0x69662E6B636F6C63;
      *(void *)(v19 + 24) = 0xEA00000000006C6CLL;
      *(void *)(v19 + 32) = 0;
      *(void *)(v19 + 40) = 0xE000000000000000;
      *(unsigned char *)(v19 + 48) = 1;
    }
    else
    {
    }
  }
  uint64_t v20 = (void **)(v1[239] + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (*v20)
  {
    id v22 = v21;
    id v23 = [v22 (SEL)v4[398].count];
    Swift::Bool v24 = HMHome.shouldShowNoAccessAwayFromHome(forRestrictedUser:)((HMUser)v23);

    if (v24)
    {
      if (qword_1000916B8 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_10006EC68();
      sub_100004B08(v25, (uint64_t)qword_10009A7A0);
      id v26 = v22;
      uint64_t v27 = sub_10006EC48();
      os_log_type_t v28 = sub_10006F818();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v38 = (void *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 136315394;
        v0[8] = sub_100022B5C(0xD000000000000027, 0x8000000100078860, &v39);
        sub_10006F868();
        *(_WORD *)(v29 + 12) = 2112;
        v0[9] = v26;
        id v30 = v26;
        sub_10006F868();
        *uint64_t v38 = v21;

        _os_log_impl((void *)&_mh_execute_header, v27, v28, "{%s} Displaying No Access for RG in home %@ because away from home.", (uint8_t *)v29, 0x16u);
        sub_100004960((uint64_t *)&unk_100092030);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v31 = v0[13];

      uint64_t v32 = v31 + *(int *)(type metadata accessor for SecurityAccessoryEntry() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v32 = 0xD00000000000002DLL;
      *(void *)(v32 + 8) = 0x8000000100078810;
      *(void *)(v32 + 16) = 0xD000000000000012;
      *(void *)(v32 + 24) = 0x8000000100078840;
      *(void *)(v32 + 32) = 0;
      *(void *)(v32 + 40) = 0xE000000000000000;
      *(unsigned char *)(v32 + 48) = 1;
    }
    else
    {
    }
  }
  swift_task_dealloc();
  unint64_t v33 = (uint64_t (*)(void))v0[1];
  return v33();
}

uint64_t sub_100042750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  uint64_t v4 = sub_10006EB88();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  sub_10006F3C8();
  v3[15] = swift_task_alloc();
  return _swift_task_switch(sub_100042850, 0, 0);
}

uint64_t sub_100042850()
{
  uint64_t v39 = v0;
  id v1 = [*(id *)(v0 + 72) accessory];
  if (v1 && (os_log_type_t v2 = v1, v3 = [v1 identifier], v2, v3))
  {
    uint64_t v4 = sub_10006F4F8();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  Swift::Bool v7 = sub_100026FB0(v4, v6);
  *(void *)(v0 + 128) = v7;
  if (__OFADD__(qword_1000927D8, 1))
  {
    __break(1u);
LABEL_34:
    swift_once();
    goto LABEL_12;
  }
  uint64_t v8 = v7;
  uint64_t v35 = v4;
  ++qword_1000927D8;
  sub_10006F9D8(21);
  swift_bridgeObjectRelease();
  uint64_t v37 = 0xD000000000000013;
  unint64_t v38 = 0x80000001000787B0;
  *(void *)(v0 + 16) = qword_1000927D8;
  v41._uint64_t countAndFlagsBits = sub_10006FCC8();
  sub_10006F558(v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v42._uint64_t countAndFlagsBits = 32;
  v42._object = (void *)0xE100000000000000;
  sub_10006F558(v42);
  swift_bridgeObjectRelease();
  uint64_t v4 = v38;
  if (v8)
  {
    id v9 = [v8 name];
    unint64_t v10 = sub_10006F4F8();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v12 = (void *)0x80000001000787D0;
    unint64_t v10 = 0xD000000000000011;
  }
  swift_bridgeObjectRetain();
  v43._uint64_t countAndFlagsBits = v10;
  v43._object = v12;
  sub_10006F558(v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = v37;
  *(void *)(v0 + 136) = v38;
  if (qword_1000916B8 != -1) {
    goto LABEL_34;
  }
LABEL_12:
  uint64_t v13 = sub_10006EC68();
  sub_100004B08(v13, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  id v14 = sub_10006EC48();
  os_log_type_t v15 = sub_10006F818();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 48) = sub_100022B5C(v36, v4, &v37);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    *(void *)(v0 + 56) = sub_100022B5C(0xD000000000000011, 0x80000001000787F0, &v37);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (sub_10006F428())
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v17 = sub_10006EC48();
    os_log_type_t v18 = sub_10006F818();
    if (os_log_type_enabled(v17, v18))
    {
      os_log_type_t type = v18;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v37 = v33;
      *(_DWORD *)uint64_t v19 = 136315650;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 24) = sub_100022B5C(v36, v4, &v37);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2080;
      *(void *)(v0 + 32) = sub_100022B5C(0xD00000000000002ELL, 0x8000000100078730, &v37);
      sub_10006F868();
      *(_WORD *)(v19 + 22) = 2080;
      if (v6) {
        uint64_t v20 = v35;
      }
      else {
        uint64_t v20 = 7104878;
      }
      if (v6) {
        unint64_t v21 = v6;
      }
      else {
        unint64_t v21 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      *(void *)(v0 + 40) = sub_100022B5C(v20, v21, &v37);
      sub_10006F868();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, type, "...{%s} notifying homed that '%s:%s' is active", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id v22 = [self defaultCenter];
    NSString v23 = sub_10006F4D8();
    if (v6)
    {
      NSString v24 = sub_10006F4D8();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v24 = 0;
    }
    [v22 postNotificationName:v23 object:v24];
  }
  sub_100004960(&qword_1000928E0);
  uint64_t v25 = type metadata accessor for SecurityAccessoryEntry();
  *(void *)(v0 + 144) = v25;
  unint64_t v26 = (*(unsigned __int8 *)(*(void *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v0 + 152) = v27;
  *(_OWORD *)(v27 + 16) = xmmword_100070910;
  uint64_t v28 = v27 + v26;
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v29;
  void *v29 = v0;
  v29[1] = sub_100042FD0;
  uint64_t v30 = *(void *)(v0 + 72);
  uint64_t v31 = *(void *)(v0 + 80);
  return sub_100041DEC(v28, v30, v31, v36, v4);
}

uint64_t sub_100042FD0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000430E8, 0, 0);
}

uint64_t sub_1000430E8()
{
  uint64_t v8 = (void *)v0[16];
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  sub_10006EB78();
  sub_10006EB58();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  sub_10006F3B8();
  v5(v1, v3);
  sub_10004599C(qword_1000928A8, (void (*)(uint64_t))type metadata accessor for SecurityAccessoryEntry);
  sub_10006F448();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100043244(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100043284(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_10008E208, (uint64_t)&unk_100092900);
}

uint64_t sub_100043264(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100043284(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_10008E1E0, (uint64_t)&unk_1000928C8);
}

uint64_t sub_100043284(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a3;
  uint64_t v30 = a8;
  v28[1] = a7;
  uint64_t v11 = sub_10006F438();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)v28 - v16;
  uint64_t v18 = sub_100004960(&qword_100091DE8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10006F6F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, a2, v11);
  id v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v22(v15, v17, v11);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  NSString v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = 0;
  *((void *)v24 + 3) = 0;
  *((void *)v24 + 4) = a1;
  v22(&v24[v23], v15, v11);
  uint64_t v25 = &v24[(v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v25 = v29;
  *((void *)v25 + 1) = a4;
  id v26 = a1;
  swift_retain();
  sub_10003A10C((uint64_t)v20, v30, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_1000434B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Bool v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *Swift::Bool v7 = v3;
  v7[1] = sub_100019620;
  return IntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_100043564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Bool v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *Swift::Bool v7 = v3;
  v7[1] = sub_100019B04;
  return IntentTimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_100043618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  _OWORD v5[2] = a1;
  return _swift_task_switch(sub_100043640, 0, 0);
}

uint64_t sub_100043640()
{
  id v1 = [*(id *)(v0 + 24) accessory];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 serviceType];

    if (v3)
    {
      sub_10006F4F8();
    }
  }
  int v4 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  if (v4 == 35)
  {
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v12;
    void *v12 = v0;
    v12[1] = sub_10004395C;
    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 24);
    uint64_t v16 = *(void *)(v0 + 32);
    uint64_t v17 = *(void *)(v0 + 16);
    return sub_100049F44(v17, v15, v16, v13, v14);
  }
  else if (v4 == 30)
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100043864;
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 24);
    uint64_t v9 = *(void *)(v0 + 32);
    uint64_t v10 = *(void *)(v0 + 16);
    return sub_10003F1D0(v10, v8, v9, v6, v7);
  }
  else
  {
    type metadata accessor for GarageDoorSecurityDataFetcher();
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_100043A54;
    uint64_t v19 = *(void *)(v0 + 40);
    uint64_t v20 = *(void *)(v0 + 48);
    uint64_t v21 = *(void *)(v0 + 24);
    uint64_t v22 = *(void *)(v0 + 32);
    uint64_t v23 = *(void *)(v0 + 16);
    return sub_100028320(v23, v21, v22, v19, v20);
  }
}

uint64_t sub_100043864()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10004395C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100043A54()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100043B4C()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006F4B8();
  __chkstk_darwin(v1 - 8);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t result = sub_10006F518();
  qword_1000927C8 = result;
  unk_1000927D0 = v3;
  return result;
}

uint64_t sub_100043C68(void *a1)
{
  uint64_t v3 = sub_100004960(&qword_100092918);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100010FDC(a1, a1[3]);
  sub_100045FE8();
  sub_10006FDF8();
  v8[15] = 0;
  sub_10006FC08();
  if (!v1)
  {
    v8[14] = 1;
    sub_10006FC08();
    v8[13] = 2;
    sub_10006FC08();
    v8[12] = 3;
    sub_10006FC18();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100043E18()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E6E6F6369;
      break;
    case 2:
      uint64_t result = 0x7453737574617473;
      break;
    case 3:
      uint64_t result = 0x6572756365537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100043EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000462D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_100043ED0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100043EDC(uint64_t a1)
{
  unint64_t v2 = sub_100045FE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100043F18(uint64_t a1)
{
  unint64_t v2 = sub_100045FE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100043F54()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 48);
  sub_10006FD78();
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  sub_10006FD98(v1);
  return sub_10006FDD8();
}

void sub_100044020()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  sub_10006FD98(v1);
}

Swift::Int sub_1000440D4()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 48);
  sub_10006FD78();
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10006F548();
  swift_bridgeObjectRelease();
  sub_10006FD98(v1);
  return sub_10006FDD8();
}

uint64_t sub_10004419C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  _OWORD v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 48);
  return sub_100045F38((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1000441F8(void *a1)
{
  return sub_100043C68(a1);
}

uint64_t sub_100044210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10006EC08();
  __chkstk_darwin(v1 - 8);
  v24[1] = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100004960(&qword_1000927E0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_1000927E8);
  v24[0] = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_1000927F0);
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SecurityAccessoryConfigurationIntent();
  type metadata accessor for SecurityAccessoryView(0);
  sub_10004599C(&qword_1000927F8, (void (*)(uint64_t))type metadata accessor for SecurityAccessoryView);
  sub_10004485C();
  sub_10006F388();
  if (qword_100091700 != -1) {
    swift_once();
  }
  uint64_t v28 = qword_1000927C8;
  uint64_t v29 = (void *)unk_1000927D0;
  unint64_t v14 = sub_1000448B0();
  unint64_t v15 = sub_100004A48();
  sub_10006EF68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v32 = sub_10006F518();
  uint64_t v33 = v16;
  uint64_t v28 = v4;
  uint64_t v29 = &type metadata for String;
  unint64_t v30 = v14;
  unint64_t v31 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_10006EF48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24[0] + 8))(v10, v8);
  sub_100004960(&qword_100091D18);
  uint64_t v18 = sub_10006F348();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100070910;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, enum case for WidgetFamily.accessoryCircular(_:), v18);
  uint64_t v28 = v8;
  uint64_t v29 = &type metadata for String;
  unint64_t v30 = OpaqueTypeConformance2;
  unint64_t v31 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v26;
  sub_10006EF58();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v22);
}

uint64_t sub_10004478C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SecurityAccessoryEntry();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100044958(a1, (uint64_t)v6);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)(a2 + *(int *)(type metadata accessor for SecurityAccessoryView(0) + 20)) = KeyPath;
  sub_100004960(&qword_100091DD8);
  swift_storeEnumTagMultiPayload();
  return sub_1000449C0((uint64_t)v6, a2);
}

unint64_t sub_10004485C()
{
  unint64_t result = qword_100092800;
  if (!qword_100092800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092800);
  }
  return result;
}

unint64_t sub_1000448B0()
{
  unint64_t result = qword_100092808;
  if (!qword_100092808)
  {
    sub_1000049A4(&qword_1000927E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092808);
  }
  return result;
}

uint64_t type metadata accessor for SecurityAccessoryEntry()
{
  uint64_t result = qword_100092868;
  if (!qword_100092868) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100044958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecurityAccessoryEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000449C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecurityAccessoryEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100044A24(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    uint64_t v14 = *((void *)v11 + 5);
    *((void *)v10 + 4) = *((void *)v11 + 4);
    *((void *)v10 + 5) = v14;
    v10[48] = v11[48];
    unint64_t v15 = (uint64_t *)((char *)a1 + v9);
    uint64_t v16 = (uint64_t *)((char *)a2 + v9);
    uint64_t v17 = v16[1];
    *unint64_t v15 = *v16;
    v15[1] = v17;
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100044B50(uint64_t a1)
{
  uint64_t v2 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100044BF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  uint64_t v13 = *(void *)(v10 + 40);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = v13;
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  uint64_t v14 = (void *)(a1 + v8);
  unint64_t v15 = (void *)(a2 + v8);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100044CCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  return a1;
}

uint64_t sub_100044E00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  long long v12 = *(_OWORD *)(v10 + 32);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = v12;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100044EA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100044F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044FA0);
}

uint64_t sub_100044FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100045064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100045078);
}

uint64_t sub_100045078(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10006EB88();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100045138()
{
  uint64_t result = sub_10006EB88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecurityAccessoryProvider()
{
  return &type metadata for SecurityAccessoryProvider;
}

uint64_t sub_1000451F0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000452E0(uint64_t a1)
{
  unint64_t result = sub_10004485C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100045308()
{
  return sub_10004599C(qword_1000928A8, (void (*)(uint64_t))type metadata accessor for SecurityAccessoryEntry);
}

uint64_t sub_100045350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a7;
  v8[3] = a8;
  type metadata accessor for SecurityAccessoryEntry();
  uint64_t v11 = swift_task_alloc();
  v8[4] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v8[5] = v12;
  void *v12 = v8;
  v12[1] = sub_100045430;
  return sub_100041538(v11, a5, a6);
}

uint64_t sub_100045430()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10004552C, 0, 0);
}

uint64_t sub_10004552C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_100045C24(v1);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000455A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a7;
  v8[3] = a8;
  uint64_t v11 = sub_100004960(&qword_1000928D0);
  v8[4] = v11;
  v8[5] = *(void *)(v11 - 8);
  uint64_t v12 = swift_task_alloc();
  v8[6] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v8[7] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1000456BC;
  return sub_100042750(v12, a5, a6);
}

uint64_t sub_1000456BC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000457B8, 0, 0);
}

uint64_t sub_1000457B8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100045854(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  unint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100019B04;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000928C0 + dword_1000928C0);
  return v14(a1, v6, v7, (uint64_t)v14, v8, v9, v11, v12);
}

uint64_t sub_10004599C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000459E8()
{
  uint64_t v1 = sub_10006F438();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100045ADC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  unint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100019B04;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000928F8 + dword_1000928F8);
  return v14(a1, v6, v7, (uint64_t)v14, v8, v9, v11, v12);
}

uint64_t sub_100045C24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecurityAccessoryEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for ThreeColumnDataRow()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ThreeColumnDataRow(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ThreeColumnDataRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for ThreeColumnDataRow(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ThreeColumnDataRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThreeColumnDataRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ThreeColumnDataRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecurityAccessoryData()
{
  return &type metadata for SecurityAccessoryData;
}

unint64_t sub_100045EE4()
{
  unint64_t result = qword_100092910;
  if (!qword_100092910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092910);
  }
  return result;
}

uint64_t sub_100045F38(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_10006FCE8(), v6 = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (v8 = sub_10006FCE8(), char v6 = 0, (v8 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v9 = sub_10006FCE8(), char v6 = 0, (v9 & 1) != 0))
      {
        char v6 = ((*(unsigned char *)(a1 + 48) & 1) == 0) ^ *(unsigned char *)(a2 + 48);
      }
    }
  }
  return v6 & 1;
}

unint64_t sub_100045FE8()
{
  unint64_t result = qword_100092920;
  if (!qword_100092920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092920);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SecurityAccessoryData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SecurityAccessoryData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100046198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecurityAccessoryData.CodingKeys()
{
  return &type metadata for SecurityAccessoryData.CodingKeys;
}

unint64_t sub_1000461D4()
{
  unint64_t result = qword_100092928;
  if (!qword_100092928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092928);
  }
  return result;
}

unint64_t sub_10004622C()
{
  unint64_t result = qword_100092930;
  if (!qword_100092930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092930);
  }
  return result;
}

unint64_t sub_100046284()
{
  unint64_t result = qword_100092938;
  if (!qword_100092938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092938);
  }
  return result;
}

uint64_t sub_1000462D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7453737574617473 && a2 == 0xEC000000676E6972 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6572756365537369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

ValueMetadata *type metadata accessor for SecurityCategoryWidget()
{
  return &type metadata for SecurityCategoryWidget;
}

uint64_t sub_1000464AC()
{
  return swift_getOpaqueTypeConformance2();
}

int *sub_1000464C8@<X0>(uint64_t a1@<X8>)
{
  if (__OFADD__(qword_10009A8B8, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_10009A8B8;
    v19[0] = 0x7974697275636553;
    v19[1] = 0xE900000000000020;
    v20._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v20);
    swift_bridgeObjectRelease();
    uint64_t v2 = 0x7974697275636553;
    unint64_t v1 = 0xE900000000000020;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v4 = sub_10006EC68();
  sub_100004B08(v4, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10006EC48();
  os_log_type_t v6 = sub_10006F818();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    sub_100022B5C(v2, v1, v19);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100022B5C(0xD000000000000010, 0x8000000100077A30, v19);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10006EB78();
  if (qword_100091708 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10009A8A8;
  uint64_t v8 = unk_10009A8B0;
  uint64_t v10 = qword_100091770;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_10009A9F8;
  swift_bridgeObjectRetain();
  sub_10006F408();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  unint64_t result = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v17 = (uint64_t *)(a1 + result[5]);
  uint64_t *v17 = v9;
  v17[1] = v8;
  *(void *)(a1 + result[6]) = v11;
  uint64_t v18 = (void *)(a1 + result[7]);
  *uint64_t v18 = v13;
  v18[1] = v15;
  return result;
}

uint64_t sub_1000467E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v7 = sub_10006F438();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_100091DE8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = qword_10009A8B8 + 1;
  if (__OFADD__(qword_10009A8B8, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = v9;
    uint64_t v33 = v13;
    ++qword_10009A8B8;
    uint64_t v36 = 0x7974697275636553;
    unint64_t v37 = 0xE900000000000020;
    uint64_t v35 = v14;
    v38._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v38);
    swift_bridgeObjectRelease();
    uint64_t v3 = v36;
    unint64_t v4 = v37;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v15 = sub_10006EC68();
  sub_100004B08(v15, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_10006EC48();
  os_log_type_t v17 = sub_10006F818();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v31 = a3;
    uint64_t v19 = v18;
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v29 = v7;
    unint64_t v30 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_100022B5C(v3, v4, &v36);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v35 = sub_100022B5C(0xD00000000000001BLL, 0x8000000100077A10, &v36);
    uint64_t v7 = v29;
    uint64_t v10 = v30;
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v31;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = v32;
  uint64_t v21 = sub_10006F6F8();
  uint64_t v22 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v33, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v23 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v24 = (v20 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = 0;
  *((void *)v25 + 3) = 0;
  *((void *)v25 + 4) = v34;
  *((void *)v25 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v25[v23], v10, v7);
  uint64_t v26 = (uint64_t *)&v25[v24];
  *uint64_t v26 = v3;
  v26[1] = v4;
  swift_retain();
  sub_10003A10C(v22, (uint64_t)&unk_100092A30, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_100046C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for ThreeColumnDataEntry();
  uint64_t v12 = swift_task_alloc();
  v8[4] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v8[5] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_100016AEC;
  return sub_100046CFC(v12, a6, a7, a8);
}

uint64_t sub_100046CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[19] = a3;
  v4[20] = a4;
  v4[17] = a1;
  v4[18] = a2;
  uint64_t v5 = sub_10006F348();
  v4[21] = v5;
  v4[22] = *(void *)(v5 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  sub_10006EC08();
  v4[25] = swift_task_alloc();
  sub_10006F4B8();
  v4[26] = swift_task_alloc();
  uint64_t v6 = sub_10006EB88();
  v4[27] = v6;
  v4[28] = *(void *)(v6 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  return _swift_task_switch(sub_100046E94, 0, 0);
}

uint64_t sub_100046E94()
{
  uint64_t v108 = v0;
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  unint64_t v1 = (void **)(qword_10009A778 + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome);
  swift_beginAccess();
  uint64_t v2 = *v1;
  v0[31] = *v1;
  uint64_t v3 = qword_1000916B8;
  id v4 = v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10006EC68();
  v0[32] = sub_100004B08(v5, (uint64_t)qword_10009A7A0);
  id v6 = v4;
  swift_bridgeObjectRetain_n();
  id v7 = v6;
  uint64_t v8 = sub_10006EC48();
  os_log_type_t v9 = sub_10006F818();
  BOOL v10 = os_log_type_enabled(v8, v9);
  unint64_t v11 = v0[20];
  if (v10)
  {
    id v103 = v7;
    uint64_t v12 = v0[19];
    uint64_t v13 = v2;
    uint64_t v14 = swift_slowAlloc();
    v107[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315650;
    swift_bridgeObjectRetain();
    v0[14] = sub_100022B5C(v12, v11, v107);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    v0[15] = sub_100022B5C(0xD00000000000001ALL, 0x80000001000779F0, v107);
    sub_10006F868();
    *(_WORD *)(v14 + 22) = 2080;
    uint64_t v15 = v13;
    if (v13)
    {
      id v7 = v103;
      id v16 = [v103 name];
      uint64_t v17 = sub_10006F4F8();
      unint64_t v19 = v18;
    }
    else
    {
      unint64_t v19 = 0xE300000000000000;
      uint64_t v17 = 7104878;
      id v7 = v103;
    }
    v0[16] = sub_100022B5C(v17, v19, v107);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v15;
    if (!v15) {
      goto LABEL_23;
    }
  }
  else
  {
    swift_bridgeObjectRelease_n();

    if (!v2) {
      goto LABEL_23;
    }
  }
  id v20 = v7;
  id v21 = [v20 currentUser];
  Swift::Bool v22 = HMHome.shouldShowNoAccessOutsideOfSchedule(forRestrictedUser:)((HMUser)v21);

  if (v22)
  {
    id v23 = v20;
    unint64_t v24 = sub_10006EC48();
    os_log_type_t v25 = sub_10006F818();
    if (os_log_type_enabled(v24, v25))
    {
      os_log_t log = v24;
      uint64_t v26 = v0[30];
      uint64_t v104 = (void (**)(uint64_t, uint64_t))v0[28];
      uint64_t v102 = v0[27];
      uint64_t v27 = swift_slowAlloc();
      id v101 = (void *)swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315650;
      v0[11] = sub_100022B5C(0xD00000000000001ALL, 0x80000001000779F0, v107);
      sub_10006F868();
      *(_WORD *)(v27 + 12) = 2112;
      v0[12] = v23;
      id v28 = v23;
      id v29 = v23;
      unint64_t v30 = v2;
      id v31 = v28;
      sub_10006F868();
      *id v101 = v30;
      id v23 = v29;

      *(_WORD *)(v27 + 22) = 2080;
      sub_10006EB68();
      sub_100049EFC((unint64_t *)&qword_100092160, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v32 = sub_10006FCC8();
      unint64_t v34 = v33;
      v104[1](v26, v102);
      v0[13] = sub_100022B5C(v32, v34, v107);
      sub_10006F868();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v25, "{%s} Displaying No Access for RG in home %@ because now %s is outside of allowed schedule.", (uint8_t *)v27, 0x20u);
      sub_100004960((uint64_t *)&unk_100092030);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_10006F408();
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    sub_10006EB78();
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v50 = sub_10006F518();
    uint64_t v52 = v51;
    if (qword_100091778 != -1) {
      swift_once();
    }
    uint64_t v53 = v0[17];
    uint64_t v54 = qword_10009AA00;
    uint64_t v55 = (int *)type metadata accessor for ThreeColumnDataEntry();
    id v56 = (uint64_t *)(v53 + v55[5]);
    *id v56 = v50;
    v56[1] = v52;
    *(void *)(v53 + v55[6]) = v54;
    uint64_t v57 = (void *)(v53 + v55[7]);
    *uint64_t v57 = v47;
    v57[1] = v49;
    swift_bridgeObjectRetain();

LABEL_41:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v100 = (uint64_t (*)(void))v0[1];
    return v100();
  }

  id v35 = v20;
  id v36 = [v35 currentUser];
  Swift::Bool v37 = HMHome.shouldShowNoAccessAwayFromHome(forRestrictedUser:)((HMUser)v36);

  if (v37)
  {
    id v38 = v35;
    uint64_t v39 = sub_10006EC48();
    os_log_type_t v40 = sub_10006F818();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v106 = (void *)swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315394;
      v0[9] = sub_100022B5C(0xD00000000000001ALL, 0x80000001000779F0, v107);
      sub_10006F868();
      *(_WORD *)(v41 + 12) = 2112;
      v0[10] = v38;
      id v42 = v38;
      id v43 = v38;
      id v44 = v2;
      id v45 = v42;
      sub_10006F868();
      *uint64_t v106 = v44;
      id v38 = v43;

      _os_log_impl((void *)&_mh_execute_header, v39, v40, "{%s} Displaying No Access for RG in home %@ because current RG user is away from home.", (uint8_t *)v41, 0x16u);
      sub_100004960((uint64_t *)&unk_100092030);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_10006F408();
    uint64_t v89 = v88;
    uint64_t v91 = v90;
    sub_10006EB78();
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v92 = sub_10006F518();
    uint64_t v94 = v93;
    if (qword_100091780 != -1) {
      swift_once();
    }
    uint64_t v95 = v0[17];
    uint64_t v96 = qword_10009AA08;
    long long v97 = (int *)type metadata accessor for ThreeColumnDataEntry();
    long long v98 = (uint64_t *)(v95 + v97[5]);
    *long long v98 = v92;
    v98[1] = v94;
    *(void *)(v95 + v97[6]) = v96;
    long long v99 = (void *)(v95 + v97[7]);
    *long long v99 = v89;
    v99[1] = v91;
    swift_bridgeObjectRetain();

    goto LABEL_41;
  }

LABEL_23:
  if (qword_100091740 != -1) {
    swift_once();
  }
  id v58 = v7;
  uint64_t v59 = swift_bridgeObjectRetain();
  unint64_t v60 = sub_100049A34(v59, v2);

  swift_bridgeObjectRelease();
  if (v60 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_10006FAC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v61)
  {
    sub_10006EB78();
    if (qword_100091708 != -1) {
      swift_once();
    }
    uint64_t v75 = v0[17];
    uint64_t v77 = qword_10009A8A8;
    uint64_t v76 = unk_10009A8B0;
    sub_100004960(&qword_100091CC0);
    uint64_t v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_100070910;
    swift_bridgeObjectRetain();
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v79 = sub_10006F518();
    *(void *)(v78 + 32) = 0xD000000000000018;
    *(void *)(v78 + 40) = 0x80000001000779B0;
    *(void *)(v78 + 48) = 0;
    *(void *)(v78 + 56) = 0xE000000000000000;
    *(void *)(v78 + 64) = v79;
    *(void *)(v78 + 72) = v80;
    *(unsigned char *)(v78 + 80) = 0;
    sub_10006F408();
    uint64_t v82 = v81;
    uint64_t v84 = v83;

    id v85 = (int *)type metadata accessor for ThreeColumnDataEntry();
    long long v86 = (uint64_t *)(v75 + v85[5]);
    *long long v86 = v77;
    v86[1] = v76;
    *(void *)(v75 + v85[6]) = v78;
    uint64_t v87 = (void *)(v75 + v85[7]);
    void *v87 = v82;
    v87[1] = v84;
    goto LABEL_41;
  }
  uint64_t v63 = v0[23];
  uint64_t v62 = v0[24];
  uint64_t v64 = (uint64_t)v2;
  uint64_t v65 = v0[21];
  uint64_t v66 = v0[22];
  sub_10006F418();
  (*(void (**)(uint64_t, void, uint64_t))(v66 + 104))(v63, enum case for WidgetFamily.systemSmall(_:), v65);
  sub_100049EFC(&qword_100091E18, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_10006F5F8();
  sub_10006F5F8();
  uint64_t v68 = v0[5];
  uint64_t v67 = v0[6];
  id v69 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v69(v63, v65);
  v69(v62, v65);
  if (v68 == v67) {
    uint64_t v70 = 5;
  }
  else {
    uint64_t v70 = 3;
  }
  id v71 = (void *)swift_task_alloc();
  v0[33] = v71;
  *id v71 = v0;
  v71[1] = sub_100047C2C;
  uint64_t v72 = v0[19];
  uint64_t v73 = v0[20];
  return sub_100059980(v64, v72, v73, v70);
}

uint64_t sub_100047C2C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 272) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100047D2C, 0, 0);
}

uint64_t sub_100047D2C()
{
  unint64_t v30 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_10006EC48();
  os_log_type_t v2 = sub_10006F818();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[19];
    unint64_t v3 = v0[20];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    v0[7] = sub_100022B5C(v4, v3, &v29);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10006F678();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[8] = sub_100022B5C(v6, v8, &v29);
    sub_10006F868();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "...{%s} securitySummaryRows are %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  sub_10006EB78();
  if (qword_100091708 != -1) {
    swift_once();
  }
  uint64_t v9 = v0[34];
  uint64_t v11 = qword_10009A8A8;
  uint64_t v10 = unk_10009A8B0;
  uint64_t v12 = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (!v12)
  {
    swift_bridgeObjectRelease();
    sub_100004960(&qword_100091CC0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100070910;
    sub_10006F4A8();
    sub_10006EBF8();
    uint64_t v13 = sub_10006F518();
    *(void *)(v9 + 32) = 0x6C69662E6B636F6CLL;
    *(void *)(v9 + 40) = 0xE90000000000006CLL;
    *(void *)(v9 + 48) = 0;
    *(void *)(v9 + 56) = 0xE000000000000000;
    *(void *)(v9 + 64) = v13;
    *(void *)(v9 + 72) = v14;
    *(unsigned char *)(v9 + 80) = 0;
  }
  uint64_t v15 = (void *)v0[31];
  uint64_t v17 = v0[28];
  uint64_t v16 = v0[29];
  uint64_t v18 = v0[27];
  uint64_t v19 = v0[17];
  sub_10006F408();
  uint64_t v21 = v20;
  uint64_t v23 = v22;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v19, v16, v18);
  unint64_t v24 = (int *)type metadata accessor for ThreeColumnDataEntry();
  os_log_type_t v25 = (uint64_t *)(v19 + v24[5]);
  uint64_t *v25 = v11;
  v25[1] = v10;
  *(void *)(v19 + v24[6]) = v9;
  uint64_t v26 = (void *)(v19 + v24[7]);
  *uint64_t v26 = v21;
  v26[1] = v23;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_100048110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v5 = sub_10006F438();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004960(&qword_100091DE8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = qword_10009A8B8 + 1;
  if (__OFADD__(qword_10009A8B8, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = v7;
    ++qword_10009A8B8;
    uint64_t v42 = 0x7974697275636553;
    unint64_t v43 = 0xE900000000000020;
    uint64_t v41 = v12;
    v44._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v44);
    swift_bridgeObjectRelease();
    unint64_t v3 = v43;
    uint64_t v40 = v42;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v13 = sub_10006EC68();
  uint64_t v14 = sub_100004B08(v13, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_10006EC48();
  os_log_type_t v16 = sub_10006F818();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v33[1] = v14;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = v5;
    uint64_t v42 = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v35 = a1;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_100022B5C(v40, v3, &v42);
    unint64_t v34 = v11;
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v41 = sub_100022B5C(0xD00000000000001BLL, 0x8000000100077990, &v42);
    uint64_t v11 = v34;
    a1 = v35;
    sub_10006F868();
    swift_arrayDestroy();
    uint64_t v5 = v36;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if ((sub_10006F428() & 1) == 0)
  {
    unint64_t v34 = v8;
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_10006EC48();
    os_log_type_t v21 = sub_10006F818();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v36 = v5;
      uint64_t v42 = v23;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v35 = a1;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_100022B5C(v40, v3, &v42);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v41 = sub_100022B5C(0xD000000000000027, 0x80000001000788E0, &v42);
      a1 = v35;
      sub_10006F868();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "{%s} notifying homed that '%s' is active", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      uint64_t v5 = v36;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v24 = [self defaultCenter];
    NSString v25 = sub_10006F4D8();
    [v24 postNotificationName:v25 object:0];

    unint64_t v8 = v34;
  }
  uint64_t v26 = sub_10006F6F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 1, 1, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v27 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v28 = (v37 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  uint64_t v30 = v38;
  *((void *)v29 + 4) = v39;
  *((void *)v29 + 5) = v30;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v29[v27], v8, v5);
  uint64_t v31 = &v29[v28];
  *(void *)uint64_t v31 = v40;
  *((void *)v31 + 1) = v3;
  swift_retain();
  sub_10003A10C((uint64_t)v11, (uint64_t)&unk_100092A18, (uint64_t)v29);
  return swift_release();
}

uint64_t sub_100048748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  uint64_t v9 = sub_10006EB88();
  v8[7] = v9;
  v8[8] = *(void *)(v9 - 8);
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  sub_10006F3C8();
  v8[11] = swift_task_alloc();
  uint64_t v10 = sub_100004960(&qword_100091E00);
  v8[12] = v10;
  v8[13] = *(void *)(v10 - 8);
  v8[14] = swift_task_alloc();
  return _swift_task_switch(sub_1000488AC, 0, 0);
}

uint64_t sub_1000488AC()
{
  sub_100004960(&qword_100091E08);
  uint64_t v1 = type metadata accessor for ThreeColumnDataEntry();
  v0[15] = v1;
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  v0[16] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_100070910;
  uint64_t v4 = v3 + v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000489D4;
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[4];
  return sub_100046CFC(v4, v8, v6, v7);
}

uint64_t sub_1000489D4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100048AD0, 0, 0);
}

uint64_t sub_100048AD0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[13];
  uint64_t v11 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  uint64_t v10 = (void (*)(uint64_t))v0[2];
  sub_10006EB78();
  sub_10006EB58();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v4, v6);
  sub_10006F3B8();
  v7(v3, v6);
  sub_100049EFC(qword_100091DB0, (void (*)(uint64_t))type metadata accessor for ThreeColumnDataEntry);
  sub_10006F448();
  v10(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100048C64()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006F4B8();
  __chkstk_darwin(v1 - 8);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t result = sub_10006F518();
  qword_10009A8A8 = result;
  unk_10009A8B0 = v3;
  return result;
}

uint64_t sub_100048D80()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004960(&qword_100091DC8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ThreeColumnCategoryView(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_100091DD0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100018CC4(v1, (uint64_t)v7);
  uint64_t v12 = (uint64_t *)&v7[*(int *)(v5 + 20)];
  uint64_t *v12 = swift_getKeyPath();
  sub_100004960(&qword_100091DD8);
  swift_storeEnumTagMultiPayload();
  sub_10006EAF8();
  uint64_t v13 = sub_100049EFC(&qword_100091DE0, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryView);
  sub_10006F0F8();
  sub_10001947C((uint64_t)v4);
  sub_10001994C((uint64_t)v7, type metadata accessor for ThreeColumnCategoryView);
  v15[0] = v5;
  v15[1] = v13;
  swift_getOpaqueTypeConformance2();
  sub_10006F188();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10004901C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10006EC08();
  __chkstk_darwin(v1 - 8);
  v24[1] = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100004960(&qword_100092940);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_100092948);
  v24[0] = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_100092950);
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SecurityCategoryWidgetView();
  sub_100049EFC(&qword_100092958, (void (*)(uint64_t))type metadata accessor for SecurityCategoryWidgetView);
  sub_1000495D4();
  sub_10006F3A8();
  if (qword_100091708 != -1) {
    swift_once();
  }
  uint64_t v28 = qword_10009A8A8;
  uint64_t v29 = (void *)unk_10009A8B0;
  unint64_t v14 = sub_100049628();
  unint64_t v15 = sub_100004A48();
  sub_10006EF68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v32 = sub_10006F518();
  uint64_t v33 = v16;
  uint64_t v28 = v4;
  uint64_t v29 = &type metadata for String;
  unint64_t v30 = v14;
  unint64_t v31 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_10006EF48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24[0] + 8))(v10, v8);
  sub_100004960(&qword_100091D18);
  uint64_t v18 = sub_10006F348();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100070910;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, enum case for WidgetFamily.accessoryRectangular(_:), v18);
  uint64_t v28 = v8;
  uint64_t v29 = &type metadata for String;
  unint64_t v30 = OpaqueTypeConformance2;
  unint64_t v31 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v26;
  sub_10006EF58();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v22);
}

uint64_t type metadata accessor for SecurityCategoryWidgetView()
{
  uint64_t result = qword_1000929C8;
  if (!qword_1000929C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000495D4()
{
  unint64_t result = qword_100092960;
  if (!qword_100092960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092960);
  }
  return result;
}

unint64_t sub_100049628()
{
  unint64_t result = qword_100092968;
  if (!qword_100092968)
  {
    sub_1000049A4(&qword_100092940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092968);
  }
  return result;
}

ValueMetadata *type metadata accessor for SecurityCategoryTimelineProvider()
{
  return &type metadata for SecurityCategoryTimelineProvider;
}

uint64_t sub_100049694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000496A8);
}

uint64_t sub_1000496A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100049714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100049728);
}

uint64_t sub_100049728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100049798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100049888()
{
  return sub_100049EFC(qword_100091DB0, (void (*)(uint64_t))type metadata accessor for ThreeColumnDataEntry);
}

uint64_t sub_1000498D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000498F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *unint64_t v14 = v2;
  v14[1] = sub_100019620;
  return sub_100048748(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_100049A34(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = _swiftEmptyArrayStorage;
  unint64_t v34 = _swiftEmptyArrayStorage;
  uint64_t v27 = *(void *)(a1 + 16);
  if (!v27) {
    return (uint64_t)v4;
  }
  uint64_t v26 = a1 + 32;
  uint64_t v24 = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v25 = a2;
  while (1)
  {
    uint64_t v8 = (void *)(v26 + 56 * v6);
    uint64_t v9 = v8[2];
    uint64_t v10 = v8[3];
    uint64_t v12 = v8[4];
    uint64_t v11 = v8[5];
    uint64_t v13 = v8[6];
    uint64_t v14 = v8[1];
    v33[0] = *v8;
    v33[1] = v14;
    void v33[2] = v9;
    v33[3] = v10;
    v33[4] = v12;
    v33[5] = v11;
    v33[6] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100004B40(v11);
    if (qword_1000916A0 != -1) {
      break;
    }
    if (a2) {
      goto LABEL_7;
    }
LABEL_3:
    unint64_t v7 = (unint64_t)v4;
LABEL_4:
    ++v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100004C3C(v11);
    sub_100023CA8(v7);
    a2 = v25;
    if (v6 == v27)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v34;
    }
  }
  swift_once();
  if (!a2) {
    goto LABEL_3;
  }
LABEL_7:
  uint64_t v29 = v11;
  id v15 = [a2 accessories:v24];
  sub_100034CCC();
  unint64_t v16 = sub_10006F668();

  uint64_t v32 = v4;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100004B40(v29);
    swift_bridgeObjectRetain();
    uint64_t v11 = v29;
    uint64_t v17 = sub_10006FAC8();
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = v29;
    sub_100004B40(v29);
    swift_bridgeObjectRetain();
  }
  if (!v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v4;
    uint64_t v28 = v4;
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100004C3C(v11);
    swift_bridgeObjectRelease();
    uint64_t v4 = v22;
    unint64_t v7 = (unint64_t)v28;
    goto LABEL_4;
  }
  uint64_t v18 = 4;
  while (1)
  {
    id v19 = (v16 & 0xC000000000000001) != 0 ? (id)sub_10006F9F8() : *(id *)(v16 + 8 * v18);
    unint64_t v20 = v19;
    uint64_t v21 = v18 - 3;
    if (__OFADD__(v18 - 4, 1)) {
      break;
    }
    id v31 = v19;
    sub_100020F90(&v31, (uint64_t)v33, &v30);
    if (v3) {
      goto LABEL_26;
    }
    uint64_t v3 = 0;

    sub_100023CA8((unint64_t)v30);
    ++v18;
    if (v21 == v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v32;
      uint64_t v22 = _swiftEmptyArrayStorage;
      uint64_t v11 = v29;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_26:
  swift_bridgeObjectRelease();

  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_100049DBC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_100019B04;
  return sub_100046C14(a1, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t sub_100049EFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100049F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[16] = a4;
  v5[17] = a5;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  uint64_t v6 = sub_10006EB88();
  v5[18] = v6;
  v5[19] = *(void *)(v6 - 8);
  v5[20] = swift_task_alloc();
  return _swift_task_switch(sub_10004A00C, 0, 0);
}

uint64_t sub_10004A00C()
{
  uint64_t v63 = v0;
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = sub_10006EC68();
  *(void *)(v0 + 168) = sub_100004B08(v2, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  id v3 = v1;
  uint64_t v4 = sub_10006EC48();
  os_log_type_t v5 = sub_10006F818();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = *(void *)(v0 + 136);
  uint64_t v8 = &LockScreenDataModel;
  if (v6)
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = *(void **)(v0 + 112);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    uint64_t v62 = v59;
    *(_DWORD *)uint64_t v11 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_100022B5C(v9, v7, &v62);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    *(void *)(v0 + 88) = sub_100022B5C(0xD00000000000001ELL, 0x8000000100078120, &v62);
    sub_10006F868();
    *(_WORD *)(v11 + 22) = 2080;
    id v12 = [v10 accessory];
    if (v12
      && (uint64_t v13 = v12, v14 = [v12 identifier], v13, v14))
    {
      uint64_t v15 = sub_10006F4F8();
      unint64_t v17 = v16;

      uint64_t v18 = v15;
      uint64_t v8 = &LockScreenDataModel;
    }
    else
    {
      unint64_t v17 = 0xE400000000000000;
      uint64_t v8 = &LockScreenDataModel;
      uint64_t v18 = 1819047278;
    }
    unint64_t v20 = *(void **)(v0 + 112);
    *(void *)(v0 + 96) = sub_100022B5C(v18, v17, &v62);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v19 = *(void **)(v0 + 112);
    swift_bridgeObjectRelease_n();
  }
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  id v21 = [v0 count:v59];
  uint64_t v22 = v21;
  if (v21)
  {
    id v23 = [v21 identifier];

    if (v23)
    {
      uint64_t v24 = sub_10006F4F8();
      uint64_t v22 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v22 = 0;
    }
  }
  else
  {
    uint64_t v24 = 0;
  }
  uint64_t v26 = sub_100026FB0(v24, (uint64_t)v22);
  *(void *)(v0 + 176) = v26;
  swift_bridgeObjectRelease();
  if (v26)
  {
    swift_bridgeObjectRetain_n();
    id v27 = v26;
    uint64_t v28 = sub_10006EC48();
    os_log_type_t v29 = sub_10006F818();
    BOOL v30 = os_log_type_enabled(v28, v29);
    unint64_t v31 = *(void *)(v0 + 136);
    if (v30)
    {
      uint64_t v32 = *(void *)(v0 + 128);
      uint64_t v33 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 64) = sub_100022B5C(v32, v31, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2080;
      id v34 = [v27 name];
      uint64_t v35 = sub_10006F4F8();
      unint64_t v37 = v36;

      *(void *)(v0 + 72) = sub_100022B5C(v35, v37, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v28, v29, "...{%s} found homeAccessory: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    uint64_t v61 = (uint64_t (*)(uint64_t))((char *)&dword_100093108 + dword_100093108);
    id v53 = v27;
    uint64_t v54 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v54;
    *uint64_t v54 = v0;
    v54[1] = sub_10004A834;
    return v61((uint64_t)v26);
  }
  else
  {
    uint64_t v38 = *(void **)(v0 + 112);
    swift_bridgeObjectRetain_n();
    id v39 = v38;
    uint64_t v40 = sub_10006EC48();
    os_log_type_t v41 = sub_10006F818();
    BOOL v42 = os_log_type_enabled(v40, v41);
    unint64_t v43 = *(void *)(v0 + 136);
    if (v42)
    {
      Swift::String v44 = v8;
      uint64_t v45 = *(void *)(v0 + 128);
      id v60 = *(id *)(v0 + 112);
      uint64_t v46 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_100022B5C(v45, v43, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2080;
      id v47 = [v60 (SEL)v44[366].count];
      if (v47
        && (uint64_t v48 = v47, v49 = [v47 identifier], v48, v49))
      {
        uint64_t v50 = sub_10006F4F8();
        unint64_t v52 = v51;
      }
      else
      {
        unint64_t v52 = 0xE400000000000000;
        uint64_t v50 = 1819047278;
      }
      uint64_t v57 = *(void **)(v0 + 112);
      *(void *)(v0 + 24) = sub_100022B5C(v50, v52, &v62);
      sub_10006F868();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v40, v41, "...{%s} did NOT find HMAccessory for %s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      id v56 = *(void **)(v0 + 112);
      swift_bridgeObjectRelease_n();
    }
    sub_10004AD80(*(void *)(v0 + 104));
    swift_task_dealloc();
    id v58 = *(uint64_t (**)(void))(v0 + 8);
    return v58();
  }
}

uint64_t sub_10004A834(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void **)(*v2 + 176);
  *(void *)(v3 + 192) = a1;
  *(unsigned char *)(v3 + 200) = a2;
  swift_task_dealloc();

  return _swift_task_switch(sub_10004A954, 0, 0);
}

uint64_t sub_10004A954()
{
  uint64_t v53 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_10006EC48();
  os_log_type_t v2 = sub_10006F818();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = *(unsigned char *)(v0 + 200);
    uint64_t v4 = *(void *)(v0 + 192);
    uint64_t v5 = *(void *)(v0 + 128);
    unint64_t v6 = *(void *)(v0 + 136);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315906;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_100022B5C(v5, v6, &v52);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2048;
    if (v3) {
      uint64_t v8 = -1;
    }
    else {
      uint64_t v8 = v4;
    }
    *(void *)(v0 + 40) = v8;
    sub_10006F868();
    *(_WORD *)(v7 + 22) = 2080;
    uint64_t v9 = sub_100060D9C(v4, v3 & 1);
    *(void *)(v0 + 48) = sub_100022B5C(v9, v10, &v52);
    sub_10006F868();
    swift_bridgeObjectRelease();
    BOOL v11 = v4 == 4 && (v3 & 1) == 0;
    *(_WORD *)(v7 + 32) = 2080;
    id v12 = "light.beacon.max.fill";
    if (!v11) {
      id v12 = "light.beacon.min.fill";
    }
    *(void *)(v0 + 56) = sub_100022B5C(0xD000000000000015, (unint64_t)(v12 - 32) | 0x8000000000000000, &v52);
    sub_10006F868();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "...{%s} got value: %ld, statusString: %s, iconName %s", (uint8_t *)v7, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = *(void *)(v0 + 192);
  id v14 = *(void **)(v0 + 176);
  uint64_t v15 = *(void **)(v0 + 112);
  int v16 = *(unsigned char *)(v0 + 200) & 1;
  sub_10006EB78();
  id v17 = [v14 name];
  uint64_t v18 = sub_10006F4F8();
  uint64_t v20 = v19;

  uint64_t v21 = sub_100060D9C(v13, v16);
  uint64_t v23 = v22;
  char v47 = sub_1000228F4(v13, v16, (uint64_t)&off_10008C630);
  id v24 = [v15 accessory];
  uint64_t v25 = v24;
  uint64_t v50 = v20;
  uint64_t v51 = v18;
  uint64_t v48 = v23;
  uint64_t v49 = v21;
  if (v24)
  {
    id v26 = [v24 identifier];

    if (v26)
    {
      uint64_t v25 = (void *)sub_10006F4F8();
      uint64_t v28 = v27;

      goto LABEL_17;
    }
    uint64_t v25 = 0;
  }
  uint64_t v28 = 0;
LABEL_17:
  if (v13 == 4 && v16 == 0) {
    BOOL v30 = "light.beacon.max.fill";
  }
  else {
    BOOL v30 = "light.beacon.min.fill";
  }
  unint64_t v31 = (unint64_t)(v30 - 32) | 0x8000000000000000;
  uint64_t v32 = *(void **)(v0 + 176);
  uint64_t v34 = *(void *)(v0 + 152);
  uint64_t v33 = *(void *)(v0 + 160);
  uint64_t v35 = *(void *)(v0 + 144);
  uint64_t v36 = *(void *)(v0 + 104);
  sub_10006F408();
  uint64_t v38 = v37;
  uint64_t v40 = v39;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v36, v33, v35);
  os_log_type_t v41 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v42 = v36 + v41[5];
  *(void *)uint64_t v42 = v51;
  *(void *)(v42 + 8) = v50;
  *(void *)(v42 + 16) = 0xD000000000000015;
  *(void *)(v42 + 24) = v31;
  *(void *)(v42 + 32) = v49;
  *(void *)(v42 + 40) = v48;
  *(unsigned char *)(v42 + 48) = v47 & 1;
  unint64_t v43 = (void *)(v36 + v41[6]);
  *unint64_t v43 = v25;
  v43[1] = v28;
  Swift::String v44 = (void *)(v36 + v41[7]);
  *Swift::String v44 = v38;
  v44[1] = v40;
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

int *sub_10004AD80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10006EC08();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_10006EB88();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006EB78();
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v8 = sub_10006F518();
  uint64_t v10 = v9;
  sub_10006F408();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
  uint64_t result = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v16 = a1 + result[5];
  *(void *)uint64_t v16 = v8;
  *(void *)(v16 + 8) = v10;
  *(void *)(v16 + 16) = 0xD000000000000015;
  *(void *)(v16 + 24) = 0x80000001000776B0;
  *(void *)(v16 + 32) = 0x9380E29380E2;
  *(void *)(v16 + 40) = 0xA600000000000000;
  *(unsigned char *)(v16 + 48) = 0;
  id v17 = (void *)(a1 + result[6]);
  void *v17 = 0;
  v17[1] = 0;
  uint64_t v18 = (void *)(a1 + result[7]);
  *uint64_t v18 = v12;
  v18[1] = v14;
  return result;
}

uint64_t *sub_10004AFB8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SingleGaugeEntry(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[24] = v10[24];
    *((void *)v9 + 2) = *((void *)v10 + 2);
    uint64_t v11 = *((void *)v10 + 5);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((void *)v9 + 5) = v11;
    uint64_t v12 = *((void *)v10 + 7);
    *((void *)v9 + 6) = *((void *)v10 + 6);
    *((void *)v9 + 7) = v12;
    v9[64] = v10[64];
    uint64_t v13 = v6[6];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t type metadata accessor for SingleGaugeEntry(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092B28);
}

uint64_t sub_10004B118(uint64_t a1)
{
  uint64_t v2 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for SingleGaugeEntry(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10004B1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(void *)(v7 + 16) = *(void *)(a2 + v6 + 16);
  *(unsigned char *)(v7 + 24) = *(unsigned char *)(a2 + v6 + 24);
  uint64_t v10 = *(void *)(a2 + v6 + 32);
  uint64_t v9 = *(void *)(a2 + v6 + 40);
  *(void *)(v7 + 32) = v10;
  *(void *)(v7 + 40) = v9;
  uint64_t v11 = *(void *)(v8 + 56);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(void *)(v7 + 56) = v11;
  *(unsigned char *)(v7 + 64) = *(unsigned char *)(v8 + 64);
  uint64_t v12 = v5[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10004B2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  *(void *)(v7 + 8) = *(void *)(a2 + v6 + 8);
  uint64_t v9 = *(void *)(a2 + v6 + 16);
  *(unsigned char *)(v7 + 24) = *(unsigned char *)(v8 + 24);
  *(void *)(v7 + 16) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(void *)(v7 + 56) = *(void *)(v8 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 64) = *(unsigned char *)(v8 + 64);
  uint64_t v10 = v5[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = v5[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  return a1;
}

uint64_t sub_10004B3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  long long v9 = *(_OWORD *)(v8 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(unsigned char *)(v7 + 64) = *(unsigned char *)(v8 + 64);
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  return a1;
}

uint64_t sub_10004B484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(unsigned char *)(v7 + 24) = *(unsigned char *)(a2 + v6 + 24);
  *(void *)(v7 + 16) = *(void *)(a2 + v6 + 16);
  uint64_t v9 = *(void *)(a2 + v6 + 40);
  *(void *)(v7 + 32) = *(void *)(a2 + v6 + 32);
  *(void *)(v7 + 40) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v8 + 56);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(void *)(v7 + 56) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 64) = *(unsigned char *)(v8 + 64);
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  return a1;
}

uint64_t sub_10004B578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004B58C);
}

uint64_t sub_10004B58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleGaugeEntry(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10004B5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004B60C);
}

uint64_t sub_10004B60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleGaugeEntry(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SingleClimateGaugeWidgetView(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092A98);
}

uint64_t sub_10004B69C()
{
  uint64_t result = type metadata accessor for SingleGaugeEntry(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10004B728(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((void *)v10 + 2) = *((void *)v11 + 2);
    v10[24] = v11[24];
    uint64_t v12 = *((void *)v11 + 5);
    *((void *)v10 + 4) = *((void *)v11 + 4);
    *((void *)v10 + 5) = v12;
    uint64_t v13 = *((void *)v11 + 7);
    *((void *)v10 + 6) = *((void *)v11 + 6);
    *((void *)v10 + 7) = v13;
    v10[64] = v11[64];
    uint64_t v14 = (uint64_t *)((char *)a1 + v9);
    uint64_t v15 = (uint64_t *)((char *)a2 + v9);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10004B85C(uint64_t a1)
{
  uint64_t v2 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10004B8F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(unsigned char *)(v9 + 24) = *(unsigned char *)(v10 + 24);
  uint64_t v11 = *(void *)(v10 + 40);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = v11;
  uint64_t v12 = *(void *)(v10 + 56);
  *(void *)(v9 + 48) = *(void *)(v10 + 48);
  *(void *)(v9 + 56) = v12;
  *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
  uint64_t v13 = (void *)(a1 + v8);
  uint64_t v14 = (void *)(a2 + v8);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10004B9D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  uint64_t v10 = *(void *)(a2 + v7 + 16);
  *(unsigned char *)(v8 + 24) = *(unsigned char *)(v9 + 24);
  *(void *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  return a1;
}

uint64_t sub_10004BB0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10004BBB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(unsigned char *)(v8 + 24) = *(unsigned char *)(a2 + v7 + 24);
  uint64_t v10 = *(void *)(a2 + v7 + 40);
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  *(void *)(v8 + 40) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10004BCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004BCB4);
}

uint64_t sub_10004BCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 40);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10004BD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004BD8C);
}

uint64_t sub_10004BD8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10006EB88();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 40) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10004BE4C()
{
  uint64_t result = sub_10006EB88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

int *sub_10004BEF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = &unk_10009A000;
  if (__OFADD__(qword_10009A8D0, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = 0xD000000000000010;
    ++qword_10009A8D0;
    sub_10006F9D8(23);
    swift_bridgeObjectRelease();
    v17[0] = 0xD000000000000015;
    v17[1] = 0x8000000100078BD0;
    v18._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v18);
    swift_bridgeObjectRelease();
    uint64_t v1 = 0xD000000000000015;
    uint64_t v4 = (void *)0x8000000100078BD0;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v5 = sub_10006EC68();
  sub_100004B08(v5, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_10006EC48();
  os_log_type_t v7 = sub_10006F818();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    sub_100022B5C(v1, (unint64_t)v4, v17);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_100022B5C(0xD000000000000010, 0x8000000100077A30, v17);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10006EB78();
  sub_10006F408();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t result = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v14 = a1 + result[5];
  *(_OWORD *)uint64_t v14 = xmmword_100072D10;
  *(void *)(v14 + 16) = 0x404E000000000000;
  *(unsigned char *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = 12342;
  *(void *)(v14 + 40) = 0xE200000000000000;
  strcpy((char *)(v14 + 48), "humidity.fill");
  *(_WORD *)(v14 + 62) = -4864;
  *(unsigned char *)(v14 + 64) = 1;
  uint64_t v15 = (void *)(a1 + result[6]);
  *uint64_t v15 = v2 + 20;
  v15[1] = 0x8000000100074C80;
  uint64_t v16 = (void *)(a1 + result[7]);
  void *v16 = v10;
  v16[1] = v12;
  return result;
}

uint64_t sub_10004C21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return _swift_task_switch(sub_10004C240, 0, 0);
}

uint64_t sub_10004C240()
{
  uint64_t v14 = v1;
  unint64_t v2 = &unk_10009A000;
  if (__OFADD__(qword_10009A8D0, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_10009A8D0;
    sub_10006F9D8(23);
    swift_bridgeObjectRelease();
    uint64_t v12 = 0xD000000000000015;
    unint64_t v13 = 0x8000000100078BD0;
    v1[2] = qword_10009A8D0;
    v16._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v16);
    swift_bridgeObjectRelease();
    uint64_t v0 = v12;
    unint64_t v2 = (void *)v13;
    v1[8] = v13;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v3 = sub_10006EC68();
  sub_100004B08(v3, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_10006EC48();
  os_log_type_t v5 = sub_10006F818();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v1[3] = sub_100022B5C(v0, (unint64_t)v2, &v12);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    v1[4] = sub_100022B5C(0xD000000000000011, 0x80000001000788C0, &v12);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  os_log_type_t v7 = (void *)swift_task_alloc();
  v1[9] = v7;
  *os_log_type_t v7 = v1;
  v7[1] = sub_10004C534;
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[5];
  return sub_10004C644(v10, v8, v9, v0, (uint64_t)v2);
}

uint64_t sub_10004C534()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10004C644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  uint64_t v6 = sub_10006EB88();
  v5[24] = v6;
  v5[25] = *(void *)(v6 - 8);
  v5[26] = swift_task_alloc();
  return _swift_task_switch(sub_10004C70C, 0, 0);
}

uint64_t sub_10004C70C()
{
  uint64_t v25 = v0;
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = sub_10006EC68();
  v0[27] = sub_100004B08(v2, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  id v3 = v1;
  uint64_t v4 = sub_10006EC48();
  os_log_type_t v5 = sub_10006F818();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = v0[23];
  if (v6)
  {
    uint64_t v8 = v0[22];
    uint64_t v23 = (void *)v0[20];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315650;
    swift_bridgeObjectRetain();
    v0[16] = sub_100022B5C(v8, v7, &v24);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    v0[17] = sub_100022B5C(0xD00000000000001ELL, 0x8000000100078120, &v24);
    sub_10006F868();
    *(_WORD *)(v9 + 22) = 2080;
    id v10 = v23;
    id v11 = [v10 description];
    uint64_t v12 = sub_10006F4F8();
    unint64_t v14 = v13;

    v0[18] = sub_100022B5C(v12, v14, &v24);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v15 = (void *)v0[20];
    swift_bridgeObjectRelease_n();
  }
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  Swift::String v16 = (void **)(qword_10009A778 + OBJC_IVAR____TtC20HomeWidgetLockScreen19LockScreenDataModel_currentHome);
  swift_beginAccess();
  uint64_t v17 = *v16;
  v0[28] = *v16;
  id v18 = v17;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[29] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_10004CAA4;
  uint64_t v20 = v0[23];
  uint64_t v21 = v0[20];
  v19[33] = v0[22];
  v19[34] = v20;
  v19[31] = v21;
  v19[32] = v17;
  v19[30] = v0 + 2;
  return _swift_task_switch(sub_10004D5AC, 0, 0);
}

uint64_t sub_10004CAA4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10004CBA0, 0, 0);
}

uint64_t sub_10004CBA0()
{
  uint64_t v33 = v0;
  swift_bridgeObjectRetain();
  sub_10004FDFC(v0 + 16);
  swift_bridgeObjectRetain();
  sub_10004FDFC(v0 + 16);
  uint64_t v1 = sub_10006EC48();
  os_log_type_t v2 = sub_10006F818();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = *(void *)(v0 + 176);
    unint64_t v3 = *(void *)(v0 + 184);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 112) = sub_100022B5C(v4, v3, &v32);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2048;
    double v6 = *(double *)(v0 + 32);
    if (*(unsigned char *)(v0 + 40)) {
      double v6 = -1.0;
    }
    *(double *)(v0 + 120) = v6;
    sub_10006F868();
    sub_10004FE34(v0 + 16);
    sub_10004FE34(v0 + 16);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "...{%s} has currentValue: '%f'", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_10004FE34(v0 + 16);
    sub_10004FE34(v0 + 16);
  }

  unint64_t v7 = *(void **)(v0 + 160);
  sub_10006EB78();
  id v8 = [v7 climateType];
  if (v8 && (v9 = v8, id v10 = [v8 identifier], v9, v10))
  {
    uint64_t v11 = sub_10006F4F8();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  unint64_t v14 = *(void **)(v0 + 224);
  uint64_t v16 = *(void *)(v0 + 200);
  uint64_t v15 = *(void *)(v0 + 208);
  uint64_t v17 = *(void *)(v0 + 192);
  uint64_t v18 = *(void *)(v0 + 152);
  sub_10006F408();
  uint64_t v20 = v19;
  uint64_t v22 = v21;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v18, v15, v17);
  uint64_t v23 = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v24 = v18 + v23[5];
  *(_OWORD *)uint64_t v24 = *(_OWORD *)(v0 + 16);
  long long v25 = *(_OWORD *)(v0 + 32);
  long long v26 = *(_OWORD *)(v0 + 48);
  long long v27 = *(_OWORD *)(v0 + 64);
  *(unsigned char *)(v24 + 64) = *(unsigned char *)(v0 + 80);
  *(_OWORD *)(v24 + 32) = v26;
  *(_OWORD *)(v24 + 48) = v27;
  *(_OWORD *)(v24 + 16) = v25;
  uint64_t v28 = (uint64_t *)(v18 + v23[6]);
  *uint64_t v28 = v11;
  v28[1] = v13;
  os_log_type_t v29 = (void *)(v18 + v23[7]);
  void *v29 = v20;
  v29[1] = v22;
  swift_task_dealloc();
  BOOL v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_10004CEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = sub_10006EB88();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  sub_10006F3C8();
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_10004CFA4, 0, 0);
}

uint64_t sub_10004CFA4()
{
  uint64_t v17 = v1;
  os_log_type_t v2 = &unk_10009A000;
  if (__OFADD__(qword_10009A8D0, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_10009A8D0;
    sub_10006F9D8(23);
    swift_bridgeObjectRelease();
    uint64_t v15 = 0xD000000000000015;
    unint64_t v16 = 0x8000000100078BD0;
    v1[2] = qword_10009A8D0;
    v19._uint64_t countAndFlagsBits = sub_10006FCC8();
    sub_10006F558(v19);
    swift_bridgeObjectRelease();
    uint64_t v0 = v15;
    os_log_type_t v2 = (void *)v16;
    v1[13] = v16;
    if (qword_1000916B8 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v3 = sub_10006EC68();
  sub_100004B08(v3, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_10006EC48();
  os_log_type_t v5 = sub_10006F818();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v1[3] = sub_100022B5C(v0, (unint64_t)v2, &v15);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    v1[4] = sub_100022B5C(0xD000000000000011, 0x80000001000787F0, &v15);
    sub_10006F868();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_100004960(&qword_100092BE0);
  uint64_t v7 = type metadata accessor for SingleGaugeEntry(0);
  v1[14] = v7;
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = swift_allocObject();
  v1[15] = v9;
  *(_OWORD *)(v9 + 16) = xmmword_100070910;
  uint64_t v10 = v9 + v8;
  uint64_t v11 = (void *)swift_task_alloc();
  v1[16] = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_10004D324;
  uint64_t v12 = v1[6];
  uint64_t v13 = v1[7];
  return sub_10004C644(v10, v12, v13, v0, (uint64_t)v2);
}

uint64_t sub_10004D324()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10004D43C, 0, 0);
}

uint64_t sub_10004D43C()
{
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  sub_10006EB68();
  sub_10006EB58();
  os_log_type_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  sub_10006F3B8();
  v5(v1, v4);
  sub_10004F6BC(qword_100092BA8, (void (*)(uint64_t))type metadata accessor for SingleGaugeEntry);
  sub_10006F448();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10004D584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[33] = a4;
  v5[34] = a5;
  v5[31] = a2;
  v5[32] = a3;
  v5[30] = a1;
  return _swift_task_switch(sub_10004D5AC, 0, 0);
}

uint64_t sub_10004D5AC()
{
  uint64_t v23 = v0;
  id v1 = [*(id *)(v0 + 248) climateType];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 identifier];

    if (v3)
    {
      sub_10006F4F8();
    }
  }
  int v4 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  switch(v4)
  {
    case 4:
      uint64_t v5 = v0 + 16;
      uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000917E8 + dword_1000917E8);
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v6;
      *uint64_t v6 = v0;
      uint64_t v7 = sub_10004DCA4;
      goto LABEL_10;
    case 45:
      uint64_t v5 = v0 + 88;
      uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100093178 + dword_100093178);
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 288) = v6;
      *uint64_t v6 = v0;
      uint64_t v7 = sub_10004DB30;
      goto LABEL_10;
    case 22:
      uint64_t v5 = v0 + 160;
      uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000922D8 + dword_1000922D8);
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 280) = v6;
      *uint64_t v6 = v0;
      uint64_t v7 = sub_10004D9BC;
LABEL_10:
      v6[1] = v7;
      uint64_t v8 = *(void *)(v0 + 264);
      uint64_t v9 = *(void *)(v0 + 272);
      uint64_t v10 = *(void *)(v0 + 256);
      return v21(v5, v10, v8, v9);
  }
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10006EC68();
  sub_100004B08(v12, (uint64_t)qword_10009A7A0);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_10006EC48();
  os_log_type_t v14 = sub_10006F818();
  BOOL v15 = os_log_type_enabled(v13, v14);
  unint64_t v16 = *(void *)(v0 + 272);
  if (v15)
  {
    uint64_t v17 = *(void *)(v0 + 264);
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 232) = sub_100022B5C(v17, v16, &v22);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "...{%s} ERROR: didn't recognize sensor accessory type", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v19 = *(void *)(v0 + 240);
  *(_OWORD *)uint64_t v19 = xmmword_100072D10;
  *(void *)(v19 + 16) = 0x4049000000000000;
  *(unsigned char *)(v19 + 24) = 0;
  *(void *)(v19 + 32) = 0x9380E29380E2;
  *(void *)(v19 + 40) = 0xA600000000000000;
  *(void *)(v19 + 48) = 0xD00000000000001DLL;
  *(void *)(v19 + 56) = 0x8000000100078BF0;
  *(unsigned char *)(v19 + 64) = 0;
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_10004D9BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  char v3 = *(unsigned char *)(v1 + 224);
  uint64_t v4 = *(void *)(v1 + 208);
  uint64_t v5 = *(void *)(v1 + 216);
  long long v6 = *(_OWORD *)(v1 + 192);
  uint64_t v7 = *(void *)(v1 + 176);
  char v8 = *(unsigned char *)(v1 + 184);
  uint64_t v9 = *(void *)(v1 + 240);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(v1 + 160);
  *(void *)(v9 + 16) = v7;
  *(unsigned char *)(v9 + 24) = v8;
  *(_OWORD *)(v9 + 32) = v6;
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v5;
  *(unsigned char *)(v9 + 64) = v3;
  uint64_t v10 = *(uint64_t (**)(void))(v2 + 8);
  return v10();
}

uint64_t sub_10004DB30()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  char v3 = *(unsigned char *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  long long v6 = *(_OWORD *)(v1 + 120);
  uint64_t v7 = *(void *)(v1 + 104);
  char v8 = *(unsigned char *)(v1 + 112);
  uint64_t v9 = *(void *)(v1 + 240);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(v1 + 88);
  *(void *)(v9 + 16) = v7;
  *(unsigned char *)(v9 + 24) = v8;
  *(_OWORD *)(v9 + 32) = v6;
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v5;
  *(unsigned char *)(v9 + 64) = v3;
  uint64_t v10 = *(uint64_t (**)(void))(v2 + 8);
  return v10();
}

uint64_t sub_10004DCA4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  char v3 = *(unsigned char *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  long long v6 = *(_OWORD *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 240);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(v1 + 16);
  *(void *)(v9 + 16) = v7;
  *(unsigned char *)(v9 + 24) = v8;
  *(_OWORD *)(v9 + 32) = v6;
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v5;
  *(unsigned char *)(v9 + 64) = v3;
  uint64_t v10 = *(uint64_t (**)(void))(v2 + 8);
  return v10();
}

uint64_t sub_10004DE18()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006F4B8();
  __chkstk_darwin(v1 - 8);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t result = sub_10006F518();
  qword_10009A8C0 = result;
  *(void *)algn_10009A8C8 = v3;
  return result;
}

uint64_t sub_10004DF38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10004DF78(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_10008E4F0, (uint64_t)&unk_100092C00);
}

uint64_t sub_10004DF58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10004DF78(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_10008E4C8, (uint64_t)&unk_100092BC8);
}

uint64_t sub_10004DF78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a3;
  uint64_t v30 = a8;
  v28[1] = a7;
  uint64_t v11 = sub_10006F438();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  BOOL v15 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v28 - v16;
  uint64_t v18 = sub_100004960(&qword_100091DE8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10006F6F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, a2, v11);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v22(v15, v17, v11);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = 0;
  *((void *)v24 + 3) = 0;
  *((void *)v24 + 4) = a1;
  v22(&v24[v23], v15, v11);
  long long v25 = &v24[(v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)long long v25 = v29;
  *((void *)v25 + 1) = a4;
  id v26 = a1;
  swift_retain();
  sub_10003A10C((uint64_t)v20, v30, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_10004E1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100019B04;
  return IntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10004E258()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004E274()
{
  uint64_t v1 = sub_10006EC08();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10006F4B8();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = v0 + *(int *)(type metadata accessor for SingleGaugeEntry(0) + 20);
  sub_100004A48();
  if ((sub_10006F888() & 1) != 0
    || (sub_10006F888() & 1) != 0
    || (sub_10006F888() & 1) != 0
    || (sub_10006F888() & 1) == 0)
  {
    sub_10006F4C8();
    sub_10006EBF8();
    sub_10006F518();
    sub_100004960(&qword_1000925C0);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_100070910;
    uint64_t v6 = *(void *)(v3 + 32);
    uint64_t v5 = *(void *)(v3 + 40);
    *(void *)(v4 + 56) = &type metadata for String;
    *(void *)(v4 + 64) = sub_10004F2A0();
    *(void *)(v4 + 32) = v6;
    *(void *)(v4 + 40) = v5;
    swift_bridgeObjectRetain();
    sub_10006F4E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10006F4A8();
    sub_10006EBF8();
    sub_10006F518();
  }
  return sub_10006F0E8();
}

uint64_t sub_10004E5F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = sub_10006EFD8();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  __chkstk_darwin(v3);
  uint64_t v35 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004960(&qword_100091DC8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SingleGaugeEntry(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SingleClimateGaugeView(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004960(&qword_100092B68);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100004960(&qword_100092B70);
  uint64_t v34 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100004960(&qword_100092B78);
  __chkstk_darwin(v33);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004EB1C(v2, (uint64_t)v10);
  *(void *)&v13[*(int *)(v11 + 20)] = swift_getKeyPath();
  sub_100004960(&qword_100091DD8);
  swift_storeEnumTagMultiPayload();
  sub_10004F23C((uint64_t)v10, (uint64_t)v13);
  sub_10006EAF8();
  uint64_t v22 = sub_10004F6BC(&qword_100092B80, (void (*)(uint64_t))type metadata accessor for SingleClimateGaugeView);
  sub_10006F0F8();
  sub_100039078((uint64_t)v7, &qword_100091DC8);
  sub_10004FFB8((uint64_t)v13, type metadata accessor for SingleClimateGaugeView);
  unint64_t v23 = v35;
  sub_10006EFB8();
  uint64_t v39 = v11;
  uint64_t v40 = v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_10006F178();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v37);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v25 = sub_10004E274();
  uint64_t v27 = v26;
  LOBYTE(v10) = v28 & 1;
  uint64_t v39 = v14;
  uint64_t v40 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v29 = v32;
  sub_10006F158();
  sub_100038EA0(v25, v27, (char)v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v29);
  sub_10006ED78();
  return sub_100039078((uint64_t)v21, &qword_100092B78);
}

uint64_t sub_10004EB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleGaugeEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004EB80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = sub_10006EC08();
  __chkstk_darwin(v1 - 8);
  uint64_t v30 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100004960(&qword_1000917C8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100004960(&qword_1000917C0);
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100004960(&qword_1000917B8);
  uint64_t v32 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004960(&qword_1000917B0);
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClimateSensorTypeConfigurationIntent();
  type metadata accessor for SingleClimateGaugeWidgetView(0);
  sub_10004F6BC(&qword_100092B98, (void (*)(uint64_t))type metadata accessor for SingleClimateGaugeWidgetView);
  sub_10004F720();
  sub_10006F388();
  if (qword_100091710 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_10009A8C0;
  uint64_t v38 = *(void **)algn_10009A8C8;
  unint64_t v15 = sub_1000049EC();
  unint64_t v16 = sub_100004A48();
  sub_10006EF68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t v41 = sub_10006F518();
  uint64_t v42 = v17;
  uint64_t v37 = v4;
  uint64_t v38 = &type metadata for String;
  unint64_t v39 = v15;
  unint64_t v40 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v19 = v31;
  sub_10006EF48();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v19);
  sub_100004960(&qword_100091D18);
  uint64_t v20 = sub_10006F348();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100070910;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v23 + v22, enum case for WidgetFamily.accessoryCircular(_:), v20);
  uint64_t v37 = v19;
  uint64_t v38 = &type metadata for String;
  unint64_t v39 = OpaqueTypeConformance2;
  unint64_t v40 = v16;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = v35;
  sub_10006EF58();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v25);
  uint64_t v37 = v25;
  uint64_t v38 = (void *)v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v26 = v34;
  sub_10006EF78();
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v14, v26);
}

uint64_t sub_10004F1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10004EB1C(a1, a2);
}

uint64_t sub_10004F1F4()
{
  return sub_10006EE38();
}

uint64_t sub_10004F218()
{
  return sub_10006EE38();
}

uint64_t sub_10004F23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleGaugeEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10004F2A0()
{
  unint64_t result = qword_100092B88;
  if (!qword_100092B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092B88);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimateGaugeWidget()
{
  return &type metadata for ClimateGaugeWidget;
}

uint64_t destroy for SingleGaugeData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SingleGaugeData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SingleGaugeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for SingleGaugeData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SingleGaugeData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleGaugeData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleGaugeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleGaugeData()
{
  return &type metadata for SingleGaugeData;
}

unint64_t sub_10004F574()
{
  unint64_t result = qword_100092B90;
  if (!qword_100092B90)
  {
    sub_1000049A4(&qword_100092B78);
    sub_1000049A4(&qword_100092B68);
    type metadata accessor for SingleClimateGaugeView(255);
    sub_10004F6BC(&qword_100092B80, (void (*)(uint64_t))type metadata accessor for SingleClimateGaugeView);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10004F6BC(&qword_100091E40, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092B90);
  }
  return result;
}

uint64_t sub_10004F6BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004F704()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10004F720()
{
  unint64_t result = qword_100092BA0;
  if (!qword_100092BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092BA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleClimateGaugeProvider()
{
  return &type metadata for SingleClimateGaugeProvider;
}

uint64_t sub_10004F784()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10004F8B0(uint64_t a1)
{
  unint64_t result = sub_10004F720();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10004F8D8()
{
  return sub_10004F6BC(qword_100092BA8, (void (*)(uint64_t))type metadata accessor for SingleGaugeEntry);
}

uint64_t sub_10004F920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a7;
  v8[3] = a8;
  type metadata accessor for SingleGaugeEntry(0);
  uint64_t v11 = swift_task_alloc();
  v8[4] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v8[5] = v12;
  void *v12 = v8;
  v12[1] = sub_10004FA10;
  v12[6] = a5;
  v12[7] = a6;
  v12[5] = v11;
  return _swift_task_switch(sub_10004C240, 0, 0);
}

uint64_t sub_10004FA10()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10004FB0C, 0, 0);
}

uint64_t sub_10004FB0C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_10004FFB8(v1, type metadata accessor for SingleGaugeEntry);
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10004FB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a7;
  v8[3] = a8;
  uint64_t v11 = sub_100004960(&qword_100092BD0);
  v8[4] = v11;
  v8[5] = *(void *)(v11 - 8);
  uint64_t v12 = swift_task_alloc();
  v8[6] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v8[7] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1000456BC;
  return sub_10004CEA4(v12, a5, a6);
}

uint64_t sub_10004FCB4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100019620;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100092BC0 + dword_100092BC0);
  return v14(a1, v6, v7, (uint64_t)v14, v8, v9, v11, v12);
}

uint64_t sub_10004FDFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004FE34(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004FE70(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10006F438() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100019B04;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100092BF8 + dword_100092BF8);
  return v14(a1, v6, v7, (uint64_t)v14, v8, v9, v11, v12);
}

uint64_t sub_10004FFB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *AppPreferences.homeSensingDefaultsChangedNotification.unsafeMutableAddressor()
{
  return &static AppPreferences.homeSensingDefaultsChangedNotification;
}

uint64_t sub_100050024(void *a1)
{
  uint64_t v2 = sub_10006EBD8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v78 - v7;
  uint64_t v9 = sub_100004960(&qword_100092C10);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v78 - v13;
  id v15 = [a1 homes];
  sub_1000526B4();
  uint64_t v16 = sub_10006F668();

  uint64_t v82 = v8;
  if (v16 < 0 || (v16 & 0x4000000000000000) != 0)
  {
    unint64_t v71 = swift_bridgeObjectRetain();
    uint64_t v17 = (uint64_t)sub_10005111C(v71);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = (void *)v3;
  uint64_t v84 = v17;
  uint64_t v19 = 0;
  sub_1000513A8((uint64_t *)&v84);
  uint64_t v80 = v6;
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t)v84;
  if (sub_100052708()) {
    goto LABEL_7;
  }
  sub_100050DE4((uint64_t)v14);
  uint64_t v21 = (_DWORD *)(v3 + 48);
  unint64_t v22 = (uint64_t (*)(char *, uint64_t, uint64_t))v18[6];
  int v23 = v22(v14, 1, v2);
  uint64_t v81 = v2;
  int v24 = v23;
  sub_1000527C8((uint64_t)v14);
  BOOL v25 = v24 == 1;
  uint64_t v2 = v81;
  if (v25)
  {
LABEL_7:
    uint64_t v26 = [a1 currentHome];
    if (v26)
    {
      uint64_t v19 = v26;
      swift_release();
      if (qword_1000916B8 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_10006EC68();
      sub_100004B08(v27, (uint64_t)qword_10009A7A0);
      uint64_t v21 = v19;
      uint64_t v20 = sub_10006EC48();
      os_log_type_t v28 = sub_10006F818();
      if (os_log_type_enabled((os_log_t)v20, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 138412290;
        uint64_t v84 = v21;
        uint64_t v31 = v21;
        sub_10006F868();
        *uint64_t v30 = v19;

        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v20, v28, "Using Home Sensing, home is %@", v29, 0xCu);
        sub_100004960((uint64_t *)&unk_100092030);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (uint64_t)v19;
      }
      goto LABEL_29;
    }
    if (qword_1000916B8 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_10006EC68();
    sub_100004B08(v32, (uint64_t)qword_10009A7A0);
    swift_retain_n();
    uint64_t v33 = sub_10006EC48();
    uint64_t v21 = (_DWORD *)sub_10006F818();
    if (!os_log_type_enabled(v33, (os_log_type_t)v21))
    {

      swift_release_n();
      uint64_t v35 = v20 & 0x4000000000000000;
      goto LABEL_52;
    }
    uint64_t v19 = (_DWORD *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v84 = v34;
    *uint64_t v19 = 136315138;
    uint64_t v35 = v20 & 0x4000000000000000;
    if (v20 < 0 || v35)
    {
      swift_retain();
      if (sub_10006FAC8()) {
        goto LABEL_18;
      }
    }
    else
    {
      Class v36 = *(Class *)(v20 + 16);
      swift_retain();
      if (v36)
      {
LABEL_18:
        if ((v20 & 0xC000000000000001) != 0)
        {
          uint64_t v37 = (objc_class *)sub_10006F9F8();
        }
        else
        {
          if (!*(void *)(v20 + 16))
          {
            __break(1u);
            goto LABEL_67;
          }
          uint64_t v37 = (objc_class *)*(id *)(v20 + 32);
        }
        uint64_t v38 = v37;
        swift_release();
        id v39 = [(objc_class *)v38 name];

        uint64_t v40 = sub_10006F4F8();
        unint64_t v42 = v41;

        goto LABEL_51;
      }
    }
    uint64_t v40 = 1701736302;
    swift_release();
    unint64_t v42 = 0xE400000000000000;
LABEL_51:
    uint64_t v83 = sub_100022B5C(v40, v42, (uint64_t *)&v84);
    sub_10006F868();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v21, "Using Home Sensing, no 'currentHome' was found from HomeKit, falling back to %s)", (uint8_t *)v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_52:
    if (v20 < 0 || v35)
    {
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_10006FAC8();
      swift_release();
      if (!v73) {
        goto LABEL_64;
      }
    }
    else if (!*(void *)(v20 + 16))
    {
      goto LABEL_64;
    }
    if ((v20 & 0xC000000000000001) != 0) {
      goto LABEL_61;
    }
    if (*(void *)(v20 + 16))
    {
LABEL_57:
      uint64_t v72 = (objc_class *)*(id *)(v20 + 32);
LABEL_58:
      uint64_t v19 = v72;
      swift_release();
      return (uint64_t)v19;
    }
    __break(1u);
    goto LABEL_63;
  }
  sub_100050DE4((uint64_t)v12);
  if (v22(v12, 1, v2) == 1)
  {
    sub_1000527C8((uint64_t)v12);
    if ((v20 & 0x8000000000000000) == 0 && (v20 & 0x4000000000000000) == 0)
    {
      if (*(void *)(v20 + 16)) {
        goto LABEL_26;
      }
      goto LABEL_64;
    }
LABEL_63:
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_10006FAC8();
    swift_release();
    if (v74)
    {
LABEL_26:
      if ((v20 & 0xC000000000000001) == 0)
      {
        if (!*(void *)(v20 + 16))
        {
          __break(1u);
LABEL_29:

          return (uint64_t)v19;
        }
        goto LABEL_57;
      }
LABEL_61:
      uint64_t v72 = (objc_class *)sub_10006F9F8();
      goto LABEL_58;
    }
LABEL_64:
    swift_release();
    return 0;
  }
  uint64_t v21 = v18;
  unint64_t v43 = (void (*)(char *, char *, uint64_t))v18[4];
  uint64_t v34 = (uint64_t)v82;
  v43(v82, v12, v2);
  id v44 = [a1 homes];
  unint64_t v45 = sub_10006F668();

  __chkstk_darwin(v46);
  *(&v78 - 2) = v34;
  uint64_t v19 = sub_100050CA4(sub_100052828, (uint64_t)(&v78 - 4), v45);
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_release();
    if (qword_1000916B8 == -1)
    {
LABEL_33:
      uint64_t v47 = sub_10006EC68();
      sub_100004B08(v47, (uint64_t)qword_10009A7A0);
      uint64_t v48 = v19;
      uint64_t v49 = sub_10006EC48();
      os_log_type_t v50 = sub_10006F818();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v84 = swift_slowAlloc();
        uint64_t v80 = v21;
        *(_DWORD *)uint64_t v51 = 136315138;
        uint64_t v79 = (uint64_t)(v51 + 4);
        id v52 = [v48 name];
        uint64_t v53 = sub_10006F4F8();
        unint64_t v55 = v54;

        uint64_t v2 = v81;
        uint64_t v83 = sub_100022B5C(v53, v55, (uint64_t *)&v84);
        sub_10006F868();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "Home.app has locked home to '%s', using that one.", v51, 0xCu);
        swift_arrayDestroy();
        uint64_t v21 = v80;
        swift_slowDealloc();
        uint64_t v34 = (uint64_t)v82;
        swift_slowDealloc();
      }
      else
      {
      }
      (*((void (**)(uint64_t, uint64_t))v21 + 1))(v34, v2);
      return (uint64_t)v19;
    }
LABEL_67:
    swift_once();
    goto LABEL_33;
  }
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  uint64_t v56 = sub_10006EC68();
  sub_100004B08(v56, (uint64_t)qword_10009A7A0);
  uint64_t v57 = (void (*)(void, void))v80;
  (*((void (**)(_DWORD *, uint64_t, uint64_t))v21 + 2))(v80, v34, v2);
  swift_retain_n();
  id v58 = sub_10006EC48();
  os_log_type_t v59 = sub_10006F818();
  if (!os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = *((void *)v21 + 1);
    ((void (*)(void, uint64_t))v60)(v57, v2);

    swift_release_n();
    uint64_t v63 = v20 & 0x4000000000000000;
    goto LABEL_71;
  }
  uint64_t v60 = swift_slowAlloc();
  uint64_t v79 = swift_slowAlloc();
  uint64_t v84 = v79;
  *(_DWORD *)uint64_t v60 = 136315394;
  uint64_t v61 = sub_10006EBA8();
  uint64_t v83 = sub_100022B5C(v61, v62, (uint64_t *)&v84);
  sub_10006F868();
  swift_bridgeObjectRelease();
  uint64_t v80 = (_DWORD *)*((void *)v21 + 1);
  ((void (*)(void, uint64_t))v80)(v57, v81);
  *(_WORD *)(v60 + 12) = 2080;
  uint64_t v63 = v20 & 0x4000000000000000;
  if (v20 < 0 || v63)
  {
    swift_retain();
    if (sub_10006FAC8()) {
      goto LABEL_41;
    }
LABEL_69:
    uint64_t v68 = 1701736302;
    swift_release();
    unint64_t v70 = 0xE400000000000000;
    goto LABEL_70;
  }
  Class v64 = *(Class *)(v20 + 16);
  swift_retain();
  if (!v64) {
    goto LABEL_69;
  }
LABEL_41:
  if ((v20 & 0xC000000000000001) != 0) {
    goto LABEL_84;
  }
  if (!*(void *)(v20 + 16))
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  for (uint64_t i = (objc_class *)*(id *)(v20 + 32); ; uint64_t i = (objc_class *)sub_10006F9F8())
  {
    uint64_t v66 = i;
    swift_release();
    id v67 = [(objc_class *)v66 name];

    uint64_t v68 = sub_10006F4F8();
    unint64_t v70 = v69;

LABEL_70:
    uint64_t v83 = sub_100022B5C(v68, v70, (uint64_t *)&v84);
    sub_10006F868();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "Home.app has locked home to uuid '%s' but it wasn't found, falling back to %s)", (uint8_t *)v60, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v60 = (uint64_t)v80;
    uint64_t v2 = v81;
LABEL_71:
    if (v20 < 0 || v63) {
      break;
    }
    if (!*(void *)(v20 + 16)) {
      goto LABEL_79;
    }
LABEL_74:
    if ((v20 & 0xC000000000000001) != 0)
    {
      uint64_t v75 = (objc_class *)sub_10006F9F8();
      goto LABEL_77;
    }
    if (*(void *)(v20 + 16))
    {
      uint64_t v75 = (objc_class *)*(id *)(v20 + 32);
LABEL_77:
      uint64_t v19 = v75;
      swift_release();
      goto LABEL_80;
    }
    __break(1u);
LABEL_84:
    ;
  }
  swift_bridgeObjectRetain();
  uint64_t v76 = sub_10006FAC8();
  swift_release();
  if (v76) {
    goto LABEL_74;
  }
LABEL_79:
  swift_release();
  uint64_t v19 = 0;
LABEL_80:
  ((void (*)(uint64_t, uint64_t))v60)(v34, v2);
  return (uint64_t)v19;
}

void *AppPreferences.selectedHomeChangedNotification.unsafeMutableAddressor()
{
  return &static AppPreferences.selectedHomeChangedNotification;
}

void *sub_100050CA4(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_10006FAC8())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)sub_10006F9F8() : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void *AppPreferences.homeSharedDefaultsSuite.unsafeMutableAddressor()
{
  return &static AppPreferences.homeSharedDefaultsSuite;
}

void *AppPreferences.isHomeSensingEnabledKey.unsafeMutableAddressor()
{
  return &static AppPreferences.isHomeSensingEnabledKey;
}

uint64_t sub_100050DE4@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v3 = sub_10006F4D8();
  id v4 = [v2 initWithSuiteName:v3];

  if (v4
    && (NSString v5 = sub_10006F4D8(),
        id v6 = [v4 stringForKey:v5],
        v4,
        v5,
        v6))
  {
    sub_10006F4F8();

    sub_10006EB98();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = sub_10006EBD8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a1, 1, 1, v8);
  }
}

void *AppPreferences.nanoHomeSyncDomain.unsafeMutableAddressor()
{
  return &static AppPreferences.nanoHomeSyncDomain;
}

void *AppPreferences.selectedHomeKey.unsafeMutableAddressor()
{
  return &static AppPreferences.selectedHomeKey;
}

uint64_t sub_100050F58(id *a1)
{
  uint64_t v2 = sub_10006EBD8();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [*a1 uniqueIdentifier];
  sub_10006EBC8();

  char v7 = sub_10006EBB8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

unint64_t static AppPreferences.homeSharedDefaultsSuite.getter()
{
  return 0xD000000000000014;
}

unint64_t static AppPreferences.isHomeSensingEnabledKey.getter()
{
  return 0xD000000000000014;
}

unint64_t static AppPreferences.homeSensingDefaultsChangedNotification.getter()
{
  return 0xD000000000000021;
}

unint64_t static AppPreferences.selectedHomeChangedNotification.getter()
{
  return 0xD000000000000022;
}

unint64_t static AppPreferences.nanoHomeSyncDomain.getter()
{
  return 0xD000000000000017;
}

unint64_t static AppPreferences.selectedHomeKey.getter()
{
  return 0xD000000000000011;
}

ValueMetadata *type metadata accessor for AppPreferences()
{
  return &type metadata for AppPreferences;
}

double *sub_10005111C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_100004960(&qword_100092C18);
      uint64_t v3 = (double *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      *((void *)v3 + 2) = v2;
      *((void *)v3 + 3) = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1000246B4((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_10006FAC8();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

double *sub_100051214(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 56 * a3;
        if (v10 < (unint64_t)&v8[7 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 56 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_100004960(&qword_100091CC0);
      uint64_t v8 = (double *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      *((void *)v8 + 2) = v5;
      *((void *)v8 + 3) = 2 * ((uint64_t)(v9 - 32) / 56);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (double *)sub_10006FB08();
  __break(1u);
  return result;
}

uint64_t sub_1000513A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1000526F4(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_100051424(v6);
  return sub_10006FA58();
}

void sub_100051424(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = sub_10006FCB8(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_157;
    }
    if (v3) {
      sub_100051E30(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_165;
  }
  Swift::Int v138 = v4;
  Swift::Int v143 = v3;
  long long v136 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    uint64_t v152 = (uint64_t)_swiftEmptyArrayStorage;
    long long v146 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_123:
      if (v13 >= 2)
      {
        uint64_t v126 = *v136;
        do
        {
          unint64_t v127 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_152;
          }
          if (!v126) {
            goto LABEL_164;
          }
          long long v128 = v8;
          long long v129 = v8 + 4;
          double v130 = v8[2 * v127 + 4];
          double v131 = v8[2 * v13 + 3];
          sub_100052008((void **)(v126 + 8 * *(void *)&v130), (id *)(v126 + 8 * *(void *)&v129[2 * v13 - 2]), v126 + 8 * *(void *)&v131, v146);
          if (v1) {
            break;
          }
          if (*(uint64_t *)&v131 < *(uint64_t *)&v130) {
            goto LABEL_153;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v128 = sub_1000526A0((uint64_t)v128);
          }
          if (v127 >= *((void *)v128 + 2)) {
            goto LABEL_154;
          }
          long long v132 = v128;
          long long v133 = v128 + 4;
          long long v134 = &v128[2 * v127 + 4];
          *long long v134 = v130;
          v134[1] = v131;
          unint64_t v135 = *((void *)v128 + 2);
          if (v13 > v135) {
            goto LABEL_155;
          }
          uint64_t v8 = v132;
          memmove(&v133[2 * v13 - 2], &v133[2 * v13], 16 * (v135 - v13));
          *((void *)v8 + 2) = v135 - 1;
          unint64_t v13 = v135 - 1;
        }
        while (v135 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(void *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_10006F688();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_1000526B4();
    uint64_t v7 = sub_10006F6A8();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    long long v146 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v152 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v137 = *a1 - 8;
  uint64_t v8 = _swiftEmptyArrayStorage;
  char v11 = &LockScreenDataModel;
  Swift::Int v12 = v143;
  uint64_t v147 = *a1;
  while (1)
  {
    Swift::Int v14 = v9++;
    if (v9 >= v12) {
      goto LABEL_50;
    }
    unint64_t v139 = v8;
    id v15 = *(void **)(v10 + 8 * v14);
    id v16 = *(id *)(v10 + 8 * v9);
    id v17 = v15;
    unsigned int v18 = [v16 (SEL)v11[419].count];
    if (v18 == [v17 (SEL)v11[419].count])
    {
      Swift::Int v148 = v9;
      id v21 = [v16 name];
      uint64_t v22 = sub_10006F4F8();
      uint64_t v24 = v23;

      id v25 = [v17 name];
      uint64_t v26 = sub_10006F4F8();
      uint64_t v28 = v27;

      if (v22 == v26 && v24 == v28) {
        unsigned int v19 = 0;
      }
      else {
        unsigned int v19 = sub_10006FCE8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      Swift::Int v20 = v14 + 2;
      char v11 = &LockScreenDataModel;
      Swift::Int v9 = v148;
      if (v14 + 2 < v143)
      {
LABEL_27:
        Swift::Int v30 = v20;
        uint64_t v10 = v147;
        unsigned int v144 = v19;
        do
        {
          Swift::Int v20 = v30;
          uint64_t v32 = *(void **)(v10 + 8 * v9);
          id v33 = *(id *)(v10 + 8 * v30);
          id v34 = v32;
          unsigned int v35 = [v33 (SEL)v11[419].count];
          if (v35 == [v34 (SEL)v11[419].count])
          {
            Swift::Int v149 = v20;
            id v36 = [v33 name];
            uint64_t v37 = sub_10006F4F8();
            uint64_t v39 = v38;

            id v40 = [v34 name];
            uint64_t v41 = sub_10006F4F8();
            uint64_t v43 = v42;

            if (v37 == v41 && v39 == v43)
            {

              swift_bridgeObjectRelease_n();
              char v11 = &LockScreenDataModel;
              Swift::Int v20 = v149;
              unsigned int v19 = v144;
              if (v144)
              {
                uint64_t v8 = v139;
                uint64_t v10 = v147;
                goto LABEL_41;
              }
            }
            else
            {
              char v45 = sub_10006FCE8();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v46 = v144 ^ v45;
              unsigned int v19 = v144;
              char v11 = &LockScreenDataModel;
              Swift::Int v20 = v149;
              if (v46) {
                goto LABEL_19;
              }
            }
          }
          else
          {
            unsigned int v31 = [v33 (SEL)v11[419].count];

            if ((v19 ^ v31)) {
              goto LABEL_19;
            }
          }
          Swift::Int v30 = v20 + 1;
          Swift::Int v9 = v20;
          uint64_t v10 = v147;
        }
        while (v20 + 1 < v143);
        ++v20;
        goto LABEL_40;
      }
    }
    else
    {
      unsigned int v19 = [v16 (SEL)v11[419].count];

      Swift::Int v20 = v14 + 2;
      if (v14 + 2 < v143) {
        goto LABEL_27;
      }
    }
    LOBYTE(v144) = v19;
LABEL_19:
    uint64_t v10 = v147;
LABEL_40:
    Swift::Int v9 = v20;
    uint64_t v8 = v139;
    if (v144)
    {
LABEL_41:
      if (v20 < v14) {
        goto LABEL_158;
      }
      if (v14 < v20)
      {
        uint64_t v47 = (uint64_t *)(v137 + 8 * v20);
        Swift::Int v48 = v20;
        Swift::Int v49 = v14;
        os_log_type_t v50 = (uint64_t *)(v10 + 8 * v14);
        do
        {
          if (v49 != --v48)
          {
            if (!v10) {
              goto LABEL_163;
            }
            uint64_t v51 = *v50;
            *os_log_type_t v50 = *v47;
            uint64_t *v47 = v51;
          }
          ++v49;
          --v47;
          ++v50;
        }
        while (v49 < v48);
      }
      Swift::Int v9 = v20;
    }
LABEL_50:
    if (v9 >= v143) {
      goto LABEL_74;
    }
    if (__OFSUB__(v9, v14)) {
      goto LABEL_156;
    }
    if (v9 - v14 >= v138) {
      goto LABEL_74;
    }
    if (__OFADD__(v14, v138)) {
      goto LABEL_159;
    }
    Swift::Int v52 = v143;
    if (v14 + v138 < v143) {
      Swift::Int v52 = v14 + v138;
    }
    if (v52 < v14) {
      break;
    }
    if (v9 == v52) {
      goto LABEL_74;
    }
    char v140 = v8;
    Swift::Int v141 = v52;
    uint64_t v53 = v137 + 8 * v9;
    Swift::Int v142 = v14;
    while (2)
    {
      unint64_t v54 = *(void **)(v10 + 8 * v9);
      Swift::Int v55 = v14;
      uint64_t v145 = v53;
      uint64_t v56 = v53;
      Swift::Int v150 = v9;
      while (1)
      {
        uint64_t v57 = *(void **)v56;
        id v58 = v54;
        id v59 = v57;
        LODWORD(v57) = [v58 (SEL)v11[419].count];
        if (v57 == [v59 (SEL)v11[419].count]) {
          break;
        }
        unsigned __int8 v60 = [v58 (SEL)v11[419].count];

        if ((v60 & 1) == 0) {
          goto LABEL_60;
        }
LABEL_70:
        if (!v10) {
          goto LABEL_161;
        }
        unint64_t v71 = *(void **)v56;
        unint64_t v54 = *(void **)(v56 + 8);
        *(void *)uint64_t v56 = v54;
        *(void *)(v56 + 8) = v71;
        v56 -= 8;
        if (v9 == ++v55) {
          goto LABEL_60;
        }
      }
      id v61 = [v58 name];
      uint64_t v62 = sub_10006F4F8();
      uint64_t v64 = v63;

      id v65 = [v59 name];
      uint64_t v66 = sub_10006F4F8();
      uint64_t v68 = v67;

      if (v62 != v66 || v64 != v68)
      {
        char v70 = sub_10006FCE8();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v147;
        Swift::Int v9 = v150;
        char v11 = &LockScreenDataModel;
        if ((v70 & 1) == 0) {
          goto LABEL_60;
        }
        goto LABEL_70;
      }

      swift_bridgeObjectRelease_n();
      uint64_t v10 = v147;
      Swift::Int v9 = v150;
      char v11 = &LockScreenDataModel;
LABEL_60:
      ++v9;
      uint64_t v53 = v145 + 8;
      Swift::Int v14 = v142;
      if (v9 != v141) {
        continue;
      }
      break;
    }
    Swift::Int v9 = v141;
    uint64_t v8 = v140;
LABEL_74:
    if (v9 < v14) {
      goto LABEL_151;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1000524E8(0, *((void *)v8 + 2) + 1, 1, (uint64_t)v8);
    }
    unint64_t v73 = *((void *)v8 + 2);
    unint64_t v72 = *((void *)v8 + 3);
    unint64_t v13 = v73 + 1;
    if (v73 >= v72 >> 1) {
      uint64_t v8 = sub_1000524E8((double *)(v72 > 1), v73 + 1, 1, (uint64_t)v8);
    }
    *((void *)v8 + 2) = v13;
    uint64_t v74 = v8 + 4;
    uint64_t v75 = &v8[2 * v73 + 4];
    *(void *)uint64_t v75 = v14;
    *((void *)v75 + 1) = v9;
    if (v73)
    {
      Swift::Int v151 = v9;
      while (1)
      {
        unint64_t v76 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v81 = &v74[2 * v13];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          BOOL v87 = __OFSUB__(v83, v82);
          uint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_140;
          }
          uint64_t v86 = *((void *)v81 - 6);
          uint64_t v85 = *((void *)v81 - 5);
          BOOL v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          char v80 = v87;
          if (v87) {
            goto LABEL_141;
          }
          unint64_t v88 = v13 - 2;
          uint64_t v89 = &v74[2 * v13 - 4];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v87 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v87) {
            goto LABEL_143;
          }
          BOOL v87 = __OFADD__(v79, v92);
          uint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_146;
          }
          if (v93 >= v84)
          {
            uint64_t v111 = &v74[2 * v76];
            uint64_t v113 = *(void *)v111;
            uint64_t v112 = *((void *)v111 + 1);
            BOOL v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_150;
            }
            BOOL v104 = v79 < v114;
            goto LABEL_112;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v105 = *((void *)v8 + 4);
            uint64_t v106 = *((void *)v8 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_106;
          }
          uint64_t v78 = *((void *)v8 + 4);
          uint64_t v77 = *((void *)v8 + 5);
          BOOL v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          char v80 = v87;
        }
        if (v80) {
          goto LABEL_142;
        }
        unint64_t v88 = v13 - 2;
        uint64_t v94 = &v74[2 * v13 - 4];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v97 = __OFSUB__(v95, v96);
        uint64_t v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_145;
        }
        uint64_t v100 = &v74[2 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v87 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_148;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_149;
        }
        if (v98 + v103 >= v79)
        {
          BOOL v104 = v79 < v103;
LABEL_112:
          if (v104) {
            unint64_t v76 = v88;
          }
          goto LABEL_114;
        }
LABEL_106:
        if (v99) {
          goto LABEL_144;
        }
        uint64_t v107 = &v74[2 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_147;
        }
        if (v110 < v98) {
          goto LABEL_14;
        }
LABEL_114:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v13)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!v10) {
          goto LABEL_162;
        }
        uint64_t v116 = v8;
        uint64_t v117 = v10;
        uint64_t v118 = &v74[2 * v115];
        uint64_t v119 = *(void *)v118;
        uint64_t v120 = v74;
        unint64_t v121 = v76;
        uint64_t v122 = &v74[2 * v76];
        double v123 = v122[1];
        uint64_t v124 = v117;
        sub_100052008((void **)(v117 + 8 * *(void *)v118), (id *)(v117 + 8 * *(void *)v122), v117 + 8 * *(void *)&v123, v146);
        if (v1) {
          goto LABEL_134;
        }
        if (*(uint64_t *)&v123 < v119) {
          goto LABEL_137;
        }
        if (v121 > *((void *)v116 + 2)) {
          goto LABEL_138;
        }
        *(void *)uint64_t v118 = v119;
        v120[2 * v115 + 1] = v123;
        unint64_t v125 = *((void *)v116 + 2);
        if (v121 >= v125) {
          goto LABEL_139;
        }
        uint64_t v8 = v116;
        unint64_t v13 = v125 - 1;
        memmove(v122, v122 + 2, 16 * (v125 - 1 - v121));
        uint64_t v74 = v120;
        *((void *)v116 + 2) = v125 - 1;
        char v11 = &LockScreenDataModel;
        Swift::Int v9 = v151;
        uint64_t v10 = v124;
        if (v125 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    Swift::Int v12 = v143;
    if (v9 >= v143) {
      goto LABEL_123;
    }
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  sub_10006FA98();
  __break(1u);
}

void sub_100051E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
    uint64_t v7 = &LockScreenDataModel;
    uint64_t v28 = *a4;
LABEL_6:
    uint64_t v8 = *(void **)(v5 + 8 * v4);
    uint64_t v9 = a1;
    uint64_t v27 = v6;
    uint64_t v29 = v4;
    while (1)
    {
      uint64_t v10 = *(void **)v6;
      id v11 = v8;
      id v12 = v10;
      LODWORD(v10) = [v11 (SEL)v7[419].count];
      if (v10 == [v12 (SEL)v7[419].count])
      {
        id v14 = [v11 name];
        uint64_t v15 = sub_10006F4F8();
        uint64_t v17 = v16;

        id v18 = [v12 name];
        uint64_t v19 = sub_10006F4F8();
        uint64_t v21 = v20;

        if (v15 == v19 && v17 == v21)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v4 = v29;
          uint64_t v5 = v28;
          uint64_t v7 = &LockScreenDataModel;
LABEL_5:
          ++v4;
          uint64_t v6 = v27 + 8;
          if (v4 == a2) {
            return;
          }
          goto LABEL_6;
        }
        char v23 = sub_10006FCE8();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = v29;
        uint64_t v5 = v28;
        uint64_t v7 = &LockScreenDataModel;
        if ((v23 & 1) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
        unsigned __int8 v13 = [v11 (SEL)v7[419].count];

        if ((v13 & 1) == 0) {
          goto LABEL_5;
        }
      }
      if (!v5) {
        break;
      }
      uint64_t v24 = *(void **)v6;
      uint64_t v8 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v8;
      *(void *)(v6 + 8) = v24;
      v6 -= 8;
      if (v4 == ++v9) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100052008(void **__src, id *a2, unint64_t a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v64 = __src;
  uint64_t v63 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_61;
    }
    if (__dst != a2 || &a2[v12] <= __dst) {
      memmove(__dst, a2, 8 * v12);
    }
    uint64_t v32 = &v4[v12];
    uint64_t v62 = v32;
    uint64_t v64 = v5;
    if (v6 >= v5 || v10 < 8)
    {
LABEL_60:
      sub_1000525E4((void **)&v64, (const void **)&v63, &v62);
      return 1;
    }
    id v33 = (void **)(a3 - 8);
    id v34 = &LockScreenDataModel;
    unsigned int v35 = v5;
    uint64_t v53 = v6;
    unint64_t v54 = v4;
    while (1)
    {
      id v59 = v32;
      id v61 = v5;
      uint64_t v57 = v33 + 1;
      uint64_t v37 = *--v32;
      id v36 = v37;
      uint64_t v38 = *--v35;
      id v39 = v36;
      id v40 = v38;
      unsigned int v41 = [v39 (SEL)v34[419].count];
      if (v41 == [v40 (SEL)v34[419].count])
      {
        id v43 = [v39 name];
        uint64_t v44 = sub_10006F4F8();
        uint64_t v55 = v45;

        id v46 = [v40 name];
        uint64_t v47 = sub_10006F4F8();
        uint64_t v49 = v48;

        if (v44 == v47 && v55 == v49)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v6 = v53;
          uint64_t v4 = v54;
          id v34 = &LockScreenDataModel;
        }
        else
        {
          char v51 = sub_10006FCE8();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v6 = v53;
          uint64_t v4 = v54;
          id v34 = &LockScreenDataModel;
          if (v51)
          {
LABEL_47:
            uint64_t v32 = v59;
            if (v57 != v61 || v33 >= v61) {
              *id v33 = *v35;
            }
            uint64_t v64 = v35;
            goto LABEL_56;
          }
        }
      }
      else
      {
        unsigned __int8 v42 = [v39 (SEL)v34[419].count];

        if (v42) {
          goto LABEL_47;
        }
      }
      uint64_t v62 = v32;
      unsigned int v35 = v61;
      if (v57 < v59 || v33 >= v59 || v57 != v59) {
        *id v33 = *v32;
      }
LABEL_56:
      if (v35 > v6)
      {
        --v33;
        uint64_t v5 = v35;
        if (v32 > v4) {
          continue;
        }
      }
      goto LABEL_60;
    }
  }
  if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst) {
      memmove(__dst, __src, 8 * v9);
    }
    unsigned __int8 v13 = &v4[v9];
    uint64_t v62 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      id v14 = &LockScreenDataModel;
      uint64_t v56 = v13;
      while (1)
      {
        uint64_t v15 = *v4;
        id v16 = *v5;
        id v17 = v15;
        LODWORD(v15) = [v16 (SEL)v14[419].count];
        if (v15 == [v17 (SEL)v14[419].count])
        {
          unsigned __int8 v60 = v5;
          uint64_t v20 = v6;
          uint64_t v21 = v4;
          id v22 = [v16 name];
          uint64_t v23 = sub_10006F4F8();
          uint64_t v25 = v24;

          id v26 = [v17 name];
          uint64_t v27 = sub_10006F4F8();
          uint64_t v29 = v28;

          if (v23 == v27 && v25 == v29)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v4 = v21;
            uint64_t v6 = v20;
            uint64_t v5 = v60;
            unsigned __int8 v13 = v56;
            id v14 = &LockScreenDataModel;
            if (v6 == v4) {
              goto LABEL_17;
            }
LABEL_16:
            *uint64_t v6 = *v4;
            goto LABEL_17;
          }
          char v31 = sub_10006FCE8();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v4 = v21;
          uint64_t v6 = v20;
          uint64_t v5 = v60;
          unsigned __int8 v13 = v56;
          id v14 = &LockScreenDataModel;
          if (v31)
          {
LABEL_23:
            uint64_t v19 = v5 + 1;
            if (v6 < v5 || v6 >= v19 || v6 != v5) {
              *uint64_t v6 = *v5;
            }
            goto LABEL_27;
          }
        }
        else
        {
          unsigned __int8 v18 = [v16 (SEL)v14[419].count];

          if (v18) {
            goto LABEL_23;
          }
        }
        if (v6 != v4) {
          goto LABEL_16;
        }
LABEL_17:
        uint64_t v63 = ++v4;
        uint64_t v19 = v5;
LABEL_27:
        ++v6;
        if (v4 < v13)
        {
          uint64_t v5 = v19;
          if ((unint64_t)v19 < a3) {
            continue;
          }
        }
        uint64_t v64 = v6;
        goto LABEL_60;
      }
    }
    goto LABEL_60;
  }
LABEL_61:
  uint64_t result = sub_10006FB08();
  __break(1u);
  return result;
}

double *sub_1000524E8(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004960(&qword_100092C20);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unsigned __int8 v13 = (char *)(v10 + 4);
  id v14 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1000525E4(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_10006FB08();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

double *sub_1000526A0(uint64_t a1)
{
  return sub_1000524E8(0, *(void *)(a1 + 16), 0, a1);
}

unint64_t sub_1000526B4()
{
  unint64_t result = qword_100092020;
  if (!qword_100092020)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100092020);
  }
  return result;
}

uint64_t sub_1000526F4(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100052708()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = sub_10006F4D8();
  id v2 = [v0 initWithSuiteName:v1];

  if (!v2) {
    return 1;
  }
  NSString v3 = sub_10006F4D8();
  id v4 = [v2 BOOLForKey:v3];

  return (uint64_t)v4;
}

uint64_t sub_1000527C8(uint64_t a1)
{
  uint64_t v2 = sub_100004960(&qword_100092C10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100052828(id *a1)
{
  return sub_100050F58(a1) & 1;
}

void *sub_100052848(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for SingleGaugeEntry(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    int64_t v11 = (char *)a2 + v9;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)((char *)a2 + v9);
    *((void *)v10 + 2) = *(void *)((char *)a2 + v9 + 16);
    v10[24] = *((unsigned char *)a2 + v9 + 24);
    uint64_t v13 = *(void *)((char *)a2 + v9 + 32);
    uint64_t v12 = *(void *)((char *)a2 + v9 + 40);
    *((void *)v10 + 4) = v13;
    *((void *)v10 + 5) = v12;
    uint64_t v14 = *((void *)v11 + 7);
    *((void *)v10 + 6) = *((void *)v11 + 6);
    *((void *)v10 + 7) = v14;
    v10[64] = v11[64];
    uint64_t v15 = v8[6];
    id v16 = (void *)((char *)a1 + v15);
    id v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
    uint64_t v19 = *(int *)(a3 + 20);
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_10006F348();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100052A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for SingleGaugeEntry(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10006F348();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100052B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(a2 + v8);
  *(void *)(v9 + 16) = *(void *)(a2 + v8 + 16);
  *(unsigned char *)(v9 + 24) = *(unsigned char *)(a2 + v8 + 24);
  uint64_t v12 = *(void *)(a2 + v8 + 32);
  uint64_t v11 = *(void *)(a2 + v8 + 40);
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v11;
  uint64_t v13 = *(void *)(v10 + 56);
  *(void *)(v9 + 48) = *(void *)(v10 + 48);
  *(void *)(v9 + 56) = v13;
  *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
  uint64_t v14 = v7[6];
  uint64_t v15 = (void *)(a1 + v14);
  id v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_10006F348();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100052CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
  uint64_t v11 = *(void *)(a2 + v8 + 16);
  *(unsigned char *)(v9 + 24) = *(unsigned char *)(v10 + 24);
  *(void *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 48) = *(void *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
  uint64_t v12 = v7[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v7[7];
  id v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  if (a1 != a2)
  {
    uint64_t v18 = *(int *)(a3 + 20);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_100039078(a1 + v18, &qword_100091DD8);
    sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_10006F348();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100052EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_10006F348();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100053014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SingleGaugeEntry(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(a2 + v8);
  *(unsigned char *)(v9 + 24) = *(unsigned char *)(a2 + v8 + 24);
  *(void *)(v9 + 16) = *(void *)(a2 + v8 + 16);
  uint64_t v11 = *(void *)(a2 + v8 + 40);
  *(void *)(v9 + 32) = *(void *)(a2 + v8 + 32);
  *(void *)(v9 + 40) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v10 + 56);
  *(void *)(v9 + 48) = *(void *)(v10 + 48);
  *(void *)(v9 + 56) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  if (a1 != a2)
  {
    uint64_t v18 = *(int *)(a3 + 20);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (const void *)(a2 + v18);
    sub_100039078(a1 + v18, &qword_100091DD8);
    uint64_t v21 = sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_10006F348();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000531C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000531D8);
}

uint64_t sub_1000531D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SingleGaugeEntry(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100004960(&qword_1000922E0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000532D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000532E8);
}

uint64_t sub_1000532E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SingleGaugeEntry(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100004960(&qword_1000922E0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for SingleClimateGaugeView(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092C80);
}

void sub_100053410()
{
  type metadata accessor for SingleGaugeEntry(319);
  if (v0 <= 0x3F)
  {
    sub_10003597C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000534D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000534F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10006EE78();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_100091DD8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053F94(v2, (uint64_t)v10, &qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_10006F348();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_10006F808();
    uint64_t v14 = sub_10006F008();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v18[1] = a1;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      void v18[2] = sub_100022B5C(0x6146746567646957, 0xEC000000796C696DLL, &v19);
      sub_10006F868();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10006EE68();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1000537B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v21 = type metadata accessor for SingleClimateGaugeViewAccessoryCircular(0);
  __chkstk_darwin(v21);
  uint64_t v20 = (uint64_t)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004960(&qword_100092CB8);
  __chkstk_darwin(v23);
  uint64_t v22 = (uint64_t)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004960(&qword_100092CC0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004960(&qword_100092CC8);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SingleClimateGaugeViewSystemSmall(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10006F348();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SingleClimateGaugeView(0);
  sub_1000534F4((uint64_t)v15);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_100053ECC(v1, (uint64_t)v11, type metadata accessor for SingleGaugeEntry);
    sub_100053ECC((uint64_t)v11, (uint64_t)v6, type metadata accessor for SingleClimateGaugeViewSystemSmall);
    swift_storeEnumTagMultiPayload();
    sub_100053E84(&qword_100092CD8, (void (*)(uint64_t))type metadata accessor for SingleClimateGaugeViewSystemSmall);
    sub_100053E84(&qword_100092CE0, (void (*)(uint64_t))type metadata accessor for SingleClimateGaugeViewAccessoryCircular);
    sub_10006EF88();
    sub_100053F94((uint64_t)v8, v22, &qword_100092CC8);
    swift_storeEnumTagMultiPayload();
    sub_100053DA8();
    sub_10006EF88();
    sub_100039078((uint64_t)v8, &qword_100092CC8);
    return sub_100053F34((uint64_t)v11, type metadata accessor for SingleClimateGaugeViewSystemSmall);
  }
  else
  {
    uint64_t v18 = v22;
    if (v16 == enum case for WidgetFamily.accessoryCircular(_:))
    {
      uint64_t v19 = v20;
      sub_100053ECC(v1, v20, type metadata accessor for SingleGaugeEntry);
      sub_100053ECC(v19, (uint64_t)v6, type metadata accessor for SingleClimateGaugeViewAccessoryCircular);
      swift_storeEnumTagMultiPayload();
      sub_100053E84(&qword_100092CD8, (void (*)(uint64_t))type metadata accessor for SingleClimateGaugeViewSystemSmall);
      sub_100053E84(&qword_100092CE0, (void (*)(uint64_t))type metadata accessor for SingleClimateGaugeViewAccessoryCircular);
      sub_10006EF88();
      sub_100053F94((uint64_t)v8, v18, &qword_100092CC8);
      swift_storeEnumTagMultiPayload();
      sub_100053DA8();
      sub_10006EF88();
      sub_100039078((uint64_t)v8, &qword_100092CC8);
      return sub_100053F34(v19, type metadata accessor for SingleClimateGaugeViewAccessoryCircular);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_100053DA8();
      sub_10006EF88();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
}

uint64_t type metadata accessor for SingleClimateGaugeViewAccessoryCircular(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092D40);
}

uint64_t type metadata accessor for SingleClimateGaugeViewSystemSmall(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092DD0);
}

unint64_t sub_100053DA8()
{
  unint64_t result = qword_100092CD0;
  if (!qword_100092CD0)
  {
    sub_1000049A4(&qword_100092CC8);
    sub_100053E84(&qword_100092CD8, (void (*)(uint64_t))type metadata accessor for SingleClimateGaugeViewSystemSmall);
    sub_100053E84(&qword_100092CE0, (void (*)(uint64_t))type metadata accessor for SingleClimateGaugeViewAccessoryCircular);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092CD0);
  }
  return result;
}

uint64_t sub_100053E84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100053ECC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100053F34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100053F94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004960(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100053FF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10006EFF8();
  uint64_t v49 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100004960(&qword_100092E18);
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  id v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100004960(&qword_100092E20);
  uint64_t v46 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  unsigned int v41 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004960(&qword_100092E28);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v50 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004960(&qword_100092E30);
  __chkstk_darwin(v45);
  uint64_t v48 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SingleGaugeEntry(0);
  os_log_type_t v15 = (long long *)(v1 + *(int *)(v14 + 20));
  long long v16 = v15[3];
  long long v57 = v15[2];
  long long v58 = v16;
  char v59 = *((unsigned char *)v15 + 64);
  long long v17 = v15[1];
  long long v55 = *v15;
  long long v56 = v17;
  uint64_t v39 = v1 + *(int *)(v14 + 28);
  sub_10006F068();
  uint64_t v18 = enum case for Font.Design.default(_:);
  uint64_t v19 = sub_10006F048();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v13, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v13, 0, 1, v19);
  sub_10006F078();
  uint64_t result = sub_100039078((uint64_t)v13, &qword_100092508);
  double v22 = *(double *)&v56;
  if (BYTE8(v56)) {
    double v22 = -1.0;
  }
  double v51 = v22;
  if (*(double *)&v55 > *((double *)&v55 + 1))
  {
    __break(1u);
  }
  else
  {
    long long v52 = v55;
    uint64_t v23 = __chkstk_darwin(result);
    __chkstk_darwin(v23);
    sub_100004960(&qword_100092E38);
    sub_100004960(&qword_100092E40);
    uint64_t v38 = a1;
    sub_1000554E0();
    uint64_t v37 = v7;
    sub_100055580(&qword_100092E50, &qword_100092E40, (void (*)(void))sub_1000555FC);
    sub_10001D1AC();
    uint64_t v24 = v40;
    sub_10006F218();
    uint64_t v25 = v43;
    sub_10006EFE8();
    uint64_t v26 = sub_10002643C(&qword_100092E68, &qword_100092E18);
    uint64_t v27 = sub_100053E84(&qword_100092E70, (void (*)(uint64_t))&type metadata accessor for AccessoryCircularGaugeStyle);
    uint64_t v28 = v41;
    uint64_t v29 = v44;
    sub_10006F128();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v3);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v29);
    *(void *)&long long v52 = v29;
    *((void *)&v52 + 1) = v3;
    *(void *)&long long v53 = v26;
    *((void *)&v53 + 1) = v27;
    swift_getOpaqueTypeConformance2();
    Swift::Int v30 = v50;
    uint64_t v31 = v47;
    sub_10006F168();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v31);
    sub_10006F2E8();
    sub_10006ECE8();
    uint64_t v32 = (uint64_t)v48;
    uint64_t v33 = v37;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v48, v30, v37);
    swift_release();
    id v34 = (_OWORD *)(v32 + *(int *)(v45 + 36));
    long long v35 = v53;
    *id v34 = v52;
    v34[1] = v35;
    void v34[2] = v54;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v30, v33);
    return sub_100055668(v32, v38, &qword_100092E30);
  }
  return result;
}

uint64_t sub_10005476C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10006EFF8();
  uint64_t v45 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  os_log_type_t v50 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100004960(&qword_100092E18);
  uint64_t v48 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v46 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004960(&qword_100092E20);
  uint64_t v53 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v47 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004960(&qword_100092E28);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100004960(&qword_100092E30);
  __chkstk_darwin(v49);
  long long v52 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v13 - 8);
  os_log_type_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = (long long *)(v1 + *(int *)(type metadata accessor for SingleGaugeEntry(0) + 20));
  long long v17 = v16[3];
  long long v60 = v16[2];
  long long v61 = v17;
  char v62 = *((unsigned char *)v16 + 64);
  long long v18 = v16[1];
  long long v58 = *v16;
  long long v59 = v18;
  uint64_t v19 = sub_10006F048();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 1, 1, v19);
  uint64_t v20 = sub_10006F078();
  uint64_t result = sub_100039078((uint64_t)v15, &qword_100092508);
  double v22 = *(double *)&v59;
  if (BYTE8(v59)) {
    double v22 = -1.0;
  }
  double v54 = v22;
  if (*(double *)&v58 > *((double *)&v58 + 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v44 = a1;
    v38[1] = v38;
    long long v55 = v58;
    uint64_t v23 = __chkstk_darwin(result);
    __chkstk_darwin(v23);
    sub_100004960(&qword_100092E38);
    uint64_t v43 = v20;
    uint64_t v42 = v8;
    sub_100004960(&qword_100092E40);
    uint64_t v41 = v9;
    uint64_t v40 = v6;
    sub_1000554E0();
    uint64_t v39 = v11;
    uint64_t v24 = v45;
    sub_100055580(&qword_100092E50, &qword_100092E40, (void (*)(void))sub_1000555FC);
    sub_10001D1AC();
    uint64_t v25 = v46;
    sub_10006F218();
    uint64_t v26 = v50;
    sub_10006EFE8();
    uint64_t v27 = sub_10002643C(&qword_100092E68, &qword_100092E18);
    uint64_t v28 = sub_100053E84(&qword_100092E70, (void (*)(uint64_t))&type metadata accessor for AccessoryCircularGaugeStyle);
    uint64_t v29 = v47;
    uint64_t v30 = v51;
    sub_10006F128();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v3);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v30);
    *(void *)&long long v55 = v30;
    *((void *)&v55 + 1) = v3;
    *(void *)&long long v56 = v27;
    *((void *)&v56 + 1) = v28;
    swift_getOpaqueTypeConformance2();
    uint64_t v31 = v39;
    uint64_t v32 = v40;
    sub_10006F168();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v32);
    sub_10006F2E8();
    sub_10006ECE8();
    uint64_t v33 = v41;
    uint64_t v34 = (uint64_t)v52;
    uint64_t v35 = v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v52, v31, v42);
    swift_release();
    uint64_t v36 = (_OWORD *)(v34 + *(int *)(v49 + 36));
    long long v37 = v56;
    *uint64_t v36 = v55;
    v36[1] = v37;
    uint64_t v36[2] = v57;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v35);
    return sub_100055668(v34, v44, &qword_100092E30);
  }
  return result;
}

uint64_t sub_100054EA0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10006F228();
  uint64_t KeyPath = swift_getKeyPath();
  *a2 = v4;
  a2[1] = KeyPath;
  a2[2] = a1;

  return swift_retain();
}

double sub_100054F10@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100055668(a1 + 16, (uint64_t)v40, &qword_100092E78);
  sub_100055668((uint64_t)v40, (uint64_t)v41, &qword_100092E78);
  if (v41[8])
  {
    *(void *)&long long v36 = 0x9380E29380E2;
    *((void *)&v36 + 1) = 0xA600000000000000;
    sub_100004A48();
    uint64_t v4 = sub_10006F0E8();
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    sub_10006F0C8();
    sub_100038EA0(v4, v6, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v36 = *(_OWORD *)(a1 + 32);
    if (*(unsigned char *)(a1 + 64))
    {
      sub_100004A48();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_10006F0E8();
      uint64_t v16 = v15;
      char v18 = v17 & 1;
      uint64_t v19 = sub_10006F0C8();
      uint64_t v34 = v20;
      uint64_t v35 = v19;
      char v33 = v21 & 1;
      sub_100038EA0(v14, v16, v18);
      swift_bridgeObjectRelease();
      sub_10006EEE8();
      uint64_t v22 = sub_10006F0D8();
      uint64_t v24 = v23;
      char v26 = v25 & 1;
      sub_10006F098();
      uint64_t v27 = sub_10006F0C8();
      uint64_t v29 = v28;
      char v31 = v30;
      swift_release();
      sub_100038EA0(v22, v24, v26);
      swift_bridgeObjectRelease();
      sub_10006F0B8();
      sub_100038EA0(v27, v29, v31 & 1);
      swift_bridgeObjectRelease();
      sub_100038EA0(v35, v34, v33);
    }
    else
    {
      sub_100004A48();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_10006F0E8();
      uint64_t v11 = v10;
      char v13 = v12 & 1;
      sub_10006F0C8();
      sub_100038EA0(v9, v11, v13);
    }
    swift_bridgeObjectRelease();
    sub_10006EF88();
  }
  sub_100004960(&qword_100092E60);
  sub_1000555FC();
  sub_10006EF88();
  double result = *(double *)&v36;
  *(_OWORD *)a2 = v36;
  *(_OWORD *)(a2 + 16) = v37;
  *(unsigned char *)(a2 + 32) = v38;
  *(unsigned char *)(a2 + 33) = v39;
  return result;
}

uint64_t sub_1000552EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100055300);
}

uint64_t sub_100055304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100055318);
}

uint64_t sub_100055320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100055334);
}

uint64_t sub_100055338(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleGaugeEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000553A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000553B8);
}

uint64_t sub_1000553BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SingleGaugeEntry(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10005542C()
{
  return sub_100055580(&qword_100092E08, &qword_100092E10, (void (*)(void))sub_100053DA8);
}

uint64_t sub_100055470()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005548C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000554A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100054EA0(*(void *)(v1 + 24), a1);
}

double sub_1000554C4@<D0>(uint64_t a1@<X8>)
{
  return sub_100054F10(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000554E0()
{
  unint64_t result = qword_100092E48;
  if (!qword_100092E48)
  {
    sub_1000049A4(&qword_100092E38);
    sub_10002643C(&qword_100092598, &qword_1000925A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092E48);
  }
  return result;
}

uint64_t sub_100055580(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000049A4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000555FC()
{
  unint64_t result = qword_100092E58;
  if (!qword_100092E58)
  {
    sub_1000049A4(&qword_100092E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092E58);
  }
  return result;
}

uint64_t sub_100055668(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004960(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000556CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006EE18();
  *a1 = result;
  return result;
}

uint64_t sub_1000556F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006EE18();
  *a1 = result;
  return result;
}

uint64_t sub_100055724()
{
  return sub_10006EE28();
}

uint64_t sub_100055750()
{
  return sub_10006EE28();
}

unint64_t sub_100055780()
{
  unint64_t result = qword_100092E80;
  if (!qword_100092E80)
  {
    sub_1000049A4(&qword_100092E30);
    sub_1000049A4(&qword_100092E20);
    sub_1000049A4(&qword_100092E18);
    sub_10006EFF8();
    sub_10002643C(&qword_100092E68, &qword_100092E18);
    sub_100053E84(&qword_100092E70, (void (*)(uint64_t))&type metadata accessor for AccessoryCircularGaugeStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092E80);
  }
  return result;
}

uint64_t *sub_1000558E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    char v8 = (int *)type metadata accessor for SecurityAccessoryEntry();
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v9);
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *(void *)uint64_t v10 = v13;
    *((void *)v10 + 1) = v12;
    uint64_t v14 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v14;
    uint64_t v15 = *((void *)v11 + 5);
    *((void *)v10 + 4) = *((void *)v11 + 4);
    *((void *)v10 + 5) = v15;
    v10[48] = v11[48];
    uint64_t v16 = v8[6];
    char v17 = (uint64_t *)((char *)a1 + v16);
    char v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
    uint64_t v20 = *(int *)(a3 + 20);
    char v21 = (uint64_t *)((char *)a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_10006F348();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      void *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100055ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for SecurityAccessoryEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10006F348();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100055BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v12 = *(void *)(a2 + v8);
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *(void *)uint64_t v9 = v12;
  *(void *)(v9 + 8) = v11;
  uint64_t v13 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v13;
  uint64_t v14 = *(void *)(v10 + 40);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = v14;
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  uint64_t v15 = v7[6];
  uint64_t v16 = (void *)(a1 + v15);
  char v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (void *)(a1 + v19);
  char v21 = (void *)(a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_10006F348();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *uint64_t v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100055D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  if (a1 != a2)
  {
    uint64_t v17 = *(int *)(a3 + 20);
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    sub_100039078(a1 + v17, &qword_100091DD8);
    sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_10006F348();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100055F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_10006F348();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000560AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *(void *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v10 + 40);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  uint64_t v14 = v7[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  if (a1 != a2)
  {
    uint64_t v19 = *(int *)(a3 + 20);
    uint64_t v20 = (void *)(a1 + v19);
    char v21 = (const void *)(a2 + v19);
    sub_100039078(a1 + v19, &qword_100091DD8);
    uint64_t v22 = sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_10006F348();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100056254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100056268);
}

uint64_t sub_100056268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SecurityAccessoryEntry();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100004960(&qword_1000922E0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100056364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100056378);
}

uint64_t sub_100056378(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SecurityAccessoryEntry();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100004960(&qword_1000922E0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for SecurityAccessoryView(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092EE0);
}

void sub_1000564A0()
{
  type metadata accessor for SecurityAccessoryEntry();
  if (v0 <= 0x3F)
  {
    sub_10003597C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100056568()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100056584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v21 = type metadata accessor for SecurityAccessoryViewAccessoryCircular(0);
  __chkstk_darwin(v21);
  uint64_t v20 = (uint64_t)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004960(&qword_100092F18);
  __chkstk_darwin(v23);
  uint64_t v22 = (uint64_t)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004960(&qword_100092F20);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004960(&qword_100092F28);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SecurityAccessoryViewSystemSmall(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10006F348();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SecurityAccessoryView(0);
  sub_1000534F4((uint64_t)v15);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_100056C90(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SecurityAccessoryEntry);
    sub_100056C90((uint64_t)v11, (uint64_t)v6, type metadata accessor for SecurityAccessoryViewSystemSmall);
    swift_storeEnumTagMultiPayload();
    sub_100056C48(&qword_100092F38, (void (*)(uint64_t))type metadata accessor for SecurityAccessoryViewSystemSmall);
    sub_100056C48(&qword_100092F40, (void (*)(uint64_t))type metadata accessor for SecurityAccessoryViewAccessoryCircular);
    sub_10006EF88();
    sub_100056CF8((uint64_t)v8, v22);
    swift_storeEnumTagMultiPayload();
    sub_100056B6C();
    sub_10006EF88();
    sub_100039078((uint64_t)v8, &qword_100092F28);
    return sub_100056D60((uint64_t)v11, type metadata accessor for SecurityAccessoryViewSystemSmall);
  }
  else
  {
    uint64_t v18 = v22;
    if (v16 == enum case for WidgetFamily.accessoryCircular(_:))
    {
      uint64_t v19 = v20;
      sub_100056C90(v1, v20, (uint64_t (*)(void))type metadata accessor for SecurityAccessoryEntry);
      sub_100056C90(v19, (uint64_t)v6, type metadata accessor for SecurityAccessoryViewAccessoryCircular);
      swift_storeEnumTagMultiPayload();
      sub_100056C48(&qword_100092F38, (void (*)(uint64_t))type metadata accessor for SecurityAccessoryViewSystemSmall);
      sub_100056C48(&qword_100092F40, (void (*)(uint64_t))type metadata accessor for SecurityAccessoryViewAccessoryCircular);
      sub_10006EF88();
      sub_100056CF8((uint64_t)v8, v18);
      swift_storeEnumTagMultiPayload();
      sub_100056B6C();
      sub_10006EF88();
      sub_100039078((uint64_t)v8, &qword_100092F28);
      return sub_100056D60(v19, type metadata accessor for SecurityAccessoryViewAccessoryCircular);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_100056B6C();
      sub_10006EF88();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
}

uint64_t type metadata accessor for SecurityAccessoryViewAccessoryCircular(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100092FA0);
}

uint64_t type metadata accessor for SecurityAccessoryViewSystemSmall(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100093030);
}

unint64_t sub_100056B6C()
{
  unint64_t result = qword_100092F30;
  if (!qword_100092F30)
  {
    sub_1000049A4(&qword_100092F28);
    sub_100056C48(&qword_100092F38, (void (*)(uint64_t))type metadata accessor for SecurityAccessoryViewSystemSmall);
    sub_100056C48(&qword_100092F40, (void (*)(uint64_t))type metadata accessor for SecurityAccessoryViewAccessoryCircular);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100092F30);
  }
  return result;
}

uint64_t sub_100056C48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100056C90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100056CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004960(&qword_100092F28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100056D60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100056DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100056DEC);
}

uint64_t sub_100056DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100056E04);
}

uint64_t *sub_100056E0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SecurityAccessoryEntry();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
    uint64_t v12 = *((void *)v10 + 3);
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *((void *)v9 + 3) = v12;
    uint64_t v13 = *((void *)v10 + 5);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((void *)v9 + 5) = v13;
    v9[48] = v10[48];
    uint64_t v14 = v6[6];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    int v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100056F44(uint64_t a1)
{
  uint64_t v2 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for SecurityAccessoryEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100056FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v10 = *(void *)(a2 + v6);
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *(void *)uint64_t v7 = v10;
  *(void *)(v7 + 8) = v9;
  uint64_t v11 = *(void *)(v8 + 24);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = v11;
  uint64_t v12 = *(void *)(v8 + 40);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = v12;
  *(unsigned char *)(v7 + 48) = *(unsigned char *)(v8 + 48);
  uint64_t v13 = v5[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000570D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  *(void *)(v7 + 8) = *(void *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 48) = *(unsigned char *)(v8 + 48);
  uint64_t v9 = v5[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  return a1;
}

uint64_t sub_100057210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  long long v9 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v9;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(unsigned char *)(v7 + 48) = *(unsigned char *)(v8 + 48);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  return a1;
}

uint64_t sub_1000572B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for SecurityAccessoryEntry();
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  *(void *)(v7 + 8) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v8 + 24);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v8 + 40);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 48) = *(unsigned char *)(v8 + 48);
  uint64_t v12 = v5[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  return a1;
}

uint64_t sub_1000573A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000573B8);
}

uint64_t sub_1000573BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecurityAccessoryEntry();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100057428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005743C);
}

uint64_t sub_100057440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecurityAccessoryEntry();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1000574B0()
{
  uint64_t result = type metadata accessor for SecurityAccessoryEntry();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100057540()
{
  unint64_t result = qword_100093068;
  if (!qword_100093068)
  {
    sub_1000049A4(&qword_100093070);
    sub_100056B6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093068);
  }
  return result;
}

uint64_t sub_1000575BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000575D8()
{
  unint64_t v1 = (long long *)(v0 + *(int *)(type metadata accessor for SecurityAccessoryEntry() + 20));
  long long v2 = v1[2];
  char v17 = *((unsigned char *)v1 + 48);
  long long v3 = *v1;
  v16[1] = v1[1];
  v16[2] = v2;
  v16[0] = v3;
  sub_10006EE98();
  sub_100057758(v16, (uint64_t)__src);
  v19[328] = 1;
  memcpy(&v19[7], __src, 0x141uLL);
  sub_10006F2E8();
  sub_10006ECE8();
  v19[344] = v12;
  v19[336] = v14;
  memcpy(v5, v19, sizeof(v5));
  uint64_t v6 = v11;
  char v7 = v12;
  uint64_t v8 = v13;
  char v9 = v14;
  long long v10 = v15;
  sub_100004960(&qword_100093078);
  sub_100059188();
  sub_10006F138();
  return sub_100059310((uint64_t)__src);
}

uint64_t sub_100057758@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10006EF18();
  sub_100057A5C(a1, (uint64_t)v15);
  *(_OWORD *)((char *)&v17[11] + 7) = v15[11];
  *(_OWORD *)((char *)&v17[12] + 7) = v15[12];
  *(_OWORD *)((char *)&v17[13] + 7) = v16[0];
  v17[14] = *(_OWORD *)((char *)v16 + 9);
  *(_OWORD *)((char *)&v17[7] + 7) = v15[7];
  *(_OWORD *)((char *)&v17[8] + 7) = v15[8];
  *(_OWORD *)((char *)&v17[9] + 7) = v15[9];
  *(_OWORD *)((char *)&v17[10] + 7) = v15[10];
  *(_OWORD *)((char *)&v17[3] + 7) = v15[3];
  *(_OWORD *)((char *)&v17[4] + 7) = v15[4];
  *(_OWORD *)((char *)&v17[5] + 7) = v15[5];
  *(_OWORD *)((char *)&v17[6] + 7) = v15[6];
  *(_OWORD *)((char *)v17 + 7) = v15[0];
  *(_OWORD *)((char *)&v17[1] + 7) = v15[1];
  char v18 = 1;
  *(_OWORD *)((char *)&v17[2] + 7) = v15[2];
  LOBYTE(a1) = sub_10006F018();
  sub_10006EC98();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  *(_OWORD *)((char *)&__src[24] + 1) = v17[11];
  *(_OWORD *)((char *)&__src[26] + 1) = v17[12];
  *(_OWORD *)((char *)&__src[28] + 1) = v17[13];
  *(_OWORD *)((char *)&__src[30] + 1) = v17[14];
  *(_OWORD *)((char *)&__src[16] + 1) = v17[7];
  *(_OWORD *)((char *)&__src[18] + 1) = v17[8];
  *(_OWORD *)((char *)&__src[20] + 1) = v17[9];
  *(_OWORD *)((char *)&__src[22] + 1) = v17[10];
  *(_OWORD *)((char *)&__src[8] + 1) = v17[3];
  *(_OWORD *)((char *)&__src[10] + 1) = v17[4];
  *(_OWORD *)((char *)&__src[12] + 1) = v17[5];
  *(_OWORD *)((char *)&__src[14] + 1) = v17[6];
  *(_OWORD *)((char *)&__src[2] + 1) = v17[0];
  *(_OWORD *)((char *)&__src[4] + 1) = v17[1];
  char v19 = 0;
  __src[0] = v4;
  __src[1] = 0;
  LOBYTE(__src[2]) = 1;
  *(_OWORD *)((char *)&__src[6] + 1) = v17[2];
  LOBYTE(__src[33]) = (_BYTE)a1;
  __src[34] = v5;
  __src[35] = v7;
  __src[36] = v9;
  __src[37] = v11;
  LOBYTE(__src[38]) = 0;
  memcpy((void *)a2, __src, 0x131uLL);
  long long v35 = v17[11];
  long long v36 = v17[12];
  long long v37 = v17[13];
  long long v38 = v17[14];
  long long v31 = v17[7];
  long long v32 = v17[8];
  long long v33 = v17[9];
  long long v34 = v17[10];
  long long v13 = v17[2];
  long long v27 = v17[3];
  long long v28 = v17[4];
  long long v29 = v17[5];
  long long v30 = v17[6];
  long long v24 = v17[0];
  long long v25 = v17[1];
  char v21 = 0;
  *(void *)(a2 + 312) = 0;
  *(unsigned char *)(a2 + 320) = 0;
  v22[0] = v4;
  v22[1] = 0;
  char v23 = 1;
  long long v26 = v13;
  char v39 = (char)a1;
  uint64_t v40 = v6;
  uint64_t v41 = v8;
  uint64_t v42 = v10;
  uint64_t v43 = v12;
  char v44 = 0;
  sub_100059228((uint64_t)__src);
  return sub_100059310((uint64_t)v22);
}

uint64_t sub_100057A5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10006EE98();
  sub_100058210((uint64_t)&v83);
  uint64_t v73 = v83;
  int v70 = v84;
  uint64_t v81 = v85;
  uint64_t v71 = v86;
  uint64_t v80 = v87;
  uint64_t v72 = v88;
  int v69 = v89;
  uint64_t v77 = a1;
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v83 = v7;
  uint64_t v84 = v8;
  unint64_t v76 = sub_100004A48();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10006F0E8();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_10006F058();
  uint64_t v14 = enum case for Font.Design.default(_:);
  LODWORD(v63) = enum case for Font.Design.default(_:);
  uint64_t v15 = sub_10006F048();
  uint64_t v16 = *(void *)(v15 - 8);
  char v17 = *(void (**)(void, void))(v16 + 104);
  uint64_t v62 = v16 + 104;
  uint64_t v64 = (void (*)(void, void, uint64_t))v17;
  uint64_t v18 = v14;
  uint64_t v19 = v15;
  uint64_t v60 = v15;
  v17(v6, v18);
  uint64_t v20 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56);
  v59[1] = v16 + 56;
  long long v61 = v20;
  v20((uint64_t)v6, 0, 1, v19);
  v59[0] = v6;
  sub_10006F078();
  sub_100039078((uint64_t)v6, &qword_100092508);
  uint64_t v21 = sub_10006F0C8();
  uint64_t v23 = v22;
  LOBYTE(v19) = v24;
  swift_release();
  sub_100038EA0(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_10006F208();
  uint64_t v68 = sub_10006F0A8();
  uint64_t v67 = v25;
  char v27 = v26;
  uint64_t v79 = v28;
  swift_release();
  int v75 = v27 & 1;
  sub_100038EA0(v21, v23, v19 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v66 = swift_getKeyPath();
  uint64_t v65 = swift_getKeyPath();
  uint64_t v29 = v77[5];
  uint64_t v83 = v77[4];
  uint64_t v84 = v29;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_10006F0E8();
  uint64_t v32 = v31;
  LOBYTE(v11) = v33 & 1;
  sub_10006F068();
  uint64_t v34 = v59[0];
  uint64_t v35 = v60;
  v64(v59[0], v63, v60);
  v61(v34, 0, 1, v35);
  sub_10006F078();
  sub_100039078(v34, &qword_100092508);
  uint64_t v36 = sub_10006F0C8();
  uint64_t v38 = v37;
  LOBYTE(v34) = v39;
  swift_release();
  sub_100038EA0(v30, v32, v11);
  swift_bridgeObjectRelease();
  sub_10006F208();
  uint64_t v63 = sub_10006F0A8();
  unint64_t v76 = v40;
  LOBYTE(v9) = v41;
  uint64_t v77 = v42;
  swift_release();
  LODWORD(v64) = v9 & 1;
  sub_100038EA0(v36, v38, v34 & 1);
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_getKeyPath();
  uint64_t v62 = v43;
  char v82 = v75;
  char v106 = 1;
  char v44 = v70;
  char v105 = v70;
  char v45 = v69;
  char v103 = v69;
  char v101 = 0;
  char v99 = v75;
  char v95 = 0;
  char v92 = v9 & 1;
  char v90 = 0;
  *(_DWORD *)(a2 + 17) = v83;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v83 + 3);
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v104;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v104[3];
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v102;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v102[3];
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v100;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v100[3];
  char v46 = v99;
  *(_DWORD *)(a2 + 113) = *(_DWORD *)v98;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v98[3];
  *(_DWORD *)(a2 + 140) = *(_DWORD *)&v97[3];
  *(_DWORD *)(a2 + 137) = *(_DWORD *)v97;
  *(_DWORD *)(a2 + 156) = *(_DWORD *)&v96[3];
  *(_DWORD *)(a2 + 153) = *(_DWORD *)v96;
  char v47 = v95;
  *(unsigned char *)(a2 + 183) = v94;
  *(_DWORD *)(a2 + 179) = v93;
  char v48 = v92;
  *(_DWORD *)(a2 + 204) = *(_DWORD *)&v91[3];
  *(_DWORD *)(a2 + 201) = *(_DWORD *)v91;
  char v49 = v90;
  *(void *)a2 = v74;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v73;
  *(unsigned char *)(a2 + 32) = v44;
  uint64_t v50 = v71;
  *(void *)(a2 + 40) = v81;
  *(void *)(a2 + 48) = v50;
  uint64_t v51 = v72;
  *(void *)(a2 + 56) = v80;
  *(void *)(a2 + 64) = v51;
  *(unsigned char *)(a2 + 72) = v45;
  *(void *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 88) = 0;
  uint64_t v52 = v68;
  uint64_t v53 = v67;
  *(void *)(a2 + 96) = v68;
  *(void *)(a2 + 104) = v53;
  *(unsigned char *)(a2 + 112) = v46;
  uint64_t v54 = KeyPath;
  *(void *)(a2 + 120) = v79;
  *(void *)(a2 + 128) = v54;
  *(unsigned char *)(a2 + 136) = 1;
  *(void *)(a2 + 144) = v66;
  *(unsigned char *)(a2 + 152) = 0;
  *(void *)(a2 + 160) = v65;
  *(void *)(a2 + 168) = 2;
  *(unsigned char *)(a2 + 176) = v47;
  *(_WORD *)(a2 + 177) = 256;
  uint64_t v55 = v63;
  unint64_t v56 = v76;
  *(void *)(a2 + 184) = v63;
  *(void *)(a2 + 192) = v56;
  *(unsigned char *)(a2 + 200) = v48;
  *(void *)(a2 + 208) = v77;
  *(void *)(a2 + 216) = v43;
  *(void *)(a2 + 224) = 1;
  *(unsigned char *)(a2 + 232) = v49;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v52, v53, v75);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v57 = v76;
  LOBYTE(v54) = (_BYTE)v64;
  sub_100038D70(v55, v76, (char)v64);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100038EA0(v55, v57, v54);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100038EA0(v52, v53, v82);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100058210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004960(&qword_100093098);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_10006F238();
  sub_10006EF28();
  uint64_t v8 = sub_10006EF38();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  uint64_t v9 = sub_10006F248();
  swift_release();
  sub_100039078((uint64_t)v7, &qword_100093098);
  uint64_t v10 = sub_10006F048();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  uint64_t v11 = sub_10006F078();
  sub_100039078((uint64_t)v4, &qword_100092508);
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = result;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_100058404()
{
  uint64_t v1 = sub_10006EC08();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10006F4B8();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = v0 + *(int *)(type metadata accessor for SecurityAccessoryEntry() + 20);
  sub_100004A48();
  if ((sub_10006F888() & 1) != 0
    || (sub_10006F888() & 1) != 0
    || (sub_10006F888() & 1) != 0
    || (sub_10006F888() & 1) != 0
    || (sub_10006F888() & 1) != 0
    || (sub_10006F888() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v3 + 32);
    uint64_t v4 = *(void *)(v3 + 40);
    BOOL v6 = v5 == 0x9380E29380E2 && v4 == 0xA600000000000000;
    if (v6 || (sub_10006FCE8() & 1) != 0)
    {
      sub_10006F4C8();
      sub_10006EBF8();
      sub_10006F518();
      sub_100004960(&qword_1000925C0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_100070910;
      sub_10006F4A8();
      sub_10006EBF8();
      uint64_t v8 = sub_10006F518();
      uint64_t v10 = v9;
      *(void *)(v7 + 56) = &type metadata for String;
      *(void *)(v7 + 64) = sub_10004F2A0();
      *(void *)(v7 + 32) = v8;
      *(void *)(v7 + 40) = v10;
      sub_10006F4E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10006F4C8();
      sub_10006EBF8();
      sub_10006F518();
      sub_100004960(&qword_1000925C0);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_100070910;
      *(void *)(v11 + 56) = &type metadata for String;
      *(void *)(v11 + 64) = sub_10004F2A0();
      *(void *)(v11 + 32) = v5;
      *(void *)(v11 + 40) = v4;
      swift_bridgeObjectRetain();
      sub_10006F4E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10006F4A8();
    sub_10006EBF8();
    sub_10006F518();
  }
  return sub_10006F0E8();
}

uint64_t sub_100058988@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = sub_10006EFD8();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004960(&qword_1000930A0);
  uint64_t v26 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004960(&qword_1000930A8);
  __chkstk_darwin(v25);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (long long *)(v1 + *(int *)(type metadata accessor for SecurityAccessoryEntry() + 20));
  long long v11 = v10[2];
  char v32 = *((unsigned char *)v10 + 48);
  long long v12 = *v10;
  v31[1] = v10[1];
  void v31[2] = v11;
  v31[0] = v12;
  uint64_t v13 = sub_10006F2E8();
  uint64_t v15 = v14;
  sub_100058D20((uint64_t)v31, (uint64_t)v29);
  *(void *)&long long v28 = v13;
  *((void *)&v28 + 1) = v15;
  sub_10006EFB8();
  uint64_t v16 = sub_100004960(&qword_1000930B0);
  uint64_t v17 = sub_10002643C(&qword_1000930B8, &qword_1000930B0);
  sub_10006F178();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  void v33[8] = v29[7];
  v33[9] = v29[8];
  uint64_t v34 = v30;
  v33[4] = v29[3];
  v33[5] = v29[4];
  v33[6] = v29[5];
  v33[7] = v29[6];
  v33[0] = v28;
  v33[1] = v29[0];
  void v33[2] = v29[1];
  v33[3] = v29[2];
  sub_100059574((uint64_t)v33);
  uint64_t v18 = sub_100058404();
  uint64_t v20 = v19;
  LOBYTE(v3) = v21 & 1;
  *(void *)&long long v28 = v16;
  *((void *)&v28 + 1) = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v24;
  sub_10006F158();
  sub_100038EA0(v18, v20, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v22);
  sub_10006ED78();
  return sub_100039078((uint64_t)v9, &qword_1000930A8);
}

uint64_t sub_100058D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100004960(&qword_100093098);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned int v46 = sub_10006EFA8();
  if (*(unsigned char *)(a1 + 48)) {
    float v10 = 0.2;
  }
  else {
    float v10 = 1.0;
  }
  sub_10006ECB8();
  double v11 = v84;
  unsigned int v12 = v85;
  unsigned int v13 = v86;
  unsigned int v38 = v86;
  uint64_t v14 = v87;
  uint64_t v43 = v88;
  uint64_t v15 = v89;
  uint64_t v16 = sub_10006F2E8();
  uint64_t v44 = v17;
  uint64_t v45 = v16;
  type metadata accessor for SecurityAccessoryEntry();
  sub_10006F2E8();
  sub_10006ECE8();
  uint64_t v47 = v90;
  uint64_t v48 = v92;
  uint64_t v41 = v95;
  uint64_t v42 = v94;
  unsigned __int8 v52 = v91;
  unsigned __int8 v50 = v93;
  swift_bridgeObjectRetain();
  sub_10006F238();
  sub_10006EF28();
  uint64_t v18 = sub_10006EF38();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 0, 1, v18);
  uint64_t v40 = sub_10006F248();
  swift_release();
  sub_100039078((uint64_t)v9, &qword_100093098);
  sub_10006F068();
  uint64_t v19 = sub_10006F048();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
  uint64_t v39 = sub_10006F078();
  sub_100039078((uint64_t)v6, &qword_100092508);
  uint64_t KeyPath = swift_getKeyPath();
  int v36 = v52;
  int v37 = v50;
  *(double *)&long long v55 = v11 * 0.5;
  *((double *)&v55 + 1) = v11;
  unsigned int v21 = v12;
  *(void *)&long long v56 = __PAIR64__(v13, v12);
  *((void *)&v56 + 1) = v14;
  uint64_t v22 = v43;
  uint64_t v23 = v44;
  *(void *)&long long v57 = v43;
  *((void *)&v57 + 1) = v15;
  unsigned int v24 = v46;
  *(void *)&long long v58 = __PAIR64__(LODWORD(v10), v46);
  WORD4(v58) = 256;
  *(_DWORD *)((char *)&v58 + 10) = v53;
  HIWORD(v58) = v54;
  uint64_t v25 = v45;
  *(void *)&long long v59 = v45;
  *((void *)&v59 + 1) = v44;
  *(void *)&long long v60 = v47;
  BYTE8(v60) = v52;
  *(_DWORD *)((char *)&v60 + 9) = *(_DWORD *)v51;
  HIDWORD(v60) = *(_DWORD *)&v51[3];
  *(void *)&long long v61 = v48;
  BYTE8(v61) = v50;
  *(_DWORD *)((char *)&v61 + 9) = *(_DWORD *)v49;
  HIDWORD(v61) = *(_DWORD *)&v49[3];
  uint64_t v27 = v41;
  uint64_t v26 = v42;
  *(void *)&long long v62 = v42;
  *((void *)&v62 + 1) = v41;
  long long v28 = v55;
  long long v29 = v56;
  long long v30 = v58;
  *(_OWORD *)(a2 + 32) = v57;
  *(_OWORD *)(a2 + 48) = v30;
  *(_OWORD *)a2 = v28;
  *(_OWORD *)(a2 + 16) = v29;
  long long v31 = v59;
  long long v32 = v60;
  long long v33 = v62;
  *(_OWORD *)(a2 + 96) = v61;
  *(_OWORD *)(a2 + 112) = v33;
  *(_OWORD *)(a2 + 64) = v31;
  *(_OWORD *)(a2 + 80) = v32;
  *(void *)(a2 + 128) = v40;
  *(void *)(a2 + 136) = KeyPath;
  *(void *)(a2 + 144) = v39;
  sub_1000595C8((uint64_t)&v55);
  v63[0] = v11 * 0.5;
  v63[1] = v11;
  unsigned int v64 = v21;
  unsigned int v65 = v38;
  uint64_t v66 = v14;
  uint64_t v67 = v22;
  uint64_t v68 = v15;
  unsigned int v69 = v24;
  float v70 = v10;
  __int16 v71 = 256;
  int v72 = v53;
  __int16 v73 = v54;
  uint64_t v74 = v25;
  uint64_t v75 = v23;
  uint64_t v76 = v47;
  char v77 = v36;
  *(_DWORD *)&v78[3] = *(_DWORD *)&v51[3];
  *(_DWORD *)uint64_t v78 = *(_DWORD *)v51;
  uint64_t v79 = v48;
  char v80 = v37;
  *(_DWORD *)uint64_t v81 = *(_DWORD *)v49;
  *(_DWORD *)&v81[3] = *(_DWORD *)&v49[3];
  uint64_t v82 = v26;
  uint64_t v83 = v27;
  return sub_10002C038((uint64_t)v63);
}

uint64_t sub_10005916C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100059188()
{
  unint64_t result = qword_100093080;
  if (!qword_100093080)
  {
    sub_1000049A4(&qword_100093078);
    sub_10002643C(&qword_100093088, &qword_100093090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093080);
  }
  return result;
}

uint64_t sub_100059228(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  char v4 = *(unsigned char *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 216);
  uint64_t v8 = *(void *)(a1 + 208);
  char v6 = *(unsigned char *)(a1 + 224);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v8, v7, v6);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100059310(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  char v4 = *(unsigned char *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 216);
  uint64_t v8 = *(void *)(a1 + 208);
  char v6 = *(unsigned char *)(a1 + 224);
  swift_release();
  swift_release();
  swift_release();
  sub_100038EA0(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100038EA0(v8, v7, v6);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000593F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10006EE48();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10005942C()
{
  return sub_10006EE58();
}

uint64_t sub_10005945C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10006EDB8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10005948C()
{
  return sub_10006EDC8();
}

uint64_t sub_1000594B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10006EDF8();
  *a1 = result;
  return result;
}

uint64_t sub_1000594E0()
{
  return sub_10006EE08();
}

uint64_t sub_100059508@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10006EE48();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10005953C()
{
  return sub_10006EE58();
}

uint64_t sub_100059574(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000595C8(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000595F8()
{
  unint64_t result = qword_1000930C0;
  if (!qword_1000930C0)
  {
    sub_1000049A4(&qword_1000930C8);
    sub_100059188();
    sub_100056C48(&qword_100091E40, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000930C0);
  }
  return result;
}

unint64_t sub_1000596A8()
{
  unint64_t result = qword_1000930D0;
  if (!qword_1000930D0)
  {
    sub_1000049A4(&qword_1000930A8);
    sub_1000049A4(&qword_1000930B0);
    sub_10002643C(&qword_1000930B8, &qword_1000930B0);
    swift_getOpaqueTypeConformance2();
    sub_100056C48(&qword_100091E40, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000930D0);
  }
  return result;
}

double *sub_1000597B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = a1;
  uint64_t v4 = 0;
  uint64_t v5 = (char *)_swiftEmptyArrayStorage;
  uint64_t v14 = swift_bridgeObjectRetain();
  do
  {
    unsigned __int8 v27 = *(unsigned char *)(v3 + v4 + 32);
    sub_10005E1B4(&v27, a2, (uint64_t)&v20);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (double *)v5;
    }
    uint64_t v7 = v21;
    if (v21)
    {
      uint64_t v8 = v20;
      uint64_t v9 = v22;
      uint64_t v18 = v24;
      uint64_t v19 = v23;
      uint64_t v17 = v25;
      char v10 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_10000C37C(0, *((void *)v5 + 2) + 1, 1, v5);
      }
      unint64_t v12 = *((void *)v5 + 2);
      unint64_t v11 = *((void *)v5 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v5 = sub_10000C37C((char *)(v11 > 1), v12 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v12 + 1;
      char v6 = &v5[56 * v12];
      *((void *)v6 + 4) = v8;
      *((void *)v6 + 5) = v7;
      *((void *)v6 + 6) = v9;
      *((void *)v6 + 7) = v19;
      *((void *)v6 + 8) = v18;
      *((void *)v6 + 9) = v17;
      v6[80] = v10 & 1;
      uint64_t v3 = v14;
    }
    ++v4;
  }
  while (v15 != v4);
  swift_bridgeObjectRelease();
  return (double *)v5;
}

int64_t sub_10005993C(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100059980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[107] = v4;
  v5[106] = a4;
  v5[105] = a3;
  v5[104] = a2;
  v5[103] = a1;
  return _swift_task_switch(sub_1000599B0, 0, 0);
}

uint64_t sub_1000599B0()
{
  long long v29 = v0;
  if (qword_1000916C8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0 + 103;
  unint64_t v2 = (void *)v0[103];
  uint64_t v3 = sub_10006EC68();
  sub_100004B08(v3, (uint64_t)qword_10009A7D0);
  id v4 = v2;
  swift_bridgeObjectRetain_n();
  id v5 = v4;
  char v6 = sub_10006EC48();
  os_log_type_t v7 = sub_10006F818();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = v0[105];
  if (v8)
  {
    os_log_type_t v27 = v7;
    uint64_t v10 = v0[104];
    uint64_t v26 = v0[103];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315650;
    swift_bridgeObjectRetain();
    v0[100] = sub_100022B5C(v10, v9, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    v0[101] = sub_100022B5C(0xD000000000000029, 0x8000000100079120, &v28);
    sub_10006F868();
    *(_WORD *)(v11 + 22) = 2080;
    if (v26)
    {
      id v12 = [v5 name];
      uint64_t v13 = sub_10006F4F8();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v15 = 0xE900000000000065;
      uint64_t v13 = 0x6D6F68206C6C756ELL;
    }
    uint64_t v1 = v0 + 103;
    v0[102] = sub_100022B5C(v13, v15, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  if (*v1)
  {
    uint64_t v16 = qword_100091740;
    id v17 = v5;
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_10009A8D8;
    id v19 = v17;
    uint64_t v20 = (void *)swift_task_alloc();
    v0[108] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_100059D8C;
    uint64_t v21 = v0[105];
    uint64_t v22 = v0[104];
    uint64_t v23 = v0[103];
    return LockScreenDataModel.reloadCharacteristics(matching:for:fetchId:)(v18, v23, v22, v21);
  }
  else
  {
    uint64_t v25 = (uint64_t (*)(double *))v0[1];
    return v25(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100059D8C(uint64_t a1)
{
  unint64_t v2 = *(void **)(*(void *)v1 + 824);
  *(void *)(*(void *)v1 + 872) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_100059EA8, 0, 0);
}

uint64_t sub_100059EA8()
{
  uint64_t v187 = v0;
  uint64_t v1 = (int8x16_t *)(v0 + 680);
  unint64_t v2 = (_OWORD *)(v0 + 184);
  unint64_t v3 = v0 + 648;
  uint64_t v173 = v0 + 696;
  uint64_t v177 = v0 + 688;
  unint64_t v185 = sub_100060618((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v169 = swift_allocObject();
  *(void *)(v169 + 16) = sub_10005B1E4((uint64_t)_swiftEmptyArrayStorage);
  long long v164 = (uint64_t *)(v169 + 16);
  if (qword_100091748 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(v0 + 824);
  long long v5 = *(_OWORD *)&qword_10009A8F0;
  *unint64_t v2 = xmmword_10009A8E0;
  *(_OWORD *)(v0 + 200) = v5;
  *(_OWORD *)(v0 + 216) = xmmword_10009A900;
  *(void *)(v0 + 232) = qword_10009A910;
  uint64_t v6 = v4;
  id v7 = [(id)v6 accessories];
  sub_100004B50(0, (unint64_t *)&qword_1000917F8);
  unint64_t v8 = sub_10006F668();

  *(_OWORD *)unint64_t v3 = *v2;
  *(void *)(v0 + 696) = *(void *)(v0 + 200);
  *uint64_t v1 = vextq_s8(*(int8x16_t *)(v0 + 208), *(int8x16_t *)(v0 + 208), 8uLL);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v182 = v0;
  sub_100004B8C(v0 + 648);
  sub_100004BB8(v173);
  sub_100004BB8(v177);
  sub_100004BB8((uint64_t)v1);
  sub_100004B40(v9);
  uint64_t v10 = sub_100025574(v8, (uint64_t)v2);
  sub_100004BE4(v3);
  sub_100004C10(v173);
  sub_100004C10(v177);
  sub_100004C10((uint64_t)v1);
  sub_100004C3C(v9);
  swift_bridgeObjectRelease();

  if ((unint64_t)v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10006FAC8();
  }
  else
  {
    uint64_t v11 = *(void *)(((unint64_t)v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = v169;
  if (v11)
  {
    if (v11 < 1) {
      goto LABEL_145;
    }
    uint64_t v13 = 0;
    do
    {
      if (((unint64_t)v10 & 0xC000000000000001) != 0) {
        id v14 = (id)sub_10006F9F8();
      }
      else {
        id v14 = *(id *)&v10[v13 + 4];
      }
      unint64_t v15 = v14;
      uint64_t v16 = *(void *)(v0 + 872);
      unint64_t v17 = *(void *)(v0 + 840);
      uint64_t v18 = *(void *)(v0 + 832);
      ++v13;
      v186[0] = v14;
      sub_10005B2E0(v186, v18, v17, v16, v169, &v185);
    }
    while (v11 != v13);
  }
  uint64_t v178 = v0 + 720;
  id v19 = (_OWORD *)(v0 + 128);
  uint64_t v20 = (_OWORD *)(v0 + 664);
  swift_bridgeObjectRelease_n();
  if (qword_100091750 != -1) {
    swift_once();
  }
  uint64_t v21 = *(void **)(v0 + 824);
  long long v22 = *(_OWORD *)&qword_10009A928;
  *id v19 = xmmword_10009A918;
  *(_OWORD *)(v0 + 144) = v22;
  *(_OWORD *)(v0 + 160) = xmmword_10009A938;
  *(void *)(v0 + 176) = qword_10009A948;
  id v23 = v21;
  id v24 = [v23 accessories];
  unint64_t v3 = sub_10006F668();

  *uint64_t v20 = *v19;
  *(_OWORD *)(v0 + 704) = *(_OWORD *)(v0 + 144);
  uint64_t v25 = *(void *)(v0 + 168);
  *(void *)(v0 + 720) = *(void *)(v0 + 160);
  sub_100004B8C(v0 + 664);
  sub_100004BB8(v0 + 704);
  sub_100004BB8(v0 + 712);
  sub_100004BB8(v178);
  sub_100004B40(v25);
  uint64_t v26 = sub_100025574(v3, (uint64_t)v19);
  sub_100004BE4((uint64_t)v20);
  sub_100004C10(v0 + 704);
  sub_100004C10(v0 + 712);
  sub_100004C10(v178);
  sub_100004C3C(v25);
  swift_bridgeObjectRelease();

  if ((unint64_t)v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10006FAC8();
    uint64_t v12 = v169;
    if (!v6) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(((unint64_t)v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v12 = v169;
    if (!v6) {
      goto LABEL_24;
    }
  }
  if (v6 < 1) {
    goto LABEL_146;
  }
  uint64_t v27 = 0;
  do
  {
    if (((unint64_t)v26 & 0xC000000000000001) != 0) {
      id v28 = (id)sub_10006F9F8();
    }
    else {
      id v28 = *(id *)&v26[v27 + 4];
    }
    long long v29 = v28;
    uint64_t v30 = *(void *)(v0 + 872);
    unint64_t v31 = *(void *)(v0 + 840);
    uint64_t v32 = *(void *)(v0 + 832);
    ++v27;
    v186[0] = v28;
    sub_10005BBCC(v186, v32, v31, v30, v12, &v185);
  }
  while (v6 != v27);
LABEL_24:
  uint64_t v179 = v0 + 744;
  long long v33 = (_OWORD *)(v0 + 72);
  uint64_t v34 = (_OWORD *)(v0 + 600);
  uint64_t v35 = (_OWORD *)(v0 + 728);
  swift_bridgeObjectRelease_n();
  if (qword_100091758 != -1) {
    swift_once();
  }
  int v36 = *(void **)(v0 + 824);
  long long v37 = *(_OWORD *)&qword_10009A960;
  *long long v33 = xmmword_10009A950;
  *(_OWORD *)(v0 + 88) = v37;
  *(_OWORD *)(v0 + 104) = xmmword_10009A970;
  *(void *)(v0 + 120) = qword_10009A980;
  id v174 = v36;
  id v38 = [v174 accessories];
  unint64_t v39 = sub_10006F668();

  *uint64_t v34 = *v33;
  *uint64_t v35 = *(_OWORD *)(v0 + 88);
  uint64_t v40 = *(void *)(v0 + 112);
  *(void *)(v0 + 744) = *(void *)(v0 + 104);
  unint64_t v3 = *(void *)(v0 + 120);
  sub_100004B8C(v0 + 600);
  sub_100004BB8(v0 + 728);
  sub_100004BB8(v0 + 736);
  sub_100004BB8(v179);
  sub_100004B40(v40);
  uint64_t v41 = sub_100025574(v39, (uint64_t)v33);
  sub_100004BE4((uint64_t)v34);
  sub_100004C10((uint64_t)v35);
  sub_100004C10(v0 + 736);
  sub_100004C10(v179);
  sub_100004C3C(v40);
  swift_bridgeObjectRelease();

  if ((unint64_t)v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10006FAC8();
    uint64_t v12 = v169;
    if (!v6) {
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(((unint64_t)v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v12 = v169;
    if (!v6) {
      goto LABEL_35;
    }
  }
  if (v6 < 1) {
    goto LABEL_147;
  }
  uint64_t v42 = 0;
  do
  {
    if (((unint64_t)v41 & 0xC000000000000001) != 0) {
      id v43 = (id)sub_10006F9F8();
    }
    else {
      id v43 = *(id *)&v41[v42 + 4];
    }
    uint64_t v44 = v43;
    uint64_t v45 = *(void *)(v0 + 872);
    unint64_t v46 = *(void *)(v0 + 840);
    uint64_t v47 = *(void *)(v0 + 832);
    ++v42;
    v186[0] = v43;
    sub_10005C6AC(v186, v47, v46, v45, v12, &v185);
  }
  while (v6 != v42);
LABEL_35:
  uint64_t v48 = v0 + 752;
  uint64_t v49 = v0 + 760;
  uint64_t v180 = v0 + 768;
  unsigned __int8 v50 = (_OWORD *)(v0 + 240);
  uint64_t v51 = (_OWORD *)(v0 + 616);
  swift_bridgeObjectRelease_n();
  if (qword_100091760 != -1) {
    swift_once();
  }
  unint64_t v167 = *(void *)(v0 + 840);
  uint64_t v170 = *(void *)(v0 + 872);
  uint64_t v175 = *(void *)(v0 + 832);
  unsigned __int8 v52 = *(void **)(v0 + 824);
  long long v53 = *(_OWORD *)&qword_10009A998;
  *unsigned __int8 v50 = xmmword_10009A988;
  *(_OWORD *)(v0 + 256) = v53;
  *(_OWORD *)(v0 + 272) = xmmword_10009A9A8;
  *(void *)(v0 + 288) = qword_10009A9B8;
  id v54 = v52;
  id v55 = [v54 accessories];
  long long v56 = (_OWORD *)sub_10006F668();

  *uint64_t v51 = *v50;
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 256);
  uint64_t v57 = *(void *)(v0 + 280);
  *(void *)(v0 + 768) = *(void *)(v0 + 272);
  sub_100004B8C(v0 + 616);
  sub_100004BB8(v0 + 752);
  sub_100004BB8(v0 + 760);
  sub_100004BB8(v180);
  sub_100004B40(v57);
  long long v58 = sub_100025574((unint64_t)v56, (uint64_t)v50);
  sub_100004BE4((uint64_t)v51);
  sub_100004C10(v48);
  sub_100004C10(v49);
  sub_100004C10(v180);
  sub_100004C3C(v57);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t)sub_10005FF74(0, (unint64_t)v58, v175, v167, v170, v169);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v59 = (void *)v185;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v186[0] = v59;
  uint64_t v12 = sub_10000C9FC(3u);
  uint64_t v62 = v59[2];
  BOOL v63 = (v61 & 1) == 0;
  uint64_t v64 = v62 + v63;
  if (__OFADD__(v62, v63))
  {
    __break(1u);
LABEL_143:
    swift_once();
    while (1)
    {
      unint64_t v168 = *(void *)(v49 + 840);
      uint64_t v171 = *(void *)(v49 + 872);
      uint64_t v176 = *(void *)(v49 + 832);
      uint64_t v68 = *(void **)(v49 + 824);
      uint64_t v69 = qword_10009A9F0;
      long long v71 = xmmword_10009A9D0;
      long long v70 = *(_OWORD *)&qword_10009A9E0;
      *(_OWORD *)uint64_t v48 = xmmword_10009A9C0;
      *(_OWORD *)(v48 + 16) = v71;
      *(_OWORD *)(v48 + 32) = v70;
      *(void *)(v48 + 48) = v69;
      id v166 = v68;
      id v72 = [v166 accessories];
      unint64_t v73 = sub_10006F668();

      *(_OWORD *)long long v58 = *(_OWORD *)v48;
      *long long v56 = *(_OWORD *)(v49 + 32);
      uint64_t v74 = *(void *)(v49 + 56);
      *(void *)(v49 + 792) = *(void *)(v49 + 48);
      sub_100004B8C((uint64_t)v58);
      sub_100004BB8((uint64_t)v56);
      sub_100004BB8(v165);
      sub_100004BB8(v180);
      sub_100004B40(v74);
      unint64_t v3 = v73;
      uint64_t v183 = sub_100025574(v73, v48);
      sub_100004BE4((uint64_t)v58);
      sub_100004C10((uint64_t)v56);
      sub_100004C10(v165);
      sub_100004C10(v180);
      sub_100004C3C(v74);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v75 = _swiftEmptyArrayStorage;
      uint64_t v76 = (uint64_t)sub_1000600B0(_swiftEmptyArrayStorage, (unint64_t)v183, v176, v168, v171, v169);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v77 = *(void *)(v76 + 16);
      if (v77)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v77; ++i)
        {
          if (*(void *)(v76 + 8 * i + 32) == 4)
          {
            char v81 = swift_isUniquelyReferenced_nonNull_native();
            v186[0] = v75;
            if ((v81 & 1) == 0)
            {
              sub_1000231AC(0, *((void *)v75 + 2) + 1, 1);
              uint64_t v75 = (double *)v186[0];
            }
            unint64_t v80 = *((void *)v75 + 2);
            unint64_t v79 = *((void *)v75 + 3);
            if (v80 >= v79 >> 1)
            {
              sub_1000231AC(v79 > 1, v80 + 1, 1);
              uint64_t v75 = (double *)v186[0];
            }
            *((void *)v75 + 2) = v80 + 1;
            *(void *)&v75[v80 + 4] = 4;
          }
        }
        swift_bridgeObjectRelease();
        long long v59 = (void *)v185;
      }
      uint64_t v82 = *((void *)v75 + 2);
      swift_release();
      uint64_t v12 = swift_isUniquelyReferenced_nonNull_native();
      v186[0] = v59;
      uint64_t v6 = sub_10000C9FC(0);
      uint64_t v84 = v59[2];
      BOOL v85 = (v83 & 1) == 0;
      uint64_t v86 = v84 + v85;
      if (__OFADD__(v84, v85)) {
        break;
      }
      LOBYTE(v87) = v83;
      if (v59[3] < v86)
      {
        sub_10000DB74(v86, v12);
        long long v59 = v186[0];
        unint64_t v88 = sub_10000C9FC(0);
        if ((v87 & 1) == (v89 & 1))
        {
          uint64_t v6 = v88;
          goto LABEL_60;
        }
        goto LABEL_77;
      }
      if (!v12)
      {
LABEL_153:
        sub_10000D398();
        long long v59 = v186[0];
      }
LABEL_60:
      unint64_t v185 = (unint64_t)v59;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((v87 & 1) == 0) {
        sub_10000E99C(v6, 0, 0, v59);
      }
      uint64_t v90 = v59[7];
      swift_bridgeObjectRelease();
      uint64_t v91 = *(void *)(v90 + 8 * v6);
      BOOL v92 = __OFADD__(v91, v82);
      uint64_t v93 = v91 + v82;
      if (v92) {
        goto LABEL_148;
      }
      *(void *)(v90 + 8 * v6) = v93;
      if (v77)
      {
        uint64_t v94 = (uint64_t *)(v76 + 32);
        uint64_t v95 = _swiftEmptyArrayStorage;
        uint64_t v12 = 3;
        do
        {
          uint64_t v98 = *v94++;
          if (v98 == 3)
          {
            char v99 = swift_isUniquelyReferenced_nonNull_native();
            v186[0] = v95;
            if ((v99 & 1) == 0)
            {
              sub_1000231AC(0, *((void *)v95 + 2) + 1, 1);
              uint64_t v95 = (double *)v186[0];
            }
            unint64_t v97 = *((void *)v95 + 2);
            unint64_t v96 = *((void *)v95 + 3);
            if (v97 >= v96 >> 1)
            {
              sub_1000231AC(v96 > 1, v97 + 1, 1);
              uint64_t v95 = (double *)v186[0];
            }
            *((void *)v95 + 2) = v97 + 1;
            *(void *)&v95[v97 + 4] = 3;
          }
          --v77;
        }
        while (v77);
        long long v59 = (void *)v185;
      }
      else
      {
        uint64_t v95 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      uint64_t v82 = *((void *)v95 + 2);
      swift_release();
      LOBYTE(v87) = swift_isUniquelyReferenced_nonNull_native();
      v186[0] = v59;
      uint64_t v6 = sub_10000C9FC(5u);
      uint64_t v101 = v59[2];
      BOOL v102 = (v100 & 1) == 0;
      uint64_t v103 = v101 + v102;
      if (!__OFADD__(v101, v102))
      {
        uint64_t v76 = v100;
        if (v59[3] >= v103)
        {
          if ((v87 & 1) == 0)
          {
            sub_10000D398();
            long long v59 = v186[0];
          }
        }
        else
        {
          sub_10000DB74(v103, v87);
          long long v59 = v186[0];
          unint64_t v104 = sub_10000C9FC(5u);
          if ((v76 & 1) != (v105 & 1)) {
            goto LABEL_77;
          }
          uint64_t v6 = v104;
        }
        unint64_t v185 = (unint64_t)v59;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if ((v76 & 1) == 0) {
          sub_10000E99C(v6, 5, 0, v59);
        }
        uint64_t v107 = v59[7];
        swift_bridgeObjectRelease();
        uint64_t v108 = *(void *)(v107 + 8 * v6);
        BOOL v92 = __OFADD__(v108, v82);
        uint64_t v109 = v108 + v82;
        if (v92)
        {
          __break(1u);
        }
        else
        {
          *(void *)(v107 + 8 * v6) = v109;
          unint64_t v3 = 7;
          uint64_t v110 = (char *)_swiftEmptyArrayStorage;
          uint64_t v172 = v182 + 464;
          uint64_t v111 = &byte_10008B9A0;
          do
          {
            unint64_t v113 = *v111;
            double v184 = v111 + 1;
            unint64_t v114 = v185;
            if (*(void *)(v185 + 16) && (unint64_t v115 = sub_10000C9FC(v113), (v116 & 1) != 0)) {
              uint64_t v117 = *(void *)(*(void *)(v114 + 56) + 8 * v115);
            }
            else {
              uint64_t v117 = 0;
            }
            sub_10005FC0C(v113, v117, v172);
            uint64_t v118 = *(void *)(v182 + 464);
            uint64_t v82 = *(void *)(v182 + 472);
            uint64_t v119 = *(void *)(v182 + 488);
            uint64_t v181 = *(void *)(v182 + 480);
            uint64_t v120 = *(void *)(v182 + 496);
            uint64_t v12 = *(void *)(v182 + 504);
            char v121 = *(unsigned char *)(v182 + 512);
            sub_100055668(v172, v182 + 352, &qword_100093120);
            if (*(void *)(v182 + 360))
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v110 = sub_10000C37C(0, *((void *)v110 + 2) + 1, 1, v110);
              }
              unint64_t v123 = *((void *)v110 + 2);
              unint64_t v122 = *((void *)v110 + 3);
              if (v123 >= v122 >> 1) {
                uint64_t v110 = sub_10000C37C((char *)(v122 > 1), v123 + 1, 1, v110);
              }
              *((void *)v110 + 2) = v123 + 1;
              uint64_t v112 = &v110[56 * v123];
              *((void *)v112 + 4) = v118;
              *((void *)v112 + 5) = v82;
              *((void *)v112 + 6) = v181;
              *((void *)v112 + 7) = v119;
              *((void *)v112 + 8) = v120;
              *((void *)v112 + 9) = v12;
              v112[80] = v121 & 1;
            }
            --v3;
            uint64_t v111 = v184;
          }
          while (v3);
          int64_t v124 = sub_10005993C(*(void *)(v182 + 848), (uint64_t)v110);
          uint64_t v6 = v125;
          uint64_t v127 = v126;
          unint64_t v87 = v128;
          uint64_t v77 = v169;
          if (v128)
          {
            uint64_t v12 = sub_10006FD08();
            swift_unknownObjectRetain_n();
            long long v129 = (double *)swift_dynamicCastClass();
            if (!v129)
            {
              swift_unknownObjectRelease();
              long long v129 = _swiftEmptyArrayStorage;
            }
            uint64_t v130 = *((void *)v129 + 2);
            swift_release();
            if (__OFSUB__(v87 >> 1, v127))
            {
              __break(1u);
            }
            else if (v130 == (v87 >> 1) - v127)
            {
              uint64_t v76 = swift_dynamicCastClass();
              if (!v76)
              {
                swift_unknownObjectRelease();
                uint64_t v76 = (uint64_t)_swiftEmptyArrayStorage;
              }
              goto LABEL_106;
            }
            swift_unknownObjectRelease();
          }
          uint64_t v76 = (uint64_t)sub_100051214(v124, v6, v127, v87);
LABEL_106:
          uint64_t v131 = *(void *)(v182 + 848);
          swift_unknownObjectRelease();
          uint64_t v132 = *(void *)(v76 + 16);
          BOOL v92 = __OFSUB__(v131, v132);
          uint64_t v133 = v131 - v132;
          if (!v92)
          {
            if (v133 > 0 && (swift_beginAccess(), uint64_t v134 = *v164, (v135 = *(void *)(*v164 + 16)) != 0))
            {
              if (v133 >= v135)
              {
                char v140 = *(void **)(v182 + 824);
                sub_1000597B4((uint64_t)&off_10008B9A8, v164);
                v186[0] = (void *)v76;
                swift_retain();
                uint64_t v141 = swift_bridgeObjectRetain();
                sub_100023E74(v141);

                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                uint64_t v76 = (uint64_t)v186[0];
              }
              else
              {
                unint64_t v136 = sub_10000CA68(35);
                if (v137)
                {
                  uint64_t v138 = *(void *)(*(void *)(v134 + 56) + 8 * v136);
                  uint64_t v139 = *(void *)(v134 + 16);
                  if (!v139)
                  {
LABEL_118:
                    BOOL v92 = __OFADD__(v138, v139);
                    v138 += v139;
                    if (!v92) {
                      goto LABEL_119;
                    }
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
LABEL_160:
                    v154 = sub_10000C37C(0, *(void *)(v76 + 16) + 1, 1, (char *)v76);
LABEL_134:
                    unint64_t v156 = *((void *)v154 + 2);
                    unint64_t v155 = *((void *)v154 + 3);
                    if (v156 >= v155 >> 1) {
                      v154 = sub_10000C37C((char *)(v155 > 1), v156 + 1, 1, v154);
                    }
                    long long v157 = *(void **)(v182 + 824);
                    *((void *)v154 + 2) = v156 + 1;
                    long long v158 = &v154[56 * v156];
                    long long v159 = *(_OWORD *)v87;
                    long long v160 = *(_OWORD *)(v87 + 16);
                    long long v161 = *(_OWORD *)(v87 + 32);
                    v158[80] = *(unsigned char *)(v87 + 48);
                    *((_OWORD *)v158 + 3) = v160;
                    *((_OWORD *)v158 + 4) = v161;
                    *((_OWORD *)v158 + 2) = v159;

                    sub_10006100C(v134, (void (*)(void, void, void, void, void, void, void))sub_100061050);
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
                    uint64_t v76 = (uint64_t)v154;
LABEL_139:
                    long long v163 = *(uint64_t (**)(uint64_t))(v182 + 8);
                    return v163(v76);
                  }
                }
                else
                {
                  uint64_t v138 = 0;
                  uint64_t v139 = *(void *)(v134 + 16);
                  if (!v139) {
                    goto LABEL_118;
                  }
                }
                unint64_t v142 = sub_10000CA68(19);
                if (v143)
                {
                  uint64_t v139 = *(void *)(*(void *)(v134 + 56) + 8 * v142);
                  goto LABEL_118;
                }
LABEL_119:
                uint64_t v144 = *(void *)(v134 + 16);
                if (v144)
                {
                  unint64_t v145 = sub_10000CA68(14);
                  if (v146)
                  {
                    uint64_t v144 = *(void *)(*(void *)(v134 + 56) + 8 * v145);
                    goto LABEL_122;
                  }
                }
                else
                {
LABEL_122:
                  BOOL v92 = __OFADD__(v138, v144);
                  v138 += v144;
                  if (v92) {
                    goto LABEL_158;
                  }
                }
                uint64_t v147 = *(void *)(v134 + 16);
                if (v147)
                {
                  unint64_t v148 = sub_10000CA68(30);
                  if (v149)
                  {
                    uint64_t v147 = *(void *)(*(void *)(v134 + 56) + 8 * v148);
                    goto LABEL_126;
                  }
                }
                else
                {
LABEL_126:
                  BOOL v92 = __OFADD__(v138, v147);
                  v138 += v147;
                  if (v92) {
                    goto LABEL_159;
                  }
                }
                uint64_t v150 = *(void *)(v134 + 16);
                if (v150)
                {
                  unint64_t v151 = sub_10000CA68(49);
                  if (v152) {
                    uint64_t v150 = *(void *)(*(void *)(v134 + 56) + 8 * v151);
                  }
                  else {
                    uint64_t v150 = 0;
                  }
                }
                if (__OFADD__(v138, v150))
                {
                  __break(1u);
                  goto LABEL_157;
                }
                uint64_t v134 = v182 + 408;
                sub_10005FC0C(6uLL, v138 + v150, v182 + 408);
                sub_100055668(v182 + 408, v182 + 296, &qword_100093120);
                if (*(void *)(v182 + 304))
                {
                  unint64_t v87 = v182 + 520;
                  long long v153 = *(_OWORD *)(v182 + 312);
                  *(_OWORD *)(v182 + 520) = *(_OWORD *)(v182 + 296);
                  *(_OWORD *)(v182 + 536) = v153;
                  *(_OWORD *)(v182 + 552) = *(_OWORD *)(v182 + 328);
                  *(unsigned char *)(v182 + 568) = *(unsigned char *)(v182 + 344);
                  swift_retain();
                  sub_10006100C(v182 + 408, (void (*)(void, void, void, void, void, void, void))sub_100060FBC);
                  v154 = (char *)v76;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    goto LABEL_160;
                  }
                  goto LABEL_134;
                }
                long long v162 = *(void **)(v182 + 824);
                swift_release();
              }
            }
            else
            {
              swift_release();
            }
            swift_bridgeObjectRelease();
            goto LABEL_139;
          }
        }
        __break(1u);
        goto LABEL_153;
      }
LABEL_149:
      __break(1u);
LABEL_150:
      sub_10000D398();
      long long v59 = v186[0];
LABEL_42:
      uint64_t v165 = v182 + 784;
      uint64_t v180 = v182 + 792;
      unint64_t v185 = (unint64_t)v59;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((v6 & 1) == 0) {
        sub_10000E99C(v12, 3, 0, v59);
      }
      uint64_t v49 = v182;
      uint64_t v48 = v182 + 16;
      long long v58 = (double *)(v182 + 632);
      long long v56 = (_OWORD *)(v182 + 776);
      uint64_t v67 = v59[7];
      swift_bridgeObjectRelease();
      *(void *)(v67 + 8 * v12) = v3;
      if (qword_100091768 != -1) {
        goto LABEL_143;
      }
    }
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  LOBYTE(v6) = v61;
  if (v59[3] >= v64)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_42;
    }
    goto LABEL_150;
  }
  sub_10000DB74(v64, isUniquelyReferenced_nonNull_native);
  long long v59 = v186[0];
  unint64_t v65 = sub_10000C9FC(3u);
  if ((v6 & 1) == (v66 & 1))
  {
    uint64_t v12 = v65;
    goto LABEL_42;
  }
LABEL_77:
  return sub_10006FD48();
}

unint64_t sub_10005B1E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004960(&qword_100091CD0);
  unint64_t v2 = (void *)sub_10006FAF8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_10000CA68(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    _OWORD v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10005B2E0(void **a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  BOOL v10 = *a1;
  if (qword_1000916C8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10006EC68();
  sub_100004B08(v11, (uint64_t)qword_10009A7D0);
  id v12 = v10;
  swift_bridgeObjectRetain_n();
  id v13 = v12;
  id v14 = sub_10006EC48();
  os_log_type_t v15 = sub_10006F818();
  if (!os_log_type_enabled(v14, v15))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  os_log_type_t v62 = v15;
  uint64_t v63 = a4;
  uint64_t v16 = 0x6E776F6E6B6E75;
  uint64_t v17 = swift_slowAlloc();
  uint64_t v64 = (void *)swift_slowAlloc();
  id v72 = (id)swift_slowAlloc();
  *(_DWORD *)uint64_t v17 = 136315906;
  swift_bridgeObjectRetain();
  v70[0] = sub_100022B5C(a2, a3, (uint64_t *)&v72);
  sub_10006F868();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v17 + 12) = 2080;
  id v18 = [v13 service];
  if (v18
    && (id v19 = v18, v20 = [v18 accessory], v19, v20))
  {
    id v21 = [v20 name];

    uint64_t v16 = sub_10006F4F8();
    unint64_t v23 = v22;
  }
  else
  {
    unint64_t v23 = 0xE700000000000000;
  }
  sub_100022B5C(v16, v23, (uint64_t *)&v72);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 22) = 2112;
  v70[0] = v13;
  id v24 = v13;
  sub_10006F868();
  void *v64 = v13;

  *(_WORD *)(v17 + 32) = 2112;
  if ([v24 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v68 = 0u;
    long long v69 = 0u;
  }
  sub_100055668((uint64_t)&v68, (uint64_t)v70, &qword_100091810);
  if (!v71)
  {
    sub_100010C2C((uint64_t)v70);
    goto LABEL_16;
  }
  sub_100004B50(0, &qword_100091E50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    NSString v25 = sub_10006F4D8();
    goto LABEL_17;
  }
  NSString v25 = v67;
LABEL_17:
  v70[0] = v25;
  sub_10006F868();
  char v6 = (char)v64;
  v64[1] = v25;

  _os_log_impl((void *)&_mh_execute_header, v14, v62, "{%s} garage door opener '%s' %@ cached value is %@", (uint8_t *)v17, 0x2Au);
  sub_100004960((uint64_t *)&unk_100092030);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  a4 = v63;
LABEL_18:
  if ((sub_10003D62C(v13, a4) & 1) == 0)
  {
    if ([v13 value])
    {
      sub_10006F898();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v68 = 0u;
      long long v69 = 0u;
    }
    sub_100055668((uint64_t)&v68, (uint64_t)v70, &qword_100091810);
    if (v71)
    {
      sub_100004B50(0, &qword_100091E48);
      if (swift_dynamicCast())
      {
        id v26 = v72;
        id v27 = [v72 integerValue];

        if (v27 == (id)1) {
          return;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v70[0] = *a6;
        uint64_t v29 = v70[0];
        *a6 = 0x8000000000000000;
        unint64_t v31 = sub_10000C9FC(1u);
        uint64_t v32 = *(void *)(v29 + 16);
        BOOL v33 = (v30 & 1) == 0;
        uint64_t v34 = v32 + v33;
        if (__OFADD__(v32, v33))
        {
          __break(1u);
          goto LABEL_55;
        }
        LOBYTE(a4) = v30;
        if (*(void *)(v29 + 24) >= v34)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            goto LABEL_56;
          }
          goto LABEL_47;
        }
        sub_10000DB74(v34, isUniquelyReferenced_nonNull_native);
        uint64_t v29 = v70[0];
        unint64_t v35 = sub_10000C9FC(1u);
        if ((a4 & 1) == (v36 & 1))
        {
          unint64_t v31 = v35;
          while (1)
          {
LABEL_47:
            *a6 = v29;
            swift_bridgeObjectRelease();
            uint64_t v59 = *a6;
            swift_bridgeObjectRetain();
            if ((a4 & 1) == 0) {
              sub_10000E99C(v31, 1, 0, v59);
            }
            a4 = *(void *)(v59 + 56);
            swift_bridgeObjectRelease();
            uint64_t v60 = *(void *)(a4 + 8 * v31);
            BOOL v50 = __OFADD__(v60, 1);
            uint64_t v61 = v60 + 1;
            if (!v50) {
              break;
            }
LABEL_55:
            __break(1u);
LABEL_56:
            sub_10000D398();
            uint64_t v29 = v70[0];
          }
          *(void *)(a4 + 8 * v31) = v61;
          return;
        }
LABEL_58:
        sub_10006FD48();
        __break(1u);
        return;
      }
    }
    else
    {
      sub_100010C2C((uint64_t)v70);
    }
  }
  long long v37 = (uint64_t *)(a5 + 16);
  swift_beginAccess();
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v68 = *(void *)(a5 + 16);
  uint64_t v39 = v68;
  *(void *)(a5 + 16) = 0x8000000000000000;
  unint64_t v41 = sub_10000CA68(19);
  uint64_t v42 = *(void *)(v39 + 16);
  BOOL v43 = (v40 & 1) == 0;
  uint64_t v44 = v42 + v43;
  if (__OFADD__(v42, v43))
  {
    __break(1u);
    goto LABEL_52;
  }
  char v6 = v40;
  if (*(void *)(v39 + 24) >= v44)
  {
    if ((v38 & 1) == 0) {
      goto LABEL_53;
    }
  }
  else
  {
    sub_10000DE3C(v44, v38);
    uint64_t v39 = v68;
    unint64_t v45 = sub_10000CA68(19);
    if ((v6 & 1) != (v46 & 1))
    {
      sub_10006FD48();
      __break(1u);
      goto LABEL_58;
    }
    unint64_t v41 = v45;
  }
  while (1)
  {
    *long long v37 = v39;
    swift_bridgeObjectRelease();
    uint64_t v47 = *v37;
    swift_bridgeObjectRetain();
    if ((v6 & 1) == 0) {
      sub_10000E99C(v41, 19, 0, v47);
    }
    uint64_t v48 = *(void *)(v47 + 56);
    uint64_t v49 = *(void *)(v48 + 8 * v41);
    BOOL v50 = __OFADD__(v49, 1);
    uint64_t v51 = v49 + 1;
    if (!v50) {
      break;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    sub_10000D3A4();
    uint64_t v39 = v68;
  }
  *(void *)(v48 + 8 * v41) = v51;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  unsigned __int8 v52 = sub_10006EC48();
  os_log_type_t v53 = sub_10006F818();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = swift_slowAlloc();
    *(void *)&long long v68 = swift_slowAlloc();
    *(_DWORD *)uint64_t v54 = 136315394;
    swift_bridgeObjectRetain();
    v70[0] = sub_100022B5C(a2, a3, (uint64_t *)&v68);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v54 + 12) = 2048;
    swift_beginAccess();
    uint64_t v55 = *v37;
    if (*(void *)(*v37 + 16) && (unint64_t v56 = sub_10000CA68(19), (v57 & 1) != 0)) {
      uint64_t v58 = *(void *)(*(void *)(v55 + 56) + 8 * v56);
    }
    else {
      uint64_t v58 = 0;
    }
    swift_endAccess();
    swift_release();
    v70[0] = v58;
    sub_10006F868();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "{%s} non-responsive garage door opener count: %ld", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

void sub_10005BBCC(void **a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9 = *a1;
  if (qword_1000916C8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10006EC68();
  sub_100004B08(v10, (uint64_t)qword_10009A7D0);
  id v11 = v9;
  swift_bridgeObjectRetain_n();
  id v12 = v11;
  id v13 = sub_10006EC48();
  os_log_type_t v14 = sub_10006F818();
  os_log_type_t v15 = &LockScreenDataModel;
  if (!os_log_type_enabled(v13, v14))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  os_log_type_t v85 = v14;
  uint64_t v86 = a6;
  unint64_t v87 = v13;
  uint64_t v16 = swift_slowAlloc();
  uint64_t v84 = (void *)swift_slowAlloc();
  id v97 = (id)swift_slowAlloc();
  *(_DWORD *)uint64_t v16 = 136315906;
  swift_bridgeObjectRetain();
  v95[0] = sub_100022B5C(a2, a3, (uint64_t *)&v97);
  sub_10006F868();
  unint64_t v88 = a3;
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v16 + 12) = 2080;
  id v17 = [v12 service];
  if (v17)
  {
    id v18 = v17;
    id v19 = [v17 serviceType];
    sub_10006F4F8();

    os_log_type_t v15 = &LockScreenDataModel;
    char v20 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();

    if (v20 == 51) {
      char v21 = 0;
    }
    else {
      char v21 = v20;
    }
    uint64_t v22 = ServiceKind.localizedDescription.getter(v21);
    unint64_t v24 = v23;
  }
  else
  {
    unint64_t v24 = 0xE300000000000000;
    uint64_t v22 = 7104878;
  }
  uint64_t v25 = 0x6E776F6E6B6E75;
  v95[0] = sub_100022B5C(v22, v24, (uint64_t *)&v97);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 22) = 2080;
  id v26 = [v12 (SEL)v15[365].count];
  if (v26
    && (id v27 = v26, v28 = [v26 accessory], v27, v28))
  {
    id v29 = [v28 name];

    uint64_t v25 = sub_10006F4F8();
    unint64_t v31 = v30;
  }
  else
  {
    unint64_t v31 = 0xE700000000000000;
  }
  v95[0] = sub_100022B5C(v25, v31, (uint64_t *)&v97);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 32) = 2112;
  if ([v12 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v93 = 0u;
    long long v94 = 0u;
  }
  a3 = v88;
  sub_100055668((uint64_t)&v93, (uint64_t)v95, &qword_100091810);
  if (!v96)
  {
    sub_100010C2C((uint64_t)v95);
    goto LABEL_22;
  }
  sub_100004B50(0, &qword_100091E50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_22:
    NSString v32 = sub_10006F4D8();
    goto LABEL_23;
  }
  NSString v32 = v92;
LABEL_23:
  v95[0] = v32;
  sub_10006F868();
  *uint64_t v84 = v32;

  _os_log_impl((void *)&_mh_execute_header, v87, v85, "{%s} %s '%s' cached value is %@", (uint8_t *)v16, 0x2Au);
  sub_100004960((uint64_t *)&unk_100092030);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  a6 = v86;
LABEL_24:
  id v33 = [v12 count:v84];
  if (!v33) {
    return;
  }
  uint64_t v34 = v33;
  id v35 = [v33 serviceType];
  sub_10006F4F8();

  unsigned int v36 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  if (v36 == 51) {
    uint64_t v37 = 0;
  }
  else {
    uint64_t v37 = v36;
  }
  if ((sub_10003D62C(v12, a4) & 1) == 0)
  {
    if ([v12 value])
    {
      sub_10006F898();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v93 = 0u;
      long long v94 = 0u;
    }
    sub_100055668((uint64_t)&v93, (uint64_t)v95, &qword_100091810);
    if (v96)
    {
      sub_100004B50(0, &qword_100091E48);
      if (swift_dynamicCast())
      {
        id v38 = v97;
        uint64_t v39 = (uint64_t)[v97 integerValue];

        if (v39 < 1) {
          return;
        }
        if (v37 == 49)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v95[0] = *a6;
          unint64_t v73 = (void *)v95[0];
          *a6 = 0x8000000000000000;
          unint64_t v43 = sub_10000C9FC(4u);
          uint64_t v75 = v73[2];
          BOOL v76 = (v74 & 1) == 0;
          uint64_t v77 = v75 + v76;
          if (!__OFADD__(v75, v76))
          {
            LOBYTE(v39) = v74;
            if (v73[3] >= v77) {
              goto LABEL_68;
            }
            sub_10000DB74(v77, isUniquelyReferenced_nonNull_native);
            unint64_t v73 = (void *)v95[0];
            unint64_t v78 = sub_10000C9FC(4u);
            if ((v39 & 1) == (v79 & 1))
            {
              unint64_t v43 = v78;
              goto LABEL_70;
            }
            goto LABEL_82;
          }
        }
        else
        {
          if (v37 != 14) {
            return;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v95[0] = *a6;
          uint64_t v41 = v95[0];
          *a6 = 0x8000000000000000;
          unint64_t v43 = sub_10000C9FC(2u);
          uint64_t v44 = *(void *)(v41 + 16);
          BOOL v45 = (v42 & 1) == 0;
          uint64_t v46 = v44 + v45;
          if (!__OFADD__(v44, v45))
          {
            LOBYTE(v39) = v42;
            if (*(void *)(v41 + 24) >= v46)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                goto LABEL_80;
              }
              goto LABEL_63;
            }
            sub_10000DB74(v46, isUniquelyReferenced_nonNull_native);
            uint64_t v41 = v95[0];
            unint64_t v47 = sub_10000C9FC(2u);
            if ((v39 & 1) == (v48 & 1))
            {
              unint64_t v43 = v47;
              while (1)
              {
LABEL_63:
                *a6 = v41;
                swift_bridgeObjectRelease();
                unint64_t v73 = (void *)*a6;
                swift_bridgeObjectRetain();
                if ((v39 & 1) == 0) {
                  sub_10000E99C(v43, 2, 0, v73);
                }
                uint64_t v39 = v73[7];
                swift_bridgeObjectRelease();
                uint64_t v80 = *(void *)(v39 + 8 * v43);
                BOOL v64 = __OFADD__(v80, 1);
                uint64_t v81 = v80 + 1;
                if (!v64) {
                  break;
                }
                __break(1u);
LABEL_68:
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_10000D398();
                  unint64_t v73 = (void *)v95[0];
                }
LABEL_70:
                *a6 = v73;
                swift_bridgeObjectRelease();
                uint64_t v82 = *a6;
                swift_bridgeObjectRetain();
                if ((v39 & 1) == 0) {
                  sub_10000E99C(v43, 4, 0, v82);
                }
                uint64_t v39 = *(void *)(v82 + 56);
                swift_bridgeObjectRelease();
                uint64_t v83 = *(void *)(v39 + 8 * v43);
                BOOL v64 = __OFADD__(v83, 1);
                uint64_t v81 = v83 + 1;
                if (!v64) {
                  break;
                }
LABEL_79:
                __break(1u);
LABEL_80:
                sub_10000D398();
                uint64_t v41 = v95[0];
              }
              *(void *)(v39 + 8 * v43) = v81;
              return;
            }
LABEL_82:
            sub_10006FD48();
            __break(1u);
            return;
          }
          __break(1u);
        }
        __break(1u);
        goto LABEL_79;
      }
    }
    else
    {
      sub_100010C2C((uint64_t)v95);
    }
  }
  uint64_t v89 = a2;
  unint64_t v49 = a3;
  BOOL v50 = (uint64_t *)(a5 + 16);
  swift_beginAccess();
  char v51 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v93 = *(void *)(a5 + 16);
  uint64_t v52 = v93;
  *(void *)(a5 + 16) = 0x8000000000000000;
  unint64_t v54 = sub_10000CA68(v37);
  uint64_t v55 = *(void *)(v52 + 16);
  BOOL v56 = (v53 & 1) == 0;
  uint64_t v57 = v55 + v56;
  if (__OFADD__(v55, v56))
  {
    __break(1u);
    goto LABEL_75;
  }
  LOBYTE(a6) = v53;
  if (*(void *)(v52 + 24) >= v57)
  {
    if ((v51 & 1) == 0) {
      goto LABEL_76;
    }
  }
  else
  {
    sub_10000DE3C(v57, v51);
    uint64_t v52 = v93;
    unint64_t v58 = sub_10000CA68(v37);
    if ((a6 & 1) != (v59 & 1))
    {
      sub_10006FD48();
      __break(1u);
      goto LABEL_82;
    }
    unint64_t v54 = v58;
  }
  while (1)
  {
    unint64_t v60 = v49;
    *BOOL v50 = v52;
    swift_bridgeObjectRelease();
    uint64_t v61 = *v50;
    swift_bridgeObjectRetain();
    if ((a6 & 1) == 0) {
      sub_10000E99C(v54, v37, 0, v61);
    }
    uint64_t v62 = *(void *)(v61 + 56);
    uint64_t v63 = *(void *)(v62 + 8 * v54);
    BOOL v64 = __OFADD__(v63, 1);
    uint64_t v65 = v63 + 1;
    if (!v64) {
      break;
    }
LABEL_75:
    __break(1u);
LABEL_76:
    sub_10000D3A4();
    uint64_t v52 = v93;
  }
  *(void *)(v62 + 8 * v54) = v65;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  char v66 = sub_10006EC48();
  os_log_type_t v67 = sub_10006F818();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    *(void *)&long long v93 = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 136315394;
    swift_bridgeObjectRetain();
    v95[0] = sub_100022B5C(v89, v60, (uint64_t *)&v93);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v68 + 12) = 2048;
    swift_beginAccess();
    uint64_t v69 = *v50;
    if (*(void *)(*v50 + 16) && (unint64_t v70 = sub_10000CA68(v37), (v71 & 1) != 0)) {
      uint64_t v72 = *(void *)(*(void *)(v69 + 56) + 8 * v70);
    }
    else {
      uint64_t v72 = 0;
    }
    swift_endAccess();
    swift_release();
    v95[0] = v72;
    sub_10006F868();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "{%s} non-responsive motorized doors & windows count: %ld", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

void sub_10005C6AC(void **a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  LOBYTE(v7) = v6;
  id v11 = *a1;
  if (qword_1000916C8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10006EC68();
  sub_100004B08(v12, (uint64_t)qword_10009A7D0);
  id v13 = v11;
  swift_bridgeObjectRetain_n();
  id v14 = v13;
  os_log_type_t v15 = sub_10006EC48();
  os_log_type_t v16 = sub_10006F818();
  unint64_t v88 = (void *)a3;
  if (!os_log_type_enabled(v15, v16))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  unint64_t v87 = a6;
  uint64_t v17 = 0x6E776F6E6B6E75;
  uint64_t v18 = swift_slowAlloc();
  uint64_t v86 = (void *)swift_slowAlloc();
  id v96 = (id)swift_slowAlloc();
  *(_DWORD *)uint64_t v18 = 136315650;
  swift_bridgeObjectRetain();
  v94[0] = sub_100022B5C(a2, a3, (uint64_t *)&v96);
  sub_10006F868();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v18 + 12) = 2080;
  id v19 = [v14 service];
  if (v19
    && (char v20 = v19, v21 = [v19 accessory], v20, v21))
  {
    id v22 = [v21 name];

    uint64_t v17 = sub_10006F4F8();
    unint64_t v24 = v23;
  }
  else
  {
    unint64_t v24 = 0xE700000000000000;
  }
  v94[0] = sub_100022B5C(v17, v24, (uint64_t *)&v96);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 22) = 2112;
  if ([v14 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v92 = 0u;
    long long v93 = 0u;
  }
  sub_100055668((uint64_t)&v92, (uint64_t)v94, &qword_100091810);
  if (!v95)
  {
    sub_100010C2C((uint64_t)v94);
    goto LABEL_16;
  }
  sub_100004B50(0, &qword_100091E50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    NSString v25 = sub_10006F4D8();
    goto LABEL_17;
  }
  NSString v25 = v91;
LABEL_17:
  v94[0] = v25;
  sub_10006F868();
  *uint64_t v86 = v25;

  _os_log_impl((void *)&_mh_execute_header, v15, v16, "{%s} contact sensor '%s' cached value is: %@", (uint8_t *)v18, 0x20u);
  sub_100004960((uint64_t *)&unk_100092030);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  a6 = v87;
  LOBYTE(v7) = v6;
LABEL_18:
  [v14 service:v86];
  if (!v26) {
    return;
  }
  id v27 = v26;
  id v28 = [v26 associatedServiceType];
  if (!v28)
  {

    return;
  }
  id v29 = v28;
  sub_10006F4F8();

  unsigned int v30 = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  if (v30 == 51) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = v30;
  }
  if ((sub_10003D62C(v14, a4) & 1) == 0)
  {
    if ([v14 value])
    {
      sub_10006F898();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v92 = 0u;
      long long v93 = 0u;
    }
    sub_100055668((uint64_t)&v92, (uint64_t)v94, &qword_100091810);
    if (v95)
    {
      sub_100004B50(0, &qword_100091E48);
      if (swift_dynamicCast())
      {
        id v32 = v96;
        unsigned int v33 = [v96 BOOLValue];

        if (!v33) {
          return;
        }
        if (v31 == 14)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v94[0] = *a6;
          char v74 = (void *)v94[0];
          *a6 = 0x8000000000000000;
          unint64_t v37 = sub_10000C9FC(2u);
          uint64_t v76 = v74[2];
          BOOL v77 = (v75 & 1) == 0;
          uint64_t v78 = v76 + v77;
          if (!__OFADD__(v76, v77))
          {
            LOBYTE(v7) = v75;
            if (v74[3] >= v78) {
              goto LABEL_69;
            }
            sub_10000DB74(v78, isUniquelyReferenced_nonNull_native);
            char v74 = (void *)v94[0];
            unint64_t v79 = sub_10000C9FC(2u);
            if ((v7 & 1) == (v80 & 1))
            {
              unint64_t v37 = v79;
              goto LABEL_71;
            }
            goto LABEL_91;
          }
        }
        else
        {
          if (v31 == 49)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v94[0] = *a6;
            uint64_t v67 = v94[0];
            *a6 = 0x8000000000000000;
            unint64_t v37 = sub_10000C9FC(4u);
            uint64_t v69 = *(void *)(v67 + 16);
            BOOL v70 = (v68 & 1) == 0;
            uint64_t v71 = v69 + v70;
            if (!__OFADD__(v69, v70))
            {
              LOBYTE(v7) = v68;
              if (*(void *)(v67 + 24) >= v71)
              {
                if (isUniquelyReferenced_nonNull_native) {
                  goto LABEL_64;
                }
                goto LABEL_89;
              }
              sub_10000DB74(v71, isUniquelyReferenced_nonNull_native);
              uint64_t v67 = v94[0];
              unint64_t v72 = sub_10000C9FC(4u);
              if ((v7 & 1) == (v73 & 1))
              {
                unint64_t v37 = v72;
                goto LABEL_64;
              }
              goto LABEL_91;
            }
          }
          else
          {
            if (v31 != 19) {
              return;
            }
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v94[0] = *a6;
            id v35 = (void *)v94[0];
            *a6 = 0x8000000000000000;
            unint64_t v37 = sub_10000C9FC(1u);
            uint64_t v38 = v35[2];
            BOOL v39 = (v36 & 1) == 0;
            uint64_t v40 = v38 + v39;
            if (!__OFADD__(v38, v39))
            {
              LOBYTE(v7) = v36;
              if (v35[3] >= v40) {
                goto LABEL_76;
              }
              sub_10000DB74(v40, isUniquelyReferenced_nonNull_native);
              id v35 = (void *)v94[0];
              unint64_t v41 = sub_10000C9FC(1u);
              if ((v7 & 1) == (v42 & 1))
              {
                unint64_t v37 = v41;
                while (1)
                {
                  *a6 = v35;
                  swift_bridgeObjectRelease();
                  uint64_t v84 = *a6;
                  swift_bridgeObjectRetain();
                  if ((v7 & 1) == 0) {
                    sub_10000E99C(v37, 1, 0, v84);
                  }
                  uint64_t v7 = *(void *)(v84 + 56);
                  swift_bridgeObjectRelease();
                  uint64_t v85 = *(void *)(v7 + 8 * v37);
                  BOOL v56 = __OFADD__(v85, 1);
                  uint64_t v82 = v85 + 1;
                  if (!v56) {
                    break;
                  }
LABEL_88:
                  __break(1u);
LABEL_89:
                  sub_10000D398();
                  uint64_t v67 = v94[0];
LABEL_64:
                  *a6 = v67;
                  swift_bridgeObjectRelease();
                  char v74 = (void *)*a6;
                  swift_bridgeObjectRetain();
                  if ((v7 & 1) == 0) {
                    sub_10000E99C(v37, 4, 0, v74);
                  }
                  uint64_t v7 = v74[7];
                  swift_bridgeObjectRelease();
                  uint64_t v81 = *(void *)(v7 + 8 * v37);
                  BOOL v56 = __OFADD__(v81, 1);
                  uint64_t v82 = v81 + 1;
                  if (!v56) {
                    break;
                  }
                  __break(1u);
LABEL_69:
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_10000D398();
                    char v74 = (void *)v94[0];
                  }
LABEL_71:
                  *a6 = v74;
                  swift_bridgeObjectRelease();
                  id v35 = (void *)*a6;
                  swift_bridgeObjectRetain();
                  if ((v7 & 1) == 0) {
                    sub_10000E99C(v37, 2, 0, v35);
                  }
                  uint64_t v7 = v35[7];
                  swift_bridgeObjectRelease();
                  uint64_t v83 = *(void *)(v7 + 8 * v37);
                  BOOL v56 = __OFADD__(v83, 1);
                  uint64_t v82 = v83 + 1;
                  if (!v56) {
                    break;
                  }
                  __break(1u);
LABEL_76:
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_10000D398();
                    id v35 = (void *)v94[0];
                  }
                }
                *(void *)(v7 + 8 * v37) = v82;
                return;
              }
LABEL_91:
              sub_10006FD48();
              __break(1u);
              return;
            }
            __break(1u);
          }
          __break(1u);
        }
        __break(1u);
        goto LABEL_88;
      }
    }
    else
    {
      sub_100010C2C((uint64_t)v94);
    }
  }
  unint64_t v43 = (uint64_t *)(a5 + 16);
  swift_beginAccess();
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v92 = *(void *)(a5 + 16);
  uint64_t v45 = v92;
  *(void *)(a5 + 16) = 0x8000000000000000;
  unint64_t v47 = sub_10000CA68(v31);
  uint64_t v48 = *(void *)(v45 + 16);
  BOOL v49 = (v46 & 1) == 0;
  uint64_t v50 = v48 + v49;
  if (__OFADD__(v48, v49))
  {
    __break(1u);
    goto LABEL_83;
  }
  os_log_type_t v16 = v46;
  if (*(void *)(v45 + 24) >= v50)
  {
    id v14 = v88;
    if ((v44 & 1) == 0) {
      goto LABEL_84;
    }
  }
  else
  {
    sub_10000DE3C(v50, v44);
    uint64_t v45 = v92;
    unint64_t v51 = sub_10000CA68(v31);
    id v14 = v88;
    if ((v16 & 1) != (v52 & 1))
    {
      sub_10006FD48();
      __break(1u);
      goto LABEL_91;
    }
    unint64_t v47 = v51;
  }
  while (1)
  {
    *unint64_t v43 = v45;
    swift_bridgeObjectRelease();
    uint64_t v53 = *v43;
    swift_bridgeObjectRetain();
    if ((v16 & 1) == 0) {
      sub_10000E99C(v47, v31, 0, v53);
    }
    uint64_t v54 = *(void *)(v53 + 56);
    uint64_t v55 = *(void *)(v54 + 8 * v47);
    BOOL v56 = __OFADD__(v55, 1);
    uint64_t v57 = v55 + 1;
    if (!v56) {
      break;
    }
LABEL_83:
    __break(1u);
LABEL_84:
    sub_10000D3A4();
    uint64_t v45 = v92;
  }
  *(void *)(v54 + 8 * v47) = v57;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  unint64_t v58 = sub_10006EC48();
  os_log_type_t v59 = sub_10006F818();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = swift_slowAlloc();
    *(void *)&long long v92 = swift_slowAlloc();
    *(_DWORD *)uint64_t v60 = 136315650;
    swift_bridgeObjectRetain();
    v94[0] = sub_100022B5C(a2, (unint64_t)v14, (uint64_t *)&v92);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v60 + 12) = 2080;
    uint64_t v61 = ServiceKind.localizedDescription.getter(v31);
    v94[0] = sub_100022B5C(v61, v62, (uint64_t *)&v92);
    sub_10006F868();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 22) = 2048;
    swift_beginAccess();
    uint64_t v63 = *v43;
    if (*(void *)(*v43 + 16) && (unint64_t v64 = sub_10000CA68(v31), (v65 & 1) != 0)) {
      uint64_t v66 = *(void *)(*(void *)(v63 + 56) + 8 * v64);
    }
    else {
      uint64_t v66 = 0;
    }
    swift_endAccess();
    swift_release();
    v94[0] = v66;
    sub_10006F868();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "{%s} non-responsive doors & windows & garage doors contact sensors (associatedService '%s') count: %ld", (uint8_t *)v60, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

void sub_10005D1F0(void *a1, void **a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a2;
  if (qword_1000916C8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10006EC68();
  sub_100004B08(v11, (uint64_t)qword_10009A7D0);
  id v12 = v10;
  swift_bridgeObjectRetain_n();
  id v13 = v12;
  id v14 = sub_10006EC48();
  os_log_type_t v15 = sub_10006F818();
  if (!os_log_type_enabled(v14, v15))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v16 = 0x6E776F6E6B6E75;
  uint64_t v17 = swift_slowAlloc();
  BOOL v49 = (void *)swift_slowAlloc();
  id v58 = (id)swift_slowAlloc();
  *(_DWORD *)uint64_t v17 = 136315650;
  swift_bridgeObjectRetain();
  v56[0] = sub_100022B5C(a3, a4, (uint64_t *)&v58);
  sub_10006F868();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v17 + 12) = 2080;
  id v18 = [v13 service];
  if (v18
    && (id v19 = v18, v20 = [v18 accessory], v19, v20))
  {
    id v21 = [v20 name];

    uint64_t v16 = sub_10006F4F8();
    unint64_t v23 = v22;
  }
  else
  {
    unint64_t v23 = 0xE700000000000000;
  }
  v56[0] = sub_100022B5C(v16, v23, (uint64_t *)&v58);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 22) = 2112;
  if ([v13 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  a5 = v50;
  sub_100055668((uint64_t)&v54, (uint64_t)v56, &qword_100091810);
  if (!v57)
  {
    sub_100010C2C((uint64_t)v56);
    goto LABEL_16;
  }
  sub_100004B50(0, &qword_100091E50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    NSString v24 = sub_10006F4D8();
    goto LABEL_17;
  }
  NSString v24 = v53;
LABEL_17:
  v56[0] = v24;
  sub_10006F868();
  void *v49 = v24;

  _os_log_impl((void *)&_mh_execute_header, v14, v15, "{%s} locks '%s' cached value is: %@", (uint8_t *)v17, 0x20u);
  sub_100004960((uint64_t *)&unk_100092030);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  a6 = v51;
LABEL_18:
  if ((sub_10003D62C(v13, a5) & 1) == 0)
  {
    if ([v13 value])
    {
      sub_10006F898();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
    }
    sub_100055668((uint64_t)&v54, (uint64_t)v56, &qword_100091810);
    if (v57)
    {
      sub_100004B50(0, &qword_100091E48);
      if (swift_dynamicCast())
      {
        id v25 = v58;
        id v26 = [v58 integerValue];

        if (v26 != (id)1)
        {
          if (!__OFADD__(*a1, 1))
          {
            ++*a1;
            return;
          }
          __break(1u);
          goto LABEL_48;
        }
        return;
      }
    }
    else
    {
      sub_100010C2C((uint64_t)v56);
    }
  }
  id v27 = (uint64_t *)(a6 + 16);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v54 = *(void *)(a6 + 16);
  uint64_t v29 = v54;
  *(void *)(a6 + 16) = 0x8000000000000000;
  unint64_t v31 = sub_10000CA68(30);
  uint64_t v32 = *(void *)(v29 + 16);
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
    goto LABEL_45;
  }
  os_log_type_t v15 = v30;
  if (*(void *)(v29 + 24) >= v34)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_46;
    }
  }
  else
  {
    sub_10000DE3C(v34, isUniquelyReferenced_nonNull_native);
    uint64_t v29 = v54;
    unint64_t v35 = sub_10000CA68(30);
    if ((v15 & 1) != (v36 & 1))
    {
LABEL_48:
      sub_10006FD48();
      __break(1u);
      return;
    }
    unint64_t v31 = v35;
  }
  while (1)
  {
    *id v27 = v29;
    swift_bridgeObjectRelease();
    uint64_t v37 = *v27;
    swift_bridgeObjectRetain();
    if ((v15 & 1) == 0) {
      sub_10000E99C(v31, 30, 0, v37);
    }
    uint64_t v38 = *(void *)(v37 + 56);
    uint64_t v39 = *(void *)(v38 + 8 * v31);
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (!v40) {
      break;
    }
LABEL_45:
    __break(1u);
LABEL_46:
    sub_10000D3A4();
    uint64_t v29 = v54;
  }
  *(void *)(v38 + 8 * v31) = v41;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  char v42 = sub_10006EC48();
  os_log_type_t v43 = sub_10006F818();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    *(void *)&long long v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136315394;
    swift_bridgeObjectRetain();
    v56[0] = sub_100022B5C(a3, a4, (uint64_t *)&v54);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v44 + 12) = 2048;
    swift_beginAccess();
    uint64_t v45 = *v27;
    if (*(void *)(*v27 + 16) && (unint64_t v46 = sub_10000CA68(30), (v47 & 1) != 0)) {
      uint64_t v48 = *(void *)(*(void *)(v45 + 56) + 8 * v46);
    }
    else {
      uint64_t v48 = 0;
    }
    swift_endAccess();
    swift_release();
    v56[0] = v48;
    sub_10006F868();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "{%s} non-responsive locks count: %ld", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

void sub_10005D9A8(double **a1, void **a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a2;
  if (qword_1000916C8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10006EC68();
  sub_100004B08(v11, (uint64_t)qword_10009A7D0);
  id v12 = v10;
  swift_bridgeObjectRetain_n();
  id v13 = v12;
  id v14 = sub_10006EC48();
  os_log_type_t v15 = sub_10006F818();
  if (!os_log_type_enabled(v14, v15))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  uint64_t v53 = a5;
  long long v54 = a1;
  uint64_t v55 = a6;
  uint64_t v16 = 0x6E776F6E6B6E75;
  uint64_t v17 = swift_slowAlloc();
  char v52 = (void *)swift_slowAlloc();
  id v62 = (id)swift_slowAlloc();
  *(_DWORD *)uint64_t v17 = 136315650;
  swift_bridgeObjectRetain();
  v60[0] = sub_100022B5C(a3, a4, (uint64_t *)&v62);
  sub_10006F868();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v17 + 12) = 2080;
  id v18 = [v13 service];
  if (v18
    && (id v19 = v18, v20 = [v18 accessory], v19, v20))
  {
    id v21 = [v20 name];

    uint64_t v16 = sub_10006F4F8();
    unint64_t v23 = v22;
  }
  else
  {
    unint64_t v23 = 0xE700000000000000;
  }
  v60[0] = sub_100022B5C(v16, v23, (uint64_t *)&v62);
  sub_10006F868();

  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 22) = 2112;
  if ([v13 value])
  {
    sub_10006F898();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v58 = 0u;
    long long v59 = 0u;
  }
  a6 = v55;
  sub_100055668((uint64_t)&v58, (uint64_t)v60, &qword_100091810);
  if (!v61)
  {
    sub_100010C2C((uint64_t)v60);
    goto LABEL_16;
  }
  sub_100004B50(0, &qword_100091E50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    NSString v24 = sub_10006F4D8();
    goto LABEL_17;
  }
  NSString v24 = v57;
LABEL_17:
  v60[0] = v24;
  sub_10006F868();
  void *v52 = v24;

  _os_log_impl((void *)&_mh_execute_header, v14, v15, "{%s} security system '%s' cached value is: %@", (uint8_t *)v17, 0x20u);
  sub_100004960((uint64_t *)&unk_100092030);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  a5 = v53;
  a1 = v54;
LABEL_18:
  if ((sub_10003D62C(v13, a5) & 1) == 0)
  {
    if ([v13 value])
    {
      sub_10006F898();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
    }
    sub_100055668((uint64_t)&v58, (uint64_t)v60, &qword_100091810);
    if (v61)
    {
      sub_100004B50(0, &qword_100091E48);
      if (swift_dynamicCast())
      {
        id v25 = v62;
        id v26 = [v62 integerValue];

        id v27 = *a1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v27 = sub_10000C6C4(0, *((void *)v27 + 2) + 1, 1, v27);
        }
        unint64_t v29 = *((void *)v27 + 2);
        unint64_t v28 = *((void *)v27 + 3);
        if (v29 >= v28 >> 1) {
          id v27 = sub_10000C6C4((double *)(v28 > 1), v29 + 1, 1, v27);
        }
        *((void *)v27 + 2) = v29 + 1;
        *(void *)&v27[v29 + 4] = v26;
        *a1 = v27;
        return;
      }
    }
    else
    {
      sub_100010C2C((uint64_t)v60);
    }
  }
  os_log_type_t v30 = (uint64_t *)(a6 + 16);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v58 = *(void *)(a6 + 16);
  uint64_t v32 = v58;
  *(void *)(a6 + 16) = 0x8000000000000000;
  unint64_t v34 = sub_10000CA68(35);
  uint64_t v35 = *(void *)(v32 + 16);
  BOOL v36 = (v33 & 1) == 0;
  uint64_t v37 = v35 + v36;
  if (__OFADD__(v35, v36))
  {
    __break(1u);
    goto LABEL_46;
  }
  os_log_type_t v15 = v33;
  if (*(void *)(v32 + 24) >= v37)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_47;
    }
  }
  else
  {
    sub_10000DE3C(v37, isUniquelyReferenced_nonNull_native);
    uint64_t v32 = v58;
    unint64_t v38 = sub_10000CA68(35);
    if ((v15 & 1) != (v39 & 1))
    {
      sub_10006FD48();
      __break(1u);
      return;
    }
    unint64_t v34 = v38;
  }
  while (1)
  {
    *os_log_type_t v30 = v32;
    swift_bridgeObjectRelease();
    uint64_t v40 = *v30;
    swift_bridgeObjectRetain();
    if ((v15 & 1) == 0) {
      sub_10000E99C(v34, 35, 0, v40);
    }
    uint64_t v41 = *(void *)(v40 + 56);
    uint64_t v42 = *(void *)(v41 + 8 * v34);
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (!v43) {
      break;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    sub_10000D3A4();
    uint64_t v32 = v58;
  }
  *(void *)(v41 + 8 * v34) = v44;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v45 = sub_10006EC48();
  os_log_type_t v46 = sub_10006F818();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    *(void *)&long long v58 = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 136315394;
    swift_bridgeObjectRetain();
    v60[0] = sub_100022B5C(a3, a4, (uint64_t *)&v58);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v47 + 12) = 2048;
    swift_beginAccess();
    uint64_t v48 = *v30;
    if (*(void *)(*v30 + 16) && (unint64_t v49 = sub_10000CA68(35), (v50 & 1) != 0)) {
      uint64_t v51 = *(void *)(*(void *)(v48 + 56) + 8 * v49);
    }
    else {
      uint64_t v51 = 0;
    }
    swift_endAccess();
    swift_release();
    v60[0] = v51;
    sub_10006F868();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "{%s} non-responsive securiy systems count: %ld", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

uint64_t sub_10005E1B4@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = *a2;
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_10000CA68(v5), (v8 & 1) != 0)) {
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t result = swift_endAccess();
  int v11 = v5 - 14;
  unsigned __int8 v12 = 5;
  switch(v11)
  {
    case 0:
      unsigned __int8 v12 = 2;
      if (v9 != 1) {
        goto LABEL_14;
      }
      goto LABEL_35;
    case 5:
      unsigned __int8 v12 = 1;
      if (v9 == 1) {
        goto LABEL_35;
      }
      goto LABEL_14;
    case 16:
      unsigned __int8 v12 = 3;
      goto LABEL_13;
    case 21:
LABEL_13:
      if (v9 != 1) {
        goto LABEL_14;
      }
      goto LABEL_35;
    case 35:
      unsigned __int8 v12 = 4;
      if (v9 == 1) {
        goto LABEL_35;
      }
      goto LABEL_14;
    default:
      unsigned __int8 v12 = 6;
      if (v9 == 1)
      {
LABEL_35:
        if (qword_100091718 != -1) {
          swift_once();
        }
        os_log_type_t v30 = off_1000930D8;
        if (*((void *)off_1000930D8 + 2) && (unint64_t v31 = sub_10000C9FC(v12), (v32 & 1) != 0))
        {
          os_log_type_t v33 = (uint64_t *)(v30[7] + 16 * v31);
          uint64_t v35 = *v33;
          unint64_t v34 = v33[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v35 = 0;
          unint64_t v34 = 0xE000000000000000;
        }
        if (qword_100091720 != -1) {
          swift_once();
        }
        BOOL v36 = off_1000930E0;
        if (*((void *)off_1000930E0 + 2) && (unint64_t v37 = sub_10000C9FC(v12), (v38 & 1) != 0))
        {
          char v39 = (uint64_t *)(v36[7] + 16 * v37);
          uint64_t v41 = *v39;
          unint64_t v40 = v39[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v41 = 0;
          unint64_t v40 = 0xE000000000000000;
        }
        if (qword_100091730 != -1) {
          swift_once();
        }
        uint64_t v42 = off_1000930F0;
        if (*((void *)off_1000930F0 + 2) && (unint64_t v43 = sub_10000C9FC(6u), (v44 & 1) != 0))
        {
          uint64_t v45 = *(void *)(v42[7] + 16 * v43);
          uint64_t result = swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v45 = 0;
          uint64_t result = 0xE000000000000000;
        }
        *(void *)a3 = v35;
        *(void *)(a3 + 8) = v34;
        *(void *)(a3 + 16) = v41;
        *(void *)(a3 + 24) = v40;
        *(void *)(a3 + 32) = v45;
        *(void *)(a3 + 40) = result;
      }
      else
      {
LABEL_14:
        if (!v9)
        {
          *(unsigned char *)(a3 + 48) = 0;
          *(_OWORD *)(a3 + 16) = 0u;
          *(_OWORD *)(a3 + 32) = 0u;
          *(_OWORD *)a3 = 0u;
          return result;
        }
        if (qword_100091718 != -1) {
          swift_once();
        }
        id v13 = off_1000930D8;
        if (*((void *)off_1000930D8 + 2) && (unint64_t v14 = sub_10000C9FC(v12), (v15 & 1) != 0))
        {
          uint64_t v16 = (uint64_t *)(v13[7] + 16 * v14);
          uint64_t v18 = *v16;
          unint64_t v17 = v16[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v18 = 0;
          unint64_t v17 = 0xE000000000000000;
        }
        if (qword_100091728 != -1) {
          swift_once();
        }
        id v19 = off_1000930E8;
        if (*((void *)off_1000930E8 + 2) && (unint64_t v20 = sub_10000C9FC(v12), (v21 & 1) != 0))
        {
          unint64_t v22 = (uint64_t *)(v19[7] + 16 * v20);
          uint64_t v24 = *v22;
          unint64_t v23 = v22[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v24 = 0;
          unint64_t v23 = 0xE000000000000000;
        }
        if (qword_100091738 != -1) {
          swift_once();
        }
        if (*((void *)off_1000930F8 + 2))
        {
          sub_10000C9FC(6u);
          if (v25) {
            swift_bridgeObjectRetain();
          }
        }
        sub_100004960(&qword_1000925C0);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_100070910;
        *(void *)(v26 + 56) = &type metadata for Int;
        *(void *)(v26 + 64) = &protocol witness table for Int;
        *(void *)(v26 + 32) = v9;
        uint64_t v27 = sub_10006F508();
        uint64_t v29 = v28;
        uint64_t result = swift_bridgeObjectRelease();
        *(void *)a3 = v18;
        *(void *)(a3 + 8) = v17;
        *(void *)(a3 + 16) = v24;
        *(void *)(a3 + 24) = v23;
        *(void *)(a3 + 32) = v27;
        *(void *)(a3 + 40) = v29;
      }
      *(unsigned char *)(a3 + 48) = 0;
      return result;
  }
}

void sub_10005E674(void *a1@<X8>)
{
  *a1 = &off_10008B980;
}

BOOL sub_10005E684(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_10005E698(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_10005E6AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_10005E6C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_10005E6D4()
{
  uint64_t v0 = (void *)sub_10005FAFC((uint64_t)&off_10008B4D0);
  sub_100004960(&qword_100093130);
  uint64_t result = swift_arrayDestroy();
  off_1000930D8 = v0;
  return result;
}

uint64_t sub_10005E728()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006F4B8();
  __chkstk_darwin(v1 - 8);
  sub_100004960(&qword_100093128);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100073D10;
  *(unsigned char *)(inited + 32) = 0;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 40) = sub_10006F518();
  *(void *)(inited + 48) = v3;
  *(unsigned char *)(inited + 56) = 1;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 64) = sub_10006F518();
  *(void *)(inited + 72) = v4;
  *(unsigned char *)(inited + 80) = 2;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 88) = sub_10006F518();
  *(void *)(inited + 96) = v5;
  *(unsigned char *)(inited + 104) = 3;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 112) = sub_10006F518();
  *(void *)(inited + 120) = v6;
  *(unsigned char *)(inited + 128) = 4;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 136) = sub_10006F518();
  *(void *)(inited + 144) = v7;
  *(unsigned char *)(inited + 152) = 5;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 160) = sub_10006F518();
  *(void *)(inited + 168) = v8;
  *(unsigned char *)(inited + 176) = 6;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 184) = sub_10006F518();
  *(void *)(inited + 192) = v9;
  uint64_t v10 = (void *)sub_10005FAFC(inited);
  swift_setDeallocating();
  sub_100004960(&qword_100093130);
  uint64_t result = swift_arrayDestroy();
  off_1000930E0 = v10;
  return result;
}

uint64_t sub_10005EACC()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006F4B8();
  __chkstk_darwin(v1 - 8);
  sub_100004960(&qword_100093128);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100073D10;
  *(unsigned char *)(inited + 32) = 0;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 40) = sub_10006F518();
  *(void *)(inited + 48) = v3;
  *(unsigned char *)(inited + 56) = 1;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 64) = sub_10006F518();
  *(void *)(inited + 72) = v4;
  *(unsigned char *)(inited + 80) = 2;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 88) = sub_10006F518();
  *(void *)(inited + 96) = v5;
  *(unsigned char *)(inited + 104) = 3;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 112) = sub_10006F518();
  *(void *)(inited + 120) = v6;
  *(unsigned char *)(inited + 128) = 4;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 136) = sub_10006F518();
  *(void *)(inited + 144) = v7;
  *(unsigned char *)(inited + 152) = 5;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 160) = sub_10006F518();
  *(void *)(inited + 168) = v8;
  *(unsigned char *)(inited + 176) = 6;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 184) = sub_10006F518();
  *(void *)(inited + 192) = v9;
  uint64_t v10 = (void *)sub_10005FAFC(inited);
  swift_setDeallocating();
  sub_100004960(&qword_100093130);
  uint64_t result = swift_arrayDestroy();
  off_1000930E8 = v10;
  return result;
}

uint64_t sub_10005EE6C()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006F4B8();
  __chkstk_darwin(v1 - 8);
  sub_100004960(&qword_100093128);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100073D10;
  *(unsigned char *)(inited + 32) = 0;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 40) = sub_10006F518();
  *(void *)(inited + 48) = v3;
  *(unsigned char *)(inited + 56) = 1;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 64) = sub_10006F518();
  *(void *)(inited + 72) = v4;
  *(unsigned char *)(inited + 80) = 2;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 88) = sub_10006F518();
  *(void *)(inited + 96) = v5;
  *(unsigned char *)(inited + 104) = 3;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 112) = sub_10006F518();
  *(void *)(inited + 120) = v6;
  *(unsigned char *)(inited + 128) = 4;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 136) = sub_10006F518();
  *(void *)(inited + 144) = v7;
  *(unsigned char *)(inited + 152) = 5;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 160) = sub_10006F518();
  *(void *)(inited + 168) = v8;
  *(unsigned char *)(inited + 176) = 6;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 184) = sub_10006F518();
  *(void *)(inited + 192) = v9;
  uint64_t v10 = (void *)sub_10005FAFC(inited);
  swift_setDeallocating();
  sub_100004960(&qword_100093130);
  uint64_t result = swift_arrayDestroy();
  off_1000930F0 = v10;
  return result;
}

uint64_t sub_10005F284()
{
  uint64_t v0 = sub_10006EC08();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10006F4B8();
  __chkstk_darwin(v1 - 8);
  sub_100004960(&qword_100093128);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100073D10;
  *(unsigned char *)(inited + 32) = 0;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 40) = sub_10006F518();
  *(void *)(inited + 48) = v3;
  *(unsigned char *)(inited + 56) = 1;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 64) = sub_10006F518();
  *(void *)(inited + 72) = v4;
  *(unsigned char *)(inited + 80) = 2;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 88) = sub_10006F518();
  *(void *)(inited + 96) = v5;
  *(unsigned char *)(inited + 104) = 3;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 112) = sub_10006F518();
  *(void *)(inited + 120) = v6;
  *(unsigned char *)(inited + 128) = 4;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 136) = sub_10006F518();
  *(void *)(inited + 144) = v7;
  *(unsigned char *)(inited + 152) = 5;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 160) = sub_10006F518();
  *(void *)(inited + 168) = v8;
  *(unsigned char *)(inited + 176) = 6;
  sub_10006F4A8();
  sub_10006EBF8();
  *(void *)(inited + 184) = sub_10006F518();
  *(void *)(inited + 192) = v9;
  uint64_t v10 = (void *)sub_10005FAFC(inited);
  swift_setDeallocating();
  sub_100004960(&qword_100093130);
  uint64_t result = swift_arrayDestroy();
  off_1000930F8 = v10;
  return result;
}

uint64_t sub_10005F6A0()
{
  sub_100004960(&qword_1000917F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100073D20;
  if (qword_100091748 != -1) {
    swift_once();
  }
  uint64_t v1 = *((void *)&xmmword_10009A8E0 + 1);
  uint64_t v2 = qword_10009A8F0;
  uint64_t v3 = unk_10009A8F8;
  long long v4 = xmmword_10009A900;
  uint64_t v5 = qword_10009A910;
  *(void *)(v0 + 32) = xmmword_10009A8E0;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v0 + 64) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v4 + 1));
  if (qword_100091750 != -1) {
    swift_once();
  }
  uint64_t v6 = *((void *)&xmmword_10009A918 + 1);
  uint64_t v7 = qword_10009A928;
  uint64_t v8 = unk_10009A930;
  long long v9 = xmmword_10009A938;
  uint64_t v10 = qword_10009A948;
  *(void *)(v0 + 88) = xmmword_10009A918;
  *(void *)(v0 + 96) = v6;
  *(void *)(v0 + 104) = v7;
  *(void *)(v0 + 112) = v8;
  *(_OWORD *)(v0 + 120) = v9;
  *(void *)(v0 + 136) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v9 + 1));
  if (qword_100091758 != -1) {
    swift_once();
  }
  uint64_t v11 = *((void *)&xmmword_10009A950 + 1);
  uint64_t v12 = qword_10009A960;
  uint64_t v13 = unk_10009A968;
  long long v14 = xmmword_10009A970;
  uint64_t v15 = qword_10009A980;
  *(void *)(v0 + 144) = xmmword_10009A950;
  *(void *)(v0 + 152) = v11;
  *(void *)(v0 + 160) = v12;
  *(void *)(v0 + 168) = v13;
  *(_OWORD *)(v0 + 176) = v14;
  *(void *)(v0 + 192) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v14 + 1));
  if (qword_100091760 != -1) {
    swift_once();
  }
  uint64_t v16 = *((void *)&xmmword_10009A988 + 1);
  uint64_t v17 = qword_10009A998;
  uint64_t v18 = unk_10009A9A0;
  long long v19 = xmmword_10009A9A8;
  uint64_t v20 = qword_10009A9B8;
  *(void *)(v0 + 200) = xmmword_10009A988;
  *(void *)(v0 + 208) = v16;
  *(void *)(v0 + 216) = v17;
  *(void *)(v0 + 224) = v18;
  *(_OWORD *)(v0 + 232) = v19;
  *(void *)(v0 + 248) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v19 + 1));
  if (qword_100091768 != -1) {
    swift_once();
  }
  uint64_t v21 = *((void *)&xmmword_10009A9C0 + 1);
  long long v22 = xmmword_10009A9D0;
  uint64_t v23 = qword_10009A9E0;
  uint64_t v24 = qword_10009A9E8;
  uint64_t v25 = qword_10009A9F0;
  *(void *)(v0 + 256) = xmmword_10009A9C0;
  *(void *)(v0 + 264) = v21;
  *(_OWORD *)(v0 + 272) = v22;
  *(void *)(v0 + 288) = v23;
  *(void *)(v0 + 296) = v24;
  *(void *)(v0 + 304) = v25;
  qword_10009A8D8 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_100004B40(v24);
}

void sub_10005F988()
{
  *(void *)&xmmword_10009A8E0 = 0xD000000000000013;
  *((void *)&xmmword_10009A8E0 + 1) = 0x8000000100079610;
  qword_10009A8F0 = (uint64_t)&off_10008B7C8;
  unk_10009A8F8 = &_swiftEmptyArrayStorage;
  *((void *)&xmmword_10009A900 + 1) = 0;
  qword_10009A910 = 0;
  *(void *)&xmmword_10009A900 = &off_10008B7F0;
}

void sub_10005F9D4()
{
  *(void *)&xmmword_10009A918 = 0xD000000000000019;
  *((void *)&xmmword_10009A918 + 1) = 0x80000001000795F0;
  qword_10009A928 = (uint64_t)&off_10008B818;
  unk_10009A930 = &_swiftEmptyArrayStorage;
  *((void *)&xmmword_10009A938 + 1) = 0;
  qword_10009A948 = 0;
  *(void *)&xmmword_10009A938 = &off_10008B840;
}

void sub_10005FA20()
{
  *(void *)&xmmword_10009A950 = 0x1000000000000032;
  *((void *)&xmmword_10009A950 + 1) = 0x80000001000795B0;
  qword_10009A960 = (uint64_t)&off_10008B868;
  unk_10009A968 = &off_10008B890;
  *((void *)&xmmword_10009A970 + 1) = 0;
  qword_10009A980 = 0;
  *(void *)&xmmword_10009A970 = &off_10008B8B8;
}

void sub_10005FA6C()
{
  *(void *)&xmmword_10009A988 = 0x736B636F4CLL;
  *((void *)&xmmword_10009A988 + 1) = 0xE500000000000000;
  qword_10009A998 = (uint64_t)&off_10008B8E0;
  unk_10009A9A0 = &_swiftEmptyArrayStorage;
  *((void *)&xmmword_10009A9A8 + 1) = 0;
  qword_10009A9B8 = 0;
  *(void *)&xmmword_10009A9A8 = &off_10008B908;
}

void sub_10005FAB0()
{
  *(void *)&xmmword_10009A9C0 = 0xD000000000000010;
  *((void *)&xmmword_10009A9C0 + 1) = 0x8000000100079590;
  *(void *)&xmmword_10009A9D0 = &off_10008B930;
  *((void *)&xmmword_10009A9D0 + 1) = &_swiftEmptyArrayStorage;
  qword_10009A9E8 = 0;
  qword_10009A9F0 = 0;
  qword_10009A9E0 = (uint64_t)&off_10008B958;
}

unint64_t sub_10005FAFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100004960(&qword_100093138);
  uint64_t v3 = (void *)sub_10006FAF8();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_10000C9FC(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  long long v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    *uint64_t v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    _OWORD v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    long long v14 = v9 + 3;
    unsigned __int8 v4 = *((unsigned char *)v9 - 16);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10000C9FC(v4);
    long long v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10005FC0C@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  if (a2)
  {
    unsigned __int8 v5 = result;
    if (a2 == 1)
    {
      if (qword_100091718 != -1) {
        unint64_t result = swift_once();
      }
      uint64_t v6 = off_1000930D8;
      if (*((void *)off_1000930D8 + 2) && (unint64_t result = sub_10000C9FC(v5), (v7 & 1) != 0))
      {
        char v8 = (uint64_t *)(v6[7] + 16 * result);
        uint64_t v10 = *v8;
        unint64_t v9 = v8[1];
        unint64_t result = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v10 = 0;
        unint64_t v9 = 0xE000000000000000;
      }
      if (qword_100091720 != -1) {
        unint64_t result = swift_once();
      }
      long long v19 = off_1000930E0;
      if (*((void *)off_1000930E0 + 2) && (unint64_t result = sub_10000C9FC(v5), (v20 & 1) != 0))
      {
        uint64_t v21 = (uint64_t *)(v19[7] + 16 * result);
        uint64_t v11 = *v21;
        unint64_t v12 = v21[1];
        unint64_t result = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v11 = 0;
        unint64_t v12 = 0xE000000000000000;
      }
      if (qword_100091730 != -1) {
        unint64_t result = swift_once();
      }
      uint64_t v26 = off_1000930F0;
      if (*((void *)off_1000930F0 + 2) && (unint64_t result = sub_10000C9FC(v5), (v27 & 1) != 0))
      {
        uint64_t v28 = (uint64_t *)(v26[7] + 16 * result);
        uint64_t v13 = *v28;
        unint64_t v14 = v28[1];
        unint64_t result = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v13 = 0;
        unint64_t v14 = 0xE000000000000000;
      }
    }
    else
    {
      if (qword_100091718 != -1) {
        swift_once();
      }
      uint64_t v15 = off_1000930D8;
      if (*((void *)off_1000930D8 + 2) && (unint64_t v16 = sub_10000C9FC(v5), (v17 & 1) != 0))
      {
        uint64_t v18 = (uint64_t *)(v15[7] + 16 * v16);
        uint64_t v10 = *v18;
        unint64_t v9 = v18[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v10 = 0;
        unint64_t v9 = 0xE000000000000000;
      }
      if (qword_100091728 != -1) {
        swift_once();
      }
      long long v22 = off_1000930E8;
      if (*((void *)off_1000930E8 + 2) && (unint64_t v23 = sub_10000C9FC(v5), (v24 & 1) != 0))
      {
        uint64_t v25 = (uint64_t *)(v22[7] + 16 * v23);
        uint64_t v11 = *v25;
        unint64_t v12 = v25[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v11 = 0;
        unint64_t v12 = 0xE000000000000000;
      }
      if (qword_100091738 != -1) {
        swift_once();
      }
      if (*((void *)off_1000930F8 + 2))
      {
        sub_10000C9FC(v5);
        if (v29) {
          swift_bridgeObjectRetain();
        }
      }
      sub_100004960(&qword_1000925C0);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_100070910;
      *(void *)(v30 + 56) = &type metadata for Int;
      *(void *)(v30 + 64) = &protocol witness table for Int;
      *(void *)(v30 + 32) = v3;
      uint64_t v13 = sub_10006F508();
      unint64_t v14 = v31;
      unint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v3 = v10;
  }
  else
  {
    unint64_t v9 = 0;
    uint64_t v11 = 0;
    unint64_t v12 = 0;
    uint64_t v13 = 0;
    unint64_t v14 = 0;
  }
  *(void *)a3 = v3;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v11;
  *(void *)(a3 + 24) = v12;
  *(void *)(a3 + 32) = v13;
  *(void *)(a3 + 40) = v14;
  *(unsigned char *)(a3 + 48) = 0;
  return result;
}

void *sub_10005FF74(void *a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v19 = a1;
  uint64_t v10 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_10006FAC8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v13 = (a2 & 0xC000000000000001) != 0 ? (id)sub_10006F9F8() : *(id *)(a2 + 8 * i);
      uint64_t v10 = v13;
      uint64_t v14 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v18 = v13;
      sub_10005D1F0(&v19, &v18, a3, a4, a5, a6);
      if (v6)
      {
        swift_bridgeObjectRelease();

        return v10;
      }

      if (v14 == v11)
      {
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_1000600B0(double *a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v19 = a1;
  uint64_t v10 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_10006FAC8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v13 = (a2 & 0xC000000000000001) != 0 ? (double *)sub_10006F9F8() : (double *)*(id *)(a2 + 8 * i);
      uint64_t v10 = v13;
      uint64_t v14 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v18 = v13;
      sub_10005D9A8(&v19, (void **)&v18, a3, a4, a5, a6);
      if (v6)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v10;
      }

      if (v14 == v11)
      {
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1000601F8(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return _swift_task_switch(sub_100060218, 0, 0);
}

uint64_t sub_100060218()
{
  uint64_t v1 = (void *)v0[15];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = HMAccessory.subscript.getter();
    v0[16] = v3;
    if (v3)
    {
      unsigned __int8 v4 = (void *)v3;
      unsigned __int8 v5 = HMService.subscript.getter();
      v0[17] = v5;
      if (v5)
      {
        uint64_t v6 = (void *)swift_task_alloc();
        v0[18] = v6;
        *uint64_t v6 = v0;
        v6[1] = sub_100060340;
        return HMCharacteristic.fetchedValue()((uint64_t)(v0 + 6));
      }
    }
  }
  char v8 = (uint64_t (*)(void, uint64_t))v0[1];
  return v8(0, 1);
}

uint64_t sub_100060340()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000612EC, 0, 0);
}

uint64_t sub_10006043C(uint64_t a1, char a2)
{
  uint64_t v4 = 0x9380E29380E2;
  uint64_t v5 = sub_10006EC08();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10006F4B8();
  __chkstk_darwin(v6 - 8);
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        sub_10006F4A8();
        sub_10006EBF8();
        uint64_t v4 = sub_10006F518();
        break;
      default:
        return v4;
    }
  }
  return v4;
}

unint64_t sub_100060618(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100004960(&qword_100091CB8);
    uint64_t v3 = (void *)sub_10006FAF8();
    for (uint64_t i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_10000C9FC(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      _OWORD v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_1000606F0(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return _swift_task_switch(sub_100060710, 0, 0);
}

uint64_t sub_100060710()
{
  uint64_t v1 = (void *)v0[15];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = HMAccessory.subscript.getter();
    v0[16] = v3;
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      unsigned __int8 v5 = HMService.subscript.getter();
      v0[17] = v5;
      if (v5)
      {
        uint64_t v6 = (void *)swift_task_alloc();
        v0[18] = v6;
        *uint64_t v6 = v0;
        v6[1] = sub_100060838;
        return HMCharacteristic.fetchedValue()((uint64_t)(v0 + 6));
      }
    }
  }
  char v8 = (uint64_t (*)(void, uint64_t))v0[1];
  return v8(0, 1);
}

uint64_t sub_100060838()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100060934, 0, 0);
}

uint64_t sub_100060934()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = (id *)(v0 + 112);
    sub_100010C8C((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    sub_100010C9C(v0 + 16, v0 + 80);
    sub_100004B50(0, &qword_100091E48);
    int v2 = swift_dynamicCast();
    uint64_t v4 = *(void **)(v0 + 128);
    uint64_t v3 = *(void **)(v0 + 136);
    unsigned __int8 v5 = *(void **)(v0 + 120);
    if (v2)
    {
      id v6 = *v1;
      id v7 = [*v1 integerValue];

      sub_1000164E4(v0 + 16);
      uint64_t v8 = 0;
      goto LABEL_7;
    }

    sub_1000164E4(v0 + 16);
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 128);
    BOOL v10 = *(void **)(v0 + 120);

    sub_100010C2C(v0 + 48);
  }
  id v7 = 0;
  uint64_t v8 = 1;
LABEL_7:
  uint64_t v11 = *(uint64_t (**)(id, uint64_t))(v0 + 8);
  return v11(v7, v8);
}

uint64_t sub_100060A88(uint64_t a1, char a2)
{
  uint64_t v4 = 0x9380E29380E2;
  uint64_t v5 = sub_10006EC08();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10006F4B8();
  __chkstk_darwin(v6 - 8);
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        sub_10006F4A8();
        sub_10006EBF8();
        uint64_t v4 = sub_10006F518();
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t sub_100060C54(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return _swift_task_switch(sub_100060C74, 0, 0);
}

uint64_t sub_100060C74()
{
  uint64_t v1 = (void *)v0[15];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = HMAccessory.subscript.getter();
    v0[16] = v3;
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      uint64_t v5 = HMService.subscript.getter();
      v0[17] = v5;
      if (v5)
      {
        uint64_t v6 = (void *)swift_task_alloc();
        v0[18] = v6;
        *uint64_t v6 = v0;
        v6[1] = sub_100060340;
        return HMCharacteristic.fetchedValue()((uint64_t)(v0 + 6));
      }
    }
  }
  uint64_t v8 = (uint64_t (*)(void, uint64_t))v0[1];
  return v8(0, 1);
}

uint64_t sub_100060D9C(uint64_t a1, char a2)
{
  uint64_t v4 = 0x9380E29380E2;
  uint64_t v5 = sub_10006EC08();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10006F4B8();
  __chkstk_darwin(v6 - 8);
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        sub_10006F4A8();
        sub_10006EBF8();
        uint64_t v4 = sub_10006F518();
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t sub_100060F84()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100060FBC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10006100C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100061050(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SecurityIssue(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SecurityIssue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000611FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecurityIssue()
{
  return &type metadata for SecurityIssue;
}

unint64_t sub_100061238()
{
  unint64_t result = qword_100093140;
  if (!qword_100093140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093140);
  }
  return result;
}

unint64_t sub_100061290()
{
  unint64_t result = qword_100093148;
  if (!qword_100093148)
  {
    sub_1000049A4(&qword_100093150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093148);
  }
  return result;
}

uint64_t String.serviceKind.getter()
{
  swift_bridgeObjectRetain();
  LODWORD(result) = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  if (result == 51) {
    return 0;
  }
  else {
    return result;
  }
}

void *ServiceKind.requiredCharacteristicKinds.getter(char a1)
{
  int v2 = &off_10008B9D0;
  switch(a1)
  {
    case 1:
      goto LABEL_4;
    case 2:
      int v2 = &off_10008B9F8;
LABEL_4:
      uint64_t result = (void *)sub_10002605C((uint64_t)v2);
      break;
    case 3:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BA20);
      break;
    case 4:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BA48);
      break;
    case 5:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BA70);
      break;
    case 7:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BA98);
      break;
    case 9:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BAC0);
      break;
    case 10:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BAE8);
      break;
    case 11:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BB10);
      break;
    case 14:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BB38);
      break;
    case 15:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BB60);
      break;
    case 16:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BB88);
      break;
    case 17:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BBB0);
      break;
    case 18:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BBD8);
      break;
    case 19:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BC00);
      break;
    case 20:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BC28);
      break;
    case 21:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BC50);
      break;
    case 22:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BC78);
      break;
    case 24:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BCA0);
      break;
    case 26:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BCC8);
      break;
    case 27:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BCF0);
      break;
    case 28:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BD18);
      break;
    case 29:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BD40);
      break;
    case 30:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BD68);
      break;
    case 31:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BD90);
      break;
    case 32:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BDB8);
      break;
    case 33:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BDE0);
      break;
    case 34:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BE08);
      break;
    case 35:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BE30);
      break;
    case 36:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BE58);
      break;
    case 37:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BE80);
      break;
    case 38:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BEA8);
      break;
    case 40:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BED0);
      break;
    case 41:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BEF8);
      break;
    case 42:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BF20);
      break;
    case 43:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BF48);
      break;
    case 44:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BF70);
      break;
    case 45:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BF98);
      break;
    case 46:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BFC0);
      break;
    case 47:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008BFE8);
      break;
    case 49:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008C010);
      break;
    case 50:
      uint64_t result = (void *)sub_10002605C((uint64_t)&off_10008C038);
      break;
    default:
      uint64_t result = &_swiftEmptySetSingleton;
      break;
  }
  return result;
}

void *ServiceKind.optionalCharacteristicKinds.getter(char a1)
{
  char v1 = a1 - 1;
  if (a1 - 1) <= 0x31u && ((0x373BFFEBFE719uLL >> v1)) {
    return (void *)sub_10002605C((uint64_t)off_10008E6D0[v1]);
  }
  else {
    return &_swiftEmptySetSingleton;
  }
}

unint64_t ServiceKind.rawValue.getter()
{
  return 0xD000000000000024;
}

uint64_t ServiceKind.localizedDescription.getter(char a1)
{
  uint64_t v2 = sub_10006EC08();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  sub_10002F638();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = self;
  id v6 = [v5 bundleForClass:ObjCClassFromMetadata];
  NSString v7 = sub_10006F4D8();
  id v8 = [v5 bundleWithIdentifier:v7];

  switch(a1)
  {
    case 1:
    case 2:
    case 7:
    case 13:
    case 20:
    case 21:
    case 23:
    case 28:
    case 44:
      sub_10006F4A8();
      sub_10006EBF8();
      uint64_t v9 = sub_10006F518();

      break;
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 22:
    case 24:
    case 25:
    case 26:
    case 27:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
      sub_10006F4A8();
      id v10 = v6;
      sub_10006EBF8();
      uint64_t v9 = sub_10006F518();

      break;
    case 12:

      uint64_t v9 = 0x6C616E7265746E49;
      break;
    default:

      uint64_t v9 = 0;
      break;
  }
  return v9;
}

_UNKNOWN **static ServiceKind.allCases.getter()
{
  return &off_10008C680;
}

uint64_t sub_100062230()
{
  ServiceKind.rawValue.getter();
  uint64_t v1 = v0;
  ServiceKind.rawValue.getter();
  if (v1 == v2) {
    char v3 = 1;
  }
  else {
    char v3 = sub_10006FCE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

Swift::Int sub_1000622BC()
{
  return sub_10006FDD8();
}

uint64_t sub_100062320()
{
  ServiceKind.rawValue.getter();
  sub_10006F548();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100062374()
{
  return sub_10006FDD8();
}

uint64_t sub_1000623D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_100062404@<X0>(void *a1@<X8>)
{
  unint64_t result = ServiceKind.rawValue.getter();
  *a1 = 0xD000000000000024;
  a1[1] = v3;
  return result;
}

void sub_100062438(void *a1@<X8>)
{
  *a1 = &off_10008C680;
}

uint64_t sub_100062448()
{
  return sub_10006F628();
}

uint64_t sub_1000624A8()
{
  return sub_10006F608();
}

uint64_t ServiceKind.allRelevantCharacteristicKinds.getter(char a1)
{
  uint64_t v2 = ServiceKind.requiredCharacteristicKinds.getter(a1);
  uint64_t v3 = ServiceKind.optionalCharacteristicKinds.getter(a1);

  return sub_100031494((uint64_t)v3, (uint64_t)v2);
}

uint64_t sub_10006253C()
{
  return ServiceKind.localizedDescription.getter(*v0);
}

uint64_t ServiceKind.pluralLocalizedDescription.getter(char a1)
{
  uint64_t v2 = sub_10006EC08();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  uint64_t result = 0x6C616E7265746E49;
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
      sub_10006F4A8();
      sub_10006EBF8();
      uint64_t result = sub_10006F518();
      break;
    case 12:
      return result;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t ServiceKind.iconSymbol.getter(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6964656D2E697161;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
    case 7:
    case 8:
      unint64_t result = 0x69662E6F65646976;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0xD000000000000015;
      break;
    case 15:
      unint64_t result = 0xD000000000000013;
      break;
    case 16:
      unint64_t result = 0x6564616C626E6166;
      break;
    case 17:
    case 26:
      unint64_t result = 0x6C69662E706F7264;
      break;
    case 18:
      unint64_t result = 1684957559;
      break;
    case 19:
      unint64_t result = 0xD000000000000012;
      break;
    case 20:
    case 46:
      unint64_t result = 0x656D6F6D72656874;
      break;
    case 21:
      unint64_t result = 0xD000000000000011;
      break;
    case 22:
      unint64_t result = 0x79746964696D7568;
      break;
    case 24:
    case 47:
      unint64_t result = 0x656C6B6E69727073;
      break;
    case 27:
    case 37:
      unint64_t result = 0xD000000000000022;
      break;
    case 28:
      unint64_t result = 0x6C7562746867696CLL;
      break;
    case 29:
    case 30:
      unint64_t result = 7955819;
      break;
    case 31:
      unint64_t result = 0x6C6C69662E63696DLL;
      break;
    case 32:
    case 33:
      unint64_t result = 0xD000000000000014;
      break;
    case 34:
      unint64_t result = 0x756C707265776F70;
      break;
    case 35:
      unint64_t result = 0xD000000000000015;
      break;
    case 38:
      unint64_t result = 0xD000000000000013;
      break;
    case 41:
      unint64_t result = 0xD000000000000014;
      break;
    case 44:
      unint64_t result = 30324;
      break;
    case 45:
      unint64_t result = 0xD000000000000012;
      break;
    case 48:
      unint64_t result = 0x6564616C626E6166;
      break;
    case 49:
      unint64_t result = 0xD000000000000016;
      break;
    case 50:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t ServiceKind.iconSymbolActivated.getter(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6964656D2E697161;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
    case 7:
    case 8:
      unint64_t result = 0x69662E6F65646976;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    case 15:
      unint64_t result = 0xD000000000000013;
      break;
    case 16:
    case 48:
      unint64_t result = 0x6564616C626E6166;
      break;
    case 17:
    case 26:
      unint64_t result = 0x6C69662E706F7264;
      break;
    case 18:
      unint64_t result = 1684957559;
      break;
    case 19:
      unint64_t result = 0xD000000000000010;
      break;
    case 20:
    case 46:
      unint64_t result = 0x656D6F6D72656874;
      break;
    case 21:
      unint64_t result = 0xD000000000000011;
      break;
    case 22:
      unint64_t result = 0x79746964696D7568;
      break;
    case 24:
    case 47:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 27:
    case 37:
      unint64_t result = 0xD000000000000022;
      break;
    case 28:
      unint64_t result = 0x6C7562746867696CLL;
      break;
    case 29:
    case 30:
      unint64_t result = 7955819;
      break;
    case 31:
      unint64_t result = 0x6C6C69662E63696DLL;
      break;
    case 32:
    case 33:
      unint64_t result = 0xD000000000000014;
      break;
    case 34:
      unint64_t result = 0x756C707265776F70;
      break;
    case 35:
      unint64_t result = 0xD000000000000015;
      break;
    case 38:
      unint64_t result = 0x2E72656B61657073;
      break;
    case 41:
      unint64_t result = 0xD000000000000014;
      break;
    case 44:
      unint64_t result = 30324;
      break;
    case 45:
      unint64_t result = 0xD000000000000012;
      break;
    case 49:
      unint64_t result = 0xD000000000000014;
      break;
    case 50:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

_UNKNOWN **ServiceKind.umbrellaCategories.getter(char a1)
{
  if ((a1 - 3) > 0x2Fu) {
    return (_UNKNOWN **)&_swiftEmptyArrayStorage;
  }
  else {
    return off_10008E860[(char)(a1 - 3)];
  }
}

uint64_t ServiceKind.togglingCharacteristicKind.getter(unsigned __int8 a1)
{
  int v1 = a1 - 3;
  uint64_t result = 3;
  switch(v1)
  {
    case 0:
    case 13:
    case 14:
    case 17:
    case 18:
    case 21:
    case 39:
    case 41:
    case 44:
    case 45:
      return result;
    case 25:
    case 31:
    case 38:
      uint64_t result = 105;
      break;
    case 28:
    case 35:
      uint64_t result = 84;
      break;
    default:
      uint64_t result = 174;
      break;
  }
  return result;
}

uint64_t _s20HomeWidgetLockScreen11ServiceKindO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_10006FD18();
  swift_bridgeObjectRelease();
  if (v0 >= 0x33) {
    return 51;
  }
  else {
    return v0;
  }
}

unint64_t sub_100063548()
{
  unint64_t result = qword_100093158;
  if (!qword_100093158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093158);
  }
  return result;
}

unint64_t sub_1000635A0()
{
  unint64_t result = qword_100093160;
  if (!qword_100093160)
  {
    sub_1000049A4(&qword_100093168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093160);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ServiceKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCE) {
    goto LABEL_17;
  }
  if (a2 + 50 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 50) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 50;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 50;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 50;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x33;
  int v8 = v6 - 51;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ServiceKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 50 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 50) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCD)
  {
    unsigned int v6 = ((a2 - 206) >> 8) + 1;
    *unint64_t result = a2 + 50;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100063758);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 50;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceKind()
{
  return &type metadata for ServiceKind;
}

unint64_t sub_100063790()
{
  unint64_t result = qword_100093170;
  if (!qword_100093170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093170);
  }
  return result;
}

double *sub_1000637E4(double *a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  char v17 = a1;
  uint64_t v9 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_10006FAC8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      unint64_t v12 = (a2 & 0xC000000000000001) != 0 ? (double *)sub_10006F9F8() : (double *)*(id *)(a2 + 8 * i);
      uint64_t v9 = v12;
      uint64_t v13 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      unint64_t v16 = v12;
      sub_10001BA08(&v17, (void **)&v16, a3, a4, a5);
      if (v5)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v9;
      }

      if (v13 == v10)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10006392C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[33] = a3;
  v4[34] = a4;
  v4[31] = a1;
  v4[32] = a2;
  return _swift_task_switch(sub_100063950, 0, 0);
}

uint64_t sub_100063950()
{
  char v29 = v0;
  if (qword_1000916B8 != -1) {
    swift_once();
  }
  int v1 = (void *)v0[32];
  uint64_t v2 = sub_10006EC68();
  v0[35] = sub_100004B08(v2, (uint64_t)qword_10009A7A0);
  id v3 = v1;
  swift_bridgeObjectRetain_n();
  id v4 = v3;
  uint64_t v5 = sub_10006EC48();
  os_log_type_t v6 = sub_10006F818();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = v0[34];
  if (v7)
  {
    os_log_type_t v26 = v6;
    uint64_t v9 = v0[33];
    uint64_t v27 = v0[32];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315650;
    swift_bridgeObjectRetain();
    v0[28] = sub_100022B5C(v9, v8, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    v0[29] = sub_100022B5C(0xD00000000000001DLL, 0x80000001000776F0, &v28);
    sub_10006F868();
    *(_WORD *)(v10 + 22) = 2080;
    if (v27)
    {
      id v11 = [v4 name];
      uint64_t v12 = sub_10006F4F8();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE400000000000000;
      uint64_t v12 = 1819047278;
    }
    v0[30] = sub_100022B5C(v12, v14, &v28);
    sub_10006F868();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  if (qword_1000916A0 != -1) {
    swift_once();
  }
  sub_100004960(&qword_1000917F0);
  uint64_t inited = swift_initStackObject();
  v0[36] = inited;
  *(_OWORD *)(inited + 16) = xmmword_100070910;
  if (qword_100091688 != -1) {
    swift_once();
  }
  uint64_t v16 = *((void *)&xmmword_10009A6C8 + 1);
  uint64_t v17 = qword_10009A6D8;
  uint64_t v18 = unk_10009A6E0;
  long long v19 = xmmword_10009A6E8;
  uint64_t v20 = qword_10009A6F8;
  *(void *)(inited + 32) = xmmword_10009A6C8;
  *(void *)(inited + 40) = v16;
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = v18;
  *(_OWORD *)(inited + 64) = v19;
  *(void *)(inited + 80) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004B40(*((uint64_t *)&v19 + 1));
  uint64_t v21 = (void *)swift_task_alloc();
  v0[37] = v21;
  void *v21 = v0;
  v21[1] = sub_100063D68;
  uint64_t v22 = v0[33];
  uint64_t v23 = v0[34];
  uint64_t v24 = v0[32];
  return LockScreenDataModel.reloadCharacteristics(matching:for:fetchId:)(inited, v24, v22, v23);
}

uint64_t sub_100063D68(uint64_t a1)
{
  *(void *)(*(void *)v1 + 304) = a1;
  swift_task_dealloc();
  swift_setDeallocating();
  swift_arrayDestroy();
  return _swift_task_switch(sub_100063EA0, 0, 0);
}

uint64_t sub_100063EA0()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void **)(v0 + 256);
  long long v2 = *(_OWORD *)&qword_10009A6D8;
  *(_OWORD *)(v0 + 104) = xmmword_10009A6C8;
  *(_OWORD *)(v0 + 120) = v2;
  *(_OWORD *)(v0 + 136) = xmmword_10009A6E8;
  *(void *)(v0 + 152) = qword_10009A6F8;
  if (v1)
  {
    id v3 = [v1 accessories];
    sub_100034CCC();
    unint64_t v4 = sub_10006F668();

    *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 144);
    *(void *)(v0 + 192) = *(void *)(v0 + 136);
    sub_100004B8C(v0 + 160);
    sub_100004BB8(v0 + 176);
    sub_100004BB8(v0 + 184);
    sub_100004BB8(v0 + 192);
    sub_100004B40(v5);
    os_log_type_t v6 = sub_100025574(v4, v0 + 104);
    sub_100004BE4(v0 + 160);
    sub_100004C10(v0 + 176);
    sub_100004C10(v0 + 184);
    sub_100004C10(v0 + 192);
    sub_100004C3C(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v6 = _swiftEmptyArrayStorage;
  }
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 264);
  unint64_t v8 = *(void *)(v0 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1000637E4(_swiftEmptyArrayStorage, (unint64_t)v6, v7, v9, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v10 + 2);
  if (!v11)
  {
    uint64_t v14 = 0xD000000000000012;
    uint64_t v15 = 0x9380E29380E2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_10006EC48();
    os_log_type_t v17 = sub_10006F7F8();
    BOOL v18 = os_log_type_enabled(v16, v17);
    unint64_t v19 = *(void *)(v0 + 272);
    if (v18)
    {
      uint64_t v20 = *(void *)(v0 + 264);
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v22 = v20;
      uint64_t v15 = 0x9380E29380E2;
      *(void *)(v0 + 216) = sub_100022B5C(v22, v19, v43);
      uint64_t v14 = 0xD000000000000012;
      sub_10006F868();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "...{%s} has no temperatures, returning placeholder", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    unint64_t v32 = 0x8000000100077A90;
    unint64_t v30 = 0xA600000000000000;
    double v28 = 0.0;
    goto LABEL_19;
  }
  if (v11 == 1)
  {
    uint64_t v12 = 0;
    double v13 = 0.0;
  }
  else
  {
    uint64_t v12 = v11 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v23 = v10 + 5;
    double v13 = 0.0;
    uint64_t v24 = v11 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v13 = v13 + *(v23 - 1) + *v23;
      v23 += 2;
      v24 -= 2;
    }
    while (v24);
    if (v11 == v12) {
      goto LABEL_14;
    }
  }
  uint64_t v25 = v11 - v12;
  os_log_type_t v26 = &v10[v12 + 4];
  do
  {
    double v27 = *v26++;
    double v13 = v13 + v27;
    --v25;
  }
  while (v25);
LABEL_14:
  double v28 = v13 / (double)v11;
  type metadata accessor for LockScreenDataModel();
  uint64_t v15 = sub_10001B674();
  unint64_t v30 = v29;
  uint64_t v14 = sub_10001D0B8((uint64_t)v10);
  unint64_t v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v33 = sub_10006EC48();
  os_log_type_t v34 = sub_10006F818();
  BOOL v35 = os_log_type_enabled(v33, v34);
  unint64_t v36 = *(void *)(v0 + 272);
  if (v35)
  {
    uint64_t v41 = *(void *)(v0 + 264);
    uint64_t v42 = v14;
    uint64_t v37 = swift_slowAlloc();
    v43[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 200) = sub_100022B5C(v41, v36, v43);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 208) = sub_100022B5C(v15, v30, v43);
    sub_10006F868();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "...{%s} temperature is: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v14 = v42;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
LABEL_19:
  uint64_t v38 = *(void *)(v0 + 248);
  *(_OWORD *)uint64_t v38 = xmmword_100073FB0;
  *(double *)(v38 + 16) = v28;
  *(unsigned char *)(v38 + 24) = v11 == 0;
  *(void *)(v38 + 32) = v15;
  *(void *)(v38 + 40) = v30;
  *(void *)(v38 + 48) = v14;
  *(void *)(v38 + 56) = v32;
  *(unsigned char *)(v38 + 64) = 0;
  char v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t *sub_100064484(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    unint64_t v8 = (int *)type metadata accessor for ThreeColumnDataEntry();
    uint64_t v9 = v8[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *uint64_t v10 = v13;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_10006F348();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100064628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for ThreeColumnDataEntry();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10006F348();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100064744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_10006F348();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100064890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100039078(a1 + v14, &qword_100091DD8);
    sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_10006F348();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100064A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ThreeColumnDataEntry();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_100004960(&qword_100091DD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10006F348();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100064B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ThreeColumnDataEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_100039078(a1 + v13, &qword_100091DD8);
    uint64_t v16 = sub_100004960(&qword_100091DD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_10006F348();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100064CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100064CE0);
}

uint64_t sub_100064CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ThreeColumnDataEntry();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100004960(&qword_1000922E0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100064DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100064DF0);
}

uint64_t sub_100064DF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ThreeColumnDataEntry();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100004960(&qword_1000922E0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for ThreeColumnCategoryView(uint64_t a1)
{
  return sub_100035FD8(a1, qword_1000931D8);
}

void sub_100064F18()
{
  type metadata accessor for ThreeColumnDataEntry();
  if (v0 <= 0x3F)
  {
    sub_10003597C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100064FE0()
{
  return swift_getOpaqueTypeConformance2();
}

double *sub_100064FFC(double *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = result;
  uint64_t v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = v4;
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!v5) {
    return v7;
  }
  uint64_t v18 = _swiftEmptyArrayStorage;
  unint64_t result = (double *)sub_10002314C(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v18;
    if (a4 <= a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a4;
    }
    uint64_t v11 = a3;
    while (a4 != v11)
    {
      uint64_t v16 = v11;
      unint64_t result = (double *)((double *(*)(double *__return_ptr, uint64_t *))v15)(&v17, &v16);
      if (v6)
      {
        swift_release();
        return v7;
      }
      uint64_t v6 = 0;
      double v12 = v17;
      uint64_t v18 = v7;
      unint64_t v14 = *((void *)v7 + 2);
      unint64_t v13 = *((void *)v7 + 3);
      if (v14 >= v13 >> 1)
      {
        unint64_t result = (double *)sub_10002314C(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v18;
      }
      *((void *)v7 + 2) = v14 + 1;
      v7[v14 + 4] = v12;
      if (a4 < a3) {
        goto LABEL_19;
      }
      if (v10 == v11) {
        goto LABEL_20;
      }
      if (a4 == ++v11) {
        return v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

double *sub_100065150(double *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = result;
  uint64_t v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = v4;
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!v5) {
    return v7;
  }
  unint64_t v19 = _swiftEmptyArrayStorage;
  unint64_t result = (double *)sub_1000231CC(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v19;
    if (a4 <= a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a4;
    }
    uint64_t v15 = v10;
    uint64_t v11 = a3;
    while (a4 != v11)
    {
      uint64_t v17 = v11;
      unint64_t result = (double *)((double *(*)(uint64_t *__return_ptr, uint64_t *))v16)(&v18, &v17);
      if (v6)
      {
        swift_release();
        return v7;
      }
      uint64_t v6 = 0;
      char v12 = v18;
      unint64_t v19 = v7;
      unint64_t v14 = *((void *)v7 + 2);
      unint64_t v13 = *((void *)v7 + 3);
      if (v14 >= v13 >> 1)
      {
        unint64_t result = (double *)sub_1000231CC(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v19;
      }
      *((void *)v7 + 2) = v14 + 1;
      *((unsigned char *)v7 + v14 + 32) = v12;
      if (a4 < a3) {
        goto LABEL_19;
      }
      if (v15 == v11) {
        goto LABEL_20;
      }
      if (a4 == ++v11) {
        return v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

void *sub_1000652A4(void *result, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *(*v8)(double *__return_ptr, double *, uint64_t *);
  double v9;
  uint64_t v10;
  double v11;

  uint64_t v11 = a2;
  if (a4 != a5)
  {
    uint64_t v7 = a4;
    if (a5 >= a4)
    {
      uint64_t v8 = (void *(*)(double *__return_ptr, double *, uint64_t *))result;
      while (v7 < a5)
      {
        uint64_t v10 = v7;
        unint64_t result = v8(&v9, &v11, &v10);
        if (!v5)
        {
          ++v7;
          uint64_t v11 = v9;
          if (a5 != v7) {
            continue;
          }
        }
        return result;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100065338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v21 = type metadata accessor for ThreeColumnCategoryViewAccessoryRectangular(0);
  __chkstk_darwin(v21);
  uint64_t v20 = (uint64_t)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004960(&qword_100093210);
  __chkstk_darwin(v23);
  uint64_t v22 = (uint64_t)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004960(&qword_100093218);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004960(&qword_100093220);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ThreeColumnCategoryViewSystemSmall(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10006F348();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ThreeColumnCategoryView(0);
  sub_1000534F4((uint64_t)v15);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_100065A54(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ThreeColumnDataEntry);
    sub_100065A54((uint64_t)v11, (uint64_t)v6, type metadata accessor for ThreeColumnCategoryViewSystemSmall);
    swift_storeEnumTagMultiPayload();
    sub_100065A0C(&qword_100093230, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryViewSystemSmall);
    sub_100065A0C(&qword_100093238, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryViewAccessoryRectangular);
    sub_10006EF88();
    sub_100053F94((uint64_t)v8, v22, &qword_100093220);
    swift_storeEnumTagMultiPayload();
    sub_100065930();
    sub_10006EF88();
    sub_100039078((uint64_t)v8, &qword_100093220);
    return sub_100065ABC((uint64_t)v11, type metadata accessor for ThreeColumnCategoryViewSystemSmall);
  }
  else
  {
    uint64_t v18 = v22;
    if (v16 == enum case for WidgetFamily.accessoryRectangular(_:))
    {
      uint64_t v19 = v20;
      sub_100065A54(v1, v20, (uint64_t (*)(void))type metadata accessor for ThreeColumnDataEntry);
      sub_100065A54(v19, (uint64_t)v6, type metadata accessor for ThreeColumnCategoryViewAccessoryRectangular);
      swift_storeEnumTagMultiPayload();
      sub_100065A0C(&qword_100093230, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryViewSystemSmall);
      sub_100065A0C(&qword_100093238, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryViewAccessoryRectangular);
      sub_10006EF88();
      sub_100053F94((uint64_t)v8, v18, &qword_100093220);
      swift_storeEnumTagMultiPayload();
      sub_100065930();
      sub_10006EF88();
      sub_100039078((uint64_t)v8, &qword_100093220);
      return sub_100065ABC(v19, type metadata accessor for ThreeColumnCategoryViewAccessoryRectangular);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_100065930();
      sub_10006EF88();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
}

uint64_t type metadata accessor for ThreeColumnCategoryViewAccessoryRectangular(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100093298);
}

uint64_t type metadata accessor for ThreeColumnCategoryViewSystemSmall(uint64_t a1)
{
  return sub_100035FD8(a1, qword_100093328);
}

unint64_t sub_100065930()
{
  unint64_t result = qword_100093228;
  if (!qword_100093228)
  {
    sub_1000049A4(&qword_100093220);
    sub_100065A0C(&qword_100093230, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryViewSystemSmall);
    sub_100065A0C(&qword_100093238, (void (*)(uint64_t))type metadata accessor for ThreeColumnCategoryViewAccessoryRectangular);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093228);
  }
  return result;
}

uint64_t sub_100065A0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100065A54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100065ABC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100065B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100065B48);
}

uint64_t sub_100065B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100065B60);
}

uint64_t sub_100065B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100065B7C);
}

uint64_t sub_100065B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100065BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100065C00);
}

uint64_t sub_100065C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThreeColumnDataEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unint64_t sub_100065C78()
{
  unint64_t result = qword_100093360;
  if (!qword_100093360)
  {
    sub_1000049A4(&qword_100093368);
    sub_100065930();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093360);
  }
  return result;
}

uint64_t sub_100065CF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100065D10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = sub_10006EFD8();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  unint64_t v30 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004960(&qword_100093410);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100004960(&qword_100093418) - 8;
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100004960(&qword_100093420);
  __chkstk_darwin(v29);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v1 + *(int *)(type metadata accessor for ThreeColumnDataEntry() + 24));
  sub_10006F058();
  uint64_t v15 = enum case for Font.Design.default(_:);
  uint64_t v16 = sub_10006F048();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v13, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  uint64_t v18 = sub_10006F078();
  sub_100039078((uint64_t)v13, &qword_100092508);
  *(void *)uint64_t v6 = sub_10006EF18();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v19 = sub_100004960(&qword_100093428);
  sub_100066100(v14, v1, v18, (uint64_t *)&v6[*(int *)(v19 + 44)]);
  uint64_t v20 = 3 - *(void *)(v14 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100053F94((uint64_t)v6, (uint64_t)v8, &qword_100093410);
  uint64_t v22 = &v8[*(int *)(v28 + 44)];
  *(void *)uint64_t v22 = KeyPath;
  *((void *)v22 + 1) = v20;
  v22[16] = 0;
  sub_100039078((uint64_t)v6, &qword_100093410);
  uint64_t v23 = sub_10006F208();
  uint64_t v24 = swift_getKeyPath();
  sub_100053F94((uint64_t)v8, (uint64_t)v10, &qword_100093418);
  uint64_t v25 = (uint64_t *)&v10[*(int *)(v29 + 36)];
  uint64_t *v25 = v24;
  v25[1] = v23;
  sub_100039078((uint64_t)v8, &qword_100093418);
  os_log_type_t v26 = v30;
  sub_10006EFC8();
  sub_1000688B8();
  sub_10006F178();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  return sub_100039078((uint64_t)v10, &qword_100093420);
}

uint64_t sub_100066100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  v31[1] = a3;
  uint64_t v7 = sub_100004960(&qword_100093448);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v36 = (uint64_t)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v31 - v10;
  if (*(void *)(a1 + 16) > 2uLL)
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v12 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ThreeColumnDataEntry() + 20));
    uint64_t v13 = v12[1];
    uint64_t v37 = *v12;
    uint64_t v38 = v13;
    sub_100004A48();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_10006F0E8();
    uint64_t v16 = v15;
    v31[0] = v7;
    LOBYTE(v13) = v17 & 1;
    sub_10006F088();
    uint64_t v18 = sub_10006F0C8();
    uint64_t v34 = v19;
    uint64_t v35 = v18;
    char v21 = v20;
    uint64_t v33 = v22;
    swift_release();
    uint64_t v32 = v21 & 1;
    sub_100038EA0(v14, v16, v13);
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)uint64_t v11 = *(_OWORD *)(a2 + *(int *)(type metadata accessor for ThreeColumnDataEntry() + 28));
  *((void *)v11 + 2) = 3;
  uint64_t v37 = a1;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100004960(&qword_1000933F8);
  sub_100004960(&qword_100093450);
  sub_10002643C(&qword_100093400, &qword_1000933F8);
  sub_100068864();
  sub_10002643C(&qword_100093458, &qword_100093450);
  sub_10006F2A8();
  uint64_t v23 = v36;
  sub_100053F94((uint64_t)v11, v36, &qword_100093448);
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  *a4 = v35;
  a4[1] = v25;
  char v27 = v32;
  uint64_t v26 = v33;
  a4[2] = v32;
  a4[3] = v26;
  uint64_t v28 = sub_100004960(&qword_100093460);
  sub_100053F94(v23, (uint64_t)a4 + *(int *)(v28 + 48), &qword_100093448);
  uint64_t v29 = (char *)a4 + *(int *)(v28 + 64);
  *(void *)uint64_t v29 = 0;
  v29[8] = 0;
  sub_100068980(v24, v25, v27, v26);
  sub_100039078((uint64_t)v11, &qword_100093448);
  sub_100039078(v23, &qword_100093448);
  return sub_1000689C4(v24, v25, v27, v26);
}

uint64_t sub_10006642C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = sub_10006EED8();
  __chkstk_darwin(v4 - 8);
  int v50 = *(unsigned __int8 *)(a1 + 48);
  swift_bridgeObjectRetain();
  uint64_t v58 = sub_10006F238();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100004A48();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10006F0E8();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_10006F088();
  uint64_t v10 = sub_10006F0C8();
  uint64_t v52 = v11;
  uint64_t v53 = v10;
  char v13 = v12;
  uint64_t v54 = v14;
  swift_release();
  char v51 = v13 & 1;
  sub_100038EA0(v5, v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10006F0E8();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_10006F038();
  uint64_t v20 = sub_10006F0C8();
  uint64_t v48 = v21;
  uint64_t v49 = v20;
  LOBYTE(v5) = v22;
  swift_release();
  char v23 = v5 & 1;
  sub_100038EA0(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_10006EEC8();
  uint64_t v24 = (void *)0xE000000000000000;
  v59._uint64_t countAndFlagsBits = 0;
  v59._object = (void *)0xE000000000000000;
  sub_10006EEB8(v59);
  if (v50) {
    v25._uint64_t countAndFlagsBits = 37;
  }
  else {
    v25._uint64_t countAndFlagsBits = 0;
  }
  if (v50) {
    uint64_t v24 = (void *)0xE100000000000000;
  }
  v25._object = v24;
  sub_10006EEA8(v25);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  sub_10006EEB8(v60);
  sub_10006EEF8();
  uint64_t v26 = sub_10006F0D8();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  sub_10006F038();
  sub_10006F098();
  swift_release();
  uint64_t v31 = sub_10006F0C8();
  uint64_t v33 = v32;
  char v35 = v34;
  swift_release();
  sub_100038EA0(v26, v28, v30);
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_10006F0B8();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  sub_100038EA0(v31, v33, v35 & 1);
  swift_bridgeObjectRelease();
  sub_100038EA0(v49, v48, v23);
  swift_bridgeObjectRelease();
  sub_10006F038();
  uint64_t v40 = sub_10006F0C8();
  uint64_t v42 = v41;
  LOBYTE(v31) = v43;
  uint64_t v45 = v44;
  swift_release();
  sub_100038EA0(v47, v37, v39);
  swift_bridgeObjectRelease();
  *(void *)a3 = v58;
  *(void *)(a3 + 8) = KeyPath;
  *(void *)(a3 + 16) = a2;
  *(void *)(a3 + 24) = v53;
  *(void *)(a3 + 32) = v52;
  *(unsigned char *)(a3 + 40) = v51;
  *(void *)(a3 + 48) = v54;
  *(void *)(a3 + 56) = v40;
  *(void *)(a3 + 64) = v42;
  *(unsigned char *)(a3 + 72) = v31 & 1;
  *(void *)(a3 + 80) = v45;
  *(_WORD *)(a3 + 88) = 256;
  *(void *)(a3 + 96) = 0x4008000000000000;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v53, v52, v51);
  swift_bridgeObjectRetain();
  sub_100038D70(v40, v42, v31 & 1);
  swift_bridgeObjectRetain();
  sub_100038EA0(v40, v42, v31 & 1);
  swift_bridgeObjectRelease();
  sub_100038EA0(v53, v52, v51);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000668A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000668C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, BOOL *a5@<X8>, CGFloat a6@<D2>, CGFloat a7@<D3>, CGFloat a8@<D4>, CGFloat a9@<D5>)
{
  uint64_t v18 = sub_10006ED18();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t result = __chkstk_darwin(v18);
  char v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a1 * a2;
  if ((unsigned __int128)(*a1 * (__int128)a2) >> 64 != v23 >> 63)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = v23 + 1;
  if (__OFADD__(v23, 1))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = sub_10006ED48();
  unint64_t v24 = *(void *)(a3 + 16);
  if (!v24)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v25 = *(void *)(a4 + 16);
  if (!v25)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  double v26 = *(double *)(a3 + 32);
  double v27 = *(double *)(a4 + 32);
  sub_10006ED88();
  char v35 = v28 & 1;
  char v34 = v29 & 1;
  uint64_t result = sub_10006ECF8();
  if (v25 == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v24 < 3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v25 >= 3)
  {
    double v31 = v26 + v27 + v30 + *(double *)(a4 + 40) + *(double *)(a3 + 48) + *(double *)(a4 + 48);
    v36.origin.x = a6;
    v36.origin.y = a7;
    v36.size.width = a8;
    v36.size.height = a9;
    double Width = CGRectGetWidth(v36);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    *a5 = v31 < Width;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_100066AB0@<X0>(double *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, double *a5@<X8>)
{
  uint64_t v10 = sub_10006ED18();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v15 >= *(void *)(a3 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  double v16 = *a1;
  double v17 = 0.0;
  if (*(unsigned char *)(a3 + v15 + 32) == 1)
  {
    uint64_t v18 = v15 * a4;
    if ((unsigned __int128)((uint64_t)v15 * (__int128)a4) >> 64 == (uint64_t)(v15 * a4) >> 63)
    {
      uint64_t result = v18 + 1;
      if (!__OFADD__(v18, 1))
      {
        sub_10006ED48();
        sub_10006ED88();
        char v25 = v19 & 1;
        char v24 = v20 & 1;
        sub_10006ECF8();
        double v17 = v21;
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
        goto LABEL_7;
      }
LABEL_14:
      __break(1u);
      return result;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_7:
  if (v16 > v17) {
    double v22 = v16;
  }
  else {
    double v22 = v17;
  }
  *a5 = v22;
  return result;
}

uint64_t sub_100066C38(uint64_t (*a1)(char *), uint64_t a2)
{
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v3 = sub_10006ED38();
  uint64_t v57 = *(void (***)(char *, uint64_t, uint64_t))(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v54 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004960(&qword_100093478);
  __chkstk_darwin(v5 - 8);
  uint64_t v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10006ED18();
  uint64_t v7 = *(void *)(v55 - 8);
  uint64_t v8 = __chkstk_darwin(v55);
  int v50 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v51 = (char *)&v39 - v10;
  uint64_t v11 = sub_100004960(&qword_100093480);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v59 = _swiftEmptyArrayStorage;
  sub_100065A0C(&qword_100093488, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_10006F5E8();
  unint64_t v15 = &v14[*(int *)(v12 + 44)];
  uint64_t v16 = sub_100065A0C(&qword_100091F58, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  uint64_t v17 = *(void *)v15;
  BOOL v56 = v14;
  sub_10006F7B8();
  if (v17 == v58[0])
  {
    uint64_t v18 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v42, 1, 1, v55);
LABEL_16:
    uint64_t v21 = (uint64_t)v56;
  }
  else
  {
    uint64_t v47 = v57 + 2;
    uint64_t v48 = (void (**)(uint64_t))(v7 + 16);
    uint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    os_log_type_t v46 = (void (**)(char *, uint64_t))(v57 + 1);
    uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    uint64_t v40 = v7;
    uint64_t v41 = (void (**)(char *, uint64_t))(v7 + 8);
    char v19 = v15;
    uint64_t v20 = v2;
    uint64_t v18 = (uint64_t)v42;
    uint64_t v21 = (uint64_t)v56;
    while (1)
    {
      uint64_t v23 = (void (*)(uint64_t *, void))sub_10006F7D8();
      uint64_t v24 = v55;
      (*v48)(v18);
      v23(v58, 0);
      char v25 = v54;
      (*v47)(v54, v21, v3);
      uint64_t v26 = v16;
      double v27 = v19;
      uint64_t v28 = v24;
      uint64_t v29 = v26;
      sub_10006F7C8();
      (*v46)(v25, v3);
      double v30 = *v49;
      (*v49)(v18, 0, 1, v28);
      if ((*v45)(v18, 1, v28) == 1) {
        break;
      }
      uint64_t v44 = v30;
      double v31 = *v57;
      uint64_t v32 = v51;
      (*v57)(v51, v18, v28);
      char v33 = v52(v32);
      if (v20)
      {
        (*v41)(v32, v28);
        sub_100039078((uint64_t)v56, &qword_100093480);
        return swift_release();
      }
      if (v33)
      {
        v31(v50, (uint64_t)v32, v28);
        char v34 = v59;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v43 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10002320C(0, *((void *)v34 + 2) + 1, 1);
          char v34 = v59;
        }
        unint64_t v37 = *((void *)v34 + 2);
        unint64_t v36 = *((void *)v34 + 3);
        if (v37 >= v36 >> 1)
        {
          sub_10002320C(v36 > 1, v37 + 1, 1);
          char v34 = v59;
        }
        *((void *)v34 + 2) = v37 + 1;
        v31((char *)v34+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v37, (uint64_t)v50, v28);
        Swift::String v59 = v34;
        uint64_t v18 = (uint64_t)v42;
        uint64_t v20 = v43;
      }
      else
      {
        (*v41)(v32, v28);
      }
      char v19 = v27;
      uint64_t v22 = *(void *)v27;
      uint64_t v21 = (uint64_t)v56;
      uint64_t v16 = v29;
      sub_10006F7B8();
      if (v22 == v58[0])
      {
        v44(v18, 1, 1, v55);
        goto LABEL_16;
      }
    }
  }
  sub_100039078(v21, &qword_100093480);
  sub_100039078(v18, &qword_100093478);
  return (uint64_t)v59;
}

uint64_t sub_100067238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100068BC8(a5, a6, *(void *)(v6 + 16));
}

void sub_10006724C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100068CC4(a9, a1, a2, a3, a4, *(double *)v10, *(double *)(v10 + 8), a10, *(void *)(v10 + 16));
}

uint64_t sub_100067260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1000672D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100067298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1000672D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1000672D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_100067314(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10006EC78();
  return sub_100067384;
}

void sub_100067384(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_1000673D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v2 = sub_10006EFD8();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  __chkstk_darwin(v2);
  os_log_type_t v46 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004960(&qword_100093370);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004960(&qword_100093378);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004960(&qword_100093380);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100004960(&qword_100093388);
  __chkstk_darwin(v45);
  uint64_t v44 = (uint64_t)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v1 + *(int *)(type metadata accessor for ThreeColumnDataEntry() + 24));
  uint64_t v42 = v1;
  uint64_t v43 = v19;
  sub_10006F058();
  uint64_t v20 = enum case for Font.Design.default(_:);
  uint64_t v21 = sub_10006F048();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v18, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
  uint64_t v23 = sub_10006F078();
  sub_100039078((uint64_t)v18, &qword_100092508);
  *(void *)uint64_t v6 = sub_10006EF18();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v24 = sub_100004960(&qword_100093390);
  sub_100067878(v42, v43, v23, (uint64_t *)&v6[*(int *)(v24 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100053F94((uint64_t)v6, (uint64_t)v10, &qword_100093370);
  uint64_t v26 = &v10[*(int *)(v8 + 44)];
  *(void *)uint64_t v26 = KeyPath;
  *((void *)v26 + 1) = 1;
  v26[16] = 0;
  sub_100039078((uint64_t)v6, &qword_100093370);
  uint64_t v27 = sub_10006F208();
  uint64_t v28 = swift_getKeyPath();
  sub_100053F94((uint64_t)v10, (uint64_t)v14, &qword_100093378);
  uint64_t v29 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  uint64_t *v29 = v28;
  v29[1] = v27;
  sub_100039078((uint64_t)v10, &qword_100093378);
  LOBYTE(v27) = sub_10006F018();
  sub_10006EC98();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = v44;
  sub_100053F94((uint64_t)v14, v44, &qword_100093380);
  uint64_t v39 = v38 + *(int *)(v45 + 36);
  *(unsigned char *)uint64_t v39 = v27;
  *(void *)(v39 + 8) = v31;
  *(void *)(v39 + 16) = v33;
  *(void *)(v39 + 24) = v35;
  *(void *)(v39 + 32) = v37;
  *(unsigned char *)(v39 + 40) = 0;
  sub_100039078((uint64_t)v14, &qword_100093380);
  uint64_t v40 = v46;
  sub_10006EFC8();
  sub_1000685B8();
  sub_10006F178();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v40, v49);
  return sub_100039078(v38, &qword_100093388);
}

uint64_t sub_100067878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v45 = a2;
  uint64_t v43 = a4;
  uint64_t v48 = sub_10006EF98();
  __chkstk_darwin(v48);
  os_log_type_t v46 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10006F2B8();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_100004960(&qword_1000933B8);
  uint64_t v54 = *(void *)(v42 - 8);
  uint64_t v10 = __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v49 = (char *)&v39 - v12;
  uint64_t v13 = sub_100004960(&qword_100092508);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ThreeColumnDataEntry() + 20));
  uint64_t v17 = v16[1];
  uint64_t v57 = *v16;
  uint64_t v58 = v17;
  sub_100004A48();
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_10006F0E8();
  uint64_t v40 = v18;
  uint64_t v53 = v19;
  char v21 = v20 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006F058();
  uint64_t v22 = enum case for Font.Design.default(_:);
  uint64_t v23 = sub_10006F048();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v15, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v23);
  uint64_t v51 = sub_10006F078();
  sub_100039078((uint64_t)v15, &qword_100092508);
  uint64_t v50 = swift_getKeyPath();
  sub_100004960(&qword_1000933C0);
  sub_10006F2C8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100073160;
  void *v9 = 0x4030000000000000;
  char v25 = *(void (**)(void *, void, uint64_t))(v7 + 104);
  v25(v9, enum case for GridItem.Size.fixed(_:), v6);
  sub_10006F2E8();
  sub_10006F2D8();
  *(_OWORD *)uint64_t v9 = xmmword_100073FC0;
  v25(v9, enum case for GridItem.Size.flexible(_:), v6);
  sub_10006F2F8();
  sub_10006F2D8();
  uint64_t v55 = v45;
  uint64_t v56 = v47;
  sub_10006EF08();
  LODWORD(v57) = 0;
  sub_100065A0C(&qword_1000933C8, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  sub_10006FE28();
  sub_100004960(&qword_1000933D0);
  sub_1000687C4();
  uint64_t v26 = v49;
  sub_10006F308();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  uint64_t v28 = v44;
  uint64_t v29 = v26;
  uint64_t v30 = v42;
  v27(v44, v29, v42);
  uint64_t v31 = v41;
  uint64_t v32 = v43;
  uint64_t v33 = v40;
  *uint64_t v43 = v41;
  v32[1] = v33;
  *((unsigned char *)v32 + 16) = v21;
  uint64_t v34 = KeyPath;
  v32[3] = v53;
  v32[4] = v34;
  v32[5] = 1;
  *((unsigned char *)v32 + 48) = 0;
  uint64_t v35 = v51;
  v32[7] = v50;
  v32[8] = v35;
  v32[9] = 0;
  *((unsigned char *)v32 + 80) = 0;
  uint64_t v36 = sub_100004960(&qword_1000933F0);
  v27((char *)v32 + *(int *)(v36 + 64), v28, v30);
  LOBYTE(v32) = v21;
  sub_100038D70(v31, v33, v21);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v54 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v37(v49, v30);
  v37(v28, v30);
  sub_100038EA0(v31, v33, (char)v32);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100067EE4()
{
  return sub_10006F2A8();
}

uint64_t sub_100068008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = *(_OWORD *)(a1 + 16);
  v31[0] = *(_OWORD *)a1;
  v31[1] = v5;
  void v31[2] = *(_OWORD *)(a1 + 32);
  char v32 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_10006F238();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v19 = sub_10006EE88();
  sub_1000681C0((uint64_t)v31, (uint64_t)v21);
  uint64_t v8 = v21[0];
  uint64_t v7 = v21[1];
  char v9 = v22;
  uint64_t v11 = v23;
  uint64_t v10 = v24;
  char v12 = v25;
  uint64_t v13 = v26;
  uint64_t v14 = v27;
  char v15 = v28;
  uint64_t v16 = v29;
  uint64_t v17 = v30;
  LOBYTE(v21[0]) = 0;
  char v35 = v22;
  char v34 = v25;
  char v33 = v28;
  *(void *)a3 = v20;
  *(void *)(a3 + 8) = KeyPath;
  *(void *)(a3 + 16) = a2;
  *(void *)(a3 + 24) = v19;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = v7;
  *(unsigned char *)(a3 + 64) = v9;
  *(void *)(a3 + 72) = v11;
  *(void *)(a3 + 80) = v10;
  *(unsigned char *)(a3 + 88) = v12;
  *(void *)(a3 + 96) = v13;
  *(void *)(a3 + 104) = v14;
  *(unsigned char *)(a3 + 112) = v15;
  *(void *)(a3 + 120) = v16;
  *(void *)(a3 + 128) = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100038D70(v8, v7, v9);
  swift_bridgeObjectRetain();
  sub_100038D70(v13, v14, v15);
  swift_bridgeObjectRetain();
  sub_100038EA0(v8, v7, v9);
  swift_bridgeObjectRelease();
  sub_100038EA0(v13, v14, v15);
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000681C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_10006EED8();
  __chkstk_darwin(v3 - 8);
  sub_100004A48();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10006F0E8();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  sub_10006F088();
  uint64_t v9 = sub_10006F0C8();
  uint64_t v52 = v10;
  uint64_t v53 = v9;
  char v12 = v11;
  uint64_t v54 = v13;
  swift_release();
  char v51 = v12 & 1;
  sub_100038EA0(v4, v6, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_10006F0E8();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_10006F038();
  uint64_t v19 = sub_10006F0C8();
  uint64_t v49 = v20;
  char v22 = v21;
  swift_release();
  char v48 = v22 & 1;
  sub_100038EA0(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_10006EEC8();
  v55._uint64_t countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  sub_10006EEB8(v55);
  if (*(unsigned char *)(a1 + 48)) {
    v23._uint64_t countAndFlagsBits = 37;
  }
  else {
    v23._uint64_t countAndFlagsBits = 0;
  }
  if (*(unsigned char *)(a1 + 48)) {
    uint64_t v24 = (void *)0xE100000000000000;
  }
  else {
    uint64_t v24 = (void *)0xE000000000000000;
  }
  v23._object = v24;
  sub_10006EEA8(v23);
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  sub_10006EEB8(v56);
  sub_10006EEF8();
  uint64_t v25 = sub_10006F0D8();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  sub_10006F038();
  sub_10006F098();
  swift_release();
  uint64_t v30 = sub_10006F0C8();
  uint64_t v32 = v31;
  char v34 = v33;
  swift_release();
  sub_100038EA0(v25, v27, v29);
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_10006F0B8();
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  sub_100038EA0(v30, v32, v34 & 1);
  swift_bridgeObjectRelease();
  sub_100038EA0(v19, v49, v48);
  swift_bridgeObjectRelease();
  sub_10006F038();
  uint64_t v39 = sub_10006F0C8();
  uint64_t v41 = v40;
  char v43 = v42;
  uint64_t v45 = v44;
  swift_release();
  sub_100038EA0(v47, v36, v38);
  swift_bridgeObjectRelease();
  *(void *)a2 = v53;
  *(void *)(a2 + 8) = v52;
  *(unsigned char *)(a2 + 16) = v51;
  *(void *)(a2 + 24) = v54;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v39;
  *(void *)(a2 + 56) = v41;
  *(unsigned char *)(a2 + 64) = v43 & 1;
  *(void *)(a2 + 72) = v45;
  *(void *)(a2 + 80) = 0x4000000000000000;
  sub_100038D70(v53, v52, v51);
  swift_bridgeObjectRetain();
  sub_100038D70(v39, v41, v43 & 1);
  swift_bridgeObjectRetain();
  sub_100038EA0(v39, v41, v43 & 1);
  swift_bridgeObjectRelease();
  sub_100038EA0(v53, v52, v51);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1000685B8()
{
  unint64_t result = qword_100093398;
  if (!qword_100093398)
  {
    sub_1000049A4(&qword_100093388);
    sub_100068634();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093398);
  }
  return result;
}

unint64_t sub_100068634()
{
  unint64_t result = qword_1000933A0;
  if (!qword_1000933A0)
  {
    sub_1000049A4(&qword_100093380);
    sub_1000686F4(&qword_1000933A8, &qword_100093378, &qword_1000933B0, &qword_100093370);
    sub_10002643C(&qword_100092538, &qword_100092540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000933A0);
  }
  return result;
}

uint64_t sub_1000686F4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000049A4(a2);
    sub_10002643C(a3, a4);
    sub_10002643C(&qword_100092588, &qword_100092590);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000687BC()
{
  return sub_100067EE4();
}

unint64_t sub_1000687C4()
{
  unint64_t result = qword_1000933D8;
  if (!qword_1000933D8)
  {
    sub_1000049A4(&qword_1000933D0);
    sub_10002643C(&qword_1000933E0, &qword_1000933E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000933D8);
  }
  return result;
}

uint64_t sub_10006885C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100068008(a1, v2, a2);
}

unint64_t sub_100068864()
{
  unint64_t result = qword_100093408;
  if (!qword_100093408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093408);
  }
  return result;
}

unint64_t sub_1000688B8()
{
  unint64_t result = qword_100093430;
  if (!qword_100093430)
  {
    sub_1000049A4(&qword_100093420);
    sub_1000686F4(&qword_100093438, &qword_100093418, &qword_100093440, &qword_100093410);
    sub_10002643C(&qword_100092538, &qword_100092540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093430);
  }
  return result;
}

uint64_t sub_100068978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006642C(a1, v2, a2);
}

uint64_t sub_100068980(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100038D70(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000689C4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100038EA0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for ThreeByThreeGridWithOptionalMiddleColumn(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ThreeByThreeGridWithOptionalMiddleColumn(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ThreeByThreeGridWithOptionalMiddleColumn(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ThreeByThreeGridWithOptionalMiddleColumn()
{
  return &type metadata for ThreeByThreeGridWithOptionalMiddleColumn;
}

uint64_t sub_100068A78(uint64_t a1)
{
  return sub_100068AB8(a1, &qword_100093388, (void (*)(void))sub_1000685B8);
}

uint64_t sub_100068A98(uint64_t a1)
{
  return sub_100068AB8(a1, &qword_100093420, (void (*)(void))sub_1000688B8);
}

uint64_t sub_100068AB8(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100068B1C()
{
  unint64_t result = qword_100093468;
  if (!qword_100093468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093468);
  }
  return result;
}

unint64_t sub_100068B74()
{
  unint64_t result = qword_100093470;
  if (!qword_100093470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093470);
  }
  return result;
}

uint64_t sub_100068BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10006ED38();
  sub_100065A0C(&qword_100091F58, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_10006F788();
  sub_10006F7B8();
  uint64_t result = sub_10006F7A8();
  if (!a3)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    return result;
  }
  if (result == 0x8000000000000000 && a3 == -1) {
    goto LABEL_6;
  }
  return result;
}

void sub_100068CC4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6, double a7, uint64_t a8, uint64_t a9)
{
  CGFloat v77 = a5;
  uint64_t v76 = sub_10006ED18();
  uint64_t v16 = *(void *)(v76 - 8);
  uint64_t v17 = __chkstk_darwin(v76);
  char v80 = (char *)v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v83 = (char *)v65 - v20;
  __chkstk_darwin(v19);
  uint64_t v81 = (char *)v65 - v21;
  uint64_t v22 = sub_10006ED68();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v71 = (char *)v65 - v27;
  sub_10006ED38();
  sub_100065A0C(&qword_100091F58, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_10006F788();
  sub_10006F7B8();
  if (v85 != v84)
  {
    sub_10006F788();
    sub_10006F7B8();
    uint64_t v28 = sub_10006F7A8();
    if (!a9)
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v29 = v28;
    if (v28 == 0x8000000000000000 && a9 == -1) {
      goto LABEL_36;
    }
    v86.origin.x = a2;
    v86.origin.y = a3;
    v86.size.width = a4;
    CGFloat v30 = v77;
    v86.size.height = v77;
    double Height = CGRectGetHeight(v86);
    v87.origin.x = a2;
    v87.origin.y = a3;
    v87.size.width = a4;
    v87.size.height = v30;
    CGRectGetWidth(v87);
    v88.origin.x = a2;
    v88.origin.y = a3;
    v88.size.width = a4;
    v88.size.height = v30;
    double v33 = CGRectGetHeight(v88);
    if (a9 < 0) {
      goto LABEL_32;
    }
    double v82 = v33;
    uint64_t v34 = v29 / a9;
    __chkstk_darwin(v32);
    *(double *)&v65[-4] = a6;
    *(double *)&v65[-3] = a7;
    v65[-2] = a9;
    v65[-1] = a1;
    uint64_t v35 = sub_100064FFC((double *)sub_10006960C, (uint64_t)&v65[-6], 0, a9);
    if (v34 < 0)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    double v74 = Height;
    v65[0] = v16;
    uint64_t v36 = __chkstk_darwin(v35);
    v65[-10] = a1;
    *(double *)&v65[-9] = a6;
    *(double *)&v65[-8] = a7;
    v65[-7] = a9;
    v65[-6] = v36;
    uint64_t v69 = v36;
    v65[-5] = &off_10008CD68;
    *(CGFloat *)&v65[-4] = a2;
    *(CGFloat *)&v65[-3] = a3;
    double v37 = v77;
    *(CGFloat *)&v65[-2] = a4;
    *(double *)&v65[-1] = v37;
    char v38 = sub_100065150((double *)sub_100069648, (uint64_t)&v65[-12], 0, v34);
    uint64_t v68 = __chkstk_darwin(v38);
    v65[-6] = v68;
    v65[-5] = a1;
    *(double *)&v65[-4] = a6;
    *(double *)&v65[-3] = a7;
    v65[-2] = a9;
    uint64_t v75 = v34;
    sub_1000652A4(sub_10006967C, 0.0, (uint64_t)&v65[-8], 0, v34);
    uint64_t v72 = v39;
    sub_10006ED28();
    uint64_t v40 = enum case for LayoutDirection.leftToRight(_:);
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 104);
    v41(v26, enum case for LayoutDirection.leftToRight(_:), v22);
    char v42 = sub_10006ED58();
    uint64_t v44 = *(void (**)(char *, uint64_t))(v23 + 8);
    uint64_t v43 = v23 + 8;
    BOOL v70 = v44;
    v44(v26, v22);
    uint64_t v67 = a9;
    CGFloat v45 = a2;
    CGFloat v46 = a3;
    CGFloat v47 = a4;
    double v48 = v37;
    if (v42) {
      CGRectGetMinX(*(CGRect *)&v45);
    }
    else {
      CGRectGetMaxX(*(CGRect *)&v45);
    }
    CGFloat v49 = v37;
    v41(v26, v40, v22);
    sub_10006ED58();
    uint64_t v50 = v70;
    v70(v26, v22);
    v41(v26, v40, v22);
    char v51 = sub_10006ED58();
    v50(v26, v22);
    uint64_t v66 = v22;
    v65[1] = v43;
    uint64_t v52 = v67;
    if (v51) {
      sub_10006F318();
    }
    else {
      sub_10006F328();
    }
    uint64_t v78 = v54;
    uint64_t v79 = v53;
    if (v75)
    {
      if (!*(void *)(v69 + 16))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if ((unint64_t)(v75 - 1) >= *(void *)(v68 + 16))
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return;
      }
      uint64_t v55 = 0;
      double v56 = v74 / (double)v75;
      *(void *)&double v82 = v69 + 32;
      uint64_t v57 = v68 + 32;
      double v58 = 2.0;
      if (v75 == 1) {
        double v58 = 4.0;
      }
      double v74 = v74 / (double)v75;
      double v73 = v56 / v58;
      Swift::String v59 = (void (**)(char *, uint64_t))(v65[0] + 8);
      while (1)
      {
        uint64_t v64 = v55 * v52;
        if ((unsigned __int128)(v55 * (__int128)v52) >> 64 != (v55 * v52) >> 63) {
          break;
        }
        sub_10006ED48();
        v90.origin.x = a2;
        v90.origin.y = a3;
        v90.size.width = a4;
        v90.size.height = v49;
        CGRectGetMinY(v90);
        sub_10006F338();
        LOBYTE(v85) = 0;
        LOBYTE(v84) = 0;
        sub_10006ED08();
        if (__OFADD__(v64, 1)) {
          goto LABEL_29;
        }
        sub_10006ED48();
        if (*(unsigned char *)(v57 + v55) == 1)
        {
          v91.origin.x = a2;
          v91.origin.y = a3;
          v91.size.width = a4;
          v91.size.height = v77;
          CGRectGetMinY(v91);
        }
        LOBYTE(v85) = 0;
        LOBYTE(v84) = 0;
        sub_10006ED08();
        if (__OFADD__(v64, 2)) {
          goto LABEL_30;
        }
        sub_10006ED48();
        CGFloat v49 = v77;
        ++v55;
        v89.origin.x = a2;
        v89.origin.y = a3;
        v89.size.width = a4;
        v89.size.height = v77;
        CGRectGetMinY(v89);
        LOBYTE(v85) = 0;
        LOBYTE(v84) = 0;
        Swift::String v60 = v80;
        sub_10006ED08();
        uint64_t v61 = *v59;
        id v62 = v60;
        uint64_t v63 = v76;
        (*v59)(v62, v76);
        v61(v83, v63);
        v61(v81, v63);
        if (v75 == v55) {
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      __break(1u);
      __break(1u);
      __break(1u);
      __break(1u);
      goto LABEL_31;
    }
LABEL_26:
    v70(v71, v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_10006960C(uint64_t *a1@<X0>, double *a2@<X8>)
{
  *a2 = sub_1000696A0(*(void *)(v2 + 40), *a1);
}

uint64_t sub_100069648@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1000668C4(a1, *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2, *(CGFloat *)(v2 + 64), *(CGFloat *)(v2 + 72), *(CGFloat *)(v2 + 80), *(CGFloat *)(v2 + 88));
}

uint64_t sub_10006967C@<X0>(double *a1@<X0>, unint64_t *a2@<X1>, double *a3@<X8>)
{
  return sub_100066AB0(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 48), a3);
}

double sub_1000696A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10006ED18();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10006ED38();
  __chkstk_darwin(v8);
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v11 = sub_100066C38((uint64_t (*)(char *))sub_1000699A0, (uint64_t)v32);
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    double v37 = _swiftEmptyArrayStorage;
    sub_1000231EC(0, v12, 0);
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v30 = v11;
    uint64_t v31 = v14;
    unint64_t v15 = v11 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    do
    {
      v31(v7, v15, v4);
      sub_10006ED88();
      char v36 = v17 & 1;
      char v35 = v18 & 1;
      sub_10006ECF8();
      double v20 = v19;
      (*(void (**)(char *, uint64_t))(v13 - 8))(v7, v4);
      uint64_t v21 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000231EC(0, *((void *)v21 + 2) + 1, 1);
        uint64_t v21 = v37;
      }
      unint64_t v23 = *((void *)v21 + 2);
      unint64_t v22 = *((void *)v21 + 3);
      if (v23 >= v22 >> 1)
      {
        sub_1000231EC(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v37;
      }
      *((void *)v21 + 2) = v23 + 1;
      v21[v23 + 4] = v20;
      v15 += v16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    double v24 = v21[2];
    if (v24 != 0.0) {
      goto LABEL_9;
    }
LABEL_15:
    double v26 = 0.0;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = _swiftEmptyArrayStorage;
  double v24 = _swiftEmptyArrayStorage[2];
  if (v24 == 0.0) {
    goto LABEL_15;
  }
LABEL_9:
  uint64_t v25 = v21 + 4;
  double v26 = 0.0;
  do
  {
    double v27 = *v25++;
    double v28 = v27;
    if (v26 <= v27) {
      double v26 = v28;
    }
    --*(void *)&v24;
  }
  while (v24 != 0.0);
LABEL_16:
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1000699A0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t result = sub_1000201D4();
  if ((v3 & 1) == 0) {
    return result % 3 == v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100069A00(void *a1)
{
  uint64_t v3 = sub_100004960(&qword_100093498);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100010FDC(a1, a1[3]);
  sub_10006A0CC();
  sub_10006FDF8();
  v8[15] = 0;
  sub_10006FC08();
  if (!v1)
  {
    v8[14] = 1;
    sub_10006FC08();
    v8[13] = 2;
    sub_10006FC08();
    v8[12] = 3;
    sub_10006FC18();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_100069BB0()
{
  unint64_t result = 0x656D614E6E6F6369;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C6562616CLL;
      break;
    case 2:
      unint64_t result = 0x7972616D6D7573;
      break;
    case 3:
      unint64_t result = 0xD00000000000002ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100069C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006A9FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100069C68(uint64_t a1)
{
  unint64_t v2 = sub_10006A0CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100069CA4(uint64_t a1)
{
  unint64_t v2 = sub_10006A0CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100069CE0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = (void *)v1[3];
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = 47;
  v8._object = (void *)0xE100000000000000;
  sub_10006F558(v8);
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v3;
  v9._object = v4;
  sub_10006F558(v9);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t sub_100069D68(void *a1)
{
  return sub_100069A00(a1);
}

uint64_t sub_100069D80()
{
  sub_10006F9D8(40);
  swift_bridgeObjectRelease();
  strcpy((char *)v8, "{ iconName: ");
  BYTE5(v8[1]) = 0;
  HIWORD(v8[1]) = -5120;
  uint64_t v1 = *v0;
  unint64_t v2 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v1;
  v9._object = v2;
  sub_10006F558(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x3A6C6562616C202CLL;
  v10._object = (void *)0xE900000000000020;
  sub_10006F558(v10);
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = v3;
  v11._object = v4;
  sub_10006F558(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x72616D6D7573202CLL;
  v12._object = (void *)0xEB00000000203A79;
  sub_10006F558(v12);
  uint64_t v6 = v0[4];
  uint64_t v5 = (void *)v0[5];
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = v6;
  v13._object = v5;
  sub_10006F558(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 32032;
  v14._object = (void *)0xE200000000000000;
  sub_10006F558(v14);
  return v8[0];
}

ValueMetadata *type metadata accessor for ThreeColumnDataRow()
{
  return &type metadata for ThreeColumnDataRow;
}

unint64_t sub_100069EC8()
{
  unint64_t result = qword_100093490;
  if (!qword_100093490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093490);
  }
  return result;
}

void sub_100069F1C()
{
  qword_10009A9F8 = (uint64_t)&_swiftEmptyArrayStorage;
}

uint64_t sub_100069F30(uint64_t a1)
{
  return sub_100069F78(a1, 0xD000000000000038, 0x8000000100079D90, &qword_10009AA00);
}

uint64_t sub_100069F54(uint64_t a1)
{
  return sub_100069F78(a1, 0xD000000000000035, 0x8000000100079DD0, &qword_10009AA08);
}

uint64_t sub_100069F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_10006EC08();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10006F4B8();
  __chkstk_darwin(v6 - 8);
  sub_100004960(&qword_100091CC0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100070910;
  sub_10006F4A8();
  sub_10006EBF8();
  uint64_t result = sub_10006F518();
  *(void *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = 0xE000000000000000;
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = 0xE000000000000000;
  *(void *)(v7 + 64) = result;
  *(void *)(v7 + 72) = v9;
  *(unsigned char *)(v7 + 80) = 0;
  *a4 = v7;
  return result;
}

unint64_t sub_10006A0CC()
{
  unint64_t result = qword_1000934A0;
  if (!qword_1000934A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000934A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ThreeColumnDataRow.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006A1ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThreeColumnDataRow.CodingKeys()
{
  return &type metadata for ThreeColumnDataRow.CodingKeys;
}

uint64_t *sub_10006A224(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10006EB88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    Swift::String v10 = (uint64_t *)((char *)a1 + v8);
    Swift::String v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *Swift::String v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10006A318(uint64_t a1)
{
  uint64_t v2 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006A39C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  Swift::String v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10006A440(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  return a1;
}

uint64_t sub_10006A514(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10006A5A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10006EB88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10006A650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006A664);
}

uint64_t sub_10006A664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10006EB88();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10006A728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006A73C);
}

uint64_t sub_10006A73C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10006EB88();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ThreeColumnDataEntry()
{
  uint64_t result = qword_100093500;
  if (!qword_100093500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006A848()
{
  uint64_t result = sub_10006EB88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10006A8F8()
{
  unint64_t result = qword_100093540;
  if (!qword_100093540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093540);
  }
  return result;
}

unint64_t sub_10006A950()
{
  unint64_t result = qword_100093548;
  if (!qword_100093548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093548);
  }
  return result;
}

unint64_t sub_10006A9A8()
{
  unint64_t result = qword_100093550;
  if (!qword_100093550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093550);
  }
  return result;
}

uint64_t sub_10006A9FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000;
  if (v2 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000 || (sub_10006FCE8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x8000000100079E10)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10006FCE8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void *UmbrellaCategory.climate.unsafeMutableAddressor()
{
  return &static UmbrellaCategory.climate;
}

void *UmbrellaCategory.securityAndAccess.unsafeMutableAddressor()
{
  return &static UmbrellaCategory.securityAndAccess;
}

void *UmbrellaCategory.water.unsafeMutableAddressor()
{
  return &static UmbrellaCategory.water;
}

void *UmbrellaCategory.lightsAndSwitches.unsafeMutableAddressor()
{
  return &static UmbrellaCategory.lightsAndSwitches;
}

void *UmbrellaCategory.blinds.unsafeMutableAddressor()
{
  return &static UmbrellaCategory.blinds;
}

void *UmbrellaCategory.speakersAndTelevisions.unsafeMutableAddressor()
{
  return &static UmbrellaCategory.speakersAndTelevisions;
}

uint64_t static UmbrellaCategory.speakersAndTelevisions.getter()
{
  return 16;
}

uint64_t static UmbrellaCategory.water.getter()
{
  return 32;
}

void sub_10006AC04()
{
  static UmbrellaCategory.allCategories = (uint64_t)&off_10008CDA0;
}

uint64_t *UmbrellaCategory.allCategories.unsafeMutableAddressor()
{
  if (qword_100091788 != -1) {
    swift_once();
  }
  return &static UmbrellaCategory.allCategories;
}

uint64_t static UmbrellaCategory.allCategories.getter()
{
  if (qword_100091788 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10006ACC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10006B658(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t UmbrellaCategory.iconColorBase.getter(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      uint64_t result = static Color.gray.getter();
      break;
    case 2:
      uint64_t result = static Color.purple.getter();
      break;
    case 4:
      uint64_t result = static Color.yellow.getter();
      break;
    case 8:
      uint64_t result = static Color.teal.getter();
      break;
    case 16:
      uint64_t result = static Color.green.getter();
      break;
    case 32:
      uint64_t result = static Color.cyan.getter();
      break;
    default:
      uint64_t result = static Color.black.getter();
      break;
  }
  return result;
}

uint64_t UmbrellaCategory.localizedDescription.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 0x73646E696C42;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x6574616D696C43;
      break;
    case 3:
      uint64_t result = 0x746867694CLL;
      break;
    case 7:
      uint64_t result = 0x7974697275636553;
      break;
    case 15:
      uint64_t result = 0x7372656B61657053;
      break;
    case 31:
      uint64_t result = 0x7265746157;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t UmbrellaCategory.pluralLocalizedDescription.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 0x73646E696C42;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x6574616D696C43;
      break;
    case 3:
      uint64_t result = 0x73746867694CLL;
      break;
    case 7:
      uint64_t result = 0x7974697275636553;
      break;
    case 15:
      uint64_t result = 0x7372656B61657053;
      break;
    case 31:
      uint64_t result = 0x7265746157;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t UmbrellaCategory.accessoryLocalizedDescription.getter(uint64_t a1)
{
  uint64_t v2 = sub_10006EC08();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  uint64_t result = 0x73646E696C42;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0xD000000000000011;
      break;
    case 4:
      sub_10006F4A8();
      sub_10006EBF8();
      uint64_t result = sub_10006F518();
      break;
    case 8:
      uint64_t result = 0xD000000000000012;
      break;
    case 16:
      uint64_t result = 0x2072656B61657053;
      break;
    case 32:
      uint64_t result = 0x65766C6156;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t UmbrellaCategory.accessoryPluralLocalizedDescription.getter(uint64_t a1)
{
  uint64_t v2 = sub_10006EC08();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10006F4B8();
  __chkstk_darwin(v3 - 8);
  uint64_t result = 0x73646E696C42;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0xD000000000000013;
      break;
    case 4:
      sub_10006F4A8();
      sub_10006EBF8();
      uint64_t result = sub_10006F518();
      break;
    case 8:
      uint64_t result = 0xD000000000000014;
      break;
    case 16:
      uint64_t result = 0x7372656B61657053;
      break;
    case 32:
      uint64_t result = 0x7365766C6156;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_10006B4E8()
{
  unint64_t result = qword_100093558;
  if (!qword_100093558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093558);
  }
  return result;
}

unint64_t sub_10006B540()
{
  unint64_t result = qword_100093560;
  if (!qword_100093560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093560);
  }
  return result;
}

unint64_t sub_10006B598()
{
  unint64_t result = qword_100093568;
  if (!qword_100093568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093568);
  }
  return result;
}

unint64_t sub_10006B5F0()
{
  unint64_t result = qword_100093570;
  if (!qword_100093570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093570);
  }
  return result;
}

ValueMetadata *type metadata accessor for UmbrellaCategory()
{
  return &type metadata for UmbrellaCategory;
}

uint64_t sub_10006B658(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

Swift::String *homeDeepLinkURLPrefix.unsafeMutableAddressor()
{
  return &homeDeepLinkURLPrefix;
}

Swift::String *homeAccessoryTypePseudoHost.unsafeMutableAddressor()
{
  return &homeAccessoryTypePseudoHost;
}

Swift::String *homeDeepLinkURLMainScreen.unsafeMutableAddressor()
{
  return &homeDeepLinkURLMainScreen;
}

uint64_t sub_10006B6B4()
{
  uint64_t v0 = sub_100004960(&qword_100093580);

  return TupleWidget.init(_:)(v0, v0);
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_10006B734()
{
  unint64_t result = qword_100093578;
  if (!qword_100093578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093578);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeWidgetBundle()
{
  return &type metadata for HomeWidgetBundle;
}

uint64_t sub_10006B798()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10006B7B8()
{
  unint64_t result = qword_100093588;
  if (!qword_100093588)
  {
    sub_1000049A4(&qword_100093590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093588);
  }
  return result;
}

id SecurityAccessoryConfigurationIntent.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecurityAccessoryConfigurationIntent();
  return [super init];
}

uint64_t type metadata accessor for SecurityAccessoryConfigurationIntent()
{
  return self;
}

id SecurityAccessoryConfigurationIntent.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id SecurityAccessoryConfigurationIntent.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecurityAccessoryConfigurationIntent();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id SecurityAccessoryConfigurationIntent.__allocating_init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v4 = v3;
  if (a2)
  {
    NSString v6 = sub_10006F4D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithIdentifier:v6 backingStore:a3];

  return v7;
}

id SecurityAccessoryConfigurationIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = sub_10006F4D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for SecurityAccessoryConfigurationIntent();
  [super initWithIdentifier:v5 backingStore:a3];

  return v6;
}

id SecurityAccessoryConfigurationIntent.__allocating_init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = sub_10006F4D8();
  swift_bridgeObjectRelease();
  NSString v8 = sub_10006F4D8();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v9.super.id isa = sub_10006F468().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.id isa = 0;
  }
  id v10 = [objc_allocWithZone(v5) initWithDomain:v7 verb:v8 parametersByName:v9.super.isa];

  return v10;
}

id SecurityAccessoryConfigurationIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = sub_10006F4D8();
  swift_bridgeObjectRelease();
  NSString v8 = sub_10006F4D8();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v9.super.id isa = sub_10006F468().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.id isa = 0;
  }
  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for SecurityAccessoryConfigurationIntent();
  id v10 = [super initWithDomain:v7 verb:v8 parametersByName:v9.super.isa];

  return v10;
}

id SecurityAccessoryConfigurationIntent.__deallocating_deinit()
{
  return sub_10006C4A4(type metadata accessor for SecurityAccessoryConfigurationIntent);
}

unint64_t SecurityAccessoryConfigurationIntentResponseCode.init(rawValue:)(unint64_t a1)
{
  return sub_10006C4DC(a1);
}

unint64_t sub_10006BE38@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_10006C4DC(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t SecurityAccessoryConfigurationIntentResponse.code.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code;
  swift_beginAccess();
  return *(void *)v1;
}

char *SecurityAccessoryConfigurationIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[objc_allocWithZone(v2) init];
  id v6 = &v5[OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

char *SecurityAccessoryConfigurationIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[v2 init];
  id v6 = &v5[OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

id SecurityAccessoryConfigurationIntentResponse.init()()
{
  *(void *)&v0[OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecurityAccessoryConfigurationIntentResponse();
  return [super init];
}

id SecurityAccessoryConfigurationIntentResponse.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecurityAccessoryConfigurationIntentResponse();
  [super initWithCoder:a1];

  return v3;
}

id SecurityAccessoryConfigurationIntentResponse.__allocating_init(backingStore:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithBackingStore:a1];

  return v3;
}

id SecurityAccessoryConfigurationIntentResponse.init(backingStore:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecurityAccessoryConfigurationIntentResponse();
  [super initWithBackingStore:a1];

  return v3;
}

id sub_10006C2AC(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  *(void *)&a1[OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for SecurityAccessoryConfigurationIntentResponse();
  return [super a3];
}

id SecurityAccessoryConfigurationIntentResponse.__allocating_init(propertiesByName:)(uint64_t a1)
{
  if (a1)
  {
    v2.super.id isa = sub_10006F468().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.id isa = 0;
  }
  id v3 = [objc_allocWithZone(v1) initWithPropertiesByName:v2.super.isa];

  return v3;
}

id SecurityAccessoryConfigurationIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code] = 0;
  if (a1)
  {
    v2.super.id isa = sub_10006F468().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.id isa = 0;
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecurityAccessoryConfigurationIntentResponse();
  [super initWithPropertiesByName:v2.super.isa];

  if (v3) {
  return v3;
  }
}

id SecurityAccessoryConfigurationIntentResponse.__deallocating_deinit()
{
  return sub_10006C4A4(type metadata accessor for SecurityAccessoryConfigurationIntentResponse);
}

id sub_10006C4A4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

unint64_t sub_10006C4DC(unint64_t result)
{
  if (result > 6) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SecurityAccessoryConfigurationIntentResponse()
{
  return self;
}

unint64_t sub_10006C514()
{
  unint64_t result = qword_1000935A0;
  if (!qword_1000935A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000935A0);
  }
  return result;
}

uint64_t sub_10006C568@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_super v3 = (void *)(*a1 + OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_10006C5BC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  objc_super v3 = (void *)(*a2 + OBJC_IVAR___SecurityAccessoryConfigurationIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *objc_super v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for SecurityAccessoryConfigurationIntentResponseCode()
{
  return &type metadata for SecurityAccessoryConfigurationIntentResponseCode;
}

id ClimateSensorTypeConfigurationIntent.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSensorTypeConfigurationIntent();
  return [super init];
}

uint64_t type metadata accessor for ClimateSensorTypeConfigurationIntent()
{
  return self;
}

id ClimateSensorTypeConfigurationIntent.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ClimateSensorTypeConfigurationIntent();
  [super initWithCoder:a1];

  return v3;
}

id ClimateSensorTypeConfigurationIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = sub_10006F4D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ClimateSensorTypeConfigurationIntent();
  id v6 = [super initWithIdentifier:v5 backingStore:a3];

  return v6;
}

id ClimateSensorTypeConfigurationIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = sub_10006F4D8();
  swift_bridgeObjectRelease();
  NSString v8 = sub_10006F4D8();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v9.super.id isa = sub_10006F468().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.id isa = 0;
  }
  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for ClimateSensorTypeConfigurationIntent();
  id v10 = [super initWithDomain:v7 verb:v8 parametersByName:v9.super.isa];

  return v10;
}

id ClimateSensorTypeConfigurationIntent.__deallocating_deinit()
{
  return sub_10006D00C(type metadata accessor for ClimateSensorTypeConfigurationIntent);
}

uint64_t ClimateSensorTypeConfigurationIntentResponse.code.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code;
  swift_beginAccess();
  return *(void *)v1;
}

char *ClimateSensorTypeConfigurationIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[objc_allocWithZone(v2) init];
  id v6 = &v5[OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

char *ClimateSensorTypeConfigurationIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  NSString v5 = (char *)[v2 init];
  id v6 = &v5[OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code];
  swift_beginAccess();
  *(void *)id v6 = a1;
  NSString v7 = v5;
  [v7 setUserActivity:a2];

  return v7;
}

id ClimateSensorTypeConfigurationIntentResponse.init()()
{
  *(void *)&v0[OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClimateSensorTypeConfigurationIntentResponse();
  return [super init];
}

id ClimateSensorTypeConfigurationIntentResponse.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ClimateSensorTypeConfigurationIntentResponse();
  [super initWithCoder:a1];

  return v3;
}

id ClimateSensorTypeConfigurationIntentResponse.init(backingStore:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ClimateSensorTypeConfigurationIntentResponse();
  [super initWithBackingStore:a1];

  return v3;
}

id sub_10006CE98(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  *(void *)&a1[OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for ClimateSensorTypeConfigurationIntentResponse();
  return [super a3];
}

id ClimateSensorTypeConfigurationIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code] = 0;
  if (a1)
  {
    v2.super.id isa = sub_10006F468().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2.super.id isa = 0;
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ClimateSensorTypeConfigurationIntentResponse();
  [super initWithPropertiesByName:v2.super.isa];

  if (v3) {
  return v3;
  }
}

id ClimateSensorTypeConfigurationIntentResponse.__deallocating_deinit()
{
  return sub_10006D00C(type metadata accessor for ClimateSensorTypeConfigurationIntentResponse);
}

id sub_10006D00C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for ClimateSensorTypeConfigurationIntentResponse()
{
  return self;
}

unint64_t sub_10006D06C()
{
  unint64_t result = qword_100093600;
  if (!qword_100093600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100093600);
  }
  return result;
}

uint64_t sub_10006D0C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_super v3 = (void *)(*a1 + OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_10006D114(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  objc_super v3 = (void *)(*a2 + OBJC_IVAR___ClimateSensorTypeConfigurationIntentResponse_code);
  uint64_t result = swift_beginAccess();
  *objc_super v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for ClimateSensorTypeConfigurationIntentResponseCode()
{
  return &type metadata for ClimateSensorTypeConfigurationIntentResponseCode;
}

id SecurityIntentAccessory.__allocating_init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    NSString v8 = sub_10006F4D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  NSString v9 = sub_10006F4D8();
  swift_bridgeObjectRelease();
  if (a6)
  {
    NSString v10 = sub_10006F4D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  id v11 = [objc_allocWithZone(v6) initWithIdentifier:v8 displayString:v9 pronunciationHint:v10];

  return v11;
}

id SecurityIntentAccessory.init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    NSString v8 = sub_10006F4D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  NSString v9 = sub_10006F4D8();
  swift_bridgeObjectRelease();
  if (a6)
  {
    NSString v10 = sub_10006F4D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for SecurityIntentAccessory();
  id v11 = [super initWithIdentifier:v8 displayString:v9 pronunciationHint:v10];

  return v11;
}

uint64_t type metadata accessor for SecurityIntentAccessory()
{
  return self;
}

id SecurityIntentAccessory.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecurityIntentAccessory();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id SecurityIntentAccessory.__deallocating_deinit()
{
  return sub_10006DBC4(type metadata accessor for SecurityIntentAccessory);
}

id static SecurityIntentAccessoryResolutionResult.success(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata();
  v4.super_class = (Class)&OBJC_METACLASS___SecurityIntentAccessoryResolutionResult;
  [super successWithResolvedObject:a1];

  return v2;
}

id static SecurityIntentAccessoryResolutionResult.disambiguation(with:)(unint64_t a1)
{
  if (a1 >> 62)
  {
    sub_10006D64C();
    swift_bridgeObjectRetain();
    sub_10006FAB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10006FCF8();
    sub_10006D64C();
  }
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_10006D64C();
  Class isa = sub_10006F658().super.isa;
  swift_bridgeObjectRelease();
  v5.receiver = ObjCClassFromMetadata;
  v5.super_class = (Class)&OBJC_METACLASS___SecurityIntentAccessoryResolutionResult;
  [super disambiguationWithObjectsToDisambiguate:isa];

  return v3;
}

unint64_t sub_10006D64C()
{
  unint64_t result = qword_100093680;
  if (!qword_100093680)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100093680);
  }
  return result;
}

id static SecurityIntentAccessoryResolutionResult.confirmationRequired(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata();
  v4.super_class = (Class)&OBJC_METACLASS___SecurityIntentAccessoryResolutionResult;
  [super confirmationRequiredWithObjectToConfirm:a1];

  return v2;
}

void static SecurityIntentAccessoryResolutionResult.success(with:)()
{
}

void static SecurityIntentAccessoryResolutionResult.disambiguation(with:)()
{
}

void static SecurityIntentAccessoryResolutionResult.confirmationRequired(with:)()
{
}

id SecurityIntentAccessoryResolutionResult.__allocating_init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone(v2);
  Class isa = sub_10006F468().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithJSONDictionary:isa forIntent:a2];

  return v6;
}

id SecurityIntentAccessoryResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = sub_10006F468().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for SecurityIntentAccessoryResolutionResult();
  id v5 = [super initWithJSONDictionary:isa a2];

  id v6 = v5;
  if (v6) {

  }
  return v6;
}

uint64_t type metadata accessor for SecurityIntentAccessoryResolutionResult()
{
  return self;
}

id SecurityIntentAccessoryResolutionResult.__deallocating_deinit()
{
  return sub_10006DBC4(type metadata accessor for SecurityIntentAccessoryResolutionResult);
}

id sub_10006DBC4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

id ClimateSensorIntentType.init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    NSString v8 = sub_10006F4D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  NSString v9 = sub_10006F4D8();
  swift_bridgeObjectRelease();
  if (a6)
  {
    NSString v10 = sub_10006F4D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for ClimateSensorIntentType();
  id v11 = [super initWithIdentifier:v8 displayString:v9 pronunciationHint:v10];

  return v11;
}

uint64_t type metadata accessor for ClimateSensorIntentType()
{
  return self;
}

id ClimateSensorIntentType.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ClimateSensorIntentType();
  [super initWithCoder:a1];

  return v3;
}

id ClimateSensorIntentType.__deallocating_deinit()
{
  return sub_10006E4A8(type metadata accessor for ClimateSensorIntentType);
}

id static ClimateSensorIntentTypeResolutionResult.success(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata();
  v4.super_class = (Class)&OBJC_METACLASS___ClimateSensorIntentTypeResolutionResult;
  [super successWithResolvedObject:a1];

  return v2;
}

id static ClimateSensorIntentTypeResolutionResult.disambiguation(with:)(unint64_t a1)
{
  if (a1 >> 62)
  {
    sub_10006D64C();
    swift_bridgeObjectRetain();
    sub_10006FAB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10006FCF8();
    sub_10006D64C();
  }
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_10006D64C();
  Class isa = sub_10006F658().super.isa;
  swift_bridgeObjectRelease();
  v5.receiver = ObjCClassFromMetadata;
  v5.super_class = (Class)&OBJC_METACLASS___ClimateSensorIntentTypeResolutionResult;
  [super disambiguationWithObjectsToDisambiguate:isa];

  return v3;
}

id static ClimateSensorIntentTypeResolutionResult.confirmationRequired(with:)(uint64_t a1)
{
  v4.receiver = (id)swift_getObjCClassFromMetadata();
  v4.super_class = (Class)&OBJC_METACLASS___ClimateSensorIntentTypeResolutionResult;
  [super confirmationRequiredWithObjectToConfirm:a1];

  return v2;
}

void static ClimateSensorIntentTypeResolutionResult.success(with:)()
{
}

void static ClimateSensorIntentTypeResolutionResult.disambiguation(with:)()
{
}

void static ClimateSensorIntentTypeResolutionResult.confirmationRequired(with:)()
{
}

id ClimateSensorIntentTypeResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  Class isa = sub_10006F468().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ClimateSensorIntentTypeResolutionResult();
  [super initWithJSONDictionary:isa, a2];

  id v6 = v5;
  if (v6) {

  }
  return v6;
}

uint64_t type metadata accessor for ClimateSensorIntentTypeResolutionResult()
{
  return self;
}

id ClimateSensorIntentTypeResolutionResult.__deallocating_deinit()
{
  return sub_10006E4A8(type metadata accessor for ClimateSensorIntentTypeResolutionResult);
}

id sub_10006E4A8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_10006E504()
{
  return sub_10006E6B0(1);
}

uint64_t sub_10006E50C(uint64_t a1, int a2, int a3, int a4)
{
  if (qword_10009A688 == -1)
  {
    if (qword_10009A690) {
      return _availability_version_check();
    }
  }
  else
  {
    dispatch_once_f(&qword_10009A688, 0, (dispatch_function_t)sub_10006E6A8);
    if (qword_10009A690) {
      return _availability_version_check();
    }
  }
  if (qword_10009A680 == -1)
  {
    BOOL v8 = dword_10009A670 < a2;
    if (dword_10009A670 > a2) {
      return 1;
    }
  }
  else
  {
    dispatch_once_f(&qword_10009A680, 0, (dispatch_function_t)sub_10006E504);
    BOOL v8 = dword_10009A670 < a2;
    if (dword_10009A670 > a2) {
      return 1;
    }
  }
  if (v8) {
    return 0;
  }
  if (dword_10009A674 > a3) {
    return 1;
  }
  return dword_10009A674 >= a3 && dword_10009A678 >= a4;
}

uint64_t sub_10006E6A8()
{
  return sub_10006E6B0(0);
}

uint64_t sub_10006E6B0(uint64_t result)
{
  uint64_t v1 = (uint64_t (**)(void))qword_10009A690;
  if (qword_10009A690) {
    BOOL v2 = result == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (!v2)
  {
    if (&__availability_version_check)
    {
      uint64_t v1 = &__availability_version_check;
      qword_10009A690 = (uint64_t)&__availability_version_check;
    }
    if (!v1 || result != 0)
    {
      unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        objc_super v4 = *(unsigned __int8 **)result;
        unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          id v5 = (uint64_t (*)(void))result;
          unint64_t v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            objc_super v7 = (uint64_t (*)(void, uint64_t, void, void))result;
            unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              BOOL v8 = (uint64_t (*)(void, const char *, uint64_t, unsigned __int8 *))result;
              unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                NSString v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  NSString v10 = (uint64_t (*)(uint64_t))result;
                  unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    id v11 = (uint64_t (*)(void))result;
                    unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    double v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      unint64_t result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        objc_super v12 = (FILE *)result;
                        unint64_t result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          objc_super v13 = (FILE *)result;
                          double v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          uint64_t v14 = ftell(v13);
                          if (v14 < 0)
                          {
                            uint64_t v16 = 0;
                          }
                          else
                          {
                            size_t v15 = v14;
                            rewind(v13);
                            uint64_t v16 = malloc(v15);
                            if (v16)
                            {
                              double v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                uint64_t v17 = v5(0);
                                if (v17)
                                {
                                  uint64_t v18 = v17;
                                  double v19 = v13;
                                  if (v6) {
                                    uint64_t v20 = ((uint64_t (*)(void, uint64_t, void, void, void))v6)(0, v17, 0, 0, 0);
                                  }
                                  else {
                                    uint64_t v20 = v7(0, v17, 0, 0);
                                  }
                                  uint64_t v21 = v20;
                                  if (v20)
                                  {
                                    uint64_t v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      uint64_t v23 = v22;
                                      uint64_t v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        uint64_t v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984)) {
                                            sscanf(v29, "%d.%d.%d", &dword_10009A670, &dword_10009A674, &dword_10009A678);
                                          }
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    double v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  double v19 = v13;
                                }
                                uint64_t v16 = v26;
                              }
                              else
                              {
                                uint64_t v16 = v26;
                                double v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          double v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10006E9E8()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_10006E9F8()
{
  return Measurement.value.getter();
}

uint64_t sub_10006EA08()
{
  return Measurement<>.FormatStyle.format(_:)();
}

uint64_t sub_10006EA18()
{
  return static Measurement<>.FormatStyle.UnitWidth.narrow.getter();
}

uint64_t sub_10006EA28()
{
  return Measurement<>.FormatStyle<>.init(width:locale:usage:hidesScaleName:numberFormatStyle:)();
}

uint64_t sub_10006EA38()
{
  return Measurement<>.converted(to:)();
}

uint64_t sub_10006EA48()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_10006EA58()
{
  return __DataStorage._length.getter();
}

uint64_t sub_10006EA68()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_10006EA78()
{
  return FloatingPointFormatStyle.format(_:)();
}

uint64_t sub_10006EA88()
{
  return FloatingPointFormatStyle.init(locale:)();
}

uint64_t sub_10006EA98()
{
  return FloatingPointFormatStyle.precision(_:)();
}

uint64_t sub_10006EAA8()
{
  return static MeasurementFormatUnitUsage<>.weather.getter();
}

uint64_t sub_10006EAB8()
{
  return static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
}

uint64_t sub_10006EAC8()
{
  return type metadata accessor for NumberFormatStyleConfiguration.Precision();
}

void sub_10006EAD8(NSURL *retstr@<X8>)
{
}

uint64_t sub_10006EAE8()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006EAF8()
{
  return URL.init(string:)();
}

uint64_t sub_10006EB08()
{
  return type metadata accessor for URL();
}

uint64_t sub_10006EB18()
{
  return Data.description.getter();
}

uint64_t sub_10006EB28()
{
  return Data.hash(into:)();
}

uint64_t sub_10006EB38()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

NSDate sub_10006EB48()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_10006EB58()
{
  return static Date.+ infix(_:_:)();
}

uint64_t sub_10006EB68()
{
  return static Date.now.getter();
}

uint64_t sub_10006EB78()
{
  return Date.init()();
}

uint64_t sub_10006EB88()
{
  return type metadata accessor for Date();
}

uint64_t sub_10006EB98()
{
  return UUID.init(uuidString:)();
}

uint64_t sub_10006EBA8()
{
  return UUID.uuidString.getter();
}

uint64_t sub_10006EBB8()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_10006EBC8()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006EBD8()
{
  return type metadata accessor for UUID();
}

uint64_t sub_10006EBE8()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_10006EBF8()
{
  return static Locale.current.getter();
}

uint64_t sub_10006EC08()
{
  return type metadata accessor for Locale();
}

NSTimeZone sub_10006EC18()
{
  return TimeZone._bridgeToObjectiveC()();
}

uint64_t sub_10006EC28()
{
  return static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006EC38()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_10006EC48()
{
  return Logger.logObject.getter();
}

uint64_t sub_10006EC58()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10006EC68()
{
  return type metadata accessor for Logger();
}

uint64_t sub_10006EC78()
{
  return Animatable<>.animatableData.modify();
}

uint64_t sub_10006EC88()
{
  return static Animatable<>._makeAnimatable(value:inputs:)();
}

uint64_t sub_10006EC98()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_10006ECA8()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_10006ECB8()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_10006ECD8()
{
  return static WidgetBundle.main()();
}

uint64_t sub_10006ECE8()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_10006ECF8()
{
  return LayoutSubview.sizeThatFits(_:)();
}

uint64_t sub_10006ED08()
{
  return LayoutSubview.place(at:anchor:proposal:)();
}

uint64_t sub_10006ED18()
{
  return type metadata accessor for LayoutSubview();
}

uint64_t sub_10006ED28()
{
  return LayoutSubviews.layoutDirection.getter();
}

uint64_t sub_10006ED38()
{
  return type metadata accessor for LayoutSubviews();
}

uint64_t sub_10006ED48()
{
  return LayoutSubviews.subscript.getter();
}

uint64_t sub_10006ED58()
{
  return static LayoutDirection.== infix(_:_:)();
}

uint64_t sub_10006ED68()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t sub_10006ED78()
{
  return ModifiedContent<>.accessibilityIdentifier(_:)();
}

uint64_t sub_10006ED88()
{
  return static ProposedViewSize.unspecified.getter();
}

uint64_t sub_10006ED98()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_10006EDA8()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_10006EDB8()
{
  return EnvironmentValues.allowsTightening.getter();
}

uint64_t sub_10006EDC8()
{
  return EnvironmentValues.allowsTightening.setter();
}

uint64_t sub_10006EDD8()
{
  return EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_10006EDE8()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_10006EDF8()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_10006EE08()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_10006EE18()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_10006EE28()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_10006EE38()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_10006EE48()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_10006EE58()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_10006EE68()
{
  return EnvironmentValues.init()();
}

uint64_t sub_10006EE78()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_10006EE88()
{
  return static VerticalAlignment.firstTextBaseline.getter();
}

uint64_t sub_10006EE98()
{
  return static VerticalAlignment.center.getter();
}

void sub_10006EEA8(Swift::String a1)
{
}

void sub_10006EEB8(Swift::String a1)
{
}

uint64_t sub_10006EEC8()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10006EED8()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t sub_10006EEE8()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_10006EEF8()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t sub_10006EF08()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_10006EF18()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_10006EF28()
{
  return static SymbolRenderingMode.hierarchical.getter();
}

uint64_t sub_10006EF38()
{
  return type metadata accessor for SymbolRenderingMode();
}

uint64_t sub_10006EF48()
{
  return WidgetConfiguration.description<A>(_:)();
}

uint64_t sub_10006EF58()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_10006EF68()
{
  return WidgetConfiguration.configurationDisplayName<A>(_:)();
}

uint64_t sub_10006EF78()
{
  return WidgetConfiguration._containerBackgroundRemovable(_:)();
}

uint64_t sub_10006EF88()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10006EF98()
{
  return type metadata accessor for PinnedScrollableViews();
}

uint64_t sub_10006EFA8()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_10006EFB8()
{
  return static AccessibilityChildBehavior.ignore.getter();
}

uint64_t sub_10006EFC8()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t sub_10006EFD8()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_10006EFE8()
{
  return AccessoryCircularGaugeStyle.init()();
}

uint64_t sub_10006EFF8()
{
  return type metadata accessor for AccessoryCircularGaugeStyle();
}

uint64_t sub_10006F008()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_10006F018()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_10006F028()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_10006F038()
{
  return static Font.body.getter();
}

uint64_t sub_10006F048()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_10006F058()
{
  return static Font.Weight.bold.getter();
}

uint64_t sub_10006F068()
{
  return static Font.Weight.medium.getter();
}

uint64_t sub_10006F078()
{
  return static Font.system(size:weight:design:)();
}

uint64_t sub_10006F088()
{
  return static Font.headline.getter();
}

uint64_t sub_10006F098()
{
  return Font.smallCaps()();
}

uint64_t sub_10006F0A8()
{
  return Text.foregroundColor(_:)();
}

uint64_t sub_10006F0B8()
{
  return static Text.+ infix(_:_:)();
}

uint64_t sub_10006F0C8()
{
  return Text.font(_:)();
}

uint64_t sub_10006F0D8()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_10006F0E8()
{
  return Text.init<A>(_:)();
}

uint64_t sub_10006F0F8()
{
  return View.widgetURL(_:)();
}

uint64_t sub_10006F108()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_10006F118()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_10006F128()
{
  return View.gaugeStyle<A>(_:)();
}

uint64_t sub_10006F138()
{
  return View.accessibility(identifier:)();
}

uint64_t sub_10006F148()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10006F158()
{
  return View.accessibilityLabel(_:)();
}

uint64_t sub_10006F168()
{
  return View.allowsGaugeResizing(_:)();
}

uint64_t sub_10006F178()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_10006F188()
{
  return View.accessibilityIdentifier(_:)();
}

uint64_t sub_10006F208()
{
  return static Color.primary.getter();
}

uint64_t sub_10006F218()
{
  return Gauge.init<A>(value:in:label:currentValueLabel:)();
}

uint64_t sub_10006F228()
{
  return Image.init(systemName:)();
}

uint64_t sub_10006F238()
{
  return Image.init(_internalSystemName:)();
}

uint64_t sub_10006F248()
{
  return Image.symbolRenderingMode(_:)();
}

uint64_t sub_10006F258()
{
  return static Layout._makeLayoutView(root:inputs:body:)();
}

uint64_t sub_10006F268()
{
  return Layout.updateCache(_:subviews:)();
}

uint64_t sub_10006F278()
{
  return static Layout.layoutProperties.getter();
}

uint64_t sub_10006F288()
{
  return Layout.spacing(subviews:cache:)();
}

uint64_t sub_10006F298()
{
  return Layout<>.makeCache(subviews:)();
}

uint64_t sub_10006F2A8()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10006F2B8()
{
  return type metadata accessor for GridItem.Size();
}

uint64_t sub_10006F2C8()
{
  return type metadata accessor for GridItem();
}

uint64_t sub_10006F2D8()
{
  return GridItem.init(_:spacing:alignment:)();
}

uint64_t sub_10006F2E8()
{
  return static Alignment.center.getter();
}

uint64_t sub_10006F2F8()
{
  return static Alignment.leading.getter();
}

uint64_t sub_10006F308()
{
  return LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)();
}

uint64_t sub_10006F318()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t sub_10006F328()
{
  return static UnitPoint.topTrailing.getter();
}

uint64_t sub_10006F338()
{
  return static UnitPoint.center.getter();
}

uint64_t sub_10006F348()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_10006F358()
{
  return TimelineEntry.relevance.getter();
}

uint64_t sub_10006F388()
{
  return IntentConfiguration.init<A>(kind:intent:provider:content:)();
}

uint64_t sub_10006F398()
{
  return type metadata accessor for IntentConfiguration();
}

uint64_t sub_10006F3A8()
{
  return StaticConfiguration.init<A>(kind:provider:content:)();
}

uint64_t sub_10006F3B8()
{
  return static TimelineReloadPolicy.after(_:)();
}

uint64_t sub_10006F3C8()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_10006F3E8()
{
  return IntentTimelineProvider.recommendations()();
}

uint64_t sub_10006F408()
{
  return TimelineProviderContext.displaySize.getter();
}

uint64_t sub_10006F418()
{
  return TimelineProviderContext.family.getter();
}

uint64_t sub_10006F428()
{
  return TimelineProviderContext.isPreview.getter();
}

uint64_t sub_10006F438()
{
  return type metadata accessor for TimelineProviderContext();
}

uint64_t sub_10006F448()
{
  return Timeline.init(entries:policy:)();
}

uint64_t sub_10006F458()
{
  return BinaryFloatingPoint.formatted<A>(_:)();
}

NSDictionary sub_10006F468()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_10006F478()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006F488()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10006F498()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_10006F4A8()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_10006F4B8()
{
  return type metadata accessor for String.LocalizationValue();
}

uint64_t sub_10006F4C8()
{
  return String.LocalizationValue.init(_:)();
}

NSString sub_10006F4D8()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10006F4E8()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_10006F4F8()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006F508()
{
  return String.init(format:_:)();
}

uint64_t sub_10006F518()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_10006F528()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10006F538()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10006F548()
{
  return String.hash(into:)();
}

void sub_10006F558(Swift::String a1)
{
}

Swift::Int sub_10006F568()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_10006F578()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_10006F588()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_10006F5A8()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_10006F5B8()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_10006F5C8()
{
  return String.init<A>(_:)();
}

uint64_t sub_10006F5D8()
{
  return String.subscript.getter();
}

uint64_t sub_10006F5E8()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_10006F5F8()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_10006F608()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10006F618()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10006F628()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10006F638()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10006F648()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_10006F658()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10006F668()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10006F678()
{
  return Array.description.getter();
}

uint64_t sub_10006F688()
{
  return specialized Array._endMutation()();
}

uint64_t sub_10006F698()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10006F6A8()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_10006F6B8()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10006F6C8()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_10006F6D8()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10006F6E8()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_10006F6F8()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_10006F708()
{
  return Double.significandWidth.getter();
}

uint64_t sub_10006F718()
{
  return Double.write<A>(to:)();
}

uint64_t sub_10006F728()
{
  return Double.exponent.getter();
}

uint64_t sub_10006F738()
{
  return Float.significandWidth.getter();
}

uint64_t sub_10006F748()
{
  return Float.exponent.getter();
}

uint64_t sub_10006F758()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_10006F768()
{
  return Set.Index._asCocoa.modify();
}

uint64_t sub_10006F778()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_10006F788()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_10006F798()
{
  return dispatch thunk of Collection._customIndexOfEquatableElement(_:)();
}

uint64_t sub_10006F7A8()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t sub_10006F7B8()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_10006F7C8()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_10006F7D8()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_10006F7E8()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_10006F7F8()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10006F808()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_10006F818()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10006F828()
{
  return NSUnitTemperature.init(forLocale:usage:)();
}

uint64_t sub_10006F838()
{
  return static OS_dispatch_queue.main.getter();
}

Swift::Int sub_10006F848(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_10006F858()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_10006F868()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10006F878()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10006F888()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_10006F898()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_10006F8A8()
{
  return ArraySlice.description.getter();
}

uint64_t sub_10006F8C8()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_10006F8D8()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_10006F8E8()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t sub_10006F8F8()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_10006F908()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t sub_10006F918()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t sub_10006F928()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t sub_10006F938()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_10006F948()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_10006F958()
{
  return __CocoaSet.element(at:)();
}

uint64_t sub_10006F968()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_10006F978()
{
  return __CocoaSet.contains(_:)();
}

uint64_t sub_10006F988()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

uint64_t sub_10006F998()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_10006F9A8()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_10006F9B8()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_10006F9C8()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_10006F9D8(Swift::Int a1)
{
}

uint64_t sub_10006F9E8()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10006F9F8()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10006FA08()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10006FA18()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_10006FA28()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_10006FA38()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10006FA48()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_10006FA58()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_10006FA68()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_10006FA78()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10006FA88()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_10006FA98()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10006FAA8()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10006FAB8()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_10006FAC8()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10006FAD8()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_10006FAE8()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_10006FAF8()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10006FB08()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_10006FB18(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_10006FB28()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10006FB38()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_10006FB48()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006FB58()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006FB68()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006FB78()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006FB88()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10006FB98()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006FBA8()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006FBB8()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006FBC8()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006FBD8()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10006FBE8()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_10006FBF8()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10006FC08()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006FC18()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006FC28()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006FC38()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006FC48()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10006FC58()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006FC68()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006FC78()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006FC88()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10006FC98()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

Swift::Int sub_10006FCB8(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_10006FCC8()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10006FCE8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10006FCF8()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_10006FD08()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_10006FD18()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_10006FD28()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_10006FD38()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10006FD48()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10006FD58()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_10006FD68()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_10006FD78()
{
  return Hasher.init(_seed:)();
}

void sub_10006FD88(Swift::UInt a1)
{
}

void sub_10006FD98(Swift::UInt8 a1)
{
}

void sub_10006FDA8(Swift::UInt16 a1)
{
}

void sub_10006FDB8(Swift::UInt32 a1)
{
}

void sub_10006FDC8(Swift::UInt64 a1)
{
}

Swift::Int sub_10006FDD8()
{
  return Hasher._finalize()();
}

uint64_t sub_10006FDE8()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_10006FDF8()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_10006FE28()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

uint64_t HMStringFromHomeLocation()
{
  return _HMStringFromHomeLocation();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _availability_version_check()
{
  return __availability_version_check();
}

{
}

{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

void exit(int a1)
{
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fread(__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return _fseek(a1, a2, a3);
}

uint64_t ftell(FILE *a1)
{
  return _ftell(a1);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void rewind(FILE *a1)
{
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return _swift_isUniquelyReferenced_nonNull();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}