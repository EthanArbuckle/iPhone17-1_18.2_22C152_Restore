uint64_t ServiceKind.widgetTogglingCharacteristicKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = sub_1000B31A0();
  v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 != enum case for ServiceKind.airPurifier(_:)
    && v8 != enum case for ServiceKind.fan(_:)
    && v8 != enum case for ServiceKind.faucet(_:)
    && v8 != enum case for ServiceKind.heaterCooler(_:)
    && v8 != enum case for ServiceKind.humidifierDehumidifier(_:)
    && v8 != enum case for ServiceKind.irrigationSystem(_:))
  {
    if (v8 != enum case for ServiceKind.lightbulb(_:))
    {
      if (v8 == enum case for ServiceKind.microphone(_:))
      {
LABEL_14:
        v9 = (unsigned int *)&enum case for CharacteristicKind.mute(_:);
        goto LABEL_8;
      }
      if (v8 != enum case for ServiceKind.outlet(_:))
      {
        if (v8 == enum case for ServiceKind.speaker(_:)) {
          goto LABEL_14;
        }
        if (v8 != enum case for ServiceKind.switch(_:))
        {
          if (v8 != enum case for ServiceKind.targetControl(_:)
            && v8 != enum case for ServiceKind.television(_:)
            && v8 != enum case for ServiceKind.valve(_:)
            && v8 != enum case for ServiceKind.ventilationFan(_:))
          {
            v14 = sub_1000B3320();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 1, 1, v14);
            return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          }
          goto LABEL_7;
        }
      }
    }
    v9 = (unsigned int *)&enum case for CharacteristicKind.powerState(_:);
    goto LABEL_8;
  }
LABEL_7:
  v9 = (unsigned int *)&enum case for CharacteristicKind.active(_:);
LABEL_8:
  v10 = *v9;
  v11 = sub_1000B3320();
  v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(a1, v10, v11);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
}

uint64_t ServiceKind.widgetTargetCharacteristicType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000B31A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 != enum case for ServiceKind.door(_:))
  {
    if (v8 == enum case for ServiceKind.faucet(_:)) {
      goto LABEL_4;
    }
    if (v8 == enum case for ServiceKind.garageDoorOpener(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.targetDoorState(_:);
      goto LABEL_17;
    }
    if (v8 == enum case for ServiceKind.heaterCooler(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.targetHeaterCoolerState(_:);
      goto LABEL_17;
    }
    if (v8 == enum case for ServiceKind.humidifierDehumidifier(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.targetHumidifierDehumidifierState(_:);
      goto LABEL_17;
    }
    if (v8 == enum case for ServiceKind.lockMechanism(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.targetLockMechanismState(_:);
      goto LABEL_17;
    }
    if (v8 == enum case for ServiceKind.securitySystem(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.targetSecuritySystemState(_:);
      goto LABEL_17;
    }
    if (v8 == enum case for ServiceKind.thermostat(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.targetHeatingCoolingMode(_:);
      goto LABEL_17;
    }
    if (v8 == enum case for ServiceKind.valve(_:))
    {
LABEL_4:
      v9 = (unsigned int *)&enum case for CharacteristicKind.active(_:);
      goto LABEL_17;
    }
    if (v8 != enum case for ServiceKind.window(_:) && v8 != enum case for ServiceKind.windowCovering(_:))
    {
      uint64_t v15 = enum case for CharacteristicKind.active(_:);
      uint64_t v16 = sub_1000B3320();
      uint64_t v17 = *(void *)(v16 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(a1, v15, v16);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  v9 = (unsigned int *)&enum case for CharacteristicKind.targetPosition(_:);
LABEL_17:
  uint64_t v10 = *v9;
  uint64_t v11 = sub_1000B3320();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(a1, v10, v11);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
}

uint64_t ServiceKind.widgetCurrentCharacteristicType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000B31A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 != enum case for ServiceKind.door(_:))
  {
    if (v8 == enum case for ServiceKind.garageDoorOpener(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.currentDoorState(_:);
      goto LABEL_11;
    }
    if (v8 == enum case for ServiceKind.lockMechanism(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.currentLockMechanismState(_:);
      goto LABEL_11;
    }
    if (v8 == enum case for ServiceKind.securitySystem(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.currentSecuritySystemState(_:);
      goto LABEL_11;
    }
    if (v8 == enum case for ServiceKind.thermostat(_:))
    {
      v9 = (unsigned int *)&enum case for CharacteristicKind.currentHeatingCooling(_:);
      goto LABEL_11;
    }
    if (v8 != enum case for ServiceKind.window(_:) && v8 != enum case for ServiceKind.windowCovering(_:))
    {
      uint64_t v15 = enum case for CharacteristicKind.powerState(_:);
      uint64_t v16 = sub_1000B3320();
      uint64_t v17 = *(void *)(v16 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(a1, v15, v16);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  v9 = (unsigned int *)&enum case for CharacteristicKind.currentPosition(_:);
LABEL_11:
  uint64_t v10 = *v9;
  uint64_t v11 = sub_1000B3320();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(a1, v10, v11);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
}

uint64_t ServiceKind.widgetDisplayCharacteristicType.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000B31A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for ServiceKind.airPurifier(_:)) {
    goto LABEL_6;
  }
  if (v6 != enum case for ServiceKind.door(_:))
  {
    if (v6 != enum case for ServiceKind.fan(_:))
    {
      if (v6 == enum case for ServiceKind.garageDoorOpener(_:))
      {
        sub_100004210(&qword_1000D4F30);
        uint64_t v16 = sub_1000B3320();
        uint64_t v17 = *(void *)(v16 - 8);
        unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1000B5180;
        unint64_t v19 = v11 + v22;
        v20 = (unsigned int *)&enum case for CharacteristicKind.obstructionDetected(_:);
        goto LABEL_7;
      }
      if (v6 == enum case for ServiceKind.heaterCooler(_:))
      {
        sub_100004210(&qword_1000D4F30);
        uint64_t v7 = sub_1000B3320();
        uint64_t v23 = *(void *)(v7 - 8);
        uint64_t v24 = *(void *)(v23 + 72);
        unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1000B51B0;
        unint64_t v26 = v11 + v25;
        v13 = *(void (**)(unint64_t, void, uint64_t))(v23 + 104);
        v13(v26, enum case for CharacteristicKind.currentTemperature(_:), v7);
        v13(v26 + v24, enum case for CharacteristicKind.currentHeaterCoolerState(_:), v7);
        v13(v26 + 2 * v24, enum case for CharacteristicKind.heatingThreshold(_:), v7);
        unint64_t v14 = v26 + 3 * v24;
        uint64_t v15 = (unsigned int *)&enum case for CharacteristicKind.coolingThreshold(_:);
        goto LABEL_4;
      }
      if (v6 == enum case for ServiceKind.humidifierDehumidifier(_:))
      {
        sub_100004210(&qword_1000D4F30);
        uint64_t v27 = sub_1000B3320();
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = *(void *)(v28 + 72);
        unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1000B5190;
        unint64_t v31 = v11 + v30;
        v32 = *(void (**)(unint64_t, void, uint64_t))(v28 + 104);
        v32(v31, enum case for CharacteristicKind.active(_:), v27);
        v32(v31 + v29, enum case for CharacteristicKind.rotationSpeed(_:), v27);
        v32(v31 + 2 * v29, enum case for CharacteristicKind.humidifierThreshold(_:), v27);
        v32(v31 + 3 * v29, enum case for CharacteristicKind.dehumidifierThreshold(_:), v27);
        unint64_t v33 = v31 + 4 * v29;
        v34 = (unsigned int *)&enum case for CharacteristicKind.currentHumidifierDehumidifierState(_:);
      }
      else
      {
        if (v6 == enum case for ServiceKind.irrigationSystem(_:))
        {
          sub_100004210(&qword_1000D4F30);
          uint64_t v7 = sub_1000B3320();
          uint64_t v35 = *(void *)(v7 - 8);
          uint64_t v36 = *(void *)(v35 + 72);
          unint64_t v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
          uint64_t v11 = swift_allocObject();
          *(_OWORD *)(v11 + 16) = xmmword_1000B51A0;
          unint64_t v38 = v11 + v37;
          v13 = *(void (**)(unint64_t, void, uint64_t))(v35 + 104);
          v13(v38, enum case for CharacteristicKind.inUse(_:), v7);
          unint64_t v14 = v38 + v36;
          uint64_t v15 = (unsigned int *)&enum case for CharacteristicKind.programMode(_:);
          goto LABEL_4;
        }
        if (v6 == enum case for ServiceKind.lightbulb(_:))
        {
          sub_100004210(&qword_1000D4F30);
          uint64_t v16 = sub_1000B3320();
          uint64_t v17 = *(void *)(v16 - 8);
          unint64_t v39 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
          uint64_t v11 = swift_allocObject();
          *(_OWORD *)(v11 + 16) = xmmword_1000B5180;
          unint64_t v19 = v11 + v39;
          v20 = (unsigned int *)&enum case for CharacteristicKind.brightness(_:);
          goto LABEL_7;
        }
        if (v6 != enum case for ServiceKind.thermostat(_:))
        {
          if (v6 == enum case for ServiceKind.valve(_:))
          {
            sub_100004210(&qword_1000D4F30);
            uint64_t v16 = sub_1000B3320();
            uint64_t v17 = *(void *)(v16 - 8);
            unint64_t v44 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
            uint64_t v11 = swift_allocObject();
            *(_OWORD *)(v11 + 16) = xmmword_1000B5180;
            unint64_t v19 = v11 + v44;
            v20 = (unsigned int *)&enum case for CharacteristicKind.inUse(_:);
            goto LABEL_7;
          }
          if (v6 != enum case for ServiceKind.ventilationFan(_:))
          {
            if (v6 != enum case for ServiceKind.window(_:) && v6 != enum case for ServiceKind.windowCovering(_:))
            {
              sub_100004210(&qword_1000D4F30);
              uint64_t v45 = sub_1000B3320();
              uint64_t v46 = *(void *)(v45 - 8);
              unint64_t v47 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
              uint64_t v11 = swift_allocObject();
              *(_OWORD *)(v11 + 16) = xmmword_1000B5180;
              (*(void (**)(unint64_t, void, uint64_t))(v46 + 104))(v11 + v47, enum case for CharacteristicKind.powerState(_:), v45);
              (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
              return v11;
            }
            goto LABEL_3;
          }
          goto LABEL_6;
        }
        sub_100004210(&qword_1000D4F30);
        uint64_t v27 = sub_1000B3320();
        uint64_t v40 = *(void *)(v27 - 8);
        uint64_t v41 = *(void *)(v40 + 72);
        unint64_t v42 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1000B5190;
        unint64_t v43 = v11 + v42;
        v32 = *(void (**)(unint64_t, void, uint64_t))(v40 + 104);
        v32(v43, enum case for CharacteristicKind.currentTemperature(_:), v27);
        v32(v43 + v41, enum case for CharacteristicKind.targetTemperature(_:), v27);
        v32(v43 + 2 * v41, enum case for CharacteristicKind.currentHeatingCooling(_:), v27);
        v32(v43 + 3 * v41, enum case for CharacteristicKind.heatingThreshold(_:), v27);
        unint64_t v33 = v43 + 4 * v41;
        v34 = (unsigned int *)&enum case for CharacteristicKind.coolingThreshold(_:);
      }
      v32(v33, *v34, v27);
      return v11;
    }
LABEL_6:
    sub_100004210(&qword_1000D4F30);
    uint64_t v16 = sub_1000B3320();
    uint64_t v17 = *(void *)(v16 - 8);
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1000B5180;
    unint64_t v19 = v11 + v18;
    v20 = (unsigned int *)&enum case for CharacteristicKind.rotationSpeed(_:);
LABEL_7:
    (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19, *v20, v16);
    return v11;
  }
LABEL_3:
  sub_100004210(&qword_1000D4F30);
  uint64_t v7 = sub_1000B3320();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000B51A0;
  unint64_t v12 = v11 + v10;
  v13 = *(void (**)(unint64_t, void, uint64_t))(v8 + 104);
  v13(v12, enum case for CharacteristicKind.positionState(_:), v7);
  unint64_t v14 = v12 + v9;
  uint64_t v15 = (unsigned int *)&enum case for CharacteristicKind.obstructionDetected(_:);
LABEL_4:
  v13(v14, *v15, v7);
  return v11;
}

uint64_t sub_100004210(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *ServiceKind.widgetRelevantCharacteristic.getter()
{
  uint64_t v1 = sub_100004210(&qword_1000D4F38);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  int v6 = (char *)&v37 - v5;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = sub_1000B3320();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v38 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = (char *)&v37 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  v21 = (char *)&v37 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v37 - v22;
  unint64_t v42 = &_swiftEmptySetSingleton;
  uint64_t v40 = v0;
  ServiceKind.widgetTogglingCharacteristicKind.getter((uint64_t)v8);
  uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v41(v8, 1, v9) == 1)
  {
    sub_100004708((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v23, v9);
    sub_10000482C((uint64_t)v21, v18);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    v24(v21, v9);
    v24(v23, v9);
  }
  ServiceKind.widgetTargetCharacteristicType.getter((uint64_t)v6);
  if (v41(v6, 1, v9) == 1)
  {
    sub_100004708((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v6, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v15, v9);
    sub_10000482C((uint64_t)v21, v18);
    unint64_t v25 = *(void (**)(char *, uint64_t))(v10 + 8);
    v25(v21, v9);
    v25(v15, v9);
  }
  uint64_t v26 = v39;
  ServiceKind.widgetCurrentCharacteristicType.getter(v39);
  if (v41((char *)v26, 1, v9) == 1)
  {
    sub_100004708(v26);
  }
  else
  {
    uint64_t v27 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v38, v26, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v18, v27, v9);
    sub_10000482C((uint64_t)v21, v18);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v21, v9);
    v28(v27, v9);
  }
  uint64_t v29 = ServiceKind.widgetDisplayCharacteristicType.getter();
  if (v29)
  {
    uint64_t v41 = (unsigned int (*)(char *, uint64_t, uint64_t))v29;
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      uint64_t v32 = v10 + 16;
      unint64_t v31 = v33;
      v34 = (char *)v41 + ((*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64));
      uint64_t v35 = *(void *)(v32 + 56);
      do
      {
        v31(v18, v34, v9);
        sub_10000482C((uint64_t)v21, v18);
        (*(void (**)(char *, uint64_t))(v32 - 8))(v21, v9);
        v34 += v35;
        --v30;
      }
      while (v30);
    }
    swift_bridgeObjectRelease();
  }
  return v42;
}

uint64_t sub_100004708(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D4F38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t variable initialization expression of HomeManagerActor.homeHasUpdatedOnce()
{
  return 0;
}

void *variable initialization expression of HomeManagerActor.blocks()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of TileIconView._showsWidgetBackground()
{
  return swift_getKeyPath();
}

uint64_t variable initialization expression of TileNameAndStatusView._renderingMode@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000047DC(&qword_1000D4F88, a1);
}

uint64_t variable initialization expression of TileIconView._colorScheme@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000047DC(&qword_1000D4F90, a1);
}

uint64_t variable initialization expression of TileNameAndStatusView._sizeCategory@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000047DC(&qword_1000D4F98, a1);
}

uint64_t sub_1000047DC@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  *a2 = swift_getKeyPath();
  sub_100004210(a1);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10000482C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000B3320();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100008100(&qword_1000D4FC0, (void (*)(uint64_t))&type metadata accessor for CharacteristicKind);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = sub_1000B3F50();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100008100(&qword_1000D4FC8, (void (*)(uint64_t))&type metadata accessor for CharacteristicKind);
      char v21 = sub_1000B3F90();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100006868((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_100004B50(long long *a1)
{
  return sub_100004C34(a1);
}

uint64_t sub_100004B68(uint64_t a1)
{
  return sub_100004CBC(a1);
}

uint64_t sub_100004B80(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100004BC8()
{
  unint64_t result = qword_1000D4F78;
  if (!qword_1000D4F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F78);
  }
  return result;
}

uint64_t sub_100004C1C(long long *a1)
{
  return sub_100004C34(a1);
}

uint64_t sub_100004C34(long long *a1)
{
  long long v2 = *a1;
  if (sub_1000B23A4(2, 17, 0, 0)) {
    return swift_getOpaqueTypeMetadata2();
  }
  else {
    return v2;
  }
}

uint64_t sub_100004CA4(uint64_t a1)
{
  return sub_100004CBC(a1);
}

uint64_t sub_100004CBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (sub_1000B23A4(2, 17, 0, 0)) {
    return swift_getOpaqueTypeConformance2();
  }
  return v1;
}

__n128 sub_100004D40(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_100004D50(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100004D70(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize()
{
  if (!qword_1000D4FA0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1000D4FA0);
    }
  }
}

uint64_t sub_100004DF0(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = type metadata accessor for WidgetTileInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1000B48C0();
  swift_bridgeObjectRetain();
  sub_10001E150();
  Swift::Int v11 = sub_1000B48F0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_100007FDC(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9);
      char v16 = sub_10001F774((uint64_t)v9, a2);
      sub_100008040((uint64_t)v9);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_100008040(a2);
    sub_100007FDC(*(void *)(*v3 + 48) + v15 * v13, v19);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100007FDC(a2, (uint64_t)v9);
    uint64_t v20 = *v3;
    *char v3 = 0x8000000000000000;
    sub_100006B08((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *char v3 = v20;
    swift_bridgeObjectRelease();
    sub_10000809C(a2, a1);
    return 1;
  }
}

uint64_t sub_100004FFC(void *a1, void *a2)
{
  return sub_10000505C(a1, a2, &qword_1000D4FD8, (uint64_t)HMAccessory_ptr, &qword_1000D4FE0, (void (*)(uint64_t))sub_100012820);
}

uint64_t sub_10000502C(void *a1, void *a2)
{
  return sub_10000505C(a1, a2, &qword_1000D4FE8, (uint64_t)HMCharacteristic_ptr, &qword_1000D4FF0, (void (*)(uint64_t))sub_10001282C);
}

uint64_t sub_10000505C(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v10 = v6;
  uint64_t v13 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v13 < 0) {
      uint64_t v14 = *v6;
    }
    else {
      uint64_t v14 = v13 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v15 = a2;
    uint64_t v16 = sub_1000B4500();

    if (v16)
    {
      swift_bridgeObjectRelease();

      sub_100008148(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v41;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1000B44F0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v29 = sub_100005654(v14, result + 1, a5, a3);
    unint64_t v42 = (void *)v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      uint64_t v35 = v30 + 1;
      id v36 = v15;
      sub_10000614C(v35, a5);
      uint64_t v31 = v42;
    }
    else
    {
      uint64_t v31 = (void *)v29;
      id v32 = v15;
    }
    sub_1000067E4((uint64_t)v15, v31);
    *uint64_t v10 = (uint64_t)v31;
    swift_bridgeObjectRelease();
    *a1 = v15;
  }
  else
  {
    Swift::Int v18 = *(void *)(v13 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v19 = sub_1000B4380(v18);
    uint64_t v20 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v38 = a4;
    if ((*(void *)(v13 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_100008148(0, a3);
      id v22 = *(id *)(*(void *)(v13 + 48) + 8 * v21);
      char v23 = sub_1000B4390();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(*(void *)(*v10 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v13 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v13 + 48) + 8 * v21);
        char v26 = sub_1000B4390();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = *v10;
    *uint64_t v10 = 0x8000000000000000;
    id v34 = a2;
    sub_100006D1C((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v38, a6);
    *uint64_t v10 = v43;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_100005330(uint64_t a1, char *a2)
{
  char v3 = v2;
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100008100((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = sub_1000B3F50();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100008100(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_1000B3F90();
      id v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        char v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *char v3 = 0x8000000000000000;
    sub_100006EB0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *char v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

Swift::Int sub_100005654(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_100004210(a3);
    uint64_t v6 = sub_1000B45A0();
    uint64_t v19 = v6;
    sub_1000B44B0();
    if (sub_1000B4520())
    {
      sub_100008148(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_10000614C(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = sub_1000B4380(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_1000B4520());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

uint64_t sub_100005858()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1000B3320();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100004210(&qword_1000D4FD0);
  uint64_t v5 = sub_1000B4590();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    char v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100008100(&qword_1000D4FC0, (void (*)(uint64_t))&type metadata accessor for CharacteristicKind);
      uint64_t result = sub_1000B3F50();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_100005C54()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v31 = *((void *)v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100004210(&qword_1000D4FA8);
  uint64_t v6 = sub_1000B4590();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_37;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v27 = v0;
  unint64_t v28 = (void *)(v5 + 56);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v29 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v30 = v6 + 56;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_25;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v19 >= v29) {
      goto LABEL_33;
    }
    unint64_t v20 = v28[v19];
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v20 = v28[v12];
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v28[v12];
        if (!v20) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_25:
    uint64_t v22 = *(void *)(v31 + 72);
    sub_10000809C(*(void *)(v5 + 48) + v22 * v18, (uint64_t)v4);
    sub_1000B48C0();
    sub_1000B2F60();
    sub_100008100((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1000B3F60();
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    if (*(void *)&v4[v2[7] + 8])
    {
      sub_1000B48E0(1u);
      swift_bridgeObjectRetain();
      sub_1000B4070();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000B48E0(0);
    }
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1000B3C40();
    swift_release();
    sub_1000B48E0(v4[v2[13]]);
    uint64_t v23 = &v4[v2[14]];
    uint64_t v24 = *(void **)v23;
    switch(v23[8])
    {
      case 1:
        Swift::UInt v13 = 2;
        goto LABEL_7;
      case 2:
        Swift::UInt v13 = 3;
        goto LABEL_7;
      case 3:
        Swift::UInt v13 = 4;
        goto LABEL_7;
      case 4:
        sub_1000B48D0(0);
        goto LABEL_8;
      default:
        Swift::UInt v13 = 1;
LABEL_7:
        sub_1000B48D0(v13);
        id v14 = v24;
        sub_1000B43A0();

LABEL_8:
        sub_1000B48F0();
        uint64_t v15 = v30;
        unint64_t v16 = sub_1000B4490();
        *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        sub_10000809C((uint64_t)v4, *(void *)(v7 + 48) + v16 * v22);
        ++*(void *)(v7 + 16);
        break;
    }
  }
  int64_t v21 = v19 + 3;
  if (v21 < v29)
  {
    unint64_t v20 = v28[v21];
    if (!v20)
    {
      while (1)
      {
        int64_t v12 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v12 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v28[v12];
        ++v21;
        if (v20) {
          goto LABEL_24;
        }
      }
LABEL_39:
      __break(1u);
      JUMPOUT(0x10000612CLL);
    }
    int64_t v12 = v21;
    goto LABEL_24;
  }
LABEL_33:
  swift_release();
  uint64_t v25 = 1 << *(unsigned char *)(v5 + 32);
  if (v25 > 63) {
    bzero(v28, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v28 = -1 << v25;
  }
  uint64_t v1 = v27;
  *(void *)(v5 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_100006140(uint64_t a1)
{
  return sub_10000614C(a1, &qword_1000D4FB8);
}

uint64_t sub_10000614C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100004210(a2);
  uint64_t v5 = sub_1000B4590();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1000B4380(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1000063E8()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1000B2F60();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100004210((uint64_t *)&unk_1000D5B20);
  uint64_t v5 = sub_1000B4590();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100008100((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = sub_1000B3F50();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_1000067E4(uint64_t a1, void *a2)
{
  sub_1000B4380(a2[5]);
  unint64_t result = sub_1000B4490();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_100006868(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1000B3320();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_100005858();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1000125C4();
      goto LABEL_12;
    }
    sub_100007150();
  }
  uint64_t v12 = *v3;
  sub_100008100(&qword_1000D4FC0, (void (*)(uint64_t))&type metadata accessor for CharacteristicKind);
  uint64_t v13 = sub_1000B3F50();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100008100(&qword_1000D4FC8, (void (*)(uint64_t))&type metadata accessor for CharacteristicKind);
      char v21 = sub_1000B3F90();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1000B4860();
  __break(1u);
  return result;
}

uint64_t sub_100006B08(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for WidgetTileInfo();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100005C54();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_100007500();
LABEL_8:
    uint64_t v15 = *v4;
    sub_1000B48C0();
    sub_10001E150();
    Swift::Int v16 = sub_1000B48F0();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_100007FDC(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11);
        char v20 = sub_10001F774((uint64_t)v11, a1);
        sub_100008040((uint64_t)v11);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1000125E4();
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_10000809C(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1000B4860();
  __break(1u);
  return result;
}

void sub_100006D1C(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t))
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_10000614C(v13, a4);
  }
  else
  {
    if (v12 > v11)
    {
      a7(v13);
      goto LABEL_14;
    }
    sub_1000079B4(v13, a4);
  }
  uint64_t v14 = *v7;
  Swift::Int v15 = sub_1000B4380(*(void *)(*v7 + 40));
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100008148(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_1000B4390();

    if (v18)
    {
LABEL_13:
      sub_1000B4860();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_1000B4390();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

uint64_t sub_100006EB0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1000063E8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1000129DC();
      goto LABEL_12;
    }
    sub_100007C2C();
  }
  uint64_t v12 = *v3;
  sub_100008100((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = sub_1000B3F50();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    id v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100008100(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_1000B3F90();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1000B4860();
  __break(1u);
  return result;
}

uint64_t sub_100007150()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000B3320();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100004210(&qword_1000D4FD0);
  uint64_t v7 = sub_1000B4590();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100008100(&qword_1000D4FC0, (void (*)(uint64_t))&type metadata accessor for CharacteristicKind);
    uint64_t result = sub_1000B3F50();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100007500()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v31 = *((void *)v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100004210(&qword_1000D4FA8);
  uint64_t v6 = sub_1000B4590();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  unint64_t v27 = v0;
  uint64_t v28 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v29 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  swift_retain();
  int64_t v13 = 0;
  uint64_t v30 = v5;
  while (1)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_25;
    }
    int64_t v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v29) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v28 + 8 * v19);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v19 + 1;
      if (v19 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v28 + 8 * v13);
      if (!v20)
      {
        int64_t v13 = v19 + 2;
        if (v19 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v28 + 8 * v13);
        if (!v20) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_25:
    uint64_t v22 = *(void *)(v5 + 48);
    uint64_t v23 = *(void *)(v31 + 72);
    sub_100007FDC(v22 + v23 * v18, (uint64_t)v4);
    sub_1000B48C0();
    sub_1000B2F60();
    sub_100008100((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1000B3F60();
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    if (*(void *)&v4[v2[7] + 8])
    {
      sub_1000B48E0(1u);
      swift_bridgeObjectRetain();
      sub_1000B4070();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000B48E0(0);
    }
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1000B3C40();
    swift_release();
    sub_1000B48E0(v4[v2[13]]);
    uint64_t v24 = &v4[v2[14]];
    uint64_t v25 = *(void **)v24;
    switch(v24[8])
    {
      case 1:
        Swift::UInt v14 = 2;
        goto LABEL_7;
      case 2:
        Swift::UInt v14 = 3;
        goto LABEL_7;
      case 3:
        Swift::UInt v14 = 4;
        goto LABEL_7;
      case 4:
        sub_1000B48D0(0);
        goto LABEL_8;
      default:
        Swift::UInt v14 = 1;
LABEL_7:
        sub_1000B48D0(v14);
        id v15 = v25;
        sub_1000B43A0();

LABEL_8:
        sub_1000B48F0();
        unint64_t v16 = sub_1000B4490();
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        sub_10000809C((uint64_t)v4, *(void *)(v7 + 48) + v16 * v23);
        ++*(void *)(v7 + 16);
        uint64_t v5 = v30;
        break;
    }
  }
  int64_t v21 = v19 + 3;
  if (v21 < v29)
  {
    unint64_t v20 = *(void *)(v28 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v13 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v13 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v28 + 8 * v13);
        ++v21;
        if (v20) {
          goto LABEL_24;
        }
      }
LABEL_37:
      __break(1u);
      JUMPOUT(0x1000079A0);
    }
    int64_t v13 = v21;
    goto LABEL_24;
  }
LABEL_33:
  uint64_t result = swift_release_n();
  uint64_t v1 = v27;
LABEL_35:
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_1000079B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100004210(a2);
  uint64_t v5 = sub_1000B4590();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_1000B4380(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100007C2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000B2F60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100004210((uint64_t *)&unk_1000D5B20);
  uint64_t v7 = sub_1000B4590();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100008100((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1000B3F50();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100007FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetTileInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100008040(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetTileInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000809C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetTileInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100008100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100008148(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100008184()
{
  uint64_t v1 = sub_1000B3C20();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [v0 applicationData];
  id v6 = [v5 dictionary];

  uint64_t v7 = sub_1000B3F30();
  unint64_t v16 = 0xD00000000000001FLL;
  unint64_t v17 = 0x80000001000B8C60;
  sub_1000B4560();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_10004151C((uint64_t)v18), (v9 & 1) != 0))
  {
    sub_1000084C4(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100008410((uint64_t)v18);
  if (*((void *)&v20 + 1))
  {
    sub_100004210(&qword_1000D5000);
    if (swift_dynamicCast())
    {
      unint64_t v10 = v16;
      if (*(void *)(v16 + 16))
      {
        sub_1000414A4(114, 0xE100000000000000);
        if (v11)
        {
          if (*(void *)(v10 + 16))
          {
            sub_1000414A4(103, 0xE100000000000000);
            if (v12)
            {
              if (*(void *)(v10 + 16))
              {
                sub_1000414A4(98, 0xE100000000000000);
                if (v13)
                {
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Color.RGBColorSpace.sRGB(_:), v1);
                  return sub_1000B3CD0();
                }
              }
            }
          }
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_100008464((uint64_t)&v19);
  }
  return 0;
}

uint64_t sub_100008410(uint64_t a1)
{
  return a1;
}

uint64_t sub_100008464(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D4FF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000084C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100008520(uint64_t a1, uint64_t a2)
{
  return sub_100008538(a1, a2, (uint64_t)&type metadata for Int);
}

uint64_t sub_10000852C(uint64_t a1, uint64_t a2)
{
  return sub_100008538(a1, a2, (uint64_t)&type metadata for Double);
}

uint64_t sub_100008538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100004210(&qword_1000D5008);
  ((void (*)(void))__chkstk_darwin)();
  id v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B2F60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = ((uint64_t (*)(void))__chkstk_darwin)();
  char v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)v24 - v12;
  if (a2)
  {
    v24[1] = a3;
    int64_t v14 = (void *)sub_1000B43C0();
    if (v14)
    {
      uint64_t v15 = v14;
      id v16 = [v14 uniqueIdentifier];

      sub_1000B2F50();
      unint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v17(v6, v11, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        v17(v13, v6, v7);
        if (*(void *)(a2 + 16) && (unint64_t v18 = sub_100041560((uint64_t)v13), (v19 & 1) != 0))
        {
          sub_1000084C4(*(void *)(a2 + 56) + 32 * v18, (uint64_t)&v26);
        }
        else
        {
          long long v26 = 0u;
          long long v27 = 0u;
        }
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        sub_100004210(&qword_1000D4FF8);
        goto LABEL_16;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    sub_1000094A4((uint64_t)v6);
  }
  long long v20 = (void *)sub_1000B43C0();
  if (v20)
  {
    unint64_t v21 = v20;
    id v22 = [v20 value];

    if (v22)
    {
      sub_1000B4460();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v25, 0, sizeof(v25));
    }
    sub_10000943C((uint64_t)v25, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_100004210(&qword_1000D4FF8);
LABEL_16:
  if ((swift_dynamicCast() & 1) == 0) {
    *(void *)&v25[0] = 0;
  }
  return *(void *)&v25[0];
}

uint64_t _sSo9HMServiceC10HomeWidgetE9BOOLValue3for4withSbSg0B9DataModel18CharacteristicKindO_SDy10Foundation4UUIDVypGSgtF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v23 - v11;
  if (!a2)
  {
LABEL_9:
    char v19 = (void *)sub_1000B43C0();
    if (v19)
    {
      long long v20 = v19;
      id v21 = [v19 value];

      if (v21)
      {
        sub_1000B4460();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v23, 0, sizeof(v23));
      }
      sub_10000943C((uint64_t)v23, (uint64_t)&v24);
    }
    else
    {
      long long v24 = 0u;
      long long v25 = 0u;
    }
    goto LABEL_17;
  }
  char v13 = (void *)sub_1000B43C0();
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_8;
  }
  int64_t v14 = v13;
  id v15 = [v13 uniqueIdentifier];

  sub_1000B2F50();
  id v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v5, v10, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_8:
    sub_1000094A4((uint64_t)v5);
    goto LABEL_9;
  }
  v16(v12, v5, v6);
  if (*(void *)(a2 + 16) && (unint64_t v17 = sub_100041560((uint64_t)v12), (v18 & 1) != 0))
  {
    sub_1000084C4(*(void *)(a2 + 56) + 32 * v17, (uint64_t)&v24);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_17:
  sub_100004210(&qword_1000D4FF8);
  if ((swift_dynamicCast() & 1) == 0) {
    LOBYTE(v23[0]) = 2;
  }
  return LOBYTE(v23[0]);
}

uint64_t HMService.intValue(for:with:)(uint64_t a1, uint64_t a2)
{
  return sub_100008538(a1, a2, (uint64_t)&type metadata for Int);
}

uint64_t HMService.doubleValue(for:with:)(uint64_t a1, uint64_t a2)
{
  return sub_100008538(a1, a2, (uint64_t)&type metadata for Double);
}

Swift::Bool_optional __swiftcall HMService.powerState(with:)(Swift::OpaquePointer_optional with)
{
  rawValue = with.value._rawValue;
  uint64_t v2 = sub_1000B3320();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v6(v5, enum case for CharacteristicKind.powerState(_:), v2);
  v7.value = _sSo9HMServiceC10HomeWidgetE9BOOLValue3for4withSbSg0B9DataModel18CharacteristicKindO_SDy10Foundation4UUIDVypGSgtF_0((uint64_t)v5, (uint64_t)rawValue);
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  if (v7.value == 2)
  {
    v6(v5, enum case for CharacteristicKind.active(_:), v2);
    v7.value = _sSo9HMServiceC10HomeWidgetE9BOOLValue3for4withSbSg0B9DataModel18CharacteristicKindO_SDy10Foundation4UUIDVypGSgtF_0((uint64_t)v5, (uint64_t)rawValue);
    v8(v5, v2);
  }
  return v7;
}

uint64_t HMService.characteristic<A>(for:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_100008538(a1, a2, (uint64_t)&type metadata for Int);
  if ((v6 & 1) == 0) {
    return sub_1000B40D0();
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);

  return v8(a4, 1, 1, a3);
}

Swift::Bool __swiftcall HMService.isInFlight(cache:)(Swift::OpaquePointer_optional cache)
{
  rawValue = cache.value._rawValue;
  uint64_t v2 = sub_1000B3320();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  v61 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v60 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  v62 = (char *)&v60 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  char v13 = (char *)&v60 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)&v60 - v15;
  __chkstk_darwin(v14);
  char v18 = (char *)&v60 - v17;
  uint64_t v19 = sub_1000B31A0();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B43B0();
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v22, v19);
  if (v23 == enum case for ServiceKind.door(_:)) {
    goto LABEL_2;
  }
  uint64_t v60 = v1;
  uint64_t v36 = (uint64_t)rawValue;
  if (v23 == enum case for ServiceKind.garageDoorOpener(_:))
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v16, enum case for CharacteristicKind.currentDoorState(_:), v2);
    uint64_t v37 = sub_100008538((uint64_t)v16, v36, (uint64_t)&type metadata for Int);
    if (v38)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
    }
    else
    {
      unint64_t v39 = v37;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
      if (v39 < 5) {
        return (0xCu >> v39) & 1;
      }
    }
LABEL_21:
    LOBYTE(v35) = 0;
    return v35;
  }
  if (v23 == enum case for ServiceKind.lockMechanism(_:))
  {
    int64_t v40 = *(void (**)(char *, void, uint64_t))(v3 + 104);
    v40(v13, enum case for CharacteristicKind.currentLockMechanismState(_:), v2);
    uint64_t v41 = sub_100008538((uint64_t)v13, v36, (uint64_t)&type metadata for Int);
    char v43 = v42;
    unint64_t v44 = *(void (**)(char *, uint64_t))(v3 + 8);
    v44(v13, v2);
    if ((v43 & 1) == 0)
    {
      uint64_t v45 = (uint64_t)v62;
      v40(v62, enum case for CharacteristicKind.targetLockMechanismState(_:), v2);
      uint64_t v46 = sub_100008538(v45, v36, (uint64_t)&type metadata for Int);
      char v48 = v47;
      v44((char *)v45, v2);
      if ((v48 & 1) == 0)
      {
        if (v41 == 1)
        {
          LOBYTE(v35) = v46 == 0;
          return v35;
        }
        if (!v41)
        {
          LOBYTE(v35) = v46 == 1;
          return v35;
        }
      }
    }
    goto LABEL_21;
  }
  if (v23 == enum case for ServiceKind.securitySystem(_:))
  {
    v49 = *(void (**)(char *, void, uint64_t))(v3 + 104);
    v49(v8, enum case for CharacteristicKind.currentSecuritySystemState(_:), v2);
    uint64_t v50 = sub_100008538((uint64_t)v8, v36, (uint64_t)&type metadata for Int);
    char v52 = v51;
    v53 = *(void (**)(char *, uint64_t))(v3 + 8);
    v53(v8, v2);
    if ((v52 & 1) == 0)
    {
      uint64_t v54 = (uint64_t)v61;
      v49(v61, enum case for CharacteristicKind.targetSecuritySystemState(_:), v2);
      uint64_t v55 = sub_100008538(v54, v36, (uint64_t)&type metadata for Int);
      if (v56)
      {
        v53((char *)v54, v2);
      }
      else
      {
        uint64_t v57 = v55;
        v53((char *)v54, v2);
        if (v57 == 3)
        {
          LOBYTE(v35) = v50 != 3;
          return v35;
        }
        if (v50 == 3)
        {
          LOBYTE(v35) = 1;
          return v35;
        }
      }
    }
    goto LABEL_21;
  }
  if (v23 != enum case for ServiceKind.window(_:) && v23 != enum case for ServiceKind.windowCovering(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    goto LABEL_21;
  }
LABEL_2:
  long long v24 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v24(v18, enum case for CharacteristicKind.targetPosition(_:), v2);
  uint64_t v25 = sub_100008538((uint64_t)v18, (uint64_t)rawValue, (uint64_t)&type metadata for Int);
  char v27 = v26;
  unint64_t v28 = *(void (**)(char *, uint64_t))(v3 + 8);
  v28(v18, v2);
  if (v27) {
    goto LABEL_21;
  }
  uint64_t v29 = v2;
  v24(v18, enum case for CharacteristicKind.currentPosition(_:), v2);
  uint64_t v30 = sub_100008538((uint64_t)v18, (uint64_t)rawValue, (uint64_t)&type metadata for Int);
  char v32 = v31;
  v28(v18, v29);
  if (v32) {
    goto LABEL_21;
  }
  v24(v18, enum case for CharacteristicKind.obstructionDetected(_:), v29);
  char v33 = _sSo9HMServiceC10HomeWidgetE9BOOLValue3for4withSbSg0B9DataModel18CharacteristicKindO_SDy10Foundation4UUIDVypGSgtF_0((uint64_t)v18, (uint64_t)rawValue);
  v28(v18, v29);
  LOBYTE(v35) = (v33 & 1) == 0 && v25 != v30;
  return v35;
}

uint64_t sub_10000943C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D4FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000094A4(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5008);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100009504(void *a1, uint64_t a2)
{
  uint64_t v166 = sub_1000B2F60();
  uint64_t v156 = *(void *)(v166 - 8);
  uint64_t v4 = __chkstk_darwin(v166);
  v148 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  v157 = (char *)&v143 - v7;
  __chkstk_darwin(v6);
  v152 = (void (*)(uint64_t, char *, uint64_t))((char *)&v143 - v8);
  uint64_t v9 = sub_100004210(&qword_1000D5010);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v143 - v13;
  uint64_t v15 = type metadata accessor for WidgetTileInfo();
  uint64_t v164 = *(void *)(v15 - 8);
  v165 = (char *)v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v155 = (uint64_t)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v154 = (uint64_t)&v143 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v162 = ((char *)&v143 - v21);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v150 = (uint64_t)&v143 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v161 = (uint64_t)&v143 - v25;
  __chkstk_darwin(v24);
  uint64_t v149 = (uint64_t)&v143 - v26;
  v170 = &_swiftEmptySetSingleton;
  id v147 = a1;
  id v27 = [a1 serviceGroups];
  uint64_t v145 = sub_100008148(0, &qword_1000D5018);
  unint64_t v28 = sub_1000B4100();

  swift_bridgeObjectRetain();
  uint64_t v29 = 0;
  unint64_t v30 = (unint64_t)sub_100016C5C(v28, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v144 = v30 >> 62;
  if (v30 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000B46A0();
    uint64_t v31 = result;
  }
  else
  {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  v153 = (void *)v30;
  v163 = v12;
  uint64_t v146 = a2;
  if (v31)
  {
    if (v31 >= 1)
    {
      v143 = v29;
      uint64_t v33 = 0;
      unint64_t v160 = v30 & 0xC000000000000001;
      v151 = (void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v156 + 8);
      v158 = (uint8_t *)(v164 + 56);
      uint64_t v34 = (unsigned int (**)(char *, uint64_t, char *))(v164 + 48);
      BOOL v35 = _swiftEmptyArrayStorage;
      v159 = v31;
      while (1)
      {
        if (v160) {
          uint64_t v36 = (char *)sub_1000B45E0();
        }
        else {
          uint64_t v36 = (char *)*(id *)(v30 + 8 * v33 + 32);
        }
        uint64_t v29 = v36;
        id v37 = [v36 services:v143];
        sub_100008148(0, &qword_1000D5020);
        unint64_t v38 = sub_1000B4100();

        if (v38 >> 62)
        {
          swift_bridgeObjectRetain();
          a2 = sub_1000B46A0();
          swift_bridgeObjectRelease();
          if (!a2)
          {
LABEL_19:
            swift_bridgeObjectRelease();
            v49 = v165;
            (*(void (**)(char *, uint64_t, uint64_t, char *))v158)(v14, 1, 1, v165);

            if ((*v34)(v14, 1, v49) != 1) {
              goto LABEL_20;
            }
            goto LABEL_6;
          }
        }
        else
        {
          a2 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!a2) {
            goto LABEL_19;
          }
        }
        if ((v38 & 0xC000000000000001) != 0)
        {
          id v39 = (id)sub_1000B45E0();
        }
        else
        {
          if (!*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_44;
          }
          id v39 = *(id *)(v38 + 32);
        }
        int64_t v40 = v39;
        swift_bridgeObjectRelease();
        id v41 = [v29 uniqueIdentifier];
        char v42 = v152;
        sub_1000B2F50();

        id v43 = [v29 name];
        uint64_t v44 = sub_1000B4010();
        uint64_t v46 = v45;

        sub_10001182C(v40, v42, v44, v46, v29, 1, (uint64_t)v14);
        swift_bridgeObjectRelease();
        (*v151)(v42, v166);
        char v47 = v165;
        (*(void (**)(char *, void, uint64_t, char *))v158)(v14, 0, 1, v165);

        unsigned int v48 = (*v34)(v14, 1, v47);
        unint64_t v30 = (unint64_t)v153;
        uint64_t v12 = v163;
        if (v48 != 1)
        {
LABEL_20:
          uint64_t v50 = v149;
          sub_10000809C((uint64_t)v14, v149);
          sub_10000809C(v50, v161);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v35 = (void *)sub_100075388(0, v35[2] + 1, 1, (unint64_t)v35);
          }
          unint64_t v52 = v35[2];
          unint64_t v51 = v35[3];
          if (v52 >= v51 >> 1) {
            BOOL v35 = (void *)sub_100075388(v51 > 1, v52 + 1, 1, (unint64_t)v35);
          }
          v35[2] = v52 + 1;
          sub_10000809C(v161, (uint64_t)v35+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v52);
          goto LABEL_7;
        }
LABEL_6:
        sub_100017B5C((uint64_t)v14, &qword_1000D5010);
LABEL_7:
        if (v159 == ++v33)
        {
          swift_bridgeObjectRelease();
          a2 = v146;
          uint64_t v29 = v143;
          goto LABEL_28;
        }
      }
    }
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  BOOL v35 = _swiftEmptyArrayStorage;
LABEL_28:
  sub_100016B50((uint64_t)v35);
  swift_bridgeObjectRelease();
  uint64_t v161 = v170[2];
  id v53 = [v147 actionSets];
  sub_100008148(0, &qword_1000D5028);
  unint64_t v54 = sub_1000B4100();

  swift_bridgeObjectRetain();
  unint64_t v55 = (unint64_t)sub_100016C5C(v54, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v55 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000B46A0();
    uint64_t v56 = result;
    unint64_t v160 = v55 >> 62;
    if (result) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v56 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v160 = 0;
    if (v56)
    {
LABEL_30:
      if (v56 < 1) {
        goto LABEL_105;
      }
      uint64_t v57 = 0;
      v58 = (unsigned int (**)(char *, uint64_t, char *))(v164 + 48);
      v59 = _swiftEmptyArrayStorage;
      do
      {
        if ((v55 & 0xC000000000000001) != 0) {
          uint64_t v60 = (void (*)(char *, uint64_t, uint64_t))sub_1000B45E0();
        }
        else {
          uint64_t v60 = (void (*)(char *, uint64_t, uint64_t))*(id *)(v55 + 8 * v57 + 32);
        }
        v61 = v60;
        sub_10000AFB0(v60, (uint64_t)v12);

        if ((*v58)(v12, 1, v165) == 1)
        {
          sub_100017B5C((uint64_t)v12, &qword_1000D5010);
        }
        else
        {
          uint64_t v62 = v150;
          sub_10000809C((uint64_t)v12, v150);
          sub_10000809C(v62, (uint64_t)v162);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v59 = (void *)sub_100075388(0, v59[2] + 1, 1, (unint64_t)v59);
          }
          unint64_t v64 = v59[2];
          unint64_t v63 = v59[3];
          if (v64 >= v63 >> 1) {
            v59 = (void *)sub_100075388(v63 > 1, v64 + 1, 1, (unint64_t)v59);
          }
          v59[2] = v64 + 1;
          sub_10000809C((uint64_t)v162, (uint64_t)v59+ ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80))+ *(void *)(v164 + 72) * v64);
          uint64_t v12 = v163;
        }
        ++v57;
      }
      while (v56 != v57);
      goto LABEL_47;
    }
  }
  v59 = _swiftEmptyArrayStorage;
LABEL_47:
  swift_bridgeObjectRelease();
  sub_100016B50((uint64_t)v59);
  swift_bridgeObjectRelease();
  uint64_t v65 = v170[2];
  id v66 = v147;
  id v67 = [v147 serviceGroups];
  unint64_t v68 = sub_1000B4100();

  v69 = sub_10000B85C(v68);
  swift_bridgeObjectRelease();
  id v70 = [v66 accessories];
  sub_100008148(0, &qword_1000D4FD8);
  unint64_t v71 = sub_1000B4100();

  v72 = sub_10000BB10(v71);
  swift_bridgeObjectRelease();
  id v73 = [v66 accessories];
  unint64_t v74 = sub_1000B4100();

  uint64_t v75 = v146;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v76 = sub_1000174E4(v74, v75, v69, v72);
  v163 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_100016B50((uint64_t)v76);
  swift_bridgeObjectRelease();
  if (qword_1000D4EA8 != -1) {
    goto LABEL_103;
  }
  while (1)
  {
    uint64_t v77 = sub_1000B3570();
    uint64_t v78 = sub_100017618(v77, (uint64_t)qword_1000DCC18);
    unint64_t v79 = (unint64_t)v153;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v80 = sub_1000B3550();
    os_log_type_t v81 = sub_1000B42C0();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (void *)v161;
      v83 = (char *)(v65 - v161);
      uint64_t v84 = swift_slowAlloc();
      *(_DWORD *)uint64_t v84 = 134219008;
      v169 = v82;
      sub_1000B4400();
      *(_WORD *)(v84 + 12) = 2048;
      if (v144)
      {
        swift_bridgeObjectRetain();
        v85 = (void *)sub_1000B46A0();
        swift_bridgeObjectRelease();
      }
      else
      {
        v85 = *(void **)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v169 = v85;
      sub_1000B4400();
      swift_bridgeObjectRelease();
      *(_WORD *)(v84 + 22) = 2048;
      v169 = v83;
      sub_1000B4400();
      *(_WORD *)(v84 + 32) = 2048;
      if (v160)
      {
        swift_bridgeObjectRetain();
        v86 = (void *)sub_1000B46A0();
        swift_bridgeObjectRelease();
      }
      else
      {
        v86 = *(void **)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v169 = v86;
      sub_1000B4400();
      swift_bridgeObjectRelease();
      *(_WORD *)(v84 + 42) = 2048;
      uint64_t result = swift_beginAccess();
      v87 = &v83[v161];
      if (__OFADD__(v161, v83)) {
        goto LABEL_106;
      }
      uint64_t v88 = v170[2];
      BOOL v89 = __OFSUB__(v88, v87);
      v90 = (void *)(v88 - (void)v87);
      if (v89) {
        goto LABEL_107;
      }
      v169 = v90;
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "Added: %ld serviceGroups (out of %ld), %ld action sets (out of %ld) and %ld accessories/services to widgetTileInfos", (uint8_t *)v84, 0x34u);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v91 = sub_1000B3550();
    int v92 = sub_1000B42C0();
    if (os_log_type_enabled(v91, (os_log_type_t)v92))
    {
      LODWORD(v162) = v92;
      v93 = (uint8_t *)swift_slowAlloc();
      uint64_t v161 = swift_slowAlloc();
      v169 = (void *)v161;
      *(_DWORD *)v93 = 136315138;
      swift_beginAccess();
      uint64_t v65 = (uint64_t)v170;
      int64_t v94 = v170[2];
      if (v94)
      {
        v158 = v93;
        v159 = v91;
        unint64_t v160 = v78;
        p_isa = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_10001E9D8(0, v94, 0);
        uint64_t v75 = sub_1000166CC(v65);
        int v96 = v95;
        char v98 = v97 & 1;
        v165 = (char *)(v65 + 56);
        unint64_t v55 = v156 + 16;
        while ((v75 & 0x8000000000000000) == 0 && v75 < 1 << *(unsigned char *)(v65 + 32))
        {
          if (((*(void *)&v165[((unint64_t)v75 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v75) & 1) == 0) {
            goto LABEL_98;
          }
          if (*(_DWORD *)(v65 + 36) != v96) {
            goto LABEL_99;
          }
          uint64_t v99 = v154;
          sub_100007FDC(*(void *)(v65 + 48) + *(void *)(v164 + 72) * v75, v154);
          uint64_t v100 = v99;
          uint64_t v101 = v155;
          sub_10000809C(v100, v155);
          (*(void (**)(char *, uint64_t, uint64_t))v55)(v157, v101, v166);
          sub_100008040(v101);
          v102 = p_isa;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10001E9D8(0, v102[2] + 1, 1);
            v102 = p_isa;
          }
          unint64_t v104 = v102[2];
          unint64_t v103 = v102[3];
          if (v104 >= v103 >> 1)
          {
            sub_10001E9D8(v103 > 1, v104 + 1, 1);
            v102 = p_isa;
          }
          v102[2] = v104 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v156 + 32))((unint64_t)v102+ ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))+ *(void *)(v156 + 72) * v104, v157, v166);
          p_isa = v102;
          int64_t v105 = sub_10001676C(v75, v96, v98 & 1, v65);
          uint64_t v75 = v105;
          int v96 = v106;
          char v98 = v107 & 1;
          if (!--v94)
          {
            sub_100017A08(v105, v106, v107 & 1);
            swift_bridgeObjectRelease();
            uint64_t v75 = v146;
            v91 = v159;
            v93 = v158;
            goto LABEL_72;
          }
        }
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
LABEL_72:
      uint64_t v108 = sub_1000B4110();
      unint64_t v110 = v109;
      swift_bridgeObjectRelease();
      p_isa = (void *)sub_10002A68C(v108, v110, (uint64_t *)&v169);
      sub_1000B4400();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v91, (os_log_type_t)v162, "widgetTileInfos UUIDs: %s", v93, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    v111 = sub_10000AABC(v75, (uint64_t *)&v170);
    v169 = &_swiftEmptySetSingleton;
    v112 = (char *)sub_100017650((uint64_t)v111, (uint64_t)&v169);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v113 = (void *)*((void *)v112 + 2);
    swift_beginAccess();
    v114 = v170;
    if (v113 == (void *)v170[2]) {
      goto LABEL_94;
    }
    uint64_t v115 = swift_bridgeObjectRetain();
    uint64_t v116 = sub_1000178A0(v115);
    swift_bridgeObjectRelease();
    if (v114[2] <= *(void *)(v116 + 16) >> 3)
    {
      p_isa = (void *)v116;
      uint64_t v119 = swift_bridgeObjectRetain();
      sub_100012CAC(v119);
      swift_bridgeObjectRelease();
      v118 = p_isa;
    }
    else
    {
      uint64_t v117 = swift_bridgeObjectRetain();
      v118 = sub_1000132B0(v117, v116);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v120 = sub_1000B3550();
    os_log_type_t v121 = sub_1000B42C0();
    if (os_log_type_enabled(v120, v121))
    {
      uint64_t v122 = swift_slowAlloc();
      *(_DWORD *)uint64_t v122 = 134218496;
      p_isa = *(void **)(v75 + 16);
      sub_1000B4400();
      swift_bridgeObjectRelease();
      *(_WORD *)(v122 + 12) = 2048;
      p_isa = (void *)v170[2];
      sub_1000B4400();
      *(_WORD *)(v122 + 22) = 2048;
      p_isa = v113;
      sub_1000B4400();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v120, v121, "WidgetTileInfos output inconsistency - uuids:%ld widgetTileInfos:%ld sortedWidgetTileInfos: %ld", (uint8_t *)v122, 0x20u);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    v123 = sub_1000B3550();
    int v124 = sub_1000B42A0();
    if (!os_log_type_enabled(v123, (os_log_type_t)v124))
    {

      swift_bridgeObjectRelease_n();
LABEL_94:
      swift_bridgeObjectRelease();
      return (uint64_t)v112;
    }
    v163 = v112;
    v125 = (uint8_t *)swift_slowAlloc();
    v126 = swift_slowAlloc();
    p_isa = &v126->isa;
    *(_DWORD *)v125 = 136315138;
    int64_t v127 = v118[2];
    if (!v127) {
      break;
    }
    v159 = v126;
    LODWORD(v160) = v124;
    uint64_t v161 = (uint64_t)v125;
    v162 = v123;
    v167 = _swiftEmptyArrayStorage;
    sub_10001E9D8(0, v127, 0);
    uint64_t v75 = sub_1000166CC((uint64_t)v118);
    int v129 = v128;
    uint64_t v65 = v130 & 1;
    v165 = (char *)(v118 + 7);
    unint64_t v55 = v156 + 16;
    while ((v75 & 0x8000000000000000) == 0 && v75 < 1 << *((unsigned char *)v118 + 32))
    {
      if (((*(void *)&v165[((unint64_t)v75 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v75) & 1) == 0) {
        goto LABEL_101;
      }
      if (*((_DWORD *)v118 + 9) != v129) {
        goto LABEL_102;
      }
      uint64_t v131 = v154;
      sub_100007FDC(v118[6] + *(void *)(v164 + 72) * v75, v154);
      uint64_t v132 = v131;
      uint64_t v133 = v155;
      sub_10000809C(v132, v155);
      (*(void (**)(char *, uint64_t, uint64_t))v55)(v148, v133, v166);
      sub_100008040(v133);
      v134 = v167;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001E9D8(0, v134[2] + 1, 1);
        v134 = v167;
      }
      unint64_t v136 = v134[2];
      unint64_t v135 = v134[3];
      if (v136 >= v135 >> 1)
      {
        sub_10001E9D8(v135 > 1, v136 + 1, 1);
        v134 = v167;
      }
      v134[2] = v136 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v156 + 32))((unint64_t)v134+ ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))+ *(void *)(v156 + 72) * v136, v148, v166);
      v167 = v134;
      int64_t v137 = sub_10001676C(v75, v129, v65 & 1, (uint64_t)v118);
      uint64_t v75 = v137;
      int v129 = v138;
      uint64_t v65 = v139 & 1;
      if (!--v127)
      {
        sub_100017A08(v137, v138, v139 & 1);
        v125 = (uint8_t *)v161;
        v123 = v162;
        LOBYTE(v124) = v160;
        goto LABEL_95;
      }
    }
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    swift_once();
  }
LABEL_95:
  uint64_t v140 = sub_1000B4110();
  unint64_t v142 = v141;
  swift_bridgeObjectRelease();
  v167 = (void *)sub_10002A68C(v140, v142, (uint64_t *)&p_isa);
  sub_1000B4400();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v123, (os_log_type_t)v124, "Rejected these widgets out for some reason: %s", v125, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  swift_bridgeObjectRelease();
  return (uint64_t)v163;
}

void *sub_10000AABC(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = sub_100004210(&qword_1000D5010);
  __chkstk_darwin(v5 - 8);
  uint64_t v49 = (uint64_t)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for WidgetTileInfo();
  uint64_t v7 = *(void *)(v48 - 8);
  uint64_t v8 = __chkstk_darwin(v48);
  uint64_t v47 = (uint64_t)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v37 = (uint64_t)v35 - v10;
  uint64_t v11 = sub_1000B2F60();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v46 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  v35[1] = a1;
  if (v17)
  {
    uint64_t v52 = v2;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v19 = v12 + 16;
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
    uint64_t v45 = v20;
    int64_t v40 = (uint64_t (**)(char *, char *, uint64_t))(v19 + 16);
    uint64_t v41 = v21;
    uint64_t v36 = v7;
    unint64_t v38 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    id v39 = (void (**)(char *, uint64_t))(v19 - 8);
    unint64_t v51 = _swiftEmptyArrayStorage;
    char v42 = v16;
    id v43 = a2;
    uint64_t v22 = v46;
    v20(v16, v18, v11);
    while (1)
    {
      uint64_t v23 = *v50;
      (*v50)(v16, 0, 1, v11);
      if ((*v44)(v16, 1, v11) == 1) {
        break;
      }
      uint64_t v24 = v19;
      uint64_t v25 = (*v40)(v22, v16, v11);
      uint64_t v26 = *a2;
      __chkstk_darwin(v25);
      v35[-2] = v22;
      swift_bridgeObjectRetain();
      uint64_t v27 = v49;
      uint64_t v28 = v52;
      sub_10000E7C8((uint64_t (*)(char *))sub_100017A64, v26, v49);
      uint64_t v52 = v28;
      swift_bridgeObjectRelease();
      (*v39)(v22, v11);
      if ((*v38)(v27, 1, v48) == 1)
      {
        sub_100017B5C(v27, &qword_1000D5010);
        uint64_t v19 = v24;
      }
      else
      {
        uint64_t v29 = v37;
        sub_10000809C(v27, v37);
        sub_10000809C(v29, v47);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v51 = (void *)sub_100075388(0, v51[2] + 1, 1, (unint64_t)v51);
        }
        uint64_t v19 = v24;
        unint64_t v31 = v51[2];
        unint64_t v30 = v51[3];
        if (v31 >= v30 >> 1) {
          unint64_t v51 = (void *)sub_100075388(v30 > 1, v31 + 1, 1, (unint64_t)v51);
        }
        char v32 = v51;
        v51[2] = v31 + 1;
        sub_10000809C(v47, (uint64_t)v32+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v31);
      }
      uint64_t v16 = v42;
      v18 += v41;
      --v17;
      a2 = v43;
      if (!v17)
      {
        v23(v42, 1, 1, v11);
        break;
      }
      v45(v42, v18, v11);
    }
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    unint64_t v51 = _swiftEmptyArrayStorage;
    v33(v16, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  return v51;
}

id sub_10000AFB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v79 = a1;
  uint64_t v74 = sub_1000B33D0();
  uint64_t v3 = *(void *)(v74 - 8);
  uint64_t v4 = __chkstk_darwin(v74);
  uint64_t v77 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v76 = (char *)&v65 - v6;
  uint64_t v75 = sub_1000B2F60();
  uint64_t v7 = *(void *)(v75 - 8);
  uint64_t v8 = __chkstk_darwin(v75);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v65 - v12;
  __chkstk_darwin(v11);
  uint64_t v78 = (char *)&v65 - v14;
  id v15 = [v79 actions];
  sub_100008148(0, &qword_1000D5070);
  sub_100017AEC((unint64_t *)&qword_1000D5078, &qword_1000D5070);
  uint64_t v16 = sub_1000B41E0();

  if ((v16 & 0xC000000000000001) != 0) {
    uint64_t v17 = sub_1000B44F0();
  }
  else {
    uint64_t v17 = *(void *)(v16 + 16);
  }
  swift_bridgeObjectRelease();
  if (v17 < 1)
  {
    uint64_t v34 = type metadata accessor for WidgetTileInfo();
    BOOL v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
    return (id)v35(a2, 1, 1, v34);
  }
  else
  {
    id v18 = [v79 actions];
    uint64_t v19 = sub_1000B41E0();

    sub_10000F720(v19);
    char v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      if (qword_1000D4EA8 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1000B3570();
      sub_100017618(v22, (uint64_t)qword_1000DCC18);
      id v23 = v79;
      uint64_t v24 = sub_1000B3550();
      os_log_type_t v25 = sub_1000B42C0();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        id v79 = (id)swift_slowAlloc();
        v81[0] = (uint64_t)v79;
        *(_DWORD *)uint64_t v27 = 136315394;
        LODWORD(v77) = v26;
        uint64_t v80 = sub_10002A68C(0xD000000000000015, 0x80000001000B8D30, v81);
        sub_1000B4400();
        *(_WORD *)(v27 + 12) = 2080;
        v76 = (char *)(v27 + 14);
        id v28 = [v23 uniqueIdentifier];
        uint64_t v29 = v78;
        sub_1000B2F50();

        sub_100017A1C(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v30 = v75;
        uint64_t v31 = sub_1000B4800();
        unint64_t v33 = v32;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v30);
        uint64_t v80 = sub_10002A68C(v31, v33, v81);
        sub_1000B4400();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v77, "%s Ignoring action set %s with unsupportedActions (media playback, apple media accessory etc).", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v64 = type metadata accessor for WidgetTileInfo();
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(a2, 1, 1, v64);
    }
    else
    {
      id v37 = [v79 uniqueIdentifier];
      sub_1000B2F50();

      id v38 = [v79 name];
      uint64_t v39 = sub_1000B4010();
      uint64_t v71 = v40;
      uint64_t v72 = v39;

      uint64_t v70 = sub_1000B4280();
      uint64_t v42 = v41;
      uint64_t v73 = sub_100008184();
      if (!v73) {
        uint64_t v73 = sub_1000B3C80();
      }
      id v43 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      uint64_t v44 = v75;
      v43(v78, v13, v75);
      unint64_t v68 = v10;
      v43(v10, v13, v44);
      uint64_t v45 = *(void (**)(char *, void, uint64_t))(v3 + 104);
      uint64_t v46 = v74;
      v45(v76, enum case for StaticRenderingMode.monochrome(_:), v74);
      v45(v77, enum case for StaticRenderingMode.hierarchical(_:), v46);
      swift_bridgeObjectRetain();
      unint64_t v69 = sub_100019CE4((uint64_t)_swiftEmptyArrayStorage);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v44);
      uint64_t v47 = (int *)type metadata accessor for WidgetTileInfo();
      uint64_t v48 = (void *)(a2 + v47[7]);
      uint64_t v49 = a2 + v47[17];
      uint64_t v50 = sub_1000B32E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
      uint64_t v51 = v47[18];
      uint64_t v65 = (void *)(a2 + v47[19]);
      uint64_t v52 = v47[20];
      uint64_t v66 = v47[21];
      uint64_t v67 = v51;
      id v53 = (void *)(a2 + v52);
      unint64_t v54 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
      v54(a2, v78, v44);
      v54(a2 + v47[5], v68, v44);
      unint64_t v55 = (uint64_t *)(a2 + v47[6]);
      uint64_t v56 = v71;
      *unint64_t v55 = v72;
      v55[1] = v56;
      *uint64_t v48 = 0;
      v48[1] = 0;
      uint64_t v57 = (uint64_t *)(a2 + v47[8]);
      uint64_t v58 = v70;
      *uint64_t v57 = v70;
      v57[1] = v42;
      v59 = (uint64_t *)(a2 + v47[9]);
      uint64_t *v59 = v58;
      v59[1] = v42;
      uint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
      v60(a2 + v47[10], v76, v46);
      v60(a2 + v47[11], v77, v46);
      *(void *)(a2 + v47[12]) = v73;
      *(unsigned char *)(a2 + v47[13]) = 1;
      uint64_t v61 = a2 + v47[14];
      *(void *)uint64_t v61 = v79;
      *(unsigned char *)(v61 + 8) = 2;
      *(void *)(a2 + v47[15]) = v69;
      *(unsigned char *)(a2 + v47[16]) = 0;
      *(unsigned char *)(a2 + v67) = 2;
      uint64_t v62 = v65;
      *uint64_t v65 = 0;
      *((unsigned char *)v62 + 8) = 1;
      *id v53 = 0;
      v53[1] = 0;
      *(unsigned char *)(a2 + v66) = 2;
      (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v47 - 1) + 56))(a2, 0, 1, v47);
      id v63 = v79;
      return v63;
    }
  }
}

void *sub_10000B85C(unint64_t a1)
{
  int64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_36;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1000B46A0())
  {
    unint64_t v29 = v2 & 0xC000000000000001;
    uint64_t v4 = _swiftEmptyArrayStorage;
    uint64_t v5 = 4;
    int64_t v28 = v2;
    while (1)
    {
      id v6 = v29 ? (id)sub_1000B45E0() : *(id *)(v2 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v31 = v6;
      sub_10000FA74(&v31, &v30);
      if (v1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v4;
      }

      uint64_t v9 = v30;
      uint64_t v10 = *((void *)v30 + 2);
      int64_t v11 = v4[2];
      int64_t v2 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_32;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v2 <= v4[3] >> 1)
      {
        if (*((void *)v9 + 2)) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v11 <= v2) {
          int64_t v13 = v11 + v10;
        }
        else {
          int64_t v13 = v11;
        }
        uint64_t v4 = (void *)sub_1000753BC(isUniquelyReferenced_nonNull_native, v13, 1, (unint64_t)v4);
        if (*((void *)v9 + 2))
        {
LABEL_20:
          uint64_t v14 = v4[2];
          int64_t v2 = (v4[3] >> 1) - v14;
          uint64_t v15 = *(void *)(sub_1000B2F60() - 8);
          uint64_t v16 = *(void *)(v15 + 72);
          if (v2 < v10) {
            goto LABEL_34;
          }
          unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
          id v18 = (char *)v4 + v17 + v16 * v14;
          uint64_t v19 = &v9[v17];
          uint64_t v20 = v16 * v10;
          char v21 = &v18[v20];
          uint64_t v22 = &v19[v20];
          if (v19 < v21 && v18 < v22)
          {
            uint64_t result = (void *)sub_1000B46E0();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            uint64_t v24 = v4[2];
            BOOL v25 = __OFADD__(v24, v10);
            uint64_t v26 = v24 + v10;
            if (v25) {
              goto LABEL_35;
            }
            v4[2] = v26;
          }
          goto LABEL_5;
        }
      }
      if (v10) {
        goto LABEL_33;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      ++v5;
      int64_t v2 = v28;
      if (v8 == v3)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10000BB10(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_36;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1000B46A0())
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)sub_1000B45E0() : *(id *)(a1 + 8 * v4);
      id v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = [v5 uniqueIdentifiersForBridgedAccessories];
      if (v8)
      {
        id v9 = v8;
        sub_1000B2F60();
        uint64_t v10 = (void *)sub_1000B4100();

        id v6 = v9;
      }
      else
      {
        uint64_t v10 = _swiftEmptyArrayStorage;
      }

      uint64_t v11 = v10[2];
      int64_t v12 = v3[2];
      int64_t v13 = v12 + v11;
      if (__OFADD__(v12, v11)) {
        goto LABEL_32;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v13 <= v3[3] >> 1)
      {
        if (v10[2]) {
          goto LABEL_22;
        }
      }
      else
      {
        if (v12 <= v13) {
          int64_t v15 = v12 + v11;
        }
        else {
          int64_t v15 = v12;
        }
        uint64_t v3 = (void *)sub_1000753BC(isUniquelyReferenced_nonNull_native, v15, 1, (unint64_t)v3);
        if (v10[2])
        {
LABEL_22:
          uint64_t v16 = v3[2];
          uint64_t v17 = (v3[3] >> 1) - v16;
          uint64_t v18 = *(void *)(sub_1000B2F60() - 8);
          uint64_t v19 = *(void *)(v18 + 72);
          if (v17 < v11) {
            goto LABEL_34;
          }
          unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
          char v21 = (char *)v3 + v20 + v19 * v16;
          uint64_t v22 = (char *)v10 + v20;
          uint64_t v23 = v19 * v11;
          uint64_t v24 = &v21[v23];
          BOOL v25 = &v22[v23];
          if (v22 < v24 && v21 < v25)
          {
            uint64_t result = sub_1000B46E0();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v11)
          {
            uint64_t v27 = v3[2];
            BOOL v28 = __OFADD__(v27, v11);
            uint64_t v29 = v27 + v11;
            if (v28) {
              goto LABEL_35;
            }
            v3[2] = v29;
          }
          goto LABEL_5;
        }
      }
      if (v11) {
        goto LABEL_33;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      ++v4;
      if (v7 == v2) {
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_38:
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

void *sub_10000BDBC(unint64_t a1)
{
  int64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_36;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1000B46A0())
  {
    unint64_t v29 = v2 & 0xC000000000000001;
    uint64_t v4 = _swiftEmptyArrayStorage;
    uint64_t v5 = 4;
    int64_t v28 = v2;
    while (1)
    {
      id v6 = v29 ? (id)sub_1000B45E0() : *(id *)(v2 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v31 = v6;
      sub_100010710(&v31, &v30);
      if (v1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v4;
      }

      id v9 = v30;
      uint64_t v10 = *((void *)v30 + 2);
      int64_t v11 = v4[2];
      int64_t v2 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_32;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v2 <= v4[3] >> 1)
      {
        if (*((void *)v9 + 2)) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v11 <= v2) {
          int64_t v13 = v11 + v10;
        }
        else {
          int64_t v13 = v11;
        }
        uint64_t v4 = (void *)sub_1000753BC(isUniquelyReferenced_nonNull_native, v13, 1, (unint64_t)v4);
        if (*((void *)v9 + 2))
        {
LABEL_20:
          uint64_t v14 = v4[2];
          int64_t v2 = (v4[3] >> 1) - v14;
          uint64_t v15 = *(void *)(sub_1000B2F60() - 8);
          uint64_t v16 = *(void *)(v15 + 72);
          if (v2 < v10) {
            goto LABEL_34;
          }
          unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
          uint64_t v18 = (char *)v4 + v17 + v16 * v14;
          uint64_t v19 = &v9[v17];
          uint64_t v20 = v16 * v10;
          char v21 = &v18[v20];
          uint64_t v22 = &v19[v20];
          if (v19 < v21 && v18 < v22)
          {
            uint64_t result = (void *)sub_1000B46E0();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            uint64_t v24 = v4[2];
            BOOL v25 = __OFADD__(v24, v10);
            uint64_t v26 = v24 + v10;
            if (v25) {
              goto LABEL_35;
            }
            v4[2] = v26;
          }
          goto LABEL_5;
        }
      }
      if (v10) {
        goto LABEL_33;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      ++v5;
      int64_t v2 = v28;
      if (v8 == v3)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10000C070(os_log_t a1, uint64_t a2, void *a3, NSObject *a4)
{
  v250 = a3;
  os_log_t v251 = a4;
  v253 = 0;
  uint64_t v6 = sub_1000B3570();
  v242 = *(void (***)(char *, uint64_t, id))(v6 - 8);
  __chkstk_darwin(v6);
  v241 = (char *)&v223 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004210(&qword_1000D5010);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v234 = (uint64_t)&v223 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v240 = (char *)&v223 - v11;
  uint64_t v237 = type metadata accessor for WidgetTileInfo();
  uint64_t v248 = *(void *)(v237 - 8);
  uint64_t v12 = __chkstk_darwin(v237);
  uint64_t v230 = (uint64_t)&v223 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v233 = (uint64_t)&v223 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v231 = (uint64_t)&v223 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v232 = (uint64_t)&v223 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v246 = (uint64_t)&v223 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v247 = (uint64_t)&v223 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t)&v223 - v24;
  uint64_t v26 = sub_100004210(&qword_1000D5040);
  __chkstk_darwin(v26 - 8);
  int64_t v28 = (char *)&v223 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v29 = (os_log_t)sub_1000B33B0();
  uint64_t isa = (uint64_t)v29[-1].isa;
  uint64_t v31 = __chkstk_darwin(v29);
  v238 = (char *)&v223 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v34 = (uint64_t)&v223 - v33;
  v254 = (void *)sub_1000B2F60();
  os_log_t v252 = (os_log_t)*(v254 - 1);
  uint64_t v35 = __chkstk_darwin(v254);
  v249 = (uint64_t *)((char *)&v223 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = __chkstk_darwin(v35);
  v245 = (char *)&v223 - v38;
  __chkstk_darwin(v37);
  v244 = (void (*)(uint64_t, char *, uint64_t))((char *)&v223 - v39);
  uint64_t v40 = (uint64_t)&_swiftEmptySetSingleton;
  v261 = &_swiftEmptySetSingleton;
  sub_100008148(0, &qword_1000D4FD8);
  char v41 = sub_1000B4320();
  v243 = v6;
  if (v41)
  {
    if (!a2) {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    id v42 = [a1 uniqueIdentifier];
    uint64_t v236 = v34;
    id v43 = v244;
    sub_1000B2F50();

    uint64_t v235 = isa;
    __chkstk_darwin(v44);
    *(&v223 - 2) = (uint64_t)v43;
    uint64_t v45 = v253;
    LOBYTE(v42) = sub_100034BAC((uint64_t (*)(char *))sub_100017FE8, (uint64_t)(&v223 - 4), a2);
    v253 = v45;
    uint64_t isa = v235;
    uint64_t v6 = (uint64_t)v243;
    uint64_t v46 = v43;
    uint64_t v34 = v236;
    ((void (*)(void (*)(uint64_t, char *, uint64_t), void *))v252[1].isa)(v46, v254);
    swift_bridgeObjectRelease();
    if (v42)
    {
LABEL_4:
      sub_1000B4260();
      if ((*(unsigned int (**)(char *, uint64_t, os_log_t))(isa + 48))(v28, 1, v29) == 1)
      {
        uint64_t v47 = &qword_1000D5040;
      }
      else
      {
        (*(void (**)(uint64_t, char *, os_log_t))(isa + 32))(v34, v28, v29);
        int64_t v28 = v240;
        sub_10000FE5C(a1, v34, (uint64_t)v240);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48))(v28, 1, v237) != 1)
        {
          sub_10000809C((uint64_t)v28, v25);
          if (qword_1000D4EA8 == -1)
          {
LABEL_83:
            sub_100017618(v6, (uint64_t)qword_1000DCC18);
            v162 = v238;
            (*(void (**)(char *, uint64_t, os_log_t))(isa + 16))(v238, v34, v29);
            uint64_t v163 = isa;
            uint64_t v164 = a1;
            v165 = sub_1000B3550();
            os_log_type_t v166 = sub_1000B42C0();
            int v167 = v166;
            if (os_log_type_enabled(v165, v166))
            {
              uint64_t v168 = swift_slowAlloc();
              v253 = (void *)swift_slowAlloc();
              v255 = v253;
              *(_DWORD *)uint64_t v168 = 136315650;
              os_log_t v251 = v165;
              v258 = sub_10002A68C(0xD000000000000047, 0x80000001000B8C80, (uint64_t *)&v255);
              v249 = &v259;
              sub_1000B4400();
              *(_WORD *)(v168 + 12) = 2080;
              uint64_t v248 = v168 + 14;
              id v169 = [v164 uniqueIdentifier];
              LODWORD(v250) = v167;
              uint64_t v170 = v34;
              v171 = v244;
              sub_1000B2F50();

              sub_100017A1C(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
              v172 = v254;
              uint64_t v173 = sub_1000B4800();
              unint64_t v175 = v174;
              v176 = v171;
              uint64_t v34 = v170;
              ((void (*)(void (*)(uint64_t, char *, uint64_t), void *))v252[1].isa)(v176, v172);
              v258 = sub_10002A68C(v173, v175, (uint64_t *)&v255);
              sub_1000B4400();

              swift_bridgeObjectRelease();
              *(_WORD *)(v168 + 22) = 2080;
              sub_100017A1C(&qword_1000D5058, (void (*)(uint64_t))&type metadata accessor for StaticMatterDevice);
              v177 = v238;
              uint64_t v178 = sub_1000B4800();
              v258 = sub_10002A68C(v178, v179, (uint64_t *)&v255);
              sub_1000B4400();
              swift_bridgeObjectRelease();
              v180 = *(void (**)(char *, os_log_t))(v163 + 8);
              v180(v177, v29);
              v165 = v251;
              _os_log_impl((void *)&_mh_execute_header, v251, (os_log_type_t)v250, "%s for accessory %s - MatterDevice: %s", (uint8_t *)v168, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              v180 = *(void (**)(char *, os_log_t))(v163 + 8);
              v180(v162, v29);
            }

            uint64_t v190 = v246;
            sub_100007FDC(v25, v246);
            uint64_t v191 = v247;
            sub_100004DF0(v247, v190);
            sub_100008040(v191);
            sub_100008040(v25);
            v180((char *)v34, v29);
            return (uint64_t)v261;
          }
LABEL_120:
          swift_once();
          goto LABEL_83;
        }
        (*(void (**)(uint64_t, os_log_t))(isa + 8))(v34, v29);
        uint64_t v47 = &qword_1000D5010;
      }
      sub_100017B5C((uint64_t)v28, v47);
    }
  }
  id v48 = [a1 hf_visibleServices];
  uint64_t v49 = (void *)sub_100008148(0, &qword_1000D5020);
  sub_100017AEC(&qword_1000D5048, &qword_1000D5020);
  uint64_t v50 = sub_1000B41E0();

  uint64_t v239 = a2;
  if ((v50 & 0xC000000000000001) != 0)
  {
    v255 = &_swiftEmptySetSingleton;
    sub_1000B44B0();
    uint64_t v51 = (void *)sub_1000B4520();
    if (v51)
    {
      uint64_t v40 = (uint64_t)&type metadata for Swift.AnyObject + 8;
      uint64_t v52 = -1;
      do
      {
        v257 = v51;
        swift_dynamicCast();
        unsigned __int8 v53 = [v258 hf_isSensorService];
        unint64_t v54 = v258;
        if (v53)
        {
        }
        else
        {
          uint64_t v6 = (uint64_t)v49;
          uint64_t v49 = v255;
          unint64_t v55 = v255[2];
          if (v255[3] <= v55)
          {
            sub_100006140(v55 + 1);
            uint64_t v49 = v255;
          }
          Swift::Int v56 = sub_1000B4380(v49[5]);
          uint64_t v57 = v49 + 7;
          uint64_t v58 = -1 << *((unsigned char *)v49 + 32);
          unint64_t v59 = v56 & ~v58;
          unint64_t v60 = v59 >> 6;
          if (((-1 << v59) & ~v49[(v59 >> 6) + 7]) != 0)
          {
            unint64_t v61 = __clz(__rbit64((-1 << v59) & ~v49[(v59 >> 6) + 7])) | v59 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v62 = 0;
            unint64_t v63 = (unint64_t)(63 - v58) >> 6;
            do
            {
              if (++v60 == v63 && (v62 & 1) != 0)
              {
                __break(1u);
                __break(1u);
                goto LABEL_95;
              }
              BOOL v64 = v60 == v63;
              if (v60 == v63) {
                unint64_t v60 = 0;
              }
              v62 |= v64;
              uint64_t v65 = v57[v60];
            }
            while (v65 == -1);
            unint64_t v61 = __clz(__rbit64(~v65)) + (v60 << 6);
          }
          *(void *)((char *)v57 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v61;
          *(void *)(v49[6] + 8 * v61) = v54;
          ++v49[2];
          uint64_t v49 = (void *)v6;
        }
        uint64_t v51 = (void *)sub_1000B4520();
      }
      while (v51);
      uint64_t v40 = (uint64_t)v255;
    }
    uint64_t v6 = (uint64_t)v253;
    swift_release();
  }
  else
  {
    uint64_t v6 = (uint64_t)v253;
    uint64_t v40 = sub_1000163CC(v50);
  }
  unint64_t v54 = v243;
  v253 = (void *)(v40 & 0xC000000000000001);
  if ((v40 & 0xC000000000000001) != 0)
  {
    if (sub_1000B44F0() < 2)
    {
LABEL_33:
      LODWORD(v236) = 0;
      LODWORD(v238) = 1;
      goto LABEL_36;
    }
  }
  else if (*(uint64_t *)(v40 + 16) < 2)
  {
    goto LABEL_33;
  }
  LODWORD(v238) = sub_1000B4270();
  LODWORD(v236) = v238;
LABEL_36:
  id v66 = [a1 services];
  unint64_t v67 = sub_1000B4100();

  uint64_t v52 = (uint64_t)sub_10000BDBC(v67);
  swift_bridgeObjectRelease();
  if (qword_1000D4EA8 != -1) {
LABEL_95:
  }
    swift_once();
  uint64_t v68 = sub_100017618((uint64_t)v54, (uint64_t)qword_1000DCC18);
  unint64_t v69 = v242;
  uint64_t v70 = v241;
  v242[2](v241, v68, v54);
  uint64_t v71 = a1;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  a1 = v71;
  uint64_t v72 = sub_1000B3550();
  LODWORD(v235) = sub_1000B42C0();
  BOOL v73 = os_log_type_enabled(v72, (os_log_type_t)v235);
  v240 = (char *)v68;
  if (!v73)
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();

    ((void (*)(char *, NSObject *))v69[1])(v70, v54);
    uint64_t v25 = (uint64_t)v254;
    uint64_t isa = v52;
    uint64_t v81 = v239;
    os_log_t v29 = v252;
    goto LABEL_61;
  }
  os_log_t v226 = v72;
  uint64_t v228 = v52;
  v227 = v49;
  uint64_t v74 = swift_slowAlloc();
  v224 = (void *)swift_slowAlloc();
  v257 = v224;
  *(_DWORD *)uint64_t v74 = 136316162;
  v255 = (void *)sub_10002A68C(0xD000000000000047, 0x80000001000B8C80, (uint64_t *)&v257);
  sub_1000B4400();
  *(_WORD *)(v74 + 12) = 2080;
  v229 = (v74 + 14);
  id v75 = [a1 uniqueIdentifier];
  v76 = v244;
  sub_1000B2F50();

  sub_100017A1C(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v77 = v254;
  uint64_t v78 = sub_1000B4800();
  unint64_t v80 = v79;
  os_log_t v29 = v252;
  ((void (*)(void (*)(uint64_t, char *, uint64_t), void *))v252[1].isa)(v76, v77);
  v255 = (void *)sub_10002A68C(v78, v80, (uint64_t *)&v257);
  sub_1000B4400();

  v229 = a1;
  swift_bridgeObjectRelease();
  uint64_t v225 = v74;
  *(_WORD *)(v74 + 22) = 2080;
  if (v253) {
    uint64_t v34 = sub_1000B44F0();
  }
  else {
    uint64_t v34 = *(void *)(v40 + 16);
  }
  uint64_t isa = (uint64_t)v245;
  uint64_t v25 = (uint64_t)v254;
  if (!v34)
  {
LABEL_60:
    uint64_t v102 = v225;
    uint64_t v103 = sub_1000B4110();
    unint64_t v105 = v104;
    swift_bridgeObjectRelease();
    v255 = (void *)sub_10002A68C(v103, v105, (uint64_t *)&v257);
    sub_1000B4400();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v102 + 32) = 1024;
    LODWORD(v255) = v236 & 1;
    sub_1000B4400();
    *(_WORD *)(v102 + 38) = 2080;
    uint64_t isa = v228;
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_1000B4110();
    unint64_t v108 = v107;
    swift_bridgeObjectRelease();
    v255 = (void *)sub_10002A68C(v106, v108, (uint64_t *)&v257);
    sub_1000B4400();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v109 = v226;
    _os_log_impl((void *)&_mh_execute_header, v226, (os_log_type_t)v235, "%s for accessory %s - allVisibleServices: %s needToBeShownAsSeparateTile: %{BOOL}d linkedServiceIDs: %s", (uint8_t *)v102, 0x30u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(char *, NSObject *))v242[1])(v241, v243);
    uint64_t v81 = v239;
    a1 = v229;
LABEL_61:
    if ((v238 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      if (!v81) {
        goto LABEL_72;
      }
      swift_bridgeObjectRetain();
      id v115 = [a1 uniqueIdentifier];
      uint64_t v116 = v244;
      sub_1000B2F50();

      __chkstk_darwin(v117);
      *(&v223 - 2) = (uint64_t)v116;
      LOBYTE(v115) = sub_100034BAC((uint64_t (*)(char *))sub_100017FE8, (uint64_t)(&v223 - 4), v81);
      ((void (*)(void (*)(uint64_t, char *, uint64_t), uint64_t))v29[1].isa)(v116, v25);
      swift_bridgeObjectRelease();
      if (v115)
      {
LABEL_72:
        uint64_t v118 = v234;
        sub_100010B0C(a1, v234);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48))(v118, 1, v237) != 1)
        {
          uint64_t v153 = v232;
          sub_10000809C(v118, v232);
          uint64_t v154 = v246;
          sub_100007FDC(v153, v246);
          uint64_t v155 = v247;
          sub_100004DF0(v247, v154);
          sub_100008040(v155);
          uint64_t v156 = v231;
          sub_100007FDC(v153, v231);
          v157 = sub_1000B3550();
          os_log_type_t v158 = sub_1000B42C0();
          if (os_log_type_enabled(v157, v158))
          {
            v159 = (uint8_t *)swift_slowAlloc();
            v255 = (void *)swift_slowAlloc();
            *(_DWORD *)v159 = 136315138;
            sub_100017A1C(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v160 = sub_1000B4800();
            v258 = sub_10002A68C(v160, v161, (uint64_t *)&v255);
            sub_1000B4400();
            swift_bridgeObjectRelease();
            sub_100008040(v156);
            _os_log_impl((void *)&_mh_execute_header, v157, v158, "Returning widgetTileInfo for accessory %s", v159, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100008040(v156);
          }
          sub_100008040(v153);
          return (uint64_t)v261;
        }
        sub_100017B5C(v118, &qword_1000D5010);
      }
      id v119 = [a1 hf_primaryService];
      if (v119)
      {
        v120 = v119;
        if (!v81) {
          goto LABEL_77;
        }
        swift_bridgeObjectRetain();
        id v121 = [v120 uniqueIdentifier];
        uint64_t v122 = v244;
        sub_1000B2F50();

        __chkstk_darwin(v123);
        *(&v223 - 2) = (uint64_t)v122;
        LOBYTE(v121) = sub_100034BAC((uint64_t (*)(char *))sub_100017B3C, (uint64_t)(&v223 - 4), v81);
        ((void (*)(void (*)(uint64_t, char *, uint64_t), uint64_t))v29[1].isa)(v122, v25);
        swift_bridgeObjectRelease();
        if (v121)
        {
LABEL_77:
          id v124 = [v120 uniqueIdentifier];
          v125 = v244;
          sub_1000B2F50();

          id v126 = [v120 name];
          uint64_t v127 = sub_1000B4010();
          uint64_t v129 = v128;

          uint64_t v130 = v247;
          sub_10001182C(v120, v125, v127, v129, 0, 255, v247);
          swift_bridgeObjectRelease();
          uint64_t v131 = v25;
          uint64_t v132 = (void (*)(void (*)(uint64_t, char *, uint64_t), uint64_t))v29[1].isa;
          v132(v125, v131);
          uint64_t v133 = v233;
          sub_10000809C(v130, v233);
          os_log_t v134 = a1;
          id v135 = [a1 hf_primaryService];

          if (v135)
          {
            uint64_t v136 = v246;
            sub_100007FDC(v133, v246);
            uint64_t v137 = v133;
            sub_100004DF0(v130, v136);
            sub_100008040(v130);
            uint64_t v138 = v230;
            sub_100007FDC(v133, v230);
            char v139 = v134;
            uint64_t v140 = sub_1000B3550();
            os_log_type_t v141 = sub_1000B42C0();
            int v142 = v141;
            if (os_log_type_enabled(v140, v141))
            {
              uint64_t v143 = swift_slowAlloc();
              v253 = (void *)swift_slowAlloc();
              v255 = v253;
              *(_DWORD *)uint64_t v143 = 136315394;
              v250 = (void *)(v143 + 4);
              sub_100017A1C(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
              os_log_t v252 = v140;
              unint64_t v144 = v254;
              uint64_t v145 = sub_1000B4800();
              v258 = sub_10002A68C(v145, v146, (uint64_t *)&v255);
              LODWORD(v251) = v142;
              sub_1000B4400();
              swift_bridgeObjectRelease();
              sub_100008040(v138);
              *(_WORD *)(v143 + 12) = 2080;
              v250 = (void *)(v143 + 14);
              id v147 = [v139 uniqueIdentifier];
              v148 = v244;
              sub_1000B2F50();

              uint64_t v149 = sub_1000B4800();
              unint64_t v151 = v150;
              v132(v148, (uint64_t)v144);
              v258 = sub_10002A68C(v149, v151, (uint64_t *)&v255);
              sub_1000B4400();

              swift_bridgeObjectRelease();
              os_log_t v152 = v252;
              _os_log_impl((void *)&_mh_execute_header, v252, (os_log_type_t)v251, "Returning widgetTileInfo for primary service %s of accessory %s", (uint8_t *)v143, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              sub_100008040(v233);
            }
            else
            {

              sub_100008040(v138);
              sub_100008040(v137);
            }
            return (uint64_t)v261;
          }
          sub_100008040(v133);
          uint64_t v25 = (uint64_t)v254;
        }
      }
      v181 = a1;
      v182 = sub_1000B3550();
      os_log_type_t v183 = sub_1000B42C0();
      if (os_log_type_enabled(v182, v183))
      {
        v184 = (uint8_t *)swift_slowAlloc();
        v254 = (void *)swift_slowAlloc();
        v255 = v254;
        *(_DWORD *)v184 = 136315138;
        v253 = v184 + 4;
        id v185 = [v181 uniqueIdentifier];
        v186 = v244;
        sub_1000B2F50();

        sub_100017A1C(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v187 = sub_1000B4800();
        unint64_t v189 = v188;
        ((void (*)(void (*)(uint64_t, char *, uint64_t), uint64_t))v29[1].isa)(v186, v25);
        v258 = sub_10002A68C(v187, v189, (uint64_t *)&v255);
        sub_1000B4400();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v182, v183, "Returning no widgetTileInfo for accessory %s", v184, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      return (uint64_t)v261;
    }
    os_log_t v29 = (os_log_t)isa;
    id v110 = [a1 services];
    unint64_t v111 = sub_1000B4100();

    uint64_t v34 = (uint64_t)a1;
    if (v111 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v112 = sub_1000B46A0();
      if (v112) {
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v112 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v112)
      {
LABEL_64:
        if (v112 < 1)
        {
LABEL_119:
          __break(1u);
          goto LABEL_120;
        }
        uint64_t v25 = 0;
        do
        {
          if ((v111 & 0xC000000000000001) != 0) {
            id v113 = (id)sub_1000B45E0();
          }
          else {
            id v113 = *(id *)(v111 + 8 * v25 + 32);
          }
          v114 = v113;
          ++v25;
          v255 = v113;
          sub_100010E60((id *)&v255, v250, (uint64_t)v251, a1, v40, (uint64_t)v29, v81, (uint64_t)&v261);
        }
        while (v112 != v25);
      }
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v192 = a1;
    v193 = sub_1000B3550();
    int v194 = sub_1000B42C0();
    if (os_log_type_enabled(v193, (os_log_type_t)v194))
    {
      LODWORD(v250) = v194;
      v195 = swift_slowAlloc();
      v245 = (char *)swift_slowAlloc();
      v255 = v245;
      os_log_t v251 = v195;
      LODWORD(v195->isa) = 136315394;
      swift_beginAccess();
      uint64_t v196 = (uint64_t)v261;
      int64_t v197 = v261[2];
      if (v197)
      {
        v242 = (void (**)(char *, uint64_t, id))v192;
        v243 = v193;
        v257 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_10001E9D8(0, v197, 0);
        uint64_t v34 = sub_1000166CC(v196);
        os_log_t v29 = v198;
        uint64_t isa = v199 & 1;
        v253 = (void *)(v196 + 56);
        os_log_t v200 = v252 + 2;
        a1 = v252 + 4;
        uint64_t v6 = (uint64_t)v254;
        while ((v34 & 0x8000000000000000) == 0 && v34 < 1 << *(unsigned char *)(v196 + 32))
        {
          if (((*(void *)((char *)v253 + (((unint64_t)v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
            goto LABEL_116;
          }
          if (*(_DWORD *)(v196 + 36) != v29) {
            goto LABEL_117;
          }
          uint64_t v201 = v247;
          sub_100007FDC(*(void *)(v196 + 48) + *(void *)(v248 + 72) * v34, v247);
          uint64_t v202 = v201;
          uint64_t v203 = v246;
          sub_10000809C(v202, v246);
          ((void (*)(uint64_t *, uint64_t, uint64_t))v200->isa)(v249, v203, v6);
          sub_100008040(v203);
          v204 = v257;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10001E9D8(0, v204[2] + 1, 1);
            v204 = v257;
          }
          unint64_t v206 = v204[2];
          unint64_t v205 = v204[3];
          uint64_t v25 = v206 + 1;
          if (v206 >= v205 >> 1)
          {
            sub_10001E9D8(v205 > 1, v206 + 1, 1);
            v204 = v257;
          }
          v204[2] = v25;
          unint64_t v207 = (unint64_t)v204
               + ((LOBYTE(v252[10].isa) + 32) & ~(unint64_t)LOBYTE(v252[10].isa))
               + (unint64_t)v252[9].isa * v206;
          uint64_t v6 = (uint64_t)v254;
          ((void (*)(unint64_t, uint64_t *, void *))v252[4].isa)(v207, v249, v254);
          v257 = v204;
          int64_t v208 = sub_10001676C(v34, (int)v29, isa & 1, v196);
          uint64_t v34 = v208;
          os_log_t v29 = (os_log_t)v209;
          uint64_t isa = v210 & 1;
          if (!--v197)
          {
            sub_100017A08(v208, v209, v210 & 1);
            swift_bridgeObjectRelease();
            os_log_t v211 = v252;
            v193 = v243;
            v192 = v242;
            goto LABEL_112;
          }
        }
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
        goto LABEL_118;
      }
      os_log_t v211 = v252;
LABEL_112:
      os_log_t v212 = v251;
      v213 = v254;
      uint64_t v214 = sub_1000B4110();
      unint64_t v216 = v215;
      swift_bridgeObjectRelease();
      v257 = (void *)sub_10002A68C(v214, v216, (uint64_t *)&v255);
      sub_1000B4400();
      swift_bridgeObjectRelease();
      WORD2(v212[1].isa) = 2080;
      id v217 = [v192 uniqueIdentifier];
      v218 = v244;
      sub_1000B2F50();

      sub_100017A1C(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v219 = sub_1000B4800();
      unint64_t v221 = v220;
      ((void (*)(void (*)(uint64_t, char *, uint64_t), void *))v211[1].isa)(v218, v213);
      v257 = (void *)sub_10002A68C(v219, v221, (uint64_t *)&v255);
      sub_1000B4400();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v193, (os_log_type_t)v250, "Returning widgetTileInfo for services %s of accessory %s", (uint8_t *)v212, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_beginAccess();
    return (uint64_t)v261;
  }
  v256 = _swiftEmptyArrayStorage;
  sub_10001E9D8(0, v34 & ~(v34 >> 63), 0);
  if (v253)
  {
    v82 = sub_1000B44A0();
    char v84 = 1;
  }
  else
  {
    v82 = sub_100016AC8(v40);
    char v84 = v85 & 1;
  }
  v258 = v82;
  uint64_t v259 = v83;
  char v260 = v84;
  if (v34 < 0)
  {
LABEL_118:
    __break(1u);
    goto LABEL_119;
  }
  while (1)
  {
    sub_100016850((uint64_t)v258, v259, v260, v40);
    int v96 = v95;
    id v97 = [v95 uniqueIdentifier];
    sub_1000B2F50();

    char v98 = v256;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10001E9D8(0, v98[2] + 1, 1);
      char v98 = v256;
    }
    unint64_t v100 = v98[2];
    unint64_t v99 = v98[3];
    if (v100 >= v99 >> 1)
    {
      sub_10001E9D8(v99 > 1, v100 + 1, 1);
      char v98 = v256;
    }
    v98[2] = v100 + 1;
    ((void (*)(unint64_t, uint64_t, uint64_t))v29[4].isa)((unint64_t)v98+ ((LOBYTE(v29[10].isa) + 32) & ~(unint64_t)LOBYTE(v29[10].isa))+ (unint64_t)v29[9].isa * v100, isa, v25);
    v256 = v98;
    if (v253) {
      break;
    }
    uint64_t v86 = (uint64_t)v258;
    uint64_t v87 = v259;
    char v88 = v260;
    BOOL v89 = sub_10001676C((int64_t)v258, v259, v260, v40);
    uint64_t v91 = v90;
    char v93 = v92;
    sub_100017A08(v86, v87, v88);
    v258 = v89;
    uint64_t v259 = v91;
    uint64_t isa = (uint64_t)v245;
    uint64_t v25 = (uint64_t)v254;
    char v94 = v93 & 1;
    os_log_t v29 = v252;
    char v260 = v94;
LABEL_49:
    if (!--v34)
    {
      sub_100017A08((uint64_t)v258, v259, v260);
      goto LABEL_60;
    }
  }
  if (v260)
  {
    if (sub_1000B44C0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_100004210(&qword_1000D5050);
    uint64_t v101 = (void (*)(void **, void))sub_1000B4210();
    sub_1000B4530();
    v101(&v255, 0);
    goto LABEL_49;
  }
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10000E1F8(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v58 = a2;
  uint64_t v3 = sub_100004210(&qword_1000D5038);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004210(&qword_1000D5008);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v47 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = sub_1000B2F60();
  uint64_t v57 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = a1 + *(int *)(type metadata accessor for WidgetTileInfo() + 56);
  if (*(unsigned char *)(v21 + 8)) {
    return sub_1000B2F40() & 1;
  }
  uint64_t v51 = v3;
  uint64_t v52 = v12;
  unint64_t v54 = v5;
  unint64_t v55 = v14;
  unsigned __int8 v53 = v9;
  id v56 = *(id *)v21;
  id v23 = [v56 uniqueIdentifier];
  sub_1000B2F50();

  uint64_t v24 = v58;
  LOBYTE(v23) = sub_1000B2F40();
  uint64_t v25 = v57;
  uint64_t v26 = v57 + 8;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v57 + 8);
  v27(v20, v15);
  int64_t v28 = *(void (**)(char *, void (*)(void, void), uint64_t))(v25 + 16);
  v28(v18, (void (*)(void, void))v24, v15);
  if ((v23 & 1) == 0)
  {
    id v48 = v20;
    uint64_t v49 = v18;
    uint64_t v58 = v27;
    uint64_t v30 = (uint64_t)v55;
    v28(v55, (void (*)(void, void))v18, v15);
    uint64_t v31 = 1;
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
    v32(v30, 0, 1, v15);
    id v33 = [v56 accessory];
    uint64_t v34 = v15;
    uint64_t v50 = v26;
    if (v33)
    {
      uint64_t v35 = v33;
      id v36 = [v33 uniqueIdentifier];

      uint64_t v37 = (uint64_t)v52;
      sub_1000B2F50();

      uint64_t v31 = 0;
      uint64_t v39 = (uint64_t)v53;
      uint64_t v38 = (uint64_t)v54;
    }
    else
    {
      uint64_t v39 = (uint64_t)v53;
      uint64_t v38 = (uint64_t)v54;
      uint64_t v37 = (uint64_t)v52;
    }
    uint64_t v40 = v51;
    v32(v37, v31, 1, v34);
    uint64_t v41 = v38 + *(int *)(v40 + 48);
    sub_100017A84(v30, v38);
    sub_100017A84(v37, v41);
    uint64_t v42 = v30;
    id v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
    if (v43(v38, 1, v34) == 1)
    {

      sub_100017B5C(v37, &qword_1000D5008);
      sub_100017B5C(v42, &qword_1000D5008);
      v58(v49, v34);
      if (v43(v41, 1, v34) == 1)
      {
        sub_100017B5C(v38, &qword_1000D5008);
        goto LABEL_5;
      }
    }
    else
    {
      sub_100017A84(v38, v39);
      if (v43(v41, 1, v34) != 1)
      {
        uint64_t v45 = v48;
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v48, v41, v34);
        sub_100017A1C(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v29 = sub_1000B3F90();

        uint64_t v46 = v58;
        v58(v45, v34);
        sub_100017B5C(v37, &qword_1000D5008);
        sub_100017B5C((uint64_t)v55, &qword_1000D5008);
        v46(v49, v34);
        v46((char *)v39, v34);
        sub_100017B5C(v38, &qword_1000D5008);
        return v29 & 1;
      }

      sub_100017B5C(v37, &qword_1000D5008);
      sub_100017B5C((uint64_t)v55, &qword_1000D5008);
      uint64_t v44 = (void (*)(uint64_t, uint64_t))v58;
      v58(v49, v34);
      v44(v39, v34);
    }
    sub_100017B5C(v38, &qword_1000D5038);
    char v29 = 0;
    return v29 & 1;
  }
  v27(v18, v15);

LABEL_5:
  char v29 = 1;
  return v29 & 1;
}

uint64_t sub_10000E7C8@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v28 = type metadata accessor for WidgetTileInfo();
  uint64_t v6 = *(void *)(v28 - 8);
  uint64_t v7 = __chkstk_darwin(v28);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v30 = a2 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v31 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_100007FDC(*(void *)(a2 + 48) + *(void *)(v6 + 72) * i, (uint64_t)v11);
    sub_10000809C((uint64_t)v11, (uint64_t)v9);
    char v23 = a1(v9);
    if (v3)
    {
      sub_100008040((uint64_t)v9);
      return swift_release();
    }
    if (v23)
    {
      swift_release();
      uint64_t v24 = v29;
      sub_10000809C((uint64_t)v9, v29);
      uint64_t v25 = 0;
      uint64_t v26 = v28;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v24, v25, 1, v26);
    }
    uint64_t result = sub_100008040((uint64_t)v9);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1)) {
      break;
    }
    if (v17 >= v31) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v30 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v31) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v30 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v31) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v30 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v31) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v30 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v17 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v17 + 4;
      if (v17 + 4 < v31)
      {
        unint64_t v21 = *(void *)(v30 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v17 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_31;
            }
            if (v17 >= v31) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v30 + 8 * v17);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v26 = v28;
      uint64_t v24 = v29;
      swift_release();
      uint64_t v25 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v24, v25, 1, v26);
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void *sub_10000EAA4(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1000B46A0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)sub_1000B45E0() : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10000EBD0(uint64_t a1)
{
  uint64_t v2 = sub_1000B2F60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v25 - v7;
  uint64_t v9 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t result = sub_1000B4200();
  int64_t v13 = 0;
  uint64_t v31 = a1;
  uint64_t v32 = result;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v15 = a1 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v26 = v15;
  int64_t v27 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v29 = v3 + 16;
  uint64_t v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v28 = v3 + 48;
  if ((v18 & v14) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v20 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(void *)(v31 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1) {
      goto LABEL_25;
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_100005330((uint64_t)v8, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v26 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v27) {
            goto LABEL_24;
          }
          unint64_t v23 = *(void *)(v26 + 8 * v13);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v19 = (v23 - 1) & v23;
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v27)
  {
LABEL_24:
    (*v30)(v11, 1, 1, v2);
LABEL_25:
    swift_release();
    return v32;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10000EF80(void *a1)
{
  uint64_t v2 = sub_1000B2F60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v56 = (void (*)(uint64_t, char *, uint64_t))((char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100004210(&qword_1000D5010);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v56 - v9;
  id v11 = [a1 serviceGroups];
  uint64_t v12 = (void *)sub_100008148(0, &qword_1000D5018);
  unint64_t v13 = sub_1000B4100();

  id v59 = a1;
  unint64_t v60 = v12;
  uint64_t v57 = v3;
  uint64_t v58 = v2;
  if (v13 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1000B46A0();
    if (v14) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
    {
LABEL_3:
      unint64_t v15 = v13 & 0xC000000000000001;
      uint64_t v16 = 4;
      do
      {
        if (v15) {
          id v17 = (id)sub_1000B45E0();
        }
        else {
          id v17 = *(id *)(v13 + 8 * v16);
        }
        uint64_t v18 = v17;
        uint64_t v19 = v16 - 3;
        if (__OFADD__(v16 - 4, 1))
        {
          __break(1u);
          goto LABEL_18;
        }
        id v20 = [v17 services];
        sub_100008148(0, &qword_1000D5020);
        unint64_t v21 = sub_1000B4100();

        if (v21 >> 62)
        {
          swift_bridgeObjectRetain();
          unint64_t v22 = sub_1000B46A0();
          swift_bridgeObjectRelease();
          if (v22)
          {
LABEL_13:
            if ((v21 & 0xC000000000000001) != 0)
            {
              id v24 = (id)sub_1000B45E0();
            }
            else
            {
              if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_58;
              }
              id v24 = *(id *)(v21 + 32);
            }
            uint64_t v25 = v24;
            swift_bridgeObjectRelease();
            id v26 = [v18 uniqueIdentifier];
            int64_t v27 = v56;
            sub_1000B2F50();

            id v28 = [v18 name];
            uint64_t v29 = sub_1000B4010();
            uint64_t v31 = v30;

            BOOL v32 = 1;
            sub_10001182C(v25, v27, v29, v31, v18, 1, (uint64_t)v10);

            swift_bridgeObjectRelease();
            (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v57 + 8))(v27, v58);
            uint64_t v33 = type metadata accessor for WidgetTileInfo();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v10, 0, 1, v33);
            sub_100017B5C((uint64_t)v10, &qword_1000D5010);
            swift_bridgeObjectRelease_n();

            return v32;
          }
        }
        else
        {
          unint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v22) {
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v23 = type metadata accessor for WidgetTileInfo();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 1, 1, v23);
        sub_100017B5C((uint64_t)v10, &qword_1000D5010);

        ++v16;
      }
      while (v19 != v14);
    }
  }
  swift_bridgeObjectRelease_n();
  id v34 = v59;
  id v35 = [v59 actionSets];
  sub_100008148(0, &qword_1000D5028);
  unint64_t v15 = sub_1000B4100();

  if (v15 >> 62) {
    goto LABEL_52;
  }
  uint64_t v36 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v36) {
    goto LABEL_21;
  }
  while (1)
  {
LABEL_28:
    swift_bridgeObjectRelease_n();
    id v43 = [v34 serviceGroups];
    unint64_t v44 = sub_1000B4100();

    unint64_t v60 = sub_10000B85C(v44);
    swift_bridgeObjectRelease();
    id v45 = [v34 accessories];
    sub_100008148(0, &qword_1000D4FD8);
    unint64_t v46 = sub_1000B4100();

    unint64_t v15 = sub_10000BB10(v46);
    swift_bridgeObjectRelease();
    id v47 = [v34 accessories];
    unint64_t v22 = sub_1000B4100();

    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1000B46A0();
      if (!v19) {
        break;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v19) {
        break;
      }
    }
    unint64_t v13 = v22 & 0xC000000000000001;
    if ((v22 & 0xC000000000000001) != 0) {
LABEL_58:
    }
      id v48 = sub_1000B45E0();
    else {
      id v48 = *(id *)(v22 + 32);
    }
    uint64_t v49 = v48;
    uint64_t v50 = *(void *)(sub_10000C070(v48, 0, v60, v15) + 16);

    swift_bridgeObjectRelease();
    if (v50)
    {
      BOOL v32 = 1;
      goto LABEL_37;
    }
    if (v19 == 1) {
      break;
    }
    uint64_t v52 = 5;
    while (1)
    {
      unsigned __int8 v53 = v13 ? sub_1000B45E0() : *(id *)(v22 + 8 * v52);
      unint64_t v54 = v53;
      id v34 = (id)(v52 - 3);
      if (__OFADD__(v52 - 4, 1)) {
        break;
      }
      id v8 = *(char **)(sub_10000C070(v53, 0, v60, v15) + 16);

      swift_bridgeObjectRelease();
      BOOL v32 = v8 != 0;
      ++v52;
      if (v8) {
        BOOL v55 = 1;
      }
      else {
        BOOL v55 = v34 == (id)v19;
      }
      if (v55) {
        goto LABEL_37;
      }
    }
    while (1)
    {
      __break(1u);
LABEL_52:
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1000B46A0();
      if (!v36) {
        break;
      }
LABEL_21:
      uint64_t v37 = 4;
      while (1)
      {
        id v38 = (v15 & 0xC000000000000001) != 0 ? (id)sub_1000B45E0() : *(id *)(v15 + 8 * v37);
        uint64_t v39 = v38;
        uint64_t v40 = v37 - 3;
        if (__OFADD__(v37 - 4, 1)) {
          break;
        }
        sub_10000AFB0(v38, (uint64_t)v8);
        uint64_t v41 = type metadata accessor for WidgetTileInfo();
        int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v8, 1, v41);
        sub_100017B5C((uint64_t)v8, &qword_1000D5010);

        if (v42 != 1)
        {
          swift_bridgeObjectRelease_n();
          return 1;
        }
        ++v37;
        if (v40 == v36) {
          goto LABEL_28;
        }
      }
      __break(1u);
    }
  }
  BOOL v32 = 0;
LABEL_37:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v32;
}

void sub_10000F720(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1000B44B0();
    sub_100008148(0, &qword_1000D5070);
    sub_100017AEC((unint64_t *)&qword_1000D5078, &qword_1000D5070);
    sub_1000B4220();
    uint64_t v1 = v22;
    uint64_t v21 = v23;
    uint64_t v2 = v24;
    uint64_t v3 = v25;
    unint64_t v4 = v26;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    uint64_t v3 = 0;
  }
  int64_t v20 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_1000B4520()) {
      goto LABEL_40;
    }
    sub_100008148(0, &qword_1000D5070);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v27;
    swift_unknownObjectRelease();
    uint64_t v12 = v3;
    uint64_t v10 = v4;
    if (!v27) {
      goto LABEL_40;
    }
LABEL_34:
    self;
    id v17 = (void *)swift_dynamicCastObjCClass();
    if (v17) {
      id v18 = v13;
    }
    self;
    uint64_t v19 = (void *)swift_dynamicCastObjCClass();
    if (v19)
    {
      id v9 = v13;
      if (v17)
      {

LABEL_40:
        sub_100017A14();
        return;
      }
LABEL_9:

      goto LABEL_10;
    }
    if (!v17) {
      goto LABEL_9;
    }

    uint64_t v19 = v17;
LABEL_10:

    uint64_t v3 = v12;
    unint64_t v4 = v10;
  }
  if (v4)
  {
    uint64_t v10 = (v4 - 1) & v4;
    unint64_t v11 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v12 = v3;
LABEL_33:
    id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_40;
    }
    goto LABEL_34;
  }
  int64_t v14 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v14 >= v20) {
      goto LABEL_40;
    }
    unint64_t v15 = *(void *)(v21 + 8 * v14);
    uint64_t v12 = v3 + 1;
    if (!v15)
    {
      uint64_t v12 = v3 + 2;
      if (v3 + 2 >= v20) {
        goto LABEL_40;
      }
      unint64_t v15 = *(void *)(v21 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v3 + 3;
        if (v3 + 3 >= v20) {
          goto LABEL_40;
        }
        unint64_t v15 = *(void *)(v21 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v3 + 4;
          if (v3 + 4 >= v20) {
            goto LABEL_40;
          }
          unint64_t v15 = *(void *)(v21 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v3 + 5;
            if (v3 + 5 >= v20) {
              goto LABEL_40;
            }
            unint64_t v15 = *(void *)(v21 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v3 + 6;
              while (v20 != v16)
              {
                unint64_t v15 = *(void *)(v21 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_32;
                }
              }
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_32:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_33;
  }
  __break(1u);
}

uint64_t sub_10000FA74@<X0>(id *a1@<X0>, char **a2@<X8>)
{
  uint64_t v5 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B2F60();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v39 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  id v38 = (char *)&v29 - v12;
  __chkstk_darwin(v11);
  BOOL v32 = (char *)&v29 - v13;
  id v14 = [*a1 services];
  sub_100008148(0, &qword_1000D5020);
  unint64_t v15 = sub_1000B4100();

  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v30 = a2;
    uint64_t v31 = v2;
    if (v16) {
      goto LABEL_3;
    }
LABEL_17:
    int64_t v20 = (char *)_swiftEmptyArrayStorage;
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease_n();
    *uint64_t v30 = v20;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000B46A0();
  uint64_t v16 = result;
  uint64_t v30 = a2;
  uint64_t v31 = v2;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = (void (**)(char *, char *, uint64_t))(v33 + 32);
    id v35 = (void (**)(char *, void, uint64_t, uint64_t))(v33 + 56);
    unint64_t v36 = v15 & 0xC000000000000001;
    id v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    int64_t v20 = (char *)_swiftEmptyArrayStorage;
    unint64_t v37 = v15;
    do
    {
      if (v36) {
        id v21 = (id)sub_1000B45E0();
      }
      else {
        id v21 = *(id *)(v15 + 8 * v18 + 32);
      }
      uint64_t v22 = v21;
      id v23 = [v21 uniqueIdentifier];
      uint64_t v24 = v38;
      sub_1000B2F50();

      uint64_t v25 = *v19;
      (*v19)(v7, v24, v8);
      (*v35)(v7, 0, 1, v8);

      if ((*v34)(v7, 1, v8) == 1)
      {
        sub_100017B5C((uint64_t)v7, &qword_1000D5008);
      }
      else
      {
        unint64_t v26 = v32;
        v25(v32, v7, v8);
        v25(v39, v26, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v20 = (char *)sub_1000753BC(0, *((void *)v20 + 2) + 1, 1, (unint64_t)v20);
        }
        unint64_t v28 = *((void *)v20 + 2);
        unint64_t v27 = *((void *)v20 + 3);
        if (v28 >= v27 >> 1) {
          int64_t v20 = (char *)sub_1000753BC(v27 > 1, v28 + 1, 1, (unint64_t)v20);
        }
        *((void *)v20 + 2) = v28 + 1;
        v25(&v20[((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v28], v39, v8);
      }
      ++v18;
      unint64_t v15 = v37;
    }
    while (v16 != v18);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

id sub_10000FE5C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v81 = a2;
  id v100 = a1;
  uint64_t v92 = a3;
  uint64_t v3 = sub_1000B33D0();
  uint64_t v97 = *(void *)(v3 - 8);
  uint64_t v98 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  int v96 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v99 = (char *)&v74 - v6;
  uint64_t v90 = sub_1000B3490();
  uint64_t v86 = *(void *)(v90 - 8);
  uint64_t v7 = __chkstk_darwin(v90);
  char v94 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v91 = (char *)&v74 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  char v88 = (char *)&v74 - v12;
  __chkstk_darwin(v11);
  id v14 = (char *)&v74 - v13;
  uint64_t v15 = sub_1000B34A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  BOOL v89 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v87 = (char *)&v74 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v82 = (char *)&v74 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v74 - v23;
  uint64_t v95 = sub_1000B2F60();
  uint64_t v93 = *(void *)(v95 - 8);
  uint64_t v25 = __chkstk_darwin(v95);
  unint64_t v80 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v83 = (char *)&v74 - v27;
  uint64_t v28 = sub_1000B33B0();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000B32E0();
  uint64_t v84 = *(void *)(v32 - 8);
  uint64_t v85 = v32;
  __chkstk_darwin(v32);
  id v34 = (char *)&v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v31, v81, v28);
  sub_100017A1C(&qword_1000D5060, (void (*)(uint64_t))&type metadata accessor for StaticMatterDevice);
  sub_1000B32F0();
  id v35 = [v100 uniqueIdentifier];
  sub_1000B2F50();

  id v36 = [v100 uniqueIdentifier];
  sub_1000B2F50();

  uint64_t v81 = sub_1000B32B0();
  uint64_t v79 = v37;
  uint64_t v78 = sub_1000B32C0();
  uint64_t v77 = v38;
  sub_1000B32D0();
  sub_1000B3460();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v16 + 8);
  v39(v24, v15);
  uint64_t v76 = sub_1000B3480();
  uint64_t v75 = v40;
  uint64_t v41 = *(void (**)(char *, uint64_t))(v86 + 8);
  uint64_t v42 = v90;
  v41(v14, v90);
  id v43 = v82;
  sub_1000B32D0();
  unint64_t v44 = v88;
  sub_1000B3450();
  v39(v43, v15);
  uint64_t v86 = sub_1000B3480();
  v82 = v45;
  v41(v44, v42);
  unint64_t v46 = v87;
  sub_1000B32D0();
  id v47 = v91;
  sub_1000B3460();
  v39(v46, v15);
  sub_1000B3470();
  v41(v47, v42);
  id v48 = v89;
  sub_1000B32D0();
  uint64_t v49 = v94;
  sub_1000B3450();
  v39(v48, v15);
  uint64_t v50 = v96;
  sub_1000B3470();
  v41(v49, v42);
  char v94 = (char *)sub_1000B32A0();
  LODWORD(v90) = sub_1000B3290();
  uint64_t v91 = (char *)sub_100019CE4((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v52 = v84;
  uint64_t v51 = v85;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v34, v85);
  unsigned __int8 v53 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v54 = v92;
  BOOL v55 = (uint64_t *)(v92 + v53[7]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v92 + v53[17], 1, 1, v51);
  uint64_t v56 = v53[18];
  uint64_t v57 = v54 + v53[19];
  uint64_t v58 = v53[20];
  BOOL v89 = (char *)v53[21];
  id v59 = (void *)(v54 + v58);
  unint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v93 + 32);
  uint64_t v61 = v95;
  v60(v54, v83, v95);
  v60(v54 + v53[5], v80, v61);
  char v62 = (uint64_t *)(v54 + v53[6]);
  uint64_t v63 = v79;
  uint64_t *v62 = v81;
  v62[1] = v63;
  uint64_t v64 = v77;
  *BOOL v55 = v78;
  v55[1] = v64;
  uint64_t v65 = (uint64_t *)(v54 + v53[8]);
  uint64_t v66 = v75;
  *uint64_t v65 = v76;
  v65[1] = v66;
  unint64_t v67 = (uint64_t *)(v54 + v53[9]);
  uint64_t v68 = v82;
  *unint64_t v67 = v86;
  v67[1] = (uint64_t)v68;
  uint64_t v69 = v98;
  uint64_t v70 = *(void (**)(uint64_t, char *, uint64_t))(v97 + 32);
  v70(v54 + v53[10], v99, v98);
  v70(v54 + v53[11], v50, v69);
  *(void *)(v54 + v53[12]) = v94;
  *(unsigned char *)(v54 + v53[13]) = v90 & 1;
  uint64_t v71 = v54 + v53[14];
  *(void *)uint64_t v71 = v100;
  *(unsigned char *)(v71 + 8) = 3;
  *(void *)(v54 + v53[15]) = v91;
  *(unsigned char *)(v54 + v53[16]) = 0;
  *(unsigned char *)(v54 + v56) = 2;
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 1;
  void *v59 = 0;
  v59[1] = 0;
  v89[v54] = 2;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v53 - 1) + 56))(v54, 0, 1, v53);
  id v72 = v100;

  return v72;
}

id sub_100010710@<X0>(id *a1@<X0>, char **a2@<X8>)
{
  uint64_t v5 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B2F60();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v40 = (char *)&v30 - v13;
  __chkstk_darwin(v12);
  uint64_t v33 = (char *)&v30 - v14;
  id result = [*a1 linkedServices];
  if (!result)
  {
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
LABEL_21:
    *a2 = v21;
    return result;
  }
  uint64_t v16 = result;
  sub_100008148(0, &qword_1000D5020);
  unint64_t v17 = sub_1000B4100();

  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    uint64_t v31 = a2;
    uint64_t v32 = v2;
    if (v18) {
      goto LABEL_4;
    }
LABEL_19:
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
LABEL_20:
    id result = (id)swift_bridgeObjectRelease_n();
    a2 = v31;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  id result = (id)sub_1000B46A0();
  uint64_t v18 = (uint64_t)result;
  uint64_t v31 = a2;
  uint64_t v32 = v2;
  if (!result) {
    goto LABEL_19;
  }
LABEL_4:
  if (v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = (void (**)(char *, char *, uint64_t))(v34 + 32);
    id v36 = (void (**)(char *, void, uint64_t, uint64_t))(v34 + 56);
    unint64_t v37 = v17 & 0xC000000000000001;
    id v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    uint64_t v39 = v11;
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    unint64_t v38 = v17;
    do
    {
      if (v37) {
        id v22 = (id)sub_1000B45E0();
      }
      else {
        id v22 = *(id *)(v17 + 8 * v19 + 32);
      }
      uint64_t v23 = v22;
      id v24 = [v22 uniqueIdentifier];
      uint64_t v25 = v40;
      sub_1000B2F50();

      uint64_t v26 = *v20;
      (*v20)(v7, v25, v8);
      (*v36)(v7, 0, 1, v8);

      if ((*v35)(v7, 1, v8) == 1)
      {
        sub_100017B5C((uint64_t)v7, &qword_1000D5008);
      }
      else
      {
        uint64_t v27 = v33;
        v26(v33, v7, v8);
        v26(v39, v27, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = (char *)sub_1000753BC(0, *((void *)v21 + 2) + 1, 1, (unint64_t)v21);
        }
        unint64_t v29 = *((void *)v21 + 2);
        unint64_t v28 = *((void *)v21 + 3);
        if (v29 >= v28 >> 1) {
          uint64_t v21 = (char *)sub_1000753BC(v28 > 1, v29 + 1, 1, (unint64_t)v21);
        }
        *((void *)v21 + 2) = v29 + 1;
        v26(&v21[((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v29], v39, v8);
      }
      ++v19;
      unint64_t v17 = v38;
    }
    while (v18 != v19);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_100010B0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000B2F60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void (*)(uint64_t, char *, uint64_t))((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100004210(&qword_1000D5040);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B33B0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008148(0, &qword_1000D4FD8);
  if (sub_1000B4320())
  {
    sub_1000B4260();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      sub_10000FE5C(a1, (uint64_t)v14, a2);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    sub_100017B5C((uint64_t)v10, &qword_1000D5040);
  }
  id v15 = [a1 hf_primaryService];
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = [a1 uniqueIdentifier];
    sub_1000B2F50();

    id v18 = [a1 name];
    uint64_t v19 = sub_1000B4010();
    uint64_t v21 = v20;

    sub_10001182C(v16, v7, v19, v21, 0, 255, a2);
    swift_bridgeObjectRelease();
    (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v5 + 8))(v7, v4);
    uint64_t v22 = type metadata accessor for WidgetTileInfo();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 0, 1, v22);
  }
  else
  {
    uint64_t v24 = type metadata accessor for WidgetTileInfo();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 1, 1, v24);
  }
}

void sub_100010E60(id *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v84 = a8;
  uint64_t v89 = a7;
  uint64_t v80 = a6;
  uint64_t v91 = a5;
  id v79 = a4;
  uint64_t v86 = a3;
  id v98 = a2;
  uint64_t v9 = type metadata accessor for WidgetTileInfo();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v83 = (uint64_t)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v82 = (uint64_t)&v78 - v13;
  __chkstk_darwin(v12);
  uint64_t v81 = (uint64_t)&v78 - v14;
  uint64_t v15 = sub_1000B31A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v78 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v85 = (char *)&v78 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v87 = (char *)&v78 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v97 = (char *)&v78 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v78 - v26;
  __chkstk_darwin(v25);
  unint64_t v29 = (char *)&v78 - v28;
  uint64_t v30 = sub_1000B2F60();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (void (*)(uint64_t, char *, uint64_t))((char *)&v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v34 = *a1;
  id v35 = [*a1 uniqueIdentifier];
  sub_1000B2F50();

  uint64_t v101 = v33;
  uint64_t v36 = v106;
  BOOL v88 = sub_100034BAC((uint64_t (*)(char *))sub_100017FE8, (uint64_t)v100, (uint64_t)v98);
  uint64_t v94 = v30;
  uint64_t v95 = v36;
  unint64_t v37 = *(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(v31 + 8);
  unint64_t v99 = v33;
  int v96 = v37;
  v37(v33, v30);
  id v98 = v34;
  sub_1000B43B0();
  uint64_t v106 = v16;
  uint64_t v92 = *(void (**)(char *, void, uint64_t))(v16 + 104);
  uint64_t v90 = v16 + 104;
  v92(v27, enum case for ServiceKind.valve(_:), v15);
  sub_100017A1C((unint64_t *)&qword_1000D5068, (void (*)(uint64_t))&type metadata accessor for ServiceKind);
  sub_1000B40C0();
  sub_1000B40C0();
  uint64_t v93 = v31 + 8;
  if (v104 == v102 && v105 == v103) {
    char v38 = 1;
  }
  else {
    char v38 = sub_1000B4830();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v106 + 8;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v106 + 8);
  v40(v27, v15);
  uint64_t v106 = v39;
  v40(v29, v15);
  if (v38)
  {
    id v41 = [v79 uniqueIdentifier];
    uint64_t v42 = v99;
    sub_1000B2F50();

    __chkstk_darwin(v43);
    *(&v78 - 2) = (char *)v42;
    uint64_t v44 = v95;
    LODWORD(v86) = sub_100034BAC((uint64_t (*)(char *))sub_100017FE8, (uint64_t)(&v78 - 4), v86);
    uint64_t v95 = v44;
    id v45 = v96;
    v96(v42, v94);
  }
  else
  {
    LODWORD(v86) = 0;
    uint64_t v42 = v99;
    id v45 = v96;
  }
  unint64_t v46 = v87;
  sub_1000B43B0();
  v92(v46, enum case for ServiceKind.lockMechanism(_:), v15);
  sub_1000B40C0();
  sub_1000B40C0();
  if (v104 == v102 && v105 == v103)
  {
    swift_bridgeObjectRelease_n();
    char v47 = 1;
    id v48 = v46;
    uint64_t v49 = v97;
    uint64_t v50 = v94;
    uint64_t v51 = &HomeManagerActor;
  }
  else
  {
    char v52 = sub_1000B4830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40(v46, v15);
    v40(v97, v15);
    if (v52)
    {
      char v47 = 1;
      uint64_t v50 = v94;
      id v45 = v96;
      uint64_t v51 = &HomeManagerActor;
      goto LABEL_19;
    }
    sub_1000B43B0();
    id v48 = v78;
    v92(v78, enum case for ServiceKind.lockManagement(_:), v15);
    sub_1000B40C0();
    sub_1000B40C0();
    if (v104 == v102 && v105 == v103) {
      char v47 = 1;
    }
    else {
      char v47 = sub_1000B4830();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v50 = v94;
    id v45 = v96;
    uint64_t v51 = &HomeManagerActor;
    uint64_t v49 = v85;
  }
  v40(v48, v15);
  v40(v49, v15);
  uint64_t v42 = v99;
LABEL_19:
  id v53 = v98;
  uint64_t v54 = v95;
  sub_10001708C(v91, v53);
  int v56 = v55;

  LODWORD(v98) = v56;
  if (v47)
  {
    uint64_t v106 = v54;
    uint64_t v57 = v50;
    BOOL v58 = 0;
    uint64_t v59 = v89;
    if (v89) {
      goto LABEL_21;
    }
  }
  else
  {
    id v76 = [v53 (SEL)v51[330].count];
    sub_1000B2F50();

    __chkstk_darwin(v77);
    *(&v78 - 2) = (char *)v42;
    BOOL v58 = sub_100034BAC((uint64_t (*)(char *))sub_100017FE8, (uint64_t)(&v78 - 4), v80);
    uint64_t v106 = v54;
    id v45 = v96;
    uint64_t v57 = v50;
    v96(v42, v50);
    uint64_t v59 = v89;
    if (v89)
    {
LABEL_21:
      swift_bridgeObjectRetain();
      id v60 = [v53 (SEL)v51[330].count];
      BOOL v61 = v58;
      char v62 = v45;
      id v63 = v60;
      sub_1000B2F50();

      __chkstk_darwin(v64);
      *(&v78 - 2) = (char *)v99;
      uint64_t v65 = v106;
      LODWORD(v63) = sub_100034BAC((uint64_t (*)(char *))sub_100017FE8, (uint64_t)(&v78 - 4), v59);
      uint64_t v106 = v65;
      uint64_t v42 = v99;
      v62(v99, v57);
      uint64_t v66 = v62;
      swift_bridgeObjectRelease();
      unsigned int v67 = v61 | ~(v63 & v98);
      uint64_t v51 = &HomeManagerActor;
      if ((v67 | v88 | v86)) {
        return;
      }
      goto LABEL_22;
    }
  }
  uint64_t v66 = v45;
  if ((v58 || (v98 & 1) == 0) | (v88 | v86) & 1) {
    return;
  }
LABEL_22:
  id v68 = [v53 (SEL)v51[330].count];
  sub_1000B2F50();

  id v69 = [v53 name];
  uint64_t v70 = sub_1000B4010();
  uint64_t v72 = v71;

  uint64_t v73 = v82;
  sub_10001182C(v53, v42, v70, v72, 0, 255, v82);
  swift_bridgeObjectRelease();
  v66(v42, v57);
  uint64_t v74 = v81;
  sub_10000809C(v73, v81);
  uint64_t v75 = v83;
  sub_100007FDC(v74, v83);
  sub_100004DF0(v73, v75);
  sub_100008040(v73);
  sub_100008040(v74);
}

uint64_t sub_10001182C@<X0>(void *a1@<X0>, void (*a2)(uint64_t, char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v112 = a6;
  unint64_t v111 = a5;
  v120 = a2;
  uint64_t v115 = a7;
  uint64_t v10 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v10 - 8);
  os_log_t v109 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1000B2F60();
  unint64_t v110 = *(void *)(v118 - 8);
  uint64_t v12 = __chkstk_darwin(v118);
  unint64_t v108 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v103 = (char *)&v103 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v123 = (char *)&v103 - v17;
  __chkstk_darwin(v16);
  id v121 = (char *)&v103 - v18;
  uint64_t v119 = sub_1000B33D0();
  uint64_t v125 = *(void *)(v119 - 8);
  uint64_t v19 = __chkstk_darwin(v119);
  id v124 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v122 = (char *)&v103 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v127 = (uint64_t)&v103 - v24;
  __chkstk_darwin(v23);
  uint64_t v126 = (uint64_t)&v103 - v25;
  uint64_t v26 = sub_100004210(&qword_1000D5080);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  unint64_t v29 = (char *)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v103 - v30;
  uint64_t v32 = sub_100004210(&qword_1000D5088);
  __chkstk_darwin(v32 - 8);
  id v34 = (char *)&v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000B31A0();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  char v38 = (char *)&v103 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v39 = [a1 associatedServiceType];
  uint64_t v116 = a3;
  uint64_t v117 = a4;
  uint64_t v113 = v36;
  uint64_t v114 = v35;
  if (v39)
  {
    uint64_t v40 = v39;
    sub_1000B4010();

    sub_1000B4060();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v34, v35);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v34, 1, 1, v35);
  }
  sub_1000B43B0();
  sub_100017B5C((uint64_t)v34, &qword_1000D5088);
LABEL_6:
  unint64_t v41 = v110;
  uint64_t v42 = v118;
  sub_1000B43D0();
  if (v43)
  {
    sub_1000B3140();
    uint64_t v44 = sub_1000B3150();
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v31, 1, v44) != 1)
    {
      uint64_t v107 = sub_1000B3130();
      uint64_t v106 = v46;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v44);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v47 = sub_1000B3150();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v31, 1, 1, v47);
  }
  sub_100017B5C((uint64_t)v31, &qword_1000D5080);
  uint64_t v107 = sub_1000B3190();
  uint64_t v106 = v48;
LABEL_11:
  uint64_t v49 = v119;
  sub_1000B43D0();
  if (!v50)
  {
LABEL_14:
    uint64_t v105 = sub_1000B3170();
    uint64_t v104 = v53;
    goto LABEL_16;
  }
  sub_1000B3140();
  uint64_t v51 = sub_1000B3150();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v29, 1, v51) == 1)
  {
    sub_100017B5C((uint64_t)v29, &qword_1000D5080);
    goto LABEL_14;
  }
  uint64_t v105 = sub_1000B3120();
  uint64_t v104 = v54;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v51);
LABEL_16:
  sub_1000123CC((void (*)(void))&IconSymbol.offStateSymbolRenderingMode.getter, (uint64_t (*)(uint64_t))&ServiceKind.iconSymbolDeactivatedRenderingMode.getter, v126);
  sub_1000123CC((void (*)(void))&IconSymbol.onStateSymbolRenderingMode.getter, (uint64_t (*)(uint64_t))&ServiceKind.iconSymbolActivatedRenderingMode.getter, v127);
  uint64_t v55 = sub_1000B3160();
  int v56 = *(void (**)(char *, void, uint64_t))(v41 + 16);
  v56(v121, v120, v42);
  swift_retain();
  id v57 = [a1 accessory];
  uint64_t v119 = v55;
  if (v57)
  {
    BOOL v58 = v57;
    id v59 = [v57 uniqueIdentifier];

    id v60 = v103;
    sub_1000B2F50();

    uint64_t v61 = (uint64_t)v109;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v109, v60, v42);
    uint64_t v62 = 0;
  }
  else
  {
    uint64_t v62 = 1;
    uint64_t v61 = (uint64_t)v109;
  }
  id v63 = v108;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v61, v62, 1, v42);
  v56(v63, v120, v42);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v61, 1, v42) == 1)
  {
    uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v64(v123, v63, v42);
    sub_100017B5C(v61, &qword_1000D5008);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v63, v42);
    uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v64(v123, (char *)v61, v42);
  }
  id v65 = [a1 accessory];
  if (v65 && (uint64_t v66 = v65, v67 = [v65 room], v66, v67))
  {
    id v68 = [v67 name];

    uint64_t v69 = sub_1000B4010();
    unint64_t v108 = v70;
    os_log_t v109 = (char *)v69;
  }
  else
  {
    unint64_t v108 = 0;
    os_log_t v109 = 0;
  }
  uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v125 + 16);
  v71(v122, v126, v49);
  v71(v124, v127, v49);
  id v72 = [a1 accessory];
  v120 = (void (*)(uint64_t, char *, uint64_t))v64;
  if (v72)
  {
    uint64_t v73 = v72;
    LODWORD(v103) = [v72 isReachable];
  }
  else
  {
    LODWORD(v103) = 0;
  }
  char v74 = v112;
  uint64_t v75 = v111;
  id v76 = v111;
  int v77 = v112;
  if ((_BYTE)v112 == 0xFF)
  {
    id v78 = a1;
    int v77 = 0;
    id v76 = a1;
  }
  unint64_t v111 = v76;
  int v112 = v77;
  sub_100017BB8(v75, v74);
  unint64_t v110 = sub_100019CE4((uint64_t)_swiftEmptyArrayStorage);
  swift_release();
  uint64_t v79 = v125;
  uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v125 + 8);
  v80(v127, v49);
  v80(v126, v49);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v38, v114);
  uint64_t v81 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v82 = v115;
  uint64_t v83 = (char **)(v115 + v81[7]);
  uint64_t v84 = v115 + v81[17];
  uint64_t v85 = sub_1000B32E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v84, 1, 1, v85);
  uint64_t v86 = v81[18];
  uint64_t v87 = v82 + v81[19];
  uint64_t v88 = v81[20];
  uint64_t v126 = v81[21];
  uint64_t v127 = v86;
  uint64_t v89 = (void *)(v82 + v88);
  uint64_t v90 = v120;
  uint64_t v91 = v118;
  v120(v82, v121, v118);
  v90(v82 + v81[5], v123, v91);
  uint64_t v92 = (void *)(v82 + v81[6]);
  uint64_t v93 = v117;
  *uint64_t v92 = v116;
  v92[1] = v93;
  uint64_t v95 = v107;
  uint64_t v94 = v108;
  char *v83 = v109;
  v83[1] = v94;
  int v96 = (uint64_t *)(v82 + v81[8]);
  uint64_t v97 = v106;
  *int v96 = v95;
  v96[1] = v97;
  id v98 = (uint64_t *)(v82 + v81[9]);
  uint64_t v99 = v104;
  *id v98 = v105;
  v98[1] = v99;
  id v100 = *(void (**)(uint64_t, char *, uint64_t))(v79 + 32);
  v100(v82 + v81[10], v122, v49);
  v100(v82 + v81[11], v124, v49);
  *(void *)(v82 + v81[12]) = v119;
  *(unsigned char *)(v82 + v81[13]) = (_BYTE)v103;
  uint64_t v101 = v82 + v81[14];
  *(void *)uint64_t v101 = v111;
  *(unsigned char *)(v101 + 8) = v112;
  *(void *)(v82 + v81[15]) = v110;
  *(unsigned char *)(v82 + v81[16]) = 0;
  *(unsigned char *)(v82 + v127) = 2;
  *(void *)uint64_t v87 = 0;
  *(unsigned char *)(v87 + 8) = 1;
  *uint64_t v89 = 0;
  v89[1] = 0;
  *(unsigned char *)(v82 + v126) = 2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000123CC@<X0>(void (*a1)(void)@<X2>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004210(&qword_1000D5080);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B33D0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B43D0();
  if (!v14) {
    return a2(v13);
  }
  uint64_t v15 = a2;
  uint64_t v16 = a1;
  sub_1000B3140();
  uint64_t v17 = sub_1000B3150();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) == 1)
  {
    uint64_t v13 = sub_100017B5C((uint64_t)v8, &qword_1000D5080);
    a2 = v15;
    return a2(v13);
  }
  v16();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v12, v9);
}

void *sub_1000125C4()
{
  return sub_1000129FC((uint64_t (*)(void))&type metadata accessor for CharacteristicKind, &qword_1000D4FD0);
}

void *sub_1000125E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WidgetTileInfo();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004210(&qword_1000D4FA8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1000B4580();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    id result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  id result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_100007FDC(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    id result = (void *)sub_10000809C((uint64_t)v5, *(void *)(v8 + 48) + v19);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_100012820()
{
  return sub_100012838(&qword_1000D4FE0);
}

id sub_10001282C()
{
  return sub_100012838(&qword_1000D4FF0);
}

id sub_100012838(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100004210(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1000B4580();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000129DC()
{
  return sub_1000129FC((uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t *)&unk_1000D5B20);
}

void *sub_1000129FC(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v25 - v7;
  sub_100004210(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1000B4580();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100012CAC(uint64_t a1)
{
  uint64_t v3 = sub_100004210(&qword_1000D5010);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WidgetTileInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v25 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a1 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v14 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v14 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v14 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v14 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    sub_100007FDC(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v21, (uint64_t)v13);
    sub_10000809C((uint64_t)v13, (uint64_t)v10);
    sub_100014114((uint64_t)v10, (uint64_t)v5);
    sub_100017B5C((uint64_t)v5, &qword_1000D5010);
    uint64_t result = sub_100008040((uint64_t)v10);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v18) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v14 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100012F28(uint64_t a1)
{
  uint64_t v3 = sub_1000B2F60();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004210(&qword_1000D5008);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v24 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v27 = v4 + 16;
  int64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int64_t v25 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v26 = v4 + 48;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v17) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(void *)(v29 + 48) + *(void *)(v4 + 72) * i, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_100014338((uint64_t)v6, (uint64_t)v10);
    sub_100017B5C((uint64_t)v10, &qword_1000D5008);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v25) {
        goto LABEL_25;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v25) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v25) {
            goto LABEL_25;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*v28)(v13, 1, 1, v3);
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1000132B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5010);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WidgetTileInfo();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v14 = (char *)&v49 - v13;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v51 = (int *)v11;
  uint64_t v15 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = ~v15;
  uint64_t v18 = a1 + 56;
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v19 = -v15;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v17;
  uint64_t v56 = a1;
  uint64_t v57 = a1 + 56;
  uint64_t v58 = v16;
  int64_t v59 = 0;
  unint64_t v60 = v20 & v17;
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t, int *))(v12 + 56);
  uint64_t v54 = v12;
  uint64_t v52 = (unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  uint64_t v22 = a2 + 56;
  swift_bridgeObjectRetain();
  int64_t v23 = 0;
LABEL_7:
  unint64_t v49 = v21;
  int64_t v50 = v23;
  if (v21)
  {
    uint64_t v55 = (v21 - 1) & v21;
    unint64_t v24 = __clz(__rbit64(v21)) | (v23 << 6);
    int64_t v25 = v23;
LABEL_9:
    sub_100007FDC(*(void *)(a1 + 48) + *(void *)(v54 + 72) * v24, (uint64_t)v6);
    uint64_t v26 = 0;
    goto LABEL_29;
  }
  int64_t v25 = v23 + 1;
  if (__OFADD__(v23, 1)) {
    __break(1u);
  }
  int64_t v27 = (unint64_t)(v16 + 64) >> 6;
  if (v25 >= v27) {
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v18 + 8 * v25);
  if (v28)
  {
LABEL_13:
    uint64_t v55 = (v28 - 1) & v28;
    unint64_t v24 = __clz(__rbit64(v28)) + (v25 << 6);
    goto LABEL_9;
  }
  v23 += 2;
  if (v25 + 1 >= v27) {
    goto LABEL_45;
  }
  unint64_t v28 = *(void *)(v18 + 8 * v23);
  if (v28)
  {
LABEL_16:
    int64_t v25 = v23;
    goto LABEL_13;
  }
  if (v25 + 2 >= v27)
  {
LABEL_28:
    uint64_t v55 = 0;
    uint64_t v26 = 1;
    int64_t v25 = v23;
    goto LABEL_29;
  }
  unint64_t v28 = *(void *)(v18 + 8 * (v25 + 2));
  if (v28)
  {
    v25 += 2;
    goto LABEL_13;
  }
  int64_t v23 = v25 + 3;
  if (v25 + 3 < v27)
  {
    unint64_t v28 = *(void *)(v18 + 8 * v23);
    if (v28) {
      goto LABEL_16;
    }
    v25 += 4;
    if (v25 < v27)
    {
      unint64_t v28 = *(void *)(v18 + 8 * v25);
      if (v28) {
        goto LABEL_13;
      }
      int64_t v25 = v27 - 1;
      uint64_t v29 = v50 + 6;
      while (v27 != v29)
      {
        unint64_t v28 = *(void *)(v18 + 8 * v29++);
        if (v28)
        {
          int64_t v25 = v29 - 1;
          goto LABEL_13;
        }
      }
LABEL_45:
      uint64_t v55 = 0;
      uint64_t v26 = 1;
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  uint64_t v55 = 0;
  uint64_t v26 = 1;
  v25 += 2;
LABEL_29:
  uint64_t v30 = v51;
  (*v53)(v6, v26, 1, v51);
  uint64_t v56 = a1;
  uint64_t v57 = v18;
  uint64_t v58 = v16;
  int64_t v59 = v25;
  unint64_t v60 = v55;
  if ((*v52)(v6, 1, v30) == 1)
  {
    sub_100017A14();
    sub_100017B5C((uint64_t)v6, &qword_1000D5010);
  }
  else
  {
    sub_10000809C((uint64_t)v6, (uint64_t)v14);
    sub_1000B48C0();
    sub_1000B2F60();
    sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1000B3F60();
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    if (*(void *)&v14[v30[7] + 8])
    {
      sub_1000B48E0(1u);
      swift_bridgeObjectRetain();
      sub_1000B4070();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000B48E0(0);
    }
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1000B3C40();
    swift_release();
    sub_1000B48E0(v14[v30[13]]);
    uint64_t v31 = &v14[v30[14]];
    uint64_t v32 = *(void **)v31;
    switch(v31[8])
    {
      case 1:
        Swift::UInt v33 = 2;
        goto LABEL_39;
      case 2:
        Swift::UInt v33 = 3;
        goto LABEL_39;
      case 3:
        Swift::UInt v33 = 4;
        goto LABEL_39;
      case 4:
        sub_1000B48D0(0);
        goto LABEL_40;
      default:
        Swift::UInt v33 = 1;
LABEL_39:
        sub_1000B48D0(v33);
        id v34 = v32;
        sub_1000B43A0();

LABEL_40:
        Swift::Int v35 = sub_1000B48F0();
        uint64_t v36 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v37 = v35 & ~v36;
        if (((*(void *)(v22 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v38 = ~v36;
        uint64_t v39 = *(void *)(v54 + 72);
        break;
    }
    while (1)
    {
      sub_100007FDC(*(void *)(a2 + 48) + v39 * v37, (uint64_t)v10);
      char v40 = sub_10001F774((uint64_t)v10, (uint64_t)v14);
      sub_100008040((uint64_t)v10);
      if (v40) {
        break;
      }
      unint64_t v37 = (v37 + 1) & v38;
      if (((*(void *)(v22 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
      {
LABEL_6:
        sub_100008040((uint64_t)v14);
        int64_t v23 = v59;
        unint64_t v21 = v60;
        a1 = v56;
        uint64_t v18 = v57;
        uint64_t v16 = v58;
        goto LABEL_7;
      }
    }
    uint64_t isStackAllocationSafe = sub_100008040((uint64_t)v14);
    char v42 = *(unsigned char *)(a2 + 32);
    unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
    size_t v44 = 8 * v43;
    if ((v42 & 0x3Fu) <= 0xD
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v44);
      uint64_t v45 = sub_100014634((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, a2, v37, &v56);
      swift_release();
      sub_100017A14();
      return v45;
    }
    else
    {
      uint64_t v46 = (void *)swift_slowAlloc();
      memcpy(v46, (const void *)(a2 + 56), v44);
      uint64_t v47 = sub_100014634((unint64_t *)v46, v43, a2, v37, &v56);
      swift_release();
      sub_100017A14();
      swift_slowDealloc();
      return v47;
    }
  }
  return (void *)a2;
}

void *sub_100013A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B2F60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  uint64_t v58 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  int64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_100017A14();
      sub_100017B5C(v26, &qword_1000D5008);
      return (void *)v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v32 = sub_1000B3F50();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    char v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_100017A1C(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v39 = sub_1000B3F90();
    char v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    uint64_t v45 = sub_100014C68((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_100017A14();
    return v45;
  }
  else
  {
    uint64_t v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_100014C68((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_100017A14();
    swift_slowDealloc();
    return v48;
  }
}

uint64_t sub_100014114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for WidgetTileInfo();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v23 = v2;
  uint64_t v9 = *v2;
  sub_1000B48C0();
  swift_bridgeObjectRetain();
  sub_10001E150();
  Swift::Int v10 = sub_1000B48F0();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v21 = v5;
    uint64_t v22 = a2;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v6 + 72);
    while (1)
    {
      sub_100007FDC(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8);
      char v15 = sub_10001F774((uint64_t)v8, a1);
      sub_100008040((uint64_t)v8);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        uint64_t v5 = v21;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    uint64_t v24 = *v17;
    *uint64_t v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000125E4();
      uint64_t v19 = v24;
    }
    a2 = v22;
    sub_10000809C(*(void *)(v19 + 48) + v14 * v12, v22);
    sub_100015C40(v12);
    *uint64_t v17 = v24;
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v5 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_100014338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1000B3F50();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_100017A1C(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v19 = sub_1000B3F90();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000129FC((uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t *)&unk_1000D5B20);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1000160B0(v12);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

void *sub_100014634(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v51 = a2;
  uint64_t v9 = sub_100004210(&qword_1000D5010);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for WidgetTileInfo();
  uint64_t v12 = __chkstk_darwin(v57);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v19 = *(unint64_t *)((char *)a1 + v18);
  uint64_t v53 = a1;
  uint64_t v54 = a5;
  *(unint64_t *)((char *)a1 + v18) = v19 & ((-1 << a4) - 1);
  uint64_t v20 = v17 - 1;
  uint64_t v58 = v21;
  uint64_t v55 = (unsigned int (**)(char *, uint64_t, int *))(v21 + 48);
  uint64_t v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v22 = a3 + 56;
LABEL_2:
  uint64_t v52 = v20;
  while (1)
  {
LABEL_4:
    uint64_t v24 = *a5;
    uint64_t v23 = a5[1];
    uint64_t v25 = a5[2];
    int64_t v26 = a5[3];
    unint64_t v27 = a5[4];
    uint64_t v61 = v23;
    uint64_t v60 = v25;
    if (v27)
    {
      uint64_t v59 = (v27 - 1) & v27;
      unint64_t v28 = __clz(__rbit64(v27)) | (v26 << 6);
      goto LABEL_6;
    }
    int64_t v32 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      JUMPOUT(0x100014C54);
    }
    int64_t v33 = (unint64_t)(v25 + 64) >> 6;
    if (v32 >= v33)
    {
      uint64_t v59 = 0;
      uint64_t v29 = 1;
      goto LABEL_7;
    }
    unint64_t v34 = *(void *)(v23 + 8 * v32);
    if (v34) {
      goto LABEL_13;
    }
    if (v26 + 2 >= v33) {
      goto LABEL_43;
    }
    unint64_t v34 = *(void *)(v23 + 8 * (v26 + 2));
    if (v34)
    {
      int64_t v32 = v26 + 2;
      goto LABEL_13;
    }
    if (v26 + 3 >= v33)
    {
      uint64_t v59 = 0;
      uint64_t v29 = 1;
      v26 += 2;
      goto LABEL_7;
    }
    unint64_t v34 = *(void *)(v23 + 8 * (v26 + 3));
    if (v34)
    {
      int64_t v32 = v26 + 3;
LABEL_13:
      uint64_t v59 = (v34 - 1) & v34;
      unint64_t v28 = __clz(__rbit64(v34)) + (v32 << 6);
      int64_t v26 = v32;
LABEL_6:
      sub_100007FDC(*(void *)(v24 + 48) + *(void *)(v58 + 72) * v28, (uint64_t)v11);
      uint64_t v29 = 0;
      goto LABEL_7;
    }
    int64_t v32 = v26 + 4;
    if (v26 + 4 < v33)
    {
      unint64_t v34 = *(void *)(v23 + 8 * v32);
      if (v34) {
        goto LABEL_13;
      }
      int64_t v32 = v33 - 1;
      int64_t v48 = v26 + 5;
      while (v33 != v48)
      {
        unint64_t v34 = *(void *)(v23 + 8 * v48++);
        if (v34)
        {
          int64_t v32 = v48 - 1;
          goto LABEL_13;
        }
      }
LABEL_43:
      uint64_t v59 = 0;
      uint64_t v29 = 1;
      int64_t v26 = v32;
      goto LABEL_7;
    }
    uint64_t v59 = 0;
    uint64_t v29 = 1;
    v26 += 3;
LABEL_7:
    uint64_t v30 = (int *)v57;
    (*v56)(v11, v29, 1, v57);
    uint64_t v31 = v61;
    *a5 = v24;
    a5[1] = v31;
    a5[2] = v60;
    a5[3] = v26;
    a5[4] = v59;
    if ((*v55)(v11, 1, v30) == 1) {
      break;
    }
    sub_10000809C((uint64_t)v11, (uint64_t)v16);
    sub_1000B48C0();
    sub_1000B2F60();
    sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1000B3F60();
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    if (*(void *)&v16[v30[7] + 8])
    {
      sub_1000B48E0(1u);
      swift_bridgeObjectRetain();
      sub_1000B4070();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000B48E0(0);
    }
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1000B3C40();
    swift_release();
    sub_1000B48E0(v16[v30[13]]);
    uint64_t v35 = &v16[v30[14]];
    uint64_t v36 = *(void **)v35;
    switch(v35[8])
    {
      case 1:
        Swift::UInt v37 = 2;
        goto LABEL_20;
      case 2:
        Swift::UInt v37 = 3;
        goto LABEL_20;
      case 3:
        Swift::UInt v37 = 4;
        goto LABEL_20;
      case 4:
        sub_1000B48D0(0);
        goto LABEL_21;
      default:
        Swift::UInt v37 = 1;
LABEL_20:
        sub_1000B48D0(v37);
        id v38 = v36;
        sub_1000B43A0();

LABEL_21:
        char v39 = v11;
        Swift::Int v40 = sub_1000B48F0();
        uint64_t v41 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v42 = v40 & ~v41;
        if (((*(void *)(v22 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
          goto LABEL_3;
        }
        uint64_t v43 = ~v41;
        uint64_t v44 = *(void *)(v58 + 72);
        break;
    }
    while (1)
    {
      sub_100007FDC(*(void *)(a3 + 48) + v44 * v42, (uint64_t)v14);
      char v45 = sub_10001F774((uint64_t)v14, (uint64_t)v16);
      sub_100008040((uint64_t)v14);
      if (v45) {
        break;
      }
      unint64_t v42 = (v42 + 1) & v43;
      if (((*(void *)(v22 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
      {
LABEL_3:
        sub_100008040((uint64_t)v16);
        uint64_t v11 = v39;
        a5 = v54;
        goto LABEL_4;
      }
    }
    sub_100008040((uint64_t)v16);
    uint64_t v46 = (v42 >> 3) & 0x1FFFFFFFFFFFFFF8;
    a5 = v54;
    uint64_t v47 = *(unint64_t *)((char *)v53 + v46);
    *(unint64_t *)((char *)v53 + v46) = v47 & ~(1 << v42);
    uint64_t v11 = v39;
    if ((v47 & (1 << v42)) != 0)
    {
      uint64_t v20 = v52 - 1;
      if (__OFSUB__(v52, 1)) {
        goto LABEL_51;
      }
      if (v52 == 1) {
        return &_swiftEmptySetSingleton;
      }
      goto LABEL_2;
    }
  }
  sub_100017B5C((uint64_t)v11, &qword_1000D5010);
  swift_retain();
  return sub_1000151C4(v53, v51, v52, a3);
}

void *sub_100014C68(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v49 = a2;
  uint64_t v9 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000B2F60();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v13);
  uint64_t v63 = (char *)&v48 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v51 = a1;
  uint64_t v52 = v21;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v61 = v21 + 16;
  uint64_t v62 = a3;
  uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v54 = a5;
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v60 = a3 + 56;
  uint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v53 = v11;
  while (2)
  {
    uint64_t v50 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v28 = a5[2];
        int64_t v29 = a5[3];
        unint64_t v30 = a5[4];
        uint64_t v59 = v28;
        if (v30)
        {
          uint64_t v58 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v29 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v11, *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31, v12);
          uint64_t v32 = 0;
          goto LABEL_8;
        }
        int64_t v41 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        int64_t v42 = (unint64_t)(v28 + 64) >> 6;
        if (v41 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * v41);
        if (v43) {
          goto LABEL_17;
        }
        if (v29 + 2 >= v42) {
          goto LABEL_34;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 2));
        if (v43)
        {
          int64_t v41 = v29 + 2;
LABEL_17:
          uint64_t v58 = (v43 - 1) & v43;
          unint64_t v31 = __clz(__rbit64(v43)) + (v41 << 6);
          int64_t v29 = v41;
          goto LABEL_7;
        }
        if (v29 + 3 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          v29 += 2;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 3));
        if (v43)
        {
          int64_t v41 = v29 + 3;
          goto LABEL_17;
        }
        int64_t v41 = v29 + 4;
        if (v29 + 4 < v42)
        {
          unint64_t v43 = *(void *)(v27 + 8 * v41);
          if (v43) {
            goto LABEL_17;
          }
          int64_t v41 = v42 - 1;
          int64_t v46 = v29 + 5;
          while (v42 != v46)
          {
            unint64_t v43 = *(void *)(v27 + 8 * v46++);
            if (v43)
            {
              int64_t v41 = v46 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          int64_t v29 = v41;
          goto LABEL_8;
        }
        uint64_t v58 = 0;
        uint64_t v32 = 1;
        v29 += 3;
LABEL_8:
        (*v57)(v11, v32, 1, v12);
        *a5 = v26;
        a5[1] = v27;
        a5[2] = v59;
        a5[3] = v29;
        a5[4] = v58;
        if ((*v56)(v11, 1, v12) == 1)
        {
          sub_100017B5C((uint64_t)v11, &qword_1000D5008);
          uint64_t v47 = v62;
          swift_retain();
          return (void *)sub_1000158B4(v51, v49, v50, v47);
        }
        (*v55)(v63, v11, v12);
        uint64_t v33 = v62;
        sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v34 = sub_1000B3F50();
        uint64_t v35 = -1 << *(unsigned char *)(v33 + 32);
        unint64_t v36 = v34 & ~v35;
        if ((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36)) {
          break;
        }
        uint64_t v25 = *v24;
LABEL_4:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v25)(v63, v12);
      }
      uint64_t v59 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v37 = ~v35;
      uint64_t v38 = *(void *)(v22 + 72);
      char v39 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
      while (1)
      {
        v39(v15, *(void *)(v62 + 48) + v38 * v36, v12);
        sub_100017A1C(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v40 = sub_1000B3F90();
        uint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v40) {
          break;
        }
        unint64_t v36 = (v36 + 1) & v37;
        if (((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        {
          uint64_t v11 = v53;
          a5 = v54;
          uint64_t v22 = v52;
          goto LABEL_4;
        }
      }
      uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v25)(v63, v12);
      uint64_t v44 = (v36 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v22 = v52;
      uint64_t v45 = *(unint64_t *)((char *)v51 + v44);
      *(unint64_t *)((char *)v51 + v44) = v45 & ~(1 << v36);
      uint64_t v11 = v53;
      a5 = v54;
    }
    while ((v45 & (1 << v36)) == 0);
    uint64_t v23 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v50 != 1) {
      continue;
    }
    return &_swiftEmptySetSingleton;
  }
}

void *sub_1000151C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v29 = a1;
  uint64_t v7 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v32 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    if (*(void *)(a4 + 16) != a3)
    {
      sub_100004210(&qword_1000D4FA8);
      uint64_t v11 = sub_1000B45B0();
      uint64_t v10 = v11;
      uint64_t v28 = a2;
      if (a2 < 1) {
        unint64_t v12 = 0;
      }
      else {
        unint64_t v12 = *v29;
      }
      uint64_t v13 = 0;
      uint64_t v30 = a4;
      uint64_t v31 = v11 + 56;
      while (1)
      {
        if (v12)
        {
          unint64_t v14 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
          unint64_t v15 = v14 | (v13 << 6);
        }
        else
        {
          uint64_t v16 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_41;
          }
          if (v16 >= v28)
          {
LABEL_38:
            swift_release();
            return (void *)v10;
          }
          unint64_t v17 = v29[v16];
          ++v13;
          if (!v17)
          {
            uint64_t v13 = v16 + 1;
            if (v16 + 1 >= v28) {
              goto LABEL_38;
            }
            unint64_t v17 = v29[v13];
            if (!v17)
            {
              uint64_t v13 = v16 + 2;
              if (v16 + 2 >= v28) {
                goto LABEL_38;
              }
              unint64_t v17 = v29[v13];
              if (!v17)
              {
                uint64_t v18 = v16 + 3;
                if (v18 >= v28) {
                  goto LABEL_38;
                }
                unint64_t v17 = v29[v18];
                if (!v17)
                {
                  while (1)
                  {
                    uint64_t v13 = v18 + 1;
                    if (__OFADD__(v18, 1)) {
                      goto LABEL_42;
                    }
                    if (v13 >= v28) {
                      goto LABEL_38;
                    }
                    unint64_t v17 = v29[v13];
                    ++v18;
                    if (v17) {
                      goto LABEL_24;
                    }
                  }
                }
                uint64_t v13 = v18;
              }
            }
          }
LABEL_24:
          unint64_t v12 = (v17 - 1) & v17;
          unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
        }
        uint64_t v19 = *(void *)(v32 + 72);
        sub_100007FDC(*(void *)(a4 + 48) + v19 * v15, (uint64_t)v9);
        sub_1000B48C0();
        sub_1000B2F60();
        sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
        sub_1000B3F60();
        swift_bridgeObjectRetain();
        sub_1000B4070();
        swift_bridgeObjectRelease();
        if (*(void *)&v9[v7[7] + 8])
        {
          sub_1000B48E0(1u);
          swift_bridgeObjectRetain();
          sub_1000B4070();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1000B48E0(0);
        }
        swift_bridgeObjectRetain();
        sub_1000B4070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1000B4070();
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1000B3C40();
        swift_release();
        sub_1000B48E0(v9[v7[13]]);
        uint64_t v20 = &v9[v7[14]];
        uint64_t v21 = *(void **)v20;
        switch(v20[8])
        {
          case 1:
            Swift::UInt v22 = 2;
            goto LABEL_33;
          case 2:
            Swift::UInt v22 = 3;
            goto LABEL_33;
          case 3:
            Swift::UInt v22 = 4;
            goto LABEL_33;
          case 4:
            sub_1000B48D0(0);
            goto LABEL_34;
          default:
            Swift::UInt v22 = 1;
LABEL_33:
            sub_1000B48D0(v22);
            id v23 = v21;
            sub_1000B43A0();

LABEL_34:
            sub_1000B48F0();
            uint64_t v24 = v31;
            unint64_t v25 = sub_1000B4490();
            *(void *)(v24 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
            sub_10000809C((uint64_t)v9, *(void *)(v10 + 48) + v25 * v19);
            ++*(void *)(v10 + 16);
            if (__OFSUB__(a3--, 1))
            {
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              __break(1u);
              JUMPOUT(0x100015640);
            }
            a4 = v30;
            if (!a3) {
              goto LABEL_38;
            }
            break;
        }
      }
    }
    return (void *)a4;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

uint64_t sub_100015654(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100004210(&qword_1000D4FB8);
  uint64_t result = sub_1000B45B0();
  uint64_t v9 = (void *)result;
  int64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1000B4380(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000158B4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1000B2F60();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_100004210((uint64_t *)&unk_1000D5B20);
  uint64_t result = sub_1000B45B0();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1000B3F50();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100015C40(unint64_t a1)
{
  uint64_t v3 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v4 = *((void *)v3 - 1);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v33 = result;
    uint64_t v34 = v8;
    swift_retain();
    uint64_t v12 = sub_1000B4480();
    uint64_t v13 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v14 = (v12 + 1) & v11;
      uint64_t v15 = *(void *)(v4 + 72);
      uint64_t v16 = v33;
      uint64_t v32 = v11;
      while (1)
      {
        int64_t v17 = v15 * v10;
        sub_100007FDC(*(void *)(v16 + 48) + v15 * v10, (uint64_t)v6);
        sub_1000B48C0();
        sub_1000B2F60();
        sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
        sub_1000B3F60();
        swift_bridgeObjectRetain();
        sub_1000B4070();
        swift_bridgeObjectRelease();
        if (*(void *)&v6[v3[7] + 8])
        {
          sub_1000B48E0(1u);
          swift_bridgeObjectRetain();
          sub_1000B4070();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1000B48E0(0);
        }
        swift_bridgeObjectRetain();
        sub_1000B4070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1000B4070();
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1000B3C40();
        swift_release();
        sub_1000B48E0(v6[v3[13]]);
        unint64_t v18 = &v6[v3[14]];
        uint64_t v19 = *(void **)v18;
        switch(v18[8])
        {
          case 1:
            Swift::UInt v20 = 2;
            goto LABEL_15;
          case 2:
            Swift::UInt v20 = 3;
            goto LABEL_15;
          case 3:
            Swift::UInt v20 = 4;
            goto LABEL_15;
          case 4:
            sub_1000B48D0(0);
            goto LABEL_16;
          default:
            Swift::UInt v20 = 1;
LABEL_15:
            sub_1000B48D0(v20);
            id v21 = v19;
            sub_1000B43A0();

LABEL_16:
            Swift::Int v22 = sub_1000B48F0();
            sub_100008040((uint64_t)v6);
            uint64_t v23 = v32;
            unint64_t v24 = v22 & v32;
            if ((uint64_t)a1 >= (uint64_t)v14)
            {
              uint64_t v16 = v33;
              if (v24 < v14) {
                goto LABEL_6;
              }
LABEL_20:
              if ((uint64_t)a1 < (uint64_t)v24) {
                goto LABEL_6;
              }
              goto LABEL_21;
            }
            uint64_t v16 = v33;
            if (v24 < v14) {
              goto LABEL_20;
            }
LABEL_21:
            unint64_t v25 = v15 * a1;
            if ((uint64_t)(v15 * a1) < v17 || *(void *)(v16 + 48) + v15 * a1 >= *(void *)(v16 + 48) + v17 + v15)
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_5:
              a1 = v10;
              goto LABEL_6;
            }
            a1 = v10;
            if (v25 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_5;
            }
LABEL_6:
            unint64_t v10 = (v10 + 1) & v23;
            uint64_t v13 = v34;
            if (((*(void *)(v34 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
              goto LABEL_27;
            }
            break;
        }
      }
    }
LABEL_27:
    *(void *)(v13 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
    JUMPOUT(0x10001609CLL);
  }
  *(void *)(v26 + 16) = v29;
  ++*(_DWORD *)(v26 + 36);
  return result;
}

uint64_t sub_1000160B0(int64_t a1)
{
  uint64_t v3 = sub_1000B2F60();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_1000B4480();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v21 = sub_1000B3F50();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_1000163CC(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_100016530((uint64_t)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_100016530((uint64_t)v7, v4, v2);
    swift_release();
    swift_slowDealloc();
  }
  return v6;
}

uint64_t sub_100016530(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (unint64_t *)result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    uint64_t result = [(id *)(*(void *)(a3 + 48) + 8 * v13) hf_isSensorService];
    if ((result & 1) == 0)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_100015654(v4, a2, v5, a3);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1000166CC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_10001676C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_100016850(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_1000B4510();
      sub_100008148(0, &qword_1000D5020);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (sub_1000B44D0() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1000B44E0();
  sub_100008148(0, &qword_1000D5020);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = sub_1000B4380(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = sub_1000B4390();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = sub_1000B4390();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  int64_t v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_100016AC8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100016B50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetTileInfo() - 8;
  uint64_t v3 = __chkstk_darwin(v2);
  char v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v3);
  id v9 = (char *)&v13 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v12 = *(void *)(v7 + 72);
    do
    {
      sub_100007FDC(v11, (uint64_t)v5);
      sub_100004DF0((uint64_t)v9, (uint64_t)v5);
      uint64_t result = sub_100008040((uint64_t)v9);
      v11 += v12;
      --v10;
    }
    while (v10);
  }
  return result;
}

void *sub_100016C5C(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B2F60();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v36 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int64_t v42 = (char *)v25 - v10;
  unint64_t v43 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_23:
    uint64_t v11 = sub_1000B46A0();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
LABEL_3:
      unint64_t v12 = 0;
      uint64_t v31 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v32 = a1 & 0xC000000000000001;
      unint64_t v27 = a1 + 32;
      uint64_t v28 = v11;
      uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      uint64_t v38 = v26 + 16;
      uint64_t v35 = (void (**)(char *, char *, uint64_t))(v26 + 32);
      char v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
      int64_t v41 = (void (**)(char *, uint64_t))(v26 + 8);
      _OWORD v25[2] = (v26 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      unint64_t v29 = a1;
      uint64_t v30 = a2;
      uint64_t v13 = v36;
      while (1)
      {
        if (v32)
        {
          id v15 = (id)sub_1000B45E0();
          BOOL v16 = __OFADD__(v12, 1);
          unint64_t v17 = v12 + 1;
          if (v16)
          {
LABEL_20:
            __break(1u);
            return v43;
          }
        }
        else
        {
          if (v12 >= *(void *)(v31 + 16))
          {
            __break(1u);
            goto LABEL_23;
          }
          id v15 = *(id *)(v27 + 8 * v12);
          BOOL v16 = __OFADD__(v12, 1);
          unint64_t v17 = v12 + 1;
          if (v16) {
            goto LABEL_20;
          }
        }
        id v33 = v15;
        unint64_t v34 = v17;
        id v18 = [v15 uniqueIdentifier];
        sub_1000B2F50();

        uint64_t v19 = *(void *)(a2 + 16);
        if (v19)
        {
          uint64_t v20 = a2 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
          uint64_t v39 = *(void *)(v26 + 72);
          uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
          swift_bridgeObjectRetain();
          while (1)
          {
            v21(v6, v20, v7);
            int64_t v14 = *v40;
            (*v40)(v6, 0, 1, v7);
            if ((*v37)(v6, 1, v7) == 1) {
              break;
            }
            (*v35)(v13, v6, v7);
            sub_100017A1C(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v22 = sub_1000B3F90();
            uint64_t v23 = *v41;
            (*v41)(v13, v7);
            if (v22)
            {
              a2 = v30;
              swift_bridgeObjectRelease();
              v23(v42, v7);
              sub_1000B4630();
              sub_1000B4660();
              sub_1000B4670();
              sub_1000B4640();
              goto LABEL_7;
            }
            v20 += v39;
            if (!--v19) {
              goto LABEL_5;
            }
          }
        }
        else
        {
          int64_t v14 = *v40;
          swift_bridgeObjectRetain();
LABEL_5:
          v14(v6, 1, 1, v7);
        }
        a2 = v30;
        swift_bridgeObjectRelease();
        (*v41)(v42, v7);

LABEL_7:
        a1 = v29;
        unint64_t v12 = v34;
        if (v34 == v28) {
          return v43;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void sub_10001708C(uint64_t a1, void *a2)
{
  id v39 = a2;
  uint64_t v38 = sub_1000B2F60();
  uint64_t v3 = *(void *)(v38 - 8);
  uint64_t v4 = __chkstk_darwin(v38);
  uint64_t v37 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)v31 - v6;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1000B44B0();
    sub_100008148(0, &qword_1000D5020);
    sub_100017AEC(&qword_1000D5048, &qword_1000D5020);
    sub_1000B4220();
    a1 = v42;
    uint64_t v33 = v43;
    uint64_t v7 = v44;
    uint64_t v8 = v45;
    unint64_t v9 = v46;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 56);
    uint64_t v33 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & v11;
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
  }
  v31[2] = v7;
  v31[4] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v32 = (unint64_t)(v7 + 64) >> 6;
  uint64_t v35 = (void (**)(char *, uint64_t))(v3 + 8);
  v31[3] = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    unint64_t v26 = v9;
    if ((a1 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v30 = sub_1000B4520();
    if (!v30) {
      goto LABEL_31;
    }
    uint64_t v41 = v30;
    sub_100008148(0, &qword_1000D5020);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v17 = v47;
    swift_unknownObjectRelease();
    uint64_t v16 = v8;
    if (!v17) {
      goto LABEL_31;
    }
LABEL_10:
    unint64_t v34 = v26;
    uint64_t v40 = v16;
    id v18 = [v17 uniqueIdentifier];
    uint64_t v19 = v36;
    sub_1000B2F50();

    id v20 = [v39 uniqueIdentifier];
    uint64_t v21 = v37;
    sub_1000B2F50();

    LOBYTE(v20) = sub_1000B2F40();
    uint64_t v22 = a1;
    uint64_t v23 = *v35;
    unint64_t v24 = v21;
    uint64_t v25 = v38;
    (*v35)(v24, v38);
    v23(v19, v25);
    uint64_t v8 = v40;
    a1 = v22;

    if (v20) {
      goto LABEL_31;
    }
  }
  if (v9)
  {
    unint64_t v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v15 = v14 | (v8 << 6);
    uint64_t v16 = v8;
LABEL_9:
    id v17 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    if (!v17) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  int64_t v27 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v27 >= v32) {
      goto LABEL_31;
    }
    unint64_t v28 = *(void *)(v33 + 8 * v27);
    uint64_t v16 = v8 + 1;
    if (!v28)
    {
      uint64_t v16 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_31;
      }
      unint64_t v28 = *(void *)(v33 + 8 * v16);
      if (!v28)
      {
        uint64_t v16 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_31;
        }
        unint64_t v28 = *(void *)(v33 + 8 * v16);
        if (!v28)
        {
          uint64_t v16 = v8 + 4;
          if (v8 + 4 >= v32) {
            goto LABEL_31;
          }
          unint64_t v28 = *(void *)(v33 + 8 * v16);
          if (!v28)
          {
            uint64_t v16 = v8 + 5;
            if (v8 + 5 >= v32) {
              goto LABEL_31;
            }
            unint64_t v28 = *(void *)(v33 + 8 * v16);
            if (!v28)
            {
              uint64_t v29 = v8 + 6;
              while (v32 != v29)
              {
                unint64_t v28 = *(void *)(v33 + 8 * v29++);
                if (v28)
                {
                  uint64_t v16 = v29 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_100017A14();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v9 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v16 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

void *sub_1000174E4(unint64_t a1, uint64_t a2, void *a3, NSObject *a4)
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1000B46A0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = (a1 & 0xC000000000000001) != 0
         ? sub_1000B45E0()
         : *(id *)(a1 + 8 * v7);
      unint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      uint64_t v11 = sub_10000C070(v8, a2, a3, a4);

      sub_100070A9C(v11);
      ++v7;
      if (v10 == v6) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100017618(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void *sub_100017650(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for WidgetTileInfo() - 8;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v33 = (uint64_t)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v29 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v29 - v12;
  __chkstk_darwin(v11);
  uint64_t v16 = (char *)v29 - v15;
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v34 = _swiftEmptyArrayStorage;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    v29[1] = v2;
    uint64_t v19 = *(unsigned __int8 *)(v14 + 80);
    uint64_t v20 = *(void *)(v14 + 72);
    uint64_t v31 = (v19 + 32) & ~v19;
    uint64_t v21 = a1 + v31;
    uint64_t v22 = v20;
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t v32 = a2;
    uint64_t v30 = v10;
    do
    {
      sub_100007FDC(v21, (uint64_t)v16);
      sub_100007FDC((uint64_t)v16, (uint64_t)v10);
      char v24 = sub_100004DF0((uint64_t)v13, (uint64_t)v10);
      sub_100008040((uint64_t)v13);
      if (v24)
      {
        uint64_t v25 = v22;
        sub_10000809C((uint64_t)v16, v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10001E99C(0, v23[2] + 1, 1);
        }
        uint64_t v23 = v34;
        unint64_t v27 = v34[2];
        unint64_t v26 = v34[3];
        if (v27 >= v26 >> 1)
        {
          sub_10001E99C(v26 > 1, v27 + 1, 1);
          uint64_t v23 = v34;
        }
        _OWORD v23[2] = v27 + 1;
        uint64_t v28 = (uint64_t)v23 + v31 + v27 * v25;
        uint64_t v22 = v25;
        sub_10000809C(v33, v28);
        uint64_t v10 = v30;
      }
      else
      {
        sub_100008040((uint64_t)v16);
      }
      v21 += v22;
      --v18;
    }
    while (v18);
    return v34;
  }
  return result;
}

uint64_t sub_1000178A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetTileInfo();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_100017A1C(&qword_1000D5030, (void (*)(uint64_t))type metadata accessor for WidgetTileInfo);
  uint64_t result = sub_1000B4200();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_100007FDC(v11, (uint64_t)v6);
      sub_100004DF0((uint64_t)v8, (uint64_t)v6);
      sub_100008040((uint64_t)v8);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_100017A08(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100017A14()
{
  return swift_release();
}

uint64_t sub_100017A1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100017A64(uint64_t a1)
{
  return sub_10000E1F8(a1, *(void (**)(char *, uint64_t))(v1 + 16)) & 1;
}

uint64_t sub_100017A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100017AEC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008148(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100017B3C()
{
  return sub_10002B138() & 1;
}

uint64_t sub_100017B5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100004210(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_100017BB8(id result, char a2)
{
  if (a2 != -1) {
    return result;
  }
  return result;
}

uint64_t sub_100017BCC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  sub_100008148(0, &qword_1000D4FD8);
  sub_100017AEC((unint64_t *)&qword_1000D5090, &qword_1000D4FD8);
  uint64_t result = sub_1000B4200();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000B46A0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)sub_1000B45E0();
        sub_100004FFC(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_100004FFC(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100017D40(uint64_t a1)
{
  uint64_t v2 = sub_1000B2F60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_100017A1C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v29 = sub_1000B4200();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    char v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    id v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_100005330(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_100017FE8()
{
  return sub_100017B3C() & 1;
}

char *sub_100018004(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B2F60();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8(&a1[a3[5]], &a2[a3[5]], v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = &a2[v9];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = &a1[v10];
    unint64_t v15 = &a2[v10];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = a3[8];
    uint64_t v18 = a3[9];
    uint64_t v19 = &a1[v17];
    uint64_t v20 = &a2[v17];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = &a1[v18];
    uint64_t v23 = &a2[v18];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = a3[10];
    uint64_t v50 = &a2[v25];
    __dsta = &a1[v25];
    uint64_t v26 = sub_1000B33D0();
    unint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(__dsta, v50, v26);
    v27(&a1[a3[11]], &a2[a3[11]], v26);
    uint64_t v28 = a3[13];
    *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
    a1[v28] = a2[v28];
    uint64_t v29 = a3[14];
    uint64_t v30 = a3[15];
    uint64_t v31 = &a1[v29];
    uint64_t v32 = &a2[v29];
    uint64_t v33 = *(void **)v32;
    LOBYTE(v32) = v32[8];
    *(void *)uint64_t v31 = v33;
    v31[8] = (char)v32;
    *(void *)&a1[v30] = *(void *)&a2[v30];
    uint64_t v34 = a3[17];
    a1[a3[16]] = a2[a3[16]];
    __dst = &a1[v34];
    uint64_t v35 = &a2[v34];
    uint64_t v36 = sub_1000B32E0();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_retain();
    id v38 = v33;
    swift_bridgeObjectRetain();
    if (v51(v35, 1, v36))
    {
      uint64_t v39 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v35, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v35, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
    }
    uint64_t v41 = a3[19];
    a1[a3[18]] = a2[a3[18]];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    uint64_t v44 = a3[20];
    uint64_t v45 = a3[21];
    unint64_t v46 = &a1[v44];
    uint64_t v47 = &a2[v44];
    uint64_t v48 = *((void *)v47 + 1);
    *(void *)unint64_t v46 = *(void *)v47;
    *((void *)v46 + 1) = v48;
    a1[v45] = a2[v45];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100018358(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1000B2F60();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = sub_1000B33D0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[11], v7);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[17];
  uint64_t v10 = sub_1000B32E0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100018538(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (void *)(a1 + v17);
  uint64_t v22 = (void *)(a2 + v17);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[10];
  uint64_t v48 = a2 + v24;
  __dsta = (void *)(a1 + v24);
  uint64_t v25 = sub_1000B33D0();
  uint64_t v26 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(__dsta, v48, v25);
  v26((void *)(a1 + a3[11]), a2 + a3[11], v25);
  uint64_t v27 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v28 = a3[14];
  uint64_t v29 = a3[15];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  uint64_t v32 = *(void **)v31;
  LOBYTE(v31) = *(unsigned char *)(v31 + 8);
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = v31;
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v33 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  __dst = (void *)(a1 + v33);
  uint64_t v34 = (const void *)(a2 + v33);
  uint64_t v35 = sub_1000B32E0();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v49 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  swift_retain();
  id v37 = v32;
  swift_bridgeObjectRetain();
  if (v49(v34, 1, v35))
  {
    uint64_t v38 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v34, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 16))(__dst, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
  }
  uint64_t v39 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(void *)uint64_t v40 = *(void *)v41;
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
  uint64_t v42 = a3[20];
  uint64_t v43 = a3[21];
  uint64_t v44 = (void *)(a1 + v42);
  uint64_t v45 = (void *)(a2 + v42);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10001883C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1000B33D0();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24);
  v24(v21, v22, v23);
  v24(a1 + a3[11], a2 + a3[11], v23);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v25 = a3[14];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void **)v27;
  LOBYTE(v27) = *(unsigned char *)(v27 + 8);
  uint64_t v29 = *(void **)v26;
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v27;
  id v30 = v28;

  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v31 = a3[17];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  uint64_t v34 = sub_1000B32E0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  LODWORD(v24) = v36(v32, 1, v34);
  int v37 = v36(v33, 1, v34);
  if (!v24)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 24))(v32, v33, v34);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_6;
  }
  if (v37)
  {
LABEL_6:
    uint64_t v38 = sub_100004210(&qword_1000D5098);
    memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v35 + 16))(v32, v33, v34);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_7:
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v39 = a3[19];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v42 = *v41;
  *(unsigned char *)(v40 + 8) = *((unsigned char *)v41 + 8);
  *(void *)uint64_t v40 = v42;
  uint64_t v43 = a3[20];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_100018C08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1000B33D0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(a1 + a3[11], a2 + a3[11], v13);
  uint64_t v15 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[14];
  uint64_t v17 = a3[15];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v20 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_1000B32E0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_100004210(&qword_1000D5098);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  return a1;
}

uint64_t sub_100018E88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_1000B33D0();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40);
  v32(v29, v30, v31);
  v32(a1 + a3[11], a2 + a3[11], v31);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_release();
  uint64_t v33 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  LOBYTE(v35) = *((unsigned char *)v35 + 8);
  int v37 = *(void **)v34;
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = (_BYTE)v35;

  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  uint64_t v41 = sub_1000B32E0();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  LODWORD(v32) = v43(v39, 1, v41);
  int v44 = v43(v40, 1, v41);
  if (!v32)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 40))(v39, v40, v41);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v42 + 8))(v39, v41);
    goto LABEL_6;
  }
  if (v44)
  {
LABEL_6:
    uint64_t v45 = sub_100004210(&qword_1000D5098);
    memcpy(v39, v40, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v42 + 32))(v39, v40, v41);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_7:
  uint64_t v46 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = a3[20];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_1000191E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000191F8);
}

uint64_t sub_1000191F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[6] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_1000B33D0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[10];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = sub_100004210(&qword_1000D5098);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[17];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_100019380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100019394);
}

uint64_t sub_100019394(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000B2F60();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_1000B33D0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[10];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_100004210(&qword_1000D5098);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[17];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for WidgetTileInfo()
{
  uint64_t result = qword_1000D50F8;
  if (!qword_1000D50F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100019568()
{
  sub_1000B2F60();
  if (v0 <= 0x3F)
  {
    sub_1000B33D0();
    if (v1 <= 0x3F)
    {
      sub_1000196D0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1000196D0()
{
  if (!qword_1000D5108)
  {
    sub_1000B32E0();
    unint64_t v0 = sub_1000B43F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D5108);
    }
  }
}

void sub_100019728(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1000B44B0();
    sub_100008148(0, &qword_1000D5070);
    sub_100020130();
    sub_1000B4220();
    uint64_t v1 = v20;
    uint64_t v18 = v21;
    uint64_t v2 = v22;
    int64_t v3 = v23;
    unint64_t v4 = v24;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  uint64_t v17 = v2;
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_1000B4520()) {
      goto LABEL_36;
    }
    sub_100008148(0, &qword_1000D5070);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v19;
    swift_unknownObjectRelease();
    int64_t v11 = v3;
    uint64_t v9 = v4;
    if (!v19) {
      goto LABEL_36;
    }
LABEL_26:
    id v15 = [v12 hf_affectedCharacteristic:v17];

    int64_t v3 = v11;
    unint64_t v4 = v9;
    if (v15)
    {
      sub_1000B40E0();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000B4130();
      }
      sub_1000B4150();
      sub_1000B4120();
      int64_t v3 = v11;
      unint64_t v4 = v9;
    }
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    int64_t v11 = v3;
LABEL_25:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_36;
    }
    goto LABEL_26;
  }
  int64_t v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v18 + 8 * v11);
    if (!v13)
    {
      int64_t v14 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_36;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13) {
        goto LABEL_23;
      }
      int64_t v14 = v3 + 3;
      if (v3 + 3 >= v8) {
        goto LABEL_36;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13) {
        goto LABEL_23;
      }
      int64_t v14 = v3 + 4;
      if (v3 + 4 >= v8) {
        goto LABEL_36;
      }
      unint64_t v13 = *(void *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_23:
        int64_t v11 = v14;
      }
      else
      {
        int64_t v11 = v3 + 5;
        if (v3 + 5 >= v8) {
          goto LABEL_36;
        }
        unint64_t v13 = *(void *)(v18 + 8 * v11);
        if (!v13)
        {
          int64_t v16 = v3 + 6;
          while (v8 != v16)
          {
            unint64_t v13 = *(void *)(v18 + 8 * v16++);
            if (v13)
            {
              int64_t v11 = v16 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_100017A14();
          return;
        }
      }
    }
LABEL_24:
    uint64_t v9 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

void sub_100019A50(uint64_t a1, void *a2, char a3)
{
  switch(a3)
  {
    case 1:
      Swift::UInt v4 = 2;
      goto LABEL_6;
    case 2:
      Swift::UInt v4 = 3;
      goto LABEL_6;
    case 3:
      Swift::UInt v4 = 4;
      goto LABEL_6;
    case 4:
      sub_1000B48D0(0);
      return;
    default:
      Swift::UInt v4 = 1;
LABEL_6:
      sub_1000B48D0(v4);
      id v5 = a2;
      sub_1000B43A0();

      return;
  }
}

Swift::Int sub_100019B18(void *a1, char a2)
{
  sub_1000B48C0();
  switch(a2)
  {
    case 1:
      Swift::UInt v4 = 2;
      goto LABEL_6;
    case 2:
      Swift::UInt v4 = 3;
      goto LABEL_6;
    case 3:
      Swift::UInt v4 = 4;
      goto LABEL_6;
    case 4:
      sub_1000B48D0(0);
      return sub_1000B48F0();
    default:
      Swift::UInt v4 = 1;
LABEL_6:
      sub_1000B48D0(v4);
      id v5 = a1;
      sub_1000B43A0();

      return sub_1000B48F0();
  }
}

Swift::Int sub_100019BE4()
{
  return sub_100019B18(*(void **)v0, *(unsigned char *)(v0 + 8));
}

void sub_100019BF0(uint64_t a1)
{
  sub_100019A50(a1, *(void **)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_100019BFC()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1000B48C0();
  switch(v2)
  {
    case 1:
      Swift::UInt v3 = 2;
      goto LABEL_6;
    case 2:
      Swift::UInt v3 = 3;
      goto LABEL_6;
    case 3:
      Swift::UInt v3 = 4;
      goto LABEL_6;
    case 4:
      sub_1000B48D0(0);
      return sub_1000B48F0();
    default:
      Swift::UInt v3 = 1;
LABEL_6:
      sub_1000B48D0(v3);
      id v4 = v1;
      sub_1000B43A0();

      return sub_1000B48F0();
  }
}

uint64_t sub_100019CCC(uint64_t a1, uint64_t a2)
{
  return sub_10001F670(*(void **)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

unint64_t sub_100019CE4(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D51F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004210(&qword_1000D5200);
  uint64_t v6 = sub_1000B46D0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000206A0(v12, (uint64_t)v5, &qword_1000D51F0);
    unint64_t result = sub_100041560((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1000B2F60();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = (unint64_t)sub_10002011C(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100019EE4(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5210);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  id v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004210(&qword_1000D5218);
  uint64_t v6 = sub_1000B46D0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = v6 + 64;
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v21[1] = a1;
  uint64_t v11 = a1 + v10;
  uint64_t v12 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000206A0(v11, (uint64_t)v5, &qword_1000D5210);
    unint64_t result = sub_100041FF0();
    if (v14) {
      break;
    }
    unint64_t v15 = result;
    *(void *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = v7[7];
    uint64_t v17 = sub_1000B2B10();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v5, v17);
    uint64_t v18 = v7[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v7[2] = v20;
    v11 += v12;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10001A0C0(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5220);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  id v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004210(&qword_1000D5228);
  uint64_t v6 = sub_1000B46D0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = v6 + 64;
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v21[1] = a1;
  uint64_t v11 = a1 + v10;
  uint64_t v12 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000206A0(v11, (uint64_t)v5, &qword_1000D5220);
    unint64_t result = sub_100041FF0();
    if (v14) {
      break;
    }
    unint64_t v15 = result;
    *(void *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = v7[7];
    uint64_t v17 = sub_100004210(&qword_1000D5230);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v5, v17);
    uint64_t v18 = v7[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v7[2] = v20;
    v11 += v12;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10001A2A0(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5288);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004210(&qword_1000D5290);
  uint64_t v6 = sub_1000B46D0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000206A0(v12, (uint64_t)v5, &qword_1000D5288);
    unint64_t result = sub_100041560((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1000B2F60();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10001A494(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100004210(&qword_1000D52A0);
  uint64_t v2 = (void *)sub_1000B46D0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000414A4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10001A5A8()
{
  uint64_t v1 = sub_100004210(&qword_1000D5040);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B33B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + *(int *)(type metadata accessor for WidgetTileInfo() + 56);
  char v9 = *(void **)v8;
  char v10 = 0;
  switch(*(unsigned char *)(v8 + 8))
  {
    case 1:
      id v14 = v9;
      id v15 = [v14 services];
      sub_100008148(0, &qword_1000D5020);
      uint64_t v16 = sub_1000B4100();

      uint64_t v19 = v16;
      sub_100004210(&qword_1000D5180);
      sub_10001FF28(&qword_1000D5188, &qword_1000D5180);
      sub_1000B4250();
      swift_bridgeObjectRelease();
      char v10 = sub_1000B3210();

      break;
    case 2:
      char v10 = 1;
      break;
    case 3:
      id v13 = v9;
      sub_1000B4260();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {

        sub_100017B5C((uint64_t)v3, &qword_1000D5040);
        char v10 = 0;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
        char v10 = sub_1000B3370();

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      break;
    case 4:
      return v10 & 1;
    default:
      sub_100004210(&qword_1000D5190);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1000B52D0;
      *(void *)(v11 + 32) = v9;
      uint64_t v19 = v11;
      sub_1000B4120();
      id v12 = v9;
      sub_100004210(&qword_1000D5180);
      sub_10001FF28(&qword_1000D5188, &qword_1000D5180);
      sub_1000B4250();
      swift_bridgeObjectRelease();
      char v10 = sub_1000B3210();

      break;
  }
  return v10 & 1;
}

uint64_t sub_10001A910()
{
  uint64_t v1 = sub_100004210(&qword_1000D5040);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (long long *)&v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1000B33B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000B2F60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for WidgetTileInfo();
  uint64_t v13 = __chkstk_darwin(v12);
  id v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v16 = *(unsigned __int8 *)(v0 + *(int *)(v13 + 72));
  if (v16 != 2)
  {
    char v20 = v16 & 1;
    return v20 & 1;
  }
  sub_100007FDC(v0, (uint64_t)v15);
  uint64_t v17 = v0 + *(int *)(v12 + 56);
  uint64_t v18 = *(void **)v17;
  switch(*(unsigned char *)(v17 + 8))
  {
    case 1:
      id v21 = v18;
      id v22 = [v21 services];
      sub_100008148(0, &qword_1000D5020);
      unint64_t v23 = sub_1000B4100();

      if (!(v23 >> 62))
      {
        if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_7;
        }
LABEL_26:
        swift_bridgeObjectRelease();
        sub_100008040((uint64_t)v15);

        goto LABEL_27;
      }
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1000B46A0();
      swift_bridgeObjectRelease();
      if (!v34) {
        goto LABEL_26;
      }
LABEL_7:
      if ((v23 & 0xC000000000000001) != 0)
      {
        id v24 = (id)sub_1000B45E0();
      }
      else
      {
        if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x10001ADD8);
        }
        id v24 = *(id *)(v23 + 32);
      }
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      char v20 = sub_10001ADEC((uint64_t)v25, (uint64_t)v15);

LABEL_11:
      sub_100008040((uint64_t)v15);
      return v20 & 1;
    case 2:
      id v26 = v18;
      sub_100008040((uint64_t)v15);
      uint64_t v27 = *(void *)(v0 + *(int *)(v12 + 60));
      id v28 = [v26 uniqueIdentifier];
      sub_1000B2F50();

      if (*(void *)(v27 + 16) && (unint64_t v29 = sub_100041560((uint64_t)v11), (v30 & 1) != 0))
      {
        sub_1000084C4(*(void *)(v27 + 56) + 32 * v29, (uint64_t)&v37);
      }
      else
      {
        long long v37 = 0u;
        long long v38 = 0u;
      }

      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      if (!*((void *)&v38 + 1))
      {
        uint64_t v32 = &qword_1000D4FF8;
        uint64_t v33 = &v37;
        goto LABEL_24;
      }
      if (!swift_dynamicCast()) {
        goto LABEL_27;
      }
      char v20 = v36[15];
      return v20 & 1;
    case 3:
      id v31 = v18;
      sub_100008040((uint64_t)v15);
      sub_1000B4260();
      if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {

        uint64_t v32 = &qword_1000D5040;
        uint64_t v33 = v3;
LABEL_24:
        sub_100017B5C((uint64_t)v33, v32);
LABEL_27:
        char v20 = 0;
      }
      else
      {
        (*(void (**)(unsigned char *, long long *, uint64_t))(v5 + 32))(v7, v3, v4);
        char v20 = sub_1000B3360();

        (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      }
      return v20 & 1;
    case 4:
      sub_100008040((uint64_t)v15);
      goto LABEL_27;
    default:
      id v19 = v18;
      char v20 = sub_10001ADEC((uint64_t)v19, (uint64_t)v15);

      goto LABEL_11;
  }
}

BOOL sub_10001ADEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000B3320();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B31A0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B43B0();
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == enum case for ServiceKind.door(_:))
  {
LABEL_2:
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for CharacteristicKind.currentPosition(_:), v3);
    uint64_t v12 = type metadata accessor for WidgetTileInfo();
    uint64_t v13 = sub_100008520((uint64_t)v6, *(void *)(a2 + *(int *)(v12 + 60)));
    char v15 = v14;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((v15 & 1) == 0) {
      return v13 > 0;
    }
    return 0;
  }
  if (v11 == enum case for ServiceKind.garageDoorOpener(_:))
  {
    uint64_t v17 = (unsigned int *)&enum case for CharacteristicKind.currentDoorState(_:);
    goto LABEL_8;
  }
  if (v11 == enum case for ServiceKind.lockMechanism(_:))
  {
    uint64_t v17 = (unsigned int *)&enum case for CharacteristicKind.currentLockMechanismState(_:);
LABEL_8:
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *v17, v3);
    uint64_t v18 = type metadata accessor for WidgetTileInfo();
    uint64_t v19 = sub_100008520((uint64_t)v6, *(void *)(a2 + *(int *)(v18 + 60)));
    char v21 = v20;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((v21 & 1) == 0) {
      return v19 != 1;
    }
    return 0;
  }
  if (v11 == enum case for ServiceKind.securitySystem(_:))
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for CharacteristicKind.currentSecuritySystemState(_:), v3);
    uint64_t v22 = type metadata accessor for WidgetTileInfo();
    uint64_t v23 = sub_100008520((uint64_t)v6, *(void *)(a2 + *(int *)(v22 + 60)));
    char v25 = v24;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((v25 & 1) == 0) {
      return v23 != 3;
    }
    return 0;
  }
  if (v11 == enum case for ServiceKind.thermostat(_:))
  {
    uint64_t v41 = *(void (**)(char *, void, uint64_t))(v4 + 104);
    v41(v6, enum case for CharacteristicKind.targetHeatingCoolingMode(_:), v3);
    uint64_t v26 = *(int *)(type metadata accessor for WidgetTileInfo() + 60);
    uint64_t v27 = sub_100008520((uint64_t)v6, *(void *)(a2 + v26));
    char v29 = v28;
    char v30 = *(void (**)(char *, uint64_t))(v4 + 8);
    v30(v6, v3);
    if ((v29 & 1) == 0)
    {
      v41(v6, enum case for CharacteristicKind.currentHeatingCooling(_:), v3);
      uint64_t v31 = sub_100008520((uint64_t)v6, *(void *)(a2 + v26));
      char v33 = v32;
      v30(v6, v3);
      if ((v33 & 1) == 0) {
        return (v27 | v31) != 0;
      }
    }
    return 0;
  }
  if (v11 == enum case for ServiceKind.window(_:) || v11 == enum case for ServiceKind.windowCovering(_:)) {
    goto LABEL_2;
  }
  uint64_t v36 = *(void (**)(char *, void, uint64_t))(a2 + *(int *)(type metadata accessor for WidgetTileInfo() + 60));
  uint64_t v40 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  v40(v6, enum case for CharacteristicKind.powerState(_:), v3);
  uint64_t v41 = v36;
  char v37 = _sSo9HMServiceC10HomeWidgetE9BOOLValue3for4withSbSg0B9DataModel18CharacteristicKindO_SDy10Foundation4UUIDVypGSgtF_0((uint64_t)v6, (uint64_t)v36);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v4 + 8);
  v39(v6, v3);
  if (v37 == 2
    && (v40(v6, enum case for CharacteristicKind.active(_:), v3),
        char v37 = _sSo9HMServiceC10HomeWidgetE9BOOLValue3for4withSbSg0B9DataModel18CharacteristicKindO_SDy10Foundation4UUIDVypGSgtF_0((uint64_t)v6, (uint64_t)v41), v39(v6, v3), v37 == 2))
  {
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = v37 & 1;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v16;
}

void sub_10001B2F8()
{
  uint64_t v1 = (int *)type metadata accessor for WidgetTileInfo();
  if (*(unsigned char *)(v0 + v1[21]) == 2)
  {
    uint64_t v2 = v1;
    uint64_t v3 = v0 + v1[14];
    int v4 = *(unsigned __int8 *)(v3 + 8);
    if ((v4 - 2) >= 3)
    {
      uint64_t v5 = *(void **)v3;
      if (!v4)
      {
        uint64_t v6 = *(void **)(v0 + v1[15]);
        id v7 = v5;
        v14.value._rawValue = v6;
        HMService.isInFlight(cache:)(v14);

        return;
      }
      id v8 = v5;
      id v9 = [v8 services];
      sub_100008148(0, &qword_1000D5020);
      unint64_t v10 = sub_1000B4100();

      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_1000B46A0();
        swift_bridgeObjectRelease();
        if (v13)
        {
LABEL_9:
          if ((v10 & 0xC000000000000001) != 0)
          {
            id v11 = (id)sub_1000B45E0();
          }
          else
          {
            if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            id v11 = *(id *)(v10 + 32);
          }
          uint64_t v12 = v11;
          swift_bridgeObjectRelease();
          v15.value._rawValue = *(void **)(v0 + v2[15]);
          HMService.isInFlight(cache:)(v15);

          return;
        }
      }
      else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_9;
      }

      swift_bridgeObjectRelease();
    }
  }
}

void sub_10001B494()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for WidgetTileInfo() + 56);
  if (*(unsigned __int8 *)(v1 + 8) - 2 >= 3)
  {
    uint64_t v2 = *(void **)v1;
    if (!*(unsigned char *)(v1 + 8))
    {
      id v3 = v2;
      return;
    }
    id v4 = v2;
    id v5 = [v4 services];
    sub_100008148(0, &qword_1000D5020);
    unint64_t v6 = sub_1000B4100();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1000B46A0();
      swift_bridgeObjectRelease();
      if (v8)
      {
LABEL_6:
        if ((v6 & 0xC000000000000001) != 0)
        {
          sub_1000B45E0();
        }
        else
        {
          if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v7 = *(id *)(v6 + 32);
        }
      }
    }
    else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10001B5C0()
{
  *(void *)(v1 + 64) = v0;
  return _swift_task_switch(sub_10001B5E0, 0, 0);
}

uint64_t sub_10001B5E0()
{
  *(void *)(v0 + 72) = *HomeWidget.shared.unsafeMutableAddressor();
  swift_retain();
  v5.value._rawValue = 0;
  HomeWidgetCore::RecommendedWidgetIdentity v6 = RecommendedWidgetIdentity.init(ids:)(v5);
  *(void *)(v0 + 80) = v6.uniqueIdentifier._object;
  *(void *)(v0 + 88) = v6.widgetKind._object;
  *(HomeWidgetCore::RecommendedWidgetIdentity *)(v0 + 16) = v6;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  unint64_t v2 = sub_10001FE98();
  *uint64_t v1 = v0;
  v1[1] = sub_10001B6C0;
  return HomeWidget.synchronizeWithHomeKit<A>(configuration:)(v0 + 16, (uint64_t)&type metadata for RecommendedWidgetIdentity, v2);
}

uint64_t sub_10001B6C0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10001B820, 0, 0);
}

uint64_t sub_10001B820()
{
  Swift::OpaquePointer_optional v14 = v0;
  uint64_t v1 = v0[13];
  if (v1)
  {
    uint64_t v2 = v0[8];
    uint64_t v3 = swift_task_alloc();
    v0[14] = v3;
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[15] = v4;
    uint64_t v5 = sub_100004210(&qword_1000D51B8);
    *uint64_t v4 = v0;
    v4[1] = sub_10001BACC;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0x6174536863746566, 0xEC00000029286574, sub_10001FEEC, v3, v5);
  }
  else
  {
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1000B3570();
    sub_100017618(v6, (uint64_t)qword_1000DCC18);
    id v7 = sub_1000B3550();
    os_log_type_t v8 = sub_1000B42A0();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)id v9 = 136315138;
      v0[6] = sub_10002A68C(0x6174536863746566, 0xEC00000029286574, &v13);
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s unable to get shared HMHomeManager instance", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unint64_t v10 = sub_100019CE4((uint64_t)_swiftEmptyArrayStorage);
    id v11 = (uint64_t (*)(unint64_t))v0[1];
    return v11(v10);
  }
}

uint64_t sub_10001BACC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10001BBE4, 0, 0);
}

uint64_t sub_10001BBE4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_10001BC48(uint64_t a1, uint64_t a2, void *a3)
{
  id v83 = a3;
  uint64_t v92 = (void **)sub_1000B3320();
  uint64_t v5 = (uint64_t)*(v92 - 1);
  __chkstk_darwin(v92);
  id v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WidgetTileInfo();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v82 = (uint64_t)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004210(&qword_1000D51C0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v84 = v13;
  uint64_t v85 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B3570();
  uint64_t v87 = *(void *)(v14 - 8);
  uint64_t v88 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v75 - v17;
  uint64_t v19 = a2 + *(int *)(v9 + 64);
  int v20 = *(unsigned __int8 *)(v19 + 8);
  uint64_t v86 = v12;
  if (v20 == 2)
  {
    uint64_t v21 = qword_1000D4EA8;
    id v22 = *(id *)v19;
    if (v21 != -1) {
      swift_once();
    }
    uint64_t v80 = a1;
    uint64_t v23 = v88;
    uint64_t v24 = sub_100017618(v88, (uint64_t)qword_1000DCC18);
    uint64_t v25 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v18, v24, v23);
    id v26 = v22;
    uint64_t v27 = sub_1000B3550();
    os_log_type_t v28 = sub_1000B42C0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v92 = (void **)swift_slowAlloc();
      aBlock = v92;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v93 = (void *)sub_10002A68C(0x6174536863746566, 0xEC00000029286574, (uint64_t *)&aBlock);
      uint64_t v78 = v11;
      sub_1000B4400();
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v91 = (v29 + 14);
      id v30 = [v26 name];
      uint64_t v31 = sub_1000B4010();
      uint64_t v32 = v25;
      unint64_t v34 = v33;

      uint64_t v93 = (void *)sub_10002A68C(v31, v34, (uint64_t *)&aBlock);
      uint64_t v11 = v78;
      sub_1000B4400();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s fetching state for action set %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v88);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v23);
    }
    id v57 = [v83 widgetManager];
    sub_100004210(&qword_1000D5190);
    uint64_t v58 = (void **)swift_allocObject();
    *((_OWORD *)v58 + 1) = xmmword_1000B52D0;
    v58[4] = v26;
    aBlock = v58;
    sub_1000B4120();
    sub_100008148(0, &qword_1000D5028);
    id v59 = v26;
    v60.super.uint64_t isa = sub_1000B40F0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v62 = v85;
    uint64_t v61 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v80, v11);
    unint64_t v63 = (*(unsigned __int8 *)(v61 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    uint64_t v64 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v64 + v63, v62, v11);
    id v98 = sub_100020004;
    uint64_t v99 = v64;
    aBlock = _NSConcreteStackBlock;
    uint64_t v95 = 1107296256;
    int v96 = sub_10001D300;
    uint64_t v97 = &unk_1000CF0B0;
    id v65 = _Block_copy(&aBlock);
    swift_release();
    [v57 fetchStateForActionSets:v60.super.isa completion:v65];
    _Block_release(v65);

    goto LABEL_29;
  }
  uint64_t v79 = v16;
  uint64_t v81 = a2;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v35 = v88;
  uint64_t v36 = sub_100017618(v88, (uint64_t)qword_1000DCC18);
  uint64_t v37 = v87;
  uint64_t v38 = v79;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v79, v36, v35);
  uint64_t v39 = v82;
  sub_100007FDC(v81, v82);
  uint64_t v40 = sub_1000B3550();
  int v77 = sub_1000B42C0();
  if (!os_log_type_enabled(v40, (os_log_type_t)v77))
  {
    sub_100008040(v39);

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v35);
LABEL_28:
    id v57 = [v83 widgetManager];
    sub_10001D304();
    sub_100008148(0, &qword_1000D4FE8);
    v60.super.uint64_t isa = sub_1000B40F0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v71 = v85;
    uint64_t v70 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, a1, v11);
    unint64_t v72 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    uint64_t v73 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v73 + v72, v71, v11);
    id v98 = sub_10001FEF8;
    uint64_t v99 = v73;
    aBlock = _NSConcreteStackBlock;
    uint64_t v95 = 1107296256;
    int v96 = sub_10001D300;
    uint64_t v97 = &unk_1000CF060;
    char v74 = _Block_copy(&aBlock);
    swift_release();
    [v57 fetchStateForCharacteristics:v60.super.isa completion:v74];
    _Block_release(v74);
LABEL_29:

    return;
  }
  uint64_t v41 = swift_slowAlloc();
  uint64_t v75 = (void **)swift_slowAlloc();
  aBlock = v75;
  *(_DWORD *)uint64_t v41 = 136315394;
  uint64_t v93 = (void *)sub_10002A68C(0x6174536863746566, 0xEC00000029286574, (uint64_t *)&aBlock);
  sub_1000B4400();
  id v76 = (uint8_t *)v41;
  *(_WORD *)(v41 + 12) = 2080;
  unint64_t v42 = (unint64_t)sub_10001D304();
  unint64_t v43 = v42;
  if (!(v42 >> 62))
  {
    uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v44) {
      goto LABEL_11;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v53 = _swiftEmptyArrayStorage;
LABEL_27:
    uint64_t v93 = v53;
    uint64_t v66 = v76;
    sub_100004210(&qword_1000D51C8);
    sub_10001FF28(&qword_1000D51D0, &qword_1000D51C8);
    uint64_t v67 = sub_1000B3F70();
    unint64_t v69 = v68;
    swift_bridgeObjectRelease();
    uint64_t v93 = (void *)sub_10002A68C(v67, v69, (uint64_t *)&aBlock);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    sub_100008040(v82);
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v77, "%s fetching characteristics %s", v66, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v79, v88);
    goto LABEL_28;
  }
  uint64_t v44 = sub_1000B46A0();
  if (!v44) {
    goto LABEL_26;
  }
LABEL_11:
  uint64_t v80 = a1;
  uint64_t v78 = v11;
  uint64_t v93 = _swiftEmptyArrayStorage;
  sub_10001EA14(0, v44 & ~(v44 >> 63), 0);
  if ((v44 & 0x8000000000000000) == 0)
  {
    uint64_t v45 = 0;
    unint64_t v89 = v43 & 0xC000000000000001;
    unint64_t v90 = v43;
    uint64_t v46 = (void (**)(char *, void **))(v5 + 8);
    uint64_t v91 = v40;
    uint64_t v47 = v44;
    do
    {
      if (v89) {
        id v48 = (id)sub_1000B45E0();
      }
      else {
        id v48 = *(id *)(v43 + 8 * v45 + 32);
      }
      uint64_t v49 = v48;
      sub_1000B42D0();
      uint64_t v50 = sub_1000B3310();
      uint64_t v52 = v51;
      (*v46)(v7, v92);

      uint64_t v53 = v93;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001EA14(0, v53[2] + 1, 1);
        uint64_t v53 = v93;
      }
      unint64_t v55 = v53[2];
      unint64_t v54 = v53[3];
      if (v55 >= v54 >> 1)
      {
        sub_10001EA14(v54 > 1, v55 + 1, 1);
        uint64_t v53 = v93;
      }
      ++v45;
      v53[2] = v55 + 1;
      uint64_t v56 = &v53[2 * v55];
      v56[4] = v50;
      v56[5] = v52;
      unint64_t v43 = v90;
      uint64_t v40 = v91;
    }
    while (v47 != v45);
    swift_bridgeObjectRelease();
    uint64_t v11 = v78;
    a1 = v80;
    goto LABEL_27;
  }
  __break(1u);
}

void sub_10001C7C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B3570();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v10 = a1;
    id v11 = [v10 isOnByActionSetUniqueIdentifier];
    sub_1000B2F60();
    sub_100008148(0, (unint64_t *)&qword_1000D51E0);
    sub_10001E524((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = sub_1000B3F30();

    uint64_t v13 = sub_10001CC28(v12);
    swift_bridgeObjectRelease();
    unint64_t v23 = v13;
    sub_100004210(&qword_1000D51C0);
    sub_1000B4190();
  }
  else
  {
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_100017618(v6, (uint64_t)qword_1000DCC18);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v15 = sub_1000B3550();
    os_log_type_t v16 = sub_1000B42C0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v21 = a3;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      unint64_t v23 = v20;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v22 = sub_10002A68C(0x6174536863746566, 0xEC00000029286574, (uint64_t *)&v23);
      sub_1000B4400();
      *(_WORD *)(v17 + 12) = 2112;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v22 = v18;
        sub_1000B4400();
      }
      else
      {
        uint64_t v22 = 0;
        sub_1000B4400();
        uint64_t v18 = 0;
      }
      *uint64_t v19 = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s Failed to get current action set state with error: %@", (uint8_t *)v17, 0x16u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    unint64_t v23 = sub_100019CE4((uint64_t)_swiftEmptyArrayStorage);
    sub_100004210(&qword_1000D51C0);
    sub_1000B4190();
  }
}

uint64_t sub_10001CC28(uint64_t a1)
{
  uint64_t v62 = sub_100004210(&qword_1000D51E8);
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100004210(&qword_1000D51F0);
  __chkstk_darwin(v60);
  id v59 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B2F60();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v57 = (char *)v48 - v8;
  uint64_t v56 = sub_100004210(&qword_1000D51F8);
  uint64_t v9 = __chkstk_darwin(v56);
  unint64_t v55 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v54 = (char *)v48 - v11;
  uint64_t v64 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_100004210(&qword_1000D5200);
    uint64_t v12 = (char *)sub_1000B46D0();
  }
  else
  {
    uint64_t v12 = (char *)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v13 = *(void *)(v64 + 64);
  uint64_t v50 = v64 + 64;
  uint64_t v14 = -1 << *(unsigned char *)(v64 + 32);
  if (-v14 < 64) {
    uint64_t v15 = ~(-1 << -(char)v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v13;
  v48[1] = -1 << *(unsigned char *)(v64 + 32);
  int64_t v49 = (unint64_t)(63 - v14) >> 6;
  uint64_t v53 = v63 + 16;
  uint64_t v67 = v63 + 32;
  uint64_t v17 = v12 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v65 = 0;
  uint64_t v51 = (char *)&type metadata for Any + 8;
  uint64_t v58 = v7;
  uint64_t v52 = v12;
  uint64_t v19 = (uint64_t)v55;
  while (1)
  {
    if (v16)
    {
      uint64_t v66 = (v16 - 1) & v16;
      unint64_t v21 = __clz(__rbit64(v16)) | (v65 << 6);
      goto LABEL_28;
    }
    int64_t v22 = v65 + 1;
    if (__OFADD__(v65, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v22 >= v49) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v50 + 8 * v22);
    int64_t v24 = v65 + 1;
    if (!v23)
    {
      int64_t v24 = v65 + 2;
      if (v65 + 2 >= v49) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v50 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v65 + 3;
        if (v65 + 3 >= v49) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v50 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v65 + 4;
          if (v65 + 4 >= v49) {
            goto LABEL_37;
          }
          unint64_t v23 = *(void *)(v50 + 8 * v24);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_27:
    int64_t v65 = v24;
    uint64_t v66 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_28:
    uint64_t v27 = v63;
    uint64_t v26 = v64;
    uint64_t v28 = *(void *)(v63 + 72);
    uint64_t v29 = (uint64_t)v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v63 + 16))(v54, *(void *)(v64 + 48) + v28 * v21, v4);
    id v30 = *(void **)(*(void *)(v26 + 56) + 8 * v21);
    uint64_t v31 = v56;
    *(void *)(v29 + *(int *)(v56 + 48)) = v30;
    sub_1000200B4(v29, v19);
    uint64_t v32 = *(int *)(v31 + 48);
    unint64_t v33 = v61;
    unint64_t v34 = &v61[*(int *)(v62 + 48)];
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
    v35(v61, v19, v4);
    *(void *)&v69[0] = *(void *)(v19 + v32);
    sub_100008148(0, (unint64_t *)&qword_1000D51E0);
    id v36 = v30;
    swift_dynamicCast();
    uint64_t v37 = v59;
    uint64_t v38 = &v59[*(int *)(v60 + 48)];
    v35(v59, (uint64_t)v33, v4);
    sub_10002011C(v34, v38);
    uint64_t v39 = v57;
    v35(v57, (uint64_t)v37, v4);
    sub_10002011C(v38, v69);
    uint64_t v40 = v58;
    v35(v58, (uint64_t)v39, v4);
    sub_10002011C(v69, v68);
    uint64_t v12 = v52;
    sub_10001E524((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1000B3F50();
    uint64_t v41 = -1 << v12[32];
    unint64_t v42 = result & ~v41;
    unint64_t v43 = v42 >> 6;
    if (((-1 << v42) & ~*(void *)&v17[8 * (v42 >> 6)]) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v42) & ~*(void *)&v17[8 * (v42 >> 6)])) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v44 = 0;
      unint64_t v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v46 = v43 == v45;
        if (v43 == v45) {
          unint64_t v43 = 0;
        }
        v44 |= v46;
        uint64_t v47 = *(void *)&v17[8 * v43];
      }
      while (v47 == -1);
      unint64_t v20 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(void *)&v17[(v20 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v20;
    v35((char *)(*((void *)v12 + 6) + v20 * v28), (uint64_t)v40, v4);
    uint64_t result = (uint64_t)sub_10002011C(v68, (_OWORD *)(*((void *)v12 + 7) + 32 * v20));
    ++*((void *)v12 + 2);
    unint64_t v16 = v66;
  }
  int64_t v25 = v65 + 5;
  if (v65 + 5 >= v49)
  {
LABEL_37:
    swift_release();
    sub_100017A14();
    return (uint64_t)v12;
  }
  unint64_t v23 = *(void *)(v50 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v65 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v49) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v50 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_10001D304()
{
  uint64_t v1 = sub_1000B3320();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v42 - v6;
  uint64_t v50 = sub_1000B31A0();
  unint64_t v8 = *(void *)(v50 - 8);
  uint64_t v9 = __chkstk_darwin(v50);
  int64_t v49 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v42 - v11;
  uint64_t v13 = v0 + *(int *)(type metadata accessor for WidgetTileInfo() + 56);
  uint64_t v14 = *(void **)v13;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 8);
  unint64_t v45 = _swiftEmptyArrayStorage;
  switch(v15)
  {
    case 1:
      id v42 = v14;
      id v19 = [v42 services];
      sub_100008148(0, &qword_1000D5020);
      unint64_t v20 = sub_1000B4100();

      id v59 = _swiftEmptyArrayStorage;
      unint64_t v44 = v20;
      if (v20 >> 62) {
        goto LABEL_45;
      }
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v21) {
        goto LABEL_46;
      }
      break;
    case 2:
      id v18 = v14;
      id v37 = [v18 actions];
      sub_100008148(0, &qword_1000D5070);
      sub_100020130();
      uint64_t v38 = sub_1000B41E0();

      sub_100019728(v38);
      unint64_t v45 = v39;
      swift_bridgeObjectRelease();
      goto LABEL_40;
    case 3:
    case 4:
      return v45;
    default:
      id v16 = v14;
      sub_1000B43B0();
      uint64_t v17 = ServiceKind.widgetRelevantCharacteristic.getter();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v50);
      id v18 = v16;
      unint64_t v45 = (void *)sub_100020198((uint64_t)v17, (uint64_t)v18);
      swift_bridgeObjectRelease();

LABEL_40:
      return v45;
  }
  while (1)
  {
    uint64_t v22 = 0;
    unint64_t v43 = v44 + 32;
    uint64_t v47 = (void (**)(unint64_t, uint64_t))(v8 + 8);
    unint64_t v48 = v44 & 0xC000000000000001;
    uint64_t v55 = v2 + 32;
    uint64_t v56 = v2 + 16;
    uint64_t v54 = v2 + 8;
    uint64_t v46 = v21;
LABEL_7:
    id v23 = v48 ? (id)sub_1000B45E0() : *(id *)(v43 + 8 * v22);
    id v57 = v23;
    BOOL v24 = __OFADD__(v22, 1);
    uint64_t v25 = v22 + 1;
    if (!v24) {
      break;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1000B46A0();
    if (!v21)
    {
LABEL_46:

      swift_bridgeObjectRelease();
      uint64_t v40 = _swiftEmptyArrayStorage;
      goto LABEL_47;
    }
  }
  uint64_t v51 = v25;
  unint64_t v8 = (unint64_t)v49;
  sub_1000B43B0();
  uint64_t v26 = ServiceKind.widgetRelevantCharacteristic.getter();
  (*v47)(v8, v50);
  unint64_t v58 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v27 = v26[7];
  uint64_t v52 = (char *)(v26 + 7);
  uint64_t v28 = 1 << *((unsigned char *)v26 + 32);
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  else {
    uint64_t v29 = -1;
  }
  unint64_t v30 = v29 & v27;
  int64_t v53 = (unint64_t)(v28 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  while (1)
  {
    if (v30)
    {
      unint64_t v32 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      unint64_t v33 = v32 | (v31 << 6);
      goto LABEL_35;
    }
    int64_t v34 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v34 >= v53) {
      break;
    }
    unint64_t v35 = *(void *)&v52[8 * v34];
    ++v31;
    if (!v35)
    {
      int64_t v31 = v34 + 1;
      if (v34 + 1 >= v53) {
        break;
      }
      unint64_t v35 = *(void *)&v52[8 * v31];
      if (!v35)
      {
        int64_t v31 = v34 + 2;
        if (v34 + 2 >= v53) {
          break;
        }
        unint64_t v35 = *(void *)&v52[8 * v31];
        if (!v35)
        {
          int64_t v31 = v34 + 3;
          if (v34 + 3 >= v53) {
            break;
          }
          unint64_t v35 = *(void *)&v52[8 * v31];
          if (!v35)
          {
            int64_t v31 = v34 + 4;
            if (v34 + 4 >= v53) {
              break;
            }
            unint64_t v35 = *(void *)&v52[8 * v31];
            if (!v35)
            {
              int64_t v36 = v34 + 5;
              if (v36 >= v53) {
                break;
              }
              unint64_t v35 = *(void *)&v52[8 * v36];
              if (!v35)
              {
                while (1)
                {
                  int64_t v31 = v36 + 1;
                  if (__OFADD__(v36, 1)) {
                    goto LABEL_44;
                  }
                  if (v31 >= v53) {
                    goto LABEL_6;
                  }
                  unint64_t v35 = *(void *)&v52[8 * v31];
                  ++v36;
                  if (v35) {
                    goto LABEL_34;
                  }
                }
              }
              int64_t v31 = v36;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v30 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v31 << 6);
LABEL_35:
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v7, v26[6] + *(void *)(v2 + 72) * v33, v1);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    unint64_t v8 = sub_1000B43C0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    if (v8)
    {
      sub_1000B40E0();
      if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000B4130();
      }
      sub_1000B4150();
      sub_1000B4120();
    }
  }
LABEL_6:
  swift_release();
  unint64_t v8 = v58;

  swift_bridgeObjectRelease();
  sub_100071378(v8);
  uint64_t v22 = v51;
  if (v51 != v46) {
    goto LABEL_7;
  }

  swift_bridgeObjectRelease();
  uint64_t v40 = v59;
LABEL_47:
  unint64_t v45 = v40;
  swift_bridgeObjectRelease();
  return v45;
}

void sub_10001D994(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B3570();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v10 = a1;
    id v11 = [v10 valueByCharacteristicUniqueIdentifier];
    sub_1000B2F60();
    sub_10001E524((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = sub_1000B3F30();

    unint64_t v22 = v12;
    sub_100004210(&qword_1000D51C0);
    sub_1000B4190();
  }
  else
  {
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_100017618(v6, (uint64_t)qword_1000DCC18);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v14 = sub_1000B3550();
    os_log_type_t v15 = sub_1000B42C0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v20 = a3;
      uint64_t v16 = swift_slowAlloc();
      id v18 = (void *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      unint64_t v22 = v19;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v21 = sub_10002A68C(0x6174536863746566, 0xEC00000029286574, (uint64_t *)&v22);
      sub_1000B4400();
      *(_WORD *)(v16 + 12) = 2112;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v21 = v17;
        sub_1000B4400();
      }
      else
      {
        uint64_t v21 = 0;
        sub_1000B4400();
        uint64_t v17 = 0;
      }
      *id v18 = v17;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s Failed to get current characteristic values with error: %@", (uint8_t *)v16, 0x16u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    unint64_t v22 = sub_100019CE4((uint64_t)_swiftEmptyArrayStorage);
    sub_100004210(&qword_1000D51C0);
    sub_1000B4190();
  }
}

void sub_10001DDD0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void *sub_10001DE5C()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for WidgetTileInfo() + 56);
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = &_swiftEmptySetSingleton;
  switch(*(unsigned char *)(v1 + 8))
  {
    case 1:
      id v8 = v2;
      id v9 = [v8 services];
      sub_100008148(0, &qword_1000D5020);
      unint64_t v10 = sub_1000B4100();

      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_1000B46A0();
        if (!v11) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v11) {
          goto LABEL_21;
        }
      }
      if (v11 < 1)
      {
        __break(1u);
        JUMPOUT(0x10001E13CLL);
      }
      for (uint64_t i = 0; i != v11; ++i)
      {
        if ((v10 & 0xC000000000000001) != 0) {
          id v13 = (id)sub_1000B45E0();
        }
        else {
          id v13 = *(id *)(v10 + 8 * i + 32);
        }
        uint64_t v14 = v13;
        id v15 = [v13 accessory];

        if (v15)
        {
          sub_1000B40E0();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1000B4130();
          }
          sub_1000B4150();
          sub_1000B4120();
        }
      }
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_100017BCC((unint64_t)_swiftEmptyArrayStorage);

      swift_bridgeObjectRelease();
      return (void *)v19;
    case 2:
    case 4:
      return v3;
    case 3:
      sub_100004210(&qword_1000D5190);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000B52D0;
      *(void *)(inited + 32) = v2;
      unint64_t v21 = inited;
      sub_1000B4120();
      id v17 = v2;
      uint64_t v3 = (void *)sub_100017BCC(v21);
      swift_bridgeObjectRelease();
      return v3;
    default:
      id v4 = v2;
      id v5 = [v4 accessory];
      if (v5)
      {
        id v6 = v5;
        sub_100004210(&qword_1000D5190);
        uint64_t v7 = swift_initStackObject();
        *(_OWORD *)(v7 + 16) = xmmword_1000B52D0;
        *(void *)(v7 + 32) = v6;
        unint64_t v20 = v7;
        sub_1000B4120();
        uint64_t v3 = (void *)sub_100017BCC(v20);
        swift_bridgeObjectRelease();
      }

      return v3;
  }
}

void sub_10001E150()
{
  sub_1000B2F60();
  sub_10001E524((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_1000B3F60();
  uint64_t v1 = (int *)type metadata accessor for WidgetTileInfo();
  swift_bridgeObjectRetain();
  sub_1000B4070();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v1[7] + 8))
  {
    sub_1000B48E0(1u);
    swift_bridgeObjectRetain();
    sub_1000B4070();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000B48E0(0);
  }
  swift_bridgeObjectRetain();
  sub_1000B4070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1000B4070();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1000B3C40();
  swift_release();
  sub_1000B48E0(*(unsigned char *)(v0 + v1[13]));
  uint64_t v2 = v0 + v1[14];
  uint64_t v3 = *(void **)v2;
  switch(*(unsigned char *)(v2 + 8))
  {
    case 1:
      Swift::UInt v4 = 2;
      goto LABEL_9;
    case 2:
      Swift::UInt v4 = 3;
      goto LABEL_9;
    case 3:
      Swift::UInt v4 = 4;
      goto LABEL_9;
    case 4:
      sub_1000B48D0(0);
      return;
    default:
      Swift::UInt v4 = 1;
LABEL_9:
      sub_1000B48D0(v4);
      id v5 = v3;
      sub_1000B43A0();

      return;
  }
}

uint64_t sub_10001E3A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B2F60();
  Swift::UInt v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

Swift::Int sub_10001E410()
{
  return sub_1000B48F0();
}

Swift::Int sub_10001E454()
{
  return sub_1000B48F0();
}

uint64_t sub_10001E494()
{
  return sub_10001E524(&qword_1000D5178, (void (*)(uint64_t))type metadata accessor for WidgetTileInfo);
}

uint64_t sub_10001E4DC()
{
  return sub_10001E524((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10001E524(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001E56C()
{
  uint64_t v1 = sub_1000B3350();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  Swift::UInt v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_1000B45C0(156);
  v33._countAndFlagsBits = 0xD000000000000014;
  v33._object = (void *)0x80000001000B8D50;
  sub_1000B4090(v33);
  sub_1000B2F60();
  sub_10001E524(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  v34._countAndFlagsBits = sub_1000B4800();
  sub_1000B4090(v34);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0x203A656D616E202CLL;
  v35._object = (void *)0xE800000000000000;
  sub_1000B4090(v35);
  id v5 = (int *)type metadata accessor for WidgetTileInfo();
  id v6 = (uint64_t *)(v0 + v5[6]);
  uint64_t v7 = *v6;
  id v8 = (void *)v6[1];
  swift_bridgeObjectRetain();
  v36._countAndFlagsBits = v7;
  v36._object = v8;
  sub_1000B4090(v36);
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = 0x616C70736964202CLL;
  v37._object = (void *)0xEF203A656D614E79;
  sub_1000B4090(v37);
  id v9 = (uint64_t *)(v0 + v5[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000B3340();
  uint64_t v10 = sub_1000B3330();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v38._countAndFlagsBits = v10;
  v38._object = v12;
  sub_1000B4090(v38);
  swift_bridgeObjectRelease();
  v39._countAndFlagsBits = 0x614E6D6F6F72202CLL;
  v39._object = (void *)0xEC000000203A656DLL;
  sub_1000B4090(v39);
  uint64_t v13 = v9[1];
  if (v13) {
    uint64_t v14 = *v9;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v13) {
    id v15 = (void *)v9[1];
  }
  else {
    id v15 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v40._countAndFlagsBits = v14;
  v40._object = v15;
  sub_1000B4090(v40);
  swift_bridgeObjectRelease();
  v41._object = (void *)0x80000001000B8D70;
  v41._countAndFlagsBits = 0xD000000000000010;
  sub_1000B4090(v41);
  v30[0] = sub_1000A3998();
  v30[1] = v16;
  sub_100004210(&qword_1000D5198);
  v42._countAndFlagsBits = sub_1000B4040();
  sub_1000B4090(v42);
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = 0x79536E6F6369202CLL;
  v43._object = (void *)0xEE00203A6C6F626DLL;
  sub_1000B4090(v43);
  id v17 = (uint64_t *)(v0 + v5[8]);
  uint64_t v18 = *v17;
  uint64_t v19 = (void *)v17[1];
  swift_bridgeObjectRetain();
  v44._countAndFlagsBits = v18;
  v44._object = v19;
  sub_1000B4090(v44);
  swift_bridgeObjectRelease();
  v45._countAndFlagsBits = 0xD000000000000017;
  v45._object = (void *)0x80000001000B8D90;
  sub_1000B4090(v45);
  unint64_t v20 = (uint64_t *)(v0 + v5[9]);
  uint64_t v21 = *v20;
  unint64_t v22 = (void *)v20[1];
  swift_bridgeObjectRetain();
  v46._countAndFlagsBits = v21;
  v46._object = v22;
  sub_1000B4090(v46);
  swift_bridgeObjectRelease();
  v47._countAndFlagsBits = 0x636165527369202CLL;
  v47._object = (void *)0xEF203A656C626168;
  sub_1000B4090(v47);
  if (*(unsigned char *)(v0 + v5[13])) {
    v23._countAndFlagsBits = 1702195828;
  }
  else {
    v23._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + v5[13])) {
    BOOL v24 = (void *)0xE400000000000000;
  }
  else {
    BOOL v24 = (void *)0xE500000000000000;
  }
  v23._object = v24;
  sub_1000B4090(v23);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = 0x697463417369202CLL;
  v48._object = (void *)0xEF203A6465746176;
  sub_1000B4090(v48);
  char v25 = sub_10001A910();
  BOOL v26 = (v25 & 1) == 0;
  if (v25) {
    v27._countAndFlagsBits = 1702195828;
  }
  else {
    v27._countAndFlagsBits = 0x65736C6166;
  }
  if (v26) {
    uint64_t v28 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v28 = (void *)0xE400000000000000;
  }
  v27._object = v28;
  sub_1000B4090(v27);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_10001E99C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001F204(a1, a2, a3, (void *)*v3, &qword_1000D5270, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001E9D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001F204(a1, a2, a3, (void *)*v3, &qword_1000D5240, (uint64_t (*)(void))&type metadata accessor for UUID);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001EA14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001EB28(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001EA34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001F204(a1, a2, a3, (void *)*v3, &qword_1000D5278, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001EA70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001ECB4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001EA90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001EEFC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001EAB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001F204(a1, a2, a3, (void *)*v3, &qword_1000D5238, (uint64_t (*)(void))type metadata accessor for HomeEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001EAEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001F204(a1, a2, a3, (void *)*v3, &qword_1000D5298, (uint64_t (*)(void))&type metadata accessor for EndpointPath);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001EB28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004210(&qword_1000D5208);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_10001EC94(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10001F204(a1, a2, a3, a4, &qword_1000D5278, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_10001ECB4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004210(&qword_1000D5260);
  uint64_t v10 = *(void *)(sub_100004210(&qword_1000D5268) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100004210(&qword_1000D5268) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_10001EEFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004210(&qword_1000D5248);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_10001F05C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004210(&qword_1000D5250);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_100004210(&qword_1000D5258);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_10001F204(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004210(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  BOOL v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

void (*sub_10001F44C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10001F568(v6, a2, a3);
  return sub_10001F4B4;
}

void (*sub_10001F4B8(void (**a1)(id *), unint64_t a2, uint64_t a3))(void *)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10001F5F0(v6, a2, a3);
  return sub_10001F4B4;
}

void sub_10001F520(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_10001F568(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_1000B45E0();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for WidgetTileInfo.ContentType;
  }
  __break(1u);
  return result;
}

void destroy for WidgetTileInfo.ContentType(id *a1)
{
}

void (*sub_10001F5F0(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_1000B45E0();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s10HomeWidget14WidgetTileInfoV11ContentTypeOwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001F670(void *a1, char a2, void *a3, char a4)
{
  switch(a2)
  {
    case 1:
      if (a4 != 1) {
        goto LABEL_15;
      }
      goto LABEL_11;
    case 2:
      if (a4 != 2) {
        goto LABEL_15;
      }
      goto LABEL_11;
    case 3:
      if (a4 != 3) {
        goto LABEL_15;
      }
      goto LABEL_11;
    case 4:
      if (a4 != 4 || a3 != 0) {
        goto LABEL_15;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4)
      {
LABEL_15:
        uint64_t result = 0;
      }
      else
      {
LABEL_11:
        sub_100008148(0, &qword_1000D51A0);
        id v8 = a1;
        id v9 = a3;
        char v10 = sub_1000B4390();

        uint64_t result = v10 & 1;
      }
      break;
  }
  return result;
}

uint64_t sub_10001F774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetTileInfo();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v80 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v79 = (char *)&v77 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v77 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v82 = (uint64_t)&v77 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v84 = (char *)&v77 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v86 = (uint64_t)&v77 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v81 = (char *)&v77 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v83 = (uint64_t)&v77 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v77 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  BOOL v26 = (char *)&v77 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v77 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  unint64_t v32 = (char *)&v77 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  Swift::String v35 = (char *)&v77 - v34;
  __chkstk_darwin(v33);
  Swift::String v37 = (char *)&v77 - v36;
  char v38 = sub_1000B2F40();
  sub_100007FDC(a1, (uint64_t)v37);
  sub_100007FDC(a2, (uint64_t)v35);
  if ((v38 & 1) == 0)
  {
    sub_100008040((uint64_t)v37);
    sub_100008040((uint64_t)v35);
    sub_100007FDC(a1, (uint64_t)v32);
    sub_100007FDC(a2, (uint64_t)v29);
    uint64_t v45 = (uint64_t)v81;
    goto LABEL_9;
  }
  uint64_t v78 = (int *)v4;
  uint64_t v39 = *(int *)(v4 + 24);
  uint64_t v40 = *(void *)&v37[v39];
  uint64_t v41 = *(void *)&v37[v39 + 8];
  Swift::String v42 = &v35[v39];
  if (v40 == *(void *)v42 && v41 == *((void *)v42 + 1))
  {
    sub_100008040((uint64_t)v37);
    sub_100008040((uint64_t)v35);
    sub_100007FDC(a1, (uint64_t)v32);
    sub_100007FDC(a2, (uint64_t)v29);
    uint64_t v45 = (uint64_t)v81;
    goto LABEL_11;
  }
  char v44 = sub_1000B4830();
  sub_100008040((uint64_t)v37);
  sub_100008040((uint64_t)v35);
  sub_100007FDC(a1, (uint64_t)v32);
  sub_100007FDC(a2, (uint64_t)v29);
  uint64_t v45 = (uint64_t)v81;
  if ((v44 & 1) == 0)
  {
LABEL_9:
    sub_100008040((uint64_t)v29);
    sub_100008040((uint64_t)v32);
LABEL_20:
    uint64_t v53 = (uint64_t)v79;
    uint64_t v52 = (uint64_t)v80;
    sub_100007FDC(a1, (uint64_t)v26);
    sub_100007FDC(a2, (uint64_t)v23);
    goto LABEL_21;
  }
LABEL_11:
  Swift::String v46 = v78;
  uint64_t v47 = v78[7];
  Swift::String v48 = &v32[v47];
  uint64_t v49 = *(void *)&v32[v47 + 8];
  uint64_t v50 = &v29[v47];
  uint64_t v51 = *((void *)v50 + 1);
  if (!v49)
  {
    swift_bridgeObjectRetain();
    sub_100008040((uint64_t)v29);
    sub_100008040((uint64_t)v32);
    if (!v51) {
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  if (!v51)
  {
    swift_bridgeObjectRetain();
    sub_100008040((uint64_t)v29);
    sub_100008040((uint64_t)v32);
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (*(void *)v48 != *(void *)v50 || v49 != v51)
  {
    char v61 = sub_1000B4830();
    swift_bridgeObjectRetain();
    sub_100008040((uint64_t)v29);
    sub_100008040((uint64_t)v32);
    swift_bridgeObjectRelease();
    sub_100007FDC(a1, (uint64_t)v26);
    sub_100007FDC(a2, (uint64_t)v23);
    uint64_t v53 = (uint64_t)v79;
    uint64_t v52 = (uint64_t)v80;
    if (v61) {
      goto LABEL_28;
    }
LABEL_21:
    sub_100008040((uint64_t)v26);
    sub_100008040((uint64_t)v23);
    uint64_t v54 = v83;
    sub_100007FDC(a1, v83);
    sub_100007FDC(a2, v45);
    uint64_t v56 = (uint64_t)v84;
    uint64_t v55 = (uint64_t)v85;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  sub_100008040((uint64_t)v29);
  sub_100008040((uint64_t)v32);
  swift_bridgeObjectRelease();
LABEL_17:
  sub_100007FDC(a1, (uint64_t)v26);
  sub_100007FDC(a2, (uint64_t)v23);
  uint64_t v53 = (uint64_t)v79;
  uint64_t v52 = (uint64_t)v80;
LABEL_28:
  uint64_t v62 = v46[8];
  uint64_t v63 = *(void *)&v26[v62];
  uint64_t v64 = *(void *)&v26[v62 + 8];
  int64_t v65 = &v23[v62];
  if (v63 != *(void *)v65 || v64 != *((void *)v65 + 1))
  {
    char v66 = sub_1000B4830();
    sub_100008040((uint64_t)v26);
    sub_100008040((uint64_t)v23);
    uint64_t v54 = v83;
    sub_100007FDC(a1, v83);
    sub_100007FDC(a2, v45);
    uint64_t v56 = (uint64_t)v84;
    uint64_t v55 = (uint64_t)v85;
    if (v66) {
      goto LABEL_32;
    }
LABEL_22:
    sub_100008040(v54);
    sub_100008040(v45);
    uint64_t v57 = v86;
    sub_100007FDC(a1, v86);
    sub_100007FDC(a2, v56);
    goto LABEL_23;
  }
  sub_100008040((uint64_t)v26);
  sub_100008040((uint64_t)v23);
  uint64_t v54 = v83;
  sub_100007FDC(a1, v83);
  sub_100007FDC(a2, v45);
  uint64_t v56 = (uint64_t)v84;
  uint64_t v55 = (uint64_t)v85;
LABEL_32:
  uint64_t v67 = v46[9];
  uint64_t v68 = *(void *)(v54 + v67);
  uint64_t v69 = *(void *)(v54 + v67 + 8);
  uint64_t v70 = (void *)(v45 + v67);
  if (v68 == *v70 && v69 == v70[1])
  {
    sub_100008040(v54);
    sub_100008040(v45);
    uint64_t v57 = v86;
    sub_100007FDC(a1, v86);
    sub_100007FDC(a2, v56);
    goto LABEL_36;
  }
  char v71 = sub_1000B4830();
  uint64_t v72 = v54;
  char v73 = v71;
  sub_100008040(v72);
  sub_100008040(v45);
  uint64_t v57 = v86;
  sub_100007FDC(a1, v86);
  sub_100007FDC(a2, v56);
  if ((v73 & 1) == 0)
  {
LABEL_23:
    sub_100008040(v57);
    sub_100008040(v56);
    uint64_t v58 = v82;
    sub_100007FDC(a1, v82);
    sub_100007FDC(a2, v55);
LABEL_24:
    sub_100008040(v55);
    sub_100008040(v58);
    sub_100007FDC(a1, v53);
    sub_100007FDC(a2, v52);
    goto LABEL_25;
  }
LABEL_36:
  char v74 = sub_1000B3C30();
  sub_100008040(v57);
  sub_100008040(v56);
  uint64_t v58 = v82;
  sub_100007FDC(a1, v82);
  sub_100007FDC(a2, v55);
  if ((v74 & 1) == 0) {
    goto LABEL_24;
  }
  int v75 = *(unsigned __int8 *)(v58 + v46[13]);
  sub_100008040(v58);
  int v76 = *(unsigned __int8 *)(v55 + v46[13]);
  sub_100008040(v55);
  sub_100007FDC(a1, v53);
  sub_100007FDC(a2, v52);
  if (v75 == v76)
  {
    char v59 = sub_10001F670(*(void **)(v53 + v46[14]), *(unsigned char *)(v53 + v46[14] + 8), *(void **)(v52 + v46[14]), *(unsigned char *)(v52 + v46[14] + 8));
    goto LABEL_26;
  }
LABEL_25:
  char v59 = 0;
LABEL_26:
  sub_100008040(v53);
  sub_100008040(v52);
  return v59 & 1;
}

unint64_t sub_10001FE98()
{
  unint64_t result = qword_1000D51B0;
  if (!qword_1000D51B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D51B0);
  }
  return result;
}

void sub_10001FEEC(uint64_t a1)
{
  sub_10001BC48(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10001FEF8(uint64_t a1, uint64_t a2)
{
  return sub_10002001C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10001D994);
}

uint64_t sub_10001FF10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001FF20()
{
  return swift_release();
}

uint64_t sub_10001FF28(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001FF70()
{
  uint64_t v1 = sub_100004210(&qword_1000D51C0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100020004(uint64_t a1, uint64_t a2)
{
  return sub_10002001C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10001C7C4);
}

uint64_t sub_10002001C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(sub_100004210(&qword_1000D51C0) - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7);
}

uint64_t sub_1000200B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D51F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_10002011C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100020130()
{
  unint64_t result = qword_1000D5078;
  if (!qword_1000D5078)
  {
    sub_100008148(255, &qword_1000D5070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5078);
  }
  return result;
}

uint64_t sub_100020198(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1000B3320();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - v8;
  unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v23 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v26 = v4 + 32;
  uint64_t v27 = v4 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v4 + 8;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (v13)
  {
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v17 = v16 | (v15 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v9, *(void *)(v29 + 48) + *(void *)(v4 + 72) * v17, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
    uint64_t v21 = sub_1000B43C0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    if (v21)
    {
      sub_1000B40E0();
      if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000B4130();
      }
      sub_1000B4150();
      uint64_t result = sub_1000B4120();
    }
  }
  int64_t v18 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v18 >= v24) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v18);
  ++v15;
  if (v19) {
    goto LABEL_21;
  }
  int64_t v15 = v18 + 1;
  if (v18 + 1 >= v24) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v15);
  if (v19) {
    goto LABEL_21;
  }
  int64_t v15 = v18 + 2;
  if (v18 + 2 >= v24) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v15);
  if (v19) {
    goto LABEL_21;
  }
  int64_t v15 = v18 + 3;
  if (v18 + 3 >= v24) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v15);
  if (v19)
  {
LABEL_21:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_22;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v24)
  {
LABEL_26:
    swift_release();
    return v30;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v24) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetTileInfo.ContentType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for WidgetTileInfo.ContentType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t initializeWithTake for WidgetTileInfo.ContentType(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for WidgetTileInfo.ContentType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetTileInfo.ContentType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetTileInfo.ContentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100020604(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_100020620(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetTileInfo.ContentType()
{
  return &type metadata for WidgetTileInfo.ContentType;
}

unint64_t sub_10002064C()
{
  unint64_t result = qword_1000D5280;
  if (!qword_1000D5280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5280);
  }
  return result;
}

uint64_t sub_1000206A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004210(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100020704(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v90 = a1;
  uint64_t v3 = sub_1000B3E20();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v92 = v3;
  uint64_t v93 = v4;
  __chkstk_darwin(v3);
  uint64_t v91 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000B3320();
  uint64_t v6 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v8 = (char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B31A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v95 = (int *)((char *)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __chkstk_darwin(v11);
  int64_t v15 = (char *)v84 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  int64_t v18 = (char *)v84 - v17;
  __chkstk_darwin(v16);
  int64_t v20 = (char *)v84 - v19;
  uint64_t v96 = sub_1000B3CB0();
  uint64_t v21 = (int *)type metadata accessor for WidgetTileInfo();
  if ((v1[v21[19] + 8] & 1) == 0)
  {
    uint64_t v2 = v1;
    if ((sub_10001A910() & 1) == 0)
    {
      uint64_t v26 = sub_1000B3C70();
      swift_release();
      return v26;
    }
  }
  uint64_t v22 = &v2[v21[14]];
  int v23 = v22[8];
  if ((v23 - 2) < 3) {
    return v96;
  }
  uint64_t v25 = *(void **)v22;
  uint64_t v88 = v6;
  if (!v23)
  {
    id v89 = v25;
    goto LABEL_14;
  }
  id v87 = v25;
  id v27 = [v87 services];
  sub_100008148(0, &qword_1000D5020);
  unint64_t v28 = sub_1000B4100();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_1000B46A0();
    swift_bridgeObjectRelease();
    if (v83) {
      goto LABEL_10;
    }
LABEL_70:
    swift_bridgeObjectRelease();
    id v63 = v87;
    goto LABEL_71;
  }
  if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_70;
  }
LABEL_10:
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v29 = (id)sub_1000B45E0();
  }
  else
  {
    if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_74:
      swift_once();
      goto LABEL_25;
    }
    id v29 = *(id *)(v28 + 32);
  }
  id v89 = v29;
  swift_bridgeObjectRelease();

LABEL_14:
  if ((v2[v21[13]] & 1) == 0)
  {
    uint64_t v26 = sub_1000B3CC0();
    swift_release();

    return v26;
  }
  sub_1000B43B0();
  uint64_t v85 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  uint64_t v86 = v10 + 104;
  v85(v18, enum case for ServiceKind.thermostat(_:), v9);
  uint64_t v30 = sub_10001E524((unint64_t *)&qword_1000D5068, (void (*)(uint64_t))&type metadata accessor for ServiceKind);
  sub_1000B40C0();
  v84[1] = v30;
  sub_1000B40C0();
  if (v99 == v97 && v100 == v98) {
    LODWORD(v87) = 1;
  }
  else {
    LODWORD(v87) = sub_1000B4830();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v18, v9);
  v31(v20, v9);
  if ((v87 & 1) == 0)
  {
    sub_1000B43B0();
    v85((char *)v95, enum case for ServiceKind.heaterCooler(_:), v9);
    sub_1000B40C0();
    sub_1000B40C0();
    if (v99 == v97 && v100 == v98)
    {
      swift_bridgeObjectRelease_n();
      v31((char *)v95, v9);
      v31(v15, v9);
LABEL_37:
      uint64_t v52 = v88;
      uint64_t v53 = *(void (**)(char *, void, uint64_t))(v88 + 104);
      uint64_t v54 = v94;
      v53(v8, enum case for CharacteristicKind.targetHeaterCoolerState(_:), v94);
      uint64_t v55 = v21[15];
      id v56 = v89;
      uint64_t v57 = v52;
      uint64_t v95 = (int *)sub_100008520((uint64_t)v8, *(void *)&v2[v55]);
      LOBYTE(v52) = v58;
      char v59 = *(void (**)(char *, uint64_t))(v57 + 8);
      v59(v8, v54);
      if (v52) {
        goto LABEL_40;
      }
      v53(v8, enum case for CharacteristicKind.currentHeaterCoolerState(_:), v54);
      uint64_t v88 = sub_100008520((uint64_t)v8, *(void *)&v2[v55]);
      char v61 = v60;
      v59(v8, v54);
      if (v61) {
        goto LABEL_40;
      }
      v53(v8, enum case for CharacteristicKind.active(_:), v54);
      char v62 = _sSo9HMServiceC10HomeWidgetE9BOOLValue3for4withSbSg0B9DataModel18CharacteristicKindO_SDy10Foundation4UUIDVypGSgtF_0((uint64_t)v8, *(void *)&v2[v55]);
      v59(v8, v54);
      if (v62 == 2) {
        goto LABEL_40;
      }
      if ((v62 & 1) == 0)
      {
        uint64_t v26 = sub_1000B3C70();
        swift_release();

        goto LABEL_63;
      }
      if (qword_1000D4EA8 != -1) {
        swift_once();
      }
      uint64_t v69 = sub_1000B3570();
      sub_100017618(v69, (uint64_t)qword_1000DCC18);
      uint64_t v70 = sub_1000B3550();
      os_log_type_t v71 = sub_1000B42C0();
      BOOL v72 = os_log_type_enabled(v70, v71);
      uint64_t v73 = v88;
      if (v72)
      {
        uint64_t v74 = swift_slowAlloc();
        *(_DWORD *)uint64_t v74 = 134218240;
        uint64_t v99 = v95;
        sub_1000B4400();
        *(_WORD *)(v74 + 12) = 2048;
        uint64_t v99 = (int *)v73;
        sub_1000B4400();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "heaterCooler: targetHeaterCoolerState: %ld currentHeaterCoolerState: %ld", (uint8_t *)v74, 0x16u);
        swift_slowDealloc();
      }

      if (v73 == 2)
      {
        uint64_t v79 = v91;
        sub_1000B3DF0();
        char v80 = sub_1000B3DE0();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v79, v92);
        if ((v80 & 1) == 0)
        {
          id v77 = [self systemOrangeColor];
          goto LABEL_67;
        }
      }
      else
      {
        if (v73 != 3)
        {
LABEL_40:

          return v96;
        }
        int v75 = v91;
        sub_1000B3DF0();
        char v76 = sub_1000B3DE0();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v75, v92);
        if ((v76 & 1) == 0)
        {
          id v77 = [self systemCyanColor];
LABEL_67:
          id v82 = v77;
          uint64_t v81 = sub_1000B3CF0();
          goto LABEL_68;
        }
      }
      uint64_t v81 = sub_1000B3CB0();
LABEL_68:
      uint64_t v26 = v81;

      goto LABEL_62;
    }
    char v51 = sub_1000B4830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31((char *)v95, v9);
    v31(v15, v9);
    if (v51) {
      goto LABEL_37;
    }
    id v63 = v89;
LABEL_71:

    return v96;
  }
  uint64_t v32 = v88;
  uint64_t v33 = *(void (**)(char *, void, uint64_t))(v88 + 104);
  uint64_t v34 = v94;
  v33(v8, enum case for CharacteristicKind.targetHeatingCoolingMode(_:), v94);
  uint64_t v35 = v21[15];
  id v36 = v89;
  uint64_t v95 = (int *)sub_100008520((uint64_t)v8, *(void *)&v2[v35]);
  char v38 = v37;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v32 + 8);
  v39(v8, v34);
  if (v38)
  {

    return v96;
  }
  v33(v8, enum case for CharacteristicKind.currentHeatingCooling(_:), v34);
  uint64_t v21 = (int *)sub_100008520((uint64_t)v8, *(void *)&v2[v35]);
  char v41 = v40;
  v39(v8, v34);
  uint64_t v2 = v36;
  if (v41) {
    goto LABEL_41;
  }
  if (qword_1000D4EA8 != -1) {
    goto LABEL_74;
  }
LABEL_25:
  uint64_t v42 = sub_1000B3570();
  sub_100017618(v42, (uint64_t)qword_1000DCC18);
  Swift::String v43 = sub_1000B3550();
  os_log_type_t v44 = sub_1000B42C0();
  BOOL v45 = os_log_type_enabled(v43, v44);
  Swift::String v46 = v95;
  if (v45)
  {
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 134218240;
    uint64_t v99 = v46;
    sub_1000B4400();
    *(_WORD *)(v47 + 12) = 2048;
    uint64_t v99 = v21;
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "thermostat: targetHeatingCoolingMode: %ld currentHeatingCooling: %ld", (uint8_t *)v47, 0x16u);
    swift_slowDealloc();
  }

  if (!v46)
  {
    if (v21)
    {
      uint64_t v64 = v91;
      sub_1000B3DF0();
      char v65 = sub_1000B3DE0();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v64, v92);
      if ((v65 & 1) == 0)
      {
        uint64_t v66 = sub_1000B3CC0();
LABEL_61:
        uint64_t v26 = v66;

LABEL_62:
        swift_release();
        goto LABEL_63;
      }
LABEL_49:
      uint64_t v66 = sub_1000B3CB0();
      goto LABEL_61;
    }
    uint64_t v26 = sub_1000B3C70();
    swift_release();

LABEL_63:
    uint64_t v96 = v26;
    return v26;
  }
  if (v21 == (int *)1)
  {
    uint64_t v67 = v91;
    sub_1000B3DF0();
    char v68 = sub_1000B3DE0();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v67, v92);
    if ((v68 & 1) == 0)
    {
      id v50 = [self systemOrangeColor];
      goto LABEL_60;
    }
    goto LABEL_49;
  }
  if (v21 == (int *)2)
  {
    Swift::String v48 = v91;
    sub_1000B3DF0();
    char v49 = sub_1000B3DE0();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v48, v92);
    if ((v49 & 1) == 0)
    {
      id v50 = [self systemCyanColor];
LABEL_60:
      id v78 = v50;
      uint64_t v66 = sub_1000B3CF0();
      goto LABEL_61;
    }
    goto LABEL_49;
  }
LABEL_41:

  return v96;
}

unint64_t sub_100021324()
{
  unint64_t result = qword_1000D52A8;
  if (!qword_1000D52A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D52A8);
  }
  return result;
}

unint64_t sub_10002137C()
{
  unint64_t result = qword_1000D52B0;
  if (!qword_1000D52B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D52B0);
  }
  return result;
}

uint64_t sub_1000213D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000213EC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10002143C()
{
  unint64_t result = qword_1000D52B8;
  if (!qword_1000D52B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D52B8);
  }
  return result;
}

uint64_t sub_100021490()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1000214A0()
{
  uint64_t v0 = sub_1000B2DC0();
  sub_100022374(v0, qword_1000DCAB8);
  sub_100017618(v0, (uint64_t)qword_1000DCAB8);
  return sub_1000B2D90();
}

uint64_t sub_100021504()
{
  uint64_t v0 = sub_100004210(&qword_1000D53A0);
  sub_100022374(v0, qword_1000DCAD0);
  uint64_t v1 = sub_100017618(v0, (uint64_t)qword_1000DCAD0);
  sub_1000B2A20();
  uint64_t v2 = sub_1000B2A30();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1000215BC(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_1000B2E90();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_1000B3570();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_1000216D8, 0, 0);
}

uint64_t sub_1000216D8()
{
  BOOL v45 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_100017618(v3, (uint64_t)qword_1000DCC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_retain_n();
  uint64_t v5 = sub_1000B3550();
  os_log_type_t v6 = sub_1000B42C0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = v0[10];
  uint64_t v8 = v0[11];
  uint64_t v10 = v0[9];
  if (v7)
  {
    uint64_t v43 = v0[11];
    os_log_type_t type = v6;
    uint64_t v12 = v0[7];
    uint64_t v11 = v0[8];
    uint64_t v13 = v0[6];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    v0[2] = sub_10002A68C(0x286D726F66726570, 0xE900000000000029, &v44);
    sub_1000B4400();
    *(_WORD *)(v14 + 12) = 2080;
    sub_1000B2990();
    sub_1000222B4();
    uint64_t v15 = sub_1000B4800();
    uint64_t v42 = v10;
    unint64_t v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v0[3] = sub_10002A68C(v15, v17, &v44);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v5, type, "OpenURLInHomeIntent %s - url is %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v43, v42);
  }
  else
  {
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v19 = v0[7];
  uint64_t v18 = v0[8];
  uint64_t v20 = v0[6];
  sub_1000B2990();
  uint64_t v21 = sub_1000B2E70();
  uint64_t v23 = v22;
  int64_t v24 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v24(v18, v20);
  uint64_t v25 = sub_1000B4010();
  if (v23)
  {
    if (v21 == v25 && v23 == v26) {
      goto LABEL_9;
    }
    char v30 = sub_1000B4830();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_14;
    }
    if (v21 == sub_1000B4010() && v23 == v39)
    {
LABEL_9:
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
LABEL_15:
      uint64_t v31 = v0[8];
      uint64_t v32 = v0[6];
      id v33 = [self sharedInstance];
      sub_1000B2990();
      sub_1000B2E30(v34);
      id v27 = v35;
      v24(v31, v32);
      id v36 = [v33 openURL:v27];

      goto LABEL_16;
    }
    char v40 = sub_1000B4830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v40) {
      goto LABEL_15;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000B4010();
    swift_bridgeObjectRelease();
  }
  id v27 = sub_1000B3550();
  os_log_type_t v28 = sub_1000B42A0();
  if (os_log_type_enabled(v27, v28))
  {
    id v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "OpenURLInHomeIntent - URL does not appear to be a Home app URL", v29, 2u);
    swift_slowDealloc();
  }
LABEL_16:

  sub_1000B2970();
  swift_task_dealloc();
  swift_task_dealloc();
  char v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_100021BDC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D4E10 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B2DC0();
  uint64_t v3 = sub_100017618(v2, (uint64_t)qword_1000DCAB8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100021C84()
{
  return 1;
}

uint64_t sub_100021C94@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D4E18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100004210(&qword_1000D53A0);
  uint64_t v3 = sub_100017618(v2, (uint64_t)qword_1000DCAD0);

  return sub_10002230C(v3, a1);
}

uint64_t sub_100021D10(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100021DB0;
  return sub_1000215BC(a1, v4);
}

uint64_t sub_100021DB0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100021EA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100021F9C();
  *a1 = result;
  return result;
}

uint64_t sub_100021ECC(uint64_t a1)
{
  unint64_t v2 = sub_10002143C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t type metadata accessor for OpenURLInHomeIntentFailSafe()
{
  return self;
}

ValueMetadata *type metadata accessor for OpenURLInHomeIntent()
{
  return &type metadata for OpenURLInHomeIntent;
}

unint64_t sub_100021F40()
{
  unint64_t result = qword_1000D5360;
  if (!qword_1000D5360)
  {
    sub_100004B80(&qword_1000D5368);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5360);
  }
  return result;
}

uint64_t sub_100021F9C()
{
  uint64_t v0 = sub_1000B2BB0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004210(&qword_1000D5370);
  __chkstk_darwin(v4 - 8);
  os_log_type_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004210(&qword_1000D5378);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000B2DC0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_100004210(&qword_1000D5388);
  sub_1000B2D90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  uint64_t v15 = sub_1000B2E90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  uint64_t v16 = sub_1000B2960();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  return sub_1000B29F0();
}

unint64_t sub_1000222B4()
{
  unint64_t result = qword_1000D5398;
  if (!qword_1000D5398)
  {
    sub_1000B2E90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5398);
  }
  return result;
}

uint64_t sub_10002230C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D53A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100022374(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1000223D8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1000B46A0())
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)sub_1000B45E0() : *(id *)(a1 + 8 * v4);
      os_log_type_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      uint64_t v8 = sub_100033EF8(v5);

      uint64_t v9 = *(void *)(v8 + 16);
      int64_t v10 = v3[2];
      int64_t v11 = v10 + v9;
      if (__OFADD__(v10, v9)) {
        goto LABEL_29;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v11 <= v3[3] >> 1)
      {
        if (*(void *)(v8 + 16)) {
          goto LABEL_19;
        }
      }
      else
      {
        if (v10 <= v11) {
          int64_t v13 = v10 + v9;
        }
        else {
          int64_t v13 = v10;
        }
        uint64_t v3 = (void *)sub_1000753BC(isUniquelyReferenced_nonNull_native, v13, 1, (unint64_t)v3);
        if (*(void *)(v8 + 16))
        {
LABEL_19:
          uint64_t v14 = v3[2];
          uint64_t v15 = (v3[3] >> 1) - v14;
          uint64_t v16 = *(void *)(sub_1000B2F60() - 8);
          uint64_t v17 = *(void *)(v16 + 72);
          if (v15 < v9) {
            goto LABEL_31;
          }
          unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
          uint64_t v19 = (char *)v3 + v18 + v17 * v14;
          unint64_t v20 = v8 + v18;
          uint64_t v21 = v17 * v9;
          uint64_t v22 = &v19[v21];
          unint64_t v23 = v20 + v21;
          if (v20 < (unint64_t)v22 && (unint64_t)v19 < v23)
          {
            uint64_t result = sub_1000B46E0();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v9)
          {
            uint64_t v25 = v3[2];
            BOOL v26 = __OFADD__(v25, v9);
            uint64_t v27 = v25 + v9;
            if (v26) {
              goto LABEL_32;
            }
            v3[2] = v27;
          }
          goto LABEL_5;
        }
      }
      if (v9) {
        goto LABEL_30;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      ++v4;
      if (v7 == v2) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_35:
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

Swift::Int *maxNumberOfTiles.unsafeMutableAddressor()
{
  return &maxNumberOfTiles;
}

uint64_t sub_100022650()
{
  return sub_10002E7C0(&qword_1000D53B0, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t type metadata accessor for AccessoryAndSceneEntity()
{
  uint64_t result = qword_1000D54C0;
  if (!qword_1000D54C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000226E4()
{
  return sub_10002E7C0(&qword_1000D53B8, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_10002272C()
{
  return sub_10002E7C0(&qword_1000D53C0, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

unint64_t sub_100022778()
{
  unint64_t result = qword_1000D53C8;
  if (!qword_1000D53C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D53C8);
  }
  return result;
}

void *sub_1000227CC()
{
  return &protocol witness table for UUID;
}

uint64_t sub_1000227D8()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = sub_1000B4000();
  [v0 initWithSuiteName:v1];

  uint64_t result = sub_1000B35B0();
  qword_1000D53A8 = result;
  return result;
}

uint64_t sub_100022874@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000B3570();
  uint64_t v3 = *(void (**)(void, void, void))(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B2E90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  int64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - v11;
  id v13 = [self defaultManager];
  id v14 = [v13 URLsForDirectory:13 inDomains:1];

  uint64_t v15 = sub_1000B4100();
  if (*(void *)(v15 + 16))
  {
    id v14 = v3;
    uint64_t v30 = v7;
    uint64_t v3 = *(void (**)(void, void, void))(v7 + 16);
    v3(v12, v15 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    swift_bridgeObjectRelease();
    sub_1000B2E40();
    id v29 = v12;
    if (qword_1000D4EB8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v16 = sub_100017618(v2, (uint64_t)qword_1000DCC48);
  (*((void (**)(char *, uint64_t, uint64_t))v14 + 2))(v5, v16, v2);
  v3(v10, a1, v6);
  uint64_t v17 = sub_1000B3550();
  unint64_t v18 = (void (**)(void, uint64_t))v14;
  uint64_t v19 = v5;
  os_log_type_t v20 = sub_1000B42C0();
  if (os_log_type_enabled(v17, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v28 = v2;
    uint64_t v32 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v31 = sub_10002A68C(0x617461446F6D6564, 0xED000029284C5255, &v32);
    sub_1000B4400();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v27 = v19;
    sub_10002E7C0((unint64_t *)&qword_1000D5398, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v23 = sub_1000B4800();
    uint64_t v31 = sub_10002A68C(v23, v24, &v32);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v30 + 8);
    v25(v10, v6);
    _os_log_impl((void *)&_mh_execute_header, v17, v20, "%s demoDataURL: (%s)", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (**)(char *, uint64_t))v18)[1](v27, v28);
  }
  else
  {

    uint64_t v25 = *(void (**)(char *, uint64_t))(v30 + 8);
    v25(v10, v6);
    (*((void (**)(char *, uint64_t))v14 + 1))(v19, v2);
  }
  return ((uint64_t (*)(char *, uint64_t))v25)(v29, v6);
}

uint64_t sub_100022D0C()
{
  sub_100004210(&qword_1000D5590);
  swift_getKeyPath();
  uint64_t result = sub_1000B2C10();
  qword_1000DCAE8 = result;
  return result;
}

uint64_t sub_100022D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v1 = sub_100004210(&qword_1000D5548);
  __chkstk_darwin(v1 - 8);
  uint64_t v22 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v3 - 8);
  uint64_t v21 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B2DC0();
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  __chkstk_darwin(v5);
  unint64_t v18 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B3350();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B3FE0();
  __chkstk_darwin(v11 - 8);
  sub_1000B3FD0();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  sub_1000B3FC0(v24);
  type metadata accessor for AccessoryAndSceneEntity();
  type metadata accessor for WidgetTileInfo();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000B3340();
  uint64_t v12 = sub_1000B3330();
  id v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v25._countAndFlagsBits = v12;
  v25._object = v14;
  sub_1000B3FB0(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  sub_1000B3FC0(v26);
  sub_1000B2DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v21, 1, 1, v20);
  swift_bridgeObjectRetain();
  uint64_t v15 = v22;
  sub_1000B2AD0();
  uint64_t v16 = sub_1000B2AE0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  return sub_1000B2B00();
}

uint64_t sub_1000230E0()
{
  uint64_t v0 = sub_1000B2C40();
  sub_100022374(v0, qword_1000DCAF0);
  sub_100017618(v0, (uint64_t)qword_1000DCAF0);
  return sub_1000B2C20();
}

uint64_t sub_100023144@<X0>(void *a1@<X8>)
{
  if (qword_1000D4E28 != -1) {
    swift_once();
  }
  *a1 = qword_1000DCAE8;

  return swift_retain();
}

uint64_t sub_1000231B0()
{
  return sub_10002E7C0((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_1000231F8()
{
  return sub_10002E7C0(&qword_1000D53D0, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

Swift::Int sub_100023240()
{
  return sub_1000B48F0();
}

void sub_10002330C()
{
}

Swift::Int sub_1000233C0()
{
  return sub_1000B48F0();
}

uint64_t sub_100023488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1000B2F40() & 1) == 0 || (sub_1000B2F40() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 24);

  return sub_10001F774(a1 + v6, a2 + v6);
}

uint64_t sub_100023504()
{
  return sub_10002E7C0(&qword_1000D53D8, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_10002354C()
{
  return sub_10002E7C0(&qword_1000D53E0, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_100023594()
{
  return sub_10002E7C0(&qword_1000D53E8, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_1000235DC()
{
  return sub_10002E7C0(&qword_1000D53F0, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_100023628@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D4E30 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B2C40();
  uint64_t v3 = sub_100017618(v2, (uint64_t)qword_1000DCAF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1000236D0()
{
  return sub_10001FF28(&qword_1000D53F8, &qword_1000D5400);
}

uint64_t sub_10002370C(uint64_t a1)
{
  uint64_t v2 = sub_10002E7C0(qword_1000D5428, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100023788()
{
  return sub_10002E7C0((unint64_t *)&unk_1000D5408, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_1000237D4(uint64_t a1)
{
  uint64_t v2 = sub_10002E7C0(&qword_1000D53F0, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100023850()
{
  sub_1000B45C0(65);
  v2._object = (void *)0x80000001000B9150;
  v2._countAndFlagsBits = 0xD00000000000001BLL;
  sub_1000B4090(v2);
  type metadata accessor for AccessoryAndSceneEntity();
  type metadata accessor for WidgetTileInfo();
  v3._countAndFlagsBits = sub_1000B2F30();
  sub_1000B4090(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0xD000000000000022;
  v4._object = (void *)0x80000001000B9170;
  sub_1000B4090(v4);
  v5._countAndFlagsBits = sub_1000B2F30();
  sub_1000B4090(v5);
  swift_bridgeObjectRelease();
  sub_1000B2E80();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002396C()
{
  uint64_t v1 = sub_1000B31A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = v2;
  __chkstk_darwin(v1);
  unint64_t v18 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100004210(&qword_1000D55A0);
  uint64_t v5 = *(void *)(v2 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000B5190;
  unint64_t v8 = v7 + v6;
  uint64_t v9 = *(void (**)(unint64_t, void, uint64_t))(v3 + 104);
  v9(v8, enum case for ServiceKind.garageDoorOpener(_:), v1);
  v9(v8 + v5, enum case for ServiceKind.door(_:), v1);
  v9(v8 + 2 * v5, enum case for ServiceKind.window(_:), v1);
  v9(v8 + 3 * v5, enum case for ServiceKind.windowCovering(_:), v1);
  v9(v8 + 4 * v5, enum case for ServiceKind.lockMechanism(_:), v1);
  int64_t v10 = sub_100042050(v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v11 = v0 + *(int *)(type metadata accessor for AccessoryAndSceneEntity() + 24);
  uint64_t v12 = v11 + *(int *)(type metadata accessor for WidgetTileInfo() + 56);
  if (*(unsigned char *)(v12 + 8))
  {
    swift_bridgeObjectRelease();
    char v13 = 0;
  }
  else
  {
    id v14 = *(id *)v12;
    uint64_t v15 = (uint64_t)v18;
    sub_1000B43B0();
    char v13 = sub_100023BF0(v15, (uint64_t)v10);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v1);
  }
  return v13 & 1;
}

uint64_t sub_100023BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000B31A0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_10002E7C0(&qword_1000D55A8, (void (*)(uint64_t))&type metadata accessor for ServiceKind),
        uint64_t v7 = sub_1000B3F50(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    id v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_10002E7C0((unint64_t *)&unk_1000D5BE0, (void (*)(uint64_t))&type metadata accessor for ServiceKind);
      char v15 = sub_1000B3F90();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100023E04(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5518);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1000206A0(a1, (uint64_t)&v9 - v6, &qword_1000D5518);
  sub_1000206A0((uint64_t)v7, (uint64_t)v5, &qword_1000D5518);
  sub_1000B29A0();
  return sub_100017B5C((uint64_t)v7, &qword_1000D5518);
}

uint64_t sub_100023EE0(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1000B2F60();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = *(void *)(type metadata accessor for AccessoryAndSceneEntity() - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  type metadata accessor for HomeEntity();
  v2[13] = swift_task_alloc();
  v2[14] = sub_100004210(&qword_1000D5008);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  uint64_t v4 = sub_1000B3570();
  v2[19] = v4;
  v2[20] = *(void *)(v4 - 8);
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_1000240EC, 0, 0);
}

uint64_t sub_1000240EC()
{
  uint64_t v80 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = sub_100017618(v3, (uint64_t)qword_1000DCC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1000B3550();
  os_log_type_t v6 = sub_1000B42C0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v79 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    *(void *)(v0 + 16) = sub_10002A68C(0x7365697469746E65, 0xEE00293A726F6628, (uint64_t *)&v79);
    sub_1000B4400();
    *(_WORD *)(v7 + 12) = 2080;
    if (sub_1000B2C00())
    {
      uint64_t v8 = *(void *)(v0 + 144);
      uint64_t v9 = *(void *)(v0 + 104);
      uint64_t v11 = *(void *)(v0 + 56);
      uint64_t v10 = *(void *)(v0 + 64);
      swift_getKeyPath();
      sub_10002AD5C();
      sub_1000B2A10();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v9, v11);
      sub_10002E594(v9, (uint64_t (*)(void))type metadata accessor for HomeEntity);
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = 1;
    }
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v71 = *(void *)(v0 + 152);
    uint64_t v73 = *(void *)(v0 + 168);
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 64) + 56))(*(void *)(v0 + 144), v12, 1, *(void *)(v0 + 56));
    uint64_t v17 = sub_1000B4040();
    *(void *)(v0 + 24) = sub_10002A68C(v17, v18, (uint64_t *)&v79);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000B4110();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = sub_10002A68C(v19, v21, (uint64_t *)&v79);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s HomeID:%s identifiers:%s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v73, v71);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 168);
    uint64_t v15 = *(void *)(v0 + 152);
    swift_release_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  }
  if (qword_1000D4E20 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000B35C0();
  swift_release();
  if (*(unsigned char *)(v0 + 184) != 1)
  {
    uint64_t v47 = sub_1000B2C00();
    uint64_t v48 = *(void *)(v0 + 128);
    if (v47)
    {
      uint64_t v49 = *(void *)(v0 + 104);
      uint64_t v50 = *(void *)(v0 + 56);
      uint64_t v51 = *(void *)(v0 + 64);
      swift_getKeyPath();
      sub_10002AD5C();
      sub_1000B2A10();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v48, v49, v50);
      sub_10002E594(v49, (uint64_t (*)(void))type metadata accessor for HomeEntity);
      uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
      v52(v48, 0, 1, v50);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v48, 1, v50) != 1)
      {
        sub_100017B5C(*(void *)(v0 + 128), &qword_1000D5008);
        BOOL v53 = 0;
LABEL_41:
        if (sub_1000B2C00())
        {
          uint64_t v57 = *(void *)(v0 + 120);
          uint64_t v58 = *(void *)(v0 + 104);
          uint64_t v59 = *(void *)(v0 + 56);
          uint64_t v60 = *(void *)(v0 + 64);
          swift_getKeyPath();
          sub_10002AD5C();
          sub_1000B2A10();
          swift_release();
          swift_release();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v57, v58, v59);
          sub_10002E594(v58, (uint64_t (*)(void))type metadata accessor for HomeEntity);
          uint64_t v61 = 0;
        }
        else
        {
          uint64_t v61 = 1;
        }
        uint64_t v62 = *(void *)(v0 + 40);
        v52(*(void *)(v0 + 120), v61, 1, *(void *)(v0 + 56));
        id v78 = (char *)&dword_1000D5530 + dword_1000D5530;
        id v63 = (void *)swift_task_alloc();
        *(void *)(v0 + 176) = v63;
        *id v63 = v0;
        v63[1] = sub_100024BA8;
        uint64_t v64 = *(void *)(v0 + 120);
        return ((uint64_t (*)(BOOL, uint64_t, uint64_t))v78)(v53, v64, v62);
      }
    }
    else
    {
      uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 64) + 56);
      v52(*(void *)(v0 + 128), 1, 1, *(void *)(v0 + 56));
    }
    uint64_t v56 = *(void *)(v0 + 40);
    sub_100017B5C(*(void *)(v0 + 128), &qword_1000D5008);
    BOOL v53 = *(void *)(v56 + 16) != 0;
    goto LABEL_41;
  }
  if (qword_1000D4E58 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 40);
  uint64_t v23 = qword_1000DCB70;
  uint64_t v79 = _swiftEmptyArrayStorage;
  uint64_t v24 = *(void *)(qword_1000DCB70 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v70 = v24;
  if (v24)
  {
    uint64_t v25 = 0;
    uint64_t v26 = *(void *)(v0 + 80);
    uint64_t v27 = *(void *)(v0 + 64);
    uint64_t v72 = *(void *)(v26 + 72);
    unint64_t v65 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    unint64_t v69 = v23 + v65;
    uint64_t v28 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
    id v77 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    uint64_t v67 = v27;
    int v75 = (void (**)(uint64_t, uint64_t))(v27 + 8);
    os_log_t log = (os_log_t)(v27 + 32);
    uint64_t v66 = _swiftEmptyArrayStorage;
    uint64_t v68 = v22;
    do
    {
      uint64_t v74 = v25;
      sub_10002E52C(v69 + v25 * v72, *(void *)(v0 + 96), (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v32 = *(void *)(v22 + 16);
      if (v32)
      {
        unint64_t v33 = *(void *)(v0 + 40)
            + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
        uint64_t v34 = *(void *)(v67 + 72);
        uint64_t v35 = *(void (**)(uint64_t, unint64_t, uint64_t))(v67 + 16);
        swift_bridgeObjectRetain();
        while (1)
        {
          uint64_t v36 = *(void *)(v0 + 136);
          uint64_t v37 = *(void *)(v0 + 56);
          v35(v36, v33, v37);
          id v29 = *v28;
          (*v28)(v36, 0, 1, v37);
          if ((*v77)(v36, 1, v37) == 1) {
            break;
          }
          uint64_t v38 = *(void *)(v0 + 72);
          uint64_t v39 = *(void *)(v0 + 56);
          ((void (*)(uint64_t, void, uint64_t))log->isa)(v38, *(void *)(v0 + 136), v39);
          sub_10002E7C0(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v40 = sub_1000B3F90();
          (*v75)(v38, v39);
          if (v40)
          {
            uint64_t v42 = *(void *)(v0 + 88);
            uint64_t v41 = *(void *)(v0 + 96);
            swift_bridgeObjectRelease();
            sub_10002E754(v41, v42, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            uint64_t v43 = v66;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_10001EA34(0, v66[2] + 1, 1);
              uint64_t v43 = v79;
            }
            uint64_t v22 = v68;
            uint64_t v31 = v74;
            unint64_t v45 = v43[2];
            unint64_t v44 = v43[3];
            if (v45 >= v44 >> 1)
            {
              sub_10001EA34(v44 > 1, v45 + 1, 1);
              uint64_t v43 = v79;
            }
            uint64_t v46 = *(void *)(v0 + 88);
            v43[2] = v45 + 1;
            uint64_t v66 = v43;
            sub_10002E754(v46, (uint64_t)v43 + v65 + v45 * v72, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            goto LABEL_19;
          }
          v33 += v34;
          if (!--v32) {
            goto LABEL_17;
          }
        }
      }
      else
      {
        id v29 = *v28;
        swift_bridgeObjectRetain();
LABEL_17:
        v29(*(void *)(v0 + 136), 1, 1, *(void *)(v0 + 56));
      }
      uint64_t v30 = *(void *)(v0 + 96);
      swift_bridgeObjectRelease();
      sub_10002E594(v30, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v22 = v68;
      uint64_t v31 = v74;
LABEL_19:
      uint64_t v25 = v31 + 1;
    }
    while (v25 != v70);
  }
  else
  {
    uint64_t v66 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v54 = *(uint64_t (**)(void *))(v0 + 8);
  return v54(v66);
}

uint64_t sub_100024BA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*v1 + 120);
  uint64_t v3 = *v1;
  swift_task_dealloc();
  sub_100017B5C(v2, &qword_1000D5008);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v4(a1);
}

uint64_t sub_100024DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  type metadata accessor for HomeEntity();
  v4[9] = swift_task_alloc();
  v4[10] = sub_100004210(&qword_1000D5008);
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  return _swift_task_switch(sub_100024EAC, 0, 0);
}

uint64_t sub_100024EAC()
{
  uint64_t v27 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000B3570();
  sub_100017618(v1, (uint64_t)qword_1000DCC18);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1000B3550();
  os_log_type_t v3 = sub_1000B42C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315650;
    v0[2] = sub_10002A68C(0xD000000000000013, 0x80000001000B92C0, &v26);
    sub_1000B4400();
    *(_WORD *)(v4 + 12) = 2080;
    uint64_t v5 = sub_1000B2C00();
    uint64_t v6 = v0[12];
    if (v5)
    {
      uint64_t v7 = v0[9];
      swift_getKeyPath();
      sub_10002AD5C();
      sub_1000B2A10();
      swift_release();
      swift_release();
      uint64_t v8 = sub_1000B2F60();
      uint64_t v9 = *(void *)(v8 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
      sub_10002E594(v7, (uint64_t (*)(void))type metadata accessor for HomeEntity);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    else
    {
      uint64_t v10 = sub_1000B2F60();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    }
    unint64_t v11 = v0[7];
    uint64_t v12 = v0[6];
    uint64_t v13 = sub_1000B4040();
    v0[3] = sub_10002A68C(v13, v14, &v26);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v4 + 22) = 2080;
    swift_bridgeObjectRetain();
    v0[4] = sub_10002A68C(v12, v11, &v26);
    sub_1000B4400();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s Generating suggested entities in home %s matching with string %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }

  if (sub_1000B2C00())
  {
    uint64_t v15 = v0[11];
    uint64_t v16 = v0[9];
    swift_getKeyPath();
    sub_10002AD5C();
    sub_1000B2A10();
    swift_release();
    swift_release();
    uint64_t v17 = sub_1000B2F60();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v15, v16, v17);
    sub_10002E594(v16, (uint64_t (*)(void))type metadata accessor for HomeEntity);
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v17 = sub_1000B2F60();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = 1;
  }
  uint64_t v20 = v0[7];
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v18 + 56))(v0[11], v19, 1, v17);
  unint64_t v21 = (void *)swift_task_alloc();
  v0[13] = v21;
  void *v21 = v0;
  v21[1] = sub_1000253D0;
  uint64_t v22 = v0[11];
  uint64_t v23 = v0[5];
  uint64_t v24 = v0[6];
  return sub_100025534(v23, v22, v24, v20);
}

uint64_t sub_1000253D0()
{
  uint64_t v1 = *(void *)(*v0 + 88);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_100017B5C(v1, &qword_1000D5008);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_100025534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[25] = a3;
  v4[26] = a4;
  v4[23] = a1;
  v4[24] = a2;
  uint64_t v5 = sub_100004210(&qword_1000D5268);
  v4[27] = v5;
  v4[28] = *(void *)(v5 - 8);
  v4[29] = swift_task_alloc();
  uint64_t v6 = sub_1000B3570();
  v4[30] = v6;
  v4[31] = *(void *)(v6 - 8);
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  uint64_t v7 = sub_1000B2DC0();
  v4[34] = v7;
  v4[35] = *(void *)(v7 - 8);
  v4[36] = swift_task_alloc();
  uint64_t v8 = sub_100004210(&qword_1000D5528);
  v4[37] = v8;
  v4[38] = *(void *)(v8 - 8);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  uint64_t v9 = sub_1000B3350();
  v4[45] = v9;
  v4[46] = *(void *)(v9 - 8);
  v4[47] = swift_task_alloc();
  v4[48] = type metadata accessor for WidgetTileInfo();
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for AccessoryAndSceneEntity();
  v4[51] = v10;
  v4[52] = *(void *)(v10 - 8);
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  v4[56] = swift_task_alloc();
  v4[57] = swift_task_alloc();
  v4[58] = swift_task_alloc();
  uint64_t v11 = sub_1000B2F60();
  v4[59] = v11;
  v4[60] = *(void *)(v11 - 8);
  v4[61] = swift_task_alloc();
  v4[62] = swift_task_alloc();
  sub_100004210(&qword_1000D5380);
  v4[63] = swift_task_alloc();
  uint64_t v12 = sub_100004210(qword_1000D5450);
  v4[64] = v12;
  v4[65] = *(void *)(v12 - 8);
  v4[66] = swift_task_alloc();
  v4[67] = swift_task_alloc();
  return _swift_task_switch(sub_1000259A8, 0, 0);
}

uint64_t sub_1000259A8()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[68] = v4;
  v0[69] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  v0[70] = sub_10002E7C0(&qword_1000D53E8, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
  sub_1000B2A80();
  uint64_t v8 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_1000D5530 + dword_1000D5530);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[71] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100025B00;
  uint64_t v6 = v0[24];
  return v8(0, v6, 0);
}

uint64_t sub_100025B00(uint64_t a1)
{
  *(void *)(*(void *)v1 + 576) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100025C00, 0, 0);
}

uint64_t sub_100025C00()
{
  uint64_t v263 = v0;
  if (qword_1000D4EA8 != -1) {
    goto LABEL_167;
  }
  while (1)
  {
    uint64_t v1 = sub_100017618(*(void *)(v0 + 240), (uint64_t)qword_1000DCC18);
    swift_bridgeObjectRetain_n();
    v213 = (uint8_t *)v1;
    uint64_t v2 = sub_1000B3550();
    os_log_type_t v3 = sub_1000B42C0();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(void *)(v0 + 576);
    if (v4)
    {
      uint64_t v6 = swift_slowAlloc();
      v262[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315650;
      *(void *)(v0 + 160) = sub_10002A68C(0xD00000000000002ELL, 0x80000001000B91C0, v262);
      sub_1000B4400();
      *(_WORD *)(v6 + 12) = 2048;
      int64_t v7 = *(void *)(v5 + 16);
      *(void *)(v0 + 168) = v7;
      sub_1000B4400();
      *(_WORD *)(v6 + 22) = 2080;
      if (v7)
      {
        os_log_type_t v238 = v3;
        uint64_t v242 = v6;
        v245 = v2;
        uint64_t v8 = *(void *)(v0 + 576);
        uint64_t v9 = *(void *)(v0 + 480);
        uint64_t v10 = *(void *)(v0 + 416);
        uint64_t v254 = *(void *)(v0 + 408);
        char v260 = _swiftEmptyArrayStorage;
        sub_10001E9D8(0, v7, 0);
        uint64_t v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        uint64_t v250 = *(void *)(v10 + 72);
        uint64_t v12 = v260;
        do
        {
          uint64_t v13 = *(void *)(v0 + 496);
          uint64_t v14 = *(void *)(v0 + 464);
          uint64_t v15 = *(void *)(v0 + 472);
          sub_10002E52C(v11, v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v14 + *(int *)(v254 + 24), v15);
          sub_10002E594(v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10001E9D8(0, v12[2] + 1, 1);
            uint64_t v12 = v260;
          }
          unint64_t v17 = v12[2];
          unint64_t v16 = v12[3];
          if (v17 >= v16 >> 1)
          {
            sub_10001E9D8(v16 > 1, v17 + 1, 1);
            uint64_t v12 = v260;
          }
          uint64_t v18 = *(void *)(v0 + 496);
          uint64_t v19 = *(void *)(v0 + 472);
          v12[2] = v17 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v17, v18, v19);
          char v260 = v12;
          v11 += v250;
          --v7;
        }
        while (v7);
        uint64_t v6 = v242;
        uint64_t v2 = v245;
        os_log_type_t v3 = v238;
      }
      uint64_t v20 = sub_1000B4110();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 176) = sub_10002A68C(v20, v22, v262);
      sub_1000B4400();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s Starting with %ld entities: %s", (uint8_t *)v6, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v23 = *(void *)(v0 + 576);
    uint64_t v227 = *(void *)(v23 + 16);
    if (v227) {
      break;
    }
    swift_bridgeObjectRelease();
    id v217 = &_swiftEmptyDictionarySingleton;
LABEL_81:
    uint64_t v91 = *(void *)(v0 + 344);
    uint64_t v90 = *(void *)(v0 + 352);
    uint64_t v92 = *(void *)(v0 + 296);
    uint64_t v93 = *(void *)(v0 + 304);
    sub_1000B2D90();
    uint64_t v94 = swift_bridgeObjectRetain();
    sub_1000280F4(v94);
    swift_bridgeObjectRelease();
    sub_1000B2A70();
    uint64_t v247 = *(void *)(v93 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v247)(v91, v90, v92);
    int64_t v95 = sub_1000756A4(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    int64_t v97 = *(void *)(v95 + 16);
    unint64_t v96 = *(void *)(v95 + 24);
    int64_t v98 = v97 + 1;
    if (v97 >= v96 >> 1) {
LABEL_169:
    }
      int64_t v95 = sub_1000756A4(v96 > 1, v98, 1, v95);
    uint64_t v99 = *(void *)(v0 + 344);
    uint64_t v100 = *(void *)(v0 + 296);
    uint64_t v101 = *(void *)(v0 + 304);
    *(void *)(v95 + 16) = v98;
    uint64_t v103 = *(void (**)(unint64_t, uint64_t, uint64_t))(v101 + 32);
    v101 += 32;
    uint64_t v102 = v103;
    unint64_t v104 = (*(unsigned __int8 *)(v101 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 48);
    uint64_t v105 = *(void *)(v101 + 40);
    v103(v95 + v104 + v105 * v97, v99, v100);
    *(void *)(v0 + 152) = v95;
    swift_bridgeObjectRetain_n();
    uint64_t v106 = sub_10002AE00((uint64_t)v217);
    swift_bridgeObjectRelease();
    char v260 = v106;
    sub_10002B1C8(&v260);
    swift_bridgeObjectRelease();
    uint64_t v107 = v260[2];
    uint64_t v232 = v105;
    unint64_t v244 = v104;
    if (v107)
    {
      uint64_t v228 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 304) + 8);
      unint64_t v108 = v260 + 6;
      uint64_t v235 = v102;
      do
      {
        uint64_t v109 = *(void *)(v0 + 336);
        uint64_t v252 = *(void *)(v0 + 328);
        uint64_t v256 = *(void *)(v0 + 296);
        uint64_t v110 = *v108;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000B2D90();
        sub_1000280F4(v110);
        swift_bridgeObjectRelease();
        sub_1000B2A70();
        ((void (*)(uint64_t, uint64_t, uint64_t))v247)(v252, v109, v256);
        unint64_t v111 = *(void *)(v0 + 152);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v111 = sub_1000756A4(0, *(void *)(v111 + 16) + 1, 1, v111);
        }
        unint64_t v113 = *(void *)(v111 + 16);
        unint64_t v112 = *(void *)(v111 + 24);
        unint64_t v104 = v244;
        if (v113 >= v112 >> 1) {
          unint64_t v111 = sub_1000756A4(v112 > 1, v113 + 1, 1, v111);
        }
        uint64_t v114 = *(void *)(v0 + 328);
        uint64_t v115 = *(void *)(v0 + 336);
        uint64_t v116 = *(void *)(v0 + 296);
        *(void *)(v111 + 16) = v113 + 1;
        v235(v111 + v244 + v113 * v105, v114, v116);
        *(void *)(v0 + 152) = v111;
        (*v228)(v115, v116);
        v108 += 3;
        --v107;
      }
      while (v107);
    }
    uint64_t v117 = *(void *)(v0 + 264);
    uint64_t v118 = *(void *)(v0 + 240);
    uint64_t v119 = *(void *)(v0 + 248);
    swift_release();
    v257 = *(void (**)(uint64_t, uint8_t *, uint64_t))(v119 + 16);
    v257(v117, v213, v118);
    uint64_t v120 = *(void *)(v0 + 152);
    swift_bridgeObjectRetain_n();
    id v121 = sub_1000B3550();
    os_log_type_t v122 = sub_1000B42C0();
    if (os_log_type_enabled(v121, v122))
    {
      os_log_type_t v229 = v122;
      uint64_t v123 = swift_slowAlloc();
      uint64_t v259 = swift_slowAlloc();
      *(_DWORD *)uint64_t v123 = 136315650;
      *(void *)(v0 + 104) = sub_10002A68C(0xD00000000000002ELL, 0x80000001000B91C0, &v259);
      sub_1000B4400();
      *(_WORD *)(v123 + 12) = 2048;
      *(void *)(v0 + 112) = *(void *)(v120 + 16);
      sub_1000B4400();
      swift_bridgeObjectRelease();
      *(_WORD *)(v123 + 22) = 2080;
      int64_t v124 = *(void *)(v120 + 16);
      if (v124)
      {
        v222 = v121;
        uint64_t v125 = *(void *)(v0 + 304);
        v262[0] = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_10001EA14(0, v124, 0);
        ((void (*)(void, unint64_t, void))v247)(*(void *)(v0 + 320), v120 + v104, *(void *)(v0 + 296));
        sub_10002869C(&v260);
        uint64_t v236 = *(void (**)(void, void))(v125 + 8);
        v236(*(void *)(v0 + 320), *(void *)(v0 + 296));
        uint64_t v130 = v260;
        uint64_t v131 = v261;
        uint64_t v132 = v262[0];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10001EA14(0, *(void *)(v132 + 16) + 1, 1);
          uint64_t v132 = v262[0];
        }
        unint64_t v135 = *(void *)(v132 + 16);
        unint64_t v134 = *(void *)(v132 + 24);
        if (v135 >= v134 >> 1)
        {
          sub_10001EA14(v134 > 1, v135 + 1, 1);
          uint64_t v132 = v262[0];
        }
        *(void *)(v132 + 16) = v135 + 1;
        uint64_t v136 = v132 + 16 * v135;
        *(void *)(v136 + 32) = v130;
        *(void *)(v136 + 40) = v131;
        int64_t v137 = v124 - 1;
        if (v124 != 1)
        {
          uint64_t v204 = v120 + v232 + v104;
          do
          {
            ((void (*)(void, uint64_t, void))v247)(*(void *)(v0 + 320), v204, *(void *)(v0 + 296));
            sub_10002869C(&v260);
            v236(*(void *)(v0 + 320), *(void *)(v0 + 296));
            unint64_t v206 = v260;
            uint64_t v205 = v261;
            uint64_t v207 = v262[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_10001EA14(0, *(void *)(v207 + 16) + 1, 1);
              uint64_t v207 = v262[0];
            }
            unint64_t v209 = *(void *)(v207 + 16);
            unint64_t v208 = *(void *)(v207 + 24);
            if (v209 >= v208 >> 1)
            {
              sub_10001EA14(v208 > 1, v209 + 1, 1);
              uint64_t v207 = v262[0];
            }
            *(void *)(v207 + 16) = v209 + 1;
            uint64_t v210 = v207 + 16 * v209;
            *(void *)(v210 + 32) = v206;
            *(void *)(v210 + 40) = v205;
            v204 += v232;
            --v137;
            unint64_t v104 = v244;
          }
          while (v137);
        }
        swift_bridgeObjectRelease();
        id v121 = v222;
      }
      uint64_t v240 = *(void *)(v0 + 264);
      uint64_t v138 = *(void *)(v0 + 248);
      uint64_t v237 = *(void *)(v0 + 240);
      uint64_t v139 = sub_1000B4110();
      unint64_t v141 = v140;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 120) = sub_10002A68C(v139, v141, &v259);
      sub_1000B4400();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v121, v229, "%s Returning ItemCollection with allSections (%ld) items = %s", (uint8_t *)v123, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v215 = *(void (**)(uint64_t, uint64_t))(v138 + 8);
      v215(v240, v237);
    }
    else
    {
      uint64_t v126 = *(void *)(v0 + 264);
      uint64_t v127 = *(void *)(v0 + 240);
      uint64_t v128 = *(void *)(v0 + 248);

      swift_bridgeObjectRelease_n();
      unint64_t v215 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
      v215(v126, v127);
    }
    swift_beginAccess();
    uint64_t v142 = *(void *)(v0 + 152);
    int64_t v143 = *(void *)(v142 + 16);
    unint64_t v144 = _swiftEmptyArrayStorage;
    if (v143)
    {
      uint64_t v145 = *(void *)(v0 + 304);
      char v260 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10001EA90(0, v143, 0);
      uint64_t v146 = v142 + v104;
      id v147 = (void (**)(uint64_t, uint64_t))(v145 + 8);
      unint64_t v144 = v260;
      do
      {
        uint64_t v148 = *(void *)(v0 + 312);
        uint64_t v149 = *(void *)(v0 + 296);
        ((void (*)(uint64_t, uint64_t, uint64_t))v247)(v148, v146, v149);
        uint64_t v150 = *(void *)(sub_1000B2A50() + 16);
        swift_bridgeObjectRelease();
        (*v147)(v148, v149);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001EA90(0, v144[2] + 1, 1);
          unint64_t v144 = v260;
        }
        unint64_t v152 = v144[2];
        unint64_t v151 = v144[3];
        if (v152 >= v151 >> 1)
        {
          sub_10001EA90(v151 > 1, v152 + 1, 1);
          unint64_t v144 = v260;
        }
        v144[2] = v152 + 1;
        v144[v152 + 4] = v150;
        v146 += v232;
        --v143;
      }
      while (v143);
      swift_bridgeObjectRelease();
    }
    uint64_t v153 = v144[2];
    uint64_t v154 = 0;
    if (!v153)
    {
LABEL_115:
      uint64_t v157 = *(void *)(v0 + 256);
      uint64_t v158 = *(void *)(v0 + 240);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v257(v157, v213, v158);
      uint64_t v159 = *(void *)(v0 + 152);
      swift_bridgeObjectRetain_n();
      uint64_t v160 = sub_1000B3550();
      os_log_type_t v161 = sub_1000B42C0();
      if (os_log_type_enabled(v160, v161))
      {
        os_log_type_t v211 = v161;
        os_log_t log = v160;
        uint64_t v162 = swift_slowAlloc();
        v262[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v162 = 136315650;
        *(void *)(v0 + 144) = sub_10002A68C(0xD00000000000002ELL, 0x80000001000B91C0, v262);
        sub_1000B4400();
        *(_WORD *)(v162 + 12) = 2048;
        *(void *)(v0 + 136) = v154;
        sub_1000B4400();
        v213 = (uint8_t *)v162;
        *(_WORD *)(v162 + 22) = 2080;
        uint64_t v223 = *(void *)(v159 + 16);
        if (v223)
        {
          uint64_t v247 = *(void *)(v0 + 408);
          v241 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 480) + 16);
          uint64_t v219 = *(void *)(v0 + 224);
          uint64_t v258 = *(void *)(v0 + 480);
          swift_bridgeObjectRetain_n();
          uint64_t v163 = 0;
          uint64_t v164 = _swiftEmptyArrayStorage;
          while (1)
          {
            uint64_t v230 = v163;
            uint64_t v165 = sub_1000B2A50();
            int64_t v166 = *(void *)(v165 + 16);
            if (v166)
            {
              os_log_t v226 = v164;
              char v260 = _swiftEmptyArrayStorage;
              sub_10001E9D8(0, v166, 0);
              unint64_t v167 = v165
                   + ((*(unsigned __int8 *)(v219 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v219 + 80));
              v249 = *(void (**)(uint64_t, unint64_t, uint64_t))(v219 + 16);
              uint64_t v253 = *(void *)(v219 + 72);
              uint64_t v168 = v260;
              do
              {
                uint64_t v169 = *(void *)(v0 + 488);
                uint64_t v170 = *(void *)(v0 + 464);
                uint64_t v171 = *(void *)(v0 + 472);
                uint64_t v172 = *(void *)(v0 + 392);
                uint64_t v173 = *(void *)(v0 + 232);
                uint64_t v174 = *(void *)(v0 + 216);
                v249(v173, v167, v174);
                sub_1000B2920();
                sub_10002E52C(v170 + *(int *)(v247 + 24), v172, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
                sub_10002E594(v170, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
                (*v241)(v169, v172, v171);
                sub_10002E594(v172, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
                (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v173, v174);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_10001E9D8(0, v168[2] + 1, 1);
                  uint64_t v168 = v260;
                }
                unint64_t v176 = v168[2];
                unint64_t v175 = v168[3];
                if (v176 >= v175 >> 1)
                {
                  sub_10001E9D8(v175 > 1, v176 + 1, 1);
                  uint64_t v168 = v260;
                }
                uint64_t v177 = *(void *)(v0 + 488);
                uint64_t v178 = *(void *)(v0 + 472);
                v168[2] = v176 + 1;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v258 + 32))((unint64_t)v168+ ((*(unsigned __int8 *)(v258 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v258 + 80))+ *(void *)(v258 + 72) * v176, v177, v178);
                char v260 = v168;
                v167 += v253;
                --v166;
              }
              while (v166);
              swift_bridgeObjectRelease();
              uint64_t v164 = v226;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v168 = _swiftEmptyArrayStorage;
            }
            int64_t v95 = v168[2];
            int64_t v97 = v164[2];
            int64_t v98 = v97 + v95;
            if (__OFADD__(v97, v95)) {
              goto LABEL_164;
            }
            char v179 = swift_isUniquelyReferenced_nonNull_native();
            if ((v179 & 1) != 0 && v98 <= v164[3] >> 1)
            {
              if (!v168[2]) {
                goto LABEL_118;
              }
            }
            else
            {
              if (v97 <= v98) {
                int64_t v180 = v97 + v95;
              }
              else {
                int64_t v180 = v97;
              }
              uint64_t v164 = (void *)sub_1000753BC(v179, v180, 1, (unint64_t)v164);
              if (!v168[2])
              {
LABEL_118:
                if (v95) {
                  goto LABEL_165;
                }
                goto LABEL_119;
              }
            }
            uint64_t v181 = v164[2];
            if ((v164[3] >> 1) - v181 < v95) {
              goto LABEL_166;
            }
            unint64_t v182 = (*(unsigned __int8 *)(v258 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v258 + 80);
            uint64_t v183 = *(void *)(v258 + 72);
            v184 = (char *)v164 + v182 + v183 * v181;
            if ((char *)v168 + v182 < &v184[v183 * v95] && v184 < (char *)v168 + v182 + v183 * v95)
            {
              swift_bridgeObjectRelease();
              return sub_1000B46E0();
            }
            swift_arrayInitWithCopy();
            if (v95)
            {
              uint64_t v186 = v164[2];
              BOOL v86 = __OFADD__(v186, v95);
              unint64_t v96 = v186 + v95;
              if (v86)
              {
                __break(1u);
                goto LABEL_169;
              }
              v164[2] = v96;
            }
LABEL_119:
            uint64_t v163 = v230 + 1;
            swift_bridgeObjectRelease();
            if (v230 + 1 == v223)
            {
              swift_bridgeObjectRelease_n();
              break;
            }
          }
        }
        uint64_t v191 = *(void *)(v0 + 256);
        uint64_t v192 = *(void *)(v0 + 240);
        uint64_t v193 = sub_1000B4110();
        unint64_t v195 = v194;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 128) = sub_10002A68C(v193, v195, v262);
        sub_1000B4400();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v211, "%s Returning %ld entities: %s", v213, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v189 = v191;
        uint64_t v190 = v192;
      }
      else
      {
        uint64_t v187 = *(void *)(v0 + 256);
        uint64_t v188 = *(void *)(v0 + 240);

        swift_bridgeObjectRelease_n();
        uint64_t v189 = v187;
        uint64_t v190 = v188;
      }
      v215(v189, v190);
      uint64_t v212 = *(void *)(v0 + 536);
      uint64_t v196 = *(void *)(v0 + 528);
      uint64_t v197 = *(void *)(v0 + 520);
      uint64_t v198 = *(void *)(v0 + 512);
      uint64_t v199 = *(void *)(v0 + 352);
      uint64_t v200 = *(void *)(v0 + 304);
      uint64_t v201 = *(void *)(v0 + 296);
      uint64_t v202 = *(void *)(v0 + 184);
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 544))(*(void *)(v0 + 504), 1, 1, *(void *)(v0 + 272));
      sub_1000B2AA0();
      (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v199, v201);
      (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v212, v198);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v197 + 32))(v202, v196, v198);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v203 = *(uint64_t (**)(void))(v0 + 8);
      return v203();
    }
    uint64_t v155 = v144 + 4;
    while (1)
    {
      uint64_t v156 = *v155++;
      BOOL v86 = __OFADD__(v154, v156);
      v154 += v156;
      if (v86) {
        break;
      }
      if (!--v153) {
        goto LABEL_115;
      }
    }
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    swift_once();
  }
  unint64_t v24 = 0;
  uint64_t v243 = *(void *)(v0 + 408);
  uint64_t v25 = *(void *)(v0 + 384);
  uint64_t v239 = *(void *)(v0 + 208);
  uint64_t v225 = *(void *)(v0 + 416);
  unint64_t v231 = (*(unsigned __int8 *)(v225 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80);
  uint64_t v224 = v23 + v231;
  uint64_t v220 = *(void *)(v0 + 400) + 8;
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v27 = &_swiftEmptyDictionarySingleton;
  v218 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 368) + 8);
  uint64_t v234 = v25;
  uint64_t v221 = *(void *)(v0 + 576);
  while (1)
  {
    if (v24 >= *(void *)(v23 + 16))
    {
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    uint64_t v32 = *(void *)(v0 + 456);
    uint64_t v33 = *(void *)(v0 + 400);
    uint64_t v34 = *(void *)(v225 + 72);
    unint64_t v246 = v24;
    sub_10002E52C(v224 + v34 * v24, v32, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v35 = v243;
    uint64_t v255 = v32 + *(int *)(v243 + 24);
    sub_10002E52C(v255, v33, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    uint64_t v36 = (uint64_t *)(v33 + *(int *)(v25 + 28));
    unint64_t v37 = v36[1];
    if (v37) {
      uint64_t v38 = *v36;
    }
    else {
      uint64_t v38 = 0;
    }
    unint64_t v39 = 0xE000000000000000;
    if (v37) {
      unint64_t v39 = v37;
    }
    uint64_t v248 = v38;
    uint64_t v251 = v39;
    if (v239)
    {
      uint64_t v40 = *(void *)(v0 + 376);
      uint64_t v41 = *(void *)(v0 + 360);
      uint64_t v233 = v26;
      uint64_t v42 = v27;
      uint64_t v43 = *(void *)(v0 + 200);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v35 = v243;
      sub_1000B3340();
      uint64_t v44 = sub_1000B3330();
      uint64_t v46 = v45;
      (*v218)(v40, v41);
      *(void *)(v0 + 88) = v44;
      *(void *)(v0 + 96) = v46;
      *(void *)(v0 + 72) = v43;
      *(void *)(v0 + 80) = v239;
      uint64_t v27 = v42;
      uint64_t v26 = v233;
      sub_100004BC8();
      LOBYTE(v44) = sub_1000B4450();
      uint64_t v25 = v234;
      swift_bridgeObjectRelease();
      if ((v44 & 1) == 0)
      {
        uint64_t v47 = *(void *)(v0 + 200);
        *(void *)(v0 + 56) = v248;
        *(void *)(v0 + 64) = v251;
        *(void *)(v0 + 40) = v47;
        *(void *)(v0 + 48) = v239;
        if ((sub_1000B4450() & 1) == 0)
        {
          uint64_t v48 = *(void *)(v0 + 400);
          sub_10002E594(*(void *)(v0 + 456), (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          swift_bridgeObjectRelease();
          sub_10002E594(v48, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          uint64_t v23 = v221;
          unint64_t v31 = v246;
          goto LABEL_19;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    if (*(unsigned char *)(v220 + *(int *)(v25 + 56)) != 2) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = v26[2];
    if (!v49)
    {
LABEL_41:
      sub_10002E52C(*(void *)(v0 + 456), *(void *)(v0 + 440), (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = (void *)sub_100075670(0, v26[2] + 1, 1, (unint64_t)v26);
      }
      uint64_t v23 = v221;
      unint64_t v31 = v246;
      unint64_t v61 = v26[2];
      unint64_t v60 = v26[3];
      if (v61 >= v60 >> 1) {
        uint64_t v26 = (void *)sub_100075670(v60 > 1, v61 + 1, 1, (unint64_t)v26);
      }
      uint64_t v62 = *(void *)(v0 + 456);
      uint64_t v63 = *(void *)(v0 + 440);
      uint64_t v64 = *(void *)(v0 + 400);
      void v26[2] = v61 + 1;
      sub_10002E754(v63, (uint64_t)v26 + v231 + v61 * v34, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      sub_10002E594(v62, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      sub_10002E594(v64, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
      goto LABEL_18;
    }
    unint64_t v216 = v27;
    uint64_t v50 = (uint64_t)v26 + v231;
    uint64_t v51 = v26;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_10002E52C(v50, *(void *)(v0 + 448), (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v52 = sub_1000B2F30();
      uint64_t v54 = v53;
      uint64_t v55 = sub_1000B2F30();
      uint64_t v57 = *(void *)(v0 + 448);
      if (v52 == v55 && v54 == v56) {
        break;
      }
      char v59 = sub_1000B4830();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10002E594(v57, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      if (v59) {
        goto LABEL_76;
      }
      v50 += v34;
      if (!--v49)
      {
        uint64_t v26 = v51;
        swift_bridgeObjectRelease_n();
        uint64_t v27 = v216;
        goto LABEL_41;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_10002E594(v57, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
LABEL_76:
    uint64_t v88 = *(void *)(v0 + 456);
    uint64_t v89 = *(void *)(v0 + 400);
    uint64_t v26 = v51;
    swift_bridgeObjectRelease_n();
    sub_10002E594(v88, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    sub_10002E594(v89, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    uint64_t v27 = v216;
LABEL_17:
    uint64_t v23 = v221;
    unint64_t v31 = v246;
LABEL_18:
    uint64_t v25 = v234;
LABEL_19:
    unint64_t v24 = v31 + 1;
    if (v24 == v227)
    {
      id v217 = v27;
      swift_bridgeObjectRelease();
      goto LABEL_81;
    }
  }
  if (!v27[2])
  {
LABEL_53:
    uint64_t v68 = _swiftEmptyArrayStorage;
    v262[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v69 = _swiftEmptyArrayStorage[2];
    if (!v69) {
      goto LABEL_61;
    }
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  unint64_t v65 = sub_1000414A4(v248, v251);
  if ((v66 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  uint64_t v67 = *(void *)(v27[7] + 8 * v65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v68 = _swiftEmptyArrayStorage;
  v262[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v67)
  {
    sub_100071544(v67);
    uint64_t v68 = (void *)v262[0];
  }
  uint64_t v69 = v68[2];
  if (!v69) {
    goto LABEL_61;
  }
LABEL_54:
  uint64_t v70 = (uint64_t)v68 + v231;
  swift_bridgeObjectRetain();
  do
  {
    sub_10002E52C(v70, *(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    if ((sub_1000B2F40() & 1) != 0
      && (sub_1000B2F40() & 1) != 0
      && (sub_10001F774(*(void *)(v0 + 432) + *(int *)(v35 + 24), v255) & 1) != 0)
    {
      sub_10002E594(*(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      swift_bridgeObjectRelease();
      uint64_t v71 = v251;
      goto LABEL_66;
    }
    sub_10002E594(*(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    v70 += v34;
    --v69;
  }
  while (v69);
  swift_bridgeObjectRelease();
LABEL_61:
  sub_10002E52C(*(void *)(v0 + 456), *(void *)(v0 + 424), (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v68 = (void *)sub_100075670(0, v68[2] + 1, 1, (unint64_t)v68);
  }
  uint64_t v71 = v251;
  unint64_t v73 = v68[2];
  unint64_t v72 = v68[3];
  if (v73 >= v72 >> 1) {
    uint64_t v68 = (void *)sub_100075670(v72 > 1, v73 + 1, 1, (unint64_t)v68);
  }
  uint64_t v74 = *(void *)(v0 + 424);
  _OWORD v68[2] = v73 + 1;
  sub_10002E754(v74, (uint64_t)v68 + v231 + v73 * v34, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  v262[0] = (uint64_t)v68;
LABEL_66:
  char v75 = swift_isUniquelyReferenced_nonNull_native();
  char v260 = v27;
  unint64_t v77 = sub_1000414A4(v248, v71);
  uint64_t v78 = v27[2];
  BOOL v79 = (v76 & 1) == 0;
  uint64_t v80 = v78 + v79;
  if (__OFADD__(v78, v79)) {
    goto LABEL_161;
  }
  char v81 = v76;
  if (v27[3] >= v80)
  {
    if (v75)
    {
      if (v76) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_1000A30D4();
      uint64_t v27 = v260;
      if (v81) {
        goto LABEL_15;
      }
    }
LABEL_73:
    v27[(v77 >> 6) + 8] |= 1 << v77;
    uint64_t v84 = (uint64_t *)(v27[6] + 16 * v77);
    *uint64_t v84 = v248;
    v84[1] = v71;
    *(void *)(v27[7] + 8 * v77) = v68;
    uint64_t v85 = v27[2];
    BOOL v86 = __OFADD__(v85, 1);
    uint64_t v87 = v85 + 1;
    if (v86) {
      goto LABEL_163;
    }
    v27[2] = v87;
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  sub_1000A1FDC(v80, v75);
  uint64_t v27 = v260;
  unint64_t v82 = sub_1000414A4(v248, v71);
  if ((v81 & 1) == (v83 & 1))
  {
    unint64_t v77 = v82;
    if ((v81 & 1) == 0) {
      goto LABEL_73;
    }
LABEL_15:
    uint64_t v28 = v27[7];
    swift_bridgeObjectRelease();
    *(void *)(v28 + 8 * v77) = v68;
LABEL_16:
    uint64_t v29 = *(void *)(v0 + 456);
    uint64_t v30 = *(void *)(v0 + 400);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002E594(v29, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    sub_10002E594(v30, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    goto LABEL_17;
  }
  return sub_1000B4870();
}

uint64_t sub_100027994(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  type metadata accessor for HomeEntity();
  v2[6] = swift_task_alloc();
  v2[7] = sub_100004210(&qword_1000D5008);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_100027A68, 0, 0);
}

uint64_t sub_100027A68()
{
  uint64_t v23 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000B3570();
  sub_100017618(v1, (uint64_t)qword_1000DCC18);
  swift_retain_n();
  uint64_t v2 = sub_1000B3550();
  os_log_type_t v3 = sub_1000B42C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    v0[2] = sub_10002A68C(0xD000000000000013, 0x80000001000B91A0, &v22);
    sub_1000B4400();
    *(_WORD *)(v4 + 12) = 2080;
    uint64_t v5 = sub_1000B2C00();
    uint64_t v6 = v0[9];
    if (v5)
    {
      uint64_t v7 = v0[6];
      swift_getKeyPath();
      sub_10002AD5C();
      sub_1000B2A10();
      swift_release();
      swift_release();
      uint64_t v8 = sub_1000B2F60();
      uint64_t v9 = *(void *)(v8 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
      sub_10002E594(v7, (uint64_t (*)(void))type metadata accessor for HomeEntity);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    else
    {
      uint64_t v10 = sub_1000B2F60();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    }
    uint64_t v11 = sub_1000B4040();
    v0[3] = sub_10002A68C(v11, v12, &v22);
    sub_1000B4400();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s Generating suggested entities for all accessories and scenes in home %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (sub_1000B2C00())
  {
    uint64_t v13 = v0[8];
    uint64_t v14 = v0[6];
    swift_getKeyPath();
    sub_10002AD5C();
    sub_1000B2A10();
    swift_release();
    swift_release();
    uint64_t v15 = sub_1000B2F60();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
    sub_10002E594(v14, (uint64_t (*)(void))type metadata accessor for HomeEntity);
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v15 = sub_1000B2F60();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v16 + 56))(v0[8], v17, 1, v15);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[10] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_100027F1C;
  uint64_t v19 = v0[8];
  uint64_t v20 = v0[4];
  return sub_100025534(v20, v19, 0, 0);
}

uint64_t sub_100027F1C()
{
  uint64_t v1 = *(void *)(*v0 + 64);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_100017B5C(v1, &qword_1000D5008);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_100028080()
{
  uint64_t v0 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v1 = sub_10002E7C0(&qword_1000D53E8, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);

  return static IntentItemSection.Builder.buildBlock()(v0, v1);
}

void *sub_1000280F4(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5548);
  __chkstk_darwin(v2 - 8);
  uint64_t v44 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v4 - 8);
  uint64_t v43 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000B3350();
  uint64_t v6 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v37 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000B2DC0();
  uint64_t v8 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v10 = *(void *)(v39 - 8);
  uint64_t v11 = __chkstk_darwin(v39);
  uint64_t v38 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v35 = (uint64_t)v30 - v13;
  uint64_t v36 = sub_100004210(&qword_1000D5268);
  uint64_t v14 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = &_swiftEmptyArrayStorage;
  if (v17)
  {
    uint64_t v46 = &_swiftEmptyArrayStorage;
    sub_10001EA70(0, v17, 0);
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v20 = *(void *)(v10 + 72);
    uint64_t v32 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v33 = v20;
    v30[1] = v14 + 32;
    unint64_t v31 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v34 = v14;
    uint64_t v21 = (uint64_t)v38;
    do
    {
      int64_t v45 = v17;
      uint64_t v22 = v35;
      sub_10002E52C(v19, v35, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      sub_10002E52C(v22, v21, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      type metadata accessor for WidgetTileInfo();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = v37;
      sub_1000B3340();
      sub_1000B3330();
      (*v32)(v23, v42);
      sub_1000B2D90();
      (*v31)(v43, 1, 1, v41);
      uint64_t v24 = sub_1000B2AE0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v44, 1, 1, v24);
      sub_10002E7C0(&qword_1000D53E8, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
      sub_1000B2930();
      sub_10002E594(v22, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v18 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001EA70(0, v18[2] + 1, 1);
        uint64_t v18 = v46;
      }
      unint64_t v26 = v18[2];
      unint64_t v25 = v18[3];
      uint64_t v27 = v34;
      int64_t v28 = v45;
      if (v26 >= v25 >> 1)
      {
        sub_10001EA70(v25 > 1, v26 + 1, 1);
        uint64_t v18 = v46;
      }
      v18[2] = v26 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v26, v16, v36);
      v19 += v33;
      int64_t v17 = v28 - 1;
    }
    while (v17);
  }
  return v18;
}

void sub_10002869C(void *a1@<X8>)
{
  uint64_t v2 = sub_100004210(&qword_1000D5538);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_100004210(&qword_1000D5528);
  sub_1000B2A40();
  uint64_t v8 = sub_1000B2B10();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
  {
    sub_100017B5C((uint64_t)v4, &qword_1000D5538);
    uint64_t v10 = sub_1000B2DC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  }
  else
  {
    sub_1000B2AF0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
    uint64_t v11 = sub_1000B2DC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 0, 1, v11);
  }
  v18._countAndFlagsBits = sub_1000B4040();
  sub_1000B4090(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 5972026;
  v19._object = (void *)0xE300000000000000;
  sub_1000B4090(v19);
  uint64_t v12 = *(void *)(sub_1000B2A50() + 16);
  swift_bridgeObjectRelease();
  uint64_t v17 = v12;
  v20._countAndFlagsBits = sub_1000B4800();
  sub_1000B4090(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0x736D657469205DLL;
  v21._object = (void *)0xE700000000000000;
  sub_1000B4090(v21);
  unint64_t v13 = v16;
  *a1 = v15;
  a1[1] = v13;
}

uint64_t sub_100028948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_100021DB0;
  return sub_100024DD4(a1, a2, a3, v8);
}

unint64_t sub_100028A04()
{
  unint64_t result = qword_1000D5418;
  if (!qword_1000D5418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5418);
  }
  return result;
}

unint64_t sub_100028A5C()
{
  unint64_t result = qword_1000D5420;
  if (!qword_1000D5420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5420);
  }
  return result;
}

uint64_t sub_100028AB0()
{
  return sub_10002E7C0(qword_1000D5428, (void (*)(uint64_t))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_100028AF8@<X0>(uint64_t *a1@<X8>)
{
  sub_100004210(&qword_1000D5590);
  swift_getKeyPath();
  uint64_t result = sub_1000B2C10();
  *a1 = result;
  return result;
}

uint64_t sub_100028B3C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100028BD8;
  return sub_100023EE0(a1, v4);
}

uint64_t sub_100028BD8(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_100028CD8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10002E808;
  return sub_100027994(a1, v4);
}

unint64_t sub_100028D7C()
{
  unint64_t result = qword_1000D5440;
  if (!qword_1000D5440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5440);
  }
  return result;
}

uint64_t sub_100028DD0()
{
  return sub_10001FF28(&qword_1000D5448, qword_1000D5450);
}

uint64_t sub_100028E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100022778();
  *uint64_t v5 = v2;
  v5[1] = sub_10002E808;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100028EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100021DB0;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

ValueMetadata *type metadata accessor for AccessoryAndSceneQuery()
{
  return &type metadata for AccessoryAndSceneQuery;
}

uint64_t *sub_100028F88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v42 = *a2;
    *a1 = *a2;
    uint64_t v43 = v42 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B2F60();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v56 = a1;
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    v8((uint64_t *)((char *)a1 + v9), (uint64_t *)v11, v7);
    uint64_t v12 = (int *)type metadata accessor for WidgetTileInfo();
    v8((uint64_t *)&v10[v12[5]], (uint64_t *)&v11[v12[5]], v7);
    uint64_t v13 = v12[6];
    uint64_t v14 = &v10[v13];
    uint64_t v15 = &v11[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v12[7];
    Swift::String v18 = &v10[v17];
    Swift::String v19 = &v11[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)Swift::String v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = v12[8];
    uint64_t v22 = &v10[v21];
    uint64_t v23 = &v11[v21];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = v12[9];
    unint64_t v26 = &v10[v25];
    uint64_t v27 = &v11[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)unint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v12[10];
    uint64_t v52 = &v11[v29];
    __dsta = &v10[v29];
    uint64_t v30 = sub_1000B33D0();
    unint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(__dsta, v52, v30);
    v31(&v10[v12[11]], &v11[v12[11]], v30);
    *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
    v10[v12[13]] = v11[v12[13]];
    uint64_t v32 = v12[14];
    uint64_t v33 = &v10[v32];
    uint64_t v34 = &v11[v32];
    uint64_t v35 = *(void **)v34;
    LOBYTE(v34) = v34[8];
    *(void *)uint64_t v33 = v35;
    v33[8] = (char)v34;
    *(void *)&v10[v12[15]] = *(void *)&v11[v12[15]];
    v10[v12[16]] = v11[v12[16]];
    uint64_t v36 = v12[17];
    uint64_t v53 = &v11[v36];
    __dst = &v10[v36];
    uint64_t v37 = sub_1000B32E0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    swift_retain();
    id v40 = v35;
    swift_bridgeObjectRetain();
    if (v39(v53, 1, v37))
    {
      uint64_t v41 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v53, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v53, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v37);
    }
    v10[v12[18]] = v11[v12[18]];
    uint64_t v44 = v12[19];
    int64_t v45 = &v10[v44];
    uint64_t v46 = &v11[v44];
    *(void *)int64_t v45 = *(void *)v46;
    v45[8] = v46[8];
    uint64_t v47 = v12[20];
    uint64_t v48 = &v10[v47];
    uint64_t v49 = &v11[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    v10[v12[21]] = v11[v12[21]];
    swift_bridgeObjectRetain();
    return v56;
  }
  return (uint64_t *)v43;
}

uint64_t sub_100029344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B2F60();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  v5(v6, v4);
  uint64_t v7 = (int *)type metadata accessor for WidgetTileInfo();
  v5(v6 + v7[5], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + v7[10];
  uint64_t v9 = sub_1000B33D0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v6 + v7[11], v9);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v11 = v6 + v7[17];
  uint64_t v12 = sub_1000B32E0();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100029564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v53 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  v7(v9 + v11[5], v10 + v11[5], v6);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (void *)(v10 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v11[7];
  uint64_t v17 = (void *)(v9 + v16);
  Swift::String v18 = (void *)(v10 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v11[8];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v22 = (void *)(v10 + v20);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v11[9];
  uint64_t v25 = (void *)(v9 + v24);
  unint64_t v26 = (void *)(v10 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v11[10];
  uint64_t v49 = v10 + v28;
  __dsta = (void *)(v9 + v28);
  uint64_t v29 = sub_1000B33D0();
  uint64_t v30 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(__dsta, v49, v29);
  v30((void *)(v9 + v11[11]), v10 + v11[11], v29);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v31 = v11[14];
  uint64_t v32 = v9 + v31;
  uint64_t v33 = v10 + v31;
  uint64_t v34 = *(void **)v33;
  LOBYTE(v33) = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v32 = v34;
  *(unsigned char *)(v32 + 8) = v33;
  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v35 = v11[17];
  uint64_t v50 = (const void *)(v10 + v35);
  __dst = (void *)(v9 + v35);
  uint64_t v36 = sub_1000B32E0();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
  swift_retain();
  id v39 = v34;
  swift_bridgeObjectRetain();
  if (v38(v50, 1, v36))
  {
    uint64_t v40 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v50, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(__dst, v50, v36);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
  }
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v41 = v11[19];
  uint64_t v42 = v9 + v41;
  uint64_t v43 = v10 + v41;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  uint64_t v44 = v11[20];
  int64_t v45 = (void *)(v9 + v44);
  uint64_t v46 = (void *)(v10 + v44);
  uint64_t v47 = v46[1];
  *int64_t v45 = *v46;
  v45[1] = v47;
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  swift_bridgeObjectRetain();
  return v53;
}

uint64_t sub_1000298CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v51 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  v7(v9 + v11[5], v10 + v11[5], v6);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (void *)(v10 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v11[7];
  uint64_t v16 = (void *)(v9 + v15);
  uint64_t v17 = (void *)(v10 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v11[8];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = (void *)(v10 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v11[9];
  uint64_t v22 = (void *)(v9 + v21);
  uint64_t v23 = (void *)(v10 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v11[10];
  uint64_t v25 = v9 + v24;
  uint64_t v26 = v10 + v24;
  uint64_t v27 = sub_1000B33D0();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24);
  v28(v25, v26, v27);
  v28(v9 + v11[11], v10 + v11[11], v27);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v29 = v11[14];
  uint64_t v30 = v9 + v29;
  uint64_t v31 = v10 + v29;
  uint64_t v32 = *(void **)v31;
  LOBYTE(v31) = *(unsigned char *)(v31 + 8);
  uint64_t v33 = *(void **)v30;
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = v31;
  id v34 = v32;

  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v35 = v11[17];
  uint64_t v36 = (void *)(v9 + v35);
  uint64_t v37 = (void *)(v10 + v35);
  uint64_t v38 = sub_1000B32E0();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  LODWORD(v28) = v40(v36, 1, v38);
  int v41 = v40(v37, 1, v38);
  if (!v28)
  {
    if (!v41)
    {
      (*(void (**)(void *, void *, uint64_t))(v39 + 24))(v36, v37, v38);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
    goto LABEL_6;
  }
  if (v41)
  {
LABEL_6:
    uint64_t v42 = sub_100004210(&qword_1000D5098);
    memcpy(v36, v37, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v39 + 16))(v36, v37, v38);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_7:
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v43 = v11[19];
  uint64_t v44 = v9 + v43;
  int64_t v45 = (uint64_t *)(v10 + v43);
  uint64_t v46 = *v45;
  *(unsigned char *)(v44 + 8) = *((unsigned char *)v45 + 8);
  *(void *)uint64_t v44 = v46;
  uint64_t v47 = v11[20];
  uint64_t v48 = (void *)(v9 + v47);
  uint64_t v49 = (void *)(v10 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  return v51;
}

uint64_t sub_100029CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  v7(v9 + v11[5], v10 + v11[5], v6);
  *(_OWORD *)(v9 + v11[6]) = *(_OWORD *)(v10 + v11[6]);
  *(_OWORD *)(v9 + v11[7]) = *(_OWORD *)(v10 + v11[7]);
  *(_OWORD *)(v9 + v11[8]) = *(_OWORD *)(v10 + v11[8]);
  *(_OWORD *)(v9 + v11[9]) = *(_OWORD *)(v10 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_1000B33D0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(v9 + v11[11], v10 + v11[11], v15);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v17 = v11[14];
  uint64_t v18 = v9 + v17;
  uint64_t v19 = v10 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v20 = v11[17];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v22 = (const void *)(v10 + v20);
  uint64_t v23 = sub_1000B32E0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_100004210(&qword_1000D5098);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v26 = v11[19];
  uint64_t v27 = v9 + v26;
  uint64_t v28 = v10 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(_OWORD *)(v9 + v11[20]) = *(_OWORD *)(v10 + v11[20]);
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  return a1;
}

uint64_t sub_100029FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v59 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  v7(v9 + v11[5], v10 + v11[5], v6);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (uint64_t *)(v10 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v11[7];
  uint64_t v18 = (void *)(v9 + v17);
  uint64_t v19 = (uint64_t *)(v10 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v11[8];
  uint64_t v23 = (void *)(v9 + v22);
  uint64_t v24 = (uint64_t *)(v10 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v11[9];
  uint64_t v28 = (void *)(v9 + v27);
  uint64_t v29 = (uint64_t *)(v10 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v11[10];
  uint64_t v33 = v9 + v32;
  uint64_t v34 = v10 + v32;
  uint64_t v35 = sub_1000B33D0();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40);
  v36(v33, v34, v35);
  v36(v9 + v11[11], v10 + v11[11], v35);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  swift_release();
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v37 = v11[14];
  uint64_t v38 = v9 + v37;
  uint64_t v39 = (uint64_t *)(v10 + v37);
  uint64_t v40 = *v39;
  LOBYTE(v39) = *((unsigned char *)v39 + 8);
  int v41 = *(void **)v38;
  *(void *)uint64_t v38 = v40;
  *(unsigned char *)(v38 + 8) = (_BYTE)v39;

  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v42 = v11[17];
  uint64_t v43 = (void *)(v9 + v42);
  uint64_t v44 = (void *)(v10 + v42);
  uint64_t v45 = sub_1000B32E0();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  LODWORD(v36) = v47(v43, 1, v45);
  int v48 = v47(v44, 1, v45);
  if (!v36)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 40))(v43, v44, v45);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
    goto LABEL_6;
  }
  if (v48)
  {
LABEL_6:
    uint64_t v49 = sub_100004210(&qword_1000D5098);
    memcpy(v43, v44, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 32))(v43, v44, v45);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
LABEL_7:
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v50 = v11[19];
  uint64_t v51 = v9 + v50;
  uint64_t v52 = v10 + v50;
  *(void *)uint64_t v51 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = *(unsigned char *)(v52 + 8);
  uint64_t v53 = v11[20];
  uint64_t v54 = (void *)(v9 + v53);
  uint64_t v55 = (uint64_t *)(v10 + v53);
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *uint64_t v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  return v59;
}

uint64_t sub_10002A3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002A3B4);
}

uint64_t sub_10002A3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for WidgetTileInfo();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10002A4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002A4C0);
}

uint64_t sub_10002A4C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000B2F60();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for WidgetTileInfo();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_10002A5C4()
{
  uint64_t result = sub_1000B2F60();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WidgetTileInfo();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10002A68C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10002A760(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000084C4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000084C4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10002ACE4((uint64_t)v12);
  return v7;
}

uint64_t sub_10002A760(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1000B4410();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10002A91C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1000B4620();
  if (!v8)
  {
    sub_1000B4680();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1000B46E0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10002A91C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10002A9B4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10002AB94(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10002AB94(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10002A9B4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10002AB2C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1000B45D0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1000B4680();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1000B40A0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_1000B46E0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1000B4680();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10002AB2C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100004210(&qword_1000D7820);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10002AB94(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004210(&qword_1000D7820);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_10002ACE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10002AD34()
{
  return sub_1000B2990();
}

unint64_t sub_10002AD5C()
{
  unint64_t result = qword_1000D5510;
  if (!qword_1000D5510)
  {
    sub_100004B80(&qword_1000D5518);
    sub_10002E7C0(&qword_1000D5520, (void (*)(uint64_t))type metadata accessor for HomeEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5510);
  }
  return result;
}

void *sub_10002AE00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100004210(&qword_1000D5250);
  unint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_10002C3FC((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100017A14();
  if (v5 != v1)
  {
    __break(1u);
    return &_swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10002AEF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  if (v5 <= 0)
  {
    size_t v11 = _swiftEmptyArrayStorage;
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for AccessoryAndSceneEntity() - 8);
      uint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_100004210(&qword_1000D5278);
  uint64_t v8 = *(void *)(type metadata accessor for AccessoryAndSceneEntity() - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  size_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  unint64_t result = (void *)sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_10002B138()
{
  return sub_1000B3F90() & 1;
}

Swift::Int sub_10002B1C8(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_10002C6B4(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_10002B234(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_10002B234(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1000B47F0(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_10002B95C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v106 = result;
  uint64_t v103 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      size_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v105 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v103;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          int64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_10002BA44((char *)(v95 + 24 * v98), (char *)(v95 + 24 * *(void *)&v94[16 * v12 + 16]), v95 + 24 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v97 = sub_10002C028((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v105[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v105 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_100004210(&qword_1000D5258);
    uint64_t v7 = sub_1000B4140();
    *(void *)(v7 + 16) = v6;
    uint64_t v105 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v104 = *a1 + 8;
  uint64_t v102 = *a1 - 24;
  size_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v107 = v3;
  uint64_t v108 = v10;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 24 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 24 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1000B4830();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v104 + 24 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 24 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1000B4830()))
      {
        goto LABEL_36;
      }
      v21 += 3;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 24 * v20;
        uint64_t v26 = 24 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v26;
            uint64_t v30 = v10 + v25;
            uint64_t v31 = *(void *)(v10 + v26);
            long long v32 = *(_OWORD *)(v10 + v26 + 8);
            long long v33 = *(_OWORD *)(v10 + v25 - 24);
            *(void *)(v29 + 16) = *(void *)(v10 + v25 - 8);
            *(_OWORD *)uint64_t v29 = v33;
            *(void *)(v30 - 24) = v31;
            *(_OWORD *)(v30 - 16) = v32;
          }
          ++v28;
          v25 -= 24;
          v26 += 24;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v106) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      size_t v11 = sub_10002BD1C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v45 = *((void *)v11 + 2);
    unint64_t v44 = *((void *)v11 + 3);
    unint64_t v12 = v45 + 1;
    if (v45 >= v44 >> 1) {
      size_t v11 = sub_10002BD1C((char *)(v44 > 1), v45 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v46 = v11 + 32;
    uint64_t v47 = &v11[16 * v45 + 32];
    *(void *)uint64_t v47 = v13;
    *((void *)v47 + 1) = v9;
    if (v45)
    {
      uint64_t v10 = v108;
      while (1)
      {
        unint64_t v48 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v53 = &v46[16 * v12];
          uint64_t v54 = *((void *)v53 - 8);
          uint64_t v55 = *((void *)v53 - 7);
          BOOL v59 = __OFSUB__(v55, v54);
          uint64_t v56 = v55 - v54;
          if (v59) {
            goto LABEL_135;
          }
          uint64_t v58 = *((void *)v53 - 6);
          uint64_t v57 = *((void *)v53 - 5);
          BOOL v59 = __OFSUB__(v57, v58);
          uint64_t v51 = v57 - v58;
          char v52 = v59;
          if (v59) {
            goto LABEL_136;
          }
          unint64_t v60 = v12 - 2;
          unint64_t v61 = &v46[16 * v12 - 32];
          uint64_t v63 = *(void *)v61;
          uint64_t v62 = *((void *)v61 + 1);
          BOOL v59 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          if (v59) {
            goto LABEL_138;
          }
          BOOL v59 = __OFADD__(v51, v64);
          uint64_t v65 = v51 + v64;
          if (v59) {
            goto LABEL_141;
          }
          if (v65 >= v56)
          {
            char v83 = &v46[16 * v48];
            uint64_t v85 = *(void *)v83;
            uint64_t v84 = *((void *)v83 + 1);
            BOOL v59 = __OFSUB__(v84, v85);
            uint64_t v86 = v84 - v85;
            if (v59) {
              goto LABEL_145;
            }
            BOOL v76 = v51 < v86;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v77 = *((void *)v11 + 4);
            uint64_t v78 = *((void *)v11 + 5);
            BOOL v59 = __OFSUB__(v78, v77);
            uint64_t v70 = v78 - v77;
            char v71 = v59;
            goto LABEL_99;
          }
          uint64_t v50 = *((void *)v11 + 4);
          uint64_t v49 = *((void *)v11 + 5);
          BOOL v59 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          char v52 = v59;
        }
        if (v52) {
          goto LABEL_137;
        }
        unint64_t v60 = v12 - 2;
        char v66 = &v46[16 * v12 - 32];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v69 = __OFSUB__(v67, v68);
        uint64_t v70 = v67 - v68;
        char v71 = v69;
        if (v69) {
          goto LABEL_140;
        }
        unint64_t v72 = &v46[16 * v48];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v59 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v59) {
          goto LABEL_143;
        }
        if (__OFADD__(v70, v75)) {
          goto LABEL_144;
        }
        if (v70 + v75 >= v51)
        {
          BOOL v76 = v51 < v75;
LABEL_105:
          if (v76) {
            unint64_t v48 = v60;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v71) {
          goto LABEL_139;
        }
        BOOL v79 = &v46[16 * v48];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v59 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v59) {
          goto LABEL_142;
        }
        if (v82 < v70) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v87 = v48 - 1;
        if (v48 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v88 = v10;
        uint64_t v89 = &v46[16 * v87];
        uint64_t v90 = *(void *)v89;
        uint64_t v91 = &v46[16 * v48];
        uint64_t v92 = *((void *)v91 + 1);
        sub_10002BA44((char *)(v88 + 24 * *(void *)v89), (char *)(v88 + 24 * *(void *)v91), v88 + 24 * v92, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v92 < v90) {
          goto LABEL_132;
        }
        if (v48 > *((void *)v11 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v89 = v90;
        *(void *)&v46[16 * v87 + 8] = v92;
        unint64_t v93 = *((void *)v11 + 2);
        if (v48 >= v93) {
          goto LABEL_134;
        }
        unint64_t v12 = v93 - 1;
        memmove(&v46[16 * v48], v91 + 16, 16 * (v93 - 1 - v48));
        *((void *)v11 + 2) = v93 - 1;
        BOOL v76 = v93 > 2;
        uint64_t v10 = v108;
        if (!v76) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v108;
LABEL_15:
    Swift::Int v3 = v107;
    if (v9 >= v107)
    {
      uint64_t v8 = v105;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v106)) {
    goto LABEL_153;
  }
  if (v13 + v106 >= v3) {
    Swift::Int v34 = v3;
  }
  else {
    Swift::Int v34 = v13 + v106;
  }
  if (v34 >= v13)
  {
    if (v9 != v34)
    {
      uint64_t v35 = v102 + 24 * v9;
      do
      {
        uint64_t v36 = (uint64_t *)(v10 + 24 * v9);
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        Swift::Int v39 = v13;
        uint64_t v40 = v35;
        do
        {
          BOOL v41 = v37 == *(void *)v40 && v38 == *(void *)(v40 + 8);
          if (v41 || (sub_1000B4830() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          long long v42 = *(_OWORD *)(v40 + 32);
          uint64_t v43 = *(void *)(v40 + 16);
          uint64_t v37 = *(void *)(v40 + 24);
          *(_OWORD *)(v40 + 24) = *(_OWORD *)v40;
          *(void *)(v40 + 40) = v43;
          *(void *)uint64_t v40 = v37;
          *(_OWORD *)(v40 + 8) = v42;
          uint64_t v38 = v42;
          v40 -= 24;
          ++v39;
        }
        while (v9 != v39);
        ++v9;
        v35 += 24;
      }
      while (v9 != v34);
      Swift::Int v9 = v34;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_1000B4680();
  __break(1u);
  return result;
}

uint64_t sub_10002B95C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 24 * a3 - 24;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 24 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)v12 && v10 == *(void *)(v12 + 8);
      if (v13 || (Swift::Int result = sub_1000B4830(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 24;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      long long v14 = *(_OWORD *)(v12 + 32);
      uint64_t v15 = *(void *)(v12 + 16);
      Swift::Int result = *(void *)(v12 + 24);
      *(_OWORD *)(v12 + 24) = *(_OWORD *)v12;
      *(void *)(v12 + 40) = v15;
      *(void *)uint64_t v12 = result;
      *(_OWORD *)(v12 + 8) = v14;
      uint64_t v10 = v14;
      v12 -= 24;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10002BA44(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v29 = __src;
  Swift::Int v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      unint64_t v17 = &v4[24 * v11];
      Swift::Int v27 = v17;
      uint64_t v29 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v18 = a3 - 24;
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = (char *)(v18 + 24);
          uint64_t v21 = *((void *)v19 - 3);
          uint64_t v22 = *((void *)v19 - 2);
          v19 -= 24;
          BOOL v23 = *((void *)v17 - 3) == v21 && *((void *)v17 - 2) == v22;
          if (v23 || (sub_1000B4830() & 1) == 0)
          {
            Swift::Int v27 = v17 - 24;
            if (v20 < v17 || v18 >= (unint64_t)v17 || v20 != v17)
            {
              long long v25 = *(_OWORD *)(v17 - 24);
              *(void *)(v18 + 16) = *((void *)v17 - 1);
              *(_OWORD *)unint64_t v18 = v25;
            }
            int v19 = v6;
            v17 -= 24;
            if (v6 <= v7) {
              goto LABEL_46;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= (unint64_t)v6)
            {
              long long v24 = *(_OWORD *)v19;
              *(void *)(v18 + 16) = *((void *)v19 + 2);
              *(_OWORD *)unint64_t v18 = v24;
            }
            uint64_t v29 = v19;
            if (v19 <= v7) {
              goto LABEL_46;
            }
          }
          v18 -= 24;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_46;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    uint64_t v12 = &v4[24 * v9];
    Swift::Int v27 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        BOOL v13 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v13 || (sub_1000B4830() & 1) == 0)
        {
          if (v7 != v4)
          {
            long long v16 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v7 = v16;
          }
          v4 += 24;
          Swift::Int v28 = v4;
          long long v14 = v6;
        }
        else
        {
          long long v14 = v6 + 24;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            long long v15 = *(_OWORD *)v6;
            *((void *)v7 + 2) = *((void *)v6 + 2);
            *(_OWORD *)uint64_t v7 = v15;
          }
        }
        v7 += 24;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      uint64_t v29 = v7;
    }
LABEL_46:
    sub_10002BE18((void **)&v29, (const void **)&v28, &v27);
    return 1;
  }
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

char *sub_10002BD1C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100004210(&qword_1000D5540);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  BOOL v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10002BE18(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1000B46E0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

uint64_t sub_10002BEE8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1000B46E0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_10002C028(uint64_t a1)
{
  return sub_10002BD1C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10002C03C@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_1000B3280();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002C09C@<X0>(uint64_t *a1@<X8>)
{
  sub_100004BC8();
  uint64_t result = sub_1000B4420();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002C0E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for WidgetTileInfo();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  long long v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_10002E52C(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    sub_10002E754((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    uint64_t result = sub_10002E754((uint64_t)v15, a2, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10002C3FC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    int64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10002C618()
{
  swift_getAtKeyPath();
  return v1;
}

uint64_t sub_10002C64C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t *)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t result = a2(&v6);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10002C690()
{
  return sub_1000B4340();
}

uint64_t sub_10002C6B4(void *a1)
{
  return sub_10001F05C(0, a1[2], 0, a1);
}

uint64_t sub_10002C6C8(void *a1)
{
  return sub_10001EC94(0, a1[2], 0, a1);
}

void *sub_10002C6DC(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v34 = a2;
  uint64_t v5 = sub_1000B2F60();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v35 = (char *)v24 - v9;
  uint64_t v36 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_21:
    uint64_t v10 = sub_1000B46A0();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_3:
      v24[1] = a1;
      void v24[2] = v3;
      unint64_t v3 = 0;
      uint64_t v28 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v29 = a1 & 0xC000000000000001;
      unint64_t v26 = a1 + 32;
      uint64_t v27 = v10;
      uint64_t v32 = v25 + 16;
      uint64_t v33 = v34 + 56;
      uint64_t v11 = (void (**)(char *, uint64_t))(v25 + 8);
      while (1)
      {
        if (v29)
        {
          id v12 = (id)sub_1000B45E0();
          BOOL v13 = __OFADD__(v3, 1);
          unint64_t v14 = v3 + 1;
          if (v13)
          {
LABEL_18:
            __break(1u);
            return v36;
          }
        }
        else
        {
          if (v3 >= *(void *)(v28 + 16))
          {
            __break(1u);
            goto LABEL_21;
          }
          id v12 = *(id *)(v26 + 8 * v3);
          BOOL v13 = __OFADD__(v3, 1);
          unint64_t v14 = v3 + 1;
          if (v13) {
            goto LABEL_18;
          }
        }
        id v30 = v12;
        unint64_t v31 = v14;
        a1 = (unint64_t)[v12 uniqueIdentifier];
        sub_1000B2F50();

        if (*(void *)(v34 + 16)
          && (uint64_t v15 = v34,
              sub_10002E7C0((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID), a1 = (unint64_t)v35, uint64_t v16 = sub_1000B3F50(), v17 = -1 << *(unsigned char *)(v15 + 32), v18 = v16 & ~v17, ((*(void *)(v33 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) != 0))
        {
          uint64_t v19 = ~v17;
          uint64_t v20 = *(void *)(v25 + 72);
          uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
          while (1)
          {
            v21(v8, *(void *)(v34 + 48) + v20 * v18, v5);
            sub_10002E7C0(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
            a1 = sub_1000B3F90();
            uint64_t v22 = *v11;
            (*v11)(v8, v5);
            if (a1) {
              break;
            }
            unint64_t v18 = (v18 + 1) & v19;
            if (((*(void *)(v33 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
              goto LABEL_4;
            }
          }
          v22(v35, v5);
          a1 = (unint64_t)&v36;
          sub_1000B4630();
          sub_1000B4660();
          sub_1000B4670();
          sub_1000B4640();
        }
        else
        {
LABEL_4:
          (*v11)(v35, v5);
        }
        unint64_t v3 = v31;
        if (v31 == v27) {
          return v36;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10002CA78(uint64_t a1, void *a2)
{
  id v25 = a2;
  uint64_t v4 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v21 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return _swiftEmptyArrayStorage;
  }
  v21[1] = v2;
  uint64_t v12 = *(void *)(type metadata accessor for WidgetTileInfo() - 8);
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v24 = *(void *)(v12 + 72);
  uint64_t v23 = sub_1000B2F60();
  uint64_t v14 = *(void *)(v23 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  void v21[2] = v14 + 16;
  uint64_t v22 = v15;
  v21[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = _swiftEmptyArrayStorage;
  do
  {
    v22(v10, v13, v23);
    id v17 = [v25 uniqueIdentifier];
    sub_1000B2F50();

    sub_10002E52C(v13, (uint64_t)&v10[*(int *)(v4 + 24)], (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    sub_10002E754((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v16 = (void *)sub_100075670(0, v16[2] + 1, 1, (unint64_t)v16);
    }
    unint64_t v19 = v16[2];
    unint64_t v18 = v16[3];
    if (v19 >= v18 >> 1) {
      uint64_t v16 = (void *)sub_100075670(v18 > 1, v19 + 1, 1, (unint64_t)v16);
    }
    v16[2] = v19 + 1;
    sub_10002E754((uint64_t)v8, (uint64_t)v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v19, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    v13 += v24;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_10002CD58(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1000B46A0())
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)sub_1000B45E0() : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      uint64_t v9 = sub_100009504(v6, a2);
      id v10 = v7;
      uint64_t v11 = sub_10002CA78(v9, v10);
      swift_bridgeObjectRelease();

      uint64_t v12 = v11[2];
      int64_t v13 = v4[2];
      int64_t v14 = v13 + v12;
      if (__OFADD__(v13, v12)) {
        goto LABEL_29;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v14 <= v4[3] >> 1)
      {
        if (v11[2]) {
          goto LABEL_19;
        }
      }
      else
      {
        if (v13 <= v14) {
          int64_t v16 = v13 + v12;
        }
        else {
          int64_t v16 = v13;
        }
        uint64_t v4 = (void *)sub_100075670(isUniquelyReferenced_nonNull_native, v16, 1, (unint64_t)v4);
        if (v11[2])
        {
LABEL_19:
          uint64_t v17 = v4[2];
          uint64_t v18 = (v4[3] >> 1) - v17;
          uint64_t v19 = *(void *)(type metadata accessor for AccessoryAndSceneEntity() - 8);
          uint64_t v20 = *(void *)(v19 + 72);
          if (v18 < v12) {
            goto LABEL_31;
          }
          unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
          uint64_t v22 = (char *)v4 + v21 + v20 * v17;
          uint64_t v23 = (char *)v11 + v21;
          uint64_t v24 = v20 * v12;
          id v25 = &v22[v24];
          unint64_t v26 = &v23[v24];
          if (v23 < v25 && v22 < v26)
          {
            swift_bridgeObjectRelease();
            uint64_t result = sub_1000B46E0();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v12)
          {
            uint64_t v28 = v4[2];
            BOOL v29 = __OFADD__(v28, v12);
            uint64_t v30 = v28 + v12;
            if (v29) {
              goto LABEL_32;
            }
            v4[2] = v30;
          }
          goto LABEL_5;
        }
      }
      if (v12) {
        goto LABEL_30;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      ++v5;
      if (v8 == v3) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
  }
  uint64_t v4 = _swiftEmptyArrayStorage;
LABEL_35:
  swift_bridgeObjectRelease();
  return (uint64_t)v4;
}

uint64_t sub_10002D00C(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 72) = a2;
  *(void *)(v3 + 80) = a3;
  *(unsigned char *)(v3 + 272) = a1;
  sub_100004210(&qword_1000D5008);
  *(void *)(v3 + 88) = swift_task_alloc();
  *(void *)(v3 + 96) = swift_task_alloc();
  *(void *)(v3 + 104) = swift_task_alloc();
  uint64_t v4 = sub_1000B2F60();
  *(void *)(v3 + 112) = v4;
  *(void *)(v3 + 120) = *(void *)(v4 - 8);
  *(void *)(v3 + 128) = swift_task_alloc();
  *(void *)(v3 + 136) = swift_task_alloc();
  *(void *)(v3 + 144) = swift_task_alloc();
  *(void *)(v3 + 152) = swift_task_alloc();
  return _swift_task_switch(sub_10002D144, 0, 0);
}

uint64_t sub_10002D144()
{
  *(void *)(v0 + 160) = *HomeWidget.shared.unsafeMutableAddressor();
  swift_retain();
  v5.value._rawValue = 0;
  HomeWidgetCore::RecommendedWidgetIdentity v6 = RecommendedWidgetIdentity.init(ids:)(v5);
  *(void *)(v0 + 168) = v6.uniqueIdentifier._object;
  *(void *)(v0 + 176) = v6.widgetKind._object;
  *(HomeWidgetCore::RecommendedWidgetIdentity *)(v0 + 16) = v6;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  unint64_t v2 = sub_10001FE98();
  *uint64_t v1 = v0;
  v1[1] = sub_10002D224;
  return HomeWidget.synchronizeWithHomeKit<A>(configuration:)(v0 + 16, (uint64_t)&type metadata for RecommendedWidgetIdentity, v2);
}

uint64_t sub_10002D224(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10002D384, 0, 0);
}

uint64_t sub_10002D384()
{
  uint64_t v38 = v0;
  uint64_t v1 = *(void **)(v0 + 192);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 112);
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v4 = *(void *)(v0 + 104);
    sub_1000206A0(*(void *)(v0 + 72), v4, &qword_1000D5008);
    Swift::OpaquePointer_optional v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    *(void *)(v0 + 200) = v5;
    *(void *)(v0 + 208) = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    if (v5(v4, 1, v2) == 1)
    {
      uint64_t v6 = *(unsigned __int8 *)(v0 + 272);
      sub_100017B5C(*(void *)(v0 + 104), &qword_1000D5008);
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v7;
      void *v7 = v0;
      v7[1] = sub_10002DBB0;
      return sub_100085894(v6);
    }
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 120);
    uint64_t v36 = v13;
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v13, *(void *)(v0 + 104), v14);
    sub_100004210(&qword_1000D5240);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1000B5180;
    uint64_t v35 = v14;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v17 + v16, v13, v14);
    uint64_t v18 = sub_100042368(v17);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    id v19 = [v1 homes];
    sub_10002E604();
    unint64_t v20 = sub_1000B4100();

    swift_bridgeObjectRetain();
    unint64_t v21 = sub_10002C6DC(v20, (uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000B4290();
    uint64_t v22 = (void *)swift_task_alloc();
    *uint64_t v22 = sub_100004210(&qword_1000D5558);
    v22[1] = sub_10001FF28(&qword_1000D5560, &qword_1000D5558);
    void v22[2] = sub_10002E7C0(&qword_1000D5568, (void (*)(uint64_t))sub_10002E604);
    v22[3] = &protocol witness table for HMHome;
    v22[4] = sub_10002E7C0(&qword_1000D5570, (void (*)(uint64_t))sub_10002E604);
    v22[5] = sub_10002E7C0(&qword_1000D5578, (void (*)(uint64_t))sub_10002E604);
    uint64_t KeyPath = swift_getKeyPath();
    swift_task_dealloc();
    uint64_t v24 = swift_task_alloc();
    *(void *)(v24 + 16) = sub_10002E6D8;
    *(void *)(v24 + 24) = KeyPath;
    *(void *)(v0 + 64) = v21;
    sub_10001FF28(&qword_1000D5580, &qword_1000D5558);
    swift_retain();
    unint64_t v25 = sub_1000B40B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v36, v35);
    *(void *)(v0 + 232) = 0;
    *(void *)(v0 + 240) = v25;
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1000B46A0();
      swift_bridgeObjectRelease();
      unint64_t v26 = (uint64_t *)(v0 + 56);
      if (v29) {
        goto LABEL_13;
      }
    }
    else
    {
      unint64_t v26 = (uint64_t *)(v0 + 56);
      if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_13:
        sub_1000B41B0();
        *(void *)(v0 + 248) = sub_1000B41A0();
        uint64_t v28 = sub_1000B4180();
        return _swift_task_switch(sub_10002DF88, v28, v27);
      }
    }
    swift_bridgeObjectRelease();
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1000B3570();
    sub_100017618(v30, (uint64_t)qword_1000DCC18);
    unint64_t v31 = sub_1000B3550();
    os_log_type_t v32 = sub_1000B42A0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      v37[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      *unint64_t v26 = sub_10002A68C(0xD00000000000003ALL, 0x80000001000B9280, v37);
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s Unable to match against any valid HMHome's", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1000B3570();
    sub_100017618(v9, (uint64_t)qword_1000DCC18);
    id v10 = sub_1000B3550();
    os_log_type_t v11 = sub_1000B42A0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      v37[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      *(void *)(v0 + 48) = sub_10002A68C(0xD00000000000003ALL, 0x80000001000B9280, v37);
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s unable to get shared HMHomeManager instance", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = *(uint64_t (**)(void *))(v0 + 8);
  return v34(_swiftEmptyArrayStorage);
}

uint64_t sub_10002DBB0(uint64_t a1)
{
  unint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 272);
  *(void *)(*(void *)v1 + 224) = a1;
  swift_task_dealloc();
  sub_10002E5F4(v2);
  return _swift_task_switch(sub_10002DCBC, 0, 0);
}

uint64_t sub_10002DCBC()
{
  uint64_t v12 = v0;
  unint64_t v1 = *(void *)(v0 + 224);
  *(void *)(v0 + 232) = 0;
  *(void *)(v0 + 240) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000B46A0();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_1000B41B0();
    *(void *)(v0 + 248) = sub_1000B41A0();
    uint64_t v3 = sub_1000B4180();
    return _swift_task_switch(sub_10002DF88, v3, v2);
  }
  swift_bridgeObjectRelease();
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1000B3570();
  sub_100017618(v5, (uint64_t)qword_1000DCC18);
  uint64_t v6 = sub_1000B3550();
  os_log_type_t v7 = sub_1000B42A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)(v0 + 56) = sub_10002A68C(0xD00000000000003ALL, 0x80000001000B9280, &v11);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s Unable to match against any valid HMHome's", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void *))(v0 + 8);
  return v9(_swiftEmptyArrayStorage);
}

uint64_t sub_10002DF88()
{
  unint64_t v1 = v0[30];
  uint64_t v2 = v0[29];
  swift_release();
  uint64_t v3 = sub_1000223D8(v1);
  uint64_t v6 = v3;
  v0[32] = v2;
  BOOL v41 = _swiftEmptyArrayStorage;
  uint64_t v34 = *(void *)(v3 + 16);
  if (v34)
  {
    unint64_t v7 = 0;
    uint64_t v8 = v0[15];
    uint64_t v40 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32);
    uint64_t v33 = v8;
    uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
    uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v31 = v3;
    uint64_t v35 = v0[10];
    while (v7 < *(void *)(v6 + 16))
    {
      uint64_t v11 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[25];
      uint64_t v12 = v0[14];
      uint64_t v13 = v0[12];
      unint64_t v36 = v7;
      unint64_t v37 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v14 = *(void *)(v33 + 72);
      uint64_t v15 = *(void (**)(uint64_t, unint64_t, uint64_t))(v33 + 16);
      v15(v13, v6 + v37 + v14 * v7, v12);
      unint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
      v16(v13, 0, 1, v12);
      if (v11(v13, 1, v12) == 1) {
        goto LABEL_23;
      }
      uint64_t v39 = v16;
      uint64_t v17 = *v40;
      (*v40)((char *)v0[18], v0[12], v0[14]);
      if (v35)
      {
        uint64_t v18 = *(void *)(v35 + 16);
        if (v18)
        {
          os_log_type_t v32 = v9;
          unint64_t v19 = v35 + v37;
          swift_bridgeObjectRetain();
          while (1)
          {
            unint64_t v20 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[25];
            uint64_t v21 = v0[14];
            uint64_t v22 = v0[11];
            v15(v22, v19, v21);
            v39(v22, 0, 1, v21);
            if (v20(v22, 1, v21) == 1)
            {
              swift_bridgeObjectRelease();
              id v10 = *v38;
LABEL_4:
              uint64_t v9 = v32;
              uint64_t v3 = v10((char *)v0[18], v0[14]);
              uint64_t v6 = v31;
              goto LABEL_5;
            }
            uint64_t v23 = (char *)v0[17];
            uint64_t v24 = v0[14];
            v17(v23, v0[11], v24);
            sub_10002E7C0(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v25 = sub_1000B3F90();
            id v10 = *v38;
            (*v38)(v23, v24);
            if (v25) {
              break;
            }
            v19 += v14;
            if (!--v18)
            {
              v39(v0[11], 1, 1, v0[14]);
              swift_bridgeObjectRelease();
              goto LABEL_4;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v6 = v31;
          uint64_t v9 = v32;
        }
      }
      v17((char *)v0[16], v0[18], v0[14]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001E9D8(0, v9[2] + 1, 1);
        uint64_t v9 = v41;
      }
      unint64_t v27 = v9[2];
      unint64_t v26 = v9[3];
      if (v27 >= v26 >> 1)
      {
        sub_10001E9D8(v26 > 1, v27 + 1, 1);
        uint64_t v9 = v41;
      }
      uint64_t v28 = v0[16];
      uint64_t v29 = v0[14];
      v9[2] = v27 + 1;
      uint64_t v3 = v17((char *)v9 + v37 + v27 * v14, v28, v29);
      BOOL v41 = v9;
LABEL_5:
      unint64_t v7 = v36 + 1;
      if (v36 + 1 == v34)
      {
        v39(v0[12], 1, 1, v0[14]);
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[15] + 56))(v0[12], 1, 1, v0[14]);
LABEL_23:
    swift_bridgeObjectRelease();
    sub_100017B5C(v0[12], &qword_1000D5008);
    swift_bridgeObjectRelease();
    v0[33] = v9;
    uint64_t v3 = (uint64_t)sub_10002E3E0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10002E3E0()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void **)(v0 + 192);
  if (*(void *)(v1 + 16))
  {
    id v3 = [*(id *)(v0 + 192) homes];
    sub_10002E604();
    unint64_t v4 = sub_1000B4100();

    swift_retain();
    uint64_t v5 = (void *)sub_10002CD58(v4, v1);
    swift_release_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    uint64_t v5 = _swiftEmptyArrayStorage;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void *))(v0 + 8);
  return v6(v5);
}

uint64_t sub_10002E52C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002E594(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10002E5F4(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10002E604()
{
  unint64_t result = qword_1000D5550;
  if (!qword_1000D5550)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D5550);
  }
  return result;
}

uint64_t sub_10002E648()
{
  return 48;
}

__n128 sub_10002E654(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_10002E66C@<X0>(uint64_t *a1@<X8>)
{
  sub_100004BC8();
  uint64_t result = sub_1000B4420();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002E6B8()
{
  return 48;
}

__n128 sub_10002E6C4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_10002E6D8()
{
  swift_getAtKeyPath();
  return v1;
}

uint64_t sub_10002E710@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v7 = *a1;
  uint64_t result = v4(&v7);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10002E754(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002E7C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002E810()
{
  unint64_t result = qword_1000D55B0;
  if (!qword_1000D55B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55B0);
  }
  return result;
}

unint64_t sub_10002E868()
{
  unint64_t result = qword_1000D55B8;
  if (!qword_1000D55B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55B8);
  }
  return result;
}

uint64_t sub_10002E8BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002E8D8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10002E928()
{
  unint64_t result = qword_1000D55C0;
  if (!qword_1000D55C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55C0);
  }
  return result;
}

uint64_t sub_10002E97C()
{
  uint64_t v0 = sub_1000B2C70();
  sub_100022374(v0, qword_1000DCB08);
  uint64_t v1 = sub_100017618(v0, (uint64_t)qword_1000DCB08);
  uint64_t v2 = enum case for IntentAuthenticationPolicy.requiresAuthentication(_:);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_10002EA04()
{
  uint64_t v0 = sub_1000B2DA0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B2FA0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000B3FF0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000B2DC0();
  sub_100022374(v6, qword_1000DCB20);
  sub_100017618(v6, (uint64_t)qword_1000DCB20);
  sub_1000B3FA0();
  sub_1000B2F90();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1000B2DD0();
}

uint64_t sub_10002EBF4(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  sub_100004210(&qword_1000D5378);
  v2[8] = swift_task_alloc();
  uint64_t v3 = sub_1000B2E90();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v4 = sub_1000B3570();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = type metadata accessor for WidgetTileInfo();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for AccessoryAndSceneEntity();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_10002EDCC, 0, 0);
}

uint64_t sub_10002EDCC()
{
  char v71 = v0;
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[18];
  sub_1000B2990();
  char v3 = sub_10001A5A8();
  sub_100030438(v1, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  if ((v3 & 1) == 0
    || (uint64_t v4 = v0[20],
        uint64_t v5 = v0[16],
        sub_1000B2990(),
        int v6 = *(unsigned __int8 *)(v4 + *(int *)(v2 + 24) + *(int *)(v5 + 52)),
        sub_100030438(v4, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity),
        v6 != 1))
  {
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[13];
    uint64_t v13 = v0[14];
    uint64_t v15 = v0[12];
    uint64_t v16 = sub_100017618(v15, (uint64_t)qword_1000DCC18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v16, v15);
    swift_retain();
    uint64_t v17 = sub_1000B3550();
    os_log_type_t v18 = sub_1000B42C0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = v0[20];
      uint64_t v62 = v0[16];
      uint64_t v64 = v0[13];
      uint64_t v66 = v0[12];
      uint64_t v68 = v0[14];
      uint64_t v20 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315394;
      v0[2] = sub_10002A68C(0x286D726F66726570, 0xE900000000000029, &v70);
      sub_1000B4400();
      *(_WORD *)(v20 + 12) = 2080;
      sub_1000B2990();
      uint64_t v21 = (uint64_t *)(v19 + *(int *)(v2 + 24) + *(int *)(v62 + 24));
      uint64_t v23 = *v21;
      unint64_t v22 = v21[1];
      swift_bridgeObjectRetain();
      sub_100030438(v19, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      v0[3] = sub_10002A68C(v23, v22, &v70);
      sub_1000B4400();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s %s does not support toggle()", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v68, v66);
    }
    else
    {
      uint64_t v25 = v0[13];
      uint64_t v24 = v0[14];
      uint64_t v26 = v0[12];
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    }
    uint64_t v27 = v0[19];
    uint64_t v28 = v0[9];
    uint64_t v29 = v0[10];
    uint64_t v30 = v0[8];
    sub_1000B2990();
    sub_100023850();
    sub_100030438(v27, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v30, 1, v28) == 1)
    {
      sub_1000303D8(v0[8]);
LABEL_23:
      sub_1000B2970();
      goto LABEL_24;
    }
    (*(void (**)(void, void, void))(v0[10] + 32))(v0[11], v0[8], v0[9]);
    uint64_t v31 = sub_1000B2E70();
    uint64_t v33 = v32;
    uint64_t v34 = sub_1000B4010();
    if (!v33)
    {
      swift_bridgeObjectRelease();
      sub_1000B4010();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    if (v31 != v34 || v33 != v35)
    {
      char v36 = sub_1000B4830();
      swift_bridgeObjectRelease();
      if (v36)
      {
LABEL_19:
        swift_bridgeObjectRelease();
LABEL_20:
        id v38 = [self sharedInstance];
        sub_1000B2E30(v39);
        BOOL v41 = v40;
        id v42 = [v38 openURL:v40];

LABEL_22:
        (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
        goto LABEL_23;
      }
      if (v31 != sub_1000B4010() || v33 != v37)
      {
        char v56 = sub_1000B4830();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v56 & 1) == 0) {
          goto LABEL_22;
        }
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v7 = v0[20];
  uint64_t v9 = v0[16];
  uint64_t v8 = v0[17];
  sub_1000B2990();
  sub_100007FDC(v7 + *(int *)(v2 + 24), v8);
  sub_100030438(v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  unsigned int v10 = *(unsigned __int8 *)(v8 + *(int *)(v9 + 56) + 8);
  if (v10 < 3)
  {
    uint64_t v11 = (void *)swift_task_alloc();
    v0[23] = v11;
    *uint64_t v11 = v0;
    uint64_t v12 = sub_10002FB64;
LABEL_29:
    v11[1] = v12;
    return sub_100071930();
  }
  if (v10 == 3)
  {
    uint64_t v11 = (void *)swift_task_alloc();
    v0[22] = v11;
    *uint64_t v11 = v0;
    uint64_t v12 = sub_10002F710;
    goto LABEL_29;
  }
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v45 = v0[15];
  uint64_t v46 = v0[12];
  uint64_t v47 = v0[13];
  uint64_t v48 = sub_100017618(v46, (uint64_t)qword_1000DCC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v48, v46);
  swift_retain();
  uint64_t v49 = sub_1000B3550();
  os_log_type_t v50 = sub_1000B42C0();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = v0[20];
    uint64_t v61 = v0[18];
    uint64_t v63 = v0[16];
    uint64_t v65 = v0[13];
    uint64_t v67 = v0[12];
    uint64_t v69 = v0[15];
    uint64_t v52 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 136315394;
    v0[4] = sub_10002A68C(0x286D726F66726570, 0xE900000000000029, &v70);
    sub_1000B4400();
    *(_WORD *)(v52 + 12) = 2080;
    sub_1000B2990();
    uint64_t v53 = (uint64_t *)(v51 + *(int *)(v61 + 24) + *(int *)(v63 + 24));
    uint64_t v55 = *v53;
    unint64_t v54 = v53[1];
    swift_bridgeObjectRetain();
    sub_100030438(v51, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    v0[5] = sub_10002A68C(v55, v54, &v70);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s %s sent toggle() to device", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v69, v67);
  }
  else
  {
    uint64_t v57 = v0[15];
    uint64_t v58 = v0[12];
    uint64_t v59 = v0[13];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
  }
  uint64_t v60 = v0[17];
  sub_1000B2970();
  sub_100030438(v60, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_10002F710()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10002F80C, 0, 0);
}

uint64_t sub_10002F80C()
{
  uint64_t v24 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_100017618(v2, (uint64_t)qword_1000DCC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  swift_retain();
  uint64_t v5 = sub_1000B3550();
  os_log_type_t v6 = sub_1000B42C0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[20];
    uint64_t v18 = v0[18];
    uint64_t v19 = v0[16];
    uint64_t v20 = v0[13];
    uint64_t v21 = v0[12];
    uint64_t v22 = v0[15];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[4] = sub_10002A68C(0x286D726F66726570, 0xE900000000000029, &v23);
    sub_1000B4400();
    *(_WORD *)(v8 + 12) = 2080;
    sub_1000B2990();
    uint64_t v9 = (uint64_t *)(v7 + *(int *)(v18 + 24) + *(int *)(v19 + 24));
    uint64_t v11 = *v9;
    unint64_t v10 = v9[1];
    swift_bridgeObjectRetain();
    sub_100030438(v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    v0[5] = sub_10002A68C(v11, v10, &v23);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s %s sent toggle() to device", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    uint64_t v12 = v0[15];
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[13];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = v0[17];
  sub_1000B2970();
  sub_100030438(v15, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_10002FB64()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100030498, 0, 0);
}

uint64_t sub_10002FC60@<X0>(uint64_t a1@<X8>)
{
  return sub_10002FCD4(&qword_1000D4E40, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000DCB20, a1);
}

uint64_t sub_10002FC9C@<X0>(uint64_t a1@<X8>)
{
  return sub_10002FCD4(&qword_1000D4E38, (uint64_t (*)(void))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_1000DCB08, a1);
}

uint64_t sub_10002FCD4@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100017618(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10002FD7C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100021DB0;
  return sub_10002EBF4(a1, v4);
}

uint64_t sub_10002FE1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002FE94();
  *a1 = result;
  return result;
}

uint64_t sub_10002FE44(uint64_t a1)
{
  unint64_t v2 = sub_10002E928();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for ToggleIntent()
{
  return &type metadata for ToggleIntent;
}

uint64_t sub_10002FE94()
{
  uint64_t v0 = sub_1000B2BB0();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100004210(&qword_1000D5370);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)&v23 - v5;
  uint64_t v6 = sub_100004210(&qword_1000D55D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v24 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B2DA0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000B2FA0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000B3FF0();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_1000B2DC0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v23 = sub_100004210(&qword_1000D55D8);
  sub_1000B3FA0();
  sub_1000B2F90();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  sub_1000B2DD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v10, 1, 1, v17);
  uint64_t v19 = type metadata accessor for AccessoryAndSceneEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = sub_1000B2960();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v25, 1, 1, v20);
  v21(v26, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  sub_100030380();
  return sub_1000B29E0();
}

unint64_t sub_100030380()
{
  unint64_t result = qword_1000D5428[0];
  if (!qword_1000D5428[0])
  {
    type metadata accessor for AccessoryAndSceneEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D5428);
  }
  return result;
}

uint64_t sub_1000303D8(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5378);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100030438(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000304A0()
{
  unint64_t result = qword_1000D55E8;
  if (!qword_1000D55E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55E8);
  }
  return result;
}

unint64_t sub_1000304F8()
{
  unint64_t result = qword_1000D55F0;
  if (!qword_1000D55F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55F0);
  }
  return result;
}

unint64_t sub_100030550()
{
  unint64_t result = qword_1000D55F8;
  if (!qword_1000D55F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55F8);
  }
  return result;
}

unint64_t sub_1000305A8()
{
  unint64_t result = qword_1000D5600;
  if (!qword_1000D5600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5600);
  }
  return result;
}

uint64_t sub_1000305FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100030618()
{
  return sub_1000B2990();
}

uint64_t sub_10003063C()
{
  uint64_t v0 = sub_1000B2DC0();
  sub_100022374(v0, qword_1000DCB38);
  sub_100017618(v0, (uint64_t)qword_1000DCB38);
  return sub_1000B2D90();
}

uint64_t sub_1000306A0()
{
  return sub_1000B29B0();
}

uint64_t sub_1000306C4()
{
  return sub_1000B29B0();
}

uint64_t sub_1000306E8()
{
  return sub_1000B29B0();
}

uint64_t sub_10003070C@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v1 = sub_1000B2C60();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004210(&qword_1000D5650);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v14 - v10;
  swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for HasValueComparisonOperator.hasNoValue(_:), v1);
  sub_100004210(&qword_1000D5658);
  sub_1000304A0();
  sub_10001FF28(&qword_1000D5668, &qword_1000D5658);
  sub_10001FF28(&qword_1000D5678, &qword_1000D5630);
  sub_1000B2CA0();
  sub_10001FF28(&qword_1000D5660, &qword_1000D5650);
  sub_1000B2BD0();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v9, v5);
  sub_1000B2BC0();
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, v5);
}

uint64_t sub_1000309F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B29B0();
  *a1 = result;
  return result;
}

uint64_t sub_100030A1C()
{
  return sub_100030B4C();
}

uint64_t sub_100030A34()
{
  swift_getKeyPath();
  sub_1000304A0();
  uint64_t v0 = sub_1000B2B80();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v1 = sub_1000B2B80();
  swift_release();
  sub_100004210(&qword_1000D5190);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000B5BA0;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  sub_1000B4120();
  swift_retain();
  uint64_t v3 = sub_1000B2B70();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100030B34()
{
  return sub_100030B4C();
}

uint64_t sub_100030B4C()
{
  uint64_t v0 = sub_100004210(&qword_1000D5658);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v9 - v5;
  sub_1000304A0();
  sub_1000B2B90();
  sub_10001FF28(&qword_1000D5668, &qword_1000D5658);
  sub_1000B2BD0();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_1000B2BC0();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_100030CD4()
{
  swift_getKeyPath();
  sub_1000304A0();
  uint64_t v0 = sub_1000B2B80();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v1 = sub_1000B2B80();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v2 = sub_1000B2B80();
  swift_release();
  sub_100004210(&qword_1000D5190);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000B5BB0;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  sub_1000B4120();
  swift_retain();
  uint64_t v4 = sub_1000B2B70();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100030E18()
{
  return sub_100030B4C();
}

uint64_t sub_100030E30()
{
  swift_getKeyPath();
  sub_1000304A0();
  uint64_t v0 = sub_1000B2B80();
  swift_release();
  sub_100004210(&qword_1000D5190);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000B52D0;
  *(void *)(v1 + 32) = v0;
  sub_1000B4120();
  swift_retain();
  uint64_t v2 = sub_1000B2B70();
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100030EF8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D4E48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B2DC0();
  uint64_t v3 = sub_100017618(v2, (uint64_t)qword_1000DCB38);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100030FA4()
{
  uint64_t v0 = sub_1000B2C80();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for EquatableComparisonOperator.equalTo(_:), v0);
  v5[15] = 0;
  sub_100004210(&qword_1000D5650);
  sub_100004210(&qword_1000D5658);
  sub_10001FF28(&qword_1000D5660, &qword_1000D5650);
  sub_10001FF28(&qword_1000D5668, &qword_1000D5658);
  sub_10001FF28(&qword_1000D5670, &qword_1000D5628);
  return sub_1000B2CB0();
}

uint64_t sub_1000311A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_100031F9C();
  *uint64_t v4 = v2;
  v4[1] = sub_100031254;
  return WidgetConfigurationIntent.perform()(a2, v5);
}

uint64_t sub_100031254()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_10003135C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100031634();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_100031388(uint64_t a1)
{
  unint64_t v2 = sub_1000304A0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_1000313C4()
{
  return sub_1000581D8();
}

unint64_t variable initialization expression of RecommendedWidgetIdentity.widgetKind()
{
  return 0xD000000000000021;
}

uint64_t destroy for RecommendedItemIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s10HomeWidget21RecommendedItemIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for RecommendedItemIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for RecommendedItemIntent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for RecommendedItemIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecommendedItemIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecommendedItemIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendedItemIntent()
{
  return &type metadata for RecommendedItemIntent;
}

uint64_t sub_1000315F8()
{
  return sub_10001FF28(&qword_1000D5610, &qword_1000D5618);
}

uint64_t sub_100031634()
{
  uint64_t v0 = sub_100004210(&qword_1000D5518);
  __chkstk_darwin(v0 - 8);
  uint64_t v45 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000B2BB0();
  uint64_t v60 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  char v56 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004210(&qword_1000D5370);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v58 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v37 - v6;
  uint64_t v7 = sub_100004210(&qword_1000D5620);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000B2DA0();
  uint64_t v13 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000B2FA0();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000B3FF0();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000B2DC0();
  uint64_t v50 = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v43 = (char *)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v44 = sub_100004210(&qword_1000D5628);
  uint64_t v46 = v21;
  sub_1000B3FA0();
  sub_1000B2F90();
  unsigned int v52 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v26 = *(void (**)(void))(v13 + 104);
  uint64_t v53 = v13 + 104;
  uint64_t v55 = (void (*)(char *, void, uint64_t))v26;
  v26(v15);
  unint64_t v51 = 0x80000001000B9360;
  uint64_t v27 = v15;
  sub_1000B2DD0();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v49 = v23 + 56;
  v28(v12, 1, 1, v22);
  BOOL v41 = v28;
  LOBYTE(v62) = 1;
  uint64_t v29 = sub_1000B4160();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
  uint64_t v30 = sub_1000B2960();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  uint64_t v40 = v31 + 56;
  v39(v59, 1, 1, v30);
  unsigned int v48 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v47 = *(void (**)(char *))(v60 + 104);
  v60 += 104;
  uint64_t v32 = v57;
  v47(v56);
  uint64_t v44 = sub_1000B2A00();
  uint64_t v42 = sub_100004210(&qword_1000D5630);
  sub_1000B3FA0();
  uint64_t v37 = v18;
  sub_1000B2F90();
  id v38 = v27;
  v55(v27, v52, v54);
  sub_1000B2DD0();
  v28(v12, 1, 1, v50);
  uint64_t v33 = type metadata accessor for HomeEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v45, 1, 1, v33);
  uint64_t v34 = v39;
  v39(v59, 1, 1, v30);
  v34(v58, 1, 1, v30);
  uint64_t v35 = v56;
  ((void (*)(char *, void, uint64_t))v47)(v56, v48, v32);
  sub_100031F18();
  uint64_t v45 = (char *)sub_1000B29E0();
  uint64_t v42 = sub_100004210(&qword_1000D5640);
  sub_1000B3FA0();
  sub_1000B2F90();
  v55(v38, v52, v54);
  sub_1000B2DD0();
  v41(v12, 1, 1, v50);
  uint64_t v62 = 0;
  v34(v59, 1, 1, v30);
  v34(v58, 1, 1, v30);
  sub_100004210(&qword_1000D5590);
  swift_getKeyPath();
  uint64_t v61 = sub_1000B2C10();
  ((void (*)(char *, void, uint64_t))v47)(v35, v48, v57);
  sub_100022778();
  sub_1000B29D0();
  return v44;
}

unint64_t sub_100031F18()
{
  unint64_t result = qword_1000D5638;
  if (!qword_1000D5638)
  {
    type metadata accessor for HomeEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5638);
  }
  return result;
}

uint64_t sub_100031F70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B29B0();
  *a1 = result;
  return result;
}

unint64_t sub_100031F9C()
{
  unint64_t result = qword_1000D5648;
  if (!qword_1000D5648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5648);
  }
  return result;
}

uint64_t sub_100031FF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B29B0();
  *a1 = result;
  return result;
}

uint64_t sub_10003201C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B29B0();
  *a1 = result;
  return result;
}

uint64_t sub_100032048()
{
  uint64_t v0 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000B2F60();
  sub_100022374(v3, qword_1000DCB50);
  uint64_t v4 = sub_100017618(v3, (uint64_t)qword_1000DCB50);
  sub_1000B2F20();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

void *sub_100032178()
{
  uint64_t result = sub_100032198();
  qword_1000DCB70 = (uint64_t)result;
  return result;
}

void *sub_100032198()
{
  uint64_t v106 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v1 = (char *)&v86 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for WidgetTileInfo();
  __chkstk_darwin(v104);
  uint64_t v3 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B2F60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::Int v107 = (char *)&v86 - v12;
  uint64_t v89 = sub_1000B2E90();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v14 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100022874((uint64_t)v14);
  unint64_t v87 = v14;
  uint64_t v90 = sub_1000B2EA0();
  unint64_t v91 = v15;
  uint64_t v16 = qword_1000DCB68;
  if (qword_1000DCB68) {
    goto LABEL_5;
  }
  uint64_t v17 = self;
  Class isa = sub_1000B2EB0().super.isa;
  *(void *)&long long v133 = 0;
  id v19 = [v17 propertyListWithData:isa options:1 format:0 error:&v133];

  if (v19)
  {
    id v20 = (id)v133;
    sub_1000B4460();
    swift_unknownObjectRelease();
    sub_100004210(&qword_1000D5680);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_10003310C(v90, v91);
      goto LABEL_39;
    }
    uint64_t v16 = v131;
    qword_1000DCB68 = v131;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v103 = *(void *)(v16 + 16);
    if (v103)
    {
      uint64_t v102 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      uint64_t v118 = (void (**)(char *, char *, uint64_t))(v8 + 32);
      uint64_t v21 = (void (**)(char *, char *, uint64_t))(v8 + 16);
      unsigned int v95 = enum case for StaticRenderingMode.hierarchical(_:);
      unsigned int v94 = enum case for StaticRenderingMode.monochrome(_:);
      unint64_t v93 = (void (**)(char *, uint64_t))(v8 + 8);
      swift_bridgeObjectRetain();
      uint64_t v22 = 0;
      unint64_t v101 = (char *)&type metadata for Any + 8;
      uint64_t v100 = 0x80000001000B9460;
      uint64_t v120 = _swiftEmptyArrayStorage;
      uint64_t v23 = v107;
      uint64_t v99 = v1;
      uint64_t v98 = v6;
      int64_t v97 = v11;
      uint64_t v96 = v16;
      uint64_t v92 = v7;
      do
      {
        uint64_t v24 = *(void *)(v16 + 8 * v22 + 32);
        if (!*(void *)(v24 + 16))
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
        }
        swift_bridgeObjectRetain();
        unint64_t v25 = sub_1000414A4(25705, 0xE200000000000000);
        if ((v26 & 1) == 0) {
          goto LABEL_42;
        }
        uint64_t v117 = v22;
        uint64_t v27 = v21;
        sub_1000084C4(*(void *)(v24 + 56) + 32 * v25, (uint64_t)&v131);
        sub_10002011C(&v131, &v133);
        swift_dynamicCast();
        sub_1000B2F20();
        swift_bridgeObjectRelease();
        if ((*v102)(v6, 1, v7) == 1) {
          goto LABEL_57;
        }
        uint64_t v28 = *v118;
        (*v118)(v23, v6, v7);
        if (!*(void *)(v24 + 16)) {
          goto LABEL_43;
        }
        unint64_t v29 = sub_1000414A4(1701667182, 0xE400000000000000);
        if ((v30 & 1) == 0) {
          goto LABEL_44;
        }
        uint64_t v116 = (void (*)(uint64_t, char *, uint64_t))v28;
        sub_1000084C4(*(void *)(v24 + 56) + 32 * v29, (uint64_t)&v131);
        sub_10002011C(&v131, &v133);
        swift_dynamicCast();
        if (!*(void *)(v24 + 16)) {
          goto LABEL_45;
        }
        unint64_t v31 = sub_1000414A4(0x656D614E6D6F6F72, 0xE800000000000000);
        if ((v32 & 1) == 0) {
          goto LABEL_46;
        }
        sub_1000084C4(*(void *)(v24 + 56) + 32 * v31, (uint64_t)&v131);
        sub_10002011C(&v131, &v133);
        swift_dynamicCast();
        if (!*(void *)(v24 + 16)) {
          goto LABEL_47;
        }
        unint64_t v33 = sub_1000414A4(0x626D79536E6F6369, 0xEA00000000006C6FLL);
        if ((v34 & 1) == 0) {
          goto LABEL_48;
        }
        sub_1000084C4(*(void *)(v24 + 56) + 32 * v33, (uint64_t)&v131);
        sub_10002011C(&v131, &v133);
        swift_dynamicCast();
        if (!*(void *)(v24 + 16)) {
          goto LABEL_49;
        }
        unint64_t v35 = sub_1000414A4(0xD000000000000013, v100);
        if ((v36 & 1) == 0) {
          goto LABEL_50;
        }
        sub_1000084C4(*(void *)(v24 + 56) + 32 * v35, (uint64_t)&v131);
        sub_10002011C(&v131, &v133);
        swift_dynamicCast();
        uint64_t v37 = sub_1000B3C90();
        if (!*(void *)(v24 + 16)) {
          goto LABEL_51;
        }
        uint64_t v38 = v37;
        swift_retain();
        unint64_t v39 = sub_1000414A4(0x6176697463417369, 0xEB00000000646574);
        if ((v40 & 1) == 0) {
          goto LABEL_52;
        }
        uint64_t v119 = v38;
        sub_1000084C4(*(void *)(v24 + 56) + 32 * v39, (uint64_t)&v131);
        sub_10002011C(&v131, &v133);
        sub_100033068();
        swift_dynamicCast();
        id v41 = v122;
        [v122 BOOLValue];

        if (!*(void *)(v24 + 16)) {
          goto LABEL_53;
        }
        unint64_t v42 = sub_1000414A4(0x6168636165527369, 0xEB00000000656C62);
        if ((v43 & 1) == 0) {
          goto LABEL_54;
        }
        sub_1000084C4(*(void *)(v24 + 56) + 32 * v42, (uint64_t)&v131);
        sub_10002011C(&v131, &v133);
        swift_dynamicCast();
        id v44 = v122;
        unsigned int v115 = [v122 BOOLValue];

        if (!*(void *)(v24 + 16)) {
          goto LABEL_55;
        }
        unint64_t v45 = sub_1000414A4(0x7453737574617473, 0xEC000000676E6972);
        if ((v46 & 1) == 0) {
          goto LABEL_56;
        }
        sub_1000084C4(*(void *)(v24 + 56) + 32 * v45, (uint64_t)&v131);
        sub_10002011C(&v131, &v133);
        swift_dynamicCast();
        if (*(void *)(v24 + 16) && (unint64_t v47 = sub_1000414A4(0x6168636165527369, 0xEB00000000656C62), (v48 & 1) != 0))
        {
          sub_1000084C4(*(void *)(v24 + 56) + 32 * v47, (uint64_t)&v131);
        }
        else
        {
          long long v131 = 0u;
          long long v132 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((void *)&v132 + 1)) {
          goto LABEL_58;
        }
        sub_10002011C(&v131, &v133);
        swift_dynamicCast();
        id v49 = v121;
        [v121 BOOLValue];

        uint64_t v21 = v27;
        uint64_t v50 = *v27;
        (*v27)(v3, v23, v7);
        unint64_t v51 = v3;
        unsigned int v52 = (int *)v104;
        v50(&v51[*(int *)(v104 + 20)], v23, v7);
        uint64_t v53 = v130;
        uint64_t v112 = v129;
        uint64_t v111 = v127;
        uint64_t v108 = v128;
        uint64_t v54 = v124;
        uint64_t v113 = v125;
        uint64_t v109 = v126;
        uint64_t v114 = v123;
        uint64_t v55 = &v51[v52[10]];
        uint64_t v56 = sub_1000B33D0();
        uint64_t v57 = *(void (**)(char *, void, uint64_t))(*(void *)(v56 - 8) + 104);
        v57(v55, v95, v56);
        v57(&v51[v52[11]], v94, v56);
        uint64_t v58 = v53;
        swift_bridgeObjectRetain();
        uint64_t v59 = v108;
        swift_bridgeObjectRetain();
        uint64_t v60 = v109;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v110 = sub_100019CE4((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v61 = &v51[v52[7]];
        uint64_t v62 = &v51[v52[17]];
        uint64_t v63 = sub_1000B32E0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 1, 1, v63);
        uint64_t v64 = v52[18];
        uint64_t v65 = &v51[v52[19]];
        uint64_t v66 = v52[20];
        uint64_t v67 = v52[21];
        uint64_t v68 = &v51[v52[6]];
        *(void *)uint64_t v68 = v112;
        *((void *)v68 + 1) = v58;
        uint64_t v23 = v107;
        *(void *)uint64_t v61 = v111;
        *((void *)v61 + 1) = v59;
        uint64_t v69 = &v51[v52[8]];
        *(void *)uint64_t v69 = v113;
        *((void *)v69 + 1) = v60;
        uint64_t v70 = &v51[v52[9]];
        *(void *)uint64_t v70 = v114;
        *((void *)v70 + 1) = v54;
        *(void *)&v51[v52[12]] = v119;
        v51[v52[13]] = v115;
        char v71 = &v51[v52[14]];
        *(void *)char v71 = 0;
        v71[8] = 4;
        *(void *)&v51[v52[15]] = v110;
        uint64_t v72 = &v51[v66];
        uint64_t v73 = v52[16];
        uint64_t v3 = v51;
        v51[v73] = 0;
        v51[v64] = 2;
        *(void *)uint64_t v65 = 0;
        v65[8] = 1;
        *(void *)uint64_t v72 = 0;
        *((void *)v72 + 1) = 0;
        v51[v67] = 2;
        uint64_t v74 = v97;
        uint64_t v7 = v92;
        ((void (*)(char *, char *))v50)(v97, v23);
        if (qword_1000D4E50 != -1) {
          swift_once();
        }
        uint64_t v75 = sub_100017618(v7, (uint64_t)qword_1000DCB50);
        uint64_t v76 = v106;
        uint64_t v77 = (uint64_t)v99;
        v50(&v99[*(int *)(v106 + 20)], (char *)v75, v7);
        sub_100007FDC((uint64_t)v3, v77 + *(int *)(v76 + 24));
        v116(v77, v74, v7);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v6 = v98;
        uint64_t v16 = v96;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v120 = (void *)sub_100075670(0, v120[2] + 1, 1, (unint64_t)v120);
        }
        unint64_t v80 = v120[2];
        unint64_t v79 = v120[3];
        if (v80 >= v79 >> 1) {
          uint64_t v120 = (void *)sub_100075670(v79 > 1, v80 + 1, 1, (unint64_t)v120);
        }
        uint64_t v81 = v117 + 1;
        uint64_t v82 = v120;
        v120[2] = v80 + 1;
        uint64_t v83 = (uint64_t)v82
            + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))
            + *(void *)(v105 + 72) * v80;
        uint64_t v22 = v81;
        sub_1000330A8(v77, v83);
        swift_release();
        sub_100008040((uint64_t)v3);
        (*v93)(v23, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v103 != v22);
      sub_10003310C(v90, v91);
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    sub_10003310C(v90, v91);
    swift_bridgeObjectRelease();
LABEL_39:
    uint64_t v120 = _swiftEmptyArrayStorage;
LABEL_40:
    (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
    return v120;
  }
  id v85 = (id)v133;
  sub_1000B2D80();

  swift_willThrow();
  uint64_t result = (void *)swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_100033068()
{
  unint64_t result = qword_1000D51E0;
  if (!qword_1000D51E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D51E0);
  }
  return result;
}

uint64_t sub_1000330A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryAndSceneEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003310C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *sub_100033164(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000B2F60();
  uint64_t v5 = *(void *)(v49 - 8);
  uint64_t v6 = __chkstk_darwin(v49);
  unint64_t v42 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v38 = (char *)&v37 - v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1000B44B0();
    sub_100008148(0, &qword_1000D4FD8);
    sub_1000349C8();
    uint64_t result = (void *)sub_1000B4220();
    a1 = v51;
    uint64_t v47 = v52;
    uint64_t v10 = v53;
    uint64_t v11 = v54;
    uint64_t v12 = v55;
  }
  else
  {
    uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v47 = a1 + 56;
    uint64_t v10 = ~v13;
    uint64_t v15 = -v13;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    uint64_t v12 = v16 & v14;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v11 = 0;
  }
  uint64_t v39 = v5;
  uint64_t v40 = v10;
  uint64_t v45 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v46 = (unint64_t)(v10 + 64) >> 6;
  uint64_t v17 = (void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  id v41 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  char v43 = _swiftEmptyArrayStorage;
  id v19 = &HomeManagerActor;
  id v44 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v48 = a1;
LABEL_8:
  uint64_t v20 = v11;
  unint64_t v21 = v12;
  if (a1 < 0)
  {
    do
    {
      uint64_t v23 = sub_1000B4520();
      if (!v23) {
        goto LABEL_39;
      }
      uint64_t v50 = v23;
      sub_100008148(0, &qword_1000D4FD8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v24 = v56;
      swift_unknownObjectRelease();
      uint64_t v11 = v20;
      uint64_t v12 = v21;
      id v19 = &HomeManagerActor;
      if (!v24) {
        goto LABEL_39;
      }
LABEL_31:
      id v28 = [v24 (SEL)v19[330].count];
      sub_1000B2F50();

      uint64_t v29 = v49;
      (*v17)(v4, 0, 1, v49);

      if ((*v18)(v4, 1, v29) != 1)
      {
        char v30 = *v41;
        unint64_t v31 = v38;
        uint64_t v32 = v49;
        (*v41)(v38, v4, v49);
        v30(v42, v31, v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v43 = (void *)sub_1000753BC(0, v43[2] + 1, 1, (unint64_t)v43);
        }
        unint64_t v34 = v43[2];
        unint64_t v33 = v43[3];
        if (v34 >= v33 >> 1) {
          char v43 = (void *)sub_1000753BC(v33 > 1, v34 + 1, 1, (unint64_t)v43);
        }
        unint64_t v35 = v42;
        char v36 = v43;
        v43[2] = v34 + 1;
        uint64_t result = (void *)((uint64_t (*)(char *, char *, uint64_t))v30)((char *)v36+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v34, v35, v49);
        a1 = v48;
        id v19 = &HomeManagerActor;
        goto LABEL_8;
      }
      uint64_t result = (void *)sub_1000094A4((uint64_t)v4);
      uint64_t v20 = v11;
      unint64_t v21 = v12;
      a1 = v48;
    }
    while (v48 < 0);
  }
  if (v21)
  {
    uint64_t v12 = (v21 - 1) & v21;
    unint64_t v22 = __clz(__rbit64(v21)) | (v20 << 6);
    uint64_t v11 = v20;
    goto LABEL_30;
  }
  int64_t v25 = v20 + 1;
  if (!__OFADD__(v20, 1))
  {
    if (v25 < v46)
    {
      unint64_t v26 = *(void *)(v47 + 8 * v25);
      uint64_t v11 = v20 + 1;
      if (v26) {
        goto LABEL_29;
      }
      uint64_t v11 = v20 + 2;
      if (v20 + 2 >= v46) {
        goto LABEL_39;
      }
      unint64_t v26 = *(void *)(v47 + 8 * v11);
      if (v26) {
        goto LABEL_29;
      }
      uint64_t v11 = v20 + 3;
      if (v20 + 3 >= v46) {
        goto LABEL_39;
      }
      unint64_t v26 = *(void *)(v47 + 8 * v11);
      if (v26) {
        goto LABEL_29;
      }
      uint64_t v11 = v20 + 4;
      if (v20 + 4 >= v46) {
        goto LABEL_39;
      }
      unint64_t v26 = *(void *)(v47 + 8 * v11);
      if (v26)
      {
LABEL_29:
        uint64_t v12 = (v26 - 1) & v26;
        unint64_t v22 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_30:
        id v24 = *(id *)(*(void *)(a1 + 48) + 8 * v22);
        if (v24) {
          goto LABEL_31;
        }
        goto LABEL_39;
      }
      uint64_t v11 = v20 + 5;
      if (v20 + 5 < v46)
      {
        unint64_t v26 = *(void *)(v47 + 8 * v11);
        if (!v26)
        {
          uint64_t v27 = v20 + 6;
          while (v46 != v27)
          {
            unint64_t v26 = *(void *)(v47 + 8 * v27++);
            if (v26)
            {
              uint64_t v11 = v27 - 1;
              a1 = v48;
              goto LABEL_29;
            }
          }
          goto LABEL_39;
        }
        goto LABEL_29;
      }
    }
LABEL_39:
    sub_100017A14();
    return v43;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000336A0(uint64_t a1)
{
  uint64_t v2 = v1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1000B44B0();
    sub_100008148(0, &qword_1000D4FD8);
    sub_1000349C8();
    sub_1000B4220();
    uint64_t v3 = (uint64_t)v43[1];
    id v41 = v43[2];
    uint64_t v4 = (uint64_t)v43[3];
    uint64_t v5 = v43[4];
    unint64_t v6 = (unint64_t)v43[5];
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    id v41 = (char *)(a1 + 56);
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  uint64_t v10 = _swiftEmptyArrayStorage;
  int64_t v40 = (unint64_t)(v4 + 64) >> 6;
  for (i = v3; ; uint64_t v3 = i)
  {
    if (v3 < 0)
    {
      uint64_t v14 = (char *)sub_1000B4520();
      if (!v14) {
        goto LABEL_55;
      }
      v43[0] = v14;
      sub_100008148(0, &qword_1000D4FD8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v15 = v44;
      swift_unknownObjectRelease();
      uint64_t v13 = v5;
      uint64_t v11 = v6;
      if (!v15) {
        goto LABEL_55;
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v11 = (v6 - 1) & v6;
        unint64_t v12 = __clz(__rbit64(v6)) | ((void)v5 << 6);
        uint64_t v13 = v5;
      }
      else
      {
        uint64_t v13 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_61;
        }
        if ((uint64_t)v13 >= v40) {
          goto LABEL_55;
        }
        unint64_t v16 = *(void *)&v41[8 * (void)v13];
        if (!v16)
        {
          uint64_t v17 = v5 + 2;
          if ((uint64_t)(v5 + 2) >= v40) {
            goto LABEL_55;
          }
          unint64_t v16 = *(void *)&v41[8 * (void)v17];
          if (v16) {
            goto LABEL_25;
          }
          uint64_t v17 = v5 + 3;
          if ((uint64_t)(v5 + 3) >= v40) {
            goto LABEL_55;
          }
          unint64_t v16 = *(void *)&v41[8 * (void)v17];
          if (v16) {
            goto LABEL_25;
          }
          uint64_t v17 = v5 + 4;
          if ((uint64_t)(v5 + 4) >= v40) {
            goto LABEL_55;
          }
          unint64_t v16 = *(void *)&v41[8 * (void)v17];
          if (v16)
          {
LABEL_25:
            uint64_t v13 = v17;
          }
          else
          {
            uint64_t v13 = v5 + 5;
            if ((uint64_t)(v5 + 5) >= v40) {
              goto LABEL_55;
            }
            unint64_t v16 = *(void *)&v41[8 * (void)v13];
            if (!v16)
            {
              uint64_t v38 = v5 + 6;
              while ((char *)v40 != v38)
              {
                unint64_t v16 = *(void *)&v41[8 * (void)v38++];
                if (v16)
                {
                  uint64_t v13 = v38 - 1;
                  goto LABEL_26;
                }
              }
LABEL_55:
              sub_100017A14();
              return (uint64_t)v10;
            }
          }
        }
LABEL_26:
        uint64_t v11 = (v16 - 1) & v16;
        unint64_t v12 = __clz(__rbit64(v16)) + ((void)v13 << 6);
      }
      id v15 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
      if (!v15) {
        goto LABEL_55;
      }
    }
    id v44 = v15;
    sub_100033B18(&v44, v43);
    if (v2)
    {

      sub_100017A14();
      swift_bridgeObjectRelease();
      return (uint64_t)v10;
    }

    uint64_t v18 = v43[0];
    uint64_t v19 = *((void *)v43[0] + 2);
    int64_t v20 = v10[2];
    int64_t v21 = v20 + v19;
    if (__OFADD__(v20, v19)) {
      break;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v21 <= v10[3] >> 1)
    {
      if (!*((void *)v18 + 2)) {
        goto LABEL_8;
      }
    }
    else
    {
      if (v20 <= v21) {
        int64_t v23 = v20 + v19;
      }
      else {
        int64_t v23 = v20;
      }
      uint64_t v10 = (void *)sub_1000753BC(isUniquelyReferenced_nonNull_native, v23, 1, (unint64_t)v10);
      if (!*((void *)v18 + 2))
      {
LABEL_8:
        if (v19) {
          goto LABEL_58;
        }
        goto LABEL_9;
      }
    }
    uint64_t v24 = v10[2];
    uint64_t v25 = (v10[3] >> 1) - v24;
    uint64_t v26 = *(void *)(sub_1000B2F60() - 8);
    uint64_t v27 = *(void *)(v26 + 72);
    if (v25 < v19) {
      goto LABEL_59;
    }
    unint64_t v28 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v29 = (char *)v10 + v28 + v27 * v24;
    char v30 = &v18[v28];
    uint64_t v31 = v27 * v19;
    uint64_t v32 = &v29[v31];
    unint64_t v33 = &v30[v31];
    if (v30 < v32 && v29 < v33) {
      goto LABEL_62;
    }
    swift_arrayInitWithCopy();
    if (v19)
    {
      uint64_t v35 = v10[2];
      BOOL v36 = __OFADD__(v35, v19);
      uint64_t v37 = v35 + v19;
      if (v36) {
        goto LABEL_60;
      }
      v10[2] = v37;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v5 = v13;
    unint64_t v6 = v11;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_100033B18@<X0>(id *a1@<X0>, char **a2@<X8>)
{
  uint64_t v5 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B2F60();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v39 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v38 = (char *)&v29 - v12;
  __chkstk_darwin(v11);
  uint64_t v32 = (char *)&v29 - v13;
  id v14 = [*a1 services];
  sub_100008148(0, &qword_1000D5020);
  unint64_t v15 = sub_1000B4100();

  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    char v30 = a2;
    uint64_t v31 = v2;
    if (v16) {
      goto LABEL_3;
    }
LABEL_17:
    int64_t v20 = (char *)_swiftEmptyArrayStorage;
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease_n();
    *char v30 = v20;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000B46A0();
  uint64_t v16 = result;
  char v30 = a2;
  uint64_t v31 = v2;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = (void (**)(char *, char *, uint64_t))(v33 + 32);
    uint64_t v35 = (void (**)(char *, void, uint64_t, uint64_t))(v33 + 56);
    unint64_t v36 = v15 & 0xC000000000000001;
    unint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    int64_t v20 = (char *)_swiftEmptyArrayStorage;
    unint64_t v37 = v15;
    do
    {
      if (v36) {
        id v21 = (id)sub_1000B45E0();
      }
      else {
        id v21 = *(id *)(v15 + 8 * v18 + 32);
      }
      unint64_t v22 = v21;
      id v23 = [v21 uniqueIdentifier];
      uint64_t v24 = v38;
      sub_1000B2F50();

      uint64_t v25 = *v19;
      (*v19)(v7, v24, v8);
      (*v35)(v7, 0, 1, v8);

      if ((*v34)(v7, 1, v8) == 1)
      {
        sub_1000094A4((uint64_t)v7);
      }
      else
      {
        uint64_t v26 = v32;
        v25(v32, v7, v8);
        v25(v39, v26, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v20 = (char *)sub_1000753BC(0, *((void *)v20 + 2) + 1, 1, (unint64_t)v20);
        }
        unint64_t v28 = *((void *)v20 + 2);
        unint64_t v27 = *((void *)v20 + 3);
        if (v28 >= v27 >> 1) {
          int64_t v20 = (char *)sub_1000753BC(v27 > 1, v28 + 1, 1, (unint64_t)v20);
        }
        *((void *)v20 + 2) = v28 + 1;
        v25(&v20[((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v28], v39, v8);
      }
      ++v18;
      unint64_t v15 = v37;
    }
    while (v16 != v18);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_100033EF8(void *a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5008);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v86 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v79 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v79 - v8;
  uint64_t v10 = sub_1000B2F60();
  uint64_t v95 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v89 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v83 = (char *)&v79 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v90 = (char *)&v79 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v84 = (char *)&v79 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v92 = (char *)&v79 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  id v23 = (char *)&v79 - v22;
  __chkstk_darwin(v21);
  id v85 = (char *)&v79 - v24;
  id v25 = [a1 accessories];
  sub_100008148(0, &qword_1000D4FD8);
  uint64_t v26 = sub_1000B4100();

  uint64_t v96 = v26;
  sub_100004210(&qword_1000D5688);
  sub_10003496C();
  uint64_t v27 = sub_1000B4240();
  swift_bridgeObjectRelease();
  uint64_t v81 = v27;
  unint64_t v28 = sub_100033164(v27);
  id v82 = a1;
  id v29 = [a1 actionSets];
  sub_100008148(0, &qword_1000D5028);
  unint64_t v30 = sub_1000B4100();

  unint64_t v31 = v30;
  unint64_t v93 = (char *)v30;
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v31 = (unint64_t)v93;
    uint64_t result = sub_1000B46A0();
    uint64_t v32 = result;
  }
  else
  {
    uint64_t v32 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  unint64_t v91 = v7;
  unint64_t v79 = v28;
  uint64_t v80 = 0;
  if (v32)
  {
    if (v32 < 1)
    {
      __break(1u);
      goto LABEL_56;
    }
    uint64_t v34 = 0;
    unint64_t v87 = v31 & 0xC000000000000001;
    uint64_t v88 = v32;
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v95 + 32);
    unint64_t v36 = (void (**)(char *, void, uint64_t, uint64_t))(v95 + 56);
    unint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
    unsigned int v94 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if (v87) {
        id v38 = (id)sub_1000B45E0();
      }
      else {
        id v38 = *(id *)(v31 + 8 * v34 + 32);
      }
      uint64_t v39 = v38;
      id v40 = [v38 uniqueIdentifier:v79, v80];
      sub_1000B2F50();

      id v41 = *v35;
      (*v35)(v9, v23, v10);
      (*v36)(v9, 0, 1, v10);

      if ((*v37)(v9, 1, v10) == 1)
      {
        sub_1000094A4((uint64_t)v9);
      }
      else
      {
        uint64_t v42 = (uint64_t)v85;
        v41(v85, v9, v10);
        v41(v92, (char *)v42, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v94 = (char *)sub_1000753BC(0, *((void *)v94 + 2) + 1, 1, (unint64_t)v94);
        }
        unint64_t v44 = *((void *)v94 + 2);
        unint64_t v43 = *((void *)v94 + 3);
        if (v44 >= v43 >> 1) {
          unsigned int v94 = (char *)sub_1000753BC(v43 > 1, v44 + 1, 1, (unint64_t)v94);
        }
        int64_t v46 = v94;
        uint64_t v45 = v95;
        *((void *)v94 + 2) = v44 + 1;
        v41(&v46[((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v44], v92, v10);
        uint64_t v7 = v91;
      }
      ++v34;
      unint64_t v31 = (unint64_t)v93;
    }
    while (v88 != v34);
  }
  else
  {
    unsigned int v94 = (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease_n();
  uint64_t v47 = sub_1000336A0(v81);
  swift_bridgeObjectRelease();
  id v48 = [v82 serviceGroups];
  sub_100008148(0, &qword_1000D5018);
  unint64_t v49 = sub_1000B4100();

  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000B46A0();
    uint64_t v50 = result;
  }
  else
  {
    uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v51 = (uint64_t)v86;
  id v85 = (char *)v47;
  if (!v50)
  {
    unint64_t v93 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_35;
  }
  if (v50 < 1)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v52 = 0;
  unint64_t v87 = v49 & 0xC000000000000001;
  uint64_t v88 = v50;
  uint64_t v53 = (void (**)(char *, char *, uint64_t))(v95 + 32);
  uint64_t v54 = (void (**)(char *, void, uint64_t, uint64_t))(v95 + 56);
  uint64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
  uint64_t v92 = (char *)v49;
  unint64_t v93 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if (v87) {
      id v56 = (id)sub_1000B45E0();
    }
    else {
      id v56 = *(id *)(v49 + 8 * v52 + 32);
    }
    uint64_t v57 = v56;
    id v58 = [v56 uniqueIdentifier:v79];
    sub_1000B2F50();

    uint64_t v59 = *v53;
    (*v53)(v7, v23, v10);
    (*v54)(v7, 0, 1, v10);

    if ((*v55)(v7, 1, v10) == 1)
    {
      sub_1000094A4((uint64_t)v7);
    }
    else
    {
      uint64_t v60 = v84;
      v59(v84, v7, v10);
      v59(v90, v60, v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v93 = (char *)sub_1000753BC(0, *((void *)v93 + 2) + 1, 1, (unint64_t)v93);
      }
      unint64_t v62 = *((void *)v93 + 2);
      unint64_t v61 = *((void *)v93 + 3);
      if (v62 >= v61 >> 1) {
        unint64_t v93 = (char *)sub_1000753BC(v61 > 1, v62 + 1, 1, (unint64_t)v93);
      }
      uint64_t v63 = v93;
      *((void *)v93 + 2) = v62 + 1;
      v59(&v63[((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(void *)(v95 + 72) * v62], v90, v10);
      uint64_t v7 = v91;
    }
    ++v52;
    unint64_t v49 = (unint64_t)v92;
  }
  while (v88 != v52);
LABEL_35:
  swift_bridgeObjectRelease_n();
  id v64 = [v82 mediaSystems];
  sub_100008148(0, &qword_1000D5698);
  unint64_t v65 = sub_1000B4100();

  if (!(v65 >> 62))
  {
    uint64_t v66 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v66) {
      goto LABEL_37;
    }
LABEL_53:
    char v71 = _swiftEmptyArrayStorage;
LABEL_54:
    swift_bridgeObjectRelease_n();
    uint64_t v96 = (uint64_t)v79;
    sub_100071330((uint64_t)v94);
    sub_100071330((uint64_t)v85);
    sub_100071330((uint64_t)v93);
    sub_100071330((uint64_t)v71);
    return v96;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000B46A0();
  uint64_t v66 = result;
  if (!result) {
    goto LABEL_53;
  }
LABEL_37:
  if (v66 >= 1)
  {
    uint64_t v67 = 0;
    uint64_t v90 = (char *)(v65 & 0xC000000000000001);
    uint64_t v68 = (void (**)(uint64_t, char *, uint64_t))(v95 + 32);
    uint64_t v69 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56);
    uint64_t v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
    char v71 = _swiftEmptyArrayStorage;
    unint64_t v91 = (char *)v66;
    uint64_t v92 = (char *)v65;
    do
    {
      if (v90) {
        id v72 = (id)sub_1000B45E0();
      }
      else {
        id v72 = *(id *)(v65 + 8 * (void)v67 + 32);
      }
      uint64_t v73 = v72;
      id v74 = [v72 uniqueIdentifier];
      sub_1000B2F50();

      uint64_t v75 = *v68;
      (*v68)(v51, v23, v10);
      (*v69)(v51, 0, 1, v10);

      if ((*v70)(v51, 1, v10) == 1)
      {
        sub_1000094A4(v51);
      }
      else
      {
        uint64_t v76 = v83;
        v75((uint64_t)v83, (char *)v51, v10);
        v75((uint64_t)v89, v76, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v71 = (void *)sub_1000753BC(0, v71[2] + 1, 1, (unint64_t)v71);
        }
        unint64_t v78 = v71[2];
        unint64_t v77 = v71[3];
        if (v78 >= v77 >> 1) {
          char v71 = (void *)sub_1000753BC(v77 > 1, v78 + 1, 1, (unint64_t)v71);
        }
        v71[2] = v78 + 1;
        v75((uint64_t)v71+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(void *)(v95 + 72) * v78, v89, v10);
        uint64_t v51 = (uint64_t)v86;
      }
      ++v67;
      unint64_t v65 = (unint64_t)v92;
    }
    while (v91 != v67);
    goto LABEL_54;
  }
LABEL_57:
  __break(1u);
  return result;
}

unint64_t sub_10003496C()
{
  unint64_t result = qword_1000D5690;
  if (!qword_1000D5690)
  {
    sub_100004B80(&qword_1000D5688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5690);
  }
  return result;
}

unint64_t sub_1000349C8()
{
  unint64_t result = qword_1000D5090;
  if (!qword_1000D5090)
  {
    sub_100008148(255, &qword_1000D4FD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5090);
  }
  return result;
}

uint64_t sub_100034A30()
{
  return sub_100038604(&qword_1000D56A0, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

uint64_t type metadata accessor for HomeEntity()
{
  uint64_t result = qword_1000D5798;
  if (!qword_1000D5798) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100034AC4()
{
  return sub_100038604(&qword_1000D56A8, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

uint64_t sub_100034B0C()
{
  return sub_100038604(&qword_1000D56B0, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

unint64_t sub_100034B58()
{
  unint64_t result = qword_1000D56B8;
  if (!qword_1000D56B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D56B8);
  }
  return result;
}

BOOL sub_100034BAC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v38 = a1;
  uint64_t v39 = sub_1000B2F60();
  uint64_t v6 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    unint64_t v37 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v34 = v8;
    uint64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v31 = v16;
    uint64_t v32 = (void (**)(char *))(v13 + 16);
    uint64_t v33 = (void (**)(char *, uint64_t))(v13 - 8);
    void v29[2] = a3;
    swift_bridgeObjectRetain();
    unint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v29[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v17 = v39;
      uint64_t v18 = v13;
      v37(v11, v15, v39);
      uint64_t v19 = *v36;
      (*v36)(v11, 0, 1, v17);
      int v20 = (*v35)(v11, 1, v17);
      BOOL v21 = v20 != 1;
      if (v20 == 1) {
        break;
      }
      unint64_t v30 = v19;
      uint64_t v22 = v11;
      id v23 = v34;
      uint64_t v24 = v22;
      (*v32)(v34);
      char v25 = v38(v23);
      if (v4)
      {
        (*v33)(v23, v17);
        swift_bridgeObjectRelease();
        return v21;
      }
      char v26 = v25;
      (*v33)(v23, v17);
      if (v26) {
        break;
      }
      v15 += v31;
      --v12;
      uint64_t v4 = 0;
      uint64_t v13 = v18;
      uint64_t v11 = v24;
      if (!v12)
      {
        v30(v24, 1, 1, v39);
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v27(v11, 1, 1, v39);
LABEL_9:
    BOOL v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_100034E8C()
{
  uint64_t v0 = sub_1000B2C40();
  sub_100022374(v0, qword_1000DCB78);
  sub_100017618(v0, (uint64_t)qword_1000DCB78);
  return sub_1000B2C20();
}

uint64_t sub_100034EF8(uint64_t a1)
{
  v1[4] = a1;
  uint64_t v2 = sub_1000B2F60();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_1000B3570();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  sub_100004210(&qword_1000D5008);
  v1[11] = swift_task_alloc();
  sub_100004210(&qword_1000D57E8);
  v1[12] = swift_task_alloc();
  uint64_t v4 = sub_1000B2FF0();
  v1[13] = v4;
  v1[14] = *(void *)(v4 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_1000350E0, 0, 0);
}

uint64_t sub_1000350E0()
{
  *(void *)(v0 + 136) = sub_1000B3060();
  sub_1000B31C0();
  *(void *)(v0 + 144) = sub_1000B31B0();
  sub_100038604(&qword_1000D57F0, (void (*)(uint64_t))&type metadata accessor for WidgetActor);
  uint64_t v2 = sub_1000B4180();
  return _swift_task_switch(sub_1000351B0, v2, v1);
}

uint64_t sub_1000351B0()
{
  swift_release();
  *(void *)(v0 + 152) = sub_1000B3050();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100035254;
  return WidgetDataModel.snapshotModerator.getter();
}

uint64_t sub_100035254(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100035374, 0, 0);
}

uint64_t sub_100035374()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[6] + 56))(v0[11], 1, 1, v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[22] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100035434;
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  return WidgetSnapshotModerator.find(home:orRecommended:)(v2, v3, 1);
}

uint64_t sub_100035434()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  if (v0)
  {
    swift_release();
    swift_errorRelease();
    sub_100017B5C(v3, &qword_1000D5008);
    uint64_t v4 = sub_100035994;
  }
  else
  {
    sub_100017B5C(v3, &qword_1000D5008);
    swift_release();
    uint64_t v4 = sub_1000355B0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000355B0()
{
  uint64_t v42 = v0;
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[12];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v4, v2);
  if (qword_1000D4EB0 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[13];
  uint64_t v8 = v0[14];
  uint64_t v10 = v0[9];
  uint64_t v9 = v0[10];
  uint64_t v11 = v0[8];
  uint64_t v12 = sub_100017618(v11, (uint64_t)qword_1000DCC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, v6, v7);
  uint64_t v13 = sub_1000B3550();
  os_log_type_t v14 = sub_1000B42C0();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v17 = v0[14];
  uint64_t v16 = v0[15];
  uint64_t v19 = v0[9];
  uint64_t v18 = v0[10];
  uint64_t v20 = v0[8];
  if (v15)
  {
    uint64_t v38 = v0[10];
    uint64_t v39 = v0[13];
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315394;
    v0[2] = sub_10002A68C(0x64657463656C6573, 0xEC000000656D6F48, &v41);
    sub_1000B4400();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v22 = sub_1000B2FE0();
    v0[3] = sub_10002A68C(v22, v23, &v41);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    uint64_t v24 = v39;
    id v40 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v40(v16, v24);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s WidgetDataModel.home=%s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v38, v20);
  }
  else
  {
    id v40 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v40(v0[15], v0[13]);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  uint64_t v25 = v0[16];
  uint64_t v26 = v0[13];
  uint64_t v28 = v0[6];
  uint64_t v27 = v0[7];
  uint64_t v30 = v0[4];
  uint64_t v29 = v0[5];
  sub_1000B2FB0();
  uint64_t v31 = sub_1000B2FE0();
  uint64_t v33 = v32;
  v40(v25, v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v30, v27, v29);
  uint64_t v34 = type metadata accessor for HomeEntity();
  uint64_t v35 = (uint64_t *)(v30 + *(int *)(v34 + 20));
  *uint64_t v35 = v31;
  v35[1] = v33;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v30, 0, 1, v34);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_100035994()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[14] + 56))(v1, 1, 1, v0[13]);
  sub_100017B5C(v1, &qword_1000D57E8);
  uint64_t v3 = type metadata accessor for HomeEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100035AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1000B2F40() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }

  return sub_1000B4830();
}

uint64_t sub_100035B38()
{
  return sub_100038604(&qword_1000D56C0, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

uint64_t sub_100035B80()
{
  return sub_100038604(&qword_1000D56C8, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

uint64_t sub_100035BC8()
{
  return sub_100038604(&qword_1000D5520, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

uint64_t sub_100035C10()
{
  return sub_100038604(&qword_1000D56D0, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

uint64_t sub_100035C58()
{
  return sub_100038604((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_100035CA0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D4E60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B2C40();
  uint64_t v3 = sub_100017618(v2, (uint64_t)qword_1000DCB78);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100035D48()
{
  return sub_10001FF28(&qword_1000D56D8, &qword_1000D56E0);
}

uint64_t sub_100035D84(uint64_t a1)
{
  uint64_t v2 = sub_100038604((unint64_t *)&qword_1000D5638, (void (*)(uint64_t))type metadata accessor for HomeEntity);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100035E00()
{
  return sub_100038604(&qword_1000D56E8, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

uint64_t sub_100035E48(uint64_t a1)
{
  uint64_t v3 = sub_100004210(&qword_1000D5548);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B2DC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = sub_1000B3FE0();
  __chkstk_darwin(v11 - 8);
  sub_1000B3FD0();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  sub_1000B3FC0(v15);
  sub_1000B3FB0(*(Swift::String *)(v1 + *(int *)(a1 + 20)));
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  sub_1000B3FC0(v16);
  sub_1000B2DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  uint64_t v12 = sub_1000B2AE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
  return sub_1000B2B00();
}

uint64_t sub_100036098(uint64_t a1)
{
  uint64_t v2 = sub_100038604(&qword_1000D56D0, (void (*)(uint64_t))type metadata accessor for HomeEntity);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100036118()
{
  unint64_t result = qword_1000D56F0;
  if (!qword_1000D56F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D56F0);
  }
  return result;
}

unint64_t sub_100036170()
{
  unint64_t result = qword_1000D56F8[0];
  if (!qword_1000D56F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000D56F8);
  }
  return result;
}

uint64_t sub_1000361C4()
{
  return sub_100038604((unint64_t *)&qword_1000D5638, (void (*)(uint64_t))type metadata accessor for HomeEntity);
}

uint64_t sub_10003620C(uint64_t a1)
{
  v1[4] = a1;
  sub_100004210(&qword_1000D5380);
  v1[5] = swift_task_alloc();
  uint64_t v2 = (void *)swift_task_alloc();
  v1[6] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000362CC;
  return sub_100037CD4();
}

uint64_t sub_1000362CC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000363CC, 0, 0);
}

uint64_t sub_1000363CC()
{
  uint64_t v13 = v0;
  if (qword_1000D4EB0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000B3570();
  sub_100017618(v1, (uint64_t)qword_1000DCC30);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1000B3550();
  os_log_type_t v3 = sub_1000B42C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    v0[2] = sub_10002A68C(0xD000000000000013, 0x80000001000B91A0, &v12);
    sub_1000B4400();
    *(_WORD *)(v4 + 12) = 2080;
    type metadata accessor for HomeEntity();
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1000B4110();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[3] = sub_10002A68C(v5, v7, &v12);
    sub_1000B4400();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s found homes %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = v0[5];
  uint64_t v9 = sub_1000B2DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for HomeEntity();
  sub_100038604(&qword_1000D56A8, (void (*)(uint64_t))type metadata accessor for HomeEntity);
  sub_100038604(&qword_1000D5520, (void (*)(uint64_t))type metadata accessor for HomeEntity);
  sub_1000B2A90();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100036700(uint64_t a1)
{
  v1[9] = a1;
  uint64_t v2 = sub_1000B3570();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = sub_100004210(&qword_1000D5518);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_100036810, 0, 0);
}

uint64_t sub_100036810()
{
  *(void *)(v0 + 136) = *HomeWidget.shared.unsafeMutableAddressor();
  swift_retain();
  v5.value._rawValue = 0;
  HomeWidgetCore::RecommendedWidgetIdentity v6 = RecommendedWidgetIdentity.init(ids:)(v5);
  *(void *)(v0 + 144) = v6.uniqueIdentifier._object;
  *(void *)(v0 + 152) = v6.widgetKind._object;
  *(HomeWidgetCore::RecommendedWidgetIdentity *)(v0 + 16) = v6;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  unint64_t v2 = sub_10001FE98();
  *uint64_t v1 = v0;
  v1[1] = sub_1000368F0;
  return HomeWidget.synchronizeWithHomeKit<A>(configuration:)(v0 + 16, (uint64_t)&type metadata for RecommendedWidgetIdentity, v2);
}

uint64_t sub_1000368F0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100036A50, 0, 0);
}

uint64_t sub_100036A50()
{
  uint64_t v12 = v0;
  uint64_t v1 = (void *)v0[21];
  if (v1)
  {

    unint64_t v2 = (void *)swift_task_alloc();
    v0[22] = v2;
    *unint64_t v2 = v0;
    v2[1] = sub_100036CF4;
    uint64_t v3 = v0[16];
    return sub_100034EF8(v3);
  }
  else
  {
    if (qword_1000D4EB0 != -1) {
      swift_once();
    }
    sub_100017618(v0[10], (uint64_t)qword_1000DCC30);
    Swift::OpaquePointer_optional v5 = sub_1000B3550();
    os_log_type_t v6 = sub_1000B42A0();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)unint64_t v7 = 136315138;
      v0[6] = sub_10002A68C(0x52746C7561666564, 0xEF2928746C757365, &v11);
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s Error loading HMHomeManager", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v8 = v0[9];
    uint64_t v9 = type metadata accessor for HomeEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100036CF4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100036DF0, 0, 0);
}

uint64_t sub_100036DF0()
{
  uint64_t v24 = v0;
  if (qword_1000D4EB0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[10];
  uint64_t v6 = sub_100017618(v5, (uint64_t)qword_1000DCC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  sub_100038534(v2, v1);
  unint64_t v7 = sub_1000B3550();
  os_log_type_t v8 = sub_1000B42C0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[15];
  if (v9)
  {
    uint64_t v11 = v0[14];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[10];
    uint64_t v22 = v0[12];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    v0[7] = sub_10002A68C(0x52746C7561666564, 0xEF2928746C757365, &v23);
    sub_1000B4400();
    *(_WORD *)(v12 + 12) = 2080;
    sub_100038534(v10, v11);
    uint64_t v13 = sub_1000B4040();
    v0[8] = sub_10002A68C(v13, v14, &v23);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    sub_100017B5C(v10, &qword_1000D5518);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s returning selected home: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    uint64_t v16 = v0[11];
    uint64_t v15 = v0[12];
    uint64_t v17 = v0[10];
    sub_100017B5C(v0[15], &qword_1000D5518);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  sub_10003859C(v0[16], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1000370DC(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1000D5800 + dword_1000D5800);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100028BD8;
  return v5(a1);
}

uint64_t sub_100037184(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100021DB0;
  return sub_10003620C(a1);
}

unint64_t sub_100037220()
{
  unint64_t result = qword_1000D5710;
  if (!qword_1000D5710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5710);
  }
  return result;
}

uint64_t sub_100037274()
{
  return sub_10001FF28(&qword_1000D5718, qword_1000D5720);
}

uint64_t sub_1000372B0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100034B58();
  *uint64_t v5 = v2;
  v5[1] = sub_10002E808;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100037364(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100021DB0;
  return sub_100036700(a1);
}

uint64_t sub_1000373FC(uint64_t a1)
{
  v1[2] = a1;
  sub_100004210(&qword_1000D5380);
  v1[3] = swift_task_alloc();
  uint64_t v2 = (void *)swift_task_alloc();
  v1[4] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000374BC;
  return sub_100037CD4();
}

uint64_t sub_1000374BC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000375BC, 0, 0);
}

uint64_t sub_1000375BC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1000B2DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  type metadata accessor for HomeEntity();
  sub_100038604(&qword_1000D56A8, (void (*)(uint64_t))type metadata accessor for HomeEntity);
  sub_100038604(&qword_1000D5520, (void (*)(uint64_t))type metadata accessor for HomeEntity);
  sub_1000B2A90();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

ValueMetadata *type metadata accessor for HomeEntityQuery()
{
  return &type metadata for HomeEntityQuery;
}

uint64_t *sub_100037718(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B2F60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    BOOL v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000377F0(uint64_t a1)
{
  uint64_t v2 = sub_1000B2F60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100037868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000378F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10003798C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100037A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100037A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100037AA8);
}

uint64_t sub_100037AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100037B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100037B80);
}

uint64_t sub_100037B80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000B2F60();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100037C40()
{
  uint64_t result = sub_1000B2F60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100037CD4()
{
  uint64_t v1 = type metadata accessor for HomeEntity();
  v0[8] = v1;
  v0[9] = *(void *)(v1 - 8);
  v0[10] = swift_task_alloc();
  uint64_t v2 = sub_1000B3570();
  v0[11] = v2;
  v0[12] = *(void *)(v2 - 8);
  v0[13] = swift_task_alloc();
  return _swift_task_switch(sub_100037DEC, 0, 0);
}

uint64_t sub_100037DEC()
{
  *(void *)(v0 + 112) = *HomeWidget.shared.unsafeMutableAddressor();
  swift_retain();
  v5.value._rawValue = 0;
  HomeWidgetCore::RecommendedWidgetIdentity v6 = RecommendedWidgetIdentity.init(ids:)(v5);
  *(void *)(v0 + 120) = v6.uniqueIdentifier._object;
  *(void *)(v0 + 128) = v6.widgetKind._object;
  *(HomeWidgetCore::RecommendedWidgetIdentity *)(v0 + 16) = v6;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  unint64_t v2 = sub_10001FE98();
  *uint64_t v1 = v0;
  v1[1] = sub_100037ECC;
  return HomeWidget.synchronizeWithHomeKit<A>(configuration:)(v0 + 16, (uint64_t)&type metadata for RecommendedWidgetIdentity, v2);
}

uint64_t sub_100037ECC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10003802C, 0, 0);
}

uint64_t sub_10003802C()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void **)(v0 + 144);
  unint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    id v3 = [*(id *)(v0 + 144) hf_orderedHomes];
    sub_10002E604();
    unint64_t v4 = sub_1000B4100();

    if (qword_1000D4EB0 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v8 = sub_100017618(v7, (uint64_t)qword_1000DCC30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_1000B3550();
    os_log_type_t v10 = sub_1000B42C0();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 88);
    unint64_t v42 = v4;
    uint64_t v38 = v1;
    if (v11)
    {
      uint64_t v40 = *(void *)(v0 + 88);
      uint64_t v37 = v0 + 48;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v43 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      *(void *)(v0 + 48) = sub_10002A68C(0x69746E45656D6F68, 0xEE00292873656974, (uint64_t *)&v43);
      sub_1000B4400();
      *(_WORD *)(v15 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1000B4110();
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 56) = sub_10002A68C(v16, v18, (uint64_t *)&v43);
      sub_1000B4400();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s found homes %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v4 = v42;
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v40);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    }
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1000B46A0();
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v19)
      {
LABEL_9:
        uint64_t v43 = _swiftEmptyArrayStorage;
        uint64_t result = sub_10001EAB0(0, v19 & ~(v19 >> 63), 0);
        if (v19 < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v21 = 0;
        uint64_t v22 = *(void *)(v0 + 72);
        unint64_t v39 = v4 & 0xC000000000000001;
        uint64_t v41 = *(void *)(v0 + 64);
        unint64_t v2 = v43;
        uint64_t v23 = v19;
        do
        {
          if (v39) {
            id v24 = (id)sub_1000B45E0();
          }
          else {
            id v24 = *(id *)(v4 + 8 * v21 + 32);
          }
          uint64_t v25 = v24;
          uint64_t v26 = *(void *)(v0 + 80);
          id v27 = [v24 uniqueIdentifier:v37];
          sub_1000B2F50();

          id v28 = [v25 name];
          uint64_t v29 = sub_1000B4010();
          uint64_t v31 = v30;

          uint64_t v32 = (uint64_t *)(v26 + *(int *)(v41 + 20));
          *uint64_t v32 = v29;
          v32[1] = v31;
          uint64_t v43 = v2;
          unint64_t v34 = v2[2];
          unint64_t v33 = v2[3];
          if (v34 >= v33 >> 1)
          {
            sub_10001EAB0(v33 > 1, v34 + 1, 1);
            unint64_t v2 = v43;
          }
          uint64_t v35 = *(void *)(v0 + 80);
          ++v21;
          v2[2] = v34 + 1;
          sub_1000384D0(v35, (uint64_t)v2+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v34);
          unint64_t v4 = v42;
        }
        while (v23 != v21);

        goto LABEL_20;
      }
    }

LABEL_20:
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v36 = *(uint64_t (**)(void *))(v0 + 8);
  return v36(v2);
}

uint64_t sub_1000384D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100038534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003859C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100038604(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003864C(uint64_t a1)
{
  v1[4] = a1;
  uint64_t v2 = sub_1000B2F60();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  sub_100004210(&qword_1000D5008);
  v1[8] = swift_task_alloc();
  uint64_t v3 = sub_1000B3570();
  v1[9] = v3;
  v1[10] = *(void *)(v3 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for HomeEntity();
  v1[12] = v4;
  v1[13] = *(void *)(v4 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v1[16] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100038830;
  return sub_100037CD4();
}

uint64_t sub_100038830(uint64_t a1)
{
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100038930, 0, 0);
}

uint64_t sub_100038930()
{
  id v56 = v0;
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[17];
  uint64_t v55 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v46 = v3;
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v0[13];
    uint64_t v6 = v0[6];
    uint64_t v47 = *(void *)(v5 + 72);
    unint64_t v41 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v45 = v2 + v41;
    uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    uint64_t v50 = (void (**)(uint64_t, void, uint64_t))(v6 + 32);
    uint64_t v52 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    uint64_t v43 = v6;
    unint64_t v49 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    unint64_t v42 = _swiftEmptyArrayStorage;
    uint64_t v44 = v1;
    do
    {
      uint64_t v48 = v4;
      sub_100038EEC(v45 + v4 * v47, v0[15]);
      uint64_t v11 = *(void *)(v1 + 16);
      if (v11)
      {
        unint64_t v12 = v0[4] + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
        uint64_t v13 = *(void *)(v43 + 72);
        uint64_t v14 = *(void (**)(uint64_t, unint64_t, uint64_t))(v43 + 16);
        swift_bridgeObjectRetain();
        while (1)
        {
          uint64_t v15 = v0[8];
          uint64_t v16 = v0[5];
          v14(v15, v12, v16);
          uint64_t v8 = *v7;
          (*v7)(v15, 0, 1, v16);
          if ((*v52)(v15, 1, v16) == 1) {
            break;
          }
          uint64_t v17 = v0[7];
          uint64_t v18 = v0[5];
          (*v50)(v17, v0[8], v18);
          char v19 = sub_1000B2F40();
          (*v49)(v17, v18);
          if (v19)
          {
            uint64_t v21 = v0[14];
            uint64_t v20 = v0[15];
            swift_bridgeObjectRelease();
            sub_1000384D0(v20, v21);
            uint64_t v22 = v42;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_10001EAB0(0, v42[2] + 1, 1);
              uint64_t v22 = v55;
            }
            uint64_t v1 = v44;
            uint64_t v10 = v48;
            unint64_t v24 = v22[2];
            unint64_t v23 = v22[3];
            if (v24 >= v23 >> 1)
            {
              sub_10001EAB0(v23 > 1, v24 + 1, 1);
              uint64_t v22 = v55;
            }
            uint64_t v25 = v0[14];
            void v22[2] = v24 + 1;
            unint64_t v42 = v22;
            sub_1000384D0(v25, (uint64_t)v22 + v41 + v24 * v47);
            goto LABEL_6;
          }
          v12 += v13;
          if (!--v11) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        uint64_t v8 = *v7;
        swift_bridgeObjectRetain();
LABEL_4:
        v8(v0[8], 1, 1, v0[5]);
      }
      uint64_t v9 = v0[15];
      swift_bridgeObjectRelease();
      sub_100038F50(v9);
      uint64_t v1 = v44;
      uint64_t v10 = v48;
LABEL_6:
      uint64_t v4 = v10 + 1;
    }
    while (v4 != v46);
  }
  else
  {
    unint64_t v42 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1000D4EB0 != -1) {
    swift_once();
  }
  uint64_t v26 = v0[10];
  uint64_t v27 = v0[11];
  uint64_t v28 = v0[9];
  uint64_t v29 = sub_100017618(v28, (uint64_t)qword_1000DCC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, v29, v28);
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_1000B3550();
  os_log_type_t v31 = sub_1000B42C0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v54 = v0[11];
    uint64_t v51 = v0[10];
    uint64_t v53 = v0[9];
    uint64_t v32 = swift_slowAlloc();
    uint64_t v55 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315394;
    v0[2] = sub_10002A68C(0x7365697469746E65, 0xEE00293A726F6628, (uint64_t *)&v55);
    sub_1000B4400();
    *(_WORD *)(v32 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1000B4110();
    unint64_t v35 = v34;
    swift_release();
    v0[3] = sub_10002A68C(v33, v35, (uint64_t *)&v55);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s matched homes %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v54, v53);
  }
  else
  {
    uint64_t v36 = v0[10];
    uint64_t v37 = v0[11];
    uint64_t v38 = v0[9];
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v39 = (uint64_t (*)(void *))v0[1];
  return v39(v42);
}

uint64_t sub_100038EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100038F50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100038FAC()
{
  uint64_t v0 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000B2DC0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = sub_1000B2C40();
  sub_100022374(v5, qword_1000DCB90);
  sub_100017618(v5, (uint64_t)qword_1000DCB90);
  sub_1000B2D90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1000B2C30();
}

unint64_t sub_100039120()
{
  uint64_t v0 = sub_100004210(&qword_1000D5548);
  __chkstk_darwin(v0 - 8);
  uint64_t v16 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v2 - 8);
  uint64_t v15 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B2DA0();
  uint64_t v4 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B2FA0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000B3FF0();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000B2DC0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_100004210(&qword_1000D58F0);
  sub_100004210(&qword_1000D5210);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000B5180;
  sub_1000B3FA0();
  sub_1000B2F90();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  sub_1000B2DD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
  uint64_t v12 = sub_1000B2AE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v16, 1, 1, v12);
  sub_1000B2B00();
  unint64_t result = sub_100019EE4(v11);
  qword_1000DCBA8 = result;
  return result;
}

uint64_t sub_100039514()
{
  uint64_t v0 = sub_100004210(&qword_1000D58F8);
  sub_100022374(v0, qword_1000DCBB0);
  sub_100017618(v0, (uint64_t)qword_1000DCBB0);
  sub_100004210(&qword_1000D5900);
  sub_100004210(&qword_1000D5220);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000B5180;
  sub_100039734();
  sub_1000B2B20();
  sub_10001A0C0(v1);
  return sub_1000B2B30();
}

unint64_t sub_100039654()
{
  unint64_t result = qword_1000D5818;
  if (!qword_1000D5818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5818);
  }
  return result;
}

uint64_t sub_1000396B4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000CEDB0;
  v7._object = v3;
  Swift::Int v5 = sub_1000B46F0(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_100039708@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10003B748();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100039734()
{
  unint64_t result = qword_1000D5820;
  if (!qword_1000D5820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5820);
  }
  return result;
}

unint64_t sub_10003978C()
{
  unint64_t result = qword_1000D5828;
  if (!qword_1000D5828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5828);
  }
  return result;
}

uint64_t sub_1000397E0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000D4E78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100004210(&qword_1000D58F8);
  uint64_t v3 = sub_100017618(v2, (uint64_t)qword_1000DCBB0);
  Swift::OpaquePointer v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_100039890()
{
  unint64_t result = qword_1000D5830;
  if (!qword_1000D5830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5830);
  }
  return result;
}

unint64_t sub_1000398E8()
{
  unint64_t result = qword_1000D5838;
  if (!qword_1000D5838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5838);
  }
  return result;
}

unint64_t sub_100039940()
{
  unint64_t result = qword_1000D5840;
  if (!qword_1000D5840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5840);
  }
  return result;
}

void *sub_100039994()
{
  return &protocol witness table for String;
}

uint64_t sub_1000399A0()
{
  sub_10003BA94();
  uint64_t v2 = sub_1000B2AC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10003BBEC(v3, v0, v2, v1);
}

unint64_t sub_100039A38()
{
  unint64_t result = qword_1000D5850;
  if (!qword_1000D5850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5850);
  }
  return result;
}

unint64_t sub_100039A90()
{
  unint64_t result = qword_1000D5858;
  if (!qword_1000D5858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5858);
  }
  return result;
}

unint64_t sub_100039AE8()
{
  unint64_t result = qword_1000D5860;
  if (!qword_1000D5860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5860);
  }
  return result;
}

unint64_t sub_100039B40()
{
  unint64_t result = qword_1000D5868;
  if (!qword_1000D5868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5868);
  }
  return result;
}

uint64_t sub_100039B94@<X0>(uint64_t a1@<X8>)
{
  return sub_10003A940(&qword_1000D4E68, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1000DCB90, a1);
}

uint64_t sub_100039BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A8C0(a1, a2, a3, (void (*)(void))sub_100039734);
}

uint64_t sub_100039BF8(uint64_t a1)
{
  unint64_t v2 = sub_100039734();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100039C48()
{
  unint64_t result = qword_1000D5870;
  if (!qword_1000D5870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5870);
  }
  return result;
}

unint64_t sub_100039CA0()
{
  unint64_t result = qword_1000D5878;
  if (!qword_1000D5878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5878);
  }
  return result;
}

unint64_t sub_100039CF8()
{
  unint64_t result = qword_1000D5880;
  if (!qword_1000D5880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5880);
  }
  return result;
}

uint64_t sub_100039D4C()
{
  if (qword_1000D4E70 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100039DA8(uint64_t a1)
{
  unint64_t v2 = sub_100039B40();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100039DF4()
{
  return sub_10001FF28(&qword_1000D5888, &qword_1000D5890);
}

void sub_100039E30(void *a1@<X8>)
{
  *a1 = &off_1000CEF18;
}

unint64_t sub_100039E44()
{
  unint64_t result = qword_1000D5898;
  if (!qword_1000D5898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5898);
  }
  return result;
}

Swift::Int sub_100039E98()
{
  return sub_1000B48F0();
}

void sub_100039EDC()
{
}

Swift::Int sub_100039F04()
{
  return sub_1000B48F0();
}

uint64_t sub_100039F54()
{
  uint64_t v0 = sub_1000B2DA0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B2FA0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000B3FF0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000B2DC0();
  sub_100022374(v6, qword_1000DCBC8);
  sub_100017618(v6, (uint64_t)qword_1000DCBC8);
  sub_1000B3FA0();
  sub_1000B2F90();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1000B2DD0();
}

uint64_t sub_10003A144(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for HomeLauncherModuleLaunchedHomeEvent();
  v2[5] = swift_task_alloc();
  sub_100004210(&qword_1000D5378);
  v2[6] = swift_task_alloc();
  uint64_t v3 = sub_1000B2E90();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_10003A264, 0, 0);
}

uint64_t sub_10003A264()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  sub_1000B2990();
  sub_10003BA94();
  sub_1000B2AB0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000303D8(v0[6]);
    sub_10003BAE8();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[8] + 32))(v0[9], v0[6], v0[7]);
    sub_1000B41B0();
    v0[10] = sub_1000B41A0();
    uint64_t v7 = sub_1000B4180();
    return _swift_task_switch(sub_10003A3FC, v7, v6);
  }
}

uint64_t sub_10003A3FC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  sub_1000B2EF0();
  uint64_t v3 = sub_1000B2F10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 0, 1, v3);
  *(void *)(v1 + *(int *)(v2 + 20)) = 1;
  sub_10003C89C(&qword_1000D58E0, (void (*)(uint64_t))type metadata accessor for HomeLauncherModuleLaunchedHomeEvent);
  sub_1000B3270();
  sub_10003BB3C(v1);
  id v4 = [self sharedInstance];
  sub_1000B2E30(v5);
  uint64_t v7 = v6;
  id v8 = [v4 openSensitiveURL:v6];

  return _swift_task_switch(sub_10003A568, 0, 0);
}

uint64_t sub_10003A568()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  sub_1000B2970();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10003A618()
{
  return sub_1000B2990();
}

uint64_t sub_10003A63C()
{
  return sub_1000B29A0();
}

void (*sub_10003A660(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000B2980();
  return sub_10003A6BC;
}

void sub_10003A6BC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_10003A70C()
{
  unint64_t result = qword_1000D58A0;
  if (!qword_1000D58A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D58A0);
  }
  return result;
}

uint64_t sub_10003A760(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10003BB98();
  unint64_t v5 = sub_10003BA94();

  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_10003A7CC()
{
  unint64_t result = qword_1000D58A8;
  if (!qword_1000D58A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D58A8);
  }
  return result;
}

unint64_t sub_10003A824()
{
  unint64_t result = qword_1000D58B0;
  if (!qword_1000D58B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D58B0);
  }
  return result;
}

uint64_t sub_10003A878()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003A894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A8C0(a1, a2, a3, (void (*)(void))sub_10003A70C);
}

uint64_t sub_10003A8C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003A908@<X0>(uint64_t a1@<X8>)
{
  return sub_10003A940(&qword_1000D4E80, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000DCBC8, a1);
}

uint64_t sub_10003A940@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100017618(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10003A9E4(uint64_t a1)
{
  unint64_t v2 = sub_10003BB98();

  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_10003AA20(uint64_t a1)
{
  uint64_t v4 = *v1;
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100021DB0;
  return sub_10003A144(a1, v4);
}

uint64_t sub_10003AAC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10003B758();
  *a1 = result;
  return result;
}

uint64_t sub_10003AAE8(uint64_t a1)
{
  unint64_t v2 = sub_10003A70C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for LaunchHomeAppIntent()
{
  return &type metadata for LaunchHomeAppIntent;
}

ValueMetadata *type metadata accessor for HomeAppDeepLinks()
{
  return &type metadata for HomeAppDeepLinks;
}

uint64_t sub_10003AB50()
{
  return sub_10001FF28((unint64_t *)&qword_1000D5360, &qword_1000D5368);
}

uint64_t sub_10003AB8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1000B2DA0();
  uint64_t v28 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  __chkstk_darwin(v1);
  uint64_t v26 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000B2FA0();
  __chkstk_darwin(v3 - 8);
  unint64_t v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B3FF0();
  __chkstk_darwin(v5 - 8);
  uint64_t v22 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000B2DC0();
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004210(&qword_1000D59B8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100004210(&qword_1000D59C0);
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_100004210(&qword_1000D59C8);
  uint64_t v15 = sub_100004B80(&qword_1000D59D0);
  uint64_t v16 = sub_10001FF28(&qword_1000D59D8, &qword_1000D59D0);
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  swift_getOpaqueTypeConformance2();
  sub_1000B3F00();
  uint64_t v17 = sub_10001FF28(&qword_1000D59E0, &qword_1000D59B8);
  sub_1000B3990();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1000B3FA0();
  sub_1000B2F90();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v26, enum case for LocalizedStringResource.BundleDescription.main(_:), v29);
  sub_1000B2DD0();
  uint64_t v31 = v9;
  uint64_t v32 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v21;
  sub_1000B3980();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v18);
}

uint64_t sub_10003B05C()
{
  uint64_t v0 = sub_100004210(&qword_1000D59D0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[1] = sub_10003B758();
  sub_100004210(&qword_1000D59E8);
  sub_10001FF28(&qword_1000D59F0, &qword_1000D59E8);
  sub_10003BB98();
  sub_1000B3DD0();
  sub_1000B3C10();
  sub_10001FF28(&qword_1000D59D8, &qword_1000D59D0);
  sub_1000B3930();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10003B200()
{
  uint64_t v0 = sub_1000B2FA0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000B3FF0();
  __chkstk_darwin(v1 - 8);
  sub_1000B3FA0();
  sub_1000B2F90();
  sub_1000B4030();
  sub_100004BC8();
  return sub_1000B3D40();
}

uint64_t sub_10003B350(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0x6D617473656D6974;
  }
}

BOOL sub_10003B390(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10003B3A8()
{
  Swift::UInt v1 = *v0;
  sub_1000B48C0();
  sub_1000B48D0(v1);
  return sub_1000B48F0();
}

void sub_10003B3F0()
{
  sub_1000B48D0(*v0);
}

Swift::Int sub_10003B41C()
{
  Swift::UInt v1 = *v0;
  sub_1000B48C0();
  sub_1000B48D0(v1);
  return sub_1000B48F0();
}

uint64_t sub_10003B460()
{
  return sub_10003B350(*v0);
}

uint64_t sub_10003B468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10003CC5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10003B490()
{
  return 0;
}

void sub_10003B49C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10003B4A8(uint64_t a1)
{
  unint64_t v2 = sub_10003C848();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003B4E4(uint64_t a1)
{
  unint64_t v2 = sub_10003C848();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10003B520(void *a1)
{
  uint64_t v3 = sub_100004210(&qword_1000D59F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003C804(a1, a1[3]);
  sub_10003C848();
  sub_1000B4910();
  v8[15] = 0;
  sub_1000B2F10();
  sub_10003C89C(&qword_1000D5A08, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1000B4790();
  if (!v1)
  {
    type metadata accessor for HomeLauncherModuleLaunchedHomeEvent();
    v8[14] = 1;
    sub_1000B47C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_10003B6D4()
{
  return 0xD000000000000023;
}

unint64_t sub_10003B6F0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_10003B70C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C79C(v1, a1);
}

uint64_t sub_10003B718()
{
  return sub_1000B3260();
}

uint64_t sub_10003B730(void *a1)
{
  return sub_10003B520(a1);
}

uint64_t sub_10003B748()
{
  return 1953460082;
}

uint64_t sub_10003B758()
{
  uint64_t v17 = sub_1000B2BB0();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004210(&qword_1000D5370);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000B2DC0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100004210(&qword_1000D58C0);
  sub_1000B2D90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  char v18 = 1;
  uint64_t v14 = sub_1000B2960();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_100039734();
  return sub_1000B29C0();
}

uint64_t type metadata accessor for HomeLauncherModuleLaunchedHomeEvent()
{
  uint64_t result = qword_1000D5968;
  if (!qword_1000D5968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10003BA94()
{
  unint64_t result = qword_1000D58D0;
  if (!qword_1000D58D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D58D0);
  }
  return result;
}

unint64_t sub_10003BAE8()
{
  unint64_t result = qword_1000D58D8;
  if (!qword_1000D58D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D58D8);
  }
  return result;
}

uint64_t sub_10003BB3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeLauncherModuleLaunchedHomeEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10003BB98()
{
  unint64_t result = qword_1000D58E8;
  if (!qword_1000D58E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D58E8);
  }
  return result;
}

uint64_t sub_10003BBEC(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t getEnumTagSinglePayload for HomeScope.OnlyCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s10HomeWidget16HomeAppDeepLinksOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10003BCECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchHomeAppIntent.Error()
{
  return &type metadata for LaunchHomeAppIntent.Error;
}

uint64_t *sub_10003BD24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000B2F10();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100004210(&qword_1000D5908);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10003BE9C(uint64_t a1)
{
  uint64_t v2 = sub_1000B2F10();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

char *sub_10003BF6C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100004210(&qword_1000D5908);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10003C094(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100004210(&qword_1000D5908);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10003C220(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100004210(&qword_1000D5908);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10003C348(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100004210(&qword_1000D5908);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_10003C4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003C4E8);
}

uint64_t sub_10003C4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5908);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10003C558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003C56C);
}

uint64_t sub_10003C56C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5908);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_10003C5E0()
{
  sub_10003C678();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10003C678()
{
  if (!qword_1000D5978)
  {
    sub_1000B2F10();
    unint64_t v0 = sub_1000B43F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D5978);
    }
  }
}

ValueMetadata *type metadata accessor for LaunchHomeAppControl()
{
  return &type metadata for LaunchHomeAppControl;
}

unint64_t sub_10003C6E4()
{
  unint64_t result = qword_1000D59A8;
  if (!qword_1000D59A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D59A8);
  }
  return result;
}

uint64_t sub_10003C738()
{
  return sub_10003C89C(&qword_1000D59B0, (void (*)(uint64_t))type metadata accessor for HomeLauncherModuleLaunchedHomeEvent);
}

uint64_t sub_10003C780()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003C79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_10003C804(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10003C848()
{
  unint64_t result = qword_1000D5A00;
  if (!qword_1000D5A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5A00);
  }
  return result;
}

uint64_t sub_10003C89C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for HomeLauncherModuleLaunchedHomeEvent.CodingKeys(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HomeLauncherModuleLaunchedHomeEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HomeLauncherModuleLaunchedHomeEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003CA4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10003CA74(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10003CA7C(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HomeLauncherModuleLaunchedHomeEvent.CodingKeys()
{
  return &type metadata for HomeLauncherModuleLaunchedHomeEvent.CodingKeys;
}

uint64_t sub_10003CA98()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10003CB58()
{
  unint64_t result = qword_1000D5A10;
  if (!qword_1000D5A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5A10);
  }
  return result;
}

unint64_t sub_10003CBB0()
{
  unint64_t result = qword_1000D5A18;
  if (!qword_1000D5A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5A18);
  }
  return result;
}

unint64_t sub_10003CC08()
{
  unint64_t result = qword_1000D5A20;
  if (!qword_1000D5A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5A20);
  }
  return result;
}

uint64_t sub_10003CC5C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v3 || (sub_1000B4830() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001000B95B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1000B4830();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10003CD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B41D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1000B41C0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100017B5C(a1, &qword_1000D5B58);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1000B4180();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

id sub_10003CEF8()
{
  unint64_t v0 = (objc_class *)type metadata accessor for HomeManagerActor();
  uint64_t v1 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v1 + 112) = 0;
  *(void *)(v1 + 120) = _swiftEmptyArrayStorage;
  swift_beginAccess();
  int v2 = (id (__cdecl *)())static HomeManagerActor.homeManagerCreationBlock;
  swift_retain();
  swift_retain();
  id v3 = v2();
  swift_release();
  *(void *)(v1 + 128) = v3;
  swift_release();
  v6.receiver = (id)v1;
  v6.super_class = v0;
  unsigned int v4 = (id *)[super init];
  id result = [v4[16] setDelegate:v4];
  qword_1000DCBE0 = (uint64_t)v4;
  return result;
}

id *sub_10003CFD4()
{
  uint64_t v1 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v1 + 112) = 0;
  *(void *)(v1 + 120) = _swiftEmptyArrayStorage;
  swift_beginAccess();
  int v2 = (id (__cdecl *)())static HomeManagerActor.homeManagerCreationBlock;
  swift_retain();
  swift_retain();
  id v3 = v2();
  swift_release();
  *(void *)(v1 + 128) = v3;
  swift_release();
  v6.receiver = (id)v1;
  v6.super_class = v0;
  unsigned int v4 = (id *)[super init];
  [v4[16] setDelegate:v4];
  return v4;
}

uint64_t (**HomeManagerActor.homeManagerCreationBlock.unsafeMutableAddressor())()
{
  return &static HomeManagerActor.homeManagerCreationBlock;
}

uint64_t (*static HomeManagerActor.homeManagerCreationBlock.getter())()
{
  swift_beginAccess();
  unint64_t v0 = static HomeManagerActor.homeManagerCreationBlock;
  swift_retain();
  return v0;
}

uint64_t static HomeManagerActor.homeManagerCreationBlock.setter(uint64_t (*a1)(), uint64_t a2)
{
  static HomeManagerActor.homeManagerCreationBlock = a1;
  qword_1000D5A38 = a2;
  return swift_release();
}

void (*static HomeManagerActor.homeManagerCreationBlock.modify(void *a1))(uint64_t a1, char a2)
{
  int v2 = malloc(0x28uLL);
  *a1 = v2;
  swift_beginAccess();
  uint64_t v3 = qword_1000D5A38;
  v2[3] = static HomeManagerActor.homeManagerCreationBlock;
  v2[4] = v3;
  swift_retain();
  return sub_10003D1EC;
}

void sub_10003D1EC(uint64_t a1, char a2)
{
  int v2 = *(void **)a1;
  uint64_t v3 = *(uint64_t (**)())(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    swift_retain();
    sub_100042680((uint64_t)v3, v4);
    static HomeManagerActor.homeManagerCreationBlock = v3;
    qword_1000D5A38 = v4;
    swift_release();
  }
  else
  {
    sub_100042680(*(void *)(*(void *)a1 + 24), v4);
    static HomeManagerActor.homeManagerCreationBlock = v3;
    qword_1000D5A38 = v4;
  }
  swift_release();

  free(v2);
}

id *sub_10003D288()
{
  swift_defaultActor_initialize();
  *(unsigned char *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = _swiftEmptyArrayStorage;
  swift_beginAccess();
  uint64_t v1 = static HomeManagerActor.homeManagerCreationBlock;
  swift_retain();
  uint64_t v2 = swift_retain();
  uint64_t v3 = ((uint64_t (*)(uint64_t))v1)(v2);
  swift_release();
  *(void *)(v0 + 128) = v3;
  swift_release();
  v6.receiver = (id)v0;
  v6.super_class = (Class)type metadata accessor for HomeManagerActor();
  uint64_t v4 = (id *)[super init];
  [v4[16] setDelegate:v4];
  return v4;
}

uint64_t sub_10003D378()
{
  uint64_t v0 = sub_1000B3570();
  sub_100022374(v0, qword_1000DCBE8);
  sub_100017618(v0, (uint64_t)qword_1000DCBE8);
  return sub_1000B3560();
}

uint64_t HomeManagerActor.deinit()
{
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t HomeManagerActor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t HomeWidget.unownedExecutor.getter()
{
  return v0;
}

uint64_t static HomeManagerActor.homeManager.getter()
{
  return _swift_task_switch(sub_10003D494, 0, 0);
}

uint64_t sub_10003D494()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = sub_100008148(0, &qword_1000D5A50);
  *uint64_t v1 = v0;
  v1[1] = sub_10003D588;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0x616E614D656D6F68, 0xEB00000000726567, sub_10003D69C, 0, v2);
}

uint64_t sub_10003D588()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10003D684, 0, 0);
}

uint64_t sub_10003D684()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_10003D69C(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5BA8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = sub_100004210(&qword_1000D5B58);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B41D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_10003CD4C((uint64_t)v7, (uint64_t)&unk_1000D5BB8, v10);
  return swift_release();
}

uint64_t sub_10003D864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a4;
  uint64_t v5 = sub_100004210(&qword_1000D5BA8);
  v4[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[8] = v6;
  v4[9] = *(void *)(v6 + 64);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  return _swift_task_switch(sub_10003D940, 0, 0);
}

uint64_t sub_10003D940()
{
  if (qword_1000D4E88 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = qword_1000DCBE0;
  v0[12] = qword_1000DCBE0;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v2, v4, v5);
  v7(v1, v2, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  v0[13] = v9;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v2, v5);
  return _swift_task_switch(sub_10003DA74, v6, 0);
}

uint64_t sub_10003DA74()
{
  uint64_t v1 = v0[12];
  if (*(unsigned char *)(v1 + 112) == 1)
  {
    uint64_t v2 = *(void **)(v1 + 128);
    v0[5] = v2;
    id v3 = v2;
    sub_1000B4190();
  }
  else
  {
    uint64_t v4 = v0[13];
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_100043A88;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = (void *)(v1 + 120);
    swift_beginAccess();
    uint64_t v7 = *(void **)(v1 + 120);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v1 + 120) = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v7 = sub_100075A24(0, v7[2] + 1, 1, v7);
      *uint64_t v6 = v7;
    }
    unint64_t v10 = v7[2];
    unint64_t v9 = v7[3];
    if (v10 >= v9 >> 1)
    {
      uint64_t v7 = sub_100075A24((void *)(v9 > 1), v10 + 1, 1, v7);
      *uint64_t v6 = v7;
    }
    v7[2] = v10 + 1;
    uint64_t v11 = &v7[2 * v10];
    v11[4] = sub_100043B74;
    v11[5] = v5;
    swift_endAccess();
  }
  swift_release();
  (*(void (**)(void, void))(v0[8] + 8))(v0[10], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10003DC38(void *a1)
{
  id v1 = a1;
  sub_100004210(&qword_1000D5BA8);
  return sub_1000B4190();
}

uint64_t sub_10003DC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_10003DCA4, a4, 0);
}

uint64_t sub_10003DCA4()
{
  sub_10003DD04();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10003DD04()
{
  if ((*(unsigned char *)(v0 + 112) & 1) == 0)
  {
    uint64_t v1 = v0;
    [*(id *)(v0 + 128) setDelegate:0];
    *(unsigned char *)(v0 + 112) = 1;
    uint64_t v2 = (void *)(v0 + 120);
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 120);
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v14 = v2;
      swift_bridgeObjectRetain_n();
      uint64_t v5 = 0;
      uint64_t v6 = v3 + 40;
      do
      {
        unint64_t v8 = *(void (**)(id *))(v6 - 8);
        uint64_t v9 = qword_1000D4E90;
        swift_retain_n();
        if (v9 != -1) {
          swift_once();
        }
        uint64_t v10 = sub_1000B3570();
        sub_100017618(v10, (uint64_t)qword_1000DCBE8);
        uint64_t v11 = sub_1000B3550();
        os_log_type_t v12 = sub_1000B42C0();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          *(_DWORD *)uint64_t v13 = 134217984;
          *(void *)(v13 + 4) = v5;
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "catching up on block %ld", (uint8_t *)v13, 0xCu);
          swift_slowDealloc();
        }
        ++v5;

        id v15 = *(id *)(v1 + 128);
        id v7 = v15;
        v8(&v15);
        swift_release_n();

        v6 += 16;
      }
      while (v4 != v5);
      swift_bridgeObjectRelease_n();
      uint64_t v2 = v14;
    }
    *uint64_t v2 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
}

id sub_10003DF48()
{
  sub_100008148(0, &qword_1000D5BC8);
  id v0 = [(id)swift_getObjCClassFromMetadata() defaultPrivateConfiguration];
  [v0 setCachePolicy:0];
  [v0 setDiscretionary:0];
  [v0 setAdaptive:1];
  id v1 = [objc_allocWithZone((Class)HMHomeManager) initWithConfiguration:v0];

  return v1;
}

uint64_t static DataModel.sharedAsync(coverages:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_1000B2FF0();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_100004210(&qword_1000D5A60);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_1000B2F60();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = sub_1000B3240();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  sub_1000B41B0();
  v2[15] = sub_1000B41A0();
  uint64_t v7 = sub_1000B4180();
  v2[16] = v7;
  v2[17] = v6;
  return _swift_task_switch(sub_10003E1E4, v7, v6);
}

uint64_t sub_10003E1E4()
{
  uint64_t v1 = v0[2];
  if (!v1)
  {
    sub_1000B3110();
    if (sub_1000B30F0() == 4)
    {
      sub_100004210(&qword_1000D5A90);
      uint64_t v2 = sub_1000B3220();
      uint64_t v3 = *(void *)(v2 - 8);
      uint64_t v4 = *(void *)(v3 + 72);
      unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1000B51A0;
      unint64_t v7 = v6 + v5;
      unint64_t v8 = *(void (**)(unint64_t, void, uint64_t))(v3 + 104);
      v8(v7, enum case for StateSnapshot.Coverage.everythingElse(_:), v2);
      v8(v7 + v4, enum case for StateSnapshot.Coverage.characteristics(_:), v2);
      uint64_t v1 = (uint64_t)sub_100042B18(v6);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
    }
    else
    {
      sub_100004210(&qword_1000D5A68);
      sub_100042ABC();
      uint64_t v1 = sub_1000B4230();
    }
  }
  v0[18] = v1;
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[19] = v9;
  void *v9 = v0;
  v9[1] = sub_10003E3E4;
  return sub_10003F518();
}

uint64_t sub_10003E3E4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  return _swift_task_switch(sub_10003E50C, v4, v3);
}

uint64_t sub_10003E50C()
{
  uint64_t v1 = (void *)v0[20];
  if (!v1)
  {
    uint64_t v23 = (void *)swift_task_alloc();
    v0[28] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_10003F320;
    uint64_t v24 = v0[18];
    return sub_10003F8F8(v24);
  }
  id v2 = [v1 sortedHomes];
  sub_100008148(0, (unint64_t *)&qword_1000D5550);
  unint64_t v3 = sub_1000B4100();
  v0[21] = v3;

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000B46A0();
    swift_bridgeObjectRelease();
    v0[22] = v4;
    if (v4) {
      goto LABEL_4;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v27 = v0[20];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = (uint64_t (*)(uint64_t))v0[1];
    return v28(v27);
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v0[22] = v4;
  if (!v4) {
    goto LABEL_25;
  }
LABEL_4:
  if (v4 < 1)
  {
    __break(1u);
    return StaticHome.home.getter();
  }
  uint64_t v5 = 0;
  while (1)
  {
    v0[23] = v5;
    uint64_t v7 = v0[21];
    id v8 = (v7 & 0xC000000000000001) != 0 ? (id)sub_1000B45E0() : *(id *)(v7 + 8 * v5 + 32);
    uint64_t v9 = v8;
    v0[24] = v8;
    id v10 = [v8 uniqueIdentifier];
    sub_1000B2F50();

    uint64_t v11 = sub_1000B30D0();
    if (*(void *)(v11 + 16) && (unint64_t v12 = sub_100041560(v0[11]), (v13 & 1) != 0))
    {
      (*(void (**)(void, unint64_t, void))(v0[13] + 16))(v0[8], *(void *)(v11 + 56) + *(void *)(v0[13] + 72) * v12, v0[12]);
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = 1;
    }
    uint64_t v15 = v0[12];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[10];
    uint64_t v18 = v0[11];
    uint64_t v20 = v0[8];
    uint64_t v19 = v0[9];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v20, v14, 1, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15) != 1) {
      break;
    }
    uint64_t v6 = v0[8];

    sub_100017B5C(v6, &qword_1000D5A60);
LABEL_7:
    uint64_t v5 = v0[23] + 1;
    if (v5 == v0[22]) {
      goto LABEL_25;
    }
  }
  uint64_t v21 = v0[18];
  (*(void (**)(void, void, void))(v0[13] + 32))(v0[14], v0[8], v0[12]);
  uint64_t v22 = sub_1000B3230();
  LOBYTE(v21) = sub_100041B38(v22, v21);
  swift_bridgeObjectRelease();
  if (v21)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);

    goto LABEL_7;
  }
  sub_1000B3200();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[25] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_10003E938;
  return StaticHome.home.getter();
}

uint64_t sub_10003E938(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 208) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 136);
  uint64_t v7 = *(void *)(v2 + 128);
  return _swift_task_switch(sub_10003EAC4, v7, v6);
}

uint64_t sub_10003EAC4()
{
  uint64_t v1 = v0[26];
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[27] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10003EE90;
    uint64_t v3 = v0[18];
    uint64_t v4 = v0[7];
    return DataModel.rebuildSnapshot(for:includingMatterSnapshot:coverage:)(v4, v1, 0, v3);
  }
  uint64_t v5 = (void *)v0[24];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);

  uint64_t v6 = v0[23] + 1;
  if (v6 == v0[22])
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v7 = v0[20];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v8 = (uint64_t (*)(uint64_t))v0[1];
    return v8(v7);
  }
  while (1)
  {
    v0[23] = v6;
    uint64_t v10 = v0[21];
    id v11 = (v10 & 0xC000000000000001) != 0 ? (id)sub_1000B45E0() : *(id *)(v10 + 8 * v6 + 32);
    unint64_t v12 = v11;
    v0[24] = v11;
    id v13 = [v11 uniqueIdentifier];
    sub_1000B2F50();

    uint64_t v14 = sub_1000B30D0();
    if (*(void *)(v14 + 16) && (unint64_t v15 = sub_100041560(v0[11]), (v16 & 1) != 0))
    {
      (*(void (**)(void, unint64_t, void))(v0[13] + 16))(v0[8], *(void *)(v14 + 56) + *(void *)(v0[13] + 72) * v15, v0[12]);
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = 1;
    }
    uint64_t v18 = v0[12];
    uint64_t v19 = v0[13];
    uint64_t v20 = v0[10];
    uint64_t v21 = v0[11];
    uint64_t v23 = v0[8];
    uint64_t v22 = v0[9];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v23, v17, 1, v18);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v23, 1, v18) != 1) {
      break;
    }
    uint64_t v9 = v0[8];

    sub_100017B5C(v9, &qword_1000D5A60);
LABEL_11:
    uint64_t v6 = v0[23] + 1;
    if (v6 == v0[22]) {
      goto LABEL_6;
    }
  }
  uint64_t v24 = v0[18];
  (*(void (**)(void, void, void))(v0[13] + 32))(v0[14], v0[8], v0[12]);
  uint64_t v25 = sub_1000B3230();
  LOBYTE(v24) = sub_100041B38(v25, v24);
  swift_bridgeObjectRelease();
  if (v24)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);

    goto LABEL_11;
  }
  sub_1000B3200();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[25] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_10003E938;
  return StaticHome.home.getter();
}

uint64_t sub_10003EE90()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 56);
  swift_task_dealloc();
  sub_100017B5C(v2, &qword_1000D5A60);
  uint64_t v3 = *(void *)(v1 + 136);
  uint64_t v4 = *(void *)(v1 + 128);
  return _swift_task_switch(sub_10003EFDC, v4, v3);
}

uint64_t sub_10003EFDC()
{
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 96);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v0 + 184) + 1;
  if (v5 == *(void *)(v0 + 176))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v6 = *(void *)(v0 + 160);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v7(v6);
  }
  while (1)
  {
    *(void *)(v0 + 184) = v5;
    uint64_t v10 = *(void *)(v0 + 168);
    id v11 = (v10 & 0xC000000000000001) != 0 ? (id)sub_1000B45E0() : *(id *)(v10 + 8 * v5 + 32);
    unint64_t v12 = v11;
    *(void *)(v0 + 192) = v11;
    id v13 = [v11 uniqueIdentifier];
    sub_1000B2F50();

    uint64_t v14 = sub_1000B30D0();
    if (*(void *)(v14 + 16) && (unint64_t v15 = sub_100041560(*(void *)(v0 + 88)), (v16 & 1) != 0))
    {
      (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 104) + 16))(*(void *)(v0 + 64), *(void *)(v14 + 56) + *(void *)(*(void *)(v0 + 104) + 72) * v15, *(void *)(v0 + 96));
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = 1;
    }
    uint64_t v18 = *(void *)(v0 + 96);
    uint64_t v19 = *(void *)(v0 + 104);
    uint64_t v20 = *(void *)(v0 + 80);
    uint64_t v21 = *(void *)(v0 + 88);
    uint64_t v23 = *(void *)(v0 + 64);
    uint64_t v22 = *(void *)(v0 + 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v23, v17, 1, v18);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v23, 1, v18) != 1) {
      break;
    }
    uint64_t v9 = *(void *)(v0 + 64);

    sub_100017B5C(v9, &qword_1000D5A60);
LABEL_7:
    uint64_t v5 = *(void *)(v0 + 184) + 1;
    if (v5 == *(void *)(v0 + 176)) {
      goto LABEL_2;
    }
  }
  uint64_t v24 = *(void *)(v0 + 144);
  (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 112), *(void *)(v0 + 64), *(void *)(v0 + 96));
  uint64_t v25 = sub_1000B3230();
  LOBYTE(v24) = sub_100041B38(v25, v24);
  swift_bridgeObjectRelease();
  if (v24)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));

    goto LABEL_7;
  }
  sub_1000B3200();
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_10003E938;
  return StaticHome.home.getter();
}

uint64_t sub_10003F320(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  return _swift_task_switch(sub_10003F46C, v4, v3);
}

uint64_t sub_10003F46C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10003F518()
{
  v1[3] = v0;
  v1[4] = sub_1000B41B0();
  v1[5] = sub_1000B41A0();
  uint64_t v3 = sub_1000B4180();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_10003F5B4, v3, v2);
}

uint64_t sub_10003F5B4()
{
  if (byte_1000DCC00 == 1 && (uint64_t v1 = sub_1000B3110(), sub_1000B30F0() == 4))
  {
    uint64_t v2 = v0[3];
    uint64_t v3 = sub_1000B41A0();
    v0[8] = v3;
    uint64_t v4 = swift_task_alloc();
    v0[9] = v4;
    *(void *)(v4 + 16) = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[10] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10003F734;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, v3, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x80000001000B96A0, sub_100043534, v4, v1);
  }
  else
  {
    swift_release();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6(0);
  }
}

uint64_t sub_10003F734()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10003F894, v3, v2);
}

uint64_t sub_10003F894()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10003F8F8(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = sub_1000B41B0();
  v2[6] = sub_1000B41A0();
  uint64_t v4 = sub_1000B4180();
  v2[7] = v4;
  v2[8] = v3;
  return _swift_task_switch(sub_10003F994, v4, v3);
}

uint64_t sub_10003F994()
{
  uint64_t v1 = sub_1000B3110();
  if (sub_1000B30F0() == 4)
  {
    int8x16_t v7 = *(int8x16_t *)(v0 + 24);
    uint64_t v2 = sub_1000B41A0();
    *(void *)(v0 + 72) = v2;
    uint64_t v3 = (int8x16_t *)swift_task_alloc();
    *(void *)(v0 + 80) = v3;
    v3[1] = vextq_s8(v7, v7, 8uLL);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10003FB54;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v2, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x80000001000B9640, sub_100042EB0, v3, v1);
  }
  else
  {
    swift_release();
    if (qword_1000D4E98 != -1) {
      swift_once();
    }
    uint64_t v8 = *(uint64_t (**)(id))(v0 + 8);
    id v5 = (id)qword_1000D5A40;
    return v8(v5);
  }
}

uint64_t sub_10003FB54()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10003FCB4, v3, v2);
}

uint64_t sub_10003FCB4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10003FD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v39 = a1;
  uint64_t v45 = sub_100004210(&qword_1000D5B50);
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v40 = v4;
  unint64_t v42 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100004210(&qword_1000D5B58);
  __chkstk_darwin(v5 - 8);
  unint64_t v41 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000B34D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  id v13 = &v34[-v12];
  uint64_t v14 = sub_1000B34F0();
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v38 = v14;
  __chkstk_darwin(v14);
  char v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000B3110();
  sub_1000B3080();
  sub_1000B34C0();
  uint64_t v17 = sub_1000B34E0();
  int v18 = sub_1000B4300();
  if (sub_1000B43E0())
  {
    uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16);
    int v35 = v18;
    v19(v11, v13, v7);
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = a3;
    uint64_t v21 = v20;
    *(_WORD *)uint64_t v20 = 0;
    os_signpost_id_t v22 = sub_1000B34B0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v17, (os_signpost_type_t)v35, v22, "HomeManagerWarmUp", "", v21, 2u);
    a3 = v36;
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
  }
  else
  {

    uint64_t v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16);
  }
  v19(v11, v13, v7);
  sub_1000B3530();
  swift_allocObject();
  uint64_t v23 = sub_1000B3520();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v16, v38);
  uint64_t v24 = sub_1000B41D0();
  uint64_t v25 = (uint64_t)v41;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v41, 1, 1, v24);
  uint64_t v27 = v42;
  uint64_t v26 = v43;
  uint64_t v28 = v45;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v43 + 16))(v42, v39, v45);
  sub_1000B41B0();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1000B41A0();
  unint64_t v30 = (*(unsigned __int8 *)(v26 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v29;
  *(void *)(v31 + 24) = &protocol witness table for MainActor;
  *(void *)(v31 + 32) = "HomeManagerWarmUp";
  *(void *)(v31 + 40) = 17;
  *(unsigned char *)(v31 + 48) = 2;
  uint64_t v32 = v44;
  *(void *)(v31 + 56) = v23;
  *(void *)(v31 + 64) = v32;
  *(void *)(v31 + 72) = a3;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v26 + 32))(v31 + v30, v27, v28);
  sub_10003CD4C(v25, (uint64_t)&unk_1000D5B68, v31);
  swift_release();
  return swift_release();
}

uint64_t sub_1000401E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 72) = v15;
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 56) = a7;
  *(void *)(v8 + 64) = a8;
  *(unsigned char *)(v8 + 168) = a6;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  uint64_t v9 = sub_100004210(&qword_1000D5B50);
  *(void *)(v8 + 88) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 96) = v10;
  *(void *)(v8 + 104) = *(void *)(v10 + 64);
  *(void *)(v8 + 112) = swift_task_alloc();
  *(void *)(v8 + 120) = swift_task_alloc();
  sub_1000B41B0();
  *(void *)(v8 + 128) = sub_1000B41A0();
  uint64_t v12 = sub_1000B4180();
  *(void *)(v8 + 136) = v12;
  *(void *)(v8 + 144) = v11;
  return _swift_task_switch(sub_100040304, v12, v11);
}

uint64_t sub_100040304()
{
  if (qword_1000D4E88 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 72);
  char v14 = *(unsigned char *)(v0 + 168);
  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v7 = qword_1000DCBE0;
  *(void *)(v0 + 152) = qword_1000DCBE0;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  long long v15 = *(_OWORD *)(v0 + 56);
  v8(v1, v4, v5);
  v8(v2, v1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 160) = v10;
  *(void *)(v10 + 16) = v12;
  *(void *)(v10 + 24) = v13;
  *(unsigned char *)(v10 + 32) = v14;
  *(_OWORD *)(v10 + 40) = v15;
  *(void *)(v10 + 56) = v6;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v9, v1, v5);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return _swift_task_switch(sub_1000404A0, v7, 0);
}

uint64_t sub_1000404A0()
{
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  if (*(unsigned char *)(v2 + 112) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v8 = *(const char **)(v0 + 40);
    unint64_t v9 = *(void **)(v2 + 128);
    int v10 = *(unsigned __int8 *)(v0 + 168);
    id v11 = v9;
    sub_100040708(v11, v8, v7, v10, v6, v5, v4, v3);
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_100043290;
    *(void *)(v12 + 24) = v1;
    uint64_t v13 = (void *)(v2 + 120);
    swift_beginAccess();
    char v14 = *(void **)(v2 + 120);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 120) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v14 = sub_100075A24(0, v14[2] + 1, 1, v14);
      *uint64_t v13 = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      char v14 = sub_100075A24((void *)(v16 > 1), v17 + 1, 1, v14);
      *uint64_t v13 = v14;
    }
    void v14[2] = v17 + 1;
    int v18 = &v14[2 * v17];
    v18[4] = sub_100043314;
    v18[5] = v12;
    swift_endAccess();
  }
  swift_release();
  swift_release();
  uint64_t v19 = *(void *)(v0 + 112);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  uint64_t v22 = *(void *)(v0 + 136);
  uint64_t v23 = *(void *)(v0 + 144);
  return _swift_task_switch(sub_100040694, v22, v23);
}

uint64_t sub_100040694()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100040708(void *a1, const char *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v53 = a1;
  uint64_t v54 = a8;
  uint64_t v52 = a7;
  uint64_t v60 = a6;
  unint64_t v61 = (char *)a2;
  LODWORD(v51) = a4;
  uint64_t v8 = sub_100004210(&qword_1000D5B50);
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  __chkstk_darwin(v8);
  uint64_t v55 = v9;
  uint64_t v57 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004210(&qword_1000D5B58);
  __chkstk_darwin(v10 - 8);
  id v56 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000B3500();
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v49 = v12;
  __chkstk_darwin(v12);
  char v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000B34D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v50 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = sub_1000B34F0();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B3110();
  sub_1000B3080();
  uint64_t v25 = sub_1000B34E0();
  sub_1000B3510();
  int v47 = sub_1000B42F0();
  uint64_t result = sub_1000B43E0();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v46 = v21;
  if (v51)
  {
    if ((unint64_t)v61 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v61 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        return result;
      }
      if (v61 >> 16 <= 0x10)
      {
        unint64_t v61 = &v62;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v61)
  {
LABEL_10:
    swift_retain();
    sub_1000B3540();
    swift_release();
    uint64_t v29 = v48;
    uint64_t v28 = v49;
    if ((*(unsigned int (**)(char *, uint64_t))(v48 + 88))(v14, v49) == enum case for OSSignpostError.doubleEnd(_:))
    {
      unint64_t v30 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v28);
      unint64_t v30 = "";
    }
    uint64_t v51 = v30;
    uint64_t v27 = v52;
    uint64_t v31 = v50;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v50, v20, v15);
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    os_signpost_id_t v33 = sub_1000B34B0();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, (os_signpost_type_t)v47, v33, v61, v51, v32, 2u);
    swift_slowDealloc();

    unint64_t v34 = *(void (**)(char *, uint64_t))(v16 + 8);
    v34(v20, v15);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v46);
    v34(v31, v15);
    goto LABEL_14;
  }
  __break(1u);
LABEL_5:

  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t v27 = v52;
LABEL_14:
  if (qword_1000D4E98 != -1) {
    swift_once();
  }
  id v35 = v53;
  sub_1000B30A0();
  uint64_t v36 = sub_1000B41D0();
  uint64_t v37 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v56, 1, 1, v36);
  uint64_t v39 = v57;
  uint64_t v38 = v58;
  uint64_t v40 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v54, v59);
  sub_1000B41B0();
  id v41 = v35;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1000B41A0();
  unint64_t v43 = (*(unsigned __int8 *)(v38 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v44 = (char *)swift_allocObject();
  *((void *)v44 + 2) = v42;
  *((void *)v44 + 3) = &protocol witness table for MainActor;
  *((void *)v44 + 4) = v60;
  *((void *)v44 + 5) = v41;
  *((void *)v44 + 6) = v27;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v44[v43], v39, v40);
  sub_10003CD4C(v37, (uint64_t)&unk_1000D5B88, (uint64_t)v44);
  return swift_release();
}

uint64_t sub_100040D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[3] = a5;
  sub_1000B41B0();
  v7[6] = sub_1000B41A0();
  uint64_t v9 = sub_1000B4180();
  v7[7] = v9;
  v7[8] = v8;
  return _swift_task_switch(sub_100040DBC, v9, v8);
}

uint64_t sub_100040DBC()
{
  if (qword_1000D4E98 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100040E8C;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  return DataModel.loadUpHomeSnapshots(homeManager:coverages:)(v3, v2);
}

uint64_t sub_100040E8C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100040FAC, v3, v2);
}

uint64_t sub_100040FAC()
{
  swift_release();
  byte_1000DCC00 = 1;
  uint64_t v1 = (void *)qword_1000D5A40;
  *(void *)(v0 + 16) = qword_1000D5A40;
  id v2 = v1;
  sub_100004210(&qword_1000D5B50);
  sub_1000B4190();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_100041044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5B50);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  if (qword_1000D4E98 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1000B3090();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v10 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    *(void *)(v10 + ((v6 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
    aBlock[4] = sub_1000435DC;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100041404;
    aBlock[3] = &unk_1000CF570;
    uint64_t v11 = _Block_copy(aBlock);
    swift_release();
    id v12 = [v8 _refreshBeforeDate:0 completionHandler:v11];
    swift_unknownObjectRelease();
    _Block_release(v11);
  }
}

uint64_t sub_100041254()
{
  uint64_t v0 = sub_1000B3570();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B3110();
  sub_1000B30B0();
  uint64_t v4 = sub_1000B3550();
  os_log_type_t v5 = sub_1000B42C0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "homemanager refresh is done", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1000D4E98 != -1) {
    swift_once();
  }
  v9[1] = qword_1000D5A40;
  id v7 = (id)qword_1000D5A40;
  sub_100004210(&qword_1000D5B50);
  return sub_1000B4190();
}

void sub_100041404(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_100041470()
{
  sub_1000B3110();
  uint64_t result = sub_1000B30E0();
  qword_1000D5A40 = result;
  return result;
}

unint64_t sub_1000414A4(uint64_t a1, uint64_t a2)
{
  sub_1000B48C0();
  sub_1000B4070();
  Swift::Int v4 = sub_1000B48F0();

  return sub_1000415F8(a1, a2, v4);
}

unint64_t sub_10004151C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1000B4540(*(void *)(v2 + 40));

  return sub_1000416DC(a1, v4);
}

unint64_t sub_100041560(uint64_t a1)
{
  sub_1000B2F60();
  sub_100043B2C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = sub_1000B3F50();

  return sub_1000417A4(a1, v2);
}

unint64_t sub_1000415F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1000B4830() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1000B4830() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1000416DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100042E54(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1000B4550();
      sub_100008410((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1000417A4(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1000B2F60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_100043B2C(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v15 = sub_1000B3F90();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_100041964(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100041A40;
  return v6(a1);
}

uint64_t sub_100041A40()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100041B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B3220();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  BOOL v11 = (char *)&v37 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v37 - v12;
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v49 = a2 + 56;
  uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
  uint64_t v40 = ~v16;
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v41 = (unint64_t)(63 - v16) >> 6;
  uint64_t v46 = v5 + 32;
  uint64_t v50 = a1 + 56;
  uint64_t v51 = v5 + 16;
  uint64_t v52 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v44 = a2;
  uint64_t v38 = v13;
  uint64_t v39 = v5;
  int64_t v47 = 0;
  unint64_t v48 = v18;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v42 = (v18 - 1) & v18;
  int64_t v43 = v20;
  for (unint64_t i = __clz(__rbit64(v18)) | (v20 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = *(void *)(v5 + 72);
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v27(v13, *(void *)(a2 + 48) + v26 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v13, v4);
    uint64_t v28 = *(void *)(a1 + 16);
    uint64_t v45 = (unint64_t)v52 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v29 = v11;
    if (!v28
      || (sub_100043B2C(&qword_1000D5B40, (void (*)(uint64_t))&type metadata accessor for StateSnapshot.Coverage), uint64_t v30 = sub_1000B3F50(), v31 = -1 << *(unsigned char *)(a1 + 32), v32 = v30 & ~v31, ((*(void *)(v50 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0))
    {
      (*v52)(v11, v4);
LABEL_30:
      uint64_t v14 = 0;
      goto LABEL_31;
    }
    uint64_t v33 = a1;
    uint64_t v34 = ~v31;
    while (1)
    {
      v27(v8, *(void *)(v33 + 48) + v32 * v26, v4);
      sub_100043B2C(&qword_1000D5B48, (void (*)(uint64_t))&type metadata accessor for StateSnapshot.Coverage);
      char v35 = sub_1000B3F90();
      uint64_t v36 = *v52;
      (*v52)(v8, v4);
      if (v35) {
        break;
      }
      unint64_t v32 = (v32 + 1) & v34;
      if (((*(void *)(v50 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
      {
        v36(v29, v4);
        goto LABEL_30;
      }
    }
    BOOL v11 = v29;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v36)(v29, v4);
    unint64_t v18 = v42;
    int64_t v20 = v43;
    a2 = v44;
    a1 = v33;
    uint64_t v13 = v38;
    uint64_t v5 = v39;
    int64_t v47 = v43;
    unint64_t v48 = v42;
    if (v42) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v22 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v22 >= v41) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v49 + 8 * v22);
    int64_t v24 = v20 + 1;
    if (!v23)
    {
      int64_t v24 = v20 + 2;
      if (v20 + 2 >= v41) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v49 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v20 + 3;
        if (v20 + 3 >= v41) {
          goto LABEL_34;
        }
        unint64_t v23 = *(void *)(v49 + 8 * v24);
        if (!v23) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v42 = (v23 - 1) & v23;
    int64_t v43 = v24;
  }
  uint64_t v25 = v20 + 4;
  if (v20 + 4 >= v41)
  {
LABEL_34:
    uint64_t v14 = 1;
LABEL_31:
    sub_100017A14();
    return v14;
  }
  unint64_t v23 = *(void *)(v49 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v20 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v41) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v49 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100041FC4(uint64_t a1)
{
  return a1 & ~(-1 << *(unsigned char *)(v1 + 32));
}

uint64_t sub_100041FF0()
{
  sub_1000B48C0();
  sub_1000B4070();
  Swift::Int v0 = sub_1000B48F0();

  return sub_100041FC4(v0);
}

void *sub_100042050(uint64_t a1)
{
  uint64_t v2 = sub_1000B31A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100004210((uint64_t *)&unk_1000D5BD0);
    uint64_t v9 = sub_1000B45B0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100043B2C(&qword_1000D55A8, (void (*)(uint64_t))&type metadata accessor for ServiceKind);
      uint64_t v16 = sub_1000B3F50();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100043B2C((unint64_t *)&unk_1000D5BE0, (void (*)(uint64_t))&type metadata accessor for ServiceKind);
          char v23 = sub_1000B3F90();
          int64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_100042368(uint64_t a1)
{
  uint64_t v2 = sub_1000B2F60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100004210((uint64_t *)&unk_1000D5B20);
    uint64_t v9 = sub_1000B45B0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100043B2C((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v16 = sub_1000B3F50();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100043B2C(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v23 = sub_1000B3F90();
          int64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_100042680(uint64_t a1, uint64_t a2)
{
  if (qword_1000D4E90 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1000B3570();
  sub_100017618(v4, (uint64_t)qword_1000DCBE8);
  swift_retain_n();
  uint64_t v5 = sub_1000B3550();
  os_log_type_t v6 = sub_1000B42C0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    swift_retain();
    sub_100004210(&qword_1000D5BC0);
    uint64_t v9 = sub_1000B4040();
    sub_10002A68C(v9, v10, &v11);
    sub_1000B4400();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t _s10HomeWidget0A12ManagerActorC04homeC14DidUpdateHomesyySo06HMHomeC0CF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100004210(&qword_1000D5B58);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B41D0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_100017B5C((uint64_t)v4, &qword_1000D5B58);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1000B41C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1000B4180();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1000D5B98;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    void v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

unint64_t sub_100042ABC()
{
  unint64_t result = qword_1000D5A70;
  if (!qword_1000D5A70)
  {
    sub_100004B80(&qword_1000D5A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D5A70);
  }
  return result;
}

void *sub_100042B18(uint64_t a1)
{
  uint64_t v2 = sub_1000B3220();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100004210(&qword_1000D5B38);
    uint64_t v9 = sub_1000B45B0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100043B2C(&qword_1000D5B40, (void (*)(uint64_t))&type metadata accessor for StateSnapshot.Coverage);
      uint64_t v16 = sub_1000B3F50();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100043B2C(&qword_1000D5B48, (void (*)(uint64_t))&type metadata accessor for StateSnapshot.Coverage);
          char v23 = sub_1000B3F90();
          int64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t type metadata accessor for HomeManagerActor()
{
  return self;
}

uint64_t sub_100042E54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100042EB0(uint64_t a1)
{
  return sub_10003FD18(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100042EB8()
{
  uint64_t v1 = sub_100004210(&qword_1000D5B50);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100042F98(uint64_t a1)
{
  sub_100004210(&qword_1000D5B50);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  char v9 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10002E808;
  return sub_1000401E0(a1, v3, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_1000430C8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100043100(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10002E808;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000D5B70 + dword_1000D5B70);
  return v6(a1, v4);
}

uint64_t sub_1000431B8()
{
  uint64_t v1 = sub_100004210(&qword_1000D5B50);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100043290(void *a1)
{
  uint64_t v3 = *(void *)(sub_100004210(&qword_1000D5B50) - 8);
  uint64_t v4 = *(const char **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  int v10 = *(unsigned __int8 *)(v1 + 32);

  return sub_100040708(a1, v4, v5, v10, v6, v7, v8, v9);
}

uint64_t sub_100043314(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100043340()
{
  uint64_t v1 = sub_100004210(&qword_1000D5B50);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100043420(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100004210(&qword_1000D5B50) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10002E808;
  return sub_100040D20(a1, v5, v6, v7, v8, v9, v10);
}

void sub_100043534(uint64_t a1)
{
  sub_100041044(a1, *(void *)(v1 + 16));
}

uint64_t sub_10004353C()
{
  uint64_t v1 = sub_100004210(&qword_1000D5B50);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000435DC()
{
  sub_100004210(&qword_1000D5B50);

  return sub_100041254();
}

uint64_t sub_10004367C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004368C()
{
  return swift_release();
}

uint64_t sub_100043694()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000436D4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10002E808;
  v3[2] = v2;
  return _swift_task_switch(sub_10003DCA4, v2, 0);
}

uint64_t sub_10004377C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100021DB0;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000D5B70 + dword_1000D5B70);
  return v6(a1, v4);
}

uint64_t sub_100043834()
{
  uint64_t v1 = sub_100004210(&qword_1000D5BA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100043904(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100004210(&qword_1000D5BA8) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100021DB0;
  return sub_10003D864(a1, v5, v6, v7);
}

uint64_t sub_1000439F4()
{
  uint64_t v1 = sub_100004210(&qword_1000D5BA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100043A88(void *a1)
{
  sub_100004210(&qword_1000D5BA8);

  return sub_10003DC38(a1);
}

uint64_t sub_100043AFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_100043B2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100043B88@<X0>(uint64_t a1@<X8>)
{
  v18[1] = a1;
  v18[0] = sub_100004210(&qword_1000D5C58);
  __chkstk_darwin(v18[0]);
  uint64_t v2 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004210(&qword_1000D5C60);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v18 - v8;
  unint64_t v10 = sub_1000584E0(0);
  uint64_t v12 = v11;
  char v14 = v13;
  sub_100043ED0();
  sub_1000B3940();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v15(v7, v9, v3);
  *(void *)uint64_t v2 = v10;
  *((void *)v2 + 1) = v12;
  v2[16] = v14 & 1;
  v15(&v2[*(int *)(v18[0] + 48)], v7, v3);
  swift_bridgeObjectRetain();
  sub_1000B3640();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v9, v3);
  v16(v7, v3);
  return swift_bridgeObjectRelease();
}

Swift::String *homeDeepLinkURLPrefix.unsafeMutableAddressor()
{
  return &homeDeepLinkURLPrefix;
}

Swift::String *homeDeepLinkURLMainScreen.unsafeMutableAddressor()
{
  return &homeDeepLinkURLMainScreen;
}

void sub_100043D9C()
{
  HIWORD(homeAccessoryTypePseudoHost._object) = -4864;
}

Swift::String *homeAccessoryTypePseudoHost.unsafeMutableAddressor()
{
  if (qword_1000D4EA0 != -1) {
    swift_once();
  }
  return &homeAccessoryTypePseudoHost;
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_100043E50()
{
  unint64_t result = qword_1000D5C50;
  if (!qword_1000D5C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C50);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeWidgetBundle()
{
  return &type metadata for HomeWidgetBundle;
}

uint64_t sub_100043EB4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100043ED0()
{
  unint64_t result = qword_1000D5C68;
  if (!qword_1000D5C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C68);
  }
  return result;
}

unint64_t sub_100043F28()
{
  unint64_t result = qword_1000D5C70;
  if (!qword_1000D5C70)
  {
    sub_100004B80(&qword_1000D5C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C70);
  }
  return result;
}

unint64_t sub_100043F84(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100044118(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    uint64_t v12 = *(void *)(a2 + 40);
    char v13 = *(unsigned char *)(a2 + 48);
    sub_100044124(v9, v10, v11, v12, v13);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(unsigned char *)(a1 + 48) = v13;
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000B3E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[8];
    *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
    *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
    *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100044118(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100044124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100044130(uint64_t a1, uint64_t a2)
{
  sub_1000441FC(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_100044208(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000B3E50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000441FC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100044208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100044214(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  char v12 = *(unsigned char *)(a2 + 48);
  sub_100044124(v8, v9, v10, v11, v12);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(unsigned char *)(a1 + 48) = v12;
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_1000B3E50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100044358(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000441FC(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  char v14 = *(unsigned char *)(a2 + 48);
  sub_100044124(v10, v11, v12, v13, v14);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  char v19 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v13;
  *(unsigned char *)(a1 + 48) = v14;
  sub_100044208(v15, v16, v17, v18, v19);
  if (a1 != a2)
  {
    uint64_t v20 = a3[6];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    sub_100017B5C(a1 + v20, &qword_1000D5C80);
    sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_1000B3E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      void *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1000444E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000B3E50();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1000445FC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000441FC(v8, v9);
  char v10 = *((unsigned char *)a2 + 48);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  char v15 = *(unsigned char *)(a1 + 48);
  long long v16 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v16;
  *(unsigned char *)(a1 + 48) = v10;
  sub_100044208(v11, v12, v13, v14, v15);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v17 = a3[6];
    uint64_t v18 = (void *)(a1 + v17);
    char v19 = (char *)a2 + v17;
    sub_100017B5C(a1 + v17, &qword_1000D5C80);
    uint64_t v20 = sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1000B3E50();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(unsigned char *)(a1 + v22) = *((unsigned char *)a2 + v22);
  return a1;
}

uint64_t sub_100044754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044768);
}

uint64_t sub_100044768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5C88);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    char v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_10004483C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100044850);
}

uint64_t sub_100044850(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004210(&qword_1000D5C88);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for HomeInteractiveWidgetsEntryView(uint64_t a1)
{
  return sub_10006842C(a1, (uint64_t *)&unk_1000D5CE8);
}

void sub_100044934()
{
  sub_10005B144(319, (unint64_t *)&unk_1000D5CF8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100044A0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100044A28(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  unint64_t v12 = (char *)v20 - v11;
  int v13 = _swiftEmptyArrayStorage;
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    char v15 = _swiftEmptyArrayStorage;
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      int v13 = *(void **)(v24 + 72);
      sub_100059028(a3 + v16 + (void)v13 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      char v17 = a1(v12);
      if (v3)
      {
        sub_100059090((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
      if (v17)
      {
        sub_10005BB70((uint64_t)v12, v23, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10001EA34(0, v15[2] + 1, 1);
        }
        char v15 = v25;
        unint64_t v19 = v25[2];
        unint64_t v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_10001EA34(v18 > 1, v19 + 1, 1);
          char v15 = v25;
        }
        v15[2] = v19 + 1;
        uint64_t result = sub_10005BB70(v23, (uint64_t)v15 + v16 + v19 * (void)v13, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_100059090((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      }
      if (v22 == ++v14)
      {
        int v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_100044CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return _swift_task_switch(sub_100044CE8, 0, 0);
}

uint64_t sub_100044CE8()
{
  int v13 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000B3570();
  v0[9] = sub_100017618(v1, (uint64_t)qword_1000DCC18);
  uint64_t v2 = sub_1000B3550();
  os_log_type_t v3 = sub_1000B42C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[3] = sub_10002A68C(0xD000000000000011, 0x80000001000B9D30, &v12);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s Getting Snapshot for interactive widgets... - started", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100044EE0;
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  uint64_t v10 = v0[4];
  return sub_100045148(v10, v8, v9, v6, v7);
}

uint64_t sub_100044EE0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100044FDC, 0, 0);
}

uint64_t sub_100044FDC()
{
  uint64_t v7 = v0;
  uint64_t v1 = sub_1000B3550();
  os_log_type_t v2 = sub_1000B42C0();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v3 = 136315138;
    *(void *)(v0 + 16) = sub_10002A68C(0xD000000000000011, 0x80000001000B9D30, &v6);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s Getting Snapshot for interactive widgets... - ended", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100045148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a3;
  v5[13] = a4;
  v5[10] = a1;
  v5[11] = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000D64F8 + dword_1000D64F8);
  uint64_t v10 = (void *)swift_task_alloc();
  v5[14] = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_10004521C;
  return v12(a2, a3, a4, a5);
}

uint64_t sub_10004521C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100045410;
  }
  else
  {
    *(void *)(v4 + 128) = a1;
    uint64_t v5 = sub_100045344;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100045344()
{
  v0[3] = v0[16];
  sub_1000B29A0();
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  sub_1000B2F00();
  uint64_t v5 = type metadata accessor for AccessoriesAndScenesEntry(0);
  uint64_t v6 = (void *)(v4 + *(int *)(v5 + 20));
  *uint64_t v6 = v3;
  v6[1] = v1;
  v6[2] = v2;
  *(unsigned char *)(v4 + *(int *)(v5 + 24)) = 0;
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  swift_retain();
  swift_retain();
  swift_retain();
  return v8();
}

uint64_t sub_100045410()
{
  uint64_t v25 = v0;
  *(void *)(v0 + 16) = *(void *)(v0 + 120);
  swift_errorRetain();
  sub_100004210(&qword_1000D6500);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    char v1 = *(unsigned char *)(v0 + 136);
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1000B3570();
    sub_100017618(v2, (uint64_t)qword_1000DCC18);
    uint64_t v3 = sub_1000B3550();
    os_log_type_t v4 = sub_1000B42A0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315394;
      *(void *)(v0 + 64) = sub_10002A68C(0xD00000000000001ALL, 0x80000001000B9A70, &v24);
      sub_1000B4400();
      *(_WORD *)(v5 + 12) = 2112;
      sub_10006B4F0();
      swift_allocError();
      char *v7 = v1;
      uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 72) = v8;
      sub_1000B4400();
      *uint64_t v6 = v8;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s accessoriesAndScenes failed: %@", (uint8_t *)v5, 0x16u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
    sub_1000B29A0();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1000B3570();
    sub_100017618(v9, (uint64_t)qword_1000DCC18);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = sub_1000B3550();
    os_log_type_t v11 = sub_1000B42A0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315394;
      uint64_t v24 = v14;
      *(void *)(v0 + 40) = sub_10002A68C(0xD00000000000001ALL, 0x80000001000B9A70, &v24);
      sub_1000B4400();
      *(_WORD *)(v12 + 12) = 2112;
      swift_errorRetain();
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 48) = v15;
      sub_1000B4400();
      *uint64_t v13 = v15;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s accessoriesAndScenes failed: %@", (uint8_t *)v12, 0x16u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    *(void *)(v0 + 32) = _swiftEmptyArrayStorage;
    sub_1000B29A0();
    swift_errorRelease();
    char v1 = 1;
  }
  uint64_t v16 = *(void *)(v0 + 96);
  uint64_t v17 = *(void *)(v0 + 104);
  uint64_t v19 = *(void *)(v0 + 80);
  uint64_t v18 = *(void *)(v0 + 88);
  sub_1000B2F00();
  uint64_t v20 = type metadata accessor for AccessoriesAndScenesEntry(0);
  uint64_t v21 = (void *)(v19 + *(int *)(v20 + 20));
  void *v21 = v18;
  v21[1] = v16;
  void v21[2] = v17;
  *(unsigned char *)(v19 + *(int *)(v20 + 24)) = v1;
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  return v23();
}

uint64_t sub_10004594C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  sub_1000B3E80();
  v5[9] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AccessoriesAndScenesEntry(0);
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_100045A40, 0, 0);
}

uint64_t sub_100045A40()
{
  uint64_t v13 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000B3570();
  *(void *)(v0 + 104) = sub_100017618(v1, (uint64_t)qword_1000DCC18);
  uint64_t v2 = sub_1000B3550();
  os_log_type_t v3 = sub_1000B42C0();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 136315138;
    *(void *)(v0 + 24) = sub_10002A68C(0xD000000000000011, 0x80000001000B9A50, &v12);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s Loading Timeline for interactive widgets... - started", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10006CF28(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100045C44;
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  return sub_100045148(v6, v9, v10, v7, v8);
}

uint64_t sub_100045C44()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100045D40, 0, 0);
}

uint64_t sub_100045D40()
{
  os_log_type_t v11 = v0;
  uint64_t v1 = sub_1000B3550();
  os_log_type_t v2 = sub_1000B42C0();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v3 = 136315138;
    v0[2] = sub_10002A68C(0xD000000000000011, 0x80000001000B9A50, &v10);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s Loading Timeline for interactive widgets... - ended", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  sub_100004210(&qword_1000D64F0);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000B5180;
  sub_100059028(v4, v7 + v6, type metadata accessor for AccessoriesAndScenesEntry);
  sub_1000B3E70();
  sub_100058DF8(qword_1000D6490, (void (*)(uint64_t))type metadata accessor for AccessoriesAndScenesEntry);
  sub_1000B3F10();
  sub_100059090(v4, type metadata accessor for AccessoriesAndScenesEntry);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100045F94@<X0>(uint64_t a1@<X8>)
{
  sub_1000B2F00();
  uint64_t v2 = sub_100031634();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t result = type metadata accessor for AccessoriesAndScenesEntry(0);
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(result + 20));
  *uint64_t v8 = v2;
  v8[1] = v4;
  v8[2] = v6;
  *(unsigned char *)(a1 + *(int *)(result + 24)) = 0;
  return result;
}

uint64_t sub_100045FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *(void *)uint64_t v8 = v3;
  *(void *)(v8 + 8) = sub_10002E808;
  *(void *)(v8 + 56) = v7;
  *(void *)(v8 + 64) = a3;
  *(_OWORD *)(v8 + 40) = *(_OWORD *)a2;
  *(void *)(v8 + 32) = a1;
  return _swift_task_switch(sub_100044CE8, 0, 0);
}

uint64_t sub_1000460BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  void *v9 = v3;
  v9[1] = sub_10002E808;
  return sub_10004594C(a1, v6, v7, v8, a3);
}

uint64_t sub_100046188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100021DB0;
  return AppIntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_10004623C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10002E808;
  return AppIntentTimelineProvider.relevance()(a1, a2, a3);
}

BOOL sub_1000462F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100046304(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000B2F60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v25 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v26 = (char *)&v24 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v11, a1 + *(int *)(v12 + 20), v4);
  uint64_t v14 = *a2;
  if (*(void *)(*a2 + 16) && (unint64_t v15 = sub_100041560((uint64_t)v11), (v16 & 1) != 0))
  {
    uint64_t v17 = *(void **)(*(void *)(v14 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
  }
  v13(v26, a1, v4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = (void *)sub_1000753BC(0, v17[2] + 1, 1, (unint64_t)v17);
  }
  unint64_t v19 = v17[2];
  unint64_t v18 = v17[3];
  if (v19 >= v18 >> 1) {
    uint64_t v17 = (void *)sub_1000753BC(v18 > 1, v19 + 1, 1, (unint64_t)v17);
  }
  v17[2] = v19 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v19, v26, v4);
  uint64_t v20 = (uint64_t)v25;
  v13(v25, (uint64_t)v11, v4);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *a2;
  *a2 = 0x8000000000000000;
  sub_1000A2D04((uint64_t)v17, v20, isUniquelyReferenced_nonNull_native);
  *a2 = v27;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v22(v20, v4);
  v22((uint64_t)v11, v4);
  return swift_bridgeObjectRelease();
}

void sub_1000465B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = sub_1000B2F60();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = a1;
  uint64_t v14 = sub_10000EAA4(sub_10006B5A4, (uint64_t)v28, a3);
  if (v14)
  {
    unint64_t v15 = v14;
    if (*(void *)(a2 + 16))
    {
      sub_100004210(&qword_1000D5190);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000B52D0;
      *(void *)(inited + 32) = v15;
      v31[0] = inited;
      sub_1000B4120();
      unint64_t v17 = v31[0];
      id v18 = v15;
      swift_bridgeObjectRetain();
      unint64_t v19 = (void *)sub_10002CD58(v17, a2);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19[2])
      {
LABEL_4:
        sub_100071544((uint64_t)v19);
        id v20 = v15;
        sub_1000B40E0();
        if (*(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1000B4130();
        }
        sub_1000B4150();
        sub_1000B4120();

        return;
      }
    }
    else
    {
      id v27 = v14;
      unint64_t v19 = _swiftEmptyArrayStorage;
      if (_swiftEmptyArrayStorage[2]) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();

    return;
  }
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1000B3570();
  sub_100017618(v21, (uint64_t)qword_1000DCC18);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  uint64_t v22 = sub_1000B3550();
  os_log_type_t v23 = sub_1000B42A0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v30 = sub_10002A68C(0xD000000000000031, 0x80000001000B9AC0, v31);
    sub_1000B4400();
    *(_WORD *)(v24 + 12) = 2080;
    sub_100058DF8(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = sub_1000B4800();
    uint64_t v30 = sub_10002A68C(v25, v26, v31);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s Could not find home with UUID %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1000469DC(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      type metadata accessor for AccessoryAndSceneEntity();
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100046A70(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1000B3350();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v8 = a1 + *(int *)(v7 + 24);
  uint64_t v9 = type metadata accessor for WidgetTileInfo();
  uint64_t v10 = (uint64_t *)(v8 + *(int *)(v9 + 28));
  unint64_t v11 = v10[1];
  if (v11) {
    uint64_t v12 = *v10;
  }
  else {
    uint64_t v12 = 0;
  }
  unint64_t v13 = 0xE000000000000000;
  if (v11) {
    unint64_t v13 = v11;
  }
  uint64_t v32 = v12;
  unint64_t v33 = v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1000B3340();
  uint64_t v31 = sub_1000B3330();
  uint64_t v35 = v14;
  unint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v6, v3);
  char v16 = (uint64_t *)(v34 + *(int *)(v7 + 24) + *(int *)(v9 + 28));
  unint64_t v17 = v16[1];
  if (v17) {
    uint64_t v18 = *v16;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v34 = v18;
  if (v17) {
    unint64_t v19 = v17;
  }
  else {
    unint64_t v19 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v20 = v32;
  sub_1000B3340();
  uint64_t v21 = sub_1000B3330();
  uint64_t v23 = v22;
  uint64_t v24 = v6;
  unint64_t v25 = v33;
  v15(v24, v3);
  BOOL v26 = v20 == v34 && v25 == v19;
  if (v26 || (sub_1000B4830()) && (v31 == v21 ? (BOOL v27 = v35 == v23) : (BOOL v27 = 0), v27)) {
    char v28 = 0;
  }
  else {
    char v28 = sub_1000B4830();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v28 & 1;
}

uint64_t sub_100046D10(id *a1)
{
  uint64_t v2 = sub_1000B2F60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [*a1 uniqueIdentifier];
  sub_1000B2F50();

  char v7 = sub_1000B2F40();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

void sub_100046E1C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a6;
  uint64_t v9 = sub_100004210(&qword_1000D6568);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = [a2 widgetManager];
  sub_100008148(0, &qword_1000D4FE8);
  Class isa = sub_1000B40F0().super.isa;
  NSString v13 = sub_1000B4000();
  NSString v14 = sub_1000B4000();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
  *(void *)(v17 + v16) = v24;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_10006B818;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001D300;
  aBlock[3] = &unk_1000CFB68;
  uint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  Class v20 = isa;
  id v19 = v23;
  [v23 monitorAndFetchStateForCharacteristics:isa widgetIdentifier:v13 kind:v14 completion:v18];
  _Block_release(v18);
}

void sub_1000470A4(void *a1, uint64_t a2, uint64_t a3, NSObject *a4, unint64_t a5)
{
  unint64_t v220 = a5;
  os_log_t v183 = a4;
  uint64_t v182 = a3;
  uint64_t v204 = sub_1000B3570();
  char v7 = *(NSObject **)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v9 = (char *)&v182 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = type metadata accessor for WidgetTileInfo();
  uint64_t v10 = __chkstk_darwin(v200);
  uint64_t v12 = (char *)&v182 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v15 = (char *)&v182 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v182 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v182 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v222 = (uint64_t)&v182 - v23;
  __chkstk_darwin(v22);
  uint64_t v197 = (char *)&v182 - v24;
  uint64_t v205 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v218 = *(void *)(v205 - 8);
  uint64_t v25 = __chkstk_darwin(v205);
  uint64_t v221 = (uint64_t)&v182 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v224 = (uint64_t)&v182 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v185 = (uint64_t)&v182 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v187 = (uint64_t)&v182 - v32;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v182 - v33;
  uint64_t v225 = sub_1000B2F60();
  Class v219 = *(Class *)(v225 - 8);
  __chkstk_darwin(v225);
  uint64_t v36 = (char *)&v182 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v217 = v7;
    uint64_t v199 = v9;
    uint64_t v37 = qword_1000D4EA8;
    id v38 = a1;
    if (v37 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_100017618(v204, (uint64_t)qword_1000DCC18);
    id v40 = v38;
    uint64_t v202 = v39;
    int64_t v41 = sub_1000B3550();
    os_log_type_t v42 = sub_1000B42C0();
    LODWORD(v223) = v42;
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v198 = v12;
    uint64_t v196 = v15;
    unint64_t v195 = v18;
    unint64_t v194 = v21;
    uint64_t v203 = v34;
    if (v43)
    {
      uint64_t v44 = swift_slowAlloc();
      os_log_t v227 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315394;
      uint64_t v226 = sub_10002A68C(0xD000000000000052, 0x80000001000B9C80, (uint64_t *)&v227);
      os_log_t v216 = (os_log_t)&v227;
      sub_1000B4400();
      *(_WORD *)(v44 + 12) = 2080;
      unint64_t v215 = (os_log_t *)(v44 + 14);
      id v45 = [v40 valueByCharacteristicUniqueIdentifier:v182];
      sub_100058DF8((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
      sub_1000B3F30();

      uint64_t v46 = sub_1000B3F40();
      unint64_t v48 = v47;
      swift_bridgeObjectRelease();
      uint64_t v226 = sub_10002A68C(v46, v48, (uint64_t *)&v227);
      sub_1000B4400();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v223, "%s Current characteristic values: %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v54 = (uint64_t)v197;
    id v55 = v40;
    id v56 = sub_1000B3550();
    os_log_type_t v57 = sub_1000B42C0();
    BOOL v58 = os_log_type_enabled(v56, v57);
    id v223 = v55;
    if (v58)
    {
      uint64_t v59 = swift_slowAlloc();
      os_log_t v216 = (os_log_t)swift_slowAlloc();
      os_log_t v227 = v216;
      *(_DWORD *)uint64_t v59 = 136315394;
      uint64_t v226 = sub_10002A68C(0xD000000000000052, 0x80000001000B9C80, (uint64_t *)&v227);
      unint64_t v215 = &v227;
      sub_1000B4400();
      *(_WORD *)(v59 + 12) = 2080;
      os_log_t v214 = (os_log_t)(v59 + 14);
      id v60 = [v223 reachabilityByAccessoryUniqueIdentifier];
      sub_100008148(0, (unint64_t *)&qword_1000D51E0);
      sub_100058DF8((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
      sub_1000B3F30();

      uint64_t v61 = sub_1000B3F40();
      unint64_t v63 = v62;
      swift_bridgeObjectRelease();
      uint64_t v226 = sub_10002A68C(v61, v63, (uint64_t *)&v227);
      sub_1000B4400();

      id v55 = v223;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "%s Current accessory reachability: %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v64 = (uint64_t)v203;
    unint64_t v65 = v220;
    if (v220 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1000B46A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v66 = *(void *)((v220 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id v67 = [v55 valueByCharacteristicUniqueIdentifier:v182];
    uint64_t v201 = sub_100058DF8((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v68 = sub_1000B3F30();

    uint64_t v69 = *(void *)(v68 + 16);
    swift_bridgeObjectRelease();
    if (v66 != v69)
    {
      uint64_t v70 = _swiftEmptyArrayStorage;
      if (v66)
      {
        os_log_t v227 = (os_log_t)_swiftEmptyArrayStorage;
        sub_10001E9D8(0, v66 & ~(v66 >> 63), 0);
        Class v71 = v219;
        if (v66 < 0) {
          __break(1u);
        }
        uint64_t v72 = 0;
        uint64_t v70 = v227;
        unint64_t v73 = v65 & 0xC000000000000001;
        do
        {
          if (v73) {
            id v74 = (id)sub_1000B45E0();
          }
          else {
            id v74 = *(id *)(v65 + 8 * v72 + 32);
          }
          uint64_t v75 = v74;
          id v76 = [v74 uniqueIdentifier];
          sub_1000B2F50();

          os_log_t v227 = v70;
          unint64_t isa = (unint64_t)v70[2].isa;
          unint64_t v77 = (unint64_t)v70[3].isa;
          if (isa >= v77 >> 1)
          {
            sub_10001E9D8(v77 > 1, isa + 1, 1);
            uint64_t v70 = v227;
          }
          ++v72;
          v70[2].unint64_t isa = (Class)(isa + 1);
          (*((void (**)(unint64_t, char *, uint64_t))v71 + 4))((unint64_t)v70+ ((*((unsigned __int8 *)v71 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v71 + 80))+ *((void *)v71 + 9) * isa, v36, v225);
          unint64_t v65 = v220;
        }
        while (v66 != v72);
        uint64_t v54 = (uint64_t)v197;
        id v55 = v223;
      }
      uint64_t v79 = sub_100017D40((uint64_t)v70);
      swift_bridgeObjectRelease();
      id v80 = [v55 valueByCharacteristicUniqueIdentifier];
      uint64_t v81 = sub_1000B3F30();

      uint64_t v82 = sub_10000EBCC(v81);
      if (*(void *)(v82 + 16) <= *(void *)(v79 + 16) >> 3)
      {
        os_log_t v227 = (os_log_t)v79;
        sub_100012F28(v82);
      }
      else
      {
        sub_100013A50(v82, v79);
      }
      swift_bridgeObjectRelease();
      id v83 = v55;
      swift_bridgeObjectRetain_n();
      id v84 = v83;
      swift_bridgeObjectRetain();
      id v85 = sub_1000B3550();
      os_log_type_t v86 = sub_1000B42A0();
      int v87 = v86;
      if (os_log_type_enabled(v85, v86))
      {
        uint64_t v88 = swift_slowAlloc();
        unint64_t v220 = swift_slowAlloc();
        os_log_t v227 = (os_log_t)v220;
        *(_DWORD *)uint64_t v88 = 134218498;
        swift_bridgeObjectRelease();
        uint64_t v226 = v66;
        v213 = &v227;
        sub_1000B4400();
        swift_bridgeObjectRelease();
        *(_WORD *)(v88 + 12) = 2048;
        LODWORD(v216) = v87;
        id v89 = [v84 valueByCharacteristicUniqueIdentifier];
        os_log_t v214 = v85;
        unint64_t v215 = (os_log_t *)((char *)&type metadata for Any + 8);
        uint64_t v90 = sub_1000B3F30();

        uint64_t v91 = *(void *)(v90 + 16);
        swift_bridgeObjectRelease();
        uint64_t v226 = v91;
        sub_1000B4400();

        *(_WORD *)(v88 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v92 = sub_1000B41F0();
        unint64_t v94 = v93;
        swift_bridgeObjectRelease();
        uint64_t v226 = sub_10002A68C(v92, v94, (uint64_t *)&v227);
        id v55 = v223;
        sub_1000B4400();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v95 = v214;
        _os_log_impl((void *)&_mh_execute_header, v214, (os_log_type_t)v216, "Error: Asked for %ld characteristics but got %ld back instead, missing: %s", (uint8_t *)v88, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v64 = (uint64_t)v203;
    }
    Class v96 = v183[2].isa;
    if (v96)
    {
      unint64_t v193 = (*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80);
      uint64_t v97 = (uint64_t)v183 + v193;
      uint64_t v192 = *(void *)(v218 + 72);
      uint64_t v188 = &v227;
      unint64_t v220 = (unint64_t)v219 + 16;
      uint64_t v191 = (void (**)(char *, uint64_t, uint64_t))&v217[2];
      uint64_t v190 = (void (**)(char *, uint64_t))&v217[1];
      swift_bridgeObjectRetain();
      uint64_t v98 = _swiftEmptyArrayStorage;
      uint64_t v189 = (char *)&type metadata for Any + 8;
      *(void *)&long long v99 = 136315906;
      long long v186 = v99;
      *(void *)&long long v99 = 136315138;
      long long v184 = v99;
      uint64_t v100 = v205;
      do
      {
        id v217 = v98;
        uint64_t v218 = v97;
        Class v219 = v96;
        sub_100059028(v97, v64, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_100059028(v64 + *(int *)(v100 + 24), v54, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        LODWORD(v216) = sub_100048B24(v54, v55, v64);
        if ((v216 & 1) == 0)
        {
          uint64_t v101 = v187;
          sub_100059028(v64, v187, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          uint64_t v102 = sub_1000B3550();
          os_log_type_t v103 = sub_1000B42C0();
          if (os_log_type_enabled(v102, v103))
          {
            uint64_t v104 = (uint8_t *)swift_slowAlloc();
            os_log_t v227 = (os_log_t)swift_slowAlloc();
            *(_DWORD *)uint64_t v104 = v184;
            sub_100059028(v101, v185, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            uint64_t v105 = sub_1000B4040();
            uint64_t v226 = sub_10002A68C(v105, v106, (uint64_t *)&v227);
            sub_1000B4400();
            swift_bridgeObjectRelease();
            sub_100059090(v101, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            _os_log_impl((void *)&_mh_execute_header, v102, v103, "Unreachable item: %s", v104, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_100059090(v101, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          }
        }
        Swift::Int v107 = *(os_log_t **)v220;
        unint64_t v215 = v107;
        uint64_t v108 = v222;
        uint64_t v109 = v225;
        ((void (*)(uint64_t, uint64_t, uint64_t))v107)(v222, v54, v225);
        unint64_t v110 = (int *)v200;
        ((void (*)(uint64_t, uint64_t, uint64_t))v107)(v108 + *(int *)(v200 + 20), v54 + *(int *)(v200 + 20), v109);
        uint64_t v111 = v110[7];
        uint64_t v112 = (os_log_t **)(v54 + v110[6]);
        uint64_t v113 = *v112;
        unint64_t v208 = v112[1];
        uint64_t v114 = v54 + v111;
        uint64_t v116 = *(NSObject **)(v54 + v111);
        uint64_t v115 = *(void *)(v114 + 8);
        v213 = v113;
        os_log_t v214 = v116;
        uint64_t v207 = v115;
        uint64_t v117 = v110[9];
        uint64_t v118 = (uint64_t *)(v54 + v110[8]);
        uint64_t v120 = *v118;
        uint64_t v119 = v118[1];
        uint64_t v212 = v120;
        uint64_t v206 = v119;
        id v121 = (uint64_t *)(v54 + v117);
        uint64_t v122 = v110[10];
        uint64_t v123 = v54 + v122;
        uint64_t v124 = v108 + v122;
        uint64_t v125 = v121[1];
        uint64_t v211 = *v121;
        uint64_t v126 = sub_1000B33D0();
        uint64_t v127 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 16);
        v127(v124, v123, v126);
        v127(v108 + v110[11], v54 + v110[11], v126);
        uint64_t v128 = *(void *)(v54 + v110[12]);
        uint64_t v129 = v54 + v110[14];
        id v209 = *(id *)v129;
        int v210 = *(unsigned __int8 *)(v129 + 8);
        id v130 = v209;
        swift_bridgeObjectRetain();
        uint64_t v131 = v207;
        swift_bridgeObjectRetain();
        uint64_t v132 = v206;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        id v133 = [v223 valueByCharacteristicUniqueIdentifier];
        uint64_t v134 = v225;
        uint64_t v135 = sub_1000B3F30();

        uint64_t v136 = (void *)(v108 + v110[7]);
        uint64_t v137 = v108 + v110[17];
        uint64_t v138 = sub_1000B32E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v137, 1, 1, v138);
        uint64_t v139 = v110[18];
        uint64_t v140 = v110[19];
        uint64_t v141 = v110[20];
        uint64_t v142 = v110[21];
        int64_t v143 = (os_log_t **)(v108 + v110[6]);
        unint64_t v144 = v208;
        char *v143 = v213;
        v143[1] = v144;
        *uint64_t v136 = v214;
        v136[1] = v131;
        uint64_t v145 = (void *)(v108 + v110[8]);
        *uint64_t v145 = v212;
        v145[1] = v132;
        uint64_t v146 = (void *)(v108 + v110[9]);
        *uint64_t v146 = v211;
        v146[1] = v125;
        *(void *)(v108 + v110[12]) = v128;
        uint64_t v147 = v108 + v140;
        *(unsigned char *)(v108 + v110[13]) = v216 & 1;
        uint64_t v148 = v108 + v110[14];
        *(void *)uint64_t v148 = v209;
        *(unsigned char *)(v148 + 8) = v210;
        *(void *)(v108 + v110[15]) = v135;
        uint64_t v64 = (uint64_t)v203;
        uint64_t v149 = (void *)(v108 + v141);
        *(unsigned char *)(v108 + v110[16]) = 0;
        *(unsigned char *)(v108 + v139) = 2;
        *(void *)uint64_t v147 = 0;
        *(unsigned char *)(v147 + 8) = 1;
        *uint64_t v149 = 0;
        v149[1] = 0;
        *(unsigned char *)(v108 + v142) = 2;
        uint64_t v150 = v224;
        unint64_t v151 = v215;
        ((void (*)(uint64_t, uint64_t, uint64_t))v215)(v224, v64, v134);
        uint64_t v152 = v205;
        ((void (*)(uint64_t, uint64_t, uint64_t))v151)(v150 + *(int *)(v205 + 20), v64 + *(int *)(v205 + 20), v134);
        uint64_t v153 = v152;
        sub_100059028(v108, v150 + *(int *)(v152 + 24), (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v154 = v199;
        uint64_t v155 = v204;
        (*v191)(v199, v202, v204);
        uint64_t v156 = (uint64_t)v194;
        sub_100059028(v108, (uint64_t)v194, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v157 = (uint64_t)v195;
        sub_100059028(v108, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v158 = (uint64_t)v196;
        sub_100059028(v108, (uint64_t)v196, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v159 = (uint64_t)v198;
        sub_100059028(v108, (uint64_t)v198, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v160 = sub_1000B3550();
        int v161 = sub_1000B42C0();
        if (os_log_type_enabled(v160, (os_log_type_t)v161))
        {
          uint64_t v162 = v158;
          LODWORD(v214) = v161;
          os_log_t v216 = v160;
          uint64_t v163 = swift_slowAlloc();
          uint64_t v164 = (void *)swift_slowAlloc();
          os_log_t v165 = (os_log_t)swift_slowAlloc();
          os_log_t v227 = v165;
          *(_DWORD *)uint64_t v163 = v186;
          uint64_t v166 = sub_10001E56C();
          uint64_t v226 = sub_10002A68C(v166, v167, (uint64_t *)&v227);
          sub_1000B4400();
          swift_bridgeObjectRelease();
          sub_100059090(v156, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          *(_WORD *)(v163 + 12) = 2112;
          sub_10001B494();
          uint64_t v169 = v168;
          unint64_t v215 = (os_log_t *)v165;
          if (v168) {
            uint64_t v226 = v168;
          }
          else {
            uint64_t v226 = 0;
          }
          sub_1000B4400();
          *uint64_t v164 = v169;
          sub_100059090(v157, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          *(_WORD *)(v163 + 22) = 2080;
          uint64_t v170 = sub_1000A3998();
          if (v171)
          {
            unint64_t v172 = v171;
          }
          else
          {
            uint64_t v170 = 7104878;
            unint64_t v172 = 0xE300000000000000;
          }
          uint64_t v226 = sub_10002A68C(v170, v172, (uint64_t *)&v227);
          sub_1000B4400();
          swift_bridgeObjectRelease();
          sub_100059090(v162, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          *(_WORD *)(v163 + 32) = 2080;
          uint64_t v173 = (uint64_t)v198;
          swift_bridgeObjectRetain();
          uint64_t v174 = sub_1000B3F40();
          unint64_t v176 = v175;
          swift_bridgeObjectRelease();
          uint64_t v226 = sub_10002A68C(v174, v176, (uint64_t *)&v227);
          sub_1000B4400();
          swift_bridgeObjectRelease();
          sub_100059090(v173, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          os_log_t v177 = v216;
          _os_log_impl((void *)&_mh_execute_header, v216, (os_log_type_t)v214, "Created entity with widgetInfo: %s - service: %@ statusString: %s and characteristic data: %s", (uint8_t *)v163, 0x2Au);
          sub_100004210(&qword_1000D51D8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v190)(v199, v204);
          uint64_t v100 = v205;
          uint64_t v64 = (uint64_t)v203;
        }
        else
        {
          sub_100059090(v156, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          sub_100059090(v157, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          sub_100059090(v158, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          sub_100059090(v159, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);

          (*v190)(v154, v155);
          uint64_t v100 = v153;
        }
        sub_100059028(v224, v221, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v98 = v217;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v54 = (uint64_t)v197;
        id v55 = v223;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v98 = sub_100075670(0, (int64_t)v98[2].isa + 1, 1, (unint64_t)v98);
        }
        unint64_t v180 = (unint64_t)v98[2].isa;
        unint64_t v179 = (unint64_t)v98[3].isa;
        if (v180 >= v179 >> 1) {
          uint64_t v98 = sub_100075670(v179 > 1, v180 + 1, 1, (unint64_t)v98);
        }
        v98[2].unint64_t isa = (Class)(v180 + 1);
        uint64_t v181 = v192;
        sub_10005BB70(v221, (uint64_t)v98 + v193 + v180 * v192, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_100059090(v224, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_100059090(v222, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        sub_100059090(v54, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        sub_100059090(v64, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v97 = v218 + v181;
        Class v96 = (Class)((char *)v219 - 1);
      }
      while (v219 != (Class)1);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v98 = _swiftEmptyArrayStorage;
    }
    os_log_t v227 = v98;
    sub_100004210(&qword_1000D6568);
    sub_1000B4190();
  }
  else
  {
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    sub_100017618(v204, (uint64_t)qword_1000DCC18);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v49 = sub_1000B3550();
    os_log_type_t v50 = sub_1000B42A0();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v52 = (void *)swift_slowAlloc();
      os_log_t v227 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 136315394;
      uint64_t v226 = sub_10002A68C(0xD000000000000052, 0x80000001000B9C80, (uint64_t *)&v227);
      sub_1000B4400();
      *(_WORD *)(v51 + 12) = 2112;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v226 = v53;
        sub_1000B4400();
      }
      else
      {
        uint64_t v226 = 0;
        sub_1000B4400();
        uint64_t v53 = 0;
      }
      *uint64_t v52 = v53;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s Failed to get current characteristic values with error: %@", (uint8_t *)v51, 0x16u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    os_log_t v227 = v183;
    swift_bridgeObjectRetain();
    sub_100004210(&qword_1000D6568);
    sub_1000B4190();
  }
}

uint64_t sub_100048B24(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = sub_10001DE5C();
  id v13 = a2;
  sub_100057580((uint64_t)v12, v13);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();

  if (v15 >> 62) {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v16)
  {
    uint64_t v9 = (char *)(v15 & 0xC000000000000001);
    swift_bridgeObjectRetain();
    a1 = 0;
    a3 = 4;
    while (1)
    {
      uint64_t v17 = v9 ? (char *)sub_1000B45E0() : (char *)*(id *)(v15 + 8 * a3);
      uint64_t v11 = v17;
      uint64_t v18 = a3 - 3;
      if (__OFADD__(a3 - 4, 1)) {
        break;
      }
      if (a1)
      {

        if (v18 == v16)
        {
          swift_bridgeObjectRelease_n();
          return 1;
        }
        a1 = 1;
        ++a3;
      }
      else
      {
        a1 = (uint64_t)[v17 BOOLValue];

        if (v18 == v16)
        {
          swift_bridgeObjectRelease_n();
          return a1;
        }
        ++a3;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1000B3570();
  sub_100017618(v19, (uint64_t)qword_1000DCC18);
  sub_100059028(a3, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v20 = sub_1000B3550();
  os_log_type_t v21 = sub_1000B42C0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v27 = sub_10002A68C(0xD000000000000052, 0x80000001000B9C80, v28);
    sub_1000B4400();
    *(_WORD *)(v22 + 12) = 2080;
    sub_100059028((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v23 = sub_1000B4040();
    uint64_t v27 = sub_10002A68C(v23, v24, v28);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    sub_100059090((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s Missing accessory reachability from homed for %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100059090((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  }

  return *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for WidgetTileInfo() + 52));
}

void sub_100048F18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a6;
  uint64_t v9 = sub_100004210(&qword_1000D6568);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = [a2 widgetManager];
  sub_100008148(0, &qword_1000D5028);
  Class isa = sub_1000B40F0().super.isa;
  NSString v13 = sub_1000B4000();
  NSString v14 = sub_1000B4000();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
  *(void *)(v17 + v16) = v24;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_10006B6F4;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001D300;
  aBlock[3] = &unk_1000CFB18;
  uint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  Class v20 = isa;
  id v19 = v23;
  [v23 monitorAndFetchStateForActionSets:isa widgetIdentifier:v13 kind:v14 completion:v18];
  _Block_release(v18);
}

void sub_1000491A0(void *a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5)
{
  unint64_t v210 = (unint64_t)a5;
  os_log_t v179 = a4;
  v178[1] = a3;
  uint64_t v7 = sub_1000B3570();
  uint64_t v8 = *(objc_class **)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v195 = (char *)v178 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for WidgetTileInfo();
  uint64_t v10 = __chkstk_darwin(v194);
  uint64_t v12 = (char *)v178 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v15 = (char *)v178 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)v178 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v189 = (uint64_t)v178 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v213 = (uint64_t)v178 - v22;
  __chkstk_darwin(v21);
  uint64_t v190 = (char *)v178 - v23;
  uint64_t v212 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v24 = *(void *)(v212 - 8);
  uint64_t v25 = __chkstk_darwin(v212);
  uint64_t v211 = (uint64_t)v178 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v218 = (uint64_t)v178 - v28;
  __chkstk_darwin(v27);
  unint64_t v215 = (char *)v178 - v29;
  uint64_t v219 = sub_1000B2F60();
  id v209 = *(NSObject ***)(v219 - 8);
  __chkstk_darwin(v219);
  uint64_t v31 = (char *)v178 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v32 = qword_1000D4EA8;
    id v33 = a1;
    if (v32 != -1) {
      swift_once();
    }
    uint64_t v193 = v7;
    uint64_t v34 = sub_100017618(v7, (uint64_t)qword_1000DCC18);
    id v35 = v33;
    uint64_t v191 = v34;
    uint64_t v36 = sub_1000B3550();
    os_log_type_t v37 = sub_1000B42C0();
    LODWORD(v217) = v37;
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v192 = v12;
    uint64_t v188 = v15;
    uint64_t v187 = v18;
    uint64_t v207 = v24;
    Class v208 = v8;
    if (v38)
    {
      uint64_t v39 = swift_slowAlloc();
      os_log_t v216 = (os_log_t)swift_slowAlloc();
      os_log_t v221 = v216;
      *(_DWORD *)uint64_t v39 = 136315394;
      uint64_t v220 = sub_10002A68C(0xD00000000000004DLL, 0x80000001000B9BF0, (uint64_t *)&v221);
      sub_1000B4400();
      *(_WORD *)(v39 + 12) = 2080;
      uint64_t v214 = v39 + 14;
      id v40 = [v35 isOnByActionSetUniqueIdentifier];
      sub_100008148(0, (unint64_t *)&qword_1000D51E0);
      sub_100058DF8((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
      sub_1000B3F30();

      uint64_t v41 = sub_1000B3F40();
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      uint64_t v220 = sub_10002A68C(v41, v43, (uint64_t *)&v221);
      sub_1000B4400();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v217, "%s Current action set stated: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v49 = v35;
    os_log_type_t v50 = sub_1000B3550();
    os_log_type_t v51 = sub_1000B42C0();
    BOOL v52 = os_log_type_enabled(v50, v51);
    uint64_t v53 = &HomeManagerActor;
    os_log_t v216 = v49;
    if (v52)
    {
      uint64_t v54 = swift_slowAlloc();
      os_log_t v221 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136315394;
      uint64_t v220 = sub_10002A68C(0xD00000000000004DLL, 0x80000001000B9BF0, (uint64_t *)&v221);
      id v217 = &v221;
      sub_1000B4400();
      *(_WORD *)(v54 + 12) = 2080;
      uint64_t v214 = v54 + 14;
      id v55 = [v49 didExecutionFailByActionSetUniqueIdentifier];
      sub_100008148(0, (unint64_t *)&qword_1000D51E0);
      sub_100058DF8((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
      sub_1000B3F30();

      uint64_t v53 = &HomeManagerActor;
      uint64_t v56 = sub_1000B3F40();
      unint64_t v58 = v57;
      swift_bridgeObjectRelease();
      uint64_t v59 = v56;
      uint64_t v49 = v216;
      uint64_t v220 = sub_10002A68C(v59, v58, (uint64_t *)&v221);
      sub_1000B4400();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "%s Failed action sets: %s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    if (v210 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_1000B46A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v60 = *(void *)((v210 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id v61 = [v49 isOnByActionSetUniqueIdentifier];
    uint64_t v62 = sub_100008148(0, (unint64_t *)&qword_1000D51E0);
    id v217 = (os_log_t *)sub_100058DF8((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v63 = sub_1000B3F30();

    uint64_t v64 = *(void *)(v63 + 16);
    swift_bridgeObjectRelease();
    uint64_t v214 = v62;
    if (v60 != v64)
    {
      unint64_t v65 = _swiftEmptyArrayStorage;
      if (v60)
      {
        os_log_t v221 = (os_log_t)_swiftEmptyArrayStorage;
        sub_10001E9D8(0, v60 & ~(v60 >> 63), 0);
        uint64_t v66 = v209;
        if (v60 < 0) {
          __break(1u);
        }
        uint64_t v67 = 0;
        unint64_t v65 = v221;
        unint64_t v68 = v210 & 0xC000000000000001;
        do
        {
          if (v68) {
            id v69 = (id)sub_1000B45E0();
          }
          else {
            id v69 = *(id *)(v210 + 8 * v67 + 32);
          }
          uint64_t v70 = v69;
          id v71 = [v69 uniqueIdentifier];
          sub_1000B2F50();

          os_log_t v221 = v65;
          unint64_t isa = (unint64_t)v65[2].isa;
          unint64_t v72 = (unint64_t)v65[3].isa;
          if (isa >= v72 >> 1)
          {
            sub_10001E9D8(v72 > 1, isa + 1, 1);
            unint64_t v65 = v221;
          }
          ++v67;
          v65[2].unint64_t isa = (Class)(isa + 1);
          ((void (*)(unint64_t, char *, uint64_t))v66[4])((unint64_t)v65+ ((*((unsigned __int8 *)v66 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v66 + 80))+ (void)v66[9] * isa, v31, v219);
          uint64_t v49 = v216;
        }
        while (v60 != v67);
      }
      uint64_t v74 = sub_100017D40((uint64_t)v65);
      swift_bridgeObjectRelease();
      id v75 = [v49 isOnByActionSetUniqueIdentifier];
      uint64_t v76 = sub_1000B3F30();

      uint64_t v77 = sub_10000EBCC(v76);
      if (*(void *)(v77 + 16) <= *(void *)(v74 + 16) >> 3)
      {
        os_log_t v221 = (os_log_t)v74;
        sub_100012F28(v77);
      }
      else
      {
        sub_100013A50(v77, v74);
      }
      swift_bridgeObjectRelease();
      unint64_t v78 = v49;
      swift_bridgeObjectRetain_n();
      uint64_t v79 = v78;
      swift_bridgeObjectRetain();
      id v80 = sub_1000B3550();
      os_log_type_t v81 = sub_1000B42A0();
      int v82 = v81;
      if (os_log_type_enabled(v80, v81))
      {
        uint64_t v83 = swift_slowAlloc();
        os_log_t v206 = (os_log_t)swift_slowAlloc();
        os_log_t v221 = v206;
        *(_DWORD *)uint64_t v83 = 134218498;
        swift_bridgeObjectRelease();
        uint64_t v220 = v60;
        sub_1000B4400();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 12) = 2048;
        id v84 = [v79 isOnByActionSetUniqueIdentifier];
        LODWORD(v210) = v82;
        os_log_t v205 = v80;
        uint64_t v85 = sub_1000B3F30();

        uint64_t v86 = *(void *)(v85 + 16);
        swift_bridgeObjectRelease();
        uint64_t v220 = v86;
        sub_1000B4400();

        *(_WORD *)(v83 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v87 = sub_1000B41F0();
        unint64_t v89 = v88;
        swift_bridgeObjectRelease();
        uint64_t v90 = v87;
        uint64_t v49 = v216;
        uint64_t v220 = sub_10002A68C(v90, v89, (uint64_t *)&v221);
        sub_1000B4400();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v91 = v205;
        _os_log_impl((void *)&_mh_execute_header, v205, (os_log_type_t)v210, "Error: Asked for %ld action sets but got %ld back instead, missing: %s", (uint8_t *)v83, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v53 = &HomeManagerActor;
    }
    Class v92 = v179[2].isa;
    if (v92)
    {
      unint64_t v186 = (*(unsigned __int8 *)(v207 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80);
      uint64_t v93 = (uint64_t)v179 + v186;
      uint64_t v185 = *(void *)(v207 + 72);
      v209 += 2;
      long long v184 = (void (**)(char *, uint64_t, uint64_t))((char *)v208 + 16);
      os_log_t v183 = (void (**)(char *, uint64_t))((char *)v208 + 8);
      uint64_t v182 = &v221;
      swift_bridgeObjectRetain();
      unint64_t v210 = (unint64_t)_swiftEmptyArrayStorage;
      *(void *)&long long v94 = 136315906;
      long long v181 = v94;
      unint64_t v180 = (char *)&type metadata for Any + 8;
      uint64_t v95 = (uint64_t)v190;
      uint64_t v96 = (uint64_t)v215;
      do
      {
        sub_100059028(v93, v96, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_100059028(v96 + *(int *)(v212 + 24), v95, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        id v97 = [v49 (SEL)v53[388].count];
        uint64_t v98 = sub_1000B3F30();

        uint64_t v99 = *(void *)(v98 + 16);
        uint64_t v207 = v93;
        Class v208 = v92;
        if (v99 && (unint64_t v100 = sub_100041560(v95), (v101 & 1) != 0))
        {
          Class v102 = (Class)*(id *)(*(void *)(v98 + 56) + 8 * v100);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          Class v102 = sub_1000B4370(0).super.super.isa;
        }
        LODWORD(v206) = sub_1000B4170();

        os_log_type_t v103 = *v209;
        os_log_t v205 = v103;
        uint64_t v104 = v213;
        uint64_t v105 = v219;
        ((void (*)(uint64_t, uint64_t, uint64_t))v103)(v213, v95, v219);
        unint64_t v106 = (int *)v194;
        ((void (*)(uint64_t, uint64_t, uint64_t))v103)(v104 + *(int *)(v194 + 20), v95 + *(int *)(v194 + 20), v105);
        uint64_t v107 = v106[7];
        uint64_t v108 = (uint64_t *)(v95 + v106[6]);
        uint64_t v109 = v108[1];
        uint64_t v203 = *v108;
        uint64_t v198 = v109;
        uint64_t v110 = *(void *)(v95 + v107 + 8);
        uint64_t v204 = *(void *)(v95 + v107);
        uint64_t v197 = v110;
        uint64_t v111 = v106[9];
        uint64_t v112 = (uint64_t *)(v95 + v106[8]);
        uint64_t v113 = v112[1];
        uint64_t v202 = *v112;
        uint64_t v114 = (uint64_t *)(v95 + v111);
        uint64_t v115 = v106[10];
        uint64_t v116 = v95 + v115;
        uint64_t v117 = v104 + v115;
        uint64_t v119 = *v114;
        uint64_t v118 = v114[1];
        uint64_t v201 = v119;
        uint64_t v196 = v118;
        uint64_t v120 = v95;
        uint64_t v121 = sub_1000B33D0();
        uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 16);
        v122(v117, v116, v121);
        v122(v104 + v106[11], v120 + v106[11], v121);
        uint64_t v123 = *(void *)(v120 + v106[12]);
        uint64_t v124 = v120 + v106[14];
        id v199 = *(id *)v124;
        int v200 = *(unsigned __int8 *)(v124 + 8);
        id v125 = v199;
        swift_bridgeObjectRetain();
        uint64_t v126 = v197;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v127 = v196;
        swift_bridgeObjectRetain();
        uint64_t v128 = v123;
        swift_retain();
        id v129 = [v216 isOnByActionSetUniqueIdentifier];
        uint64_t v130 = v219;
        uint64_t v131 = sub_1000B3F30();

        uint64_t v132 = sub_10001CC28(v131);
        swift_bridgeObjectRelease();
        id v133 = (void *)(v104 + v106[7]);
        uint64_t v134 = v104 + v106[17];
        uint64_t v135 = sub_1000B32E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v134, 1, 1, v135);
        uint64_t v136 = v106[18];
        uint64_t v137 = v104 + v106[19];
        uint64_t v138 = v106[21];
        uint64_t v139 = (void *)(v104 + v106[20]);
        uint64_t v140 = (void *)(v104 + v106[6]);
        uint64_t v141 = v198;
        *uint64_t v140 = v203;
        v140[1] = v141;
        *id v133 = v204;
        v133[1] = v126;
        uint64_t v142 = (void *)(v104 + v106[8]);
        *uint64_t v142 = v202;
        v142[1] = v113;
        int64_t v143 = (void *)(v104 + v106[9]);
        void *v143 = v201;
        v143[1] = v127;
        *(void *)(v104 + v106[12]) = v128;
        *(unsigned char *)(v104 + v106[13]) = 1;
        uint64_t v144 = v104 + v106[14];
        *(void *)uint64_t v144 = v199;
        *(unsigned char *)(v144 + 8) = v200;
        *(void *)(v104 + v106[15]) = v132;
        *(unsigned char *)(v104 + v106[16]) = v206 & 1;
        *(unsigned char *)(v104 + v136) = 2;
        *(void *)uint64_t v137 = 0;
        *(unsigned char *)(v137 + 8) = 1;
        *uint64_t v139 = 0;
        v139[1] = 0;
        *(unsigned char *)(v104 + v138) = 2;
        uint64_t v145 = v218;
        uint64_t v146 = v215;
        os_log_t v147 = v205;
        ((void (*)(uint64_t, char *, uint64_t))v205)(v218, v215, v130);
        uint64_t v148 = v212;
        ((void (*)(uint64_t, char *, uint64_t))v147)(v145 + *(int *)(v212 + 20), &v146[*(int *)(v212 + 20)], v130);
        sub_100059028(v104, v145 + *(int *)(v148 + 24), (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v149 = v195;
        uint64_t v150 = v193;
        (*v184)(v195, v191, v193);
        uint64_t v151 = v189;
        sub_100059028(v104, v189, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v152 = (uint64_t)v187;
        sub_100059028(v104, (uint64_t)v187, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v153 = (uint64_t)v188;
        sub_100059028(v104, (uint64_t)v188, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v154 = (uint64_t)v192;
        sub_100059028(v104, (uint64_t)v192, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        uint64_t v155 = sub_1000B3550();
        int v156 = sub_1000B42C0();
        if (os_log_type_enabled(v155, (os_log_type_t)v156))
        {
          LODWORD(v204) = v156;
          uint64_t v157 = swift_slowAlloc();
          uint64_t v158 = (void *)swift_slowAlloc();
          os_log_t v205 = (os_log_t)swift_slowAlloc();
          os_log_t v221 = v205;
          *(_DWORD *)uint64_t v157 = v181;
          uint64_t v159 = sub_10001E56C();
          uint64_t v220 = sub_10002A68C(v159, v160, (uint64_t *)&v221);
          sub_1000B4400();
          swift_bridgeObjectRelease();
          sub_100059090(v151, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          *(_WORD *)(v157 + 12) = 2112;
          sub_10001B494();
          uint64_t v162 = v161;
          os_log_t v206 = v155;
          if (v161) {
            uint64_t v220 = v161;
          }
          else {
            uint64_t v220 = 0;
          }
          sub_1000B4400();
          void *v158 = v162;
          sub_100059090(v152, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          *(_WORD *)(v157 + 22) = 2080;
          uint64_t v163 = sub_1000A3998();
          if (v164)
          {
            unint64_t v165 = v164;
          }
          else
          {
            uint64_t v163 = 7104878;
            unint64_t v165 = 0xE300000000000000;
          }
          uint64_t v220 = sub_10002A68C(v163, v165, (uint64_t *)&v221);
          sub_1000B4400();
          swift_bridgeObjectRelease();
          sub_100059090(v153, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          *(_WORD *)(v157 + 32) = 2080;
          uint64_t v166 = (uint64_t)v192;
          swift_bridgeObjectRetain();
          uint64_t v167 = sub_1000B3F40();
          unint64_t v169 = v168;
          swift_bridgeObjectRelease();
          uint64_t v220 = sub_10002A68C(v167, v169, (uint64_t *)&v221);
          sub_1000B4400();
          swift_bridgeObjectRelease();
          sub_100059090(v166, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          os_log_t v170 = v206;
          _os_log_impl((void *)&_mh_execute_header, v206, (os_log_type_t)v204, "Created entity with widgetInfo: %s - service: %@ statusString: %s and characteristic data: %s", (uint8_t *)v157, 0x2Au);
          sub_100004210(&qword_1000D51D8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v183)(v195, v193);
        }
        else
        {
          sub_100059090(v151, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          sub_100059090(v152, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          sub_100059090(v153, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
          sub_100059090(v154, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);

          (*v183)(v149, v150);
        }
        uint64_t v49 = v216;
        sub_100059028(v218, v211, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        unint64_t v171 = v210;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v95 = (uint64_t)v190;
        uint64_t v96 = (uint64_t)v215;
        uint64_t v53 = &HomeManagerActor;
        uint64_t v173 = v207;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v171 = sub_100075670(0, *(void *)(v171 + 16) + 1, 1, v171);
        }
        unint64_t v175 = *(void *)(v171 + 16);
        unint64_t v174 = *(void *)(v171 + 24);
        if (v175 >= v174 >> 1) {
          unint64_t v171 = sub_100075670(v174 > 1, v175 + 1, 1, v171);
        }
        *(void *)(v171 + 16) = v175 + 1;
        unint64_t v210 = v171;
        uint64_t v176 = v185;
        sub_10005BB70(v211, v171 + v186 + v175 * v185, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_100059090(v218, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_100059090(v213, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        sub_100059090(v95, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        sub_100059090(v96, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v93 = v173 + v176;
        Class v92 = (Class)((char *)v208 - 1);
      }
      while (v208 != (Class)1);
      swift_bridgeObjectRelease();
      os_log_t v177 = (os_log_t)v210;
    }
    else
    {
      os_log_t v177 = (os_log_t)_swiftEmptyArrayStorage;
    }
    os_log_t v221 = v177;
    sub_100004210(&qword_1000D6568);
    sub_1000B4190();
  }
  else
  {
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    sub_100017618(v7, (uint64_t)qword_1000DCC18);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v44 = sub_1000B3550();
    os_log_type_t v45 = sub_1000B42A0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      unint64_t v47 = (void *)swift_slowAlloc();
      os_log_t v221 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315394;
      uint64_t v220 = sub_10002A68C(0xD00000000000004DLL, 0x80000001000B9BF0, (uint64_t *)&v221);
      sub_1000B4400();
      *(_WORD *)(v46 + 12) = 2112;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v220 = v48;
        sub_1000B4400();
      }
      else
      {
        uint64_t v220 = 0;
        sub_1000B4400();
        uint64_t v48 = 0;
      }
      *unint64_t v47 = v48;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s Failed to get current action set states with error: %@", (uint8_t *)v46, 0x16u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    os_log_t v221 = v179;
    swift_bridgeObjectRetain();
    sub_100004210(&qword_1000D6568);
    sub_1000B4190();
  }
}

uint64_t sub_10004AAAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B2F10();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_10004AB18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HomeInteractiveWidgetsEntryView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  sub_100059028(v1, (uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HomeInteractiveWidgetsEntryView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  sub_10005BB70((uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for HomeInteractiveWidgetsEntryView);
  uint64_t v8 = *(void *)v1;
  char v9 = *(unsigned char *)(v1 + 8);
  sub_100044118(*(void *)v1, v9);
  LOBYTE(v6) = sub_10007E9FC(v8, v9);
  sub_1000441FC(v8, v9);
  double v10 = 0.0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if ((v6 & 1) == 0)
  {
    long long v14 = *(_OWORD *)(v1 + 32);
    v19[0] = *(_OWORD *)(v1 + 16);
    v19[1] = v14;
    char v20 = *(unsigned char *)(v1 + 48);
    sub_10006B62C((uint64_t)v19, (uint64_t)v21, &qword_1000D5D38);
    sub_100058B28((uint64_t)v21, (void (*)(void, void, void, void, void))sub_100044124);
    double v10 = sub_10007EC00();
    uint64_t v11 = v15;
    uint64_t v12 = v16;
    uint64_t v13 = v17;
    sub_100058B28((uint64_t)v19, (void (*)(void, void, void, void, void))sub_100044208);
  }
  uint64_t result = sub_1000B39D0();
  *(void *)a1 = sub_100058AA8;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = result;
  *(double *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v13;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_10004AD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v151 = a1;
  uint64_t v172 = a3;
  uint64_t v146 = type metadata accessor for WidgetViewsForMediumSystemFamily(0);
  __chkstk_darwin(v146);
  int64_t v143 = (uint64_t *)((char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = sub_100004210(&qword_1000D5D40);
  __chkstk_darwin(v144);
  uint64_t v145 = (uint64_t *)((char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v155 = sub_100004210(&qword_1000D5D48);
  __chkstk_darwin(v155);
  os_log_t v147 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_100004210(&qword_1000D5D50);
  __chkstk_darwin(v153);
  uint64_t v154 = (uint64_t)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004210(&qword_1000D5D58);
  __chkstk_darwin(v8 - 8);
  uint64_t v150 = (uint64_t *)((char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100004210(&qword_1000D5C88);
  __chkstk_darwin(v10 - 8);
  uint64_t v149 = (uint64_t *)((char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v152 = type metadata accessor for WidgetViewForLargeSquareTiles(0);
  __chkstk_darwin(v152);
  uint64_t v13 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B3E50();
  uint64_t v148 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v134 - v18;
  char v20 = (int *)type metadata accessor for HomeInteractiveWidgetsEntryView(0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v134 - v24;
  uint64_t v161 = sub_100004210(&qword_1000D5D60);
  uint64_t v26 = __chkstk_darwin(v161);
  int v156 = (char *)&v134 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v158 = (uint64_t)&v134 - v28;
  uint64_t v159 = sub_100004210(&qword_1000D5D68);
  __chkstk_darwin(v159);
  unint64_t v160 = (_OWORD *)((char *)&v134 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v164 = sub_100004210(&qword_1000D5D70);
  uint64_t v30 = __chkstk_darwin(v164);
  uint64_t v157 = (char *)&v134 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v162 = (uint64_t)&v134 - v32;
  uint64_t v165 = sub_100004210(&qword_1000D5D78);
  __chkstk_darwin(v165);
  uint64_t v166 = (uint64_t *)((char *)&v134 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v170 = sub_100004210(&qword_1000D5D80);
  __chkstk_darwin(v170);
  uint64_t v163 = (char *)&v134 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_100004210(&qword_1000D5D88);
  __chkstk_darwin(v169);
  uint64_t v167 = (_OWORD *)((char *)&v134 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v171 = sub_100004210(&qword_1000D5D90);
  __chkstk_darwin(v171);
  unint64_t v168 = (char *)&v134 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000B2FA0();
  __chkstk_darwin(v37 - 8);
  uint64_t v38 = sub_1000B3FF0();
  __chkstk_darwin(v38 - 8);
  uint64_t v39 = sub_100004210(&qword_1000D5D98);
  uint64_t v40 = __chkstk_darwin(v39);
  unint64_t v42 = (char *)&v134 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(a2 + v20[9]))
  {
    case 1:
    case 2:
      unint64_t v43 = (char *)&v134 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1000B3FA0();
      sub_1000B2F90();
      *(void *)&long long v173 = sub_1000B4030();
      *((void *)&v173 + 1) = v44;
      long long v174 = xmmword_1000B6980;
      long long v175 = xmmword_1000B6990;
      LOBYTE(v176) = 0;
      goto LABEL_11;
    case 3:
      unint64_t v43 = (char *)&v134 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1000B3FA0();
      sub_1000B2F90();
      *(void *)&long long v173 = sub_1000B4030();
      *((void *)&v173 + 1) = v66;
      long long v174 = xmmword_1000B6980;
      long long v175 = xmmword_1000B6990;
      LOBYTE(v176) = 0;
      sub_100058BA8();
      sub_1000B3920();
      long long v173 = v177;
      long long v174 = v178;
      long long v175 = v179;
      LOBYTE(v176) = v180;
      HIBYTE(v176) = 1;
      goto LABEL_12;
    case 4:
      unint64_t v43 = (char *)&v134 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1000B3FA0();
      sub_1000B2F90();
      *(void *)&long long v173 = sub_1000B4030();
      *((void *)&v173 + 1) = v67;
      long long v174 = xmmword_1000B6980;
      long long v175 = xmmword_1000B6990;
      LOBYTE(v176) = 1;
      sub_100058BA8();
      sub_1000B3920();
      long long v173 = v177;
      long long v174 = v178;
      long long v175 = v179;
      LOBYTE(v176) = v180;
      HIBYTE(v176) = 1;
      goto LABEL_12;
    case 5:
      unint64_t v43 = (char *)&v134 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1000B3FA0();
      sub_1000B2F90();
      *(void *)&long long v173 = sub_1000B4030();
      *((void *)&v173 + 1) = v68;
      long long v174 = xmmword_1000B6980;
      long long v175 = xmmword_1000B6990;
      LOBYTE(v176) = 1;
LABEL_11:
      sub_100058BA8();
      sub_1000B3920();
      long long v173 = v177;
      long long v174 = v178;
      long long v175 = v179;
      __int16 v176 = v180;
LABEL_12:
      sub_100004210(&qword_1000D5DA8);
      sub_100058BFC();
      sub_1000B3920();
      char v69 = v180;
      char v70 = v181;
      long long v71 = v178;
      long long v72 = v179;
      *(_OWORD *)unint64_t v43 = v177;
      *((_OWORD *)v43 + 1) = v71;
      *((_OWORD *)v43 + 2) = v72;
      v43[48] = v69;
      v43[49] = v70;
      swift_storeEnumTagMultiPayload();
      sub_100004210(&qword_1000D5E10);
      sub_100058FB0(&qword_1000D5E18, &qword_1000D5E10, (void (*)(void))sub_100058BFC);
      sub_100058F28(&qword_1000D5E20, &qword_1000D5D90, (void (*)(void))sub_100058BFC, (void (*)(void))sub_100058EEC);
      return sub_1000B3920();
    case 6:
      uint64_t v74 = (char *)&v134 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1000B3FA0();
      sub_1000B2F90();
      *(void *)&long long v173 = sub_1000B4030();
      *((void *)&v173 + 1) = v75;
      long long v174 = xmmword_1000B6980;
      long long v175 = xmmword_1000B6990;
      LOBYTE(v176) = 0;
      sub_100058BA8();
      sub_1000B3920();
      unsigned __int8 v76 = v180;
      long long v77 = v178;
      long long v78 = v179;
      uint64_t v79 = v167;
      _OWORD *v167 = v177;
      v79[1] = v77;
      v79[2] = v78;
      *((unsigned char *)v79 + 48) = v76;
      swift_storeEnumTagMultiPayload();
      sub_100004210(&qword_1000D5DA8);
      sub_100058BFC();
      sub_100058EEC();
      uint64_t v80 = (uint64_t)v168;
      sub_1000B3920();
      os_log_type_t v81 = &qword_1000D5D90;
      sub_1000206A0(v80, (uint64_t)v74, &qword_1000D5D90);
      swift_storeEnumTagMultiPayload();
      sub_100004210(&qword_1000D5E10);
      sub_100058FB0(&qword_1000D5E18, &qword_1000D5E10, (void (*)(void))sub_100058BFC);
      sub_100058F28(&qword_1000D5E20, &qword_1000D5D90, (void (*)(void))sub_100058BFC, (void (*)(void))sub_100058EEC);
      sub_1000B3920();
      uint64_t v82 = v80;
      return sub_100017B5C(v82, v81);
    case 7:
      uint64_t v83 = (char *)&v134 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1000B3FA0();
      sub_1000B2F90();
      uint64_t v84 = sub_1000B4030();
      uint64_t v86 = v85;
      sub_1000B3FA0();
      sub_1000B2F90();
      uint64_t v87 = sub_1000B4030();
      *(void *)&long long v173 = v84;
      *((void *)&v173 + 1) = v86;
      *(void *)&long long v174 = v87;
      *((void *)&v174 + 1) = v88;
      long long v175 = xmmword_1000B69A0;
      LOBYTE(v176) = 1;
      sub_100058BA8();
      sub_1000B3920();
      unsigned __int8 v89 = v180;
      long long v90 = v178;
      long long v91 = v179;
      Class v92 = v167;
      _OWORD *v167 = v177;
      v92[1] = v90;
      v92[2] = v91;
      *((unsigned char *)v92 + 48) = v89;
      swift_storeEnumTagMultiPayload();
      sub_100004210(&qword_1000D5DA8);
      sub_100058BFC();
      sub_100058EEC();
      uint64_t v93 = (uint64_t)v168;
      sub_1000B3920();
      goto LABEL_16;
    case 8:
      uint64_t v83 = (char *)&v134 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1000B3FA0();
      sub_1000B2F90();
      uint64_t v94 = sub_1000B4030();
      uint64_t v96 = v95;
      sub_1000B3FA0();
      sub_1000B2F90();
      uint64_t v97 = sub_1000B4030();
      uint64_t v98 = v166;
      *uint64_t v166 = v94;
      v98[1] = v96;
      v98[2] = v97;
      v98[3] = v99;
      v98[4] = 0xD000000000000012;
      v98[5] = 0x80000001000B97A0;
      swift_storeEnumTagMultiPayload();
      sub_100058BA8();
      sub_100058E40();
      uint64_t v100 = (uint64_t)v163;
      sub_1000B3920();
      sub_1000206A0(v100, (uint64_t)v167, &qword_1000D5D80);
      swift_storeEnumTagMultiPayload();
      sub_100004210(&qword_1000D5DA8);
      sub_100058BFC();
      sub_100058EEC();
      uint64_t v93 = (uint64_t)v168;
      sub_1000B3920();
      sub_100017B5C(v100, &qword_1000D5D80);
LABEL_16:
      os_log_type_t v81 = &qword_1000D5D90;
      sub_1000206A0(v93, (uint64_t)v83, &qword_1000D5D90);
      swift_storeEnumTagMultiPayload();
      sub_100004210(&qword_1000D5E10);
      sub_100058FB0(&qword_1000D5E18, &qword_1000D5E10, (void (*)(void))sub_100058BFC);
      sub_100058F28(&qword_1000D5E20, &qword_1000D5D90, (void (*)(void))sub_100058BFC, (void (*)(void))sub_100058EEC);
      sub_1000B3920();
      uint64_t v82 = v93;
      return sub_100017B5C(v82, v81);
    default:
      uint64_t v140 = v13;
      uint64_t v45 = *(void *)(a2 + v20[7]);
      uint64_t v142 = v42;
      uint64_t v141 = v40;
      if (v45)
      {
        unint64_t v46 = *(void *)(v45 + 16);
        if (v46)
        {
          uint64_t v139 = v45;
          sub_100059028(a2, (uint64_t)v25, type metadata accessor for HomeInteractiveWidgetsEntryView);
          if (v46 == 1)
          {
            uint64_t v47 = v139;
            swift_bridgeObjectRetain();
            sub_100059090((uint64_t)v25, type metadata accessor for HomeInteractiveWidgetsEntryView);
LABEL_7:
            sub_1000B3670();
            uint64_t v49 = v48;
            uint64_t v51 = v50;
            uint64_t KeyPath = swift_getKeyPath();
            uint64_t v53 = swift_getKeyPath();
            uint64_t v54 = (uint64_t)v149;
            *uint64_t v149 = v53;
            sub_100004210(&qword_1000D5C80);
            swift_storeEnumTagMultiPayload();
            uint64_t v55 = swift_getKeyPath();
            uint64_t v56 = (uint64_t)v150;
            *uint64_t v150 = v55;
            sub_100004210(&qword_1000D4F90);
            swift_storeEnumTagMultiPayload();
            uint64_t v57 = swift_getKeyPath();
            unint64_t v58 = (int *)v152;
            uint64_t v59 = (uint64_t)v140;
            *(void *)&v140[*(int *)(v152 + 28)] = v57;
            sub_100004210(&qword_1000D4F88);
            swift_storeEnumTagMultiPayload();
            *(void *)uint64_t v59 = KeyPath;
            *(unsigned char *)(v59 + 8) = 0;
            sub_10006B62C(v54, v59 + v58[5], &qword_1000D5C88);
            sub_10006B62C(v56, v59 + v58[6], &qword_1000D5D58);
            uint64_t v60 = (void *)(v59 + v58[8]);
            *uint64_t v60 = v49;
            v60[1] = v51;
            *(void *)(v59 + v58[9]) = v47;
            sub_100059028(v59, v154, type metadata accessor for WidgetViewForLargeSquareTiles);
            swift_storeEnumTagMultiPayload();
            sub_100058DF8(&qword_1000D5DD0, (void (*)(uint64_t))type metadata accessor for WidgetViewForLargeSquareTiles);
            sub_100058CF8();
            id v61 = v156;
            sub_1000B3920();
            sub_100059090(v59, type metadata accessor for WidgetViewForLargeSquareTiles);
            uint64_t v62 = (uint64_t)v168;
            uint64_t v63 = v167;
            uint64_t v64 = (uint64_t)v163;
            uint64_t v65 = (uint64_t)v160;
LABEL_34:
            uint64_t v128 = sub_100004210(&qword_1000D5DC8);
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v61, 0, 1, v128);
            uint64_t v129 = (uint64_t)v61;
            uint64_t v130 = v158;
            sub_10006B62C(v129, v158, &qword_1000D5D60);
            sub_1000206A0(v130, v65, &qword_1000D5D60);
            swift_storeEnumTagMultiPayload();
            sub_100004210(&qword_1000D5DA8);
            sub_100058BFC();
            sub_100058C24();
            uint64_t v131 = v157;
            sub_1000B3920();
            sub_100017B5C(v130, &qword_1000D5D60);
            uint64_t v132 = sub_100004210(&qword_1000D5DF0);
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 0, 1, v132);
            uint64_t v133 = (uint64_t)v131;
            uint64_t v107 = v162;
            sub_10006B62C(v133, v162, &qword_1000D5D70);
            goto LABEL_35;
          }
          uint64_t v138 = a2;
          sub_100059028((uint64_t)v25, (uint64_t)v23, type metadata accessor for HomeInteractiveWidgetsEntryView);
          unint64_t v137 = v46;
          if (v46 == 2)
          {
            uint64_t v109 = v139;
            swift_bridgeObjectRetain();
            sub_10007EE20((uint64_t)v19);
            uint64_t v110 = v148;
            (*(void (**)(char *, void, uint64_t))(v148 + 104))(v17, enum case for WidgetFamily.systemMedium(_:), v14);
            sub_100058DF8(&qword_1000D5E28, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
            sub_1000B40C0();
            sub_1000B40C0();
            uint64_t v136 = v177;
            uint64_t v135 = v173;
            uint64_t v111 = *(void (**)(char *, uint64_t))(v110 + 8);
            v111(v17, v14);
            v111(v19, v14);
            uint64_t v112 = v110;
            uint64_t v47 = v109;
            sub_100059090((uint64_t)v23, type metadata accessor for HomeInteractiveWidgetsEntryView);
            sub_100059090((uint64_t)v25, type metadata accessor for HomeInteractiveWidgetsEntryView);
            if (v136 == v135) {
              goto LABEL_7;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_100059090((uint64_t)v23, type metadata accessor for HomeInteractiveWidgetsEntryView);
            sub_100059090((uint64_t)v25, type metadata accessor for HomeInteractiveWidgetsEntryView);
            uint64_t v112 = v148;
          }
          sub_10007EE20((uint64_t)v19);
          (*(void (**)(char *, void, uint64_t))(v112 + 104))(v17, enum case for WidgetFamily.systemSmall(_:), v14);
          sub_100058DF8(&qword_1000D5E28, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
          sub_1000B40C0();
          sub_1000B40C0();
          uint64_t v113 = v177;
          uint64_t v114 = v173;
          uint64_t v115 = *(void (**)(char *, uint64_t))(v112 + 8);
          v115(v17, v14);
          v115(v19, v14);
          sub_1000B3670();
          double v118 = v116;
          double v119 = v117;
          uint64_t v64 = (uint64_t)v163;
          uint64_t v120 = v160;
          if (v113 == v114)
          {
            uint64_t v121 = swift_getKeyPath();
            uint64_t v63 = v167;
            uint64_t v122 = (uint64_t)v147;
            if (v137 >= 3)
            {
              swift_bridgeObjectRelease();
              char v123 = 1;
              uint64_t v124 = 2;
            }
            else
            {
              char v126 = sub_1000B4830();
              swift_bridgeObjectRelease();
              char v123 = 0;
              uint64_t v124 = 1;
              if (v126) {
                uint64_t v124 = 2;
              }
            }
            uint64_t v62 = (uint64_t)v168;
            id v61 = v156;
            uint64_t v127 = v145;
            *uint64_t v145 = v121;
            *((unsigned char *)v127 + 8) = 0;
            v127[2] = v139;
            v127[3] = v124;
            *((unsigned char *)v127 + 32) = v123;
            *((double *)v127 + 5) = v118;
            *((double *)v127 + 6) = v119;
            swift_storeEnumTagMultiPayload();
            sub_100058DA4();
            sub_100058DF8(&qword_1000D5DE8, (void (*)(uint64_t))type metadata accessor for WidgetViewsForMediumSystemFamily);
            sub_1000B3920();
          }
          else
          {
            id v125 = v143;
            sub_10004CC10(v139, v143, v116, v117);
            sub_100059028((uint64_t)v125, (uint64_t)v145, type metadata accessor for WidgetViewsForMediumSystemFamily);
            swift_storeEnumTagMultiPayload();
            sub_100058DA4();
            sub_100058DF8(&qword_1000D5DE8, (void (*)(uint64_t))type metadata accessor for WidgetViewsForMediumSystemFamily);
            uint64_t v122 = (uint64_t)v147;
            sub_1000B3920();
            sub_100059090((uint64_t)v125, type metadata accessor for WidgetViewsForMediumSystemFamily);
            uint64_t v62 = (uint64_t)v168;
            uint64_t v63 = v167;
            id v61 = v156;
          }
          sub_1000206A0(v122, v154, &qword_1000D5D48);
          swift_storeEnumTagMultiPayload();
          sub_100058DF8(&qword_1000D5DD0, (void (*)(uint64_t))type metadata accessor for WidgetViewForLargeSquareTiles);
          sub_100058CF8();
          sub_1000B3920();
          sub_100017B5C(v122, &qword_1000D5D48);
          uint64_t v65 = (uint64_t)v120;
          goto LABEL_34;
        }
      }
      if (*(unsigned char *)(a2 + v20[8]))
      {
        sub_1000B3FA0();
        sub_1000B2F90();
        *(void *)&long long v173 = sub_1000B4030();
        *((void *)&v173 + 1) = v101;
        long long v174 = xmmword_1000B6980;
        long long v175 = xmmword_1000B6990;
        LOBYTE(v176) = 1;
      }
      else
      {
        sub_1000B3FA0();
        sub_1000B2F90();
        *(void *)&long long v173 = sub_1000B4030();
        *((void *)&v173 + 1) = v102;
        long long v174 = xmmword_1000B6980;
        long long v175 = xmmword_1000B6990;
        LOBYTE(v176) = 0;
      }
      sub_100058BA8();
      sub_1000B3920();
      long long v103 = v178;
      long long v104 = v179;
      unsigned __int8 v105 = v180;
      uint64_t v62 = (uint64_t)v168;
      uint64_t v63 = v167;
      uint64_t v64 = (uint64_t)v163;
      unint64_t v106 = v160;
      *unint64_t v160 = v177;
      v106[1] = v103;
      v106[2] = v104;
      *((unsigned char *)v106 + 48) = v105;
      swift_storeEnumTagMultiPayload();
      sub_100004210(&qword_1000D5DA8);
      sub_100058BFC();
      sub_100058C24();
      uint64_t v107 = v162;
      sub_1000B3920();
      uint64_t v108 = sub_100004210(&qword_1000D5DF0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v107, 0, 1, v108);
LABEL_35:
      os_log_type_t v81 = &qword_1000D5D70;
      sub_1000206A0(v107, (uint64_t)v166, &qword_1000D5D70);
      swift_storeEnumTagMultiPayload();
      sub_100058BA8();
      sub_100058E40();
      sub_1000B3920();
      sub_1000206A0(v64, (uint64_t)v63, &qword_1000D5D80);
      swift_storeEnumTagMultiPayload();
      sub_100004210(&qword_1000D5DA8);
      sub_100058BFC();
      sub_100058EEC();
      sub_1000B3920();
      sub_100017B5C(v64, &qword_1000D5D80);
      sub_1000206A0(v62, (uint64_t)v142, &qword_1000D5D90);
      swift_storeEnumTagMultiPayload();
      sub_100004210(&qword_1000D5E10);
      sub_100058FB0(&qword_1000D5E18, &qword_1000D5E10, (void (*)(void))sub_100058BFC);
      sub_100058F28(&qword_1000D5E20, &qword_1000D5D90, (void (*)(void))sub_100058BFC, (void (*)(void))sub_100058EEC);
      sub_1000B3920();
      sub_100017B5C(v62, &qword_1000D5D90);
      uint64_t v82 = v107;
      return sub_100017B5C(v82, v81);
  }
}

double sub_10004CC10@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *a2 = swift_getKeyPath();
  sub_100004210(&qword_1000D5C80);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (int *)type metadata accessor for WidgetViewsForMediumSystemFamily(0);
  uint64_t v9 = (char *)a2 + v8[5];
  *(void *)uint64_t v9 = swift_getKeyPath();
  v9[8] = 0;
  uint64_t v10 = v8[8];
  *(uint64_t *)((char *)a2 + v8[6]) = a1;
  if (*(void *)(a1 + 16) < 5uLL)
  {
    *((unsigned char *)a2 + v10) = 0;
    char v12 = sub_1000B4830();
    swift_bridgeObjectRelease();
    uint64_t v11 = 2;
    if (v12) {
      uint64_t v11 = 4;
    }
  }
  else
  {
    *((unsigned char *)a2 + v10) = 1;
    swift_bridgeObjectRelease();
    uint64_t v11 = 4;
  }
  *(uint64_t *)((char *)a2 + v8[7]) = v11;
  uint64_t v13 = (double *)((char *)a2 + v8[9]);
  *uint64_t v13 = a3;
  v13[1] = a4;
  *(double *)((char *)a2 + v8[10]) = (a3 + -40.0) * 0.25;
  double result = (a4 + -24.0) * 0.5;
  *(double *)((char *)a2 + v8[11]) = result;
  *(uint64_t *)((char *)a2 + v8[12]) = 0x4020000000000000;
  return result;
}

uint64_t sub_10004CD94()
{
  return sub_1000B3BB0();
}

uint64_t sub_10004CDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100004210(&qword_1000D5FC8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - v8;
  *(void *)uint64_t v9 = sub_1000B3880();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v10 = sub_100004210(&qword_1000D5FD0);
  sub_10004CEE8(a1, &v9[*(int *)(v10 + 44)]);
  sub_1000206A0((uint64_t)v9, (uint64_t)v7, &qword_1000D5FC8);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v11 = sub_100004210(&qword_1000D5FD8);
  sub_1000206A0((uint64_t)v7, a2 + *(int *)(v11 + 48), &qword_1000D5FC8);
  uint64_t v12 = a2 + *(int *)(v11 + 64);
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  sub_100017B5C((uint64_t)v9, &qword_1000D5FC8);
  return sub_100017B5C((uint64_t)v7, &qword_1000D5FC8);
}

uint64_t sub_10004CEE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v144 = a2;
  uint64_t v3 = sub_100004210(&qword_1000D5FE0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v145 = (uint64_t)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v133 = (uint64_t)&v117 - v6;
  uint64_t v159 = sub_100004210(&qword_1000D5FE8);
  uint64_t v7 = __chkstk_darwin(v159);
  uint64_t v151 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v117 - v9;
  uint64_t v11 = sub_1000B3680();
  uint64_t v160 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  int v156 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v155 = (char *)&v117 - v14;
  uint64_t v149 = sub_100004210(&qword_1000D5FF0);
  uint64_t v15 = __chkstk_darwin(v149);
  os_log_t v147 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v148 = (uint64_t)&v117 - v17;
  uint64_t v152 = sub_100004210(&qword_1000D5FF8);
  uint64_t v158 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v150 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_100004210(&qword_1000D6000);
  uint64_t v140 = *(void *)(v141 - 8);
  uint64_t v19 = __chkstk_darwin(v141);
  uint64_t v154 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v153 = (uint64_t)&v117 - v21;
  uint64_t v22 = sub_100004210(&qword_1000D6008);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004210(&qword_1000D6010);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v143 = (uint64_t)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v117 - v28;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1000B3D20();
  int v31 = sub_1000B3950();
  sub_1000B3AA0();
  uint64_t v32 = sub_1000B3A70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v24, 1, 1, v32);
  uint64_t v33 = sub_1000B3AB0();
  sub_100017B5C((uint64_t)v24, &qword_1000D6008);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v161 = v30;
  LODWORD(v162) = v31;
  uint64_t v163 = KeyPath;
  uint64_t v164 = v33;
  sub_100004210(&qword_1000D6018);
  sub_10005B700(&qword_1000D6020, &qword_1000D6018, (void (*)(void))sub_10005B7A4);
  uint64_t v142 = v29;
  sub_1000B3C00();
  swift_release();
  swift_release();
  swift_release();
  sub_1000B3DA0();
  sub_1000B3660();
  uint64_t v139 = v169;
  int v138 = v170;
  uint64_t v137 = v171;
  int v136 = v172;
  uint64_t v135 = v173;
  uint64_t v134 = v174;
  uint64_t v146 = a1;
  swift_bridgeObjectRetain();
  LODWORD(v161) = sub_1000B3950();
  uint64_t v35 = sub_1000B3B20();
  uint64_t v37 = v36;
  LOBYTE(v31) = v38;
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = swift_getKeyPath();
  sub_1000B3B00();
  sub_1000B3AA0();
  uint64_t v42 = sub_1000B3AC0();
  uint64_t v43 = v160;
  swift_release();
  uint64_t v44 = swift_getKeyPath();
  uint64_t v161 = v35;
  uint64_t v162 = v37;
  char v45 = v31 & 1;
  unint64_t v46 = v156;
  LOBYTE(v163) = v45;
  uint64_t v164 = v40;
  uint64_t v165 = v41;
  uint64_t v47 = v155;
  char v166 = 1;
  uint64_t v167 = v44;
  uint64_t v168 = v42;
  unsigned int v48 = enum case for DynamicTypeSize.xSmall(_:);
  uint64_t v49 = *(void (**)(char *, void, uint64_t))(v43 + 104);
  v49(v155, enum case for DynamicTypeSize.xSmall(_:), v11);
  unsigned int v50 = enum case for DynamicTypeSize.accessibility1(_:);
  v49(v46, enum case for DynamicTypeSize.accessibility1(_:), v11);
  uint64_t v51 = sub_100058DF8(&qword_1000D6058, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t v157 = v11;
  uint64_t v132 = v51;
  uint64_t result = sub_1000B3F80();
  if (result)
  {
    unsigned int v128 = v50;
    unsigned int v129 = v48;
    uint64_t v130 = v49;
    uint64_t v131 = v43 + 104;
    uint64_t v53 = v10;
    uint64_t v54 = v159;
    uint64_t v55 = &v10[*(int *)(v159 + 48)];
    uint64_t v56 = v43 + 32;
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    uint64_t v58 = v43;
    uint64_t v59 = v157;
    v57(v10, v47, v157);
    v57(v55, v46, v59);
    uint64_t v60 = v151;
    id v61 = &v151[*(int *)(v54 + 48)];
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    v62(v151, v53, v59);
    uint64_t v124 = v58 + 16;
    char v123 = (void (*)(char *, uint64_t, uint64_t))v62;
    v62(v61, v55, v59);
    uint64_t v63 = (uint64_t)v147;
    v57(v147, v60, v59);
    uint64_t v64 = *(void (**)(char *, uint64_t))(v58 + 8);
    v64(v61, v59);
    uint64_t v65 = &v60[*(int *)(v159 + 48)];
    uint64_t v127 = v53;
    v57(v60, v53, v59);
    v57(v65, v55, v59);
    uint64_t v66 = v149;
    uint64_t v67 = v63 + *(int *)(v149 + 36);
    char v126 = (void (*)(uint64_t, char *, uint64_t))v57;
    uint64_t v119 = v56;
    v57((char *)v67, v65, v59);
    id v125 = v64;
    uint64_t v160 = v58 + 8;
    v64(v60, v59);
    uint64_t v68 = v148;
    sub_10006B62C(v63, v148, &qword_1000D5FF0);
    uint64_t v69 = sub_100004210(&qword_1000D6060);
    uint64_t v70 = sub_10005B700(&qword_1000D6068, &qword_1000D6060, (void (*)(void))sub_10005B898);
    uint64_t v71 = sub_10001FF28(&qword_1000D6090, &qword_1000D5FF0);
    long long v72 = v150;
    sub_1000B3BC0();
    sub_100017B5C(v68, &qword_1000D5FF0);
    sub_10005B938(v161, v162, v163);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v122 = v69;
    uint64_t v161 = v69;
    uint64_t v162 = v66;
    uint64_t v121 = v70;
    uint64_t v163 = v70;
    uint64_t v164 = v71;
    uint64_t v120 = v71;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v74 = (uint64_t)v154;
    uint64_t v75 = v152;
    sub_1000B3C00();
    uint64_t v77 = v158 + 8;
    unsigned __int8 v76 = *(void (**)(char *, uint64_t))(v158 + 8);
    v76(v72, v75);
    uint64_t v78 = v153;
    sub_10006B62C(v74, v153, &qword_1000D6000);
    if (sub_1000B4080() < 1)
    {
      uint64_t v108 = 1;
      uint64_t v107 = v133;
      goto LABEL_6;
    }
    double v118 = v76;
    uint64_t v146 = OpaqueTypeConformance2;
    uint64_t v158 = v77;
    swift_bridgeObjectRetain();
    LODWORD(v161) = sub_1000B3950();
    uint64_t v79 = sub_1000B3B20();
    uint64_t v81 = v80;
    char v83 = v82;
    uint64_t v85 = v84;
    swift_bridgeObjectRelease();
    uint64_t v86 = swift_getKeyPath();
    sub_1000B3B00();
    sub_1000B3A90();
    uint64_t v87 = sub_1000B3AC0();
    swift_release();
    uint64_t v88 = swift_getKeyPath();
    uint64_t v161 = v79;
    uint64_t v162 = v81;
    LOBYTE(v163) = v83 & 1;
    uint64_t v164 = v85;
    uint64_t v165 = v86;
    char v166 = 1;
    uint64_t v167 = v88;
    uint64_t v168 = v87;
    unsigned __int8 v89 = v155;
    uint64_t v90 = v157;
    long long v91 = v130;
    v130(v155, v129, v157);
    Class v92 = v156;
    v91(v156, v128, v90);
    uint64_t result = sub_1000B3F80();
    if (result)
    {
      uint64_t v93 = v159;
      uint64_t v94 = v127;
      uint64_t v95 = (uint64_t)&v127[*(int *)(v159 + 48)];
      uint64_t v96 = v157;
      uint64_t v97 = v126;
      v126((uint64_t)v127, v89, v157);
      uint64_t v132 = v95;
      v97(v95, v92, v96);
      uint64_t v98 = v151;
      uint64_t v99 = &v151[*(int *)(v93 + 48)];
      uint64_t v100 = v123;
      v123(v151, (uint64_t)v94, v96);
      v100(v99, v95, v96);
      uint64_t v101 = (uint64_t)v147;
      v97((uint64_t)v147, v98, v96);
      uint64_t v102 = v125;
      v125(v99, v96);
      long long v103 = &v98[*(int *)(v93 + 48)];
      v97((uint64_t)v98, v94, v96);
      v97((uint64_t)v103, (char *)v132, v96);
      v97(v101 + *(int *)(v149 + 36), v103, v96);
      v102(v98, v96);
      uint64_t v104 = v148;
      sub_10006B62C(v101, v148, &qword_1000D5FF0);
      unsigned __int8 v105 = v150;
      sub_1000B3BC0();
      sub_100017B5C(v104, &qword_1000D5FF0);
      sub_10005B938(v161, v162, v163);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v74 = (uint64_t)v154;
      uint64_t v106 = v152;
      sub_1000B3C00();
      v118(v105, v106);
      uint64_t v107 = v133;
      sub_10006B62C(v74, v133, &qword_1000D6000);
      uint64_t v108 = 0;
      uint64_t v78 = v153;
LABEL_6:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v140 + 56))(v107, v108, 1, v141);
      uint64_t v109 = (uint64_t)v142;
      uint64_t v110 = v143;
      sub_1000206A0((uint64_t)v142, v143, &qword_1000D6010);
      sub_1000206A0(v78, v74, &qword_1000D6000);
      uint64_t v111 = v145;
      sub_1000206A0(v107, v145, &qword_1000D5FE0);
      uint64_t v112 = v144;
      *uint64_t v144 = 0;
      *((unsigned char *)v112 + 8) = 1;
      uint64_t v113 = (int *)sub_100004210(&qword_1000D6098);
      sub_1000206A0(v110, (uint64_t)v112 + v113[12], &qword_1000D6010);
      uint64_t v114 = (char *)v112 + v113[16];
      *(void *)uint64_t v114 = 0;
      v114[8] = 1;
      *((void *)v114 + 2) = v139;
      v114[24] = v138;
      *((void *)v114 + 4) = v137;
      v114[40] = v136;
      uint64_t v115 = v134;
      *((void *)v114 + 6) = v135;
      *((void *)v114 + 7) = v115;
      sub_1000206A0(v74, (uint64_t)v112 + v113[20], &qword_1000D6000);
      sub_1000206A0(v111, (uint64_t)v112 + v113[24], &qword_1000D5FE0);
      double v116 = (char *)v112 + v113[28];
      *(void *)double v116 = 0;
      v116[8] = 1;
      sub_100017B5C(v107, &qword_1000D5FE0);
      sub_100017B5C(v78, &qword_1000D6000);
      sub_100017B5C(v109, &qword_1000D6010);
      sub_100017B5C(v111, &qword_1000D5FE0);
      sub_100017B5C(v74, &qword_1000D6000);
      return sub_100017B5C(v110, &qword_1000D6010);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10004DF40@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v6[0] = *v1;
  v6[1] = v3;
  v6[2] = v1[2];
  *(void *)a1 = sub_1000B3800();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_100004210(&qword_1000D5FC0);
  return sub_10004CDB4((uint64_t)v6, a1 + *(int *)(v4 + 44));
}

uint64_t sub_10004DFA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v2 = type metadata accessor for WidgetViewForLargeSquareTiles(0);
  uint64_t v52 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v53 = v3;
  uint64_t v54 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100004210(&qword_1000D60A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v55 = (uint64_t *)((char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000B3E50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v13 = v1;
  uint64_t v14 = *v1;
  char v15 = *((unsigned char *)v13 + 8);
  uint64_t v16 = v13;
  uint64_t v50 = (uint64_t)v13;
  sub_100044118(v14, v15);
  int v48 = sub_10007E9FC(v14, v15);
  sub_1000441FC(v14, v15);
  uint64_t v51 = v2;
  uint64_t v49 = (uint64_t)v16 + *(int *)(v2 + 20);
  sub_10007EE20((uint64_t)v12);
  uint64_t v17 = enum case for WidgetFamily.systemSmall(_:);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v18(v10, enum case for WidgetFamily.systemSmall(_:), v6);
  sub_100058DF8(&qword_1000D5E28, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000B40C0();
  sub_1000B40C0();
  uint64_t v47 = v58;
  uint64_t v46 = v57;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  v19(v12, v6);
  sub_10007EE20((uint64_t)v12);
  v18(v10, v17, v6);
  sub_1000B40C0();
  uint64_t v20 = v50;
  sub_1000B40C0();
  uint64_t v22 = v57;
  uint64_t v21 = v58;
  v19(v10, v6);
  v19(v12, v6);
  uint64_t v23 = *(void *)v20;
  char v24 = *(unsigned char *)(v20 + 8);
  sub_100044118(*(void *)v20, v24);
  LOBYTE(v17) = sub_10007E9FC(v23, v24);
  sub_1000441FC(v23, v24);
  if (v17)
  {
    uint64_t v25 = 1;
    if (v21 != v22) {
      uint64_t v25 = 2;
    }
    double v26 = 0.0;
    if (v48) {
      double v26 = 16.0;
    }
    if (v47 != v46) {
      double v26 = 24.0;
    }
    uint64_t v27 = v51;
    double v28 = (*(double *)(v20 + *(int *)(v51 + 32)) - v26) / (double)v25;
  }
  else
  {
    uint64_t v27 = v51;
    double v28 = *(double *)(v20 + *(int *)(v51 + 32));
  }
  sub_100044118(v23, v24);
  char v29 = sub_10007E9FC(v23, v24);
  sub_1000441FC(v23, v24);
  uint64_t v30 = v20 + *(int *)(v27 + 32);
  if (v29) {
    double v31 = *(double *)(v30 + 8) + -16.0;
  }
  else {
    double v31 = *(double *)(v30 + 8);
  }
  uint64_t v32 = sub_1000B3800();
  uint64_t v33 = (uint64_t)v55;
  *uint64_t v55 = v32;
  *(void *)(v33 + 8) = 0;
  *(unsigned char *)(v33 + 16) = 1;
  sub_100004210(&qword_1000D60A8);
  uint64_t v34 = swift_bridgeObjectRetain();
  size_t v35 = sub_10005682C(v34);
  swift_bridgeObjectRelease();
  *(void *)&long long v58 = v35;
  swift_getKeyPath();
  uint64_t v36 = v54;
  sub_100059028(v20, v54, type metadata accessor for WidgetViewForLargeSquareTiles);
  unint64_t v37 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v38 = (v53 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = swift_allocObject();
  sub_10005BB70(v36, v39 + v37, type metadata accessor for WidgetViewForLargeSquareTiles);
  *(double *)(v39 + v38) = v28;
  *(double *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v31;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_10005BBD8;
  *(void *)(v40 + 24) = v39;
  sub_100004210(&qword_1000D60B0);
  sub_100004210(&qword_1000D60B8);
  sub_10001FF28(&qword_1000D60C0, &qword_1000D60B0);
  sub_10001FF28(&qword_1000D60C8, &qword_1000D60B8);
  sub_1000B3D60();
  sub_1000B3DA0();
  sub_1000B3660();
  uint64_t v41 = v56;
  sub_1000206A0(v33, v56, &qword_1000D60A0);
  uint64_t v42 = (_OWORD *)(v41 + *(int *)(sub_100004210(&qword_1000D60D0) + 36));
  long long v43 = v59;
  *uint64_t v42 = v58;
  v42[1] = v43;
  v42[2] = v60;
  return sub_100017B5C(v33, &qword_1000D60A0);
}

uint64_t sub_10004E61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v116 = a1;
  uint64_t v126 = a4;
  uint64_t v124 = sub_1000B3E50();
  uint64_t v123 = *(void *)(v124 - 8);
  uint64_t v10 = __chkstk_darwin(v124);
  uint64_t v122 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v121 = (uint64_t)&v102 - v12;
  uint64_t v120 = sub_100004210(&qword_1000D60E0);
  uint64_t v107 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v106 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100004210(&qword_1000D5378);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  long long v103 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v102 - v17;
  uint64_t v111 = sub_1000B2E90();
  uint64_t v108 = *(void *)(v111 - 8);
  uint64_t v19 = __chkstk_darwin(v111);
  uint64_t v104 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unsigned __int8 v105 = (char *)&v102 - v21;
  uint64_t v118 = sub_100004210(&qword_1000D60E8);
  __chkstk_darwin(v118);
  uint64_t v119 = (uint64_t)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100004210(&qword_1000D5D58);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (uint64_t *)((char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v26 = (int *)type metadata accessor for LargeSquareTileViewToggleStyle(0);
  __chkstk_darwin(v26);
  double v28 = (char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v30 = v29 - 8;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100004210(&qword_1000D60F0);
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v34 = (char *)&v102 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_100004210(&qword_1000D60F8);
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v36 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_100004210(&qword_1000D6100);
  uint64_t v37 = __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v115 = (char *)&v102 - v39;
  uint64_t v40 = sub_100004210(&qword_1000D6108);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  uint64_t v125 = (uint64_t)&v102 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v129 = (uint64_t)&v102 - v43;
  uint64_t v127 = type metadata accessor for WidgetViewForLargeSquareTiles(0);
  uint64_t v44 = *(int *)(v127 + 32);
  uint64_t v128 = a3;
  double v45 = *(double *)(a3 + v44 + 8) / 10.0;
  uint64_t v46 = a2 + *(int *)(v30 + 32);
  if (sub_10001A5A8())
  {
    sub_10001A910();
    sub_100059028(a2, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v137 = sub_10008E584((uint64_t)v32);
    sub_100067A5C();
    sub_1000B3D50();
    uint64_t v47 = sub_100059028(a2, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    double v48 = nullsub_1(v47, a5, a6);
    uint64_t v50 = v49;
    *uint64_t v25 = swift_getKeyPath();
    sub_100004210(&qword_1000D4F90);
    swift_storeEnumTagMultiPayload();
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&v28[v26[6]] = swift_getKeyPath();
    sub_100004210(&qword_1000D4F88);
    swift_storeEnumTagMultiPayload();
    sub_10006B62C((uint64_t)v25, (uint64_t)v28, &qword_1000D5D58);
    uint64_t v52 = &v28[v26[5]];
    *(void *)uint64_t v52 = KeyPath;
    v52[8] = 0;
    sub_10005BB70((uint64_t)v32, (uint64_t)&v28[v26[7]], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v53 = (double *)&v28[v26[8]];
    *uint64_t v53 = v48;
    *((void *)v53 + 1) = v50;
    *(double *)&v28[v26[9]] = v45;
    uint64_t v54 = sub_10001FF28(&qword_1000D6158, &qword_1000D60F0);
    uint64_t v55 = sub_100058DF8(&qword_1000D6160, (void (*)(uint64_t))type metadata accessor for LargeSquareTileViewToggleStyle);
    uint64_t v111 = (uint64_t)v36;
    uint64_t v56 = v110;
    sub_1000B3BA0();
    sub_100059090((uint64_t)v28, type metadata accessor for LargeSquareTileViewToggleStyle);
    uint64_t v57 = v56;
    uint64_t v58 = v56;
    uint64_t v59 = 0xD000000000000011;
    (*(void (**)(char *, uint64_t))(v109 + 8))(v34, v58);
    uint64_t v137 = 0;
    unint64_t v138 = 0xE000000000000000;
    sub_1000B45C0(52);
    v151._countAndFlagsBits = 0xD000000000000032;
    v151._object = (void *)0x80000001000B98F0;
    sub_1000B4090(v151);
    long long v60 = (uint64_t *)(v46 + *(int *)(type metadata accessor for WidgetTileInfo() + 28));
    if (v60[1])
    {
      uint64_t v59 = *v60;
      id v61 = (void *)v60[1];
    }
    else
    {
      id v61 = (void *)0x80000001000B9930;
    }
    uint64_t v73 = (uint64_t)v115;
    uint64_t v74 = v114;
    swift_bridgeObjectRetain();
    v152._countAndFlagsBits = v59;
    v152._object = v61;
    sub_1000B4090(v152);
    swift_bridgeObjectRelease();
    *(void *)&long long v130 = 32;
    *((void *)&v130 + 1) = 0xE100000000000000;
    uint64_t v146 = 0;
    unint64_t v147 = 0xE000000000000000;
    *(double *)&unint64_t v100 = COERCE_DOUBLE(sub_100004BC8());
    unint64_t v101 = v100;
    double v98 = COERCE_DOUBLE(&type metadata for String);
    double v99 = *(double *)&v100;
    sub_1000B4440();
    swift_bridgeObjectRelease();
    uint64_t v137 = v57;
    unint64_t v138 = (unint64_t)v26;
    uint64_t v139 = v54;
    uint64_t v140 = v55;
    swift_getOpaqueTypeConformance2();
    uint64_t v75 = (uint64_t)v112;
    uint64_t v76 = v111;
    sub_1000B3C00();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v76, v74);
    sub_10006B62C(v75, v73, &qword_1000D6100);
    sub_1000206A0(v73, v119, &qword_1000D6100);
    swift_storeEnumTagMultiPayload();
    sub_10005BE60();
    sub_10001FF28(&qword_1000D6170, &qword_1000D60E0);
    sub_1000B3920();
    sub_100017B5C(v73, &qword_1000D6100);
  }
  else
  {
    sub_100023850();
    uint64_t v62 = v108;
    uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 48);
    uint64_t v64 = v111;
    if (v63(v18, 1, v111) == 1)
    {
      uint64_t v65 = v103;
      sub_1000B2E80();
      uint64_t result = v63(v65, 1, v64);
      uint64_t v67 = v128;
      if (result == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v68 = v105;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v105, v65, v64);
      sub_100017B5C((uint64_t)v18, &qword_1000D5378);
    }
    else
    {
      uint64_t v68 = v105;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v105, v18, v64);
      uint64_t v67 = v128;
    }
    uint64_t v69 = (*(uint64_t (**)(char *, char *, uint64_t))(v62 + 16))(v104, v68, v64);
    __chkstk_darwin(v69);
    *(&v102 - 6) = a2;
    *(&v102 - 5) = v67;
    double v98 = v45;
    double v99 = a5;
    *(double *)&unint64_t v100 = a6;
    sub_100004210(&qword_1000D6110);
    sub_10005BD04();
    uint64_t v70 = v106;
    sub_1000B3B10();
    uint64_t v71 = v107;
    uint64_t v72 = v120;
    (*(void (**)(uint64_t, char *, uint64_t))(v107 + 16))(v119, v70, v120);
    swift_storeEnumTagMultiPayload();
    sub_10005BE60();
    sub_10001FF28(&qword_1000D6170, &qword_1000D60E0);
    sub_1000B3920();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v68, v64);
  }
  uint64_t v77 = v124;
  uint64_t v78 = v123;
  uint64_t v79 = v122;
  uint64_t v80 = v121;
  sub_10007EE20(v121);
  (*(void (**)(char *, void, uint64_t))(v78 + 104))(v79, enum case for WidgetFamily.systemMedium(_:), v77);
  sub_100058DF8(&qword_1000D5E28, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  sub_1000B40C0();
  sub_1000B40C0();
  uint64_t v81 = v137;
  uint64_t v82 = v130;
  char v83 = *(void (**)(char *, uint64_t))(v78 + 8);
  v83(v79, v77);
  v83((char *)v80, v77);
  uint64_t v84 = 0;
  int v85 = 255;
  unint64_t v86 = 0;
  uint64_t v87 = 0;
  uint64_t v88 = 0;
  uint64_t v89 = 0;
  if (v81 == v82)
  {
    uint64_t v90 = 0;
    uint64_t v91 = 0;
    uint64_t v92 = 0;
    if (!v116)
    {
      if (*(void *)(*(void *)(v128 + *(int *)(v127 + 36)) + 16) == 1)
      {
        sub_1000B3DA0();
        sub_1000B3660();
        long long v130 = xmmword_1000B69B0;
        uint64_t v131 = v146;
        uint64_t v132 = v147;
        uint64_t v133 = v148;
        uint64_t v134 = v149;
        long long v135 = v150;
        char v136 = 0;
      }
      else
      {
        sub_1000B3DA0();
        sub_1000B3660();
        long long v130 = xmmword_1000B69B0;
        uint64_t v131 = v146;
        uint64_t v132 = v147;
        uint64_t v133 = v148;
        uint64_t v134 = v149;
        long long v135 = v150;
        char v136 = 1;
      }
      sub_100004210(&qword_1000D6180);
      sub_10005BFB4();
      sub_1000B3920();
      uint64_t v84 = v137;
      unint64_t v86 = v138;
      uint64_t v87 = v139;
      uint64_t v88 = v140;
      uint64_t v89 = v141;
      uint64_t v90 = v142;
      uint64_t v91 = v143;
      uint64_t v92 = v144;
      int v85 = v145;
    }
  }
  else
  {
    uint64_t v90 = 0;
    uint64_t v91 = 0;
    uint64_t v92 = 0;
  }
  uint64_t v124 = v91;
  uint64_t v127 = v92;
  LODWORD(v128) = v85;
  uint64_t v93 = v129;
  uint64_t v94 = v125;
  sub_1000206A0(v129, v125, &qword_1000D6108);
  uint64_t v95 = v126;
  sub_1000206A0(v94, v126, &qword_1000D6108);
  uint64_t v96 = v95 + *(int *)(sub_100004210(&qword_1000D6178) + 48);
  *(void *)uint64_t v96 = v84;
  *(void *)(v96 + 8) = v86;
  *(void *)(v96 + 16) = v87;
  *(void *)(v96 + 24) = v88;
  *(void *)(v96 + 32) = v89;
  *(void *)(v96 + 40) = v90;
  uint64_t v97 = v127;
  *(void *)(v96 + 48) = v124;
  *(void *)(v96 + 56) = v97;
  *(unsigned char *)(v96 + 64) = v128;
  sub_100017B5C(v93, &qword_1000D6108);
  return sub_100017B5C(v94, &qword_1000D6108);
}

uint64_t sub_10004F6BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_1000B3690();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (double *)((char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_100004210(&qword_1000D6138);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_100004210(&qword_1000D6128);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v14 = sub_1000B3DA0();
  v14[1] = v19;
  uint64_t v20 = sub_100004210(&qword_1000D6198);
  sub_10004F950(a1, a2, (uint64_t)v14 + *(int *)(v20 + 44));
  uint64_t v21 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v22 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v23 = sub_1000B3860();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  *uint64_t v11 = a4;
  v11[1] = a4;
  sub_100059028((uint64_t)v11, (uint64_t)&v18[*(int *)(v16 + 44)], (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000206A0((uint64_t)v14, (uint64_t)v18, &qword_1000D6138);
  sub_100059090((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_100017B5C((uint64_t)v14, &qword_1000D6138);
  sub_1000B3DA0();
  sub_1000B3660();
  sub_1000206A0((uint64_t)v18, a3, &qword_1000D6128);
  uint64_t v24 = (_OWORD *)(a3 + *(int *)(sub_100004210(&qword_1000D6110) + 36));
  long long v25 = v27[1];
  *uint64_t v24 = v27[0];
  v24[1] = v25;
  void v24[2] = v27[2];
  return sub_100017B5C((uint64_t)v18, &qword_1000D6128);
}

uint64_t sub_10004F950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v101 = a3;
  uint64_t v93 = sub_1000B3D90();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B3E20();
  uint64_t v104 = *(void *)(v5 - 8);
  uint64_t v105 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  long long v103 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v102 = (uint64_t)&v84 - v8;
  uint64_t v9 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v86 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  int v85 = (char *)&v84 - v12;
  uint64_t v13 = (int *)type metadata accessor for LargeSquareTileView();
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v87 = sub_100004210(&qword_1000D61A0);
  __chkstk_darwin(v87);
  uint64_t v107 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100004210(&qword_1000D61A8);
  __chkstk_darwin(v88);
  uint64_t v89 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100004210(&qword_1000D61B0);
  __chkstk_darwin(v97);
  uint64_t v96 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004210(&qword_1000D61B8);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v100 = (uint64_t)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v94 = (char *)&v84 - v23;
  __chkstk_darwin(v22);
  uint64_t v99 = (uint64_t)&v84 - v24;
  uint64_t v25 = type metadata accessor for AccentableBackgroundView(0);
  uint64_t v26 = v25 - 8;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v98 = (uint64_t)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t *)((char *)&v84 - v29);
  uint64_t v31 = a1 + *(int *)(v9 + 24);
  char v32 = sub_10001A910();
  *uint64_t v30 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F88);
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = *(int *)(v26 + 28);
  char v34 = v32 & 1;
  uint64_t v35 = (uint64_t)v85;
  uint64_t v95 = v30;
  *((unsigned char *)v30 + v33) = v34;
  uint64_t v108 = a1;
  sub_100059028(a1, v35, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v106 = v31;
  LOBYTE(a1) = sub_10001A910();
  *uint64_t v15 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = (char *)v15 + v13[5];
  *(void *)uint64_t v36 = swift_getKeyPath();
  v36[8] = 0;
  sub_100059028(v35, (uint64_t)v15 + v13[6], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v37 = (uint64_t)v15 + v13[7];
  sub_100059028(v35 + *(int *)(v9 + 24), v37, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  *((unsigned char *)v15 + v13[8]) = a1 & 1;
  *((unsigned char *)v15 + v13[9]) = sub_10001A5A8() & 1;
  uint64_t v38 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v39 = (uint64_t *)(v37 + v38[8]);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  uint64_t v42 = (uint64_t *)((char *)v15 + v13[10]);
  *uint64_t v42 = v41;
  v42[1] = v40;
  int v43 = *(unsigned __int8 *)(v37 + v38[13]);
  swift_bridgeObjectRetain();
  if (v43 == 1)
  {
    sub_100059090(v35, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v44 = *(void *)(v37 + v38[12]);
    swift_retain();
  }
  else
  {
    uint64_t v44 = sub_1000B3C70();
    sub_100059090(v35, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  }
  *(uint64_t *)((char *)v15 + v13[11]) = v44;
  char v45 = sub_10001A910();
  uint64_t v46 = v86;
  sub_100059028(v108, v86, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v47 = v91;
  uint64_t v48 = v90;
  if ((v45 & 1) == 0)
  {
    sub_100059090(v46, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v50 = (uint64_t)v96;
    goto LABEL_9;
  }
  char v49 = *(unsigned char *)(v46 + *(int *)(v9 + 24) + v38[13]);
  sub_100059090(v46, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v50 = (uint64_t)v96;
  if ((v49 & 1) == 0)
  {
LABEL_9:
    uint64_t v57 = sub_1000676E4(v48);
    goto LABEL_10;
  }
  type metadata accessor for WidgetViewForLargeSquareTiles(0);
  uint64_t v51 = v102;
  sub_10007F150(v102);
  uint64_t v52 = v103;
  sub_1000B3E00();
  char v53 = sub_1000B3DE0();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v104 + 8);
  uint64_t v55 = v52;
  uint64_t v56 = v105;
  v54(v55, v105);
  v54((char *)v51, v56);
  if (v53)
  {
    uint64_t v57 = sub_1000B3C60();
    goto LABEL_11;
  }
  if (qword_1000D4EF8 != -1) {
    swift_once();
  }
  uint64_t v57 = qword_1000DCCC0;
LABEL_10:
  swift_retain();
LABEL_11:
  char v58 = sub_1000B39D0();
  uint64_t v59 = v107;
  sub_100059028((uint64_t)v15, v107, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
  uint64_t v60 = v59 + *(int *)(v87 + 36);
  *(void *)uint64_t v60 = v57;
  *(unsigned char *)(v60 + 8) = v58;
  sub_100059090((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
  type metadata accessor for WidgetViewForLargeSquareTiles(0);
  uint64_t v61 = v102;
  sub_10007F150(v102);
  uint64_t v62 = v103;
  sub_1000B3DF0();
  char v63 = sub_1000B3DE0();
  uint64_t v64 = *(void (**)(char *, uint64_t))(v104 + 8);
  uint64_t v65 = v62;
  uint64_t v66 = v105;
  v64(v65, v105);
  v64((char *)v61, v66);
  if (v63) {
    sub_1000B3D70();
  }
  else {
    sub_1000B3D80();
  }
  uint64_t v67 = 0xD000000000000011;
  uint64_t v68 = (uint64_t)v89;
  uint64_t v69 = v92;
  uint64_t v70 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(&v89[*(int *)(v88 + 36)], v47, v93);
  uint64_t v71 = v107;
  sub_1000206A0(v107, v68, &qword_1000D61A0);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v70);
  sub_100017B5C(v71, &qword_1000D61A0);
  sub_1000206A0(v68, v50, &qword_1000D61A8);
  uint64_t v72 = v50 + *(int *)(v97 + 52);
  uint64_t v73 = sub_1000B2F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(v72, v108, v73);
  sub_100017B5C(v68, &qword_1000D61A8);
  uint64_t v113 = 0;
  unint64_t v114 = 0xE000000000000000;
  sub_1000B45C0(55);
  v115._countAndFlagsBits = 0xD000000000000035;
  v115._object = (void *)0x80000001000B9950;
  sub_1000B4090(v115);
  uint64_t v74 = (uint64_t *)(v106 + v38[7]);
  if (v74[1])
  {
    uint64_t v67 = *v74;
    uint64_t v75 = (void *)v74[1];
  }
  else
  {
    uint64_t v75 = (void *)0x80000001000B9930;
  }
  swift_bridgeObjectRetain();
  v116._countAndFlagsBits = v67;
  v116._object = v75;
  sub_1000B4090(v116);
  swift_bridgeObjectRelease();
  uint64_t v111 = 32;
  unint64_t v112 = 0xE100000000000000;
  uint64_t v109 = 0;
  unint64_t v110 = 0xE000000000000000;
  sub_100004BC8();
  sub_1000B4440();
  swift_bridgeObjectRelease();
  sub_10001FF28(&qword_1000D61C0, &qword_1000D61B0);
  uint64_t v76 = (uint64_t)v94;
  sub_1000B3C00();
  swift_bridgeObjectRelease();
  sub_100017B5C(v50, &qword_1000D61B0);
  uint64_t v77 = v99;
  sub_10006B62C(v76, v99, &qword_1000D61B8);
  uint64_t v78 = (uint64_t)v95;
  uint64_t v79 = v98;
  sub_100059028((uint64_t)v95, v98, type metadata accessor for AccentableBackgroundView);
  uint64_t v80 = v100;
  sub_1000206A0(v77, v100, &qword_1000D61B8);
  uint64_t v81 = v101;
  sub_100059028(v79, v101, type metadata accessor for AccentableBackgroundView);
  uint64_t v82 = sub_100004210(&qword_1000D61C8);
  sub_1000206A0(v80, v81 + *(int *)(v82 + 48), &qword_1000D61B8);
  sub_100017B5C(v77, &qword_1000D61B8);
  sub_100059090(v78, type metadata accessor for AccentableBackgroundView);
  sub_100017B5C(v80, &qword_1000D61B8);
  return sub_100059090(v79, type metadata accessor for AccentableBackgroundView);
}

uint64_t sub_1000504AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v31 = a2;
  uint64_t v33 = sub_1000B3690();
  __chkstk_darwin(v33);
  uint64_t v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100004210(&qword_1000D64B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = sub_100004210(&qword_1000D64C0);
  __chkstk_darwin(v32);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LargeSquareTileViewToggleStyle(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  char v15 = sub_1000B3970();
  char v34 = v15 & 1;
  LOBYTE(a1) = sub_10002396C();
  sub_100059028(v3, (uint64_t)v14, type metadata accessor for LargeSquareTileViewToggleStyle);
  if (a1)
  {
    type metadata accessor for AccessoryAndSceneEntity();
    char v16 = sub_10001A910();
    sub_100059090((uint64_t)v14, type metadata accessor for LargeSquareTileViewToggleStyle);
    char v17 = v16 ^ v15;
    uint64_t v18 = v30;
    uint64_t v19 = v31;
    if (v17) {
      char v34 = sub_10001A910() & 1;
    }
  }
  else
  {
    sub_100059090((uint64_t)v14, type metadata accessor for LargeSquareTileViewToggleStyle);
    uint64_t v18 = v30;
    uint64_t v19 = v31;
  }
  uint64_t *v9 = sub_1000B3DA0();
  v9[1] = v20;
  uint64_t v21 = sub_100004210(&qword_1000D64C8);
  sub_100050874(v18, v3, &v34, (uint64_t)v9 + *(int *)(v21 + 44));
  uint64_t v22 = *(void *)(v3 + *(int *)(v12 + 36));
  uint64_t v23 = (char *)v6 + *(int *)(v33 + 20);
  uint64_t v24 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v25 = sub_1000B3860();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  *uint64_t v6 = v22;
  v6[1] = v22;
  sub_100059028((uint64_t)v6, (uint64_t)&v11[*(int *)(v32 + 36)], (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000206A0((uint64_t)v9, (uint64_t)v11, &qword_1000D64B8);
  sub_100059090((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_100017B5C((uint64_t)v9, &qword_1000D64B8);
  sub_1000B3DA0();
  sub_1000B3660();
  sub_1000206A0((uint64_t)v11, v19, &qword_1000D64C0);
  uint64_t v26 = (_OWORD *)(v19 + *(int *)(sub_100004210(&qword_1000D64D0) + 36));
  long long v27 = v36;
  *uint64_t v26 = v35;
  v26[1] = v27;
  void v26[2] = v37;
  return sub_100017B5C((uint64_t)v11, &qword_1000D64C0);
}

uint64_t sub_100050874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v83 = a3;
  uint64_t v101 = a4;
  uint64_t v6 = sub_1000B3D90();
  uint64_t v99 = *(void *)(v6 - 8);
  uint64_t v100 = v6;
  __chkstk_darwin(v6);
  uint64_t v98 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000B3E20();
  uint64_t v95 = *(void *)(v8 - 8);
  uint64_t v96 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v93 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v81 - v11;
  uint64_t v102 = type metadata accessor for AccessoryAndSceneEntity();
  __chkstk_darwin(v102);
  uint64_t v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for LargeSquareTileView();
  __chkstk_darwin(v14);
  char v16 = (uint64_t *)((char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = sub_100004210(&qword_1000D61A0);
  __chkstk_darwin(v86);
  uint64_t v105 = (uint64_t)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100004210(&qword_1000D61A8);
  __chkstk_darwin(v87);
  uint64_t v91 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100004210(&qword_1000D61B0);
  uint64_t v19 = __chkstk_darwin(v88);
  uint64_t v97 = (uint64_t)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v89 = (uint64_t)&v81 - v22;
  __chkstk_darwin(v21);
  uint64_t v94 = (uint64_t)&v81 - v23;
  uint64_t v24 = type metadata accessor for LargeSquareTileViewToggleStyle(0);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v82 = (uint64_t)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v81 - v27;
  uint64_t v29 = type metadata accessor for AccentableBackgroundView(0);
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v90 = (uint64_t)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  char v34 = (uint64_t *)((char *)&v81 - v33);
  __chkstk_darwin(v32);
  uint64_t v104 = (uint64_t)&v81 - v35;
  uint64_t v85 = a1;
  LOBYTE(a1) = sub_1000B3970();
  uint64_t v36 = a2;
  sub_100059028(a2, (uint64_t)v28, type metadata accessor for LargeSquareTileViewToggleStyle);
  if (a1)
  {
    long long v37 = &v28[*(int *)(v24 + 28) + (uint64_t)*(int *)(v102 + 24)];
    char v38 = v37[*(int *)(type metadata accessor for WidgetTileInfo() + 52)];
  }
  else
  {
    char v38 = 0;
  }
  sub_100059090((uint64_t)v28, type metadata accessor for LargeSquareTileViewToggleStyle);
  uint64_t *v34 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F88);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v34 + *(int *)(v29 + 20)) = v38;
  sub_10005BB70((uint64_t)v34, v104, type metadata accessor for AccentableBackgroundView);
  uint64_t v103 = v24;
  uint64_t v39 = v36;
  uint64_t v84 = v36 + *(int *)(v24 + 28);
  sub_100059028(v84, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  char v40 = *v83;
  *char v16 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = (char *)v16 + v14[5];
  *(void *)uint64_t v41 = swift_getKeyPath();
  v41[8] = 0;
  sub_100059028((uint64_t)v13, (uint64_t)v16 + v14[6], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v42 = v102;
  uint64_t v43 = (uint64_t)v16 + v14[7];
  sub_100059028((uint64_t)&v13[*(int *)(v102 + 24)], v43, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  *((unsigned char *)v16 + v14[8]) = v40;
  *((unsigned char *)v16 + v14[9]) = sub_10001A5A8() & 1;
  uint64_t v44 = (int *)type metadata accessor for WidgetTileInfo();
  char v45 = (uint64_t *)(v43 + v44[8]);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  uint64_t v48 = (uint64_t *)((char *)v16 + v14[10]);
  *uint64_t v48 = v47;
  v48[1] = v46;
  LODWORD(v41) = *(unsigned __int8 *)(v43 + v44[13]);
  swift_bridgeObjectRetain();
  uint64_t v49 = v42;
  if (v41 == 1)
  {
    sub_100059090((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v50 = *(void *)(v43 + v44[12]);
    swift_retain();
  }
  else
  {
    uint64_t v50 = sub_1000B3C70();
    sub_100059090((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  }
  uint64_t v51 = v93;
  *(uint64_t *)((char *)v16 + v14[11]) = v50;
  char v52 = sub_1000B3970();
  uint64_t v53 = v82;
  sub_100059028(v39, v82, type metadata accessor for LargeSquareTileViewToggleStyle);
  uint64_t v54 = v98;
  if ((v52 & 1) == 0)
  {
    sub_100059090(v53, type metadata accessor for LargeSquareTileViewToggleStyle);
    uint64_t v56 = v96;
    goto LABEL_12;
  }
  char v55 = *(unsigned char *)(v53 + *(int *)(v103 + 28) + (uint64_t)*(int *)(v49 + 24) + v44[13]);
  sub_100059090(v53, type metadata accessor for LargeSquareTileViewToggleStyle);
  uint64_t v56 = v96;
  if ((v55 & 1) == 0)
  {
LABEL_12:
    uint64_t v61 = sub_10006B174();
    swift_retain();
    uint64_t v59 = v95;
    uint64_t v57 = v92;
    goto LABEL_13;
  }
  uint64_t v57 = v92;
  sub_10007F150(v92);
  sub_1000B3E00();
  char v58 = sub_1000B3DE0();
  uint64_t v59 = v95;
  uint64_t v60 = *(void (**)(char *, uint64_t))(v95 + 8);
  v60(v51, v56);
  v60((char *)v57, v56);
  if (v58)
  {
    uint64_t v61 = sub_1000B3C60();
  }
  else
  {
    if (qword_1000D4EF8 != -1) {
      swift_once();
    }
    uint64_t v61 = qword_1000DCCC0;
    swift_retain();
  }
LABEL_13:
  char v62 = sub_1000B39D0();
  uint64_t v63 = v105;
  sub_100059028((uint64_t)v16, v105, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
  uint64_t v64 = v63 + *(int *)(v86 + 36);
  *(void *)uint64_t v64 = v61;
  *(unsigned char *)(v64 + 8) = v62;
  sub_100059090((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
  sub_10007F150(v57);
  sub_1000B3DF0();
  char v65 = sub_1000B3DE0();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v59 + 8);
  v66(v51, v56);
  v66((char *)v57, v56);
  if (v65) {
    sub_1000B3D70();
  }
  else {
    sub_1000B3D80();
  }
  uint64_t v67 = (uint64_t)v91;
  uint64_t v69 = v99;
  uint64_t v68 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(&v91[*(int *)(v87 + 36)], v54, v100);
  uint64_t v70 = v105;
  sub_1000206A0(v105, v67, &qword_1000D61A0);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v54, v68);
  sub_100017B5C(v70, &qword_1000D61A0);
  uint64_t v71 = v89;
  sub_1000206A0(v67, v89, &qword_1000D61A8);
  uint64_t v72 = v71 + *(int *)(v88 + 52);
  uint64_t v73 = sub_1000B2F60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(v72, v84, v73);
  sub_100017B5C(v67, &qword_1000D61A8);
  uint64_t v74 = v94;
  sub_10006B62C(v71, v94, &qword_1000D61B0);
  uint64_t v75 = v104;
  uint64_t v76 = v90;
  sub_100059028(v104, v90, type metadata accessor for AccentableBackgroundView);
  uint64_t v77 = v97;
  sub_1000206A0(v74, v97, &qword_1000D61B0);
  uint64_t v78 = v101;
  sub_100059028(v76, v101, type metadata accessor for AccentableBackgroundView);
  uint64_t v79 = sub_100004210(&qword_1000D64D8);
  sub_1000206A0(v77, v78 + *(int *)(v79 + 48), &qword_1000D61B0);
  sub_100017B5C(v74, &qword_1000D61B0);
  sub_100059090(v75, type metadata accessor for AccentableBackgroundView);
  sub_100017B5C(v77, &qword_1000D61B0);
  return sub_100059090(v76, type metadata accessor for AccentableBackgroundView);
}

uint64_t sub_1000512FC(uint64_t *a1)
{
  uint64_t v1 = a1[2];
  uint64_t v29 = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = a1[3];
    uint64_t v4 = type metadata accessor for AccessoryAndSceneEntity();
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = *(void *)(v4 - 8);
    uint64_t result = v4 - 8;
    uint64_t v23 = v1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v10 = v3;
    uint64_t v25 = v3;
    uint64_t v26 = v2;
    while (1)
    {
      uint64_t v11 = v2 >= v10 ? v10 : v2;
      uint64_t v12 = v5 + v3;
      if (__OFADD__(v5, v3)) {
        break;
      }
      if (v2 >= v12) {
        uint64_t v13 = v5 + v3;
      }
      else {
        uint64_t v13 = v2;
      }
      if (v13 < v5) {
        goto LABEL_28;
      }
      if (v5 < 0) {
        goto LABEL_29;
      }
      sub_1000B4850();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v14 = v1;
      uint64_t v15 = (void *)swift_dynamicCastClass();
      if (!v15)
      {
        sub_100067C28((uint64_t)&v29);
        uint64_t v15 = _swiftEmptyArrayStorage;
      }
      uint64_t v16 = v15[2];
      swift_release();
      if (v11 + v6 == v16)
      {
        uint64_t v1 = v14;
        uint64_t v17 = (void *)swift_dynamicCastClass();
        if (!v17)
        {
          sub_100067C28((uint64_t)&v29);
          uint64_t v17 = _swiftEmptyArrayStorage;
        }
      }
      else
      {
        sub_100067C28((uint64_t)&v29);
        uint64_t v1 = v14;
        uint64_t v17 = sub_10002AEF8(v14, v23, v5, (2 * v13) | 1);
      }
      sub_100067C28((uint64_t)&v29);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100075CC4(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v19 = v9[2];
      unint64_t v18 = v9[3];
      if (v19 >= v18 >> 1)
      {
        uint64_t result = (uint64_t)sub_100075CC4((void *)(v18 > 1), v19 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      void v9[2] = v19 + 1;
      v9[v19 + 4] = v17;
      uint64_t v2 = v26;
      if (v12 < v26)
      {
        uint64_t v3 = v25;
        v10 += v25;
        v6 -= v25;
        v5 += v25;
        if (!v19) {
          continue;
        }
      }
      goto LABEL_26;
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
LABEL_26:
    sub_100056BD0((uint64_t)v9);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    uint64_t v27 = *a1;
    char v28 = *((unsigned char *)a1 + 8);
    uint64_t v20 = swift_allocObject();
    long long v21 = *((_OWORD *)a1 + 1);
    *(_OWORD *)(v20 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v20 + 32) = v21;
    *(_OWORD *)(v20 + 48) = *((_OWORD *)a1 + 2);
    *(void *)(v20 + 64) = a1[6];
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_100067AF4;
    *(void *)(v22 + 24) = v20;
    sub_100067B2C((uint64_t)&v29);
    sub_100067B58((uint64_t)&v27);
    sub_100004210(&qword_1000D61F0);
    sub_100004210(&qword_1000D61F8);
    sub_10001FF28(&qword_1000D6200, &qword_1000D61F0);
    sub_100067B88();
    return sub_1000B3D60();
  }
  return result;
}

uint64_t sub_10005165C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100004210(&qword_1000D6218);
  uint64_t result = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = v10 - v11;
  if (__OFSUB__(v10, v11))
  {
    __break(1u);
    return result;
  }
  uint64_t v13 = *(void *)a2;
  char v14 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v14);
  char v15 = sub_10007E9FC(v13, v14);
  sub_1000441FC(v13, v14);
  double v16 = *(double *)(a2 + 40);
  double v17 = *(double *)(a2 + 48);
  sub_100044118(v13, v14);
  char v18 = sub_10007E9FC(v13, v14);
  sub_1000441FC(v13, v14);
  if (v18) {
    double v19 = 16.0;
  }
  else {
    double v19 = 0.0;
  }
  int v20 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned char *)(a2 + 32))
  {
    char v21 = sub_1000B4830();
    swift_bridgeObjectRelease();
    if (v21)
    {
      double v22 = v16 - v19;
    }
    else
    {
      sub_100044118(v13, v14);
      char v23 = sub_10007E9FC(v13, v14);
      sub_1000441FC(v13, v14);
      double v24 = 8.0;
      if (v23) {
        double v24 = 24.0;
      }
      double v22 = (v16 - v24) * 0.5;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    double v22 = v16 - v19;
  }
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    sub_100044118(v13, v14);
    char v28 = sub_10007E9FC(v13, v14);
    sub_1000441FC(v13, v14);
    double v29 = 8.0;
    if (v28) {
      double v29 = 24.0;
    }
    double v27 = (v17 - v29) * 0.5;
    goto LABEL_20;
  }
  char v25 = sub_1000B4830();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_17;
  }
  sub_100044118(v13, v14);
  char v26 = sub_10007E9FC(v13, v14);
  sub_1000441FC(v13, v14);
  double v17 = v16;
  double v27 = v22;
  if (v26) {
    goto LABEL_17;
  }
LABEL_20:
  double v30 = 8.0;
  double v31 = (double)v12 * 8.0;
  if (v15) {
    double v30 = 24.0;
  }
  double v32 = (v16 - v30) * 0.5 * (double)v12;
  *(void *)uint64_t v9 = sub_1000B3800();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  sub_100004210(&qword_1000D6220);
  uint64_t v33 = swift_bridgeObjectRetain();
  size_t v34 = sub_10005682C(v33);
  swift_bridgeObjectRelease();
  *(void *)&long long v41 = v34;
  swift_getKeyPath();
  uint64_t v44 = *(void *)(a2 + 16);
  uint64_t v35 = swift_allocObject();
  *(double *)(v35 + 16) = v22;
  *(double *)(v35 + 24) = v27;
  long long v36 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v35 + 48) = v36;
  *(_OWORD *)(v35 + 64) = *(_OWORD *)(a2 + 32);
  *(void *)(v35 + 80) = *(void *)(a2 + 48);
  *(void *)(v35 + 88) = a1;
  *(double *)(v35 + 96) = v31;
  *(double *)(v35 + 104) = v32;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_100067CA0;
  *(void *)(v37 + 24) = v35;
  sub_100044118(v13, v14);
  swift_bridgeObjectRetain();
  sub_100067B2C((uint64_t)&v44);
  sub_100004210(&qword_1000D60B0);
  sub_100004210(&qword_1000D6228);
  sub_10001FF28(&qword_1000D60C0, &qword_1000D60B0);
  sub_10001FF28(&qword_1000D6230, &qword_1000D6228);
  sub_1000B3D60();
  sub_1000B3DA0();
  sub_1000B3660();
  sub_1000206A0((uint64_t)v9, a3, &qword_1000D6218);
  char v38 = (_OWORD *)(a3 + *(int *)(sub_100004210(&qword_1000D61F8) + 36));
  long long v39 = v42;
  *char v38 = v41;
  v38[1] = v39;
  v38[2] = v43;
  return sub_100017B5C((uint64_t)v9, &qword_1000D6218);
}

uint64_t sub_100051B88@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v68 = a4;
  unint64_t v70 = a1;
  uint64_t v72 = a5;
  uint64_t v11 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  char v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TileView(0);
  __chkstk_darwin(v15 - 8);
  double v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004210(&qword_1000D6238);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  char v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004210(&qword_1000D6240);
  __chkstk_darwin(v22);
  double v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004210(&qword_1000D6248);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v71 = (uint64_t)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  double v30 = (char *)&v66 - v29;
  __chkstk_darwin(v28);
  uint64_t v73 = (uint64_t)&v66 - v31;
  uint64_t v32 = sub_100059028(a2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  double v33 = nullsub_1(v32, a6, a7);
  unint64_t v69 = a3;
  LODWORD(v67) = *(unsigned __int8 *)(a3 + 32);
  sub_10008F814((uint64_t)v14, v67, (uint64_t)v17, v33, v34);
  sub_1000B3DA0();
  sub_1000B3660();
  sub_100059028((uint64_t)v17, (uint64_t)v21, type metadata accessor for TileView);
  uint64_t v35 = &v21[*(int *)(v19 + 44)];
  long long v36 = v92;
  *(_OWORD *)uint64_t v35 = v91;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v93;
  sub_100059090((uint64_t)v17, type metadata accessor for TileView);
  sub_1000206A0((uint64_t)v21, (uint64_t)v24, &qword_1000D6238);
  uint64_t v37 = &v24[*(int *)(v22 + 52)];
  uint64_t v38 = sub_1000B2F60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v37, a2, v38);
  uint64_t v39 = (uint64_t)v21;
  uint64_t v40 = 0xD000000000000011;
  sub_100017B5C(v39, &qword_1000D6238);
  unint64_t v81 = 0;
  unint64_t v82 = 0xE000000000000000;
  sub_1000B45C0(37);
  swift_bridgeObjectRelease();
  unint64_t v81 = 0xD000000000000023;
  unint64_t v82 = 0x80000001000B9990;
  uint64_t v41 = *(int *)(v12 + 32);
  long long v42 = (uint64_t *)(a2 + *(int *)(type metadata accessor for WidgetTileInfo() + 28) + v41);
  if (v42[1])
  {
    uint64_t v40 = *v42;
    long long v43 = (void *)v42[1];
  }
  else
  {
    long long v43 = (void *)0x80000001000B9930;
  }
  swift_bridgeObjectRetain();
  v99._countAndFlagsBits = v40;
  v99._object = v43;
  sub_1000B4090(v99);
  swift_bridgeObjectRelease();
  *(void *)&long long v74 = 32;
  *((void *)&v74 + 1) = 0xE100000000000000;
  uint64_t v94 = 0;
  unint64_t v95 = 0xE000000000000000;
  sub_100004BC8();
  sub_1000B4440();
  swift_bridgeObjectRelease();
  sub_10001FF28(&qword_1000D6250, &qword_1000D6240);
  sub_1000B3C00();
  swift_bridgeObjectRelease();
  sub_100017B5C((uint64_t)v24, &qword_1000D6240);
  sub_10006B62C((uint64_t)v30, v73, &qword_1000D6248);
  uint64_t v44 = *(void *)(v68 + 16);
  if (v44 >= *(void *)(v69 + 24) || v44 - 1 != v70)
  {
    long long v45 = 0uLL;
    if (v70)
    {
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      char v51 = 1;
    }
    else
    {
      if (v67 == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v52 = sub_1000B4830();
        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {
          uint64_t v46 = 0;
          uint64_t v47 = 0;
          uint64_t v48 = 0;
          uint64_t v49 = 0;
          uint64_t v50 = 0;
          char v51 = 1;
          long long v45 = 0uLL;
          goto LABEL_14;
        }
      }
      sub_1000B3DA0();
      uint64_t v46 = 1;
      sub_1000B3660();
      char v51 = 0;
      uint64_t v47 = v94;
      uint64_t v48 = v95;
      uint64_t v49 = v96;
      uint64_t v50 = v97;
      long long v45 = v98;
    }
LABEL_14:
    *(void *)&long long v74 = 0;
    *((void *)&v74 + 1) = v46;
    uint64_t v75 = v47;
    uint64_t v76 = v48;
    uint64_t v77 = v49;
    uint64_t v78 = v50;
    long long v79 = v45;
    LOBYTE(v80) = v51;
    HIBYTE(v80) = 1;
    goto LABEL_15;
  }
  sub_1000B3DA0();
  sub_1000B3660();
  long long v74 = xmmword_1000B69B0;
  uint64_t v75 = v94;
  uint64_t v76 = v95;
  uint64_t v77 = v96;
  uint64_t v78 = v97;
  long long v79 = v98;
  __int16 v80 = 0;
LABEL_15:
  sub_100004210(&qword_1000D6180);
  sub_100004210(&qword_1000D6258);
  sub_10005BFB4();
  sub_100067CB4(&qword_1000D6260, &qword_1000D6258, (void (*)(void))sub_10005BFB4);
  sub_1000B3920();
  unint64_t v70 = v81;
  unint64_t v69 = v82;
  uint64_t v68 = v83;
  uint64_t v67 = v84;
  uint64_t v53 = v85;
  uint64_t v54 = v86;
  uint64_t v55 = v87;
  uint64_t v56 = v88;
  char v57 = v89;
  char v58 = v90;
  uint64_t v59 = v73;
  uint64_t v60 = v71;
  sub_1000206A0(v73, v71, &qword_1000D6248);
  uint64_t v61 = v72;
  sub_1000206A0(v60, v72, &qword_1000D6248);
  uint64_t v62 = v61 + *(int *)(sub_100004210(&qword_1000D6268) + 48);
  unint64_t v63 = v69;
  *(void *)uint64_t v62 = v70;
  *(void *)(v62 + 8) = v63;
  uint64_t v64 = v67;
  *(void *)(v62 + 16) = v68;
  *(void *)(v62 + 24) = v64;
  *(void *)(v62 + 32) = v53;
  *(void *)(v62 + 40) = v54;
  *(void *)(v62 + 48) = v55;
  *(void *)(v62 + 56) = v56;
  *(unsigned char *)(v62 + 64) = v57;
  *(unsigned char *)(v62 + 65) = v58;
  sub_100017B5C(v59, &qword_1000D6248);
  return sub_100017B5C(v60, &qword_1000D6248);
}

uint64_t sub_100052430@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100004210(&qword_1000D61D8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *(_OWORD *)(v1 + 16);
  v11[0] = *(_OWORD *)v1;
  v11[1] = v6;
  v11[2] = *(_OWORD *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 48);
  *(void *)uint64_t v5 = sub_1000B3880();
  *((void *)v5 + 1) = 0;
  unsigned char v5[16] = 1;
  sub_100004210(&qword_1000D61E0);
  sub_1000512FC((uint64_t *)v11);
  sub_1000B3DA0();
  sub_1000B3660();
  sub_1000206A0((uint64_t)v5, a1, &qword_1000D61D8);
  uint64_t v7 = (_OWORD *)(a1 + *(int *)(sub_100004210(&qword_1000D61E8) + 36));
  long long v8 = v10[1];
  _OWORD *v7 = v10[0];
  v7[1] = v8;
  v7[2] = v10[2];
  return sub_100017B5C((uint64_t)v5, &qword_1000D61D8);
}

uint64_t sub_100052560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = type metadata accessor for WidgetViewsForMediumSystemFamily(0);
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v32 = v5;
  uint64_t v33 = a1;
  uint64_t v34 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + *(int *)(v4 + 32));
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(a1 + *(int *)(v4 + 36));
    uint64_t v9 = type metadata accessor for AccessoryAndSceneEntity();
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v13 = *(void *)(v9 - 8);
    uint64_t result = v9 - 8;
    uint64_t v30 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    char v14 = _swiftEmptyArrayStorage;
    uint64_t v15 = v8;
    uint64_t v36 = v8;
    uint64_t v37 = v7;
    while (1)
    {
      uint64_t v16 = v7 >= v15 ? v15 : v7;
      uint64_t v17 = v10 + v8;
      if (__OFADD__(v10, v8)) {
        break;
      }
      if (v7 >= v17) {
        uint64_t v18 = v10 + v8;
      }
      else {
        uint64_t v18 = v7;
      }
      if (v18 < v10) {
        goto LABEL_28;
      }
      if (v10 < 0) {
        goto LABEL_29;
      }
      sub_1000B4850();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v19 = (void *)swift_dynamicCastClass();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = _swiftEmptyArrayStorage;
      }
      uint64_t v20 = v19[2];
      swift_release();
      if (v16 + v11 == v20)
      {
        char v21 = (void *)swift_dynamicCastClass();
        if (!v21)
        {
          swift_bridgeObjectRelease();
          char v21 = _swiftEmptyArrayStorage;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        char v21 = sub_10002AEF8(v6, v30, v10, (2 * v18) | 1);
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100075CC4(0, v14[2] + 1, 1, v14);
        char v14 = (void *)result;
      }
      unint64_t v23 = v14[2];
      unint64_t v22 = v14[3];
      if (v23 >= v22 >> 1)
      {
        uint64_t result = (uint64_t)sub_100075CC4((void *)(v22 > 1), v23 + 1, 1, v14);
        char v14 = (void *)result;
      }
      void v14[2] = v23 + 1;
      v14[v23 + 4] = v21;
      uint64_t v7 = v37;
      if (v17 < v37)
      {
        uint64_t v8 = v36;
        v15 += v36;
        v11 -= v36;
        v10 += v36;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_26;
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
    char v14 = _swiftEmptyArrayStorage;
LABEL_26:
    uint64_t v24 = sub_100056BD0((uint64_t)v14);
    swift_bridgeObjectRelease();
    uint64_t v38 = v24;
    swift_getKeyPath();
    uint64_t v25 = v34;
    sub_100059028(v33, v34, type metadata accessor for WidgetViewsForMediumSystemFamily);
    unint64_t v26 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v27 = swift_allocObject();
    sub_10005BB70(v25, v27 + v26, type metadata accessor for WidgetViewsForMediumSystemFamily);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_100067E60;
    *(void *)(v28 + 24) = v27;
    sub_100004210(&qword_1000D61F0);
    sub_100004210(&qword_1000D6290);
    sub_10001FF28(&qword_1000D6200, &qword_1000D61F0);
    sub_100067EE8();
    return sub_1000B3D60();
  }
  return result;
}

uint64_t sub_100052950@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v5 = sub_100004210(&qword_1000D62A8);
  __chkstk_darwin(v5 - 8);
  uint64_t v50 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for WidgetViewsForMediumSystemFamily(0);
  uint64_t v47 = *((void *)v7 - 1);
  uint64_t v8 = *(void *)(v47 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v48 = (uint64_t)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v46 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v46 - v14;
  uint64_t v16 = a2 + *(int *)(v13 + 20);
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_100044118(*(void *)v16, v18);
  char v19 = sub_10007E9FC(v17, v18);
  sub_1000441FC(v17, v18);
  sub_100059028(a2, (uint64_t)v15, type metadata accessor for WidgetViewsForMediumSystemFamily);
  if (v19)
  {
    if (!v15[v7[8]])
    {
      swift_bridgeObjectRelease();
      sub_100059090((uint64_t)v15, type metadata accessor for WidgetViewsForMediumSystemFamily);
LABEL_7:
      double v21 = (*(double *)(a2 + v7[9]) + -24.0) * 0.5;
      goto LABEL_9;
    }
    char v20 = sub_1000B4830();
    swift_bridgeObjectRelease();
    sub_100059090((uint64_t)v15, type metadata accessor for WidgetViewsForMediumSystemFamily);
    if (v20) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_100059090((uint64_t)v15, type metadata accessor for WidgetViewsForMediumSystemFamily);
  }
  double v21 = *(double *)(a2 + v7[10]);
LABEL_9:
  uint64_t v22 = *(void *)v16;
  char v23 = *(unsigned char *)(v16 + 8);
  sub_100044118(*(void *)v16, v23);
  char v24 = sub_10007E9FC(v22, v23);
  sub_1000441FC(v22, v23);
  sub_100059028(a2, (uint64_t)v12, type metadata accessor for WidgetViewsForMediumSystemFamily);
  if (v24)
  {
    uint64_t v25 = v50;
    if (!v12[v7[8]])
    {
      swift_bridgeObjectRelease();
      sub_100059090((uint64_t)v12, type metadata accessor for WidgetViewsForMediumSystemFamily);
LABEL_15:
      double v27 = (*(double *)(a2 + v7[9] + 8) + -24.0) * 0.5;
      goto LABEL_17;
    }
    char v26 = sub_1000B4830();
    swift_bridgeObjectRelease();
    sub_100059090((uint64_t)v12, type metadata accessor for WidgetViewsForMediumSystemFamily);
    if (v26) {
      goto LABEL_15;
    }
  }
  else
  {
    sub_100059090((uint64_t)v12, type metadata accessor for WidgetViewsForMediumSystemFamily);
    uint64_t v25 = v50;
  }
  double v27 = *(double *)(a2 + v7[11]);
LABEL_17:
  uint64_t result = sub_1000B3800();
  *(void *)uint64_t v25 = result;
  *((void *)v25 + 1) = 0;
  v25[16] = 1;
  uint64_t v29 = *(void *)(a2 + v7[7]);
  uint64_t v30 = *(void *)(a1 + 16);
  uint64_t v31 = v29 - v30;
  if (__OFSUB__(v29, v30))
  {
    __break(1u);
  }
  else
  {
    uint64_t v50 = &v25[*(int *)(sub_100004210(&qword_1000D62B0) + 44)];
    double v32 = v21 * (double)v31;
    double v33 = *(double *)(a2 + v7[12]) * (double)v31;
    uint64_t v34 = swift_bridgeObjectRetain();
    size_t v35 = sub_10005682C(v34);
    swift_bridgeObjectRelease();
    *(void *)&long long v51 = v35;
    v46[1] = swift_getKeyPath();
    uint64_t v36 = v48;
    sub_100059028(a2, v48, type metadata accessor for WidgetViewsForMediumSystemFamily);
    uint64_t v37 = (uint64_t)v25;
    unint64_t v38 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    unint64_t v39 = (v8 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = swift_allocObject();
    *(double *)(v41 + 16) = v21;
    *(double *)(v41 + 24) = v27;
    sub_10005BB70(v36, v41 + v38, type metadata accessor for WidgetViewsForMediumSystemFamily);
    *(void *)(v41 + v39) = a1;
    *(double *)(v41 + v40) = v33;
    *(double *)(v41 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8)) = v32;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_1000680E0;
    *(void *)(v42 + 24) = v41;
    swift_bridgeObjectRetain();
    sub_100004210(&qword_1000D60B0);
    sub_100004210(&qword_1000D62B8);
    sub_10001FF28(&qword_1000D60C0, &qword_1000D60B0);
    sub_10001FF28(&qword_1000D62C0, &qword_1000D62B8);
    sub_1000B3D60();
    sub_1000B3DA0();
    sub_1000B3660();
    uint64_t v43 = v49;
    sub_1000206A0(v37, v49, &qword_1000D62A8);
    uint64_t v44 = (_OWORD *)(v43 + *(int *)(sub_100004210(&qword_1000D6290) + 36));
    long long v45 = v52;
    *uint64_t v44 = v51;
    v44[1] = v45;
    v44[2] = v53;
    return sub_100017B5C(v37, &qword_1000D62A8);
  }
  return result;
}

uint64_t sub_100053000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v85 = a4;
  uint64_t v88 = a1;
  uint64_t v89 = a5;
  uint64_t v11 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TileView(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100004210(&qword_1000D6238);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  double v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004210(&qword_1000D6240);
  __chkstk_darwin(v22);
  char v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004210(&qword_1000D6248);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v87 = (uint64_t)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v76 - v29;
  __chkstk_darwin(v28);
  uint64_t v90 = (uint64_t)&v76 - v31;
  uint64_t v32 = sub_100059028(a2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  double v33 = nullsub_1(v32, a6, a7);
  double v35 = v34;
  uint64_t v84 = type metadata accessor for WidgetViewsForMediumSystemFamily(0);
  uint64_t v36 = *(int *)(v84 + 32);
  uint64_t v86 = a3;
  sub_10008F814((uint64_t)v14, *(unsigned char *)(a3 + v36), (uint64_t)v17, v33, v35);
  sub_1000B3DA0();
  uint64_t v37 = 0xD000000000000011;
  sub_1000B3660();
  sub_100059028((uint64_t)v17, (uint64_t)v21, type metadata accessor for TileView);
  unint64_t v38 = &v21[*(int *)(v19 + 44)];
  long long v39 = v94;
  *(_OWORD *)unint64_t v38 = v93;
  *((_OWORD *)v38 + 1) = v39;
  *((_OWORD *)v38 + 2) = v95;
  sub_100059090((uint64_t)v17, type metadata accessor for TileView);
  sub_1000206A0((uint64_t)v21, (uint64_t)v24, &qword_1000D6238);
  unint64_t v40 = &v24[*(int *)(v22 + 52)];
  uint64_t v41 = sub_1000B2F60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v40, a2, v41);
  sub_100017B5C((uint64_t)v21, &qword_1000D6238);
  unint64_t v102 = 0;
  unint64_t v103 = 0xE000000000000000;
  sub_1000B45C0(44);
  swift_bridgeObjectRelease();
  unint64_t v102 = 0xD00000000000002ALL;
  unint64_t v103 = 0x80000001000B99C0;
  uint64_t v42 = *(int *)(v12 + 32);
  uint64_t v43 = (uint64_t *)(a2 + *(int *)(type metadata accessor for WidgetTileInfo() + 28) + v42);
  if (v43[1])
  {
    uint64_t v37 = *v43;
    uint64_t v44 = (void *)v43[1];
  }
  else
  {
    uint64_t v44 = (void *)0x80000001000B9930;
  }
  swift_bridgeObjectRetain();
  v108._countAndFlagsBits = v37;
  v108._object = v44;
  sub_1000B4090(v108);
  swift_bridgeObjectRelease();
  uint64_t v96 = 32;
  unint64_t v97 = 0xE100000000000000;
  uint64_t v91 = 0;
  unint64_t v92 = 0xE000000000000000;
  sub_100004BC8();
  sub_1000B4440();
  swift_bridgeObjectRelease();
  sub_10001FF28(&qword_1000D6250, &qword_1000D6240);
  sub_1000B3C00();
  swift_bridgeObjectRelease();
  sub_100017B5C((uint64_t)v24, &qword_1000D6240);
  sub_10006B62C((uint64_t)v30, v90, &qword_1000D6248);
  uint64_t v45 = 0;
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  uint64_t v51 = 0;
  uint64_t v52 = *(void *)(v85 + 16);
  uint64_t v53 = v88;
  uint64_t v54 = v86;
  uint64_t v55 = v84;
  if (v52 - 2 >= v88)
  {
    sub_1000B3DA0();
    uint64_t v45 = 1;
    sub_1000B3660();
    uint64_t v46 = v96;
    uint64_t v47 = v97;
    uint64_t v48 = v98;
    uint64_t v49 = v99;
    uint64_t v50 = v100;
    uint64_t v51 = v101;
  }
  BOOL v56 = v52 < *(void *)(v54 + *(int *)(v55 + 28)) && v52 - 1 == v53;
  int v57 = !v56;
  uint64_t v85 = v45;
  uint64_t v83 = v46;
  uint64_t v82 = v47;
  uint64_t v81 = v48;
  uint64_t v80 = v49;
  uint64_t v79 = v50;
  uint64_t v78 = v51;
  LODWORD(v86) = v57;
  if (v56)
  {
    sub_1000B3DA0();
    uint64_t v84 = 1;
    sub_1000B3660();
    unint64_t v77 = v102;
    uint64_t v58 = v103;
    uint64_t v59 = v104;
    uint64_t v60 = v105;
    uint64_t v61 = v106;
    uint64_t v62 = v107;
  }
  else
  {
    uint64_t v84 = 0;
    unint64_t v77 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
  }
  BOOL v63 = v52 - 2 < v53;
  uint64_t v64 = v90;
  uint64_t v65 = v87;
  sub_1000206A0(v90, v87, &qword_1000D6248);
  uint64_t v66 = v89;
  sub_1000206A0(v65, v89, &qword_1000D6248);
  uint64_t v67 = sub_100004210(&qword_1000D62C8);
  uint64_t v68 = v66 + *(int *)(v67 + 48);
  uint64_t v69 = v85;
  *(void *)uint64_t v68 = 0;
  *(void *)(v68 + 8) = v69;
  uint64_t v70 = v82;
  *(void *)(v68 + 16) = v83;
  *(void *)(v68 + 24) = v70;
  uint64_t v71 = v80;
  *(void *)(v68 + 32) = v81;
  *(void *)(v68 + 40) = v71;
  uint64_t v72 = v78;
  *(void *)(v68 + 48) = v79;
  *(void *)(v68 + 56) = v72;
  *(unsigned char *)(v68 + 64) = v63;
  uint64_t v73 = v66 + *(int *)(v67 + 64);
  uint64_t v74 = v84;
  *(void *)uint64_t v73 = 0;
  *(void *)(v73 + 8) = v74;
  *(void *)(v73 + 16) = v77;
  *(void *)(v73 + 24) = v58;
  *(void *)(v73 + 32) = v59;
  *(void *)(v73 + 40) = v60;
  *(void *)(v73 + 48) = v61;
  *(void *)(v73 + 56) = v62;
  *(unsigned char *)(v73 + 64) = v86;
  sub_100017B5C(v64, &qword_1000D6248);
  return sub_100017B5C(v65, &qword_1000D6248);
}

uint64_t sub_10005377C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004210(&qword_1000D6278);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_1000B3880();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v7 = sub_100004210(&qword_1000D6280);
  sub_100052560(v2, (uint64_t)&v6[*(int *)(v7 + 44)]);
  sub_1000B3DA0();
  sub_1000B3660();
  sub_1000206A0((uint64_t)v6, a1, &qword_1000D6278);
  uint64_t v8 = (_OWORD *)(a1 + *(int *)(sub_100004210(&qword_1000D6288) + 36));
  long long v9 = v11[1];
  *uint64_t v8 = v11[0];
  v8[1] = v9;
  v8[2] = v11[2];
  return sub_100017B5C((uint64_t)v6, &qword_1000D6278);
}

uint64_t sub_1000538A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v87 = a4;
  uint64_t v7 = sub_1000B3E30();
  uint64_t v85 = *(void *)(v7 - 8);
  uint64_t v86 = v7;
  __chkstk_darwin(v7);
  uint64_t v84 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B2FA0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000B3FF0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_100004210(&qword_1000D4F68);
  uint64_t v67 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100004210(&qword_1000D4F60);
  uint64_t v69 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100004210(&qword_1000D4F58);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v74 = v16;
  uint64_t v75 = v17;
  __chkstk_darwin(v16);
  uint64_t v66 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004210(&qword_1000D4F50);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v76 = v19;
  uint64_t v77 = v20;
  __chkstk_darwin(v19);
  uint64_t v70 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100004210(&qword_1000D4F48);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v78 = v22;
  uint64_t v79 = v23;
  __chkstk_darwin(v22);
  uint64_t v71 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004210(&qword_1000D4F40);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v80 = v25;
  uint64_t v81 = v26;
  __chkstk_darwin(v25);
  uint64_t v72 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100004210(&qword_1000D4F80);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v82 = v28;
  uint64_t v83 = v29;
  __chkstk_darwin(v28);
  uint64_t v73 = (char *)&v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a1;
  *(void *)(v31 + 24) = a2;
  *(unsigned char *)(v31 + 32) = a3;
  swift_bridgeObjectRetain_n();
  sub_100004210(&qword_1000D62D0);
  sub_100068254();
  sub_1000683B8();
  sub_1000B3E90();
  sub_1000B3FA0();
  sub_1000B2F90();
  uint64_t v88 = sub_1000B4030();
  uint64_t v89 = v32;
  uint64_t v33 = sub_10001FF28(&qword_1000D4F70, &qword_1000D4F68);
  unint64_t v34 = sub_100004BC8();
  sub_1000B38F0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v11);
  sub_1000B3FA0();
  sub_1000B2F90();
  uint64_t v92 = sub_1000B4030();
  uint64_t v93 = v35;
  uint64_t v88 = v11;
  uint64_t v89 = &type metadata for String;
  uint64_t v90 = v33;
  unint64_t v91 = v34;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v66;
  uint64_t v38 = v68;
  sub_1000B38B0();
  swift_bridgeObjectRelease();
  long long v39 = v15;
  uint64_t v40 = v38;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v38);
  sub_100004210(&qword_1000D6300);
  uint64_t v41 = sub_1000B3E50();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(void *)(v42 + 72);
  unint64_t v44 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1000B51A0;
  unint64_t v46 = v45 + v44;
  uint64_t v47 = *(void (**)(unint64_t, void, uint64_t))(v42 + 104);
  v47(v46, enum case for WidgetFamily.systemSmall(_:), v41);
  v47(v46 + v43, enum case for WidgetFamily.systemMedium(_:), v41);
  uint64_t v88 = v40;
  uint64_t v89 = &type metadata for String;
  uint64_t v90 = OpaqueTypeConformance2;
  unint64_t v91 = v34;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  uint64_t v49 = v70;
  uint64_t v50 = v74;
  sub_1000B38C0();
  swift_bridgeObjectRelease();
  uint64_t v51 = v50;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v37, v50);
  uint64_t v52 = v84;
  uint64_t v53 = v85;
  uint64_t v54 = v86;
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, enum case for WidgetBackgroundStyle.blur(_:), v86);
  uint64_t v88 = v51;
  uint64_t v89 = (void *)v48;
  uint64_t v55 = swift_getOpaqueTypeConformance2();
  BOOL v56 = v71;
  uint64_t v57 = v76;
  sub_1000B3900();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v57);
  uint64_t v88 = v57;
  uint64_t v89 = (void *)v55;
  uint64_t v58 = swift_getOpaqueTypeConformance2();
  uint64_t v59 = v72;
  uint64_t v60 = v78;
  sub_1000B38D0();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v56, v60);
  uint64_t v88 = v60;
  uint64_t v89 = (void *)v58;
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  uint64_t v62 = v73;
  uint64_t v63 = v80;
  sub_1000B3910();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v59, v63);
  uint64_t v88 = v63;
  uint64_t v89 = (void *)v61;
  swift_getOpaqueTypeConformance2();
  uint64_t v64 = v82;
  sub_1000B38E0();
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v62, v64);
}

uint64_t sub_10005431C@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v46 = sub_100004210(&qword_1000D6308);
  __chkstk_darwin(v46);
  uint64_t v48 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B39B0();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for HomeInteractiveWidgetsEntryView(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100004210(&qword_1000D6310);
  uint64_t v45 = *(void *)(v47 - 8);
  uint64_t v13 = __chkstk_darwin(v47);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v42 = (char *)&v39 - v16;
  uint64_t v17 = type metadata accessor for AccessoriesAndScenesEntry(0);
  sub_1000B2990();
  if (a2)
  {
    uint64_t v40 = v49;
    sub_1000B2990();
    char v18 = (char)v49;
    uint64_t v19 = *(int *)(v17 + 24);
    uint64_t v41 = a3;
    char v20 = *(unsigned char *)(a1 + v19);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v22 = swift_getKeyPath();
    *(void *)&v12[v10[6]] = swift_getKeyPath();
    sub_100004210(&qword_1000D5C80);
    swift_storeEnumTagMultiPayload();
    *(void *)uint64_t v12 = KeyPath;
    v12[8] = 0;
    *((void *)v12 + 2) = v22;
    *((void *)v12 + 3) = 0;
    *((void *)v12 + 4) = 0;
    *((void *)v12 + 5) = 0;
    v12[48] = 0;
    *(void *)&v12[v10[7]] = v40;
    v12[v10[8]] = v18;
    v12[v10[9]] = v20;
    uint64_t v23 = sub_1000B39A0();
    uint64_t v40 = (int *)&v39;
    __chkstk_darwin(v23);
    sub_1000B3DA0();
    uint64_t v24 = sub_100004210(&qword_1000D62E0);
    uint64_t v25 = sub_100058DF8(&qword_1000D62E8, (void (*)(uint64_t))type metadata accessor for HomeInteractiveWidgetsEntryView);
    unint64_t v38 = sub_10006834C();
    sub_1000B3BF0();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v44);
    sub_100059090((uint64_t)v12, type metadata accessor for HomeInteractiveWidgetsEntryView);
    uint64_t v26 = v45;
    uint64_t v27 = v42;
    uint64_t v28 = v47;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v15, v47);
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v48, v27, v28);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v10;
    uint64_t v50 = v24;
    uint64_t v51 = v25;
    unint64_t v52 = v38;
    swift_getOpaqueTypeConformance2();
    sub_1000B3920();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v27, v28);
  }
  else
  {
    uint64_t v30 = v49;
    sub_1000B2990();
    char v31 = (char)v49;
    char v32 = *(unsigned char *)(a1 + *(int *)(v17 + 24));
    uint64_t v33 = swift_getKeyPath();
    uint64_t v34 = swift_getKeyPath();
    *(void *)&v12[v10[6]] = swift_getKeyPath();
    sub_100004210(&qword_1000D5C80);
    swift_storeEnumTagMultiPayload();
    *(void *)uint64_t v12 = v33;
    v12[8] = 0;
    *((void *)v12 + 2) = v34;
    *((void *)v12 + 3) = 0;
    *((void *)v12 + 4) = 0;
    *((void *)v12 + 5) = 0;
    v12[48] = 0;
    *(void *)&v12[v10[7]] = v30;
    v12[v10[8]] = v31;
    v12[v10[9]] = v32;
    sub_100059028((uint64_t)v12, v48, type metadata accessor for HomeInteractiveWidgetsEntryView);
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = sub_100004B80(&qword_1000D62E0);
    uint64_t v36 = sub_100058DF8(&qword_1000D62E8, (void (*)(uint64_t))type metadata accessor for HomeInteractiveWidgetsEntryView);
    unint64_t v37 = sub_10006834C();
    uint64_t v49 = v10;
    uint64_t v50 = v35;
    uint64_t v51 = v36;
    unint64_t v52 = v37;
    swift_getOpaqueTypeConformance2();
    sub_1000B3920();
    return sub_100059090((uint64_t)v12, type metadata accessor for HomeInteractiveWidgetsEntryView);
  }
}

uint64_t sub_10005493C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = type metadata accessor for AccessoriesAndScenesEntry(0);
  uint64_t v5 = 0;
  if (!*(unsigned char *)(a1 + *(int *)(result + 24)))
  {
    sub_1000B3CC0();
    uint64_t v5 = sub_1000B3CA0();
    uint64_t result = swift_release();
  }
  *a2 = v5;
  return result;
}

unint64_t sub_1000549A0@<X0>(uint64_t a1@<X8>)
{
  unint64_t result = sub_1000584E0(0);
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_1000549D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000538A4(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_1000549E0()
{
  return sub_1000B3770();
}

Swift::Int sub_100054A04(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for AccessoryAndSceneEntity() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_10002C6C8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100054AAC(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100054AAC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v185 = sub_1000B3350();
  uint64_t v4 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  long long v184 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v176 = *(void *)(v187 - 8);
  uint64_t v6 = __chkstk_darwin(v187);
  uint64_t v172 = (uint64_t)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v189 = (uint64_t)&v166 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v199 = (uint64_t)&v166 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v198 = (uint64_t)&v166 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v177 = (uint64_t)&v166 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v174 = (uint64_t)&v166 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  char v20 = (char *)&v166 - v19;
  __chkstk_darwin(v18);
  uint64_t v168 = (uint64_t)&v166 - v21;
  Swift::Int v22 = a1[1];
  Swift::Int result = sub_1000B47F0(v22);
  if (result >= v22)
  {
    if (v22 < 0) {
      goto LABEL_192;
    }
    if (v22) {
      return sub_100055B58(0, v22, 1, a1);
    }
    return result;
  }
  if (v22 >= 0) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v22 + 1;
  }
  if (v22 < -1) {
    goto LABEL_200;
  }
  uint64_t v169 = v20;
  Swift::Int v167 = result;
  if (v22 < 2)
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
    unint64_t v175 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
    if (v22 != 1)
    {
      unint64_t v107 = _swiftEmptyArrayStorage[2];
      char v166 = _swiftEmptyArrayStorage;
      uint64_t v28 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_155;
    }
    uint64_t v178 = v1;
  }
  else
  {
    uint64_t v178 = v1;
    uint64_t v25 = v24 >> 1;
    uint64_t v26 = (void *)sub_1000B4140();
    void v26[2] = v25;
    char v20 = v169;
    unint64_t v175 = (unint64_t)v26
         + ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
  }
  char v166 = v26;
  Swift::Int v27 = 0;
  os_log_t v183 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v28 = (char *)_swiftEmptyArrayStorage;
  long long v179 = a1;
  do
  {
    Swift::Int v29 = v27 + 1;
    uint64_t v171 = v28;
    Swift::Int v173 = v27;
    if (v27 + 1 >= v22)
    {
      Swift::Int v35 = v27 + 1;
    }
    else
    {
      uint64_t v30 = *a1;
      Swift::Int v31 = v27;
      uint64_t v32 = *(void *)(v176 + 72);
      uint64_t v33 = v168;
      sub_100059028(*a1 + v32 * v29, v168, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v180 = v30;
      uint64_t v197 = v32;
      sub_100059028(v30 + v32 * v31, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v34 = v178;
      LODWORD(v190) = sub_100046A70(v33, (uint64_t)v20);
      uint64_t v178 = v34;
      if (v34)
      {
        sub_100059090((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_100059090(v33, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        goto LABEL_169;
      }
      sub_100059090((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      sub_100059090(v33, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      Swift::Int v35 = v31 + 2;
      if (v31 + 2 >= v22)
      {
        Swift::Int v27 = v31;
      }
      else
      {
        uint64_t v36 = v180;
        Swift::Int v181 = v197 * v35;
        uint64_t v182 = v197 * v29;
        uint64_t v188 = v22;
        while (1)
        {
          Swift::Int v186 = v35;
          uint64_t v37 = v174;
          sub_100059028(v36 + v181, v174, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          uint64_t v192 = v36;
          sub_100059028(v36 + v182, v177, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          uint64_t v38 = v187;
          uint64_t v39 = v37 + *(int *)(v187 + 24);
          uint64_t v40 = type metadata accessor for WidgetTileInfo();
          uint64_t v41 = (void (**)(char *, uint64_t))(v39 + *(int *)(v40 + 28));
          unint64_t v42 = (unint64_t)v41[1];
          if (v42) {
            uint64_t v43 = *v41;
          }
          else {
            uint64_t v43 = 0;
          }
          unint64_t v44 = 0xE000000000000000;
          if (v42) {
            unint64_t v44 = v42;
          }
          uint64_t v194 = v43;
          unint64_t v195 = v44;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v45 = v184;
          sub_1000B3340();
          uint64_t v191 = sub_1000B3330();
          unint64_t v196 = v46;
          uint64_t v47 = *v183;
          uint64_t v48 = v185;
          (*v183)(v45, v185);
          uint64_t v49 = (void *)(v177 + *(int *)(v38 + 24) + *(int *)(v40 + 28));
          unint64_t v50 = v49[1];
          uint64_t v51 = v50 ? (void (*)(char *, uint64_t))*v49 : 0;
          uint64_t v193 = v51;
          unint64_t v52 = v50 ? v50 : 0xE000000000000000;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_1000B3340();
          uint64_t v53 = sub_1000B3330();
          uint64_t v55 = v54;
          BOOL v56 = v45;
          uint64_t v57 = v194;
          v47(v56, v48);
          BOOL v58 = v57 == v193 && v195 == v52;
          if (v58 || (sub_1000B4830() & 1) != 0)
          {
            int v59 = v191 == v53 && v196 == v55 ? 0 : sub_1000B4830();
            Swift::Int v22 = v188;
          }
          else
          {
            int v59 = sub_1000B4830();
            Swift::Int v22 = v188;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100059090(v177, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          sub_100059090(v174, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          if ((v190 ^ v59)) {
            break;
          }
          Swift::Int v35 = v186 + 1;
          uint64_t v36 = v192 + v197;
          if (v22 == v186 + 1)
          {
            Swift::Int v35 = v22;
            a1 = v179;
            goto LABEL_46;
          }
        }
        a1 = v179;
        Swift::Int v35 = v186;
LABEL_46:
        Swift::Int v27 = v173;
      }
      if (v190)
      {
        if (v35 < v27) {
          goto LABEL_195;
        }
        if (v27 < v35)
        {
          uint64_t v188 = v22;
          uint64_t v60 = 0;
          uint64_t v61 = v197 * (v35 - 1);
          Swift::Int v62 = v35 * v197;
          Swift::Int v63 = v27;
          uint64_t v64 = v27 * v197;
          do
          {
            if (v63 != v35 + v60 - 1)
            {
              Swift::Int v66 = v35;
              uint64_t v67 = v180;
              if (!v180) {
                goto LABEL_198;
              }
              unint64_t v68 = v180 + v64;
              unint64_t v196 = v180 + v61;
              sub_10005BB70(v180 + v64, v172, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
              if (v64 < v61 || v68 >= v67 + v62)
              {
                uint64_t v65 = v196;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v65 = v196;
                if (v64 != v61) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_10005BB70(v172, v65, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
              Swift::Int v35 = v66;
            }
            ++v63;
            --v60;
            v61 -= v197;
            v62 -= v197;
            v64 += v197;
          }
          while (v63 < v35 + v60);
          Swift::Int v27 = v173;
          Swift::Int v22 = v188;
        }
      }
    }
    if (v35 < v22)
    {
      if (__OFSUB__(v35, v27)) {
        goto LABEL_191;
      }
      if (v35 - v27 < v167)
      {
        if (__OFADD__(v173, v167)) {
          goto LABEL_193;
        }
        if (v173 + v167 >= v22) {
          Swift::Int v69 = v22;
        }
        else {
          Swift::Int v69 = v173 + v167;
        }
        if (v69 >= v173)
        {
          if (v35 == v69)
          {
            Swift::Int v27 = v173;
            goto LABEL_102;
          }
          uint64_t v70 = *(void *)(v176 + 72);
          uint64_t v71 = v70 * (v35 - 1);
          uint64_t v180 = v70;
          Swift::Int v72 = v35 * v70;
          Swift::Int v170 = v69;
LABEL_75:
          uint64_t v74 = 0;
          Swift::Int v75 = v173;
          Swift::Int v186 = v35;
          Swift::Int v181 = v72;
          uint64_t v182 = v71;
          while (1)
          {
            uint64_t v192 = v75;
            uint64_t v76 = *a1;
            uint64_t v191 = (uint64_t)&v74[v72];
            uint64_t v77 = v198;
            sub_100059028((uint64_t)&v74[v72 + v76], v198, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            uint64_t v193 = (void (*)(char *, uint64_t))v74;
            uint64_t v190 = &v74[v71];
            uint64_t v78 = (uint64_t)&v74[v71 + v76];
            uint64_t v79 = v199;
            sub_100059028(v78, v199, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            uint64_t v80 = v187;
            uint64_t v81 = v77 + *(int *)(v187 + 24);
            uint64_t v82 = type metadata accessor for WidgetTileInfo();
            uint64_t v83 = (unint64_t *)(v81 + *(int *)(v82 + 28));
            unint64_t v84 = v83[1];
            if (v84) {
              unint64_t v85 = *v83;
            }
            else {
              unint64_t v85 = 0;
            }
            unint64_t v86 = 0xE000000000000000;
            if (v84) {
              unint64_t v86 = v84;
            }
            unint64_t v195 = v85;
            unint64_t v196 = v86;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v87 = v184;
            sub_1000B3340();
            uint64_t v188 = sub_1000B3330();
            uint64_t v197 = v88;
            uint64_t v194 = *v183;
            uint64_t v89 = v185;
            v194(v87, v185);
            uint64_t v90 = (uint64_t *)(v79 + *(int *)(v80 + 24) + *(int *)(v82 + 28));
            uint64_t v91 = v90[1];
            if (v91) {
              uint64_t v92 = *v90;
            }
            else {
              uint64_t v92 = 0;
            }
            if (v91) {
              unint64_t v93 = v90[1];
            }
            else {
              unint64_t v93 = 0xE000000000000000;
            }
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_1000B3340();
            uint64_t v94 = sub_1000B3330();
            uint64_t v96 = v95;
            unint64_t v97 = v87;
            unint64_t v98 = v195;
            v194(v97, v89);
            BOOL v99 = v98 == v92 && v196 == v93;
            if (v99 || (sub_1000B4830() & 1) != 0)
            {
              a1 = v179;
              if (v188 == v94 && v197 == v96)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                sub_100059090(v199, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
                sub_100059090(v198, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
LABEL_73:
                Swift::Int v73 = v186;
                Swift::Int v72 = v181;
                uint64_t v71 = v182;
LABEL_74:
                Swift::Int v35 = v73 + 1;
                v71 += v180;
                v72 += v180;
                if (v35 == v170)
                {
                  Swift::Int v35 = v170;
                  goto LABEL_101;
                }
                goto LABEL_75;
              }
              char v100 = sub_1000B4830();
            }
            else
            {
              char v100 = sub_1000B4830();
              a1 = v179;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100059090(v199, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            sub_100059090(v198, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            if ((v100 & 1) == 0) {
              goto LABEL_73;
            }
            uint64_t v101 = *a1;
            Swift::Int v72 = v181;
            uint64_t v71 = v182;
            if (!*a1) {
              goto LABEL_196;
            }
            unint64_t v102 = v193;
            uint64_t v103 = (uint64_t)v193 + v101 + v182;
            sub_10005BB70((uint64_t)v193 + v101 + v181, v189, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            swift_arrayInitWithTakeFrontToBack();
            sub_10005BB70(v189, v103, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
            uint64_t v74 = (char *)v102 - v180;
            Swift::Int v75 = v192 + 1;
            Swift::Int v73 = v186;
            if (v186 == v192 + 1) {
              goto LABEL_74;
            }
          }
        }
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        __break(1u);
LABEL_199:
        __break(1u);
LABEL_200:
        Swift::Int result = sub_1000B4680();
        __break(1u);
        return result;
      }
LABEL_101:
      Swift::Int v27 = v173;
    }
LABEL_102:
    if (v35 < v27) {
      goto LABEL_187;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v186 = v35;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v28 = v171;
    }
    else {
      uint64_t v28 = sub_10002BD1C(0, *((void *)v171 + 2) + 1, 1, v171);
    }
    unint64_t v106 = *((void *)v28 + 2);
    unint64_t v105 = *((void *)v28 + 3);
    unint64_t v107 = v106 + 1;
    if (v106 >= v105 >> 1) {
      uint64_t v28 = sub_10002BD1C((char *)(v105 > 1), v106 + 1, 1, v28);
    }
    *((void *)v28 + 2) = v107;
    Swift::String v108 = v28 + 32;
    uint64_t v109 = &v28[16 * v106 + 32];
    Swift::Int v110 = v186;
    *(void *)uint64_t v109 = v173;
    *((void *)v109 + 1) = v110;
    if (v106)
    {
      while (1)
      {
        unint64_t v111 = v107 - 1;
        if (v107 >= 4)
        {
          Swift::String v116 = &v108[16 * v107];
          uint64_t v117 = *((void *)v116 - 8);
          uint64_t v118 = *((void *)v116 - 7);
          BOOL v122 = __OFSUB__(v118, v117);
          uint64_t v119 = v118 - v117;
          if (v122) {
            goto LABEL_175;
          }
          uint64_t v121 = *((void *)v116 - 6);
          uint64_t v120 = *((void *)v116 - 5);
          BOOL v122 = __OFSUB__(v120, v121);
          uint64_t v114 = v120 - v121;
          char v115 = v122;
          if (v122) {
            goto LABEL_176;
          }
          unint64_t v123 = v107 - 2;
          uint64_t v124 = &v108[16 * v107 - 32];
          uint64_t v126 = *(void *)v124;
          uint64_t v125 = *((void *)v124 + 1);
          BOOL v122 = __OFSUB__(v125, v126);
          uint64_t v127 = v125 - v126;
          if (v122) {
            goto LABEL_178;
          }
          BOOL v122 = __OFADD__(v114, v127);
          uint64_t v128 = v114 + v127;
          if (v122) {
            goto LABEL_181;
          }
          if (v128 >= v119)
          {
            uint64_t v146 = &v108[16 * v111];
            uint64_t v148 = *(void *)v146;
            uint64_t v147 = *((void *)v146 + 1);
            BOOL v122 = __OFSUB__(v147, v148);
            uint64_t v149 = v147 - v148;
            if (v122) {
              goto LABEL_185;
            }
            BOOL v139 = v114 < v149;
            goto LABEL_139;
          }
        }
        else
        {
          if (v107 != 3)
          {
            uint64_t v140 = *((void *)v28 + 4);
            uint64_t v141 = *((void *)v28 + 5);
            BOOL v122 = __OFSUB__(v141, v140);
            uint64_t v133 = v141 - v140;
            char v134 = v122;
            goto LABEL_133;
          }
          uint64_t v113 = *((void *)v28 + 4);
          uint64_t v112 = *((void *)v28 + 5);
          BOOL v122 = __OFSUB__(v112, v113);
          uint64_t v114 = v112 - v113;
          char v115 = v122;
        }
        if (v115) {
          goto LABEL_177;
        }
        unint64_t v123 = v107 - 2;
        uint64_t v129 = &v108[16 * v107 - 32];
        uint64_t v131 = *(void *)v129;
        uint64_t v130 = *((void *)v129 + 1);
        BOOL v132 = __OFSUB__(v130, v131);
        uint64_t v133 = v130 - v131;
        char v134 = v132;
        if (v132) {
          goto LABEL_180;
        }
        long long v135 = &v108[16 * v111];
        uint64_t v137 = *(void *)v135;
        uint64_t v136 = *((void *)v135 + 1);
        BOOL v122 = __OFSUB__(v136, v137);
        uint64_t v138 = v136 - v137;
        if (v122) {
          goto LABEL_183;
        }
        if (__OFADD__(v133, v138)) {
          goto LABEL_184;
        }
        if (v133 + v138 >= v114)
        {
          BOOL v139 = v114 < v138;
LABEL_139:
          if (v139) {
            unint64_t v111 = v123;
          }
          goto LABEL_141;
        }
LABEL_133:
        if (v134) {
          goto LABEL_179;
        }
        uint64_t v142 = &v108[16 * v111];
        uint64_t v144 = *(void *)v142;
        uint64_t v143 = *((void *)v142 + 1);
        BOOL v122 = __OFSUB__(v143, v144);
        uint64_t v145 = v143 - v144;
        if (v122) {
          goto LABEL_182;
        }
        if (v145 < v133) {
          goto LABEL_150;
        }
LABEL_141:
        unint64_t v150 = v111 - 1;
        if (v111 - 1 >= v107)
        {
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
          goto LABEL_194;
        }
        if (!*a1) {
          goto LABEL_197;
        }
        Swift::String v151 = v28;
        Swift::String v152 = &v108[16 * v150];
        uint64_t v153 = *(void *)v152;
        uint64_t v154 = &v108[16 * v111];
        uint64_t v155 = *((void *)v154 + 1);
        uint64_t v156 = v178;
        sub_1000560C4(*a1 + *(void *)(v176 + 72) * *(void *)v152, *a1 + *(void *)(v176 + 72) * *(void *)v154, *a1 + *(void *)(v176 + 72) * v155, v175);
        uint64_t v178 = v156;
        if (v156) {
          goto LABEL_169;
        }
        if (v155 < v153) {
          goto LABEL_172;
        }
        if (v111 > *((void *)v151 + 2)) {
          goto LABEL_173;
        }
        *(void *)Swift::String v152 = v153;
        *(void *)&v108[16 * v150 + 8] = v155;
        unint64_t v157 = *((void *)v151 + 2);
        if (v111 >= v157) {
          goto LABEL_174;
        }
        unint64_t v107 = v157 - 1;
        memmove(&v108[16 * v111], v154 + 16, 16 * (v157 - 1 - v111));
        uint64_t v28 = v151;
        *((void *)v151 + 2) = v157 - 1;
        if (v157 <= 2) {
          goto LABEL_150;
        }
      }
    }
    unint64_t v107 = 1;
LABEL_150:
    Swift::Int v22 = a1[1];
    Swift::Int v27 = v186;
    char v20 = v169;
  }
  while (v186 < v22);
  uint64_t v2 = v178;
LABEL_155:
  uint64_t v178 = v2;
  if (v107 >= 2)
  {
    uint64_t v158 = *a1;
    do
    {
      unint64_t v159 = v107 - 2;
      if (v107 < 2) {
        goto LABEL_186;
      }
      if (!v158) {
        goto LABEL_199;
      }
      uint64_t v160 = v28;
      uint64_t v161 = *(void *)&v28[16 * v159 + 32];
      uint64_t v162 = *(void *)&v28[16 * v107 + 24];
      uint64_t v163 = v178;
      sub_1000560C4(v158 + *(void *)(v176 + 72) * v161, v158 + *(void *)(v176 + 72) * *(void *)&v28[16 * v107 + 16], v158 + *(void *)(v176 + 72) * v162, v175);
      uint64_t v178 = v163;
      if (v163) {
        break;
      }
      if (v162 < v161) {
        goto LABEL_188;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v160 = sub_10002C028((uint64_t)v160);
      }
      if (v159 >= *((void *)v160 + 2)) {
        goto LABEL_189;
      }
      uint64_t v164 = &v160[16 * v159 + 32];
      *(void *)uint64_t v164 = v161;
      *((void *)v164 + 1) = v162;
      unint64_t v165 = *((void *)v160 + 2);
      if (v107 > v165) {
        goto LABEL_190;
      }
      memmove(&v160[16 * v107 + 16], &v160[16 * v107 + 32], 16 * (v165 - v107));
      uint64_t v28 = v160;
      *((void *)v160 + 2) = v165 - 1;
      unint64_t v107 = v165 - 1;
    }
    while (v165 > 2);
  }
LABEL_169:
  swift_bridgeObjectRelease();
  v166[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100055B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v60 = a4;
  uint64_t v47 = a1;
  uint64_t v51 = sub_1000B3350();
  uint64_t v6 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  unint64_t v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v8 = __chkstk_darwin(v67);
  uint64_t v57 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v68 = (uint64_t)&v45 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v45 - v14;
  uint64_t v55 = a3;
  uint64_t v46 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v48 = (char *)&v45 - v14;
    uint64_t v49 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v17 = v16 * (v55 - 1);
    uint64_t v52 = v16;
    uint64_t v18 = v16 * v55;
    uint64_t v19 = v51;
LABEL_6:
    uint64_t v20 = 0;
    uint64_t v61 = v47;
    uint64_t v53 = v18;
    uint64_t v54 = v17;
    while (1)
    {
      uint64_t v21 = *v60;
      uint64_t v59 = v18 + v20;
      sub_100059028(v18 + v20 + v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v62 = v20;
      uint64_t v58 = v17 + v20;
      sub_100059028(v17 + v20 + v21, v68, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      Swift::Int v22 = &v15[*(int *)(v67 + 24)];
      uint64_t v23 = type metadata accessor for WidgetTileInfo();
      uint64_t v24 = &v22[*(int *)(v23 + 28)];
      unint64_t v25 = *((void *)v24 + 1);
      if (v25) {
        uint64_t v26 = *(void *)v24;
      }
      else {
        uint64_t v26 = 0;
      }
      unint64_t v27 = 0xE000000000000000;
      if (v25) {
        unint64_t v27 = v25;
      }
      unint64_t v64 = v27;
      uint64_t v65 = v26;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v28 = v50;
      sub_1000B3340();
      uint64_t v56 = sub_1000B3330();
      uint64_t v66 = v29;
      uint64_t v30 = *v49;
      (*v49)(v28, v19);
      Swift::Int v31 = (uint64_t *)(v68 + *(int *)(v67 + 24) + *(int *)(v23 + 28));
      unint64_t v32 = v31[1];
      if (v32) {
        uint64_t v33 = *v31;
      }
      else {
        uint64_t v33 = 0;
      }
      uint64_t v63 = v33;
      if (v32) {
        unint64_t v34 = v32;
      }
      else {
        unint64_t v34 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1000B3340();
      uint64_t v35 = sub_1000B3330();
      uint64_t v37 = v36;
      uint64_t v38 = v28;
      unint64_t v39 = v64;
      v30(v38, v19);
      BOOL v40 = v65 == v63 && v39 == v34;
      if (v40 || (sub_1000B4830()) && v56 == v35 && v66 == v37)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        sub_100059090(v68, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v15 = v48;
        uint64_t result = sub_100059090((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v18 = v53;
        uint64_t v17 = v54;
LABEL_5:
        v17 += v52;
        v18 += v52;
        if (++v55 == v46) {
          return result;
        }
        goto LABEL_6;
      }
      char v41 = sub_1000B4830();
      uint64_t v15 = v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100059090(v68, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t result = sub_100059090((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v18 = v53;
      uint64_t v17 = v54;
      uint64_t v42 = v62;
      if ((v41 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v43 = *v60;
      if (!*v60) {
        break;
      }
      uint64_t v44 = v43 + v54 + v62;
      sub_10005BB70(v43 + v53 + v62, v57, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_10005BB70(v57, v44, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v20 = v42 - v52;
      if (v55 == ++v61) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000560C4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v49 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v8 = __chkstk_darwin(v49);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v45 - v13;
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_66;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_67;
  }
  uint64_t v21 = (uint64_t)(a2 - a1) / v19;
  unint64_t v53 = a1;
  unint64_t v52 = a4;
  uint64_t v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v22 * v19;
      uint64_t v17 = v11;
      uint64_t v48 = v15;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v24;
      unint64_t v51 = a4 + v24;
      unint64_t v53 = a2;
      if (v24 < 1 || a1 >= a2) {
        goto LABEL_64;
      }
      uint64_t v36 = -v19;
      unint64_t v46 = a4;
      unint64_t v47 = a1;
      uint64_t v14 = v48;
      while (1)
      {
        sub_100059028(v34 + v36, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        unint64_t v37 = a2 + v36;
        sub_100059028(a2 + v36, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v38 = v50;
        char v39 = sub_100046A70((uint64_t)v17, (uint64_t)v14);
        uint64_t v50 = v38;
        if (v38) {
          goto LABEL_63;
        }
        char v40 = v39;
        unint64_t v41 = a3 + v36;
        sub_100059090((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_100059090((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        if (v40)
        {
          if (a3 < a2 || v41 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v42 = v47;
          }
          else
          {
            unint64_t v42 = v47;
            if (a3 != a2) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v53 += v36;
        }
        else
        {
          unint64_t v43 = v51;
          v51 += v36;
          if (a3 < v43 || v41 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v37 = a2;
            unint64_t v42 = v47;
          }
          else
          {
            unint64_t v42 = v47;
            if (a3 != v43) {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
          }
        }
        unint64_t v34 = v51;
        if (v51 > v46)
        {
          a2 = v37;
          a3 += v36;
          if (v37 > v42) {
            continue;
          }
        }
        goto LABEL_64;
      }
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v25 = a4 + v23;
    unint64_t v51 = a4 + v23;
    BOOL v26 = v23 < 1 || a2 >= a3;
    if (v26) {
      goto LABEL_64;
    }
    while (1)
    {
      sub_100059028(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      sub_100059028(a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v27 = v50;
      char v28 = sub_100046A70((uint64_t)v17, (uint64_t)v14);
      uint64_t v50 = v27;
      if (v27) {
        break;
      }
      char v29 = v28;
      unint64_t v30 = a3;
      sub_100059090((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      sub_100059090((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      unint64_t v31 = v53;
      if (v29)
      {
        unint64_t v32 = a2 + v19;
        if (v53 < a2 || v53 >= v32)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v53 == a2)
        {
          unint64_t v31 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v33 = v52 + v19;
        if (v53 < v52 || v53 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v53 != v52)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v52 = v33;
        unint64_t v32 = a2;
      }
      unint64_t v53 = v31 + v19;
      a4 = v52;
      if (v52 < v25)
      {
        a2 = v32;
        BOOL v26 = v32 >= v30;
        a3 = v30;
        if (!v26) {
          continue;
        }
      }
      goto LABEL_64;
    }
LABEL_63:
    sub_100059090((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    sub_100059090((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
LABEL_64:
    sub_10002BEE8(&v53, &v52, (uint64_t *)&v51);
    return 1;
  }
LABEL_68:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

unint64_t sub_100056654(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1000B4480();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1000B48C0();
        swift_bridgeObjectRetain();
        sub_1000B4070();
        Swift::Int v9 = sub_1000B48F0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

size_t sub_10005682C(uint64_t a1)
{
  uint64_t v43 = sub_100004210(&qword_1000D60D8);
  uint64_t v2 = __chkstk_darwin(v43);
  uint64_t v48 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v47 = (void *)((char *)v41 - v5);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v41 - v6;
  uint64_t v49 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v46 = v10;
  v41[0] = a1;
  if (v10)
  {
    uint64_t v42 = (v9 + 32) & ~v9;
    uint64_t v12 = (char *)_swiftEmptyArrayStorage + v42;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(type metadata accessor for AccessoryAndSceneEntity() - 8);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v17 = *(void *)(v15 + 72);
    uint64_t v44 = v7;
    uint64_t v45 = v17;
    v41[1] = v9 | 7;
    uint64_t v18 = _swiftEmptyArrayStorage;
    uint64_t v19 = v43;
    while (1)
    {
      uint64_t v21 = (uint64_t)&v48[*(int *)(v19 + 48)];
      sub_100059028(v16, v21, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v22 = (uint64_t)v47;
      uint64_t v23 = (uint64_t)v47 + *(int *)(v19 + 48);
      *unint64_t v47 = v13;
      sub_10005BB70(v21, v23, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      size_t result = sub_10006B62C(v22, (uint64_t)v7, &qword_1000D60D8);
      if (v14)
      {
        uint64_t v11 = v18;
        BOOL v20 = __OFSUB__(v14--, 1);
        if (v20) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v25 = v18[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        sub_100004210(&qword_1000D61D0);
        uint64_t v28 = *(void *)(v49 + 72);
        uint64_t v29 = v42;
        uint64_t v11 = (void *)swift_allocObject();
        size_t result = j__malloc_size(v11);
        if (!v28) {
          goto LABEL_34;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_35;
        }
        uint64_t v32 = v30 / v28;
        v11[2] = v27;
        _OWORD v11[3] = 2 * (v30 / v28);
        unint64_t v33 = (char *)v11 + v29;
        uint64_t v34 = v18[3] >> 1;
        uint64_t v35 = v34 * v28;
        if (v18[2])
        {
          if (v11 < v18 || v33 >= (char *)v18 + v42 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v18)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          void v18[2] = 0;
        }
        uint64_t v12 = &v33[v35];
        uint64_t v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        swift_release();
        uint64_t v19 = v43;
        BOOL v20 = __OFSUB__(v37, 1);
        uint64_t v14 = v37 - 1;
        if (v20)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v13;
      uint64_t v7 = v44;
      sub_10006B62C((uint64_t)v44, (uint64_t)v12, &qword_1000D60D8);
      v12 += *(void *)(v49 + 72);
      v16 += v45;
      uint64_t v18 = v11;
      if (v46 == v13) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v38 = v11[3];
  if (v38 >= 2)
  {
    unint64_t v39 = v38 >> 1;
    BOOL v20 = __OFSUB__(v39, v14);
    uint64_t v40 = v39 - v14;
    if (v20) {
      goto LABEL_36;
    }
    v11[2] = v40;
  }
  return (size_t)v11;
}

uint64_t sub_100056BD0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v3 = result;
    size_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
      if (v4)
      {
        size_t result = swift_bridgeObjectRetain();
        BOOL v8 = __OFSUB__(v4--, 1);
        if (v8) {
          goto LABEL_30;
        }
      }
      else
      {
        unint64_t v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_31;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1) {
          uint64_t v11 = 1;
        }
        else {
          uint64_t v11 = v10;
        }
        sub_100004210(&qword_1000D6270);
        uint64_t v12 = (void *)swift_allocObject();
        int64_t v13 = j__malloc_size(v12);
        uint64_t v14 = v13 - 32;
        if (v13 < 32) {
          uint64_t v14 = v13 - 17;
        }
        uint64_t v15 = v14 >> 4;
        v12[2] = v11;
        uint64_t v12[3] = 2 * (v14 >> 4);
        uint64_t v16 = v12 + 4;
        uint64_t v17 = v2[3] >> 1;
        uint64_t v6 = &v12[2 * v17 + 4];
        uint64_t v18 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v2[2])
        {
          if (v12 != v2 || v16 >= &v2[2 * v17 + 4]) {
            memmove(v16, v2 + 4, 16 * v17);
          }
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        size_t result = swift_release();
        uint64_t v2 = v12;
        BOOL v8 = __OFSUB__(v18, 1);
        uint64_t v4 = v18 - 1;
        if (v8)
        {
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
      }
      *uint64_t v6 = v5;
      v6[1] = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        size_t result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_26:
  unint64_t v20 = v2[3];
  if (v20 >= 2)
  {
    unint64_t v21 = v20 >> 1;
    BOOL v8 = __OFSUB__(v21, v4);
    uint64_t v22 = v21 - v4;
    if (v8) {
      goto LABEL_32;
    }
    v2[2] = v22;
  }
  return (uint64_t)v2;
}

uint64_t sub_100056D60(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4 = sub_100004210(&qword_1000D6530);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v23 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v23) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v22 + 8 * v18);
    ++v12;
    if (!v19)
    {
      int64_t v12 = v18 + 1;
      if (v18 + 1 >= v23) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v22 + 8 * v12);
      if (!v19)
      {
        int64_t v12 = v18 + 2;
        if (v18 + 2 >= v23) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v22 + 8 * v12);
        if (!v19)
        {
          int64_t v12 = v18 + 3;
          if (v18 + 3 >= v23) {
            return swift_release();
          }
          unint64_t v19 = *(void *)(v22 + 8 * v12);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_5:
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = sub_1000B2F60();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v6, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v16);
    uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * v14);
    *(void *)&v6[*(int *)(v4 + 48)] = v17;
    swift_bridgeObjectRetain();
    a2(v6, v17);
    uint64_t result = sub_100017B5C((uint64_t)v6, &qword_1000D6530);
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v23) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19)
  {
    int64_t v12 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v12 >= v23) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v22 + 8 * v12);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_100056FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v4 = sub_100004210(&qword_1000D55D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v51 = (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v6 = *(void *)(v54 - 8);
  uint64_t v7 = __chkstk_darwin(v54);
  uint64_t v53 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v39 - v10;
  __chkstk_darwin(v9);
  uint64_t v40 = (uint64_t)v39 - v12;
  uint64_t v13 = sub_1000B2F60();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v17 - 8);
  unint64_t v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = *(void *)(a1 + 16);
  if (v52)
  {
    v39[2] = v2;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v20 = v14 + 16;
    uint64_t v49 = a1 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v50 = v21;
    uint64_t v55 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
    uint64_t v56 = v6;
    uint64_t v47 = *(void *)(v20 + 56);
    uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v44 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    uint64_t v45 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v42 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    uint64_t v43 = (void (**)(char *, uint64_t))(v20 - 8);
    v39[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v57 = _swiftEmptyArrayStorage;
    uint64_t v23 = v41;
    uint64_t v46 = v20;
    while (1)
    {
      v50(v19, v49 + v47 * v22, v13);
      uint64_t v24 = *v55;
      (*v55)(v19, 0, 1, v13);
      if ((*v48)(v19, 1, v13) == 1) {
        break;
      }
      (*v45)(v16, v19, v13);
      uint64_t v25 = *(void *)(v23 + 16);
      if (v25)
      {
        uint64_t v26 = v56;
        uint64_t v27 = v23 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
        swift_bridgeObjectRetain();
        uint64_t v28 = *(void *)(v26 + 72);
        while (1)
        {
          sub_100059028(v27, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          if (sub_1000B2F40()) {
            break;
          }
          sub_100059090((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          v27 += v28;
          if (!--v25)
          {
            uint64_t v23 = v41;
            swift_bridgeObjectRelease();
            goto LABEL_11;
          }
        }
        uint64_t v23 = v41;
        swift_bridgeObjectRelease();
        uint64_t v30 = v51;
        sub_10005BB70((uint64_t)v11, v51, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v29 = 0;
      }
      else
      {
LABEL_11:
        uint64_t v29 = 1;
        uint64_t v30 = v51;
      }
      uint64_t v31 = v54;
      (*v44)(v30, v29, 1, v54);
      (*v43)(v16, v13);
      if ((*v42)(v30, 1, v31) == 1)
      {
        sub_100017B5C(v30, &qword_1000D55D0);
      }
      else
      {
        uint64_t v32 = v30;
        uint64_t v33 = v40;
        sub_10005BB70(v32, v40, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_10005BB70(v33, v53, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v57 = (void *)sub_100075670(0, v57[2] + 1, 1, (unint64_t)v57);
        }
        unint64_t v35 = v57[2];
        unint64_t v34 = v57[3];
        if (v35 >= v34 >> 1) {
          uint64_t v57 = (void *)sub_100075670(v34 > 1, v35 + 1, 1, (unint64_t)v57);
        }
        uint64_t v36 = v57;
        v57[2] = v35 + 1;
        sub_10005BB70(v53, (uint64_t)v36+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v35, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      }
      if (++v22 == v52)
      {
        v24(v19, 1, 1, v13);
        break;
      }
    }
  }
  else
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    swift_bridgeObjectRetain();
    uint64_t v57 = _swiftEmptyArrayStorage;
    v37(v19, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  return v57;
}

void sub_100057580(uint64_t a1, void *a2)
{
  id v33 = a2;
  uint64_t v32 = sub_1000B2F60();
  uint64_t v3 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1000B44B0();
    sub_100008148(0, &qword_1000D4FD8);
    sub_1000349C8();
    sub_1000B4220();
    a1 = v36;
    uint64_t v31 = v37;
    uint64_t v6 = v38;
    uint64_t v7 = v39;
    unint64_t v8 = v40;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v31 = a1 + 56;
    uint64_t v6 = ~v9;
    uint64_t v11 = -v9;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v8 = v12 & v10;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  v29[1] = v6;
  v29[4] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v30 = (unint64_t)(v6 + 64) >> 6;
  uint64_t v13 = (void (**)(char *, uint64_t))(v3 + 8);
  void v29[3] = (char *)&type metadata for Swift.AnyObject + 8;
  while (a1 < 0)
  {
    uint64_t v17 = sub_1000B4520();
    if (!v17) {
      goto LABEL_38;
    }
    uint64_t v34 = v17;
    sub_100008148(0, &qword_1000D4FD8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v18 = v35;
    swift_unknownObjectRelease();
    uint64_t v16 = v7;
    uint64_t v14 = v8;
    if (!v18) {
      goto LABEL_38;
    }
LABEL_33:
    id v22 = [v33 reachabilityByAccessoryUniqueIdentifier];
    sub_100008148(0, (unint64_t *)&qword_1000D51E0);
    sub_100058DF8((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v23 = v32;
    uint64_t v24 = sub_1000B3F30();

    id v25 = [v18 uniqueIdentifier];
    sub_1000B2F50();

    if (*(void *)(v24 + 16) && (unint64_t v26 = sub_100041560((uint64_t)v5), (v27 & 1) != 0))
    {
      id v28 = *(id *)(*(void *)(v24 + 56) + 8 * v26);
      swift_bridgeObjectRelease();
      (*v13)(v5, v23);

      sub_1000B40E0();
      if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000B4130();
      }
      sub_1000B4150();
      sub_1000B4120();
    }
    else
    {
      swift_bridgeObjectRelease();
      (*v13)(v5, v23);
    }
    uint64_t v7 = v16;
    unint64_t v8 = v14;
  }
  if (v8)
  {
    uint64_t v14 = (v8 - 1) & v8;
    unint64_t v15 = __clz(__rbit64(v8)) | (v7 << 6);
    uint64_t v16 = v7;
LABEL_32:
    id v18 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    if (!v18) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  int64_t v19 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v19 >= v30) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    uint64_t v16 = v7 + 1;
    if (!v20)
    {
      uint64_t v16 = v7 + 2;
      if (v7 + 2 >= v30) {
        goto LABEL_38;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v16);
      if (!v20)
      {
        uint64_t v16 = v7 + 3;
        if (v7 + 3 >= v30) {
          goto LABEL_38;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v16);
        if (!v20)
        {
          uint64_t v16 = v7 + 4;
          if (v7 + 4 >= v30) {
            goto LABEL_38;
          }
          unint64_t v20 = *(void *)(v31 + 8 * v16);
          if (!v20)
          {
            uint64_t v16 = v7 + 5;
            if (v7 + 5 >= v30) {
              goto LABEL_38;
            }
            unint64_t v20 = *(void *)(v31 + 8 * v16);
            if (!v20)
            {
              uint64_t v21 = v7 + 6;
              while (v30 != v21)
              {
                unint64_t v20 = *(void *)(v31 + 8 * v21++);
                if (v20)
                {
                  uint64_t v16 = v21 - 1;
                  goto LABEL_31;
                }
              }
LABEL_38:
              sub_100017A14();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v14 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void *sub_100057A34(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v54 = a2;
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(char **)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v43 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100004210(&qword_1000D5038);
  __chkstk_darwin(v53);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004210(&qword_1000D5518);
  __chkstk_darwin(v10 - 8);
  uint64_t v58 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004210(&qword_1000D5008);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (uint64_t)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v55 = (uint64_t)v41 - v17;
  __chkstk_darwin(v16);
  int64_t v19 = (char *)v41 - v18;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1000B46A0();
    if (v20) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_3:
      uint64_t v21 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      uint64_t v44 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      unint64_t v52 = a1 & 0xC000000000000001;
      v41[1] = v3;
      uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
      uint64_t v46 = (void (**)(uint64_t, uint64_t))(v6 + 8);
      uint64_t v47 = v15;
      uint64_t v15 = 4;
      uint64_t v48 = v20;
      uint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      unint64_t v50 = a1;
      while (1)
      {
        uint64_t v3 = v15 - 4;
        if (v52) {
          id v24 = (id)sub_1000B45E0();
        }
        else {
          id v24 = *(id *)(a1 + 8 * v15);
        }
        uint64_t v6 = v58;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_22;
        }
        uint64_t v56 = v15 - 3;
        id v57 = v24;
        id v25 = [v24 uniqueIdentifier];
        sub_1000B2F50();

        unint64_t v26 = *v21;
        uint64_t v27 = 1;
        (*v21)((uint64_t)v19, 0, 1, v5);
        sub_1000B2990();
        uint64_t v28 = (uint64_t)v58;
        uint64_t v29 = type metadata accessor for HomeEntity();
        uint64_t v30 = (uint64_t)v19;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29))
        {
          (*v44)(v55, v28, v5);
          uint64_t v27 = 0;
        }
        sub_100017B5C(v28, &qword_1000D5518);
        uint64_t v31 = v55;
        v26(v55, v27, 1, v5);
        uint64_t v32 = (uint64_t)&v9[*(int *)(v53 + 48)];
        sub_1000206A0(v30, (uint64_t)v9, &qword_1000D5008);
        sub_1000206A0(v31, v32, &qword_1000D5008);
        id v33 = *v51;
        if ((*v51)(v9, 1, v5) == 1) {
          break;
        }
        int64_t v19 = (char *)v30;
        uint64_t v34 = (uint64_t)v9;
        uint64_t v35 = (uint64_t)v9;
        uint64_t v36 = v47;
        sub_1000206A0(v34, v47, &qword_1000D5008);
        unsigned int v37 = v33((char *)v32, 1, v5);
        a1 = v50;
        if (v37 == 1)
        {
          sub_100017B5C(v55, &qword_1000D5008);
          sub_100017B5C((uint64_t)v19, &qword_1000D5008);
          (*v46)(v36, v5);
          uint64_t v9 = (char *)v35;
          uint64_t v21 = v49;
          uint64_t v23 = v57;
LABEL_5:
          sub_100017B5C((uint64_t)v9, &qword_1000D5038);
          goto LABEL_6;
        }
        uint64_t v38 = v43;
        (*v42)(v43, v32, v5);
        sub_100058DF8(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
        int v45 = sub_1000B3F90();
        uint64_t v39 = *v46;
        (*v46)((uint64_t)v38, v5);
        sub_100017B5C(v55, &qword_1000D5008);
        sub_100017B5C((uint64_t)v19, &qword_1000D5008);
        v39(v36, v5);
        sub_100017B5C(v35, &qword_1000D5008);
        uint64_t v9 = (char *)v35;
        uint64_t v21 = v49;
        uint64_t v23 = v57;
        if (v45) {
          goto LABEL_20;
        }
LABEL_6:

        ++v15;
        if (v56 == v48) {
          goto LABEL_23;
        }
      }
      sub_100017B5C(v31, &qword_1000D5008);
      sub_100017B5C(v30, &qword_1000D5008);
      unsigned int v22 = v33((char *)v32, 1, v5);
      uint64_t v21 = v49;
      a1 = v50;
      int64_t v19 = (char *)v30;
      uint64_t v23 = v57;
      if (v22 == 1)
      {
        sub_100017B5C((uint64_t)v9, &qword_1000D5008);
LABEL_20:
        swift_bridgeObjectRelease();
        return v23;
      }
      goto LABEL_5;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_10005804C(unint64_t a1)
{
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_16:
    uint64_t v2 = sub_1000B46A0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
LABEL_3:
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v5 = (id)sub_1000B45E0();
          unint64_t v6 = v3 + 1;
          if (__OFADD__(v3, 1))
          {
LABEL_13:
            __break(1u);
            return v11;
          }
        }
        else
        {
          if (v3 >= *(void *)(v4 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          id v5 = *(id *)(a1 + 8 * v3 + 32);
          unint64_t v6 = v3 + 1;
          if (__OFADD__(v3, 1)) {
            goto LABEL_13;
          }
        }
        id v7 = v5;
        char v8 = sub_10000502C(&v10, v7);

        if (v8)
        {
          sub_1000B4630();
          sub_1000B4660();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1000B4670();
          sub_1000B4640();
        }
        else
        {
        }
        ++v3;
        if (v6 == v2) {
          return v11;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000581D8()
{
  uint64_t v0 = sub_1000B2F60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  id v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)IFObjectHasher) init];
  sub_1000B2990();
  if ((v18 & 1) != 0 || (sub_1000B2990(), !v18))
  {
    NSString v13 = sub_1000B4000();
  }
  else
  {
    uint64_t v9 = v18[2];
    if (v9)
    {
      uint64_t v10 = (uint64_t)v18 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v11 = *(void *)(v5 + 72);
      v16[1] = v18;
      uint64_t v17 = v11;
      do
      {
        sub_100059028(v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
        sub_100059090((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_1000B2F30();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        NSString v12 = sub_1000B4000();
        swift_bridgeObjectRelease();

        v10 += v17;
        --v9;
      }
      while (v9);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = [v8 finalize];
  uint64_t v14 = sub_1000B4800();

  return v14;
}

unint64_t sub_1000584E0(int a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5378);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B2E90();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  NSString v12 = (char *)v28 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v28 - v13;
  if (qword_1000D4E20 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1000B35C0();
  swift_release();
  if (v29 == 1)
  {
    sub_100022874((uint64_t)v14);
    id v15 = [self defaultManager];
    sub_1000B2E60(1);
    NSString v16 = sub_1000B4000();
    swift_bridgeObjectRelease();
    unsigned __int8 v17 = [v15 fileExistsAtPath:v16];

    if ((v17 & 1) == 0)
    {
      v28[3] = a1;
      id v18 = [self mainBundle];
      NSString v19 = sub_1000B4000();
      NSString v20 = sub_1000B4000();
      id v21 = [v18 URLForResource:v19 withExtension:v20];

      if (v21)
      {
        sub_1000B2E50();

        unsigned int v22 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v22(v4, v9, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
        {
          v22(v12, v4, v5);
          uint64_t v23 = sub_1000B2EA0();
          unint64_t v25 = v24;
          sub_1000B2ED0();
          sub_10003310C(v23, v25);
          unint64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
          v26(v12, v5);
          v26(v14, v5);
          return 0xD000000000000021;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
      sub_100017B5C((uint64_t)v4, &qword_1000D5378);
      return 0xD000000000000021;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  return 0xD000000000000021;
}

uint64_t sub_10005895C()
{
  uint64_t v1 = type metadata accessor for HomeInteractiveWidgetsEntryView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1000441FC(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  sub_100044208(*(void *)(v0 + v3 + 16), *(void *)(v0 + v3 + 24), *(void *)(v0 + v3 + 32), *(void *)(v0 + v3 + 40), *(unsigned char *)(v0 + v3 + 48));
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100058AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HomeInteractiveWidgetsEntryView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10004AD14(a1, v6, a2);
}

uint64_t sub_100058B28(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t type metadata accessor for WidgetViewsForMediumSystemFamily(uint64_t a1)
{
  return sub_10006842C(a1, qword_1000D5E88);
}

uint64_t type metadata accessor for WidgetViewForLargeSquareTiles(uint64_t a1)
{
  return sub_10006842C(a1, (uint64_t *)&unk_1000D5F40);
}

unint64_t sub_100058BA8()
{
  unint64_t result = qword_1000D5DA0;
  if (!qword_1000D5DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5DA0);
  }
  return result;
}

uint64_t sub_100058BFC()
{
  return sub_100058FB0(&qword_1000D5DB0, &qword_1000D5DA8, (void (*)(void))sub_100058BA8);
}

uint64_t sub_100058C24()
{
  return sub_100067CB4(&qword_1000D5DB8, &qword_1000D5D60, (void (*)(void))sub_100058C4C);
}

unint64_t sub_100058C4C()
{
  unint64_t result = qword_1000D5DC0;
  if (!qword_1000D5DC0)
  {
    sub_100004B80(&qword_1000D5DC8);
    sub_100058DF8(&qword_1000D5DD0, (void (*)(uint64_t))type metadata accessor for WidgetViewForLargeSquareTiles);
    sub_100058CF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5DC0);
  }
  return result;
}

unint64_t sub_100058CF8()
{
  unint64_t result = qword_1000D5DD8;
  if (!qword_1000D5DD8)
  {
    sub_100004B80(&qword_1000D5D48);
    sub_100058DA4();
    sub_100058DF8(&qword_1000D5DE8, (void (*)(uint64_t))type metadata accessor for WidgetViewsForMediumSystemFamily);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5DD8);
  }
  return result;
}

unint64_t sub_100058DA4()
{
  unint64_t result = qword_1000D5DE0;
  if (!qword_1000D5DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5DE0);
  }
  return result;
}

uint64_t sub_100058DF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100058E40()
{
  unint64_t result = qword_1000D5DF8;
  if (!qword_1000D5DF8)
  {
    sub_100004B80(&qword_1000D5D70);
    sub_100058F28(&qword_1000D5E00, &qword_1000D5DF0, (void (*)(void))sub_100058BFC, (void (*)(void))sub_100058C24);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5DF8);
  }
  return result;
}

uint64_t sub_100058EEC()
{
  return sub_100058F28(&qword_1000D5E08, &qword_1000D5D80, (void (*)(void))sub_100058BA8, (void (*)(void))sub_100058E40);
}

uint64_t sub_100058F28(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100058FB0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100059028(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100059090(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000590F4()
{
  return sub_1000B3770();
}

uint64_t destroy for HomeInteractiveWidgets()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s10HomeWidget22HomeInteractiveWidgetsVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HomeInteractiveWidgets(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for HomeInteractiveWidgets(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for HomeInteractiveWidgets(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeInteractiveWidgets(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeInteractiveWidgets(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeInteractiveWidgets()
{
  return &type metadata for HomeInteractiveWidgets;
}

void *sub_1000592B0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_100044118(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
    uint64_t v16 = a3[11];
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10005943C(uint64_t a1, uint64_t a2)
{
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000B3E50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_1000441FC(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));

  return swift_bridgeObjectRelease();
}

void *sub_1000594F0(void *a1, void *a2, int *a3)
{
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10005962C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D5C80);
    sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000B3E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_1000441FC(v12, v13);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  return a1;
}

char *sub_1000597B4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3E50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v12 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v14 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  return a1;
}

char *sub_1000598DC(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D5C80);
    uint64_t v6 = sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_1000441FC(v12, v13);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v14] = a2[v14];
  uint64_t v15 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  uint64_t v16 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  return a1;
}

uint64_t sub_100059A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100059A48);
}

uint64_t sub_100059A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5C88);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100059B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100059B20);
}

uint64_t sub_100059B20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004210(&qword_1000D5C88);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_100059BE0()
{
  sub_10005B144(319, (unint64_t *)&unk_1000D5CF8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetViewsForSmallSystemFamily(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for WidgetViewsForSmallSystemFamily(uint64_t a1)
{
  sub_1000441FC(*(void *)a1, *(unsigned char *)(a1 + 8));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WidgetViewsForSmallSystemFamily(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetViewsForSmallSystemFamily(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_1000441FC(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for WidgetViewsForSmallSystemFamily(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetViewsForSmallSystemFamily(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_1000441FC(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = a2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetViewsForSmallSystemFamily(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetViewsForSmallSystemFamily(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetViewsForSmallSystemFamily()
{
  return &type metadata for WidgetViewsForSmallSystemFamily;
}

unint64_t sub_100059F60(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100044118(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    unint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000B3E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *unint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000B3620();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    NSString v19 = (void *)(a1 + v18);
    NSString v20 = (void *)(a2 + v18);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *NSString v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[9];
    *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
    *(void *)(a1 + v22) = *(void *)(a2 + v22);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10005A1D0(uint64_t a1, int *a2)
{
  sub_1000441FC(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000B3E50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3620();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A364(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000B3E50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3620();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10005A584(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000441FC(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100017B5C(a1 + v10, &qword_1000D5C80);
    sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1000B3E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100017B5C(a1 + v14, &qword_1000D4F90);
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000B3620();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_100017B5C(a1 + v18, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  unint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10005A808(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000B3E50();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3620();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_1000B3E20();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v21 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  return a1;
}

uint64_t sub_10005AA48(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000441FC(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_100017B5C(a1 + v10, &qword_1000D5C80);
    uint64_t v13 = sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1000B3E50();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (char *)a2 + v15;
    sub_100017B5C(a1 + v15, &qword_1000D4F90);
    uint64_t v18 = sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1000B3620();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (char *)a2 + v20;
    sub_100017B5C(a1 + v20, &qword_1000D4F88);
    uint64_t v23 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_1000B3E20();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  uint64_t v25 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(void *)(a1 + v25) = *(uint64_t *)((char *)a2 + v25);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10005ACD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005ACE8);
}

uint64_t sub_10005ACE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5C88);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_7:
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v12(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_100004210(&qword_1000D5D58);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_7;
  }
  uint64_t v11 = sub_100004210(&qword_1000D5EE0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_7;
  }
  unint64_t v14 = *(void *)(a1 + a3[9]);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10005AE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005AE64);
}

uint64_t sub_10005AE64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004210(&qword_1000D5C88);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t v12 = sub_100004210(&qword_1000D5D58);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
    {
      uint64_t v9 = v12;
      uint64_t v10 = *(void *)(v12 - 8);
      uint64_t v11 = a4[6];
    }
    else
    {
      uint64_t result = sub_100004210(&qword_1000D5EE0);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[9]) = (a2 - 1);
        return result;
      }
      uint64_t v9 = result;
      uint64_t v10 = *(void *)(result - 8);
      uint64_t v11 = a4[7];
    }
  }
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v14(a1 + v11, a2, a2, v9);
}

void sub_10005AFC8()
{
  sub_10005B144(319, (unint64_t *)&unk_1000D5CF8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_10005B144(319, &qword_1000D5F50, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F)
    {
      sub_10005B144(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10005B144(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000B3630();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for WidgetErrorView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WidgetErrorView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WidgetErrorView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for WidgetErrorView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for WidgetErrorView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetErrorView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetErrorView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetErrorView()
{
  return &type metadata for WidgetErrorView;
}

uint64_t getEnumTagSinglePayload for AccessoriesAndScenesError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AccessoriesAndScenesError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005B530);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

unsigned char *sub_10005B558(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AccessoriesAndScenesError()
{
  return &type metadata for AccessoriesAndScenesError;
}

unint64_t sub_10005B574()
{
  unint64_t result = qword_1000D5F98;
  if (!qword_1000D5F98)
  {
    sub_100004B80(&qword_1000D5FA0);
    sub_10001FF28(&qword_1000D5FA8, &qword_1000D5FB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5F98);
  }
  return result;
}

unint64_t sub_10005B618()
{
  unint64_t result = qword_1000D5FB8;
  if (!qword_1000D5FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5FB8);
  }
  return result;
}

uint64_t sub_10005B66C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005B688()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005B6A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005B6C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005B6DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005B700(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    a3();
    sub_10001FF28(&qword_1000D6048, &qword_1000D6050);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005B7A4()
{
  unint64_t result = qword_1000D6028;
  if (!qword_1000D6028)
  {
    sub_100004B80(&qword_1000D6030);
    sub_10001FF28(&qword_1000D6038, &qword_1000D6040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6028);
  }
  return result;
}

uint64_t sub_10005B844@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000B3720();
  *a1 = result;
  return result;
}

uint64_t sub_10005B870()
{
  return sub_1000B3730();
}

unint64_t sub_10005B898()
{
  unint64_t result = qword_1000D6070;
  if (!qword_1000D6070)
  {
    sub_100004B80(&qword_1000D6078);
    sub_10001FF28(&qword_1000D6080, &qword_1000D6088);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6070);
  }
  return result;
}

uint64_t sub_10005B938(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10005B948()
{
  unint64_t v1 = (int *)type metadata accessor for WidgetViewForLargeSquareTiles(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_1000441FC(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  uint64_t v6 = v0 + v3 + v1[5];
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3E50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + v1[6];
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1000B3620();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v1[7];
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_10005BB70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005BBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for WidgetViewForLargeSquareTiles(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  double v10 = *(double *)(v3 + v9);
  double v11 = *(double *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_10004E61C(a1, a2, v3 + v8, a3, v10, v11);
}

uint64_t sub_10005BC98()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for LargeSquareTileViewToggleStyle(uint64_t a1)
{
  return sub_10006842C(a1, qword_1000D6408);
}

uint64_t sub_10005BCF4@<X0>(uint64_t a1@<X8>)
{
  return sub_10004F6BC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1, *(double *)(v1 + 32));
}

unint64_t sub_10005BD04()
{
  unint64_t result = qword_1000D6118;
  if (!qword_1000D6118)
  {
    sub_100004B80(&qword_1000D6110);
    sub_10005BDA0(&qword_1000D6120, &qword_1000D6128, &qword_1000D6130, &qword_1000D6138);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6118);
  }
  return result;
}

uint64_t sub_10005BDA0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    sub_10001FF28(a3, a4);
    sub_10001FF28(&qword_1000D6140, &qword_1000D6148);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005BE60()
{
  unint64_t result = qword_1000D6150;
  if (!qword_1000D6150)
  {
    sub_100004B80(&qword_1000D6100);
    sub_100004B80(&qword_1000D60F0);
    type metadata accessor for LargeSquareTileViewToggleStyle(255);
    sub_10001FF28(&qword_1000D6158, &qword_1000D60F0);
    sub_100058DF8(&qword_1000D6160, (void (*)(uint64_t))type metadata accessor for LargeSquareTileViewToggleStyle);
    swift_getOpaqueTypeConformance2();
    sub_100058DF8(&qword_1000D6168, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6150);
  }
  return result;
}

unint64_t sub_10005BFB4()
{
  unint64_t result = qword_1000D6188;
  if (!qword_1000D6188)
  {
    sub_100004B80(&qword_1000D6180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6188);
  }
  return result;
}

uint64_t sub_10005C028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  sub_100004210(&qword_1000D5518);
  v3[17] = swift_task_alloc();
  uint64_t v4 = sub_1000B2F60();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  sub_100004210(&qword_1000D5008);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  sub_100004210(&qword_1000D57E8);
  v3[25] = swift_task_alloc();
  uint64_t v5 = sub_1000B2FF0();
  v3[26] = v5;
  v3[27] = *(void *)(v5 - 8);
  v3[28] = swift_task_alloc();
  return _swift_task_switch(sub_10005C204, 0, 0);
}

uint64_t sub_10005C204()
{
  uint64_t v33 = v0;
  sub_1000B2990();
  uint64_t v1 = *(void *)(v0 + 120);
  if (*(unsigned char *)(v0 + 328) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 128);
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v4 = *HomeWidget.shared.unsafeMutableAddressor();
    *(void *)(v0 + 16) = v3;
    *(void *)(v0 + 232) = v4;
    *(void *)(v0 + 24) = v1;
    *(void *)(v0 + 32) = v2;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v5;
    unint64_t v6 = sub_10006B544();
    *uint64_t v5 = v0;
    v5[1] = sub_10005C7FC;
    return HomeWidget.synchronizeWithHomeKit<A>(configuration:)(v0 + 16, (uint64_t)&type metadata for RecommendedItemIntent, v6);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v31 = &_swiftEmptyDictionarySingleton;
    sub_1000B2990();
    uint64_t v9 = type metadata accessor for HomeEntity();
    uint64_t v10 = 1;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 152) + 16))(*(void *)(v0 + 184), *(void *)(v0 + 136), *(void *)(v0 + 144));
      uint64_t v10 = 0;
    }
    uint64_t v12 = *(void *)(v0 + 176);
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 144);
    uint64_t v14 = *(void *)(v0 + 152);
    sub_100017B5C(*(void *)(v0 + 136), &qword_1000D5518);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, v10, 1, v13);
    sub_1000B2990();
    uint64_t v15 = *(void *)(v0 + 64);
    *(void *)(v0 + 88) = v15;
    sub_1000206A0(v11, v12, &qword_1000D5008);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_100017B5C(*(void *)(v0 + 176), &qword_1000D5008);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 152) + 32))(*(void *)(v0 + 160), *(void *)(v0 + 176), *(void *)(v0 + 144));
      if (v15)
      {
        uint64_t v16 = *(void *)(v0 + 160);
        uint64_t v17 = swift_task_alloc();
        *(void *)(v17 + 16) = v16;
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_100044A28((uint64_t (*)(char *))sub_10006B5C4, v17, v15);
        swift_task_dealloc();
      }
      (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
      swift_bridgeObjectRelease();
      *(void *)(v0 + 88) = v15;
    }
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1000B3570();
    sub_100017618(v18, (uint64_t)qword_1000DCC18);
    uint64_t v19 = sub_1000B3550();
    os_log_type_t v20 = sub_1000B42C0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      v32[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315394;
      *(void *)(v0 + 80) = sub_10002A68C(0xD00000000000001CLL, 0x80000001000B9B40, v32);
      sub_1000B4400();
      *(_WORD *)(v21 + 12) = 2080;
      swift_beginAccess();
      *(void *)(v0 + 96) = *(void *)(v0 + 88);
      swift_bridgeObjectRetain();
      sub_100004210(&qword_1000D6538);
      uint64_t v22 = sub_1000B4040();
      *(void *)(v0 + 104) = sub_10002A68C(v22, v23, v32);
      sub_1000B4400();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s Looking for configuration accessories %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1000B2990();
    uint64_t v24 = *(void *)(v0 + 72);
    if (v24)
    {
      uint64_t v25 = *(void *)(v24 + 16);
      if (v25)
      {
        uint64_t v26 = *(void *)(type metadata accessor for AccessoryAndSceneEntity() - 8);
        uint64_t v27 = v24 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
        uint64_t v28 = *(void *)(v26 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_100046304(v27, (uint64_t *)&v31);
          v27 += v28;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    sub_100017B5C(*(void *)(v0 + 184), &qword_1000D5008);
    swift_bridgeObjectRelease();
    char v29 = v31;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(void *))(v0 + 8);
    return v30(v29);
  }
}

uint64_t sub_10005C7FC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 248) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10005C91C, 0, 0);
}

uint64_t sub_10005C91C()
{
  if (v0[31])
  {
    v0[32] = sub_1000B3060();
    sub_1000B31C0();
    v0[33] = sub_1000B31B0();
    sub_100058DF8(&qword_1000D57F0, (void (*)(uint64_t))&type metadata accessor for WidgetActor);
    uint64_t v2 = sub_1000B4180();
    return _swift_task_switch(sub_10005CA9C, v2, v1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3(0);
  }
}

uint64_t sub_10005CA9C()
{
  swift_release();
  *(void *)(v0 + 272) = sub_1000B3050();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005CB40;
  return WidgetDataModel.snapshotModerator.getter();
}

uint64_t sub_10005CB40(uint64_t a1)
{
  *(void *)(*(void *)v1 + 288) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10005CC60, 0, 0);
}

uint64_t sub_10005CC60()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[24], 1, 1, v0[18]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[37] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005CD20;
  uint64_t v3 = v0[24];
  uint64_t v2 = v0[25];
  return WidgetSnapshotModerator.find(home:orRecommended:)(v2, v3, 1);
}

uint64_t sub_10005CD20()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  if (v0)
  {
    swift_release();
    swift_errorRelease();
    sub_100017B5C(v3, &qword_1000D5008);
    uint64_t v4 = sub_10005D364;
  }
  else
  {
    sub_100017B5C(v3, &qword_1000D5008);
    swift_release();
    uint64_t v4 = sub_10005CE9C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10005CE9C()
{
  uint64_t v1 = (objc_class *)v0[31];
  uint64_t v3 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v5 = v0[25];
  uint64_t v4 = v0[26];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v5, v4);
  v6.super.unint64_t isa = v1;
  unint64_t v7 = sub_1000B2FC0(v6);
  v0[38] = v7;
  if (v7)
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v0[39] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10005D058;
    return HMHome.fetchPredictions()();
  }
  else
  {
    uint64_t v10 = (void *)v0[31];
    (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11(0);
  }
}

uint64_t sub_10005D058(uint64_t a1)
{
  *(void *)(*(void *)v1 + 320) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10005D158, 0, 0);
}

uint64_t sub_10005D158()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v2 = (void *)v0[38];
  uint64_t v3 = v0[27];
  uint64_t v19 = v0[28];
  uint64_t v17 = (void *)v0[31];
  uint64_t v18 = v0[26];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[19];
  uint64_t v16 = v0[18];
  sub_100004210(&qword_1000D6540);
  HMHomeManager v6 = (int *)(sub_100004210(&qword_1000D5288) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000B5180;
  unint64_t v9 = v8 + v7;
  uint64_t v10 = v6[14];
  id v11 = [v2 uniqueIdentifier];
  sub_1000B2F50();

  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v9, v4, v16);
  uint64_t v12 = _swiftEmptyArrayStorage;
  if (v1) {
    uint64_t v12 = v1;
  }
  *(void *)(v9 + v10) = v12;
  unint64_t v13 = sub_10001A2A0(v8);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(unint64_t))v0[1];
  return v14(v13);
}

uint64_t sub_10005D364()
{
  uint64_t v1 = (void *)v0[31];
  uint64_t v2 = v0[25];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[27] + 56))(v2, 1, 1, v0[26]);

  sub_100017B5C(v2, &qword_1000D57E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3(0);
}

uint64_t sub_10005D464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for AccessoryAndSceneEntity();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_10005D528, 0, 0);
}

uint64_t sub_10005D528()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v6 = v0[9];
      sub_100059028(v4, v6, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v7 = sub_10001D304();
      sub_100059090(v6, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      sub_100071378((unint64_t)v7);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = v0[3];
  }
  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v10 = v0[4];
  unint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_10005804C(v11);
  v0[10] = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = (void *)swift_task_alloc();
  v0[11] = v13;
  v13[2] = v8;
  v13[3] = v12;
  v13[4] = v10;
  v13[5] = v9;
  v13[6] = v1;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[12] = v14;
  uint64_t v15 = sub_100004210(&qword_1000D6560);
  *uint64_t v14 = v0;
  v14[1] = sub_10005D738;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000052, 0x80000001000B9C80, sub_10006B724, v13, v15);
}

uint64_t sub_10005D738()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_10006B9BC, 0, 0);
}

uint64_t sub_10005D86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for AccessoryAndSceneEntity();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_10005D930, 0, 0);
}

uint64_t sub_10005D930()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v4 = v0[7];
    uint64_t v3 = v0[8];
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = v0[9];
      sub_100059028(v5, v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v8 = v7 + *(int *)(v4 + 24);
      uint64_t v9 = v8 + *(int *)(type metadata accessor for WidgetTileInfo() + 56);
      if (*(unsigned char *)(v9 + 8) == 2)
      {
        uint64_t v10 = v0[9];
        id v11 = *(id *)v9;
        sub_100059090(v10, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_1000B40E0();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1000B4130();
        }
        sub_1000B4150();
        sub_1000B4120();
      }
      else
      {
        sub_100059090(v0[9], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      }
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = v0[3];
  }
  v0[10] = _swiftEmptyArrayStorage;
  uint64_t v13 = v0[5];
  uint64_t v12 = v0[6];
  uint64_t v14 = v0[4];
  uint64_t v15 = (void *)swift_task_alloc();
  v0[11] = v15;
  v15[2] = v12;
  v15[3] = _swiftEmptyArrayStorage;
  v15[4] = v14;
  v15[5] = v13;
  v15[6] = v1;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[12] = v16;
  uint64_t v17 = sub_100004210(&qword_1000D6560);
  *uint64_t v16 = v0;
  v16[1] = sub_10005DBBC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000004DLL, 0x80000001000B9BF0, sub_10006B6D8, v15, v17);
}

uint64_t sub_10005DBBC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_10005DCF0, 0, 0);
}

uint64_t sub_10005DCF0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10005DD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  uint64_t v5 = sub_1000B3570();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  sub_100004210(&qword_1000D5010);
  v4[21] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for WidgetTileInfo();
  v4[22] = v6;
  v4[23] = *(void *)(v6 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  sub_100004210(&qword_1000D55D0);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  sub_100004210(&qword_1000D5040);
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  uint64_t v7 = sub_1000B33B0();
  v4[38] = v7;
  v4[39] = *(void *)(v7 - 8);
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for AccessoryAndSceneEntity();
  v4[44] = v8;
  v4[45] = *(void *)(v8 - 8);
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  v4[48] = swift_task_alloc();
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  sub_100004210(&qword_1000D5008);
  v4[51] = swift_task_alloc();
  uint64_t v9 = sub_1000B2F60();
  v4[52] = v9;
  v4[53] = *(void *)(v9 - 8);
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  return _swift_task_switch(sub_10005E148, 0, 0);
}

uint64_t sub_10005E148()
{
  uint64_t v84 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 448) = v2;
  if (!v2)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 424) + 56))(*(void *)(v0 + 408), 1, 1, *(void *)(v0 + 416));
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);
  uint64_t v8 = *(void *)(v0 + 352);
  int v9 = *(_DWORD *)(*(void *)(v0 + 360) + 80);
  *(_DWORD *)(v0 + 600) = v9;
  uint64_t v10 = v1 + ((v9 + 32) & ~(unint64_t)v9);
  sub_100059028(v10, v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v11 = v7 + *(int *)(v8 + 20);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v0 + 456) = v12;
  *(void *)(v0 + 464) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v12(v3, v11, v5);
  swift_bridgeObjectRetain();
  sub_100059090(v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v13(v6, v3, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) == 1)
  {
LABEL_17:
    sub_100017B5C(*(void *)(v0 + 408), &qword_1000D5008);
LABEL_18:
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    sub_100017618(*(void *)(v0 + 144), (uint64_t)qword_1000DCC18);
    uint64_t v44 = sub_1000B3550();
    os_log_type_t v45 = sub_1000B42A0();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      v83[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315138;
      *(void *)(v0 + 56) = sub_10002A68C(0xD00000000000003DLL, 0x80000001000B9BB0, v83);
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s No matching HMHome found in entities", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v47 = *(uint64_t (**)(void *))(v0 + 8);
    return v47(_swiftEmptyArrayStorage);
  }
  uint64_t v14 = *(void *)(v0 + 440);
  uint64_t v15 = *(void **)(v0 + 136);
  v13(v14, *(void *)(v0 + 408), *(void *)(v0 + 416));
  id v16 = [v15 homes];
  sub_100008148(0, (unint64_t *)&qword_1000D5550);
  unint64_t v17 = sub_1000B4100();

  uint64_t v18 = swift_task_alloc();
  *(void *)(v18 + 16) = v14;
  uint64_t v19 = sub_10000EAA4(sub_10006B9A0, v18, v17);
  *(void *)(v0 + 472) = v19;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (!v19)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 424) + 8))(*(void *)(v0 + 440), *(void *)(v0 + 416));
    goto LABEL_18;
  }
  uint64_t v20 = *(void *)(v0 + 360);
  uint64_t v21 = *(void *)(v0 + 312);
  uint64_t v81 = *(void *)(v0 + 176);
  uint64_t v82 = *(void *)(v0 + 352);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1000B31F0();
  uint64_t v77 = v24;
  uint64_t v78 = v23;
  *(void *)(v0 + 480) = v22;
  *(void *)(v0 + 488) = v25;
  uint64_t v26 = *(void *)(v20 + 72);
  *(void *)(v0 + 496) = v26;
  uint64_t v27 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  uint64_t v80 = (void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32);
  swift_bridgeObjectRetain();
  uint64_t v28 = _swiftEmptyArrayStorage;
  uint64_t v79 = v26;
  do
  {
    uint64_t v29 = *(void *)(v0 + 392);
    sub_100059028(v10, v29, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v30 = v29 + *(int *)(v82 + 24) + *(int *)(v81 + 56);
    if (*(unsigned char *)(v30 + 8) == 3)
    {
      id v31 = *(id *)v30;
      sub_1000B4260();
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v21 + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
    }
    uint64_t v32 = *(void *)(v0 + 392);
    uint64_t v33 = *(void *)(v0 + 296);
    uint64_t v34 = *(void *)(v0 + 304);
    sub_10006B62C(*(void *)(v0 + 288), v33, &qword_1000D5040);
    sub_100059090(v32, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v35 = *v27;
    *(void *)(v0 + 584) = *v27;
    *(void *)(v0 + 592) = (v21 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    if (v35(v33, 1, v34) == 1)
    {
      sub_100017B5C(*(void *)(v0 + 296), &qword_1000D5040);
    }
    else
    {
      uint64_t v37 = *(void *)(v0 + 336);
      uint64_t v36 = *(void *)(v0 + 344);
      uint64_t v38 = *(void *)(v0 + 304);
      uint64_t v39 = *v80;
      (*v80)(v36, *(void *)(v0 + 296), v38);
      v39(v37, v36, v38);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v28 = (void *)sub_100075B68(0, v28[2] + 1, 1, (unint64_t)v28);
      }
      unint64_t v41 = v28[2];
      unint64_t v40 = v28[3];
      if (v41 >= v40 >> 1) {
        uint64_t v28 = (void *)sub_100075B68(v40 > 1, v41 + 1, 1, (unint64_t)v28);
      }
      uint64_t v42 = *(void *)(v0 + 336);
      uint64_t v43 = *(void *)(v0 + 304);
      uint64_t v28[2] = v41 + 1;
      v39((uint64_t)v28+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v41, v42, v43);
      uint64_t v26 = v79;
    }
    v10 += v26;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 504) = v78;
  *(void *)(v0 + 512) = v77;
  uint64_t v49 = v28[2];
  if (!v49)
  {
    swift_bridgeObjectRelease();
    unint64_t v52 = _swiftEmptyArrayStorage;
LABEL_50:
    *(void *)(v0 + 520) = v52;
    *(void *)(v0 + 528) = sub_1000B3060();
    sub_1000B31C0();
    *(void *)(v0 + 536) = sub_1000B31B0();
    sub_100058DF8(&qword_1000D57F0, (void (*)(uint64_t))&type metadata accessor for WidgetActor);
    uint64_t v76 = sub_1000B4180();
    return _swift_task_switch(sub_10005EC1C, v76, v75);
  }
  unint64_t v50 = (char *)v28 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  swift_bridgeObjectRetain();
  uint64_t v51 = *(void *)(v21 + 72);
  unint64_t v52 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v53 = sub_1000B33A0();
    uint64_t v54 = (void *)swift_task_alloc();
    v54[2] = v50;
    uint64_t v55 = sub_100070784((void (*)(__int16 *))sub_10006B614, v54, v53);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v56 = *(void *)(v55 + 16);
    int64_t v57 = v52[2];
    int64_t v58 = v57 + v56;
    if (__OFADD__(v57, v56)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v58 <= v52[3] >> 1)
    {
      if (*(void *)(v55 + 16)) {
        goto LABEL_38;
      }
    }
    else
    {
      if (v57 <= v58) {
        int64_t v60 = v57 + v56;
      }
      else {
        int64_t v60 = v57;
      }
      unint64_t v52 = (void *)sub_100075B34(isUniquelyReferenced_nonNull_native, v60, 1, (unint64_t)v52);
      if (*(void *)(v55 + 16))
      {
LABEL_38:
        uint64_t v61 = v52[2];
        uint64_t v62 = (v52[3] >> 1) - v61;
        uint64_t v63 = *(void *)(sub_1000B31E0() - 8);
        uint64_t v64 = *(void *)(v63 + 72);
        if (v62 < v56) {
          goto LABEL_55;
        }
        unint64_t v65 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
        uint64_t v66 = (char *)v52 + v65 + v64 * v61;
        unint64_t v67 = v55 + v65;
        uint64_t v68 = v64 * v56;
        Swift::Int v69 = &v66[v68];
        unint64_t v70 = v67 + v68;
        if (v67 < (unint64_t)v69 && (unint64_t)v66 < v70) {
          return sub_1000B46E0();
        }
        swift_arrayInitWithCopy();
        if (v56)
        {
          uint64_t v72 = v52[2];
          BOOL v73 = __OFADD__(v72, v56);
          uint64_t v74 = v72 + v56;
          if (v73) {
            goto LABEL_56;
          }
          v52[2] = v74;
        }
        goto LABEL_28;
      }
    }
    if (v56)
    {
      __break(1u);
      break;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    v50 += v51;
    if (!--v49)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_50;
    }
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
  return sub_1000B46E0();
}

uint64_t sub_10005EC1C()
{
  swift_release();
  *(void *)(v0 + 544) = sub_1000B3050();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 552) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005ECC4;
  return WidgetDataModel.snapshotModerator.getter();
}

uint64_t sub_10005ECC4(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = *(void *)(*v1 + 512);
  uint64_t v4 = *(void *)(*v1 + 504);
  uint64_t v5 = *(void *)(*v1 + 488);
  uint64_t v6 = *(void *)(*v1 + 480);
  uint64_t v7 = *(void *)(*v1 + 472);
  uint64_t v12 = *v1;
  v2[70] = a1;
  swift_task_dealloc();
  swift_release();
  v2[2] = v6;
  v2[3] = v4;
  uint64_t v8 = v2 + 2;
  v8[2] = v5;
  v8[3] = v3;
  int v9 = (void *)swift_task_alloc();
  v8[69] = v9;
  void *v9 = v12;
  v9[1] = sub_10005EEB4;
  uint64_t v10 = v8[63];
  return WidgetSnapshotModerator.monitorMatterEndpoints<A>(home:configuration:_:)(v7, v8, v10, &type metadata for BasicIdentity, &protocol witness table for BasicIdentity);
}

uint64_t sub_10005EEB4()
{
  *(void *)(*(void *)v1 + 576) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v2 = sub_10005FCB0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10005F00C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10005F00C()
{
  uint64_t v114 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = (void (**)(void, uint64_t, uint64_t, void))(v1 + 56);
  uint64_t v3 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 184) + 48);
  char v100 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 312) + 8);
  uint64_t v4 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = _swiftEmptyArrayStorage;
  unint64_t v106 = v2;
  uint64_t v104 = v3;
  unint64_t v111 = v4;
  do
  {
    uint64_t v7 = *(void *)(v0 + 384);
    uint64_t v8 = *(void *)(v0 + 352);
    uint64_t v9 = *(void *)(v0 + 176);
    sub_100059028(*(void *)(v0 + 112)+ ((*(unsigned __int8 *)(v0 + 600) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 600))+ *(void *)(v0 + 496) * v5, v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v10 = v7 + *(int *)(v8 + 24) + *(int *)(v9 + 56);
    if (*(unsigned char *)(v10 + 8) != 3)
    {
      (*v2)(*(void *)(v0 + 240), 1, 1, *(void *)(v0 + 352));
      goto LABEL_13;
    }
    uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 584);
    uint64_t v12 = *(void *)(v0 + 304);
    uint64_t v13 = *(void *)(v0 + 280);
    id v14 = *(id *)v10;
    sub_1000B4260();
    if (v11(v13, 1, v12) == 1)
    {
      uint64_t v15 = *(void *)(v0 + 280);

      uint64_t v16 = v15;
      unint64_t v17 = &qword_1000D5040;
    }
    else
    {
      uint64_t v18 = *(void *)(v0 + 328);
      uint64_t v20 = *(void *)(v0 + 168);
      uint64_t v19 = *(void *)(v0 + 176);
      (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 312) + 32))(v18, *(void *)(v0 + 280), *(void *)(v0 + 304));
      sub_10000FE5C(v14, v18, v20);

      if ((*v3)(v20, 1, v19) != 1)
      {
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 456);
        uint64_t v24 = *(void *)(v0 + 416);
        uint64_t v25 = *(void *)(v0 + 384);
        uint64_t v26 = *(void *)(v0 + 352);
        uint64_t v108 = *(void *)(v0 + 304);
        uint64_t v109 = *(void *)(v0 + 328);
        unint64_t v98 = v6;
        uint64_t v28 = *(void *)(v0 + 224);
        uint64_t v27 = *(void *)(v0 + 232);
        sub_10005BB70(*(void *)(v0 + 168), v28, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        v23(v27, v25, v24);
        v23(v27 + *(int *)(v26 + 20), v25 + *(int *)(v26 + 20), v24);
        uint64_t v29 = *(int *)(v26 + 24);
        uint64_t v2 = v106;
        uint64_t v30 = v27 + v29;
        uint64_t v3 = v104;
        uint64_t v31 = v28;
        uint64_t v6 = v98;
        sub_10005BB70(v31, v30, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        (*v100)(v109, v108);
        uint64_t v22 = 0;
        goto LABEL_12;
      }
      uint64_t v21 = *(void *)(v0 + 168);
      (*v100)(*(void *)(v0 + 328), *(void *)(v0 + 304));
      uint64_t v16 = v21;
      unint64_t v17 = &qword_1000D5010;
    }
    sub_100017B5C(v16, v17);
    uint64_t v22 = 1;
LABEL_12:
    uint64_t v4 = v111;
    uint64_t v32 = *(void *)(v0 + 232);
    uint64_t v33 = *(void *)(v0 + 240);
    (*v2)(v32, v22, 1, *(void *)(v0 + 352));
    sub_10006B62C(v32, v33, &qword_1000D55D0);
LABEL_13:
    uint64_t v34 = *(void *)(v0 + 384);
    uint64_t v35 = *(void *)(v0 + 352);
    uint64_t v36 = *(void *)(v0 + 248);
    sub_10006B62C(*(void *)(v0 + 240), v36, &qword_1000D55D0);
    sub_100059090(v34, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    if ((*v4)(v36, 1, v35) == 1)
    {
      sub_100017B5C(*(void *)(v0 + 248), &qword_1000D55D0);
    }
    else
    {
      uint64_t v37 = *(void *)(v0 + 368);
      uint64_t v38 = *(void *)(v0 + 376);
      sub_10005BB70(*(void *)(v0 + 248), v38, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      sub_10005BB70(v38, v37, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = (void *)sub_100075670(0, v6[2] + 1, 1, (unint64_t)v6);
      }
      unint64_t v40 = v6[2];
      unint64_t v39 = v6[3];
      if (v40 >= v39 >> 1) {
        uint64_t v6 = (void *)sub_100075670(v39 > 1, v40 + 1, 1, (unint64_t)v6);
      }
      uint64_t v41 = *(void *)(v0 + 496);
      uint64_t v42 = *(unsigned __int8 *)(v0 + 600);
      uint64_t v43 = *(void *)(v0 + 368);
      uint64_t v6[2] = v40 + 1;
      sub_10005BB70(v43, (uint64_t)v6 + ((v42 + 32) & ~v42) + v41 * v40, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    }
    ++v5;
  }
  while (v5 != *(void *)(v0 + 448));
  swift_bridgeObjectRelease();
  int64_t v44 = v6[2];
  os_log_type_t v45 = _swiftEmptyArrayStorage;
  if (v44)
  {
    uint64_t v46 = *(void *)(v0 + 184);
    unint64_t v47 = (*(unsigned __int8 *)(v0 + 600) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 600);
    v113[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_10001E99C(0, v44, 0);
    uint64_t v48 = 0;
    uint64_t v49 = (char *)v6 + v47;
    os_log_type_t v45 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v50 = *(void *)(v0 + 400);
      uint64_t v51 = *(void *)(v0 + 352);
      uint64_t v52 = *(void *)(v0 + 216);
      sub_100059028((uint64_t)&v49[*(void *)(v0 + 496) * v48], v50, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      sub_100059028(v50 + *(int *)(v51 + 24), v52, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
      sub_100059090(v50, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001E99C(0, v45[2] + 1, 1);
        os_log_type_t v45 = (void *)v113[0];
      }
      unint64_t v54 = v45[2];
      unint64_t v53 = v45[3];
      if (v54 >= v53 >> 1)
      {
        sub_10001E99C(v53 > 1, v54 + 1, 1);
        os_log_type_t v45 = (void *)v113[0];
      }
      uint64_t v55 = *(void *)(v0 + 216);
      ++v48;
      v45[2] = v54 + 1;
      sub_10005BB70(v55, (uint64_t)v45+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v54, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    }
    while (v44 != v48);
  }
  BOOL v99 = v6;
  uint64_t v56 = v45[2];
  if (v56)
  {
    uint64_t v57 = *(void *)(v0 + 184);
    uint64_t v58 = *(void *)(v0 + 152);
    uint64_t v59 = (uint64_t)v45 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
    uint64_t v107 = *(void *)(v57 + 72);
    uint64_t v103 = (void (**)(uint64_t, uint64_t))(v58 + 8);
    unint64_t v105 = (void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
    do
    {
      uint64_t v112 = v56;
      uint64_t v61 = *(void *)(v0 + 208);
      uint64_t v62 = *(void *)(v0 + 176);
      sub_100059028(v59, v61, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
      uint64_t v63 = v61 + *(int *)(v62 + 56);
      if (*(unsigned char *)(v63 + 8) == 3)
      {
        id v64 = *(id *)v63;
        sub_1000B4260();
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 264), 1, 1, *(void *)(v0 + 304));
      }
      unint64_t v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 584);
      uint64_t v66 = *(void *)(v0 + 304);
      uint64_t v67 = *(void *)(v0 + 272);
      uint64_t v68 = *(void *)(v0 + 256);
      sub_10006B62C(*(void *)(v0 + 264), v67, &qword_1000D5040);
      sub_1000206A0(v67, v68, &qword_1000D5040);
      if (v65(v68, 1, v66) != 1)
      {
        uint64_t v69 = *(void *)(v0 + 320);
        uint64_t v70 = *(void *)(v0 + 304);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 312) + 32))(v69, *(void *)(v0 + 256), v70);
        uint64_t v71 = sub_1000B33A0();
        uint64_t v72 = (void *)swift_task_alloc();
        v72[2] = v69;
        sub_100070784((void (*)(__int16 *))sub_10006B614, v72, v71);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        (*v100)(v69, v70);
      }
      sub_100017B5C(*(void *)(v0 + 272), &qword_1000D5040);
      if (qword_1000D4EA8 != -1) {
        swift_once();
      }
      uint64_t v73 = *(void *)(v0 + 200);
      uint64_t v74 = *(void *)(v0 + 208);
      uint64_t v75 = *(void *)(v0 + 192);
      uint64_t v76 = *(void *)(v0 + 160);
      uint64_t v77 = *(void *)(v0 + 144);
      uint64_t v78 = sub_100017618(v77, (uint64_t)qword_1000DCC18);
      (*v105)(v76, v78, v77);
      sub_100059028(v74, v73, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
      sub_100059028(v74, v75, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
      swift_bridgeObjectRetain();
      uint64_t v79 = sub_1000B3550();
      os_log_type_t v80 = sub_1000B42C0();
      BOOL v81 = os_log_type_enabled(v79, v80);
      uint64_t v82 = *(void *)(v0 + 200);
      uint64_t v83 = *(void *)(v0 + 208);
      uint64_t v84 = *(void *)(v0 + 192);
      uint64_t v85 = *(void *)(v0 + 160);
      uint64_t v110 = *(void *)(v0 + 144);
      if (v81)
      {
        uint64_t v102 = *(void *)(v0 + 208);
        uint64_t v86 = swift_slowAlloc();
        uint64_t v101 = v85;
        v113[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136315650;
        uint64_t v87 = sub_10001E56C();
        *(void *)(v0 + 80) = sub_10002A68C(v87, v88, v113);
        sub_1000B4400();
        swift_bridgeObjectRelease();
        sub_100059090(v82, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        *(_WORD *)(v86 + 12) = 2080;
        sub_1000B31E0();
        swift_bridgeObjectRetain();
        uint64_t v89 = sub_1000B4110();
        unint64_t v91 = v90;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 88) = sub_10002A68C(v89, v91, v113);
        sub_1000B4400();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v86 + 22) = 2080;
        uint64_t v92 = sub_1000A3998();
        if (v93)
        {
          unint64_t v94 = v93;
        }
        else
        {
          uint64_t v92 = 7104878;
          unint64_t v94 = 0xE300000000000000;
        }
        *(void *)(v0 + 96) = sub_10002A68C(v92, v94, v113);
        sub_1000B4400();
        swift_bridgeObjectRelease();
        sub_100059090(v84, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "Created entity with widgetInfo: %s - endpoints: %s statusString: %s", (uint8_t *)v86, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*v103)(v101, v110);
        uint64_t v60 = v102;
      }
      else
      {

        sub_100059090(v84, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        swift_bridgeObjectRelease_n();
        sub_100059090(v82, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        (*v103)(v85, v110);
        uint64_t v60 = v83;
      }
      sub_100059090(v60, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
      v59 += v107;
      uint64_t v56 = v112 - 1;
    }
    while (v112 != 1);
  }
  uint64_t v95 = *(void **)(v0 + 472);
  swift_bridgeObjectRelease();

  (*(void (**)(void, void))(*(void *)(v0 + 424) + 8))(*(void *)(v0 + 440), *(void *)(v0 + 416));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v96 = *(uint64_t (**)(void *))(v0 + 8);
  return v96(v99);
}

uint64_t sub_10005FCB0()
{
  uint64_t v12 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  sub_100017618(v0[18], (uint64_t)qword_1000DCC18);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1000B3550();
  os_log_type_t v2 = sub_1000B42A0();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = (void *)v0[59];
  if (v3)
  {
    uint64_t v10 = (void *)v0[59];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    v0[8] = sub_10002A68C(0xD00000000000003DLL, 0x80000001000B9BB0, &v11);
    sub_1000B4400();
    *(_WORD *)(v5 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v7;
    sub_1000B4400();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s Error subscribing to Matter monitor: %@", (uint8_t *)v5, 0x16u);
    sub_100004210(&qword_1000D51D8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  (*(void (**)(void, void))(v0[53] + 8))(v0[55], v0[52]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void *))v0[1];
  return v8(_swiftEmptyArrayStorage);
}

uint64_t sub_1000600C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  sub_100004210(&qword_1000D5040);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AccessoryAndSceneEntity();
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  uint64_t v6 = sub_1000B3570();
  v4[26] = v6;
  v4[27] = *(void *)(v6 - 8);
  v4[28] = swift_task_alloc();
  return _swift_task_switch(sub_100060298, 0, 0);
}

uint64_t sub_100060298()
{
  unint64_t v88 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  uint64_t v4 = sub_100017618(v3, (uint64_t)qword_1000DCC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1000B3550();
  os_log_type_t v6 = sub_1000B42C0();
  uint64_t v83 = _swiftEmptyArrayStorage;
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v76 = v6;
    uint64_t v7 = v0[8];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[6] = sub_10002A68C(0xD000000000000041, 0x80000001000B9B60, &v84);
    sub_1000B4400();
    uint64_t v77 = (uint8_t *)v8;
    *(_WORD *)(v8 + 12) = 2080;
    int64_t v9 = *(void *)(v7 + 16);
    if (v9)
    {
      uint64_t v74 = v5;
      uint64_t v10 = v0[17];
      uint64_t v78 = v0[16];
      uint64_t v11 = v0[8];
      uint64_t v85 = _swiftEmptyArrayStorage;
      sub_10001EA14(0, v9, 0);
      uint64_t v12 = v11 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      uint64_t v13 = *(void *)(v10 + 72);
      do
      {
        uint64_t v14 = v0[25];
        sub_100059028(v12, v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_1000B2F60();
        sub_100058DF8(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v86 = (void *)sub_1000B4800();
        uint64_t v87 = v15;
        v90._countAndFlagsBits = 58;
        v90._object = (void *)0xE100000000000000;
        sub_1000B4090(v90);
        uint64_t v16 = v14 + *(int *)(v78 + 24);
        unint64_t v17 = (uint64_t *)(v16 + *(int *)(type metadata accessor for WidgetTileInfo() + 24));
        uint64_t v18 = *v17;
        uint64_t v19 = (void *)v17[1];
        swift_bridgeObjectRetain();
        v91._countAndFlagsBits = v18;
        v91._object = v19;
        sub_1000B4090(v91);
        swift_bridgeObjectRelease();
        uint64_t v20 = v86;
        uint64_t v21 = v87;
        sub_100059090(v14, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v22 = v85;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001EA14(0, v22[2] + 1, 1);
          uint64_t v22 = v85;
        }
        unint64_t v24 = v22[2];
        unint64_t v23 = v22[3];
        if (v24 >= v23 >> 1)
        {
          sub_10001EA14(v23 > 1, v24 + 1, 1);
          uint64_t v22 = v85;
        }
        void v22[2] = v24 + 1;
        uint64_t v25 = &v22[2 * v24];
        v25[4] = v20;
        v25[5] = v21;
        v12 += v13;
        --v9;
      }
      while (v9);
      uint64_t v5 = v74;
    }
    uint64_t v29 = v0[27];
    uint64_t v79 = v0[28];
    uint64_t v75 = v0[26];
    uint64_t v30 = sub_1000B4110();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    v0[7] = sub_10002A68C(v30, v32, &v84);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v76, "%s Monitoring characteristics for entities: %s", v77, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v79, v75);
  }
  else
  {
    uint64_t v26 = v0[27];
    uint64_t v27 = v0[28];
    uint64_t v28 = v0[26];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
  }
  uint64_t v33 = v0[8];
  uint64_t v86 = _swiftEmptyArrayStorage;
  uint64_t v34 = *(void *)(v33 + 16);
  v0[29] = v34;
  swift_bridgeObjectRetain();
  if (v34)
  {
    uint64_t v36 = v0[16];
    uint64_t v35 = v0[17];
    uint64_t v37 = *(void *)(v35 + 72);
    unint64_t v80 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v38 = v33 + v80;
    unint64_t v39 = _swiftEmptyArrayStorage;
    uint64_t v40 = v34;
    uint64_t v83 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v41 = v0[24];
      sub_100059028(v38, v41, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v42 = v41 + *(int *)(v36 + 24);
      uint64_t v43 = type metadata accessor for WidgetTileInfo();
      uint64_t v44 = v0[24];
      if (*(unsigned char *)(v42 + *(int *)(v43 + 56) + 8) == 2)
      {
        sub_10005BB70(v44, v0[23], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001EA34(0, v39[2] + 1, 1);
          unint64_t v39 = v86;
        }
        unint64_t v46 = v39[2];
        unint64_t v45 = v39[3];
        if (v46 >= v45 >> 1)
        {
          sub_10001EA34(v45 > 1, v46 + 1, 1);
          unint64_t v39 = v86;
        }
        uint64_t v47 = v0[23];
        v39[2] = v46 + 1;
        sub_10005BB70(v47, (uint64_t)v39 + v80 + v46 * v37, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      }
      else
      {
        sub_100059090(v44, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      }
      v38 += v37;
      --v40;
    }
    while (v40);
    v0[30] = v39;
    swift_bridgeObjectRelease();
    uint64_t v86 = _swiftEmptyArrayStorage;
    uint64_t v49 = v0[16];
    uint64_t v48 = v0[17];
    uint64_t v50 = *(void *)(v48 + 72);
    unint64_t v81 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    uint64_t v51 = v0[8] + v81;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v53 = v0[21];
      uint64_t v52 = v0[22];
      sub_100059028(v51, v52, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      int v54 = *(unsigned __int8 *)(v52 + *(int *)(v49 + 24) + *(int *)(v43 + 56) + 8);
      sub_100059028(v52, v53, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v55 = v0[21];
      if (v54 == 2)
      {
        sub_100059090(v55, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      }
      else
      {
        uint64_t v56 = v55 + *(int *)(v49 + 24) + *(int *)(v43 + 56);
        uint64_t v57 = v0[14];
        if (*(unsigned char *)(v56 + 8) == 3)
        {
          id v58 = *(id *)v56;
          sub_1000B4260();
        }
        else
        {
          uint64_t v59 = sub_1000B33B0();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v57, 1, 1, v59);
        }
        uint64_t v60 = v0[21];
        uint64_t v61 = v0[15];
        sub_10006B62C(v0[14], v61, &qword_1000D5040);
        uint64_t v62 = sub_1000B33B0();
        int v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v61, 1, v62);
        sub_100017B5C(v61, &qword_1000D5040);
        sub_100059090(v60, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        if (v63 == 1)
        {
          sub_10005BB70(v0[22], v0[20], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          id v64 = v83;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10001EA34(0, v83[2] + 1, 1);
            id v64 = v86;
          }
          unint64_t v66 = v64[2];
          unint64_t v65 = v64[3];
          if (v66 >= v65 >> 1)
          {
            sub_10001EA34(v65 > 1, v66 + 1, 1);
            id v64 = v86;
          }
          uint64_t v67 = v0[20];
          v64[2] = v66 + 1;
          uint64_t v83 = v64;
          sub_10005BB70(v67, (uint64_t)v64 + v81 + v66 * v50, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
          goto LABEL_27;
        }
      }
      sub_100059090(v0[22], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
LABEL_27:
      v51 += v50;
      if (!--v34) {
        goto LABEL_39;
      }
    }
  }
  v0[30] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
LABEL_39:
  v0[31] = v83;
  swift_bridgeObjectRelease();
  uint64_t v68 = sub_1000581D8();
  uint64_t v70 = v69;
  v0[32] = v69;
  uint64_t v82 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000D6548 + dword_1000D6548);
  uint64_t v71 = (void *)swift_task_alloc();
  v0[33] = v71;
  *uint64_t v71 = v0;
  v71[1] = sub_100060BB4;
  uint64_t v72 = v0[11];
  return v82((uint64_t)v83, v68, v70, v72);
}

uint64_t sub_100060BB4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100060CEC, 0, 0);
}

uint64_t sub_100060CEC()
{
  uint64_t v1 = sub_1000581D8();
  uint64_t v3 = v2;
  v0[34] = v2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000D6550 + dword_1000D6550);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[35] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100060DB8;
  uint64_t v5 = v0[30];
  uint64_t v6 = v0[11];
  return v8(v5, v1, v3, v6);
}

uint64_t sub_100060DB8(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 32) = v1;
  *(void *)(v2 + 40) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100060EF0, 0, 0);
}

uint64_t sub_100060EF0()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = swift_bridgeObjectRetain();
  if (v1)
  {
    uint64_t v3 = 0;
    uint64_t v5 = v0[16];
    uint64_t v4 = v0[17];
    uint64_t v6 = *(void *)(v4 + 72);
    unint64_t v29 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v7 = v2 + v29;
    do
    {
      uint64_t v8 = v0[19];
      sub_100059028(v7, v8, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      uint64_t v9 = v8 + *(int *)(v5 + 24);
      uint64_t v10 = v9 + *(int *)(type metadata accessor for WidgetTileInfo() + 56);
      uint64_t v11 = v0[12];
      if (*(unsigned char *)(v10 + 8) == 3)
      {
        id v12 = *(id *)v10;
        sub_1000B4260();
      }
      else
      {
        uint64_t v13 = sub_1000B33B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
      }
      uint64_t v14 = v0[13];
      sub_10006B62C(v0[12], v14, &qword_1000D5040);
      uint64_t v15 = sub_1000B33B0();
      int v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
      sub_100017B5C(v14, &qword_1000D5040);
      uint64_t v17 = v0[19];
      if (v16 == 1)
      {
        sub_100059090(v17, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      }
      else
      {
        sub_10005BB70(v17, v0[18], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10001EA34(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v19 = _swiftEmptyArrayStorage[2];
        unint64_t v18 = _swiftEmptyArrayStorage[3];
        if (v19 >= v18 >> 1) {
          sub_10001EA34(v18 > 1, v19 + 1, 1);
        }
        uint64_t v20 = v0[18];
        _swiftEmptyArrayStorage[2] = v19 + 1;
        sub_10005BB70(v20, (uint64_t)_swiftEmptyArrayStorage + v29 + v19 * v6, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
      }
      ++v3;
      v7 += v6;
    }
    while (v3 != v0[29]);
  }
  v0[36] = _swiftEmptyArrayStorage;
  uint64_t v21 = v0[5];
  uint64_t v22 = v0[3];
  swift_bridgeObjectRelease();
  v0[37] = v21;
  v0[38] = v22;
  uint64_t v23 = sub_1000581D8();
  uint64_t v25 = v24;
  v0[39] = v24;
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000D6558 + dword_1000D6558);
  uint64_t v26 = (void *)swift_task_alloc();
  v0[40] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100061220;
  uint64_t v27 = v0[11];
  return v30((uint64_t)_swiftEmptyArrayStorage, v23, v25, v27);
}

uint64_t sub_100061220(uint64_t a1)
{
  *(void *)(*(void *)v1 + 328) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(sub_10006135C, 0, 0);
}

uint64_t sub_10006135C()
{
  uint64_t v1 = v0[41];
  uint64_t v4 = v0[38];
  sub_100071544(v0[37]);
  sub_100071544(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v4);
}

void *sub_1000614A4(void *a1, void *a2, int a3)
{
  int v57 = a3;
  uint64_t v5 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v54 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000B2F60();
  uint64_t v8 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  id v58 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000B3E50();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a1;
  uint64_t v55 = *(void ***)(v11 + 104);
  ((void (*)(char *, void, uint64_t))v55)(v13, enum case for WidgetFamily.systemSmall(_:), v10);
  sub_100058DF8(&qword_1000D5E28, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  swift_bridgeObjectRetain();
  uint64_t v56 = a2;
  sub_1000B40C0();
  sub_1000B40C0();
  uint64_t v14 = v60[0];
  uint64_t v15 = v61;
  int v16 = *(void (**)(char *, uint64_t))(v11 + 8);
  v16(v13, v10);
  if (v14 == v15)
  {
    uint64_t v17 = v59;
    if ((v57 & 1) == 0) {
      goto LABEL_16;
    }
    uint64_t v18 = 4;
LABEL_7:
    uint64_t v21 = sub_1000469DC(v18, (uint64_t)v62);
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    unint64_t v27 = v26;
    if (v26)
    {
      sub_1000B4850();
      swift_unknownObjectRetain_n();
      unint64_t v29 = (void *)swift_dynamicCastClass();
      if (!v29)
      {
        swift_unknownObjectRelease();
        unint64_t v29 = _swiftEmptyArrayStorage;
      }
      uint64_t v30 = v29[2];
      swift_release();
      if (__OFSUB__(v27 >> 1, v25))
      {
        __break(1u);
      }
      else if (v30 == (v27 >> 1) - v25)
      {
        uint64_t v28 = (void *)swift_dynamicCastClass();
        if (!v28)
        {
          swift_unknownObjectRelease();
          uint64_t v28 = _swiftEmptyArrayStorage;
        }
        goto LABEL_15;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v28 = sub_10002AEF8(v21, v23, v25, v27);
LABEL_15:
    swift_unknownObjectRelease();
    v60[0] = v28;
    swift_bridgeObjectRetain_n();
    sub_100054A04(v60);
    swift_release_n();
    uint64_t v62 = v60[0];
    goto LABEL_16;
  }
  ((void (*)(char *, void, uint64_t))v55)(v13, enum case for WidgetFamily.systemMedium(_:), v10);
  sub_1000B40C0();
  sub_1000B40C0();
  unint64_t v19 = v60[0];
  uint64_t v20 = v61;
  v16(v13, v10);
  uint64_t v17 = v59;
  if (v19 == v20 && (v57 & 1) != 0)
  {
    uint64_t v18 = 8;
    goto LABEL_7;
  }
LABEL_16:
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1000B3570();
  sub_100017618(v31, (uint64_t)qword_1000DCC18);
  unint64_t v32 = v62;
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_1000B3550();
  int v34 = sub_1000B42C0();
  BOOL v35 = os_log_type_enabled(v33, (os_log_type_t)v34);
  uint64_t v36 = v58;
  if (v35)
  {
    int v57 = v34;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v56 = (void *)swift_slowAlloc();
    v60[0] = v56;
    *(_DWORD *)uint64_t v37 = 136315394;
    uint64_t v61 = (void *)sub_10002A68C(0xD00000000000003CLL, 0x80000001000B9B00, (uint64_t *)v60);
    uint64_t v55 = &v62;
    sub_1000B4400();
    *(_WORD *)(v37 + 12) = 2080;
    int64_t v38 = v32[2];
    if (v38)
    {
      uint64_t v51 = v37;
      uint64_t v53 = v33;
      uint64_t v61 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10001E9D8(0, v38, 0);
      uint64_t v39 = *(unsigned __int8 *)(v54 + 80);
      uint64_t v52 = v32;
      uint64_t v40 = (uint64_t)v32 + ((v39 + 32) & ~v39);
      uint64_t v41 = *(void *)(v54 + 72);
      do
      {
        sub_100059028(v40, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v36, v7, v17);
        sub_100059090((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v42 = v61;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001E9D8(0, v42[2] + 1, 1);
          uint64_t v42 = v61;
        }
        unint64_t v44 = v42[2];
        unint64_t v43 = v42[3];
        if (v44 >= v43 >> 1)
        {
          sub_10001E9D8(v43 > 1, v44 + 1, 1);
          uint64_t v42 = v61;
        }
        v42[2] = v44 + 1;
        unint64_t v45 = (unint64_t)v42
            + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
            + *(void *)(v8 + 72) * v44;
        uint64_t v36 = v58;
        uint64_t v17 = v59;
        (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v45, v58, v59);
        uint64_t v61 = v42;
        v40 += v41;
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease();
      uint64_t v33 = v53;
      uint64_t v37 = v51;
    }
    uint64_t v46 = sub_1000B4110();
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v61 = (void *)sub_10002A68C(v46, v48, (uint64_t *)v60);
    sub_1000B4400();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v57, "%s Sorted entities to %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  return v62;
}

uint64_t sub_100061C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[44] = a3;
  v4[45] = a4;
  v4[42] = a1;
  v4[43] = a2;
  uint64_t v5 = sub_1000B3570();
  v4[46] = v5;
  v4[47] = *(void *)(v5 - 8);
  v4[48] = swift_task_alloc();
  sub_100004210(&qword_1000D5518);
  v4[49] = swift_task_alloc();
  uint64_t v6 = sub_1000B3E50();
  v4[50] = v6;
  v4[51] = *(void *)(v6 - 8);
  v4[52] = swift_task_alloc();
  sub_100004210(&qword_1000D5008);
  v4[53] = swift_task_alloc();
  uint64_t v7 = sub_1000B2F60();
  v4[54] = v7;
  v4[55] = *(void *)(v7 - 8);
  v4[56] = swift_task_alloc();
  v4[57] = swift_task_alloc();
  v4[58] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for AccessoryAndSceneEntity();
  v4[59] = v8;
  v4[60] = *(void *)(v8 - 8);
  v4[61] = swift_task_alloc();
  v4[62] = swift_task_alloc();
  return _swift_task_switch(sub_100061E70, 0, 0);
}

uint64_t sub_100061E70()
{
  uint64_t v1 = *(void *)(v0 + 352);
  long long v6 = *(_OWORD *)(v0 + 336);
  uint64_t v2 = HomeWidget.shared.unsafeMutableAddressor();
  *(void *)(v0 + 504) = v2;
  *(void *)(v0 + 512) = *v2;
  *(_OWORD *)(v0 + 16) = v6;
  *(void *)(v0 + 32) = v1;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v3;
  unint64_t v4 = sub_10006B544();
  *uint64_t v3 = v0;
  v3[1] = sub_100061F58;
  return HomeWidget.synchronizeWithHomeKit<A>(configuration:)(v0 + 16, (uint64_t)&type metadata for RecommendedItemIntent, v4);
}

uint64_t sub_100061F58(uint64_t a1)
{
  *(void *)(*(void *)v1 + 528) = a1;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100062078, 0, 0);
}

uint64_t sub_100062078()
{
  uint64_t v14 = v0;
  if (v0[66])
  {
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    v0[67] = sub_100017618(v0[46], (uint64_t)qword_1000DCC18);
    uint64_t v1 = sub_1000B3550();
    os_log_type_t v2 = sub_1000B42C0();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136315138;
      v0[20] = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, &v13);
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s HomeKit refresh - started", v3, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    v0[68] = [self sharedDispatcher];
    sub_1000B3580();
    unint64_t v5 = v4;
    long long v6 = (void *)swift_task_alloc();
    v0[69] = v6;
    *long long v6 = v0;
    v6[1] = sub_100062478;
    v7.n128_u64[0] = v5;
    return HFHomeKitDispatcher.refresh(until:)(v7);
  }
  else
  {
    if (qword_1000D4EA8 != -1) {
      swift_once();
    }
    sub_100017618(v0[46], (uint64_t)qword_1000DCC18);
    uint64_t v8 = sub_1000B3550();
    os_log_type_t v9 = sub_1000B42A0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      v0[38] = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, &v13);
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s unable to get shared HMHomeManager instance", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void *))v0[1];
    return v11(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100062478()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 560) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100067310;
  }
  else
  {

    uint64_t v3 = sub_100062594;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100062594()
{
  uint64_t v69 = v0;
  uint64_t v1 = sub_1000B3550();
  os_log_type_t v2 = sub_1000B42C0();
  id v64 = v0;
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    v0[22] = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, v68);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s HomeKit refresh - ended", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000B2990();
  uint64_t v4 = v0[23];
  if (v4)
  {
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      uint64_t v6 = v0[60];
      uint64_t v7 = v0[55];
      uint64_t v8 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      unint64_t v65 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      uint64_t v66 = *(void *)(v6 + 72);
      os_log_type_t v9 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
      uint64_t v10 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
      uint64_t v63 = v7;
      uint64_t v11 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
      swift_bridgeObjectRetain();
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
      do
      {
        uint64_t v13 = v0[62];
        uint64_t v15 = v0[53];
        uint64_t v14 = v0[54];
        sub_100059028(v8, v13, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        (*v65)(v15, v13, v14);
        (*v9)(v15, 0, 1, v14);
        sub_100059090(v13, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        if ((*v10)(v15, 1, v14) == 1)
        {
          sub_100017B5C(v0[53], &qword_1000D5008);
        }
        else
        {
          uint64_t v17 = (char *)v0[57];
          int v16 = (char *)v0[58];
          uint64_t v18 = v0[53];
          uint64_t v19 = v0[54];
          uint64_t v20 = *v11;
          (*v11)(v16, v18, v19);
          v20(v17, (uint64_t)v16, v19);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = (char *)sub_1000753BC(0, *((void *)v12 + 2) + 1, 1, (unint64_t)v12);
          }
          unint64_t v22 = *((void *)v12 + 2);
          unint64_t v21 = *((void *)v12 + 3);
          if (v22 >= v21 >> 1) {
            uint64_t v12 = (char *)sub_1000753BC(v21 > 1, v22 + 1, 1, (unint64_t)v12);
          }
          uint64_t v23 = v64[57];
          uint64_t v24 = v64[54];
          *((void *)v12 + 2) = v22 + 1;
          v20(&v12[((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v22], v23, v24);
          uint64_t v0 = v64;
        }
        v8 += v66;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      uint64_t v25 = v12;
    }
    else
    {
      uint64_t v25 = (char *)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = 0;
  }
  v0[71] = v25;
  unint64_t v26 = (void *)v0[66];
  sub_1000B3EA0();
  id v27 = [v26 homes];
  v0[72] = sub_100008148(0, (unint64_t *)&qword_1000D5550);
  unint64_t v28 = sub_1000B4100();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v30 = v0 + 40;
  if (v29)
  {
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    uint64_t v31 = sub_1000B3550();
    os_log_type_t v32 = sub_1000B42C0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = v0[49];
      uint64_t v34 = swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136315394;
      v0[37] = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, v68);
      sub_1000B4400();
      *(_WORD *)(v34 + 12) = 2080;
      sub_1000B2990();
      uint64_t v35 = type metadata accessor for HomeEntity();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v33, 1, v35))
      {
        sub_100017B5C(v0[49], &qword_1000D5518);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
      }
      else
      {
        uint64_t v53 = v0[56];
        uint64_t v54 = v64[55];
        uint64_t v55 = v64[54];
        uint64_t v56 = v64[49];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v56, v55);
        sub_100017B5C(v56, &qword_1000D5518);
        uint64_t v36 = sub_1000B2F30();
        uint64_t v37 = v57;
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
        uint64_t v0 = v64;
      }
      v0[8] = v36;
      v0[9] = v37;
      sub_100004210(&qword_1000D5198);
      uint64_t v58 = sub_1000B4040();
      v0[39] = sub_10002A68C(v58, v59, v68);
      sub_1000B4400();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s widget configuration has home %s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_release_n();
      swift_release_n();
    }

    uint64_t v60 = (void *)v0[63];
    uint64_t v61 = v0[43];
    swift_retain();
    swift_retain();
    swift_retain();
    v0[73] = sub_100057A34(v28, v61);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v0[74] = *v60;
    swift_retain();
    uint64_t v62 = *HomeSettingsActor.shared.unsafeMutableAddressor();
    return _swift_task_switch(sub_100062F68, v62, 0);
  }
  else
  {
    int64_t v38 = v0;
    uint64_t v39 = (void *)v0[66];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v40 = v39;
    uint64_t v41 = sub_1000B3550();
    os_log_type_t v42 = sub_1000B42A0();
    BOOL v43 = os_log_type_enabled(v41, v42);
    unint64_t v44 = (void *)v38[66];
    if (v43)
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136315394;
      *uint64_t v30 = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, v68);
      sub_1000B4400();
      *(_WORD *)(v45 + 12) = 2112;
      v38[41] = v44;
      id v47 = v44;
      sub_1000B4400();
      *uint64_t v46 = v44;

      _os_log_impl((void *)&_mh_execute_header, v41, v42, "%s (%@) does not have any homes", (uint8_t *)v45, 0x16u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v48 = v38[66];
    uint64_t v67 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000D6518 + dword_1000D6518);
    uint64_t v49 = (void *)swift_task_alloc();
    v38[107] = v49;
    void *v49 = v38;
    v49[1] = sub_100066FCC;
    uint64_t v50 = v38[44];
    uint64_t v51 = v38[42];
    return v67((uint64_t)_swiftEmptyArrayStorage, v51, v50, v48);
  }
}

uint64_t sub_100062F68()
{
  uint64_t v1 = UserHomeSettings.shared.unsafeMutableAddressor();
  uint64_t v2 = *v1;
  *(void *)(v0 + 600) = *v1;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 608) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100063028;
  return HomeWidget.recommendedHome(userSettings:)(v2, (uint64_t)&protocol witness table for UserHomeSettings);
}

uint64_t sub_100063028(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 616) = v1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = sub_1000635A4;
  }
  else
  {
    *(void *)(v4 + 624) = a1;
    uint64_t v5 = sub_100063190;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100063190()
{
  uint64_t v33 = v0;
  uint64_t v1 = (void *)v0[78];
  uint64_t v2 = (void *)v0[73];
  if (v2)
  {
    id v3 = (id)v0[73];
    id v4 = v3;
LABEL_5:
    uint64_t v5 = v0[77];
    v0[83] = v4;
    v0[82] = v3;
    v0[81] = v1;
    v0[80] = v2;
    v0[79] = v5;
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1000D6520 + dword_1000D6520);
    id v6 = v2;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[84] = v7;
    void *v7 = v0;
    v7[1] = sub_100063990;
    uint64_t v8 = v0[43];
    uint64_t v9 = v0[44];
    uint64_t v10 = v0[42];
    return v30(v10, v8, v9);
  }
  if (v1)
  {
    id v3 = v1;
    uint64_t v2 = 0;
    id v4 = v1;
    goto LABEL_5;
  }
  uint64_t v12 = (void *)v0[66];
  swift_bridgeObjectRelease();
  id v13 = v12;
  uint64_t v14 = sub_1000B3550();
  os_log_type_t v15 = sub_1000B42A0();
  if (os_log_type_enabled(v14, v15))
  {
    int v16 = (void *)v0[66];
    os_log_type_t type = v15;
    uint64_t v17 = swift_slowAlloc();
    unint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315650;
    v0[10] = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, &v32);
    sub_1000B4400();
    *(_WORD *)(v17 + 12) = 2112;
    v0[11] = v16;
    id v18 = v16;
    sub_1000B4400();
    *unint64_t v28 = v16;

    *(_WORD *)(v17 + 22) = 2080;
    id v19 = [v18 homes];
    sub_1000B4100();

    uint64_t v20 = sub_1000B4110();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    v0[12] = sub_10002A68C(v20, v22, &v32);
    sub_1000B4400();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v14, type, "%s (%@) does not have either a specified home or \"current\" among (%s", (uint8_t *)v17, 0x20u);
    sub_100004210(&qword_1000D51D8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v23 = (void *)v0[66];
  }
  uint64_t v24 = v0[66];
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000D6518 + dword_1000D6518);
  uint64_t v25 = (void *)swift_task_alloc();
  v0[105] = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_100066C88;
  uint64_t v26 = v0[44];
  uint64_t v27 = v0[42];
  return v31((uint64_t)_swiftEmptyArrayStorage, v27, v26, v24);
}

uint64_t sub_1000635A4()
{
  uint64_t v29 = v0;
  uint64_t v1 = (void *)v0[73];
  if (v1)
  {
    v0[83] = v1;
    v0[82] = v1;
    v0[81] = 0;
    v0[80] = v1;
    v0[79] = 0;
    uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1000D6520 + dword_1000D6520);
    id v2 = v1;
    id v3 = (void *)swift_task_alloc();
    v0[84] = v3;
    *id v3 = v0;
    v3[1] = sub_100063990;
    uint64_t v4 = v0[43];
    uint64_t v5 = v0[44];
    uint64_t v6 = v0[42];
    return v26(v6, v4, v5);
  }
  else
  {
    uint64_t v8 = (void *)v0[66];
    swift_bridgeObjectRelease();
    id v9 = v8;
    uint64_t v10 = sub_1000B3550();
    os_log_type_t v11 = sub_1000B42A0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (void *)v0[66];
      os_log_type_t type = v11;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315650;
      v0[10] = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, &v28);
      sub_1000B4400();
      *(_WORD *)(v13 + 12) = 2112;
      v0[11] = v12;
      id v14 = v12;
      sub_1000B4400();
      *uint64_t v24 = v12;

      *(_WORD *)(v13 + 22) = 2080;
      id v15 = [v14 homes];
      sub_1000B4100();

      uint64_t v16 = sub_1000B4110();
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      v0[12] = sub_10002A68C(v16, v18, &v28);
      sub_1000B4400();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v10, type, "%s (%@) does not have either a specified home or \"current\" among (%s", (uint8_t *)v13, 0x20u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      id v19 = (void *)v0[66];
    }
    uint64_t v20 = v0[66];
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000D6518 + dword_1000D6518);
    unint64_t v21 = (void *)swift_task_alloc();
    v0[105] = v21;
    void *v21 = v0;
    v21[1] = sub_100066C88;
    uint64_t v22 = v0[44];
    uint64_t v23 = v0[42];
    return v27((uint64_t)_swiftEmptyArrayStorage, v23, v22, v20);
  }
}

uint64_t sub_100063990(uint64_t a1)
{
  *(void *)(*(void *)v1 + 680) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100063A90, 0, 0);
}

uint64_t sub_100063A90()
{
  uint64_t v110 = v0;
  uint64_t v1 = *(void *)(v0 + 680);
  id v2 = [*(id *)(v0 + 528) homes];
  uint64_t v3 = sub_1000B4100();

  *(void *)(v0 + 104) = _swiftEmptyArrayStorage;
  Class isa = (Class)(v0 + 104);
  *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v5 = *(void *)(v0 + 528);
    uint64_t v6 = (void *)swift_task_alloc();
    uint64_t v6[2] = v3;
    _OWORD v6[3] = v5;
    v6[4] = isa;
    v6[5] = v0 + 112;
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_100056D60(v7, (void (*)(char *, uint64_t))sub_10006B598);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = *(void **)(v0 + 104);
  unint64_t v9 = *(void *)(v0 + 112);
  *(void *)(v0 + 688) = v8;
  uint64_t v102 = v8;
  *(void *)os_log_type_t type = v8[2];
  if (!*(void *)type)
  {
    uint64_t v10 = *(void **)(v0 + 656);
    swift_bridgeObjectRelease();
    sub_100004210(&qword_1000D5190);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1000B52D0;
    *(void *)(v11 + 32) = v10;
    v109[0] = v11;
    sub_1000B4120();
    unint64_t v9 = v109[0];
    id v12 = v10;
  }
  *(void *)(v0 + 696) = v9;
  if (v9 >> 62)
  {
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v106 = isa;
  uint64_t v101 = (uint64_t *)((char *)isa + 136);
  if (v13)
  {
    uint64_t v14 = 0;
    uint64_t v95 = (uint64_t *)((char *)isa + 16);
    uint64_t v96 = (void *)((char *)isa + 24);
    unint64_t v97 = (uint64_t *)((char *)isa + 32);
    unint64_t v98 = (void *)((char *)isa + 144);
    BOOL v99 = (uint64_t *)((char *)isa + 152);
    char v100 = (uint64_t *)((char *)isa + 160);
    uint64_t v108 = v0;
    while (1)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v15 = (id)sub_1000B45E0();
      }
      else {
        id v15 = *(id *)(v9 + 8 * v14 + 32);
      }
      uint64_t v16 = v15;
      *(void *)(v0 + 704) = v15;
      uint64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        goto LABEL_55;
      }
      v18.super.Class isa = (Class)[v15 currentUser];
      Class isa = v18.super.isa;
      BOOL v19 = sub_1000B4350(v18);

      if (v19) {
        break;
      }
      uint64_t v0 = v108;
      if (objc_msgSend(v16, "hf_isCurrentRestrictedGuestAwayFromHome"))
      {
        id v51 = v16;
        uint64_t v52 = sub_1000B3550();
        os_log_type_t v53 = sub_1000B42A0();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = swift_slowAlloc();
          uint64_t v55 = (void *)swift_slowAlloc();
          v109[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = 136315906;
          *uint64_t v101 = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, v109);
          sub_1000B4400();
          *(_WORD *)(v54 + 12) = 2112;
          *unint64_t v98 = v51;
          id v56 = v51;
          sub_1000B4400();
          *uint64_t v55 = v51;

          *(_WORD *)(v54 + 22) = 2080;
          id v57 = [v56 currentUser];
          id v58 = [v57 hf_prettyDescription];

          uint64_t v59 = sub_1000B4010();
          unint64_t v61 = v60;

          *BOOL v99 = sub_10002A68C(v59, v61, v109);
          sub_1000B4400();
          swift_bridgeObjectRelease();

          *(_WORD *)(v54 + 32) = 2080;
          [v56 homeLocationStatus];
          id v62 = (id)HMStringFromHomeLocation();
          uint64_t v63 = sub_1000B4010();
          unint64_t v65 = v64;

          *char v100 = sub_10002A68C(v63, v65, v109);
          sub_1000B4400();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s Displaying No Access because current user is an RG and away from home %@. currentUser = %s. device location status %s", (uint8_t *)v54, 0x2Au);
          sub_100004210(&qword_1000D51D8);
          swift_arrayDestroy();
          uint64_t v0 = v108;
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v90 = *(void *)(v0 + 528);
        uint64_t v107 = (char *)&dword_1000D6518 + dword_1000D6518;
        uint64_t v92 = (void *)swift_task_alloc();
        *(void *)(v0 + 728) = v92;
        *uint64_t v92 = v0;
        unint64_t v93 = sub_1000650D4;
        goto LABEL_49;
      }
      if ((objc_msgSend(v16, "hf_hasEnabledResident") & 1) == 0)
      {
        id v66 = v16;
        uint64_t v67 = sub_1000B3550();
        os_log_type_t v68 = sub_1000B42A0();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = swift_slowAlloc();
          uint64_t v70 = (void *)swift_slowAlloc();
          v109[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v69 = 136315650;
          *uint64_t v95 = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, v109);
          sub_1000B4400();
          *(_WORD *)(v69 + 12) = 2112;
          *uint64_t v96 = v66;
          id v71 = v66;
          sub_1000B4400();
          *uint64_t v70 = v66;

          *(_WORD *)(v69 + 22) = 2080;
          id v72 = [v71 residentDevices];
          sub_100008148(0, &qword_1000D6528);
          sub_1000B4100();

          uint64_t v73 = sub_1000B4110();
          unint64_t v75 = v74;
          swift_bridgeObjectRelease();
          *unint64_t v97 = sub_10002A68C(v73, v75, v109);
          sub_1000B4400();
          swift_bridgeObjectRelease();

          uint64_t v0 = v108;
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "%s No enabled resident in %@: %s", (uint8_t *)v69, 0x20u);
          sub_100004210(&qword_1000D51D8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v90 = *(void *)(v0 + 528);
        uint64_t v107 = (char *)&dword_1000D6518 + dword_1000D6518;
        uint64_t v92 = (void *)swift_task_alloc();
        *(void *)(v0 + 744) = v92;
        *uint64_t v92 = v0;
        unint64_t v93 = sub_1000654C4;
        goto LABEL_49;
      }
      if ((objc_msgSend(*(id *)(v108 + 528), "hf_canAccessHomeRemotely:", v16) & 1) == 0)
      {
        id v76 = v16;
        uint64_t v77 = sub_1000B3550();
        os_log_type_t v78 = sub_1000B42A0();
        if (os_log_type_enabled(v77, v78))
        {
          uint64_t v79 = swift_slowAlloc();
          unint64_t v80 = (void *)swift_slowAlloc();
          v109[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v79 = 136315394;
          *(void *)(v108 + 144) = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, v109);
          sub_1000B4400();
          *(_WORD *)(v79 + 12) = 2112;
          *(void *)(v108 + 152) = v76;
          id v81 = v76;
          uint64_t v0 = v108;
          sub_1000B4400();
          void *v80 = v76;

          _os_log_impl((void *)&_mh_execute_header, v77, v78, "%s No remote access to (%@)", (uint8_t *)v79, 0x16u);
          sub_100004210(&qword_1000D51D8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v90 = *(void *)(v0 + 528);
        uint64_t v107 = (char *)&dword_1000D6518 + dword_1000D6518;
        uint64_t v92 = (void *)swift_task_alloc();
        *(void *)(v0 + 760) = v92;
        *uint64_t v92 = v0;
        unint64_t v93 = sub_1000658B4;
        goto LABEL_49;
      }

      ++v14;
      if (v17 == v13) {
        goto LABEL_19;
      }
    }
    uint64_t v39 = (void *)v108;
    id v40 = v16;
    uint64_t v41 = sub_1000B3550();
    os_log_type_t v42 = sub_1000B42A0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      os_log_type_t typeb = v42;
      unint64_t v44 = (void *)swift_slowAlloc();
      v109[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315650;
      *(void *)(v108 + 272) = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, v109);
      sub_1000B4400();
      *(_WORD *)(v43 + 12) = 2112;
      *(void *)(v108 + 280) = v40;
      id v45 = v40;
      sub_1000B4400();
      *unint64_t v44 = v40;

      *(_WORD *)(v43 + 22) = 2080;
      id v46 = [v45 currentUser];
      id v47 = [v46 hf_prettyDescription];

      uint64_t v48 = sub_1000B4010();
      unint64_t v50 = v49;

      uint64_t v39 = (void *)v108;
      *(void *)(v108 + 288) = sub_10002A68C(v48, v50, v109);
      sub_1000B4400();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v41, typeb, "%s Current time is outside of the allowed time frame to access home %@. currentUser = %s", (uint8_t *)v43, 0x20u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v90 = v39[66];
    uint64_t v107 = (char *)&dword_1000D6518 + dword_1000D6518;
    Swift::String v91 = (void *)swift_task_alloc();
    v39[89] = v91;
    void *v91 = v39;
    v91[1] = sub_100064CE4;
    uint64_t v24 = v39[44];
    uint64_t v25 = v39[42];
    goto LABEL_50;
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if (*(void *)type)
  {
LABEL_20:
    uint64_t v20 = *(void *)(v0 + 528);
    unint64_t v21 = *(void **)(v0 + 416);
    sub_1000B2990();
    uint64_t v22 = sub_1000614A4(v102, v21, *(unsigned __int8 *)(v0 + 889));
    *(void *)(v0 + 808) = v22;
    swift_bridgeObjectRelease();
    uint64_t v107 = (char *)&dword_1000D6518 + dword_1000D6518;
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 816) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_100066424;
    uint64_t v24 = *(void *)(v0 + 352);
    uint64_t v25 = *(void *)(v0 + 336);
    uint64_t v26 = v22;
    uint64_t v27 = v20;
    goto LABEL_51;
  }
  id v28 = [*(id *)(v0 + 656) accessories];
  sub_100008148(0, &qword_1000D4FD8);
  unint64_t v29 = sub_1000B4100();

  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void **)(v0 + 656);
  if (v30)
  {
    if (sub_10000EF80(v31)) {
      goto LABEL_20;
    }
    id v32 = *(id *)(v0 + 656);
    uint64_t v33 = sub_1000B3550();
    os_log_type_t v34 = sub_1000B42A0();
    BOOL v35 = os_log_type_enabled(v33, v34);
    uint64_t v36 = *(void **)(v0 + 656);
    if (v35)
    {
      uint64_t v37 = swift_slowAlloc();
      typea = (void *)swift_slowAlloc();
      v109[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315394;
      v106[13] = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, v109);
      sub_1000B4400();
      *(_WORD *)(v37 + 12) = 2112;
      v106[14] = v36;
      id v38 = v36;
      sub_1000B4400();
      void *typea = v36;

      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s No supported accessories in %@", (uint8_t *)v37, 0x16u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v90 = *(void *)(v0 + 528);
    uint64_t v107 = (char *)&dword_1000D6518 + dword_1000D6518;
    uint64_t v92 = (void *)swift_task_alloc();
    *(void *)(v0 + 792) = v92;
    *uint64_t v92 = v0;
    unint64_t v93 = sub_100066064;
  }
  else
  {
    id v82 = v31;
    uint64_t v83 = sub_1000B3550();
    os_log_type_t v84 = sub_1000B42A0();
    BOOL v85 = os_log_type_enabled(v83, v84);
    uint64_t v86 = *(void **)(v0 + 656);
    if (v85)
    {
      uint64_t v87 = swift_slowAlloc();
      unint64_t v88 = (void *)swift_slowAlloc();
      v109[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v87 = 136315394;
      v106[15] = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, v109);
      sub_1000B4400();
      *(_WORD *)(v87 + 12) = 2112;
      v106[16] = v86;
      id v89 = v86;
      sub_1000B4400();
      *unint64_t v88 = v86;

      _os_log_impl((void *)&_mh_execute_header, v83, v84, "%s No accessories in (%@)", (uint8_t *)v87, 0x16u);
      sub_100004210(&qword_1000D51D8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v90 = *(void *)(v0 + 528);
    uint64_t v107 = (char *)&dword_1000D6518 + dword_1000D6518;
    uint64_t v92 = (void *)swift_task_alloc();
    *(void *)(v0 + 776) = v92;
    *uint64_t v92 = v0;
    unint64_t v93 = sub_100065CA4;
  }
LABEL_49:
  v92[1] = v93;
  uint64_t v24 = *(void *)(v0 + 352);
  uint64_t v25 = *(void *)(v0 + 336);
LABEL_50:
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v27 = v90;
LABEL_51:
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))v107)(v26, v25, v24, v27);
}

uint64_t sub_100064CE4()
{
  *(void *)(*(void *)v1 + 720) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100064F80;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v2 = sub_100064E04;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100064E04()
{
  sub_10006B4F0();
  swift_allocError();
  *uint64_t v1 = 7;
  swift_willThrow();
  id v2 = (void *)v0[88];
  uint64_t v3 = (void *)v0[83];
  uint64_t v4 = (void *)v0[82];
  uint64_t v5 = (void *)v0[80];
  uint64_t v6 = (void *)v0[66];
  uint64_t v7 = v0[51];
  uint64_t v11 = (void *)v0[81];
  uint64_t v12 = v0[52];
  uint64_t v8 = v0[50];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100064F80()
{
  uint64_t v1 = (void *)v0[88];
  id v2 = (void *)v0[83];
  uint64_t v3 = (void *)v0[82];
  uint64_t v10 = (void *)v0[81];
  uint64_t v4 = (void *)v0[80];
  uint64_t v5 = (void *)v0[66];
  uint64_t v6 = v0[51];
  uint64_t v11 = v0[52];
  uint64_t v7 = v0[50];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1000650D4()
{
  *(void *)(*(void *)v1 + 736) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100065370;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v2 = sub_1000651F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000651F4()
{
  sub_10006B4F0();
  swift_allocError();
  *uint64_t v1 = 8;
  swift_willThrow();
  id v2 = (void *)v0[88];
  uint64_t v3 = (void *)v0[83];
  uint64_t v4 = (void *)v0[82];
  uint64_t v5 = (void *)v0[80];
  uint64_t v6 = (void *)v0[66];
  uint64_t v7 = v0[51];
  uint64_t v11 = (void *)v0[81];
  uint64_t v12 = v0[52];
  uint64_t v8 = v0[50];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100065370()
{
  uint64_t v1 = (void *)v0[88];
  id v2 = (void *)v0[83];
  uint64_t v3 = (void *)v0[82];
  uint64_t v10 = (void *)v0[81];
  uint64_t v4 = (void *)v0[80];
  uint64_t v5 = (void *)v0[66];
  uint64_t v6 = v0[51];
  uint64_t v11 = v0[52];
  uint64_t v7 = v0[50];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1000654C4()
{
  *(void *)(*(void *)v1 + 752) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100065760;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v2 = sub_1000655E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000655E4()
{
  sub_10006B4F0();
  swift_allocError();
  *uint64_t v1 = 3;
  swift_willThrow();
  id v2 = (void *)v0[88];
  uint64_t v3 = (void *)v0[83];
  uint64_t v4 = (void *)v0[82];
  uint64_t v5 = (void *)v0[80];
  uint64_t v6 = (void *)v0[66];
  uint64_t v7 = v0[51];
  uint64_t v11 = (void *)v0[81];
  uint64_t v12 = v0[52];
  uint64_t v8 = v0[50];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100065760()
{
  uint64_t v1 = (void *)v0[88];
  id v2 = (void *)v0[83];
  uint64_t v3 = (void *)v0[82];
  uint64_t v10 = (void *)v0[81];
  uint64_t v4 = (void *)v0[80];
  uint64_t v5 = (void *)v0[66];
  uint64_t v6 = v0[51];
  uint64_t v11 = v0[52];
  uint64_t v7 = v0[50];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1000658B4()
{
  *(void *)(*(void *)v1 + 768) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100065B50;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v2 = sub_1000659D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000659D4()
{
  sub_10006B4F0();
  swift_allocError();
  *uint64_t v1 = 4;
  swift_willThrow();
  id v2 = (void *)v0[88];
  uint64_t v3 = (void *)v0[83];
  uint64_t v4 = (void *)v0[82];
  uint64_t v5 = (void *)v0[80];
  uint64_t v6 = (void *)v0[66];
  uint64_t v7 = v0[51];
  uint64_t v11 = (void *)v0[81];
  uint64_t v12 = v0[52];
  uint64_t v8 = v0[50];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100065B50()
{
  uint64_t v1 = (void *)v0[88];
  id v2 = (void *)v0[83];
  uint64_t v3 = (void *)v0[82];
  uint64_t v10 = (void *)v0[81];
  uint64_t v4 = (void *)v0[80];
  uint64_t v5 = (void *)v0[66];
  uint64_t v6 = v0[51];
  uint64_t v11 = v0[52];
  uint64_t v7 = v0[50];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100065CA4()
{
  *(void *)(*(void *)v1 + 784) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100065F28;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v2 = sub_100065DC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100065DC4()
{
  sub_10006B4F0();
  swift_allocError();
  *uint64_t v1 = 5;
  swift_willThrow();
  id v2 = *(void **)(v0 + 664);
  uint64_t v3 = *(void **)(v0 + 648);
  uint64_t v4 = *(void **)(v0 + 640);
  uint64_t v5 = *(void **)(v0 + 528);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v7 = *(void *)(v0 + 416);
  uint64_t v8 = *(void *)(v0 + 400);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100065F28()
{
  uint64_t v1 = *(void **)(v0 + 664);
  id v2 = *(void **)(v0 + 648);
  uint64_t v3 = *(void **)(v0 + 640);
  uint64_t v4 = *(void **)(v0 + 528);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100066064()
{
  *(void *)(*(void *)v1 + 800) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1000662E8;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v2 = sub_100066184;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100066184()
{
  sub_10006B4F0();
  swift_allocError();
  *uint64_t v1 = 6;
  swift_willThrow();
  id v2 = *(void **)(v0 + 664);
  uint64_t v3 = *(void **)(v0 + 648);
  uint64_t v4 = *(void **)(v0 + 640);
  uint64_t v5 = *(void **)(v0 + 528);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v7 = *(void *)(v0 + 416);
  uint64_t v8 = *(void *)(v0 + 400);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1000662E8()
{
  uint64_t v1 = *(void **)(v0 + 664);
  id v2 = *(void **)(v0 + 648);
  uint64_t v3 = *(void **)(v0 + 640);
  uint64_t v4 = *(void **)(v0 + 528);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100066424(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 824) = a1;
  *(void *)(v3 + 832) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100066B6C;
  }
  else
  {
    uint64_t v4 = sub_100066574;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100066574()
{
  uint64_t v60 = v0;
  *(void *)(v0 + 168) = *(void *)(v0 + 824);
  swift_bridgeObjectRetain();
  sub_1000B2990();
  if (*(unsigned char *)(v0 + 888))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = *(void **)(v0 + 824);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 568);
    if (v2)
    {
      uint64_t v3 = *(void *)(v0 + 824);
      swift_bridgeObjectRetain();
      uint64_t v1 = sub_100056FCC(v2, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v1 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease_n();
    *(void *)(v0 + 168) = v1;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 376) + 16))(*(void *)(v0 + 384), *(void *)(v0 + 536), *(void *)(v0 + 368));
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1000B3550();
  os_log_type_t v5 = sub_1000B42C0();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v50 = v5;
    os_log_t log = v4;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    *(void *)(v0 + 192) = sub_10002A68C(0xD00000000000002CLL, 0x80000001000B9A90, &v56);
    sub_1000B4400();
    uint64_t v52 = (uint8_t *)v6;
    *(_WORD *)(v6 + 12) = 2080;
    int64_t v7 = v1[2];
    if (v7)
    {
      uint64_t v9 = *(void *)(v0 + 472);
      uint64_t v8 = *(void *)(v0 + 480);
      id v57 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10001EA14(0, v7, 0);
      uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v11 = *(void *)(v8 + 72);
      do
      {
        uint64_t v12 = *(void *)(v0 + 488);
        sub_100059028(v10, v12, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        sub_100058DF8(&qword_1000D77B0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v58 = sub_1000B4800();
        uint64_t v59 = v13;
        v62._countAndFlagsBits = 58;
        v62._object = (void *)0xE100000000000000;
        sub_1000B4090(v62);
        uint64_t v14 = v12 + *(int *)(v9 + 24);
        id v15 = (uint64_t *)(v14 + *(int *)(type metadata accessor for WidgetTileInfo() + 24));
        uint64_t v17 = *v15;
        uint64_t v16 = (void *)v15[1];
        swift_bridgeObjectRetain();
        v63._countAndFlagsBits = v17;
        v63._object = v16;
        sub_1000B4090(v63);
        swift_bridgeObjectRelease();
        uint64_t v18 = v58;
        uint64_t v19 = v59;
        sub_100059090(v12, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
        uint64_t v20 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001EA14(0, v20[2] + 1, 1);
          uint64_t v20 = v57;
        }
        unint64_t v22 = v20[2];
        unint64_t v21 = v20[3];
        if (v22 >= v21 >> 1)
        {
          sub_10001EA14(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v57;
        }
        void v20[2] = v22 + 1;
        uint64_t v23 = &v20[2 * v22];
        v23[4] = v18;
        v23[5] = v19;
        v10 += v11;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = *(void **)(v0 + 656);
    os_log_type_t v42 = *(void **)(v0 + 640);
    uint64_t v43 = *(void **)(v0 + 528);
    uint64_t v34 = *(void *)(v0 + 408);
    uint64_t v49 = *(void *)(v0 + 416);
    id v47 = *(void **)(v0 + 648);
    uint64_t v48 = *(void *)(v0 + 400);
    uint64_t v35 = *(void *)(v0 + 376);
    id v45 = *(void **)(v0 + 664);
    uint64_t v46 = *(void *)(v0 + 384);
    uint64_t v44 = *(void *)(v0 + 368);
    uint64_t v36 = sub_1000B4110();
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 200) = sub_10002A68C(v36, v38, &v56);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v50, "%s Finalized entities: %s", v52, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v46, v44);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v49, v48);
  }
  else
  {
    uint64_t v24 = *(void **)(v0 + 664);
    uint64_t v25 = *(void **)(v0 + 656);
    uint64_t v26 = *(void **)(v0 + 640);
    uint64_t v27 = *(void **)(v0 + 528);
    uint64_t v28 = *(void *)(v0 + 408);
    os_log_t loga = *(os_log_t *)(v0 + 416);
    id v51 = *(void **)(v0 + 648);
    uint64_t v53 = *(void *)(v0 + 400);
    unint64_t v29 = v4;
    uint64_t v30 = *(void *)(v0 + 376);
    uint64_t v31 = *(void *)(v0 + 384);
    uint64_t v32 = *(void *)(v0 + 368);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
    (*(void (**)(os_log_t, uint64_t))(v28 + 8))(loga, v53);
  }
  swift_beginAccess();
  uint64_t v39 = *(void *)(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v40 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v40(v39);
}

uint64_t sub_100066B6C()
{
  uint64_t v1 = *(void **)(v0 + 664);
  uint64_t v2 = *(void **)(v0 + 648);
  uint64_t v3 = *(void **)(v0 + 640);
  uint64_t v4 = *(void **)(v0 + 528);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100066C88()
{
  *(void *)(*(void *)v1 + 848) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100066ED0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100066DA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100066DA8()
{
  sub_10006B4F0();
  swift_allocError();
  *uint64_t v1 = 2;
  swift_willThrow();
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 400);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100066ED0()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 400);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100066FCC()
{
  *(void *)(*(void *)v1 + 864) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100067214;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1000670EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000670EC()
{
  sub_10006B4F0();
  swift_allocError();
  *uint64_t v1 = 1;
  swift_willThrow();
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 400);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100067214()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 400);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100067310()
{
  uint64_t v1 = *(void *)(v0 + 528);

  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000D6518 + dword_1000D6518);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 872) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000673D4;
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 336);
  return v6((uint64_t)_swiftEmptyArrayStorage, v4, v3, v1);
}

uint64_t sub_1000673D4()
{
  *(void *)(*(void *)v1 + 880) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100067600;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1000674F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000674F4()
{
  sub_10006B4F0();
  swift_allocError();
  *uint64_t v1 = 0;
  swift_willThrow();
  uint64_t v2 = *(void **)(v0 + 528);
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100067600()
{
  uint64_t v1 = *(void **)(v0 + 528);
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000676E4(uint64_t a1)
{
  uint64_t v2 = sub_1000B3620();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_1000B3E20();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - v13;
  type metadata accessor for WidgetViewForLargeSquareTiles(0);
  sub_10007F150((uint64_t)v14);
  sub_1000B3DF0();
  char v15 = sub_1000B3DE0();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  v16(v14, v8);
  if (v15)
  {
    uint64_t v17 = *(void *)a1;
    char v18 = *(unsigned char *)(a1 + 8);
    sub_100044118(*(void *)a1, v18);
    char v19 = sub_10007E9FC(v17, v18);
    sub_1000441FC(v17, v18);
    if (v19)
    {
      if (qword_1000D4ED8 != -1) {
        swift_once();
      }
      uint64_t v20 = &qword_1000DCCA0;
    }
    else
    {
      if (qword_1000D4EE0 != -1) {
        swift_once();
      }
      uint64_t v20 = &qword_1000DCCA8;
    }
  }
  else
  {
    sub_10007EE5C((uint64_t)v7);
    uint64_t v22 = v26;
    uint64_t v21 = v27;
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v5, enum case for ColorScheme.light(_:), v27);
    char v23 = sub_1000B3610();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v22 + 8);
    v24(v5, v21);
    v24(v7, v21);
    if (v23)
    {
      if (qword_1000D4EE8 != -1) {
        swift_once();
      }
      uint64_t v20 = &qword_1000DCCB0;
    }
    else
    {
      if (qword_1000D4EF0 != -1) {
        swift_once();
      }
      uint64_t v20 = &qword_1000DCCB8;
    }
  }
  return *v20;
}

unint64_t sub_100067A5C()
{
  unint64_t result = qword_1000D6190;
  if (!qword_1000D6190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6190);
  }
  return result;
}

uint64_t sub_100067AB0()
{
  sub_1000441FC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100067AF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_10005165C(a1, v2 + 16, a2);
}

uint64_t sub_100067AFC(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_100067B2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100067B58(uint64_t a1)
{
  return a1;
}

unint64_t sub_100067B88()
{
  unint64_t result = qword_1000D6208;
  if (!qword_1000D6208)
  {
    sub_100004B80(&qword_1000D61F8);
    sub_10001FF28(&qword_1000D6210, &qword_1000D6218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6208);
  }
  return result;
}

uint64_t sub_100067C28(uint64_t a1)
{
  return a1;
}

uint64_t sub_100067C54()
{
  sub_1000441FC(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100067CA0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100051B88(a1, a2, v3 + 32, *(void *)(v3 + 88), a3, *(double *)(v3 + 16), *(double *)(v3 + 24));
}

uint64_t sub_100067CB4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100067D2C()
{
  uint64_t v1 = type metadata accessor for WidgetViewsForMediumSystemFamily(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000B3E50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  sub_1000441FC(*(void *)(v0 + v3 + *(int *)(v1 + 20)), *(unsigned char *)(v0 + v3 + *(int *)(v1 + 20) + 8));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100067E60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for WidgetViewsForMediumSystemFamily(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100052950(a1, v6, a2);
}

unint64_t sub_100067EE8()
{
  unint64_t result = qword_1000D6298;
  if (!qword_1000D6298)
  {
    sub_100004B80(&qword_1000D6290);
    sub_10001FF28(&qword_1000D62A0, &qword_1000D62A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6298);
  }
  return result;
}

uint64_t sub_100067F88()
{
  uint64_t v1 = type metadata accessor for WidgetViewsForMediumSystemFamily(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000B3E50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  sub_1000441FC(*(void *)(v0 + v3 + *(int *)(v1 + 20)), *(unsigned char *)(v0 + v3 + *(int *)(v1 + 20) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1000680E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for WidgetViewsForMediumSystemFamily(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  double v9 = *(double *)(v3 + 16);
  double v10 = *(double *)(v3 + 24);
  uint64_t v11 = *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100053000(a1, a2, v3 + v8, v11, a3, v9, v10);
}

uint64_t sub_1000681B0(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = sub_100004210(&qword_1000D60D8);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_100068210()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100068248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005431C(a1, *(unsigned char *)(v2 + 32), a2);
}

unint64_t sub_100068254()
{
  unint64_t result = qword_1000D62D8;
  if (!qword_1000D62D8)
  {
    sub_100004B80(&qword_1000D62D0);
    type metadata accessor for HomeInteractiveWidgetsEntryView(255);
    sub_100004B80(&qword_1000D62E0);
    sub_100058DF8(&qword_1000D62E8, (void (*)(uint64_t))type metadata accessor for HomeInteractiveWidgetsEntryView);
    sub_10006834C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D62D8);
  }
  return result;
}

unint64_t sub_10006834C()
{
  unint64_t result = qword_1000D62F0;
  if (!qword_1000D62F0)
  {
    sub_100004B80(&qword_1000D62E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D62F0);
  }
  return result;
}

unint64_t sub_1000683B8()
{
  unint64_t result = qword_1000D62F8;
  if (!qword_1000D62F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D62F8);
  }
  return result;
}

uint64_t type metadata accessor for AccessoriesAndScenesEntry(uint64_t a1)
{
  return sub_10006842C(a1, qword_1000D6370);
}

uint64_t sub_10006842C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100068464@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000B3790();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_100068494@<X0>(uint64_t *a1@<X8>)
{
  return sub_10005493C(*(void *)(v1 + 16), a1);
}

void *sub_10006849C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000B2F10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    double v10 = (void *)((char *)v4 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *double v10 = *v11;
    v10[1] = v12;
    v10[2] = v11[2];
    *((unsigned char *)v4 + v9) = *((unsigned char *)a2 + v9);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100068590(uint64_t a1)
{
  uint64_t v2 = sub_1000B2F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100068618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  double v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  void v9[2] = v10[2];
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000686C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_retain();
  swift_release();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100068798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_10006882C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_release();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_release();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1000688EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100068900);
}

uint64_t sub_100068900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000B2F10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000689C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000689D4);
}

uint64_t sub_1000689D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000B2F10();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100068A90()
{
  uint64_t result = sub_1000B2F10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoriesAndScenesTimelineProvider()
{
  return &type metadata for AccessoriesAndScenesTimelineProvider;
}

uint64_t *sub_100068B40(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3620();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)v12;
    char v14 = v12[8];
    sub_100044118(*(void *)v12, v14);
    *(void *)uint64_t v11 = v13;
    v11[8] = v14;
    uint64_t v15 = a3[6];
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    id v71 = a3;
    uint64_t v19 = a3[7];
    id v72 = a1;
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_1000B2F60();
    char v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    v23(v20, v21, v22);
    uint64_t v24 = type metadata accessor for AccessoryAndSceneEntity();
    v23(&v20[*(int *)(v24 + 20)], &v21[*(int *)(v24 + 20)], v22);
    uint64_t v25 = *(int *)(v24 + 24);
    uint64_t v26 = &v20[v25];
    uint64_t v27 = &v21[v25];
    v23(v26, v27, v22);
    uint64_t v28 = (int *)type metadata accessor for WidgetTileInfo();
    v23(&v26[v28[5]], &v27[v28[5]], v22);
    uint64_t v29 = v28[6];
    uint64_t v30 = &v26[v29];
    uint64_t v31 = &v27[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = v28[7];
    uint64_t v34 = &v26[v33];
    uint64_t v35 = &v27[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v28[8];
    unint64_t v38 = &v26[v37];
    uint64_t v39 = &v27[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)unint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    uint64_t v41 = v28[9];
    os_log_type_t v42 = &v26[v41];
    uint64_t v43 = &v27[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *(void *)os_log_type_t v42 = *(void *)v43;
    *((void *)v42 + 1) = v44;
    uint64_t v45 = v28[10];
    uint64_t v67 = &v27[v45];
    __dsta = &v26[v45];
    uint64_t v46 = sub_1000B33D0();
    id v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(__dsta, v67, v46);
    v47(&v26[v28[11]], &v27[v28[11]], v46);
    *(void *)&v26[v28[12]] = *(void *)&v27[v28[12]];
    v26[v28[13]] = v27[v28[13]];
    uint64_t v48 = v28[14];
    uint64_t v49 = &v26[v48];
    os_log_type_t v50 = &v27[v48];
    id v51 = *(void **)v50;
    LOBYTE(v50) = v50[8];
    *(void *)uint64_t v49 = v51;
    v49[8] = (char)v50;
    *(void *)&v26[v28[15]] = *(void *)&v27[v28[15]];
    v26[v28[16]] = v27[v28[16]];
    uint64_t v52 = v28[17];
    os_log_type_t v68 = &v27[v52];
    __dst = &v26[v52];
    uint64_t v53 = sub_1000B32E0();
    uint64_t v54 = *(void *)(v53 - 8);
    uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
    swift_retain();
    id v56 = v51;
    swift_bridgeObjectRetain();
    if (v55(v68, 1, v53))
    {
      uint64_t v57 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v68, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(__dst, v68, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v53);
    }
    v26[v28[18]] = v27[v28[18]];
    uint64_t v58 = v28[19];
    uint64_t v59 = &v26[v58];
    uint64_t v60 = &v27[v58];
    *(void *)uint64_t v59 = *(void *)v60;
    v59[8] = v60[8];
    uint64_t v61 = v28[20];
    Swift::String v62 = &v26[v61];
    Swift::String v63 = &v27[v61];
    uint64_t v64 = *((void *)v63 + 1);
    *(void *)Swift::String v62 = *(void *)v63;
    *((void *)v62 + 1) = v64;
    v26[v28[21]] = v27[v28[21]];
    uint64_t v65 = v71[9];
    uint64_t v9 = v72;
    *(_OWORD *)((char *)v72 + v71[8]) = *(_OWORD *)((char *)a2 + v71[8]);
    *(uint64_t *)((char *)v72 + v65) = *(uint64_t *)((char *)a2 + v65);
    swift_bridgeObjectRetain();
  }
  return v9;
}

uint64_t sub_100069074(uint64_t a1, int *a2)
{
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000B3620();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_1000441FC(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_1000B2F60();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = type metadata accessor for AccessoryAndSceneEntity();
  v9(v7 + *(int *)(v10 + 20), v8);
  uint64_t v11 = v7 + *(int *)(v10 + 24);
  v9(v11, v8);
  uint64_t v12 = (int *)type metadata accessor for WidgetTileInfo();
  v9(v11 + v12[5], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v11 + v12[10];
  uint64_t v14 = sub_1000B33D0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);
  v15(v11 + v12[11], v14);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v16 = v11 + v12[17];
  uint64_t v17 = sub_1000B32E0();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }

  return swift_bridgeObjectRelease();
}

void *sub_10006938C(void *a1, void *a2, int *a3)
{
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3620();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  os_log_type_t v68 = a3;
  uint64_t v16 = a3[7];
  uint64_t v69 = a1;
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1000B2F60();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  uint64_t v21 = type metadata accessor for AccessoryAndSceneEntity();
  v20(&v17[*(int *)(v21 + 20)], &v18[*(int *)(v21 + 20)], v19);
  uint64_t v22 = *(int *)(v21 + 24);
  char v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  v20(v23, v24, v19);
  uint64_t v25 = (int *)type metadata accessor for WidgetTileInfo();
  v20(&v23[v25[5]], &v24[v25[5]], v19);
  uint64_t v26 = v25[6];
  uint64_t v27 = &v23[v26];
  uint64_t v28 = &v24[v26];
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  uint64_t v30 = v25[7];
  uint64_t v31 = &v23[v30];
  uint64_t v32 = &v24[v30];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  uint64_t v34 = v25[8];
  uint64_t v35 = &v23[v34];
  uint64_t v36 = &v24[v34];
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = v37;
  uint64_t v38 = v25[9];
  uint64_t v39 = &v23[v38];
  uint64_t v40 = &v24[v38];
  uint64_t v41 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = v41;
  uint64_t v42 = v25[10];
  uint64_t v64 = &v24[v42];
  __dsta = &v23[v42];
  uint64_t v43 = sub_1000B33D0();
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(__dsta, v64, v43);
  v44(&v23[v25[11]], &v24[v25[11]], v43);
  *(void *)&v23[v25[12]] = *(void *)&v24[v25[12]];
  v23[v25[13]] = v24[v25[13]];
  uint64_t v45 = v25[14];
  uint64_t v46 = &v23[v45];
  id v47 = &v24[v45];
  uint64_t v48 = *(void **)v47;
  LOBYTE(v47) = v47[8];
  *(void *)uint64_t v46 = v48;
  v46[8] = (char)v47;
  *(void *)&v23[v25[15]] = *(void *)&v24[v25[15]];
  v23[v25[16]] = v24[v25[16]];
  uint64_t v49 = v25[17];
  uint64_t v65 = &v24[v49];
  __dst = &v23[v49];
  uint64_t v50 = sub_1000B32E0();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
  swift_retain();
  id v53 = v48;
  swift_bridgeObjectRetain();
  if (v52(v65, 1, v50))
  {
    uint64_t v54 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v65, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(__dst, v65, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v50);
  }
  v23[v25[18]] = v24[v25[18]];
  uint64_t v55 = v25[19];
  id v56 = &v23[v55];
  uint64_t v57 = &v24[v55];
  *(void *)id v56 = *(void *)v57;
  v56[8] = v57[8];
  uint64_t v58 = v25[20];
  uint64_t v59 = &v23[v58];
  uint64_t v60 = &v24[v58];
  uint64_t v61 = *((void *)v60 + 1);
  *(void *)uint64_t v59 = *(void *)v60;
  *((void *)v59 + 1) = v61;
  v23[v25[21]] = v24[v25[21]];
  uint64_t v62 = v68[9];
  *(_OWORD *)((char *)v69 + v68[8]) = *(_OWORD *)((char *)a2 + v68[8]);
  *(void *)((char *)v69 + v62) = *(void *)((char *)a2 + v62);
  swift_bridgeObjectRetain();
  return v69;
}

void *sub_100069870(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F90);
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000B3620();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_1000441FC(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_100017B5C((uint64_t)a1 + v14, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  id v71 = a3;
  id v72 = a2;
  uint64_t v18 = a3[7];
  uint64_t v73 = a1;
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1000B2F60();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24);
  v22(v19, v20, v21);
  uint64_t v23 = type metadata accessor for AccessoryAndSceneEntity();
  v22(&v19[*(int *)(v23 + 20)], &v20[*(int *)(v23 + 20)], v21);
  uint64_t v24 = *(int *)(v23 + 24);
  uint64_t v25 = &v19[v24];
  uint64_t v26 = &v20[v24];
  v22(v25, v26, v21);
  uint64_t v27 = (int *)type metadata accessor for WidgetTileInfo();
  v22(&v25[v27[5]], &v26[v27[5]], v21);
  uint64_t v28 = v27[6];
  uint64_t v29 = &v25[v28];
  uint64_t v30 = &v26[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v27[7];
  uint64_t v32 = &v25[v31];
  uint64_t v33 = &v26[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = *((void *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v27[8];
  uint64_t v35 = &v25[v34];
  uint64_t v36 = &v26[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v27[9];
  uint64_t v38 = &v25[v37];
  uint64_t v39 = &v26[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = v27[10];
  uint64_t v41 = &v25[v40];
  uint64_t v42 = &v26[v40];
  uint64_t v43 = sub_1000B33D0();
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24);
  v44(v41, v42, v43);
  v44(&v25[v27[11]], &v26[v27[11]], v43);
  *(void *)&v25[v27[12]] = *(void *)&v26[v27[12]];
  swift_retain();
  swift_release();
  v25[v27[13]] = v26[v27[13]];
  uint64_t v45 = v27[14];
  uint64_t v46 = &v25[v45];
  id v47 = &v26[v45];
  uint64_t v48 = *(void **)v47;
  LOBYTE(v47) = v47[8];
  uint64_t v49 = *(void **)v46;
  *(void *)uint64_t v46 = v48;
  v46[8] = (char)v47;
  id v50 = v48;

  *(void *)&v25[v27[15]] = *(void *)&v26[v27[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25[v27[16]] = v26[v27[16]];
  uint64_t v51 = v27[17];
  uint64_t v52 = &v25[v51];
  id v53 = &v26[v51];
  uint64_t v54 = sub_1000B32E0();
  uint64_t v55 = *(void *)(v54 - 8);
  id v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (!v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v52, v53, v54);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
    goto LABEL_16;
  }
  if (v58)
  {
LABEL_16:
    uint64_t v59 = sub_100004210(&qword_1000D5098);
    memcpy(v52, v53, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
LABEL_17:
  v25[v27[18]] = v26[v27[18]];
  uint64_t v60 = v27[19];
  uint64_t v61 = &v25[v60];
  uint64_t v62 = &v26[v60];
  uint64_t v63 = *(void *)v62;
  v61[8] = v62[8];
  *(void *)uint64_t v61 = v63;
  uint64_t v64 = v27[20];
  uint64_t v65 = &v25[v64];
  id v66 = &v26[v64];
  *(void *)uint64_t v65 = *(void *)v66;
  *((void *)v65 + 1) = *((void *)v66 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25[v27[21]] = v26[v27[21]];
  uint64_t v67 = v71[8];
  os_log_type_t v68 = (void *)((char *)v73 + v67);
  uint64_t v69 = (void *)((char *)v72 + v67);
  *os_log_type_t v68 = *v69;
  v68[1] = v69[1];
  *(void *)((char *)v73 + v71[9]) = *(void *)((char *)v72 + v71[9]);
  return v73;
}

char *sub_100069E60(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3620();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  uint64_t v14 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3E20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_1000B2F60();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  uint64_t v21 = type metadata accessor for AccessoryAndSceneEntity();
  v20(&v17[*(int *)(v21 + 20)], &v18[*(int *)(v21 + 20)], v19);
  uint64_t v22 = *(int *)(v21 + 24);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  v20(v23, v24, v19);
  uint64_t v25 = (int *)type metadata accessor for WidgetTileInfo();
  v20(&v23[v25[5]], &v24[v25[5]], v19);
  *(_OWORD *)&v23[v25[6]] = *(_OWORD *)&v24[v25[6]];
  *(_OWORD *)&v23[v25[7]] = *(_OWORD *)&v24[v25[7]];
  *(_OWORD *)&v23[v25[8]] = *(_OWORD *)&v24[v25[8]];
  *(_OWORD *)&v23[v25[9]] = *(_OWORD *)&v24[v25[9]];
  uint64_t v26 = v25[10];
  uint64_t v27 = &v23[v26];
  uint64_t v28 = &v24[v26];
  uint64_t v29 = sub_1000B33D0();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32);
  v30(v27, v28, v29);
  v30(&v23[v25[11]], &v24[v25[11]], v29);
  *(void *)&v23[v25[12]] = *(void *)&v24[v25[12]];
  v23[v25[13]] = v24[v25[13]];
  uint64_t v31 = v25[14];
  uint64_t v32 = &v23[v31];
  uint64_t v33 = &v24[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)&v23[v25[15]] = *(void *)&v24[v25[15]];
  v23[v25[16]] = v24[v25[16]];
  uint64_t v34 = v25[17];
  uint64_t v35 = &v23[v34];
  uint64_t v36 = &v24[v34];
  uint64_t v37 = sub_1000B32E0();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_100004210(&qword_1000D5098);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v23[v25[18]] = v24[v25[18]];
  uint64_t v40 = v25[19];
  uint64_t v41 = &v23[v40];
  uint64_t v42 = &v24[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v42[8];
  *(_OWORD *)&v23[v25[20]] = *(_OWORD *)&v24[v25[20]];
  v23[v25[21]] = v24[v25[21]];
  uint64_t v43 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(void *)&a1[v43] = *(void *)&a2[v43];
  return a1;
}

char *sub_10006A2D8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F90);
    uint64_t v6 = sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3620();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_1000441FC(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    sub_100017B5C((uint64_t)&a1[v14], &qword_1000D4F88);
    uint64_t v17 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_1000B3E20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  os_log_type_t v78 = a3;
  uint64_t v79 = a2;
  uint64_t v19 = a3[7];
  unint64_t v80 = a1;
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_1000B2F60();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40);
  v23(v20, v21, v22);
  uint64_t v24 = type metadata accessor for AccessoryAndSceneEntity();
  v23(&v20[*(int *)(v24 + 20)], &v21[*(int *)(v24 + 20)], v22);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v26 = &v20[v25];
  uint64_t v27 = &v21[v25];
  v23(v26, v27, v22);
  uint64_t v28 = (int *)type metadata accessor for WidgetTileInfo();
  v23(&v26[v28[5]], &v27[v28[5]], v22);
  uint64_t v29 = v28[6];
  uint64_t v30 = &v26[v29];
  uint64_t v31 = &v27[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = v28[7];
  uint64_t v35 = &v26[v34];
  uint64_t v36 = &v27[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = v38;
  *((void *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = v28[8];
  uint64_t v40 = &v26[v39];
  uint64_t v41 = &v27[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = v43;
  *((void *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = v28[9];
  uint64_t v45 = &v26[v44];
  uint64_t v46 = &v27[v44];
  uint64_t v48 = *(void *)v46;
  uint64_t v47 = *((void *)v46 + 1);
  *(void *)uint64_t v45 = v48;
  *((void *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = v28[10];
  id v50 = &v26[v49];
  uint64_t v51 = &v27[v49];
  uint64_t v52 = sub_1000B33D0();
  id v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 40);
  v53(v50, v51, v52);
  v53(&v26[v28[11]], &v27[v28[11]], v52);
  *(void *)&v26[v28[12]] = *(void *)&v27[v28[12]];
  swift_release();
  v26[v28[13]] = v27[v28[13]];
  uint64_t v54 = v28[14];
  uint64_t v55 = &v26[v54];
  id v56 = &v27[v54];
  uint64_t v57 = *(void *)v56;
  LOBYTE(v56) = v56[8];
  int v58 = *(void **)v55;
  *(void *)uint64_t v55 = v57;
  v55[8] = (char)v56;

  *(void *)&v26[v28[15]] = *(void *)&v27[v28[15]];
  swift_bridgeObjectRelease();
  v26[v28[16]] = v27[v28[16]];
  uint64_t v59 = v28[17];
  uint64_t v60 = &v26[v59];
  uint64_t v61 = &v27[v59];
  uint64_t v62 = sub_1000B32E0();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (!v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v60, v61, v62);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v62);
    goto LABEL_14;
  }
  if (v66)
  {
LABEL_14:
    uint64_t v67 = sub_100004210(&qword_1000D5098);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_15:
  v26[v28[18]] = v27[v28[18]];
  uint64_t v68 = v28[19];
  uint64_t v69 = &v26[v68];
  uint64_t v70 = &v27[v68];
  *(void *)uint64_t v69 = *(void *)v70;
  v69[8] = v70[8];
  uint64_t v71 = v28[20];
  id v72 = &v26[v71];
  uint64_t v73 = &v27[v71];
  uint64_t v75 = *(void *)v73;
  uint64_t v74 = *((void *)v73 + 1);
  *(void *)id v72 = v75;
  *((void *)v72 + 1) = v74;
  swift_bridgeObjectRelease();
  v26[v28[21]] = v27[v28[21]];
  uint64_t v76 = v78[9];
  *(_OWORD *)&v80[v78[8]] = *(_OWORD *)&v79[v78[8]];
  *(void *)&v80[v76] = *(void *)&v79[v76];
  return v80;
}

uint64_t sub_10006A860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006A874);
}

uint64_t sub_10006A874(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5D58);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 254)
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v11 > 1) {
      return (v11 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v13 = sub_100004210(&qword_1000D5EE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v10 = a1 + a3[6];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[7];

  return v16(v18, a2, v17);
}

uint64_t sub_10006A9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006AA0C);
}

uint64_t sub_10006AA0C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_100004210(&qword_1000D5D58);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[5] + 8) = -(char)a2;
    return result;
  }
  uint64_t v13 = sub_100004210(&qword_1000D5EE0);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

void sub_10006AB94()
{
  sub_10005B144(319, &qword_1000D5F50, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_10005B144(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F)
    {
      type metadata accessor for AccessoryAndSceneEntity();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_10006ACF0()
{
  return sub_10001FF28(&qword_1000D6450, &qword_1000D6458);
}

unint64_t sub_10006AD30()
{
  unint64_t result = qword_1000D6460;
  if (!qword_1000D6460)
  {
    sub_100004B80(&qword_1000D60D0);
    sub_10001FF28(&qword_1000D6468, &qword_1000D60A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6460);
  }
  return result;
}

unint64_t sub_10006ADD4()
{
  unint64_t result = qword_1000D6470;
  if (!qword_1000D6470)
  {
    sub_100004B80(&qword_1000D61E8);
    sub_10001FF28(&qword_1000D6478, &qword_1000D61D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6470);
  }
  return result;
}

unint64_t sub_10006AE78()
{
  unint64_t result = qword_1000D6480;
  if (!qword_1000D6480)
  {
    sub_100004B80(&qword_1000D6288);
    sub_10001FF28(&qword_1000D6488, &qword_1000D6278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6480);
  }
  return result;
}

uint64_t sub_10006AF18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006B10C()
{
  return sub_100058DF8(qword_1000D6490, (void (*)(uint64_t))type metadata accessor for AccessoriesAndScenesEntry);
}

uint64_t sub_10006B158()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006B174()
{
  uint64_t v1 = sub_1000B3620();
  uint64_t v28 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = sub_1000B3E20();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unsigned int v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = type metadata accessor for LargeSquareTileViewToggleStyle(0);
  uint64_t v15 = v0;
  sub_10007F150((uint64_t)v13);
  sub_1000B3DF0();
  char v16 = sub_1000B3DE0();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v11, v7);
  v17(v13, v7);
  if (v16)
  {
    uint64_t v18 = v15 + *(int *)(v14 + 20);
    uint64_t v19 = *(void *)v18;
    char v20 = *(unsigned char *)(v18 + 8);
    sub_100044118(*(void *)v18, v20);
    char v21 = sub_10007E9FC(v19, v20);
    sub_1000441FC(v19, v20);
    if (v21)
    {
      if (qword_1000D4ED8 != -1) {
        swift_once();
      }
      uint64_t v22 = &qword_1000DCCA0;
    }
    else
    {
      if (qword_1000D4EE0 != -1) {
        swift_once();
      }
      uint64_t v22 = &qword_1000DCCA8;
    }
  }
  else
  {
    sub_10007EE5C((uint64_t)v6);
    uint64_t v24 = v28;
    uint64_t v23 = v29;
    (*(void (**)(char *, void, uint64_t))(v28 + 104))(v4, enum case for ColorScheme.light(_:), v29);
    char v25 = sub_1000B3610();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v24 + 8);
    v26(v4, v23);
    v26(v6, v23);
    if (v25)
    {
      if (qword_1000D4EE8 != -1) {
        swift_once();
      }
      uint64_t v22 = &qword_1000DCCB0;
    }
    else
    {
      if (qword_1000D4EF0 != -1) {
        swift_once();
      }
      uint64_t v22 = &qword_1000DCCB8;
    }
  }
  return *v22;
}

unint64_t sub_10006B4F0()
{
  unint64_t result = qword_1000D6508;
  if (!qword_1000D6508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6508);
  }
  return result;
}

unint64_t sub_10006B544()
{
  unint64_t result = qword_1000D6510;
  if (!qword_1000D6510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6510);
  }
  return result;
}

void sub_10006B598(uint64_t a1, uint64_t a2)
{
  sub_1000465B8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_10006B5A4(id *a1)
{
  return sub_100046D10(a1) & 1;
}

uint64_t sub_10006B5C4()
{
  return sub_1000B2F40() & 1;
}

uint64_t sub_10006B614()
{
  return sub_10006B690();
}

uint64_t sub_10006B62C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100004210(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006B690()
{
  return sub_1000B31D0();
}

uint64_t sub_10006B6D8(uint64_t a1)
{
  return sub_10006B73C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100048F18);
}

uint64_t sub_10006B6F4(uint64_t a1, uint64_t a2)
{
  return sub_10006B830(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1000491A0);
}

uint64_t sub_10006B70C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006B71C()
{
  return swift_release();
}

uint64_t sub_10006B724(uint64_t a1)
{
  return sub_10006B73C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100046E1C);
}

uint64_t sub_10006B73C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_10006B758()
{
  uint64_t v1 = sub_100004210(&qword_1000D6568);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10006B818(uint64_t a1, uint64_t a2)
{
  return sub_10006B830(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1000470A4);
}

uint64_t sub_10006B830(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(sub_100004210(&qword_1000D6568) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v3 + v8);
  uint64_t v10 = *(void *)(v3 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return a3(a1, a2, v3 + v7, v9, v10);
}

unint64_t sub_10006B904()
{
  unint64_t result = qword_1000D6578;
  if (!qword_1000D6578)
  {
    sub_100004B80(&qword_1000D64D0);
    sub_10005BDA0(&qword_1000D6580, &qword_1000D64C0, &qword_1000D6588, &qword_1000D64B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6578);
  }
  return result;
}

uint64_t sub_10006B9A0(id *a1)
{
  return sub_10006B5A4(a1) & 1;
}

uint64_t sub_10006B9E4(uint64_t a1)
{
  return sub_10006BA4C(a1, qword_1000DCC18);
}

uint64_t sub_10006BA08(uint64_t a1)
{
  return sub_10006BA4C(a1, qword_1000DCC30);
}

uint64_t sub_10006BA2C(uint64_t a1)
{
  return sub_10006BA4C(a1, qword_1000DCC48);
}

uint64_t sub_10006BA4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000B3570();
  sub_100022374(v3, a2);
  sub_100017618(v3, (uint64_t)a2);
  return sub_1000B3560();
}

uint64_t sub_10006BACC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_10006C478(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = &v5[6 * a1];
      uint64_t v10 = v9[4];
      v9 += 4;
      uint64_t v12 = v9[4];
      uint64_t v11 = v9[5];
      long long v15 = *((_OWORD *)v9 + 1);
      char v13 = *((unsigned char *)v9 + 8);
      uint64_t result = (uint64_t)memmove(v9, v9 + 6, 48 * v8);
      void v5[2] = v7;
      *uint64_t v2 = v5;
      *(void *)a2 = v10;
      *(unsigned char *)(a2 + 8) = v13;
      *(_OWORD *)(a2 + 16) = v15;
      *(void *)(a2 + 32) = v12;
      *(void *)(a2 + 40) = v11;
      return result;
    }
  }
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

Class sub_10006BBDC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10006CE50();
    v4.super.Class isa = sub_1000B3F20().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_10006BC68(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = a1 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(63 - v6) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    int64_t v17 = v10;
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_27;
      }
      goto LABEL_7;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v18 >= v8) {
      goto LABEL_30;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v17 + 2;
      if (v17 + 2 >= v8) {
        goto LABEL_30;
      }
      unint64_t v19 = *(void *)(v4 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v17 + 3;
        if (v17 + 3 >= v8) {
          goto LABEL_30;
        }
        unint64_t v19 = *(void *)(v4 + 8 * v10);
        if (!v19)
        {
          int64_t v10 = v17 + 4;
          if (v17 + 4 >= v8) {
            goto LABEL_30;
          }
          unint64_t v19 = *(void *)(v4 + 8 * v10);
          if (!v19)
          {
            int64_t v10 = v17 + 5;
            if (v17 + 5 >= v8) {
              goto LABEL_30;
            }
            unint64_t v19 = *(void *)(v4 + 8 * v10);
            if (!v19) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v12 = __clz(__rbit64(v19)) + (v10 << 6);
    if (!*(void *)(a2 + 16))
    {
LABEL_27:
      uint64_t v21 = 0;
LABEL_31:
      sub_100017A14();
      return v21;
    }
LABEL_7:
    char v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_bridgeObjectRetain();
    sub_1000414A4(v15, v14);
    LOBYTE(v15) = v16;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_27;
    }
  }
  int64_t v20 = v17 + 6;
  if (v17 + 6 >= v8)
  {
LABEL_30:
    uint64_t v21 = 1;
    goto LABEL_31;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v17 + 6;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_30;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_26;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WidgetAnalytics()
{
  return self;
}

unint64_t sub_10006BE9C(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0x7470697263736564;
      break;
    default:
      unint64_t result = 0x7361487865646E69;
      break;
  }
  return result;
}

uint64_t sub_10006BF64(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100004210(&qword_1000D6660);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003C804(a1, a1[3]);
  sub_10006FB88();
  sub_1000B4910();
  char v14 = 0;
  sub_1000B47E0();
  if (!v2)
  {
    char v13 = 1;
    sub_1000B47B0();
    char v12 = 2;
    sub_1000B47C0();
    uint64_t v11 = *(void *)(v3 + 24);
    v10[15] = 3;
    sub_100004210(&qword_1000D6670);
    sub_1000700D8(&qword_1000D6678);
    sub_1000B47D0();
    v10[14] = 4;
    sub_1000B47A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10006C18C()
{
  return sub_10006BE9C(*v0);
}

uint64_t sub_10006C194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006FBDC(a1, a2);
  *a3 = result;
  return result;
}

void sub_10006C1BC(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_10006C1C8(uint64_t a1)
{
  unint64_t v2 = sub_10006FB88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006C204(uint64_t a1)
{
  unint64_t v2 = sub_10006FB88();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10006C240@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10006FDF0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_10006C284(void *a1)
{
  return sub_10006BF64(a1);
}

uint64_t sub_10006C29C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10006C2CC(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1000414A4(v16, v17);
    char v21 = v20;
    double result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(void *)(*(void *)(a2 + 56) + 8 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_10006C478(void *a1)
{
  return sub_100075B9C(0, a1[2], 0, a1);
}

uint64_t sub_10006C48C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    while (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (*(void *)(a2 + 16)) {
        goto LABEL_22;
      }
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v4 + 8 * v10);
          if (!v14)
          {
            int64_t v15 = v13 + 4;
            if (v15 >= v8)
            {
LABEL_24:
              swift_release();
              return 0;
            }
            unint64_t v14 = *(void *)(v4 + 8 * v15);
            int64_t v10 = v15;
            if (!v14) {
              break;
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    if (*(void *)(a2 + 16))
    {
LABEL_22:
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      swift_bridgeObjectRetain_n();
      sub_1000414A4(v17, v18);
      if (v19)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v17;
      }
      uint64_t result = swift_bridgeObjectRelease_n();
    }
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10006C648()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = sub_1000B4000();
  id v2 = [v0 dataForKey:v1];

  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_1000B2EC0();
  unint64_t v5 = v4;

  sub_1000B2CE0();
  swift_allocObject();
  sub_1000B2CD0();
  sub_100004210(&qword_1000D6638);
  sub_10006F8BC(&qword_1000D6650, (void (*)(void))sub_10006F92C);
  sub_1000B2CC0();
  swift_release();
  sub_10003310C(v3, v5);
  return (void *)v7;
}

uint64_t sub_10006C7C0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1000B45C0(90);
  v13._countAndFlagsBits = 0x7361487865646E69;
  v13._object = (void *)0xEA00000000003A68;
  sub_1000B4090(v13);
  v14._countAndFlagsBits = sub_1000B4800();
  sub_1000B4090(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0xD00000000000001ALL;
  v15._object = (void *)0x80000001000B9E70;
  sub_1000B4090(v15);
  if (a2) {
    v10._countAndFlagsBits = 1702195828;
  }
  else {
    v10._countAndFlagsBits = 0x65736C6166;
  }
  if (a2) {
    unint64_t v11 = (void *)0xE400000000000000;
  }
  else {
    unint64_t v11 = (void *)0xE500000000000000;
  }
  v10._object = v11;
  sub_1000B4090(v10);
  swift_bridgeObjectRelease();
  v16._object = (void *)0x80000001000B9E90;
  v16._countAndFlagsBits = 0xD000000000000012;
  sub_1000B4090(v16);
  v17._countAndFlagsBits = sub_1000B4800();
  sub_1000B4090(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0xD00000000000001CLL;
  v18._object = (void *)0x80000001000B9EB0;
  sub_1000B4090(v18);
  v19._countAndFlagsBits = sub_1000B3F40();
  sub_1000B4090(v19);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a5 = a1;
  *(unsigned char *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(void *)(a5 + 32) = 0;
  *(void *)(a5 + 40) = 0xE000000000000000;
  return result;
}

void sub_10006C998()
{
  id v0 = [self standardUserDefaults];
  sub_1000B2D10();
  swift_allocObject();
  sub_1000B2D00();
  sub_100004210(&qword_1000D6638);
  sub_10006F8BC(&qword_1000D6640, (void (*)(void))sub_10006F814);
  uint64_t v1 = sub_1000B2CF0();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  swift_release();
  v6[0] = v1;
  v6[1] = v3;
  uint64_t v4 = sub_1000B4820();
  sub_10006F868((uint64_t)v6);
  NSString v5 = sub_1000B4000();
  [v0 setObject:v4 forKey:v5];

  swift_unknownObjectRelease();
}

void sub_10006CB14(uint64_t a1)
{
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000B3570();
  sub_100017618(v2, (uint64_t)qword_1000DCC18);
  swift_retain_n();
  uint64_t v3 = sub_1000B3550();
  os_log_type_t v4 = sub_1000B42C0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315650;
    sub_10002A68C(0xD000000000000011, 0x80000001000B9DE0, aBlock);
    sub_1000B4400();
    *(_WORD *)(v5 + 12) = 2080;
    unint64_t v6 = sub_1000A103C(*(unsigned char *)(a1 + 16));
    sub_10002A68C(v6, v7, aBlock);
    sub_1000B4400();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2080;
    sub_1000A129C();
    sub_10006CE50();
    uint64_t v8 = sub_1000B3F40();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_10002A68C(v8, v10, aBlock);
    sub_1000B4400();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s Sending analytics event for [%s]: %s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_1000A103C(*(unsigned char *)(a1 + 16));
  NSString v11 = sub_1000B4000();
  swift_bridgeObjectRelease();
  aBlock[4] = (uint64_t)sub_10006CE34;
  aBlock[5] = a1;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10006BBDC;
  aBlock[3] = (uint64_t)&unk_1000CFB90;
  unint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v12);
}

uint64_t sub_10006CE38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006CE48()
{
  return swift_release();
}

unint64_t sub_10006CE50()
{
  unint64_t result = qword_1000D51A0;
  if (!qword_1000D51A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1000D51A0);
  }
  return result;
}

uint64_t sub_10006CE90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t v5 = (uint64_t *)(a1 + 32);
  while (1)
  {
    uint64_t v7 = *v5;
    v5 += 6;
    uint64_t v6 = v7;
    sub_10006F7AC(a2, (uint64_t)v10);
    if (v10[3] && v6 == v10[0]) {
      break;
    }
    if (v2 == ++v4) {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_10006CF28(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v276 = a3;
  uint64_t v7 = (void *)sub_1000B3E50();
  uint64_t v267 = *(v7 - 1);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t)&v233 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v254 = (char *)&v233 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v255 = (char *)&v233 - v14;
  __chkstk_darwin(v13);
  v266 = (char *)&v233 - v15;
  uint64_t v277 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v264 = *(void *)(v277 - 8);
  __chkstk_darwin(v277);
  Swift::String v17 = (char *)&v233 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D4EA8 != -1) {
LABEL_201:
  }
    swift_once();
  uint64_t v18 = sub_1000B3570();
  uint64_t v272 = sub_100017618(v18, (uint64_t)qword_1000DCC18);
  Swift::String v19 = sub_1000B3550();
  os_log_type_t v20 = sub_1000B42C0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  v268 = v7;
  unint64_t v269 = a1;
  v270 = a4;
  uint64_t v251 = v10;
  if (v21)
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v311 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    v306[0] = sub_10002A68C(0xD000000000000030, 0x80000001000B9E00, (uint64_t *)&v311);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s Loading Timeline for interactive widget...", v22, 0xCu);
    swift_arrayDestroy();
    a1 = v269;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  v306[0] = a1;
  v306[1] = a2;
  v306[2] = v276;
  sub_1000304A0();
  sub_1000B2910();
  sub_1000B28B0();
  id v23 = objc_allocWithZone((Class)INAppIntent);
  NSString v24 = sub_1000B4000();
  sub_10003C804(&v311, *((uint64_t *)&v312 + 1));
  uint64_t v25 = sub_1000B4820();
  sub_10003C804(v306, v307);
  id v26 = [v23 initWithAppBundleIdentifier:v24 linkAction:v25 linkActionMetadata:sub_1000B4820()];
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  sub_10002ACE4((uint64_t)v306);
  sub_10002ACE4((uint64_t)&v311);
  id v271 = [v26 _indexingHash];
  id v27 = v26;
  uint64_t v28 = sub_1000B3550();
  os_log_type_t v29 = sub_1000B42C0();
  *(void *)&long long v275 = v28;
  BOOL v30 = os_log_type_enabled(v28, v29);
  id v265 = v27;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    v274 = (void *)swift_slowAlloc();
    *(void *)&long long v311 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136315650;
    v306[0] = sub_10002A68C(0xD000000000000030, 0x80000001000B9E00, (uint64_t *)&v311);
    sub_1000B4400();
    *(_WORD *)(v31 + 12) = 2112;
    v306[0] = v27;
    id v32 = v27;
    sub_1000B4400();
    void *v274 = v27;

    *(_WORD *)(v31 + 22) = 2048;
    v306[0] = v271;
    sub_1000B4400();
    uint64_t v33 = (void *)v275;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v275, v29, "%s App intent: %@ with indexingHash:%lld", (uint8_t *)v31, 0x20u);
    sub_100004210(&qword_1000D51D8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  a1 = sub_10001A494((uint64_t)_swiftEmptyArrayStorage);
  sub_1000B2990();
  if (!(void)v311) {
    goto LABEL_37;
  }
  *(void *)&long long v275 = *(void *)(v311 + 16);
  if (!(void)v275) {
    goto LABEL_36;
  }
  unint64_t v273 = (*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80);
  v274 = (void *)(v311 + v273);
  unint64_t v34 = *(void *)(v264 + 72);
  uint64_t v263 = v311;
  swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  do
  {
    uint64_t v35 = (char *)v274 + v34 * v10;
    sub_1000B2990();
    if (!(void)v311) {
      goto LABEL_25;
    }
    uint64_t v36 = (long long *)a1;
    uint64_t v37 = *(void *)(v311 + 16);
    if (!v37)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      a1 = (unint64_t)v36;
LABEL_25:
      uint64_t v56 = sub_1000B2F30();
      uint64_t v58 = v57;
      swift_bridgeObjectRetain();
      unint64_t v59 = sub_1000414A4(v56, v58);
      LOBYTE(v56) = v60;
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0) {
        goto LABEL_10;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v311 = a1;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000A36D8();
        a1 = v311;
      }
      swift_bridgeObjectRelease();
      sub_100056654(v59, a1);
      goto LABEL_29;
    }
    a1 = 0;
    uint64_t v38 = v311 + v273;
    while (1)
    {
      sub_10006F624(v38, (uint64_t)v17);
      if ((sub_1000B2F40() & 1) != 0
        && (sub_1000B2F40() & 1) != 0
        && (sub_10001F774((uint64_t)&v17[*(int *)(v277 + 24)], (uint64_t)&v35[*(int *)(v277 + 24)]) & 1) != 0)
      {
        break;
      }
      sub_10006F688((uint64_t)v17);
      ++a1;
      v38 += v34;
      if (v37 == a1) {
        goto LABEL_24;
      }
    }
    sub_10006F688((uint64_t)v17);
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_1000B2F30();
    uint64_t v40 = v36;
    uint64_t v42 = v41;
    uint64_t v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v311 = v40;
    uint64_t v264 = v39;
    unint64_t v45 = sub_1000414A4(v39, v42);
    uint64_t v46 = *((void *)v40 + 2);
    BOOL v47 = (v44 & 1) == 0;
    uint64_t v48 = v46 + v47;
    if (__OFADD__(v46, v47))
    {
      __break(1u);
      goto LABEL_203;
    }
    uint64_t v39 = v44;
    if (*((void *)v40 + 3) >= v48)
    {
      if (v43)
      {
        uint64_t v51 = (void *)v311;
        if ((v44 & 1) == 0) {
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v40 = &v311;
        sub_1000A36D8();
        uint64_t v51 = (void *)v311;
        if ((v39 & 1) == 0) {
          goto LABEL_22;
        }
      }
    }
    else
    {
      sub_1000A29F8(v48, v43);
      uint64_t v40 = (long long *)v311;
      unint64_t v49 = sub_1000414A4(v264, v42);
      if ((v39 & 1) != (v50 & 1)) {
        goto LABEL_227;
      }
      unint64_t v45 = v49;
      uint64_t v51 = (void *)v311;
      if ((v39 & 1) == 0)
      {
LABEL_22:
        v51[(v45 >> 6) + 8] |= 1 << v45;
        uint64_t v52 = (void *)(v51[6] + 16 * v45);
        *uint64_t v52 = v264;
        v52[1] = v42;
        *(void *)(v51[7] + 8 * v45) = a1;
        uint64_t v53 = v51[2];
        BOOL v54 = __OFADD__(v53, 1);
        uint64_t v55 = v53 + 1;
        if (v54)
        {
          __break(1u);
          goto LABEL_214;
        }
        a1 = (unint64_t)v51;
        v51[2] = v55;
        swift_bridgeObjectRetain();
        goto LABEL_29;
      }
    }
    *(void *)(v51[7] + 8 * v45) = a1;
    a1 = (unint64_t)v51;
LABEL_29:
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    ++v10;
  }
  while (v10 != (void)v275);
  swift_bridgeObjectRelease();
LABEL_36:
  swift_bridgeObjectRelease();
LABEL_37:
  uint64_t v7 = self;
  id v62 = [v7 standardUserDefaults];
  uint64_t v63 = sub_10006C648();

  v281 = v63;
  uint64_t v64 = sub_1000B3550();
  os_log_type_t v65 = sub_1000B42C0();
  BOOL v66 = os_log_type_enabled(v64, v65);
  uint64_t v277 = a1;
  v274 = v7;
  if (v66)
  {
    uint64_t v67 = swift_slowAlloc();
    *(void *)&long long v311 = swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 136315394;
    v306[0] = sub_10002A68C(0xD000000000000030, 0x80000001000B9E00, (uint64_t *)&v311);
    sub_1000B4400();
    *(_WORD *)(v67 + 12) = 2080;
    swift_beginAccess();
    uint64_t v63 = v281;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1000B4110();
    unint64_t v70 = v69;
    swift_bridgeObjectRelease();
    v306[0] = sub_10002A68C(v68, v70, (uint64_t *)&v311);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v64, v65, "%s (Before) Cached widget metrics infos: %s", (uint8_t *)v67, 0x16u);
    swift_arrayDestroy();
    a1 = v277;
    swift_slowDealloc();
    uint64_t v7 = v274;
    swift_slowDealloc();
  }

  uint64_t v71 = v63[2];
  if (!v71)
  {
    uint64_t v75 = (uint64_t)v271;
    id v276 = [v7 standardUserDefaults];
    sub_100004210(&qword_1000D6628);
    uint64_t v76 = (_OWORD *)swift_allocObject();
    v76[1] = xmmword_1000B5180;
    sub_1000B2990();
    LODWORD(v275) = v311;
    uint64_t v77 = v266;
    sub_1000B3EA0();
    uint64_t v78 = sub_1000B3E40();
    uint64_t v79 = v268;
    unint64_t v80 = *(void (**)(char *, void *))(v267 + 8);
    v80(v77, v268);
    swift_bridgeObjectRetain();
    sub_10006C7C0(v75, v275, v78, a1, (uint64_t)&v311);
    long long v81 = v312;
    v76[2] = v311;
    v76[3] = v81;
    v76[4] = v313;
    sub_10006C998();

    sub_1000B3EA0();
    uint64_t v82 = sub_1000B3E40();
    v80(v77, v79);
    type metadata accessor for WidgetAnalyticsEvent();
    uint64_t v83 = swift_allocObject();
    *(unsigned char *)(v83 + 16) = 0;
    *(void *)(v83 + 24) = 2;
    *(void *)(v83 + 32) = 0;
    *(void *)(v83 + 40) = 0;
    *(void *)(v83 + 48) = 33686018;
    *(void *)(v83 + 56) = v82;
    *(unsigned char *)(v83 + 64) = 0;
    sub_10006F728(0, 0, 1);
    sub_10006CB14(v83);
    swift_release();
    goto LABEL_188;
  }
  id v72 = v63 + 4;
  uint64_t v73 = v63[4];
  uint64_t v264 = *((unsigned __int8 *)v63 + 40);
  a2 = v63[6];
  a4 = (void *)v63[7];
  uint64_t v74 = v63[8];
  uint64_t v10 = v63[9];
  if ((id)v73 == v271)
  {
    *(void *)&long long v275 = v63[8];
LABEL_148:
    unint64_t v273 = v10;
    id v276 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v159 = v266;
    sub_1000B3EA0();
    uint64_t v160 = sub_1000B3E40();
    uint64_t v161 = v268;
    uint64_t v162 = *(void (**)(char *, void *))(v267 + 8);
    v162(v159, v268);
    if (a2 == v160)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v163 = 0;
      uint64_t v10 = 0;
      uint64_t v164 = 0;
      uint64_t v39 = 0;
      goto LABEL_187;
    }
    uint64_t v267 = a2;
    uint64_t v165 = v264;
    sub_1000B3EA0();
    uint64_t v166 = sub_1000B3E40();
    v162(v159, v161);
    type metadata accessor for WidgetAnalyticsEvent();
    uint64_t v167 = swift_allocObject();
    *(unsigned char *)(v167 + 16) = 3;
    *(void *)(v167 + 24) = 2;
    *(void *)(v167 + 32) = 0;
    *(void *)(v167 + 40) = 0;
    *(void *)(v167 + 48) = 33686018;
    *(void *)(v167 + 56) = v166;
    *(unsigned char *)(v167 + 64) = 0;
    sub_10006F728(0, 0, 1);
    sub_10006CB14(v167);
    swift_release();
    sub_1000B2990();
    LOBYTE(v167) = v311;
    sub_1000B3EA0();
    uint64_t v168 = sub_1000B3E40();
    v162(v159, v161);
    swift_bridgeObjectRetain();
    uint64_t v169 = (uint64_t)v271;
    sub_10006C7C0((uint64_t)v271, v167, v168, a1, (uint64_t)&v300);
    uint64_t v252 = 0;
    uint64_t v259 = 0;
    uint64_t v260 = 0;
    uint64_t v261 = v301;
    uint64_t v257 = v302;
    uint64_t v258 = v300;
    uint64_t v263 = v303;
    uint64_t v264 = 0;
    uint64_t v170 = (uint64_t)v276;
    unint64_t v171 = v273;
    uint64_t v262 = v304;
    uint64_t v256 = v305;
    uint64_t v39 = 0;
    unint64_t v273 = 0;
    goto LABEL_151;
  }
  uint64_t v253 = v63;
  uint64_t v260 = v74;
  Swift::String v17 = (char *)v267;
  if (v71 != 1)
  {
    os_log_type_t v84 = v253 + 15;
    uint64_t v85 = 1;
    while (1)
    {
      uint64_t v86 = v85 + 1;
      if (__OFADD__(v85, 1)) {
        break;
      }
      if ((id)*(v84 - 5) == v271)
      {
LABEL_147:
        uint64_t v264 = *((unsigned __int8 *)v84 - 32);
        a2 = *(v84 - 3);
        a4 = (void *)*(v84 - 2);
        uint64_t v10 = *v84;
        *(void *)&long long v275 = *(v84 - 1);
        goto LABEL_148;
      }
      v84 += 6;
      ++v85;
      if (v86 == v71) {
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_200:
    __break(1u);
    goto LABEL_201;
  }
LABEL_48:
  uint64_t v237 = v72;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v87 = sub_10006BC68((uint64_t)a4, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v87)
  {
    uint64_t v248 = 0;
    v249 = 0;
    uint64_t v246 = 0;
    uint64_t v247 = 0;
    unint64_t v244 = 0;
    uint64_t v245 = 0;
    uint64_t v257 = 0;
    uint64_t v258 = 0;
    uint64_t v261 = 0;
    uint64_t v262 = 0;
    uint64_t v263 = 0;
    uint64_t v256 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v250 = 0;
    uint64_t v239 = 0;
    goto LABEL_50;
  }
  swift_beginAccess();
  uint64_t v248 = 0;
  v249 = 0;
  uint64_t v246 = 0;
  uint64_t v247 = 0;
  unint64_t v244 = 0;
  uint64_t v245 = 0;
  uint64_t v257 = 0;
  uint64_t v258 = 0;
  uint64_t v261 = 0;
  uint64_t v262 = 0;
  uint64_t v263 = 0;
  uint64_t v256 = 0;
  uint64_t v242 = 0;
  uint64_t v243 = 0;
  uint64_t v240 = 0;
  uint64_t v241 = 0;
  uint64_t v250 = 0;
  uint64_t v7 = 0;
  os_log_type_t v238 = (void (**)(char *, void *))(v17 + 8);
  uint64_t v239 = 0;
  long long v275 = xmmword_1000B70D0;
  uint64_t v235 = v71;
  unint64_t v236 = 1;
  while (2)
  {
    uint64_t v252 = (void *)v73;
    uint64_t v259 = a2;
    unint64_t v273 = v10;
    unint64_t v98 = a4;
    uint64_t v100 = a4[8];
    a4 += 8;
    uint64_t v99 = v100;
    uint64_t v101 = 1 << *((unsigned char *)v98 + 32);
    if (v101 < 64) {
      uint64_t v102 = ~(-1 << v101);
    }
    else {
      uint64_t v102 = -1;
    }
    unint64_t v103 = v102 & v99;
    Swift::String v17 = (char *)((unint64_t)(v101 + 63) >> 6);
    uint64_t v39 = (uint64_t)v98;
    swift_bridgeObjectRetain_n();
    a2 = 0;
    while (1)
    {
      while (v103)
      {
        unint64_t v104 = __clz(__rbit64(v103));
        v103 &= v103 - 1;
        unint64_t v105 = v104 | (a2 << 6);
        if (*(void *)(a1 + 16)) {
          goto LABEL_80;
        }
      }
      BOOL v54 = __OFADD__(a2++, 1);
      if (v54) {
        goto LABEL_200;
      }
      if (a2 >= (uint64_t)v17) {
        break;
      }
      unint64_t v106 = a4[a2];
      if (!v106)
      {
        uint64_t v107 = a2 + 1;
        if (a2 + 1 >= (uint64_t)v17) {
          break;
        }
        unint64_t v106 = a4[v107];
        if (!v106)
        {
          uint64_t v107 = a2 + 2;
          if (a2 + 2 >= (uint64_t)v17) {
            break;
          }
          unint64_t v106 = a4[v107];
          if (!v106)
          {
            uint64_t v107 = a2 + 3;
            if (a2 + 3 >= (uint64_t)v17) {
              break;
            }
            unint64_t v106 = a4[v107];
            if (!v106)
            {
              uint64_t v107 = a2 + 4;
              if (a2 + 4 >= (uint64_t)v17) {
                break;
              }
              unint64_t v106 = a4[v107];
              if (!v106)
              {
                while (1)
                {
                  a2 = v107 + 1;
                  if (__OFADD__(v107, 1)) {
                    break;
                  }
                  if (a2 >= (uint64_t)v17) {
                    goto LABEL_86;
                  }
                  unint64_t v106 = a4[a2];
                  ++v107;
                  if (v106) {
                    goto LABEL_79;
                  }
                }
LABEL_217:
                __break(1u);
LABEL_218:
                uint64_t v87 = (uint64_t)sub_100075B9C(0, *(void *)(v87 + 16) + 1, 1, (void *)v87);
LABEL_182:
                unint64_t v204 = *(void *)(v87 + 16);
                unint64_t v203 = *(void *)(v87 + 24);
                if (v204 >= v203 >> 1) {
                  uint64_t v87 = (uint64_t)sub_100075B9C((void *)(v203 > 1), v204 + 1, 1, (void *)v87);
                }
                *(void *)(v87 + 16) = v204 + 1;
                uint64_t v205 = v87 + 48 * v204;
                *(void *)(v205 + 32) = v243;
                *(unsigned char *)(v205 + 40) = v242 & 1;
                uint64_t v206 = v250;
                *(void *)(v205 + 48) = v241;
                *(void *)(v205 + 56) = v206;
                uint64_t v207 = v239;
                *(void *)(v205 + 64) = v240;
                *(void *)(v205 + 72) = v207;
                v281 = (void *)v87;
                swift_endAccess();
                uint64_t v7 = v274;
LABEL_185:
                uint64_t v164 = v259;
LABEL_186:
                uint64_t v163 = (uint64_t)v252;
LABEL_187:
                id v208 = [v7 standardUserDefaults];
                swift_beginAccess();
                swift_bridgeObjectRetain();
                sub_10006C998();
                sub_10006F6E4(v163, v10, v164, v39);

LABEL_188:
                id v209 = sub_1000B3550();
                os_log_type_t v210 = sub_1000B42C0();
                if (os_log_type_enabled(v209, v210))
                {
                  uint64_t v211 = swift_slowAlloc();
                  v280[0] = swift_slowAlloc();
                  *(_DWORD *)uint64_t v211 = 136315394;
                  uint64_t v279 = sub_10002A68C(0xD000000000000030, 0x80000001000B9E00, v280);
                  sub_1000B4400();
                  *(_WORD *)(v211 + 12) = 2080;
                  swift_beginAccess();
                  swift_bridgeObjectRetain();
                  uint64_t v212 = sub_1000B4110();
                  unint64_t v214 = v213;
                  swift_bridgeObjectRelease();
                  uint64_t v278 = sub_10002A68C(v212, v214, v280);
                  sub_1000B4400();
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v209, v210, "%s (After) Cached widget metrics infos: %s", (uint8_t *)v211, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                  swift_bridgeObjectRelease();
                }
                else
                {

                  swift_bridgeObjectRelease();
                }
                return swift_bridgeObjectRelease();
              }
            }
          }
        }
        a2 = v107;
      }
LABEL_79:
      unint64_t v103 = (v106 - 1) & v106;
      unint64_t v105 = __clz(__rbit64(v106)) + (a2 << 6);
      if (*(void *)(a1 + 16))
      {
LABEL_80:
        uint64_t v108 = (uint64_t *)(*(void *)(v39 + 48) + 16 * v105);
        uint64_t v109 = *v108;
        uint64_t v10 = v108[1];
        swift_bridgeObjectRetain_n();
        uint64_t v110 = v109;
        uint64_t v87 = a1;
        sub_1000414A4(v110, v10);
        if ((v111 & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
          a1 = v277;
          continue;
        }
        uint64_t v151 = v39;
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10006F6E4(v258, v261, v257, v263);
        sub_10006F6E4((uint64_t)v249, v248, v247, v246);
        uint64_t v115 = v266;
LABEL_140:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v152 = *(void *)(v151 + 16);
        unint64_t v153 = v277;
        unint64_t v154 = *(void *)(v277 + 16);
        uint64_t v155 = v152 - v154;
        if (v152 < v154)
        {
          unint64_t v156 = v154 - v152;
          if ((uint64_t)(v154 - v152) < 1) {
            goto LABEL_224;
          }
          type metadata accessor for WidgetAnalyticsEvent();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          a1 = 2;
          uint64_t v157 = 1;
          while (1)
          {
            uint64_t v158 = swift_allocObject();
            *(unsigned char *)(v158 + 16) = 5;
            *(void *)(v158 + 32) = 0;
            *(void *)(v158 + 40) = 0;
            *(void *)(v158 + 24) = 2;
            *(_OWORD *)(v158 + 48) = v275;
            *(unsigned char *)(v158 + 64) = 1;
            sub_10006F728(0, 0, 1);
            sub_10006CB14(v158);
            swift_release();
            if (v156 == v157) {
              goto LABEL_166;
            }
            BOOL v54 = __OFADD__(v157++, 1);
            if (v54)
            {
              __break(1u);
              goto LABEL_147;
            }
          }
        }
        char v188 = v264;
        if (v154 >= v152)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v155 < 1) {
            goto LABEL_225;
          }
          type metadata accessor for WidgetAnalyticsEvent();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v189 = 1;
          while (1)
          {
            uint64_t v190 = swift_allocObject();
            *(unsigned char *)(v190 + 16) = 6;
            *(void *)(v190 + 32) = 0;
            *(void *)(v190 + 40) = 0;
            *(void *)(v190 + 24) = 2;
            *(_OWORD *)(v190 + 48) = v275;
            *(unsigned char *)(v190 + 64) = 1;
            sub_10006F728(0, 0, 1);
            sub_10006CB14(v190);
            swift_release();
            if (v155 == v189) {
              break;
            }
            BOOL v54 = __OFADD__(v189++, 1);
            if (v54)
            {
              __break(1u);
              break;
            }
          }
LABEL_166:
          unint64_t v153 = v277;
          uint64_t v115 = v266;
          char v188 = v264;
        }
        sub_1000B3EA0();
        uint64_t v191 = sub_1000B3E40();
        uint64_t v192 = *v238;
        (*v238)(v115, v268);
        if (v259 != v191)
        {
          sub_1000B3EA0();
          uint64_t v193 = sub_1000B3E40();
          v192(v115, v268);
          type metadata accessor for WidgetAnalyticsEvent();
          uint64_t v194 = swift_allocObject();
          *(unsigned char *)(v194 + 16) = 3;
          *(void *)(v194 + 24) = 2;
          *(void *)(v194 + 32) = 0;
          *(void *)(v194 + 40) = 0;
          *(void *)(v194 + 48) = 33686018;
          *(void *)(v194 + 56) = v193;
          *(unsigned char *)(v194 + 64) = 0;
          sub_10006F728(0, 0, 1);
          sub_10006CB14(v194);
          swift_release();
        }
        sub_1000B2990();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v195 = v311 ^ 1 | v188;
        if ((v195 & 1) == 0)
        {
          sub_1000B2990();
          if ((_BYTE)v311) {
            uint64_t v196 = 16908802;
          }
          else {
            uint64_t v196 = 131586;
          }
          type metadata accessor for WidgetAnalyticsEvent();
          uint64_t v197 = swift_allocObject();
          *(unsigned char *)(v197 + 16) = 2;
          *(void *)(v197 + 24) = 2;
          *(void *)(v197 + 32) = 0;
          *(void *)(v197 + 40) = 0;
          *(void *)(v197 + 48) = v196;
          *(void *)(v197 + 56) = 0;
          *(unsigned char *)(v197 + 64) = 1;
          sub_10006F728(0, 0, 1);
          sub_10006CB14(v197);
          swift_release();
        }
        sub_1000B2990();
        char v198 = v311;
        uint64_t v199 = v254;
        sub_1000B3EA0();
        uint64_t v200 = sub_1000B3E40();
        v192(v199, v268);
        if (v195)
        {
          swift_bridgeObjectRetain();
          unint64_t v201 = v153;
        }
        else
        {
          unint64_t v201 = sub_10001A494((uint64_t)_swiftEmptyArrayStorage);
        }
        sub_10006C7C0((uint64_t)v271, v198, v200, v201, (uint64_t)&v300);
        uint64_t v129 = v300;
        uint64_t v43 = v301;
        uint64_t v183 = v302;
        uint64_t v184 = v303;
        uint64_t v185 = v304;
        uint64_t v186 = v305;
        unint64_t v187 = v273;
        uint64_t v10 = v264;
LABEL_179:
        uint64_t v202 = v260;
        goto LABEL_180;
      }
    }
LABEL_86:
    unint64_t v34 = v273;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v112 = swift_bridgeObjectRetain();
    sub_10006C48C(v112, v39);
    uint64_t v114 = v113;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v115 = v266;
    if (v114)
    {
      sub_10006F6E4(v258, v261, v257, v263);
      sub_10006F6E4((uint64_t)v249, v248, v247, v246);
      uint64_t v151 = v39;
      goto LABEL_140;
    }
    BOOL v116 = v281[2] == 1;
    uint64_t v234 = v7;
    if (!v116)
    {
      sub_1000B2990();
      a1 = v277;
      if (v311 != 1)
      {
        uint64_t v133 = v235;
        if (*(void *)(v39 + 16))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v7 = v234;
LABEL_133:
          uint64_t v127 = v253;
          uint64_t v129 = v258;
          uint64_t v43 = v261;
          goto LABEL_134;
        }
        uint64_t v7 = v234;
        uint64_t v127 = v253;
        uint64_t v43 = v261;
        if (!*(void *)(v277 + 16))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v129 = v258;
LABEL_134:
          uint64_t v132 = v256;
          uint64_t v128 = v257;
          uint64_t v130 = v262;
          uint64_t v131 = v263;
          goto LABEL_135;
        }
LABEL_203:
        sub_10006F6E4(v258, v43, v257, v263);
        sub_10006F6E4((uint64_t)v249, v248, v247, v246);
        if (v264)
        {
          sub_1000B2990();
          if ((_BYTE)v311) {
            uint64_t v222 = 16908802;
          }
          else {
            uint64_t v222 = 131586;
          }
          type metadata accessor for WidgetAnalyticsEvent();
          uint64_t v223 = swift_allocObject();
          *(unsigned char *)(v223 + 16) = 2;
          *(void *)(v223 + 24) = 2;
          *(void *)(v223 + 32) = 0;
          *(void *)(v223 + 40) = 0;
          *(void *)(v223 + 48) = v222;
          *(void *)(v223 + 56) = 0;
          *(unsigned char *)(v223 + 64) = 1;
          sub_10006F728(0, 0, 1);
          sub_10006CB14(v223);
          swift_release();
        }
        sub_1000B2990();
        if ((void)v311)
        {
          uint64_t v224 = *(void *)(v311 + 16);
          if (v224)
          {
            type metadata accessor for WidgetAnalyticsEvent();
            swift_bridgeObjectRetain();
            do
            {
              uint64_t v225 = swift_allocObject();
              *(unsigned char *)(v225 + 16) = 5;
              *(void *)(v225 + 32) = 0;
              *(void *)(v225 + 40) = 0;
              *(void *)(v225 + 24) = 2;
              *(_OWORD *)(v225 + 48) = v275;
              *(unsigned char *)(v225 + 64) = 1;
              sub_10006F728(0, 0, 1);
              sub_10006CB14(v225);
              swift_release();
              --v224;
            }
            while (v224);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            a1 = v277;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v228 = v268;
          uint64_t v230 = (uint64_t)v271;
          unint64_t v227 = v273;
          uint64_t v229 = v251;
        }
        else
        {
          unint64_t v227 = v34;
          swift_bridgeObjectRelease();
          uint64_t v228 = v268;
          uint64_t v229 = v251;
          uint64_t v230 = (uint64_t)v271;
        }
        sub_1000B2990();
        char v231 = v311;
        sub_1000B3EA0();
        uint64_t v232 = sub_1000B3E40();
        (*v238)((char *)v229, v228);
        swift_bridgeObjectRetain();
        sub_10006C7C0(v230, v231, v232, a1, (uint64_t)&v300);
        uint64_t v129 = v300;
        uint64_t v43 = v301;
        uint64_t v183 = v302;
        uint64_t v184 = v303;
        uint64_t v185 = v304;
        uint64_t v186 = v305;
        uint64_t v10 = v264;
        uint64_t v202 = v260;
        unint64_t v187 = v227;
LABEL_180:
        if (v250)
        {
          sub_10006F6E4(v129, v43, v183, v184);
          swift_beginAccess();
          uint64_t v87 = (uint64_t)v281;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            goto LABEL_218;
          }
          goto LABEL_182;
        }
        if (!v39)
        {
          uint64_t v163 = (uint64_t)v252;
          uint64_t v261 = v43;
          uint64_t v262 = v185;
          uint64_t v164 = v259;
          uint64_t v263 = v184;
          uint64_t v217 = v183;
          sub_10006F73C((uint64_t)v252, v10, v259, 0);
          sub_10006F6E4(v129, v261, v217, v263);
          uint64_t v39 = 0;
          uint64_t v7 = v274;
          goto LABEL_187;
        }
        if (!v184)
        {
          uint64_t v7 = v274;
          goto LABEL_185;
        }
        uint64_t v262 = v185;
        uint64_t v263 = v184;
        uint64_t v256 = v186;
        uint64_t v257 = v183;
        unint64_t v216 = v187;
        uint64_t v261 = v43;
        uint64_t v258 = v129;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v170 = v39;
        uint64_t v169 = (uint64_t)v252;
        uint64_t v264 = v10;
        uint64_t v165 = v10;
        uint64_t v267 = v259;
        uint64_t v260 = v202;
        *(void *)&long long v275 = v202;
        unint64_t v273 = v216;
        unint64_t v171 = v216;
LABEL_151:
        *(void *)&long long v311 = v169;
        *((void *)&v311 + 1) = v165;
        uint64_t v172 = v267;
        *(void *)&long long v312 = v267;
        *((void *)&v312 + 1) = v170;
        *(void *)&long long v313 = v275;
        *((void *)&v313 + 1) = v171;
        swift_beginAccess();
        unint64_t v173 = sub_10006CE90((uint64_t)v281, (uint64_t)&v311);
        char v175 = v174;
        sub_10006F6E4(v169, v165, v172, v170);
        if ((v175 & 1) == 0)
        {
          swift_beginAccess();
          sub_10006BACC(v173, (uint64_t)v306);
          swift_endAccess();
          uint64_t v310 = v307;
          sub_100067C28((uint64_t)&v310);
          long long v309 = v308;
          sub_10006F780((uint64_t)&v309);
        }
        swift_beginAccess();
        uint64_t v40 = (long long *)v281;
        char v176 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v10 = v264;
        LOBYTE(v34) = v261;
        if (v176)
        {
LABEL_154:
          unint64_t v178 = *((void *)v40 + 2);
          unint64_t v177 = *((void *)v40 + 3);
          uint64_t v180 = v262;
          uint64_t v179 = v263;
          if (v178 >= v177 >> 1)
          {
            uint64_t v226 = (long long *)sub_100075B9C((void *)(v177 > 1), v178 + 1, 1, v40);
            uint64_t v180 = v262;
            uint64_t v179 = v263;
            uint64_t v40 = v226;
          }
          *((void *)v40 + 2) = v178 + 1;
          Swift::Int v181 = &v40[3 * v178];
          *((void *)v181 + 4) = v258;
          *((unsigned char *)v181 + 40) = v34 & 1;
          *((void *)v181 + 6) = v257;
          *((void *)v181 + 7) = v179;
          uint64_t v182 = v256;
          *((void *)v181 + 8) = v180;
          *((void *)v181 + 9) = v182;
          v281 = v40;
          swift_endAccess();
          uint64_t v7 = v274;
          uint64_t v164 = v259;
          goto LABEL_186;
        }
LABEL_214:
        uint64_t v40 = (long long *)sub_100075B9C(0, *((void *)v40 + 2) + 1, 1, v40);
        goto LABEL_154;
      }
      sub_10006F6E4(v243, v242, v241, v250);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000B3EA0();
      uint64_t v122 = sub_1000B3E40();
      unint64_t v123 = *v238;
      uint64_t v124 = v268;
      (*v238)(v115, v268);
      type metadata accessor for WidgetAnalyticsEvent();
      uint64_t v125 = swift_allocObject();
      *(unsigned char *)(v125 + 16) = 0;
      *(void *)(v125 + 24) = 2;
      *(void *)(v125 + 32) = 0;
      *(void *)(v125 + 40) = 0;
      *(void *)(v125 + 48) = 33686018;
      *(void *)(v125 + 56) = v122;
      *(unsigned char *)(v125 + 64) = 0;
      sub_10006F728(0, 0, 1);
      sub_10006CB14(v125);
      swift_release();
      sub_1000B2990();
      LOBYTE(v125) = v311;
      sub_1000B3EA0();
      uint64_t v126 = sub_1000B3E40();
      v123(v115, v124);
      swift_bridgeObjectRetain();
      sub_10006C7C0((uint64_t)v271, v125, v126, a1, (uint64_t)&v294);
      uint64_t v242 = v295;
      uint64_t v243 = v294;
      uint64_t v250 = v297;
      uint64_t v240 = v298;
      uint64_t v241 = v296;
      uint64_t v239 = v299;
      uint64_t v7 = v234;
LABEL_93:
      uint64_t v127 = v253;
      uint64_t v128 = v257;
      uint64_t v129 = v258;
      uint64_t v43 = v261;
      uint64_t v130 = v262;
      uint64_t v131 = v263;
      uint64_t v132 = v256;
      uint64_t v133 = v235;
LABEL_135:
      if (v236 == v133)
      {
        uint64_t v218 = v128;
        uint64_t v219 = v131;
        uint64_t v220 = v132;
        uint64_t v221 = v130;
        swift_bridgeObjectRelease();
        uint64_t v185 = v221;
        uint64_t v186 = v220;
        uint64_t v184 = v219;
        uint64_t v183 = v218;
        uint64_t v10 = v248;
        uint64_t v252 = v249;
        uint64_t v39 = v246;
        uint64_t v259 = v247;
        unint64_t v187 = v244;
        uint64_t v202 = v245;
        goto LABEL_180;
      }
      uint64_t v262 = v130;
      uint64_t v263 = v131;
      uint64_t v256 = v132;
      uint64_t v257 = v128;
      uint64_t v261 = v43;
      uint64_t v258 = v129;
      if (v236 >= v127[2])
      {
        __break(1u);
        goto LABEL_223;
      }
      unint64_t v150 = &v237[6 * v236];
      uint64_t v73 = *v150;
      uint64_t v264 = *((unsigned __int8 *)v150 + 8);
      a2 = v150[2];
      a4 = (void *)v150[3];
      uint64_t v10 = v150[5];
      uint64_t v260 = v150[4];
      ++v236;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v87 = sub_10006BC68((uint64_t)a4, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v87)
      {
LABEL_50:
        uint64_t v252 = (void *)v73;
        uint64_t v259 = a2;
        swift_bridgeObjectRelease();
        sub_10006F6E4((uint64_t)v249, v248, v247, v246);
        sub_10006F6E4(v258, v261, v257, v263);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v88 = sub_10006C2CC((uint64_t)a4, a1);
        swift_bridgeObjectRelease();
        if ((v88 & 1) == 0)
        {
          type metadata accessor for WidgetAnalyticsEvent();
          uint64_t v89 = swift_allocObject();
          *(unsigned char *)(v89 + 16) = 4;
          *(void *)(v89 + 32) = 0;
          *(void *)(v89 + 40) = 0;
          *(void *)(v89 + 24) = 2;
          *(_OWORD *)(v89 + 48) = xmmword_1000B70D0;
          *(unsigned char *)(v89 + 64) = 1;
          sub_10006F728(0, 0, 1);
          sub_10006CB14(v89);
          swift_release();
        }
        sub_1000B2990();
        uint64_t v90 = v10;
        swift_bridgeObjectRelease();
        uint64_t v39 = (uint64_t)a4;
        swift_bridgeObjectRelease();
        uint64_t v10 = v264;
        char v91 = v264 ^ v311;
        if ((v264 ^ v311))
        {
          sub_1000B2990();
          if ((_BYTE)v311) {
            uint64_t v92 = 16908802;
          }
          else {
            uint64_t v92 = 131586;
          }
          type metadata accessor for WidgetAnalyticsEvent();
          uint64_t v93 = swift_allocObject();
          *(unsigned char *)(v93 + 16) = 2;
          *(void *)(v93 + 24) = 2;
          *(void *)(v93 + 32) = 0;
          *(void *)(v93 + 40) = 0;
          *(void *)(v93 + 48) = v92;
          *(void *)(v93 + 56) = 0;
          *(unsigned char *)(v93 + 64) = 1;
          sub_10006F728(0, 0, 1);
          sub_10006CB14(v93);
          swift_release();
        }
        sub_1000B2990();
        char v94 = v311;
        uint64_t v95 = v255;
        sub_1000B3EA0();
        uint64_t v96 = sub_1000B3E40();
        (*(void (**)(char *, void *))(v267 + 8))(v95, v268);
        if (v91)
        {
          unint64_t v97 = sub_10001A494((uint64_t)_swiftEmptyArrayStorage);
        }
        else
        {
          swift_bridgeObjectRetain();
          unint64_t v97 = a1;
        }
        sub_10006C7C0((uint64_t)v271, v94, v96, v97, (uint64_t)&v300);
        uint64_t v129 = v300;
        uint64_t v43 = v301;
        uint64_t v183 = v302;
        uint64_t v184 = v303;
        uint64_t v185 = v304;
        uint64_t v186 = v305;
        unint64_t v187 = v90;
        goto LABEL_179;
      }
      continue;
    }
    break;
  }
  sub_1000B2990();
  a1 = v277;
  if (v311)
  {
    sub_10006F6E4(v243, v242, v241, v250);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000B3EA0();
    uint64_t v117 = sub_1000B3E40();
    uint64_t v118 = *v238;
    uint64_t v119 = v268;
    (*v238)(v115, v268);
    type metadata accessor for WidgetAnalyticsEvent();
    uint64_t v120 = swift_allocObject();
    *(unsigned char *)(v120 + 16) = 0;
    *(void *)(v120 + 24) = 2;
    *(void *)(v120 + 32) = 0;
    *(void *)(v120 + 40) = 0;
    *(void *)(v120 + 48) = 33686018;
    *(void *)(v120 + 56) = v117;
    *(unsigned char *)(v120 + 64) = 0;
    sub_10006F728(0, 0, 1);
    sub_10006CB14(v120);
    swift_release();
    sub_1000B2990();
    LOBYTE(v120) = v311;
    sub_1000B3EA0();
    uint64_t v121 = sub_1000B3E40();
    v118(v115, v119);
    uint64_t v7 = v234;
    swift_bridgeObjectRetain();
    sub_10006C7C0((uint64_t)v271, v120, v121, a1, (uint64_t)&v288);
    uint64_t v242 = v289;
    uint64_t v243 = v288;
    uint64_t v250 = v291;
    uint64_t v240 = v292;
    uint64_t v241 = v290;
    uint64_t v239 = v293;
    goto LABEL_93;
  }
  sub_10006F6E4((uint64_t)v249, v248, v247, v246);
  if (v264)
  {
    sub_10006F6E4(v258, v261, v257, v263);
    sub_1000B2990();
    if ((_BYTE)v311) {
      uint64_t v134 = 16908802;
    }
    else {
      uint64_t v134 = 131586;
    }
    type metadata accessor for WidgetAnalyticsEvent();
    uint64_t v135 = swift_allocObject();
    *(unsigned char *)(v135 + 16) = 2;
    *(void *)(v135 + 24) = 2;
    *(void *)(v135 + 32) = 0;
    *(void *)(v135 + 40) = 0;
    *(void *)(v135 + 48) = v134;
    *(void *)(v135 + 56) = 0;
    *(unsigned char *)(v135 + 64) = 1;
    sub_10006F728(0, 0, 1);
    sub_10006CB14(v135);
    swift_release();
    uint64_t v136 = *(void *)(a1 + 16);
    if (!v136) {
      goto LABEL_226;
    }
    uint64_t v133 = v235;
    do
    {
      uint64_t v137 = swift_allocObject();
      *(unsigned char *)(v137 + 16) = 5;
      *(void *)(v137 + 32) = 0;
      *(void *)(v137 + 40) = 0;
      *(void *)(v137 + 24) = 2;
      *(_OWORD *)(v137 + 48) = v275;
      *(unsigned char *)(v137 + 64) = 1;
      sub_10006F728(0, 0, 1);
      sub_10006CB14(v137);
      swift_release();
      --v136;
    }
    while (v136);
    sub_1000B2990();
    char v138 = v311;
    BOOL v139 = v266;
    sub_1000B3EA0();
    uint64_t v140 = sub_1000B3E40();
    (*v238)(v139, v268);
    swift_bridgeObjectRetain();
    sub_10006C7C0((uint64_t)v271, v138, v140, a1, (uint64_t)&v282);
    uint64_t v129 = v282;
    uint64_t v43 = v283;
    uint64_t v127 = v253;
    uint64_t v128 = v284;
    uint64_t v131 = v285;
    uint64_t v248 = v264;
    v249 = v252;
    uint64_t v246 = v39;
    uint64_t v247 = v259;
    unint64_t v244 = v273;
    uint64_t v245 = v260;
    uint64_t v130 = v286;
    uint64_t v132 = v287;
    uint64_t v7 = v234;
    goto LABEL_135;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000B2990();
  uint64_t v10 = 6;
  if ((void)v311)
  {
    uint64_t v141 = *(void *)(v311 + 16);
    if (v141)
    {
      type metadata accessor for WidgetAnalyticsEvent();
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v142 = swift_allocObject();
        *(unsigned char *)(v142 + 16) = 5;
        *(void *)(v142 + 32) = 0;
        *(void *)(v142 + 40) = 0;
        *(void *)(v142 + 24) = 2;
        *(_OWORD *)(v142 + 48) = v275;
        *(unsigned char *)(v142 + 64) = 1;
        sub_10006F728(0, 0, 1);
        sub_10006CB14(v142);
        swift_release();
        --v141;
      }
      while (v141);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v234;
      uint64_t v10 = 6;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v87 = 1 << *(unsigned char *)(v39 + 32);
  uint64_t v143 = *(void *)(v39 + 64);
  swift_bridgeObjectRelease();
  int64_t v144 = 0;
  if (v87 < 64) {
    uint64_t v145 = ~(-1 << v87);
  }
  else {
    uint64_t v145 = -1;
  }
  uint64_t v146 = v145 & v143;
  int64_t v147 = (unint64_t)(v87 + 63) >> 6;
  uint64_t v133 = v235;
  while (2)
  {
    if (v146) {
      goto LABEL_117;
    }
    int64_t v148 = v144 + 1;
    if (__OFADD__(v144, 1))
    {
      __break(1u);
      goto LABEL_217;
    }
    if (v148 >= v147) {
      goto LABEL_132;
    }
    uint64_t v146 = a4[v148];
    ++v144;
    if (v146) {
      goto LABEL_117;
    }
    int64_t v144 = v148 + 1;
    if (v148 + 1 >= v147) {
      goto LABEL_132;
    }
    uint64_t v146 = a4[v144];
    if (v146) {
      goto LABEL_117;
    }
    int64_t v144 = v148 + 2;
    if (v148 + 2 >= v147) {
      goto LABEL_132;
    }
    uint64_t v146 = a4[v144];
    if (v146)
    {
LABEL_117:
      v146 &= v146 - 1;
      type metadata accessor for WidgetAnalyticsEvent();
      uint64_t v87 = swift_allocObject();
      *(unsigned char *)(v87 + 16) = 6;
      *(void *)(v87 + 32) = 0;
      *(void *)(v87 + 40) = 0;
      *(void *)(v87 + 24) = 2;
      *(_OWORD *)(v87 + 48) = v275;
      *(unsigned char *)(v87 + 64) = 1;
      sub_10006F728(0, 0, 1);
      sub_10006CB14(v87);
      swift_release();
      continue;
    }
    break;
  }
  int64_t v149 = v148 + 3;
  if (v149 >= v147)
  {
LABEL_132:
    swift_release();
    uint64_t v248 = v264;
    v249 = v252;
    uint64_t v246 = v39;
    uint64_t v247 = v259;
    unint64_t v244 = v273;
    uint64_t v245 = v260;
    a1 = v277;
    goto LABEL_133;
  }
  uint64_t v146 = a4[v149];
  if (v146)
  {
    int64_t v144 = v149;
    goto LABEL_117;
  }
  while (1)
  {
    int64_t v144 = v149 + 1;
    if (__OFADD__(v149, 1)) {
      break;
    }
    if (v144 >= v147) {
      goto LABEL_132;
    }
    uint64_t v146 = a4[v144];
    ++v149;
    if (v146) {
      goto LABEL_117;
    }
  }
LABEL_223:
  __break(1u);
LABEL_224:
  __break(1u);
LABEL_225:
  __break(1u);
LABEL_226:
  __break(1u);
LABEL_227:
  uint64_t result = sub_1000B4870();
  __break(1u);
  return result;
}

uint64_t sub_10006F624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryAndSceneEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006F688(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccessoryAndSceneEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006F6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10006F728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10006F73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10006F780(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006F7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D6630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10006F814()
{
  unint64_t result = qword_1000D6648;
  if (!qword_1000D6648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6648);
  }
  return result;
}

uint64_t sub_10006F868(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006F8BC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(&qword_1000D6638);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006F92C()
{
  unint64_t result = qword_1000D6658;
  if (!qword_1000D6658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6658);
  }
  return result;
}

uint64_t destroy for WidgetMetricsInfo()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WidgetMetricsInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetMetricsInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetMetricsInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetMetricsInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetMetricsInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetMetricsInfo()
{
  return &type metadata for WidgetMetricsInfo;
}

unint64_t sub_10006FB88()
{
  unint64_t result = qword_1000D6668;
  if (!qword_1000D6668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6668);
  }
  return result;
}

uint64_t sub_10006FBDC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7361487865646E69 && a2 == 0xE900000000000068;
  if (v3 || (sub_1000B4830() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001000B9ED0 || (sub_1000B4830() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001000B9EF0 || (sub_1000B4830() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001000B9F10 || (sub_1000B4830() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1000B4830();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_10006FDF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100004210(&qword_1000D6680);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C804(a1, a1[3]);
  sub_10006FB88();
  sub_1000B4900();
  if (v2) {
    return sub_10002ACE4((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_1000B4760();
  char v24 = 1;
  char v10 = sub_1000B4730();
  char v23 = 2;
  uint64_t v19 = sub_1000B4740();
  sub_100004210(&qword_1000D6670);
  char v22 = 3;
  sub_1000700D8(&qword_1000D6688);
  sub_1000B4750();
  char v21 = 4;
  uint64_t v18 = v20;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1000B4720();
  uint64_t v13 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v17 = v11;
  v14(v8, v5);
  swift_bridgeObjectRetain();
  sub_10002ACE4((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v15 = v18;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10 & 1;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v13;
  return result;
}

uint64_t sub_1000700D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(&qword_1000D6670);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetMetricsInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetMetricsInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007029CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetMetricsInfo.CodingKeys()
{
  return &type metadata for WidgetMetricsInfo.CodingKeys;
}

unint64_t sub_1000702D8()
{
  unint64_t result = qword_1000D6690;
  if (!qword_1000D6690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6690);
  }
  return result;
}

unint64_t sub_100070330()
{
  unint64_t result = qword_1000D6698;
  if (!qword_1000D6698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6698);
  }
  return result;
}

unint64_t sub_100070388()
{
  unint64_t result = qword_1000D66A0;
  if (!qword_1000D66A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D66A0);
  }
  return result;
}

uint64_t sub_1000703DC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_100004210(&qword_1000D6500);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return _swift_continuation_throwingResume(v7);
  }
}

void *sub_100070474(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1000B46A0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)sub_1000B45E0() : *(id *)(a3 + 8 * i);
      int v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return (void *)swift_bridgeObjectRelease();
      }

      if (v12)
      {
        sub_1000B40E0();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1000B4130();
        }
        sub_1000B4150();
        sub_1000B4120();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return (void *)v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_100070614(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t result = _swiftEmptyArrayStorage;
    if (!v6) {
      break;
    }
    id v13 = _swiftEmptyArrayStorage;
    unint64_t result = (void *)sub_1000B4650();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v9 = (id)sub_1000B45E0();
      }
      else {
        id v9 = *(id *)(a3 + 8 * v8 + 32);
      }
      char v10 = v9;
      id v11 = v9;
      a1(&v12, &v11);

      if (v3) {
        return (void *)swift_release();
      }
      ++v8;
      sub_1000B4630();
      sub_1000B4660();
      sub_1000B4670();
      sub_1000B4640();
      if (v6 == v8) {
        return v13;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100070784(void (*a1)(__int16 *), void *a2, uint64_t a3)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v36 = sub_1000B31E0();
  __chkstk_darwin(v36);
  id v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a3 + 16);
  id v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return (uint64_t)v9;
  }
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v10 = v5;
  sub_10001EAEC(0, v8, 0);
  id v9 = v42;
  uint64_t result = sub_100076214(a3);
  uint64_t v13 = result;
  uint64_t v14 = 0;
  uint64_t v15 = a3 + 64;
  uint64_t v32 = v10;
  uint64_t v33 = v10 + 32;
  char v16 = *(unsigned char *)(a3 + 32);
  uint64_t v30 = a3 + 88;
  int64_t v31 = v8;
  unint64_t v34 = v7;
  uint64_t v35 = a3;
  while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << v16)
  {
    unint64_t v19 = (unint64_t)v13 >> 6;
    if ((*(void *)(v15 + 8 * ((unint64_t)v13 >> 6)) & (1 << v13)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(a3 + 36) != v12) {
      goto LABEL_29;
    }
    uint64_t v40 = v14;
    uint64_t v20 = v12;
    char v21 = v9;
    __int16 v41 = *(_WORD *)(*(void *)(a3 + 48) + 2 * v13);
    id v9 = v38;
    v37(&v41);
    if (v3)
    {
      swift_release();
      return (uint64_t)v9;
    }
    uint64_t v22 = v32;
    uint64_t v39 = 0;
    id v9 = v21;
    uint64_t v42 = v21;
    unint64_t v24 = v21[2];
    unint64_t v23 = v21[3];
    if (v24 >= v23 >> 1)
    {
      sub_10001EAEC(v23 > 1, v24 + 1, 1);
      id v9 = v42;
    }
    void v9[2] = v24 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t))(v22 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v24);
    a3 = v35;
    char v16 = *(unsigned char *)(v35 + 32);
    unint64_t v17 = 1 << v16;
    if (v13 >= 1 << v16) {
      goto LABEL_30;
    }
    uint64_t v25 = *(void *)(v15 + 8 * v19);
    if ((v25 & (1 << v13)) == 0) {
      goto LABEL_31;
    }
    uint64_t v12 = v20;
    if (*(_DWORD *)(v35 + 36) != v20) {
      goto LABEL_32;
    }
    unint64_t v26 = v25 & (-2 << (v13 & 0x3F));
    if (v26)
    {
      unint64_t v17 = __clz(__rbit64(v26)) | v13 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v3 = v39;
      int64_t v18 = v31;
    }
    else
    {
      unint64_t v27 = v19 + 1;
      unint64_t v28 = (v17 + 63) >> 6;
      uint64_t v3 = v39;
      int64_t v18 = v31;
      if (v19 + 1 < v28)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v27);
        if (!v29)
        {
          unint64_t v27 = v19 + 2;
          if (v19 + 2 >= v28) {
            goto LABEL_4;
          }
          unint64_t v29 = *(void *)(v15 + 8 * v27);
          if (!v29)
          {
            while (v28 - 3 != v19)
            {
              unint64_t v29 = *(void *)(v30 + 8 * v19++);
              if (v29)
              {
                unint64_t v27 = v19 + 2;
                goto LABEL_18;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_18:
        unint64_t v17 = __clz(__rbit64(v29)) + (v27 << 6);
      }
    }
LABEL_4:
    uint64_t v14 = v40 + 1;
    uint64_t v13 = v17;
    if (v40 + 1 == v18) {
      return (uint64_t)v9;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100070A9C(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for WidgetTileInfo();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v78 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004210(&qword_1000D5010);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v79 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v77 = (uint64_t)&v65 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v65 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = *v1;
  int64_t v17 = *(void *)(*v1 + 16);
  int64_t v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v16;
  uint64_t v80 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v20 = *(void *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18) {
      int64_t v21 = v17 + v15;
    }
    else {
      int64_t v21 = v17;
    }
    unint64_t v16 = sub_1000753F0(isUniquelyReferenced_nonNull_native, v21, 1, v16, &qword_1000D5270, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    *uint64_t v1 = v16;
    int64_t v20 = *(void *)(v16 + 24) >> 1;
  }
  uint64_t v22 = *(void *)(v16 + 16);
  int64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int64_t v18 = *(void *)(v5 + 72);
  int64_t v23 = v20 - v22;
  uint64_t v24 = sub_10002C0E8(&v81, v16 + v17 + v18 * v22, v20 - v22, a1);
  if (v24 < v15) {
    goto LABEL_17;
  }
  if (v24)
  {
    uint64_t v26 = *(void *)(v16 + 16);
    BOOL v27 = __OFADD__(v26, v24);
    uint64_t v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v16 + 16) = v28;
  }
  if (v24 == v23)
  {
LABEL_18:
    int64_t v67 = *(void *)(v16 + 16);
    uint64_t v25 = v81;
    int64_t v23 = v84;
    uint64_t v75 = v82;
    uint64_t v76 = v83;
    if (v85)
    {
      unint64_t v74 = (v85 - 1) & v85;
      unint64_t v30 = __clz(__rbit64(v85)) | (v84 << 6);
      uint64_t v31 = v80;
LABEL_20:
      uint64_t v32 = v25;
      sub_100007FDC(*(void *)(v25 + 48) + v30 * v18, (uint64_t)v14);
      unint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v69(v14, 0, 1, v31);
      uint64_t v15 = v23;
      goto LABEL_44;
    }
LABEL_22:
    int64_t v33 = v23 + 1;
    uint64_t v31 = v80;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_42:
      uint64_t v31 = v80;
      uint64_t v25 = v12;
    }
    else
    {
      int64_t v34 = (unint64_t)(v76 + 64) >> 6;
      uint64_t v15 = v23;
      if (v33 < v34)
      {
        unint64_t v35 = *(void *)(v75 + 8 * v33);
        if (v35)
        {
LABEL_25:
          unint64_t v74 = (v35 - 1) & v35;
          unint64_t v30 = __clz(__rbit64(v35)) + (v33 << 6);
          int64_t v23 = v33;
          goto LABEL_20;
        }
        int64_t v36 = v23 + 2;
        uint64_t v15 = v23 + 1;
        if (v23 + 2 < v34)
        {
          uint64_t v12 = v25;
          unint64_t v35 = *(void *)(v75 + 8 * v36);
          if (v35)
          {
LABEL_28:
            int64_t v33 = v36;
LABEL_29:
            uint64_t v31 = v80;
            goto LABEL_25;
          }
          uint64_t v15 = v23 + 2;
          uint64_t v31 = v80;
          if (v23 + 3 < v34)
          {
            unint64_t v35 = *(void *)(v75 + 8 * (v23 + 3));
            if (v35)
            {
              int64_t v33 = v23 + 3;
              goto LABEL_29;
            }
            int64_t v36 = v23 + 4;
            uint64_t v15 = v23 + 3;
            uint64_t v31 = v80;
            if (v23 + 4 < v34)
            {
              unint64_t v35 = *(void *)(v75 + 8 * v36);
              if (v35) {
                goto LABEL_28;
              }
              int64_t v33 = v23 + 5;
              uint64_t v15 = v23 + 4;
              uint64_t v31 = v80;
              if (v23 + 5 < v34)
              {
                unint64_t v35 = *(void *)(v75 + 8 * v33);
                if (v35) {
                  goto LABEL_25;
                }
                uint64_t v15 = v34 - 1;
                int64_t v37 = v23 + 6;
                do
                {
                  if (v34 == v37) {
                    goto LABEL_42;
                  }
                  unint64_t v35 = *(void *)(v75 + 8 * v37++);
                }
                while (!v35);
                int64_t v33 = v37 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
    uint64_t v32 = v25;
    unint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v69(v14, 1, 1, v31);
    unint64_t v74 = 0;
LABEL_44:
    uint64_t v38 = v32;
    uint64_t v81 = v32;
    uint64_t v82 = v75;
    uint64_t v83 = v76;
    int64_t v84 = v15;
    uint64_t v70 = v15;
    unint64_t v85 = v74;
    uint64_t v39 = v77;
    sub_1000767E8((uint64_t)v14, v77);
    uint64_t v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    if (v73(v39, 1, v31) == 1)
    {
      uint64_t v40 = v77;
LABEL_46:
      sub_100076850((uint64_t)v14);
      sub_100017A14();
      return sub_100076850(v40);
    }
    uint64_t v68 = v5 + 56;
    uint64_t v40 = v77;
    int64_t v41 = v67;
    while (1)
    {
      uint64_t v66 = v38;
      sub_100076850(v40);
      unint64_t v42 = *v1;
      unint64_t v43 = *(void *)(*v1 + 24);
      int64_t v44 = v43 >> 1;
      int64_t v67 = v41;
      if ((uint64_t)(v43 >> 1) < v41 + 1)
      {
        unint64_t v42 = sub_1000753F0(v43 > 1, v41 + 1, 1, v42, &qword_1000D5270, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
        *uint64_t v1 = v42;
        int64_t v44 = *(void *)(v42 + 24) >> 1;
      }
      uint64_t v45 = v79;
      sub_1000767E8((uint64_t)v14, v79);
      if (v73(v45, 1, v80) == 1)
      {
        uint64_t v46 = v45;
        uint64_t v38 = v66;
        int64_t v41 = v67;
LABEL_87:
        sub_100076850(v46);
        goto LABEL_49;
      }
      unint64_t v71 = v42 + v17;
      uint64_t v47 = v78;
      sub_10000809C(v45, v78);
      uint64_t v38 = v66;
      BOOL v48 = v67 < v44;
      int64_t v49 = v67 <= v44 ? v44 : v67;
      int64_t v72 = v49;
      uint64_t v50 = v47;
      int64_t v51 = v67;
      if (v48) {
        break;
      }
LABEL_48:
      sub_100008040(v50);
      int64_t v41 = v72;
LABEL_49:
      uint64_t v40 = v77;
      *(void *)(*v1 + 16) = v41;
      sub_1000767E8((uint64_t)v14, v40);
      if (v73(v40, 1, v80) == 1) {
        goto LABEL_46;
      }
    }
    while (1)
    {
      sub_100076850((uint64_t)v14);
      uint64_t result = sub_10000809C(v50, v71 + v51 * v18);
      uint64_t v52 = v81;
      int64_t v53 = v84;
      uint64_t v75 = v82;
      uint64_t v76 = v83;
      if (v85) {
        break;
      }
      int64_t v58 = v84 + 1;
      if (__OFADD__(v84, 1))
      {
        __break(1u);
        return result;
      }
      int64_t v59 = (unint64_t)(v76 + 64) >> 6;
      int64_t v60 = v84;
      if (v58 < v59)
      {
        unint64_t v61 = *(void *)(v75 + 8 * v58);
        if (v61) {
          goto LABEL_65;
        }
        int64_t v60 = v84 + 1;
        if (v84 + 2 < v59)
        {
          unint64_t v61 = *(void *)(v75 + 8 * (v84 + 2));
          if (v61)
          {
            int64_t v58 = v84 + 2;
            goto LABEL_65;
          }
          int64_t v60 = v84 + 2;
          if (v84 + 3 < v59)
          {
            unint64_t v61 = *(void *)(v75 + 8 * (v84 + 3));
            if (v61)
            {
              int64_t v58 = v84 + 3;
              goto LABEL_65;
            }
            int64_t v60 = v84 + 3;
            if (v84 + 4 < v59)
            {
              unint64_t v61 = *(void *)(v75 + 8 * (v84 + 4));
              if (v61)
              {
                int64_t v58 = v84 + 4;
LABEL_65:
                uint64_t v54 = v51;
                unint64_t v74 = (v61 - 1) & v61;
                unint64_t v55 = __clz(__rbit64(v61)) + (v58 << 6);
                int64_t v53 = v58;
LABEL_61:
                sub_100007FDC(*(void *)(v81 + 48) + v55 * v18, (uint64_t)v14);
                uint64_t v56 = v80;
                v69(v14, 0, 1, v80);
                int64_t v57 = v53;
                uint64_t v50 = v78;
                goto LABEL_83;
              }
              int64_t v58 = v84 + 5;
              int64_t v60 = v84 + 4;
              uint64_t v50 = v78;
              if (v84 + 5 < v59)
              {
                unint64_t v61 = *(void *)(v75 + 8 * v58);
                if (v61) {
                  goto LABEL_65;
                }
                int64_t v62 = v84 + 6;
                while (v59 != v62)
                {
                  unint64_t v61 = *(void *)(v75 + 8 * v62++);
                  if (v61)
                  {
                    int64_t v58 = v62 - 1;
                    goto LABEL_65;
                  }
                }
                uint64_t v50 = v78;
                int64_t v60 = v59 - 1;
              }
            }
          }
        }
      }
      uint64_t v54 = v51;
      uint64_t v56 = v80;
      int64_t v63 = v60;
      v69(v14, 1, 1, v80);
      int64_t v57 = v63;
      unint64_t v74 = 0;
LABEL_83:
      int64_t v41 = v54 + 1;
      uint64_t v38 = v52;
      uint64_t v81 = v52;
      uint64_t v82 = v75;
      uint64_t v83 = v76;
      int64_t v84 = v57;
      uint64_t v70 = v57;
      unint64_t v85 = v74;
      uint64_t v64 = v79;
      sub_1000767E8((uint64_t)v14, v79);
      if (v73(v64, 1, v56) == 1)
      {
        uint64_t v46 = v64;
        goto LABEL_87;
      }
      sub_10000809C(v64, v50);
      int64_t v51 = v41;
      if (v41 == v72) {
        goto LABEL_48;
      }
    }
    uint64_t v54 = v51;
    unint64_t v74 = (v85 - 1) & v85;
    unint64_t v55 = __clz(__rbit64(v85)) | (v84 << 6);
    goto LABEL_61;
  }

  return sub_100017A14();
}

uint64_t sub_100071330(uint64_t a1)
{
  return sub_10007158C(a1, &qword_1000D5240, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_100071378(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000B46A0();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000B45F0();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_100075DD4(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_1000B4120();
}

uint64_t sub_100071544(uint64_t a1)
{
  return sub_10007158C(a1, &qword_1000D5278, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_10007158C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  unint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    unint64_t v16 = *(void *)(a1 + 16);
    if (v16) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v8 <= v9) {
    int64_t v31 = v8 + v6;
  }
  else {
    int64_t v31 = v8;
  }
  unint64_t v7 = sub_1000753F0(isUniquelyReferenced_nonNull_native, v31, 1, v7, a2, a3, a4);
  unint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v17 = *(void *)(v7 + 16);
  uint64_t v18 = (*(void *)(v7 + 24) >> 1) - v17;
  uint64_t v19 = *(void *)(a5(0) - 8);
  uint64_t v20 = *(void *)(v19 + 72);
  if (v18 < (uint64_t)v16)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v22 = v7 + v21 + v20 * v17;
  unint64_t v23 = a1 + v21;
  uint64_t v24 = v20 * v16;
  unint64_t v25 = v22 + v24;
  unint64_t v26 = v23 + v24;
  if (v23 < v25 && v22 < v26) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v16 < v6)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v28 = *(void *)(v7 + 16);
  BOOL v29 = __OFADD__(v28, v16);
  uint64_t v30 = v28 + v16;
  if (!v29)
  {
    *(void *)(v7 + 16) = v30;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v5 = v7;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_100071764(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000B46A0();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000B45F0();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_100075FF4(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_1000B46A0();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_1000B4120();
}

uint64_t sub_100071930()
{
  v1[3] = v0;
  v1[4] = type metadata accessor for WidgetTileInfo();
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_1000719C4, 0, 0);
}

uint64_t sub_1000719C4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v1 + *(int *)(v0[4] + 56);
  uint64_t v3 = *(void **)v2;
  v0[6] = *(void *)v2;
  switch(*(unsigned char *)(v2 + 8))
  {
    case 2:
      id v8 = v3;
      uint64_t v9 = (void *)swift_task_alloc();
      v0[7] = v9;
      void *v9 = v0;
      v9[1] = sub_100071C54;
      uint64_t v10 = v0[3];
      void v9[2] = v8;
      v9[3] = v10;
      uint64_t v11 = sub_1000726BC;
      goto LABEL_9;
    case 3:
      sub_100007FDC(v1, v0[5]);
      id v12 = v3;
      BOOL v13 = (void *)swift_task_alloc();
      v0[9] = v13;
      *BOOL v13 = v0;
      v13[1] = sub_100071EA4;
      sub_100008040(v0[5]);
      uint64_t v14 = sub_100076488;
      goto LABEL_10;
    case 4:
      v0[14] = _swiftEmptyArrayStorage;
      uint64_t v15 = (void *)swift_task_alloc();
      v0[15] = v15;
      *uint64_t v15 = v0;
      v15[1] = sub_100072344;
      v15[23] = _swiftEmptyArrayStorage;
      uint64_t v11 = sub_10007427C;
LABEL_9:
      uint64_t v14 = v11;
LABEL_10:
      uint64_t result = _swift_task_switch(v14, 0, 0);
      break;
    default:
      sub_10001B494();
      v0[11] = v4;
      if (v4)
      {
        uint64_t v5 = v4;
        unint64_t v6 = (void *)swift_task_alloc();
        v0[12] = v6;
        *unint64_t v6 = v0;
        v6[1] = sub_1000720F4;
        uint64_t result = sub_100072A4C(v5);
      }
      else
      {
        swift_task_dealloc();
        unint64_t v16 = (uint64_t (*)(void))v0[1];
        uint64_t result = v16();
      }
      break;
  }
  return result;
}

uint64_t sub_100071C54(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100071D54, 0, 0);
}

uint64_t sub_100071D54()
{
  uint64_t v1 = (void *)v0[6];
  if (v0[8] >> 62)
  {
    sub_100008148(0, &qword_1000D66C0);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000B4690();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000B4840();

    sub_100008148(0, &qword_1000D66C0);
    uint64_t v2 = v0[8];
  }
  swift_bridgeObjectRelease();
  v0[14] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100072344;
  v3[23] = v2;
  return _swift_task_switch(sub_10007427C, 0, 0);
}

uint64_t sub_100071EA4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100071FA4, 0, 0);
}

uint64_t sub_100071FA4()
{
  uint64_t v1 = (void *)v0[6];
  if (v0[10] >> 62)
  {
    sub_100008148(0, &qword_1000D66C0);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000B4690();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000B4840();

    sub_100008148(0, &qword_1000D66C0);
    uint64_t v2 = v0[10];
  }
  swift_bridgeObjectRelease();
  v0[14] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100072344;
  v3[23] = v2;
  return _swift_task_switch(sub_10007427C, 0, 0);
}

uint64_t sub_1000720F4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000721F4, 0, 0);
}

uint64_t sub_1000721F4()
{
  uint64_t v1 = (void *)v0[11];
  if (v0[13] >> 62)
  {
    sub_100008148(0, &qword_1000D66C0);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000B4690();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000B4840();

    sub_100008148(0, &qword_1000D66C0);
    uint64_t v2 = v0[13];
  }
  swift_bridgeObjectRelease();
  v0[14] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100072344;
  v3[23] = v2;
  return _swift_task_switch(sub_10007427C, 0, 0);
}

uint64_t sub_100072344()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100072488, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100072488()
{
  swift_bridgeObjectRelease();
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000B3570();
  sub_100017618(v1, (uint64_t)qword_1000DCC18);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_1000B3550();
  os_log_type_t v3 = sub_1000B42A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    sub_1000B4400();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error %@", v4, 0xCu);
    sub_100004210(&qword_1000D51D8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10007269C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1000726BC, 0, 0);
}

uint64_t sub_1000726BC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(int *)(type metadata accessor for WidgetTileInfo() + 60);
  *(_DWORD *)(v0 + 48) = v2;
  if (*(void *)(*(void *)(v1 + v2) + 16))
  {
    sub_10001A910();
    sub_100004210(&qword_1000D5190);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1000B52D0;
    *(void *)(v3 + 32) = [self executeRequestWithActionSet:*(void *)(v0 + 16)];
    sub_1000B4120();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v6(v3);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 32) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10007283C;
    return sub_10001B5C0();
  }
}

uint64_t sub_10007283C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10007293C, 0, 0);
}

uint64_t sub_10007293C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(int *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 24);
  swift_bridgeObjectRelease();
  *(void *)(v3 + v2) = v1;
  sub_10001A910();
  sub_100004210(&qword_1000D5190);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000B52D0;
  *(void *)(v4 + 32) = [self executeRequestWithActionSet:*(void *)(v0 + 16)];
  sub_1000B4120();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_100072A4C(uint64_t a1)
{
  v2[42] = a1;
  v2[43] = v1;
  v2[44] = type metadata accessor for WidgetTileInfo();
  v2[45] = swift_task_alloc();
  uint64_t v3 = sub_1000B3320();
  v2[46] = v3;
  v2[47] = *(void *)(v3 - 8);
  v2[48] = swift_task_alloc();
  uint64_t v4 = sub_1000B31A0();
  v2[49] = v4;
  v2[50] = *(void *)(v4 - 8);
  v2[51] = swift_task_alloc();
  return _swift_task_switch(sub_100072B98, 0, 0);
}

uint64_t sub_100072B98()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(int *)(*(void *)(v0 + 352) + 60);
  *(_DWORD *)(v0 + 432) = v2;
  uint64_t v3 = *(void *)(v1 + v2);
  if (*(void *)(v3 + 16))
  {
    uint64_t v5 = *(void *)(v0 + 400);
    uint64_t v4 = *(void *)(v0 + 408);
    uint64_t v6 = *(void *)(v0 + 392);
    uint64_t v109 = _swiftEmptyArrayStorage;
    sub_1000B43B0();
    int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6);
    if (v7 == enum case for ServiceKind.door(_:))
    {
LABEL_3:
      uint64_t v9 = *(void *)(v0 + 376);
      uint64_t v8 = *(void *)(v0 + 384);
      uint64_t v10 = *(void *)(v0 + 368);
      uint64_t v11 = *(void (**)(uint64_t, void, uint64_t))(v9 + 104);
      v11(v8, enum case for CharacteristicKind.currentPosition(_:), v10);
      uint64_t v12 = sub_100008520(v8, v3);
      char v14 = v13;
      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v15(v8, v10);
      if (v14)
      {
LABEL_25:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v77 = *(uint64_t (**)(void *))(v0 + 8);
        return v77(v109);
      }
      uint64_t v16 = *(void *)(v0 + 384);
      uint64_t v17 = *(void *)(v0 + 360);
      uint64_t v18 = *(void *)(v0 + 368);
      uint64_t v19 = *(void *)(v0 + 344);
      swift_bridgeObjectRelease();
      sub_100007FDC(v19, v17);
      uint64_t v20 = 100;
      if (v12 > 0) {
        uint64_t v20 = 0;
      }
      *(void *)(v0 + 200) = &type metadata for Int;
      *(void *)(v0 + 176) = v20;
      v11(v16, enum case for CharacteristicKind.targetPosition(_:), v18);
      unint64_t v21 = sub_100075164(v17, v16);
      uint64_t v22 = swift_task_alloc();
      *(void *)(v22 + 16) = v0 + 176;
      unint64_t v23 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v22, (unint64_t)v21);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      v15(v16, v18);
      sub_100008040(v17);
      uint64_t v24 = v0 + 176;
LABEL_7:
      sub_10002ACE4(v24);
      uint64_t v109 = v23;
      goto LABEL_25;
    }
    if (v7 == enum case for ServiceKind.garageDoorOpener(_:))
    {
      uint64_t v28 = *(void *)(v0 + 376);
      uint64_t v27 = *(void *)(v0 + 384);
      uint64_t v29 = *(void *)(v0 + 368);
      uint64_t v30 = *(void (**)(uint64_t, void, uint64_t))(v28 + 104);
      v30(v27, enum case for CharacteristicKind.currentDoorState(_:), v29);
      unint64_t v31 = sub_100008520(v27, v3);
      char v33 = v32;
      int64_t v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v34(v27, v29);
      if ((v33 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        if (v31 > 4) {
          uint64_t v35 = 0;
        }
        else {
          uint64_t v35 = qword_1000B72B8[v31];
        }
        uint64_t v71 = *(void *)(v0 + 384);
        uint64_t v72 = *(void *)(v0 + 368);
        uint64_t v73 = *(void *)(v0 + 344);
        *(void *)(v0 + 264) = &type metadata for Int;
        *(void *)(v0 + 240) = v35;
        v30(v71, enum case for CharacteristicKind.targetDoorState(_:), v72);
        unint64_t v74 = sub_100075164(v73, v71);
        uint64_t v75 = swift_task_alloc();
        *(void *)(v75 + 16) = v0 + 240;
        uint64_t v76 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v75, (unint64_t)v74);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        v34(v71, v72);
        sub_10002ACE4(v0 + 240);
        uint64_t v109 = v76;
      }
      goto LABEL_25;
    }
    if (v7 == enum case for ServiceKind.lightbulb(_:))
    {
      uint64_t v37 = *(void *)(v0 + 376);
      uint64_t v36 = *(void *)(v0 + 384);
      uint64_t v38 = *(void *)(v0 + 368);
      uint64_t v104 = v38;
      uint64_t v39 = *(void *)(v0 + 344);
      uint64_t v107 = *(int *)(v0 + 432);
      char v40 = sub_10001A910();
      *(void *)(v0 + 136) = &type metadata for Bool;
      *(unsigned char *)(v0 + 112) = (v40 & 1) == 0;
      int64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104);
      v41(v36, enum case for CharacteristicKind.powerState(_:), v38);
      unint64_t v42 = sub_100075164(v39, v36);
      uint64_t v43 = swift_task_alloc();
      *(void *)(v43 + 16) = v0 + 112;
      int64_t v44 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v43, (unint64_t)v42);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v45(v36, v104);
      sub_10002ACE4(v0 + 112);
      uint64_t v109 = v44;
      uint64_t v46 = enum case for CharacteristicKind.brightness(_:);
      uint64_t v47 = v41;
      v41(v36, enum case for CharacteristicKind.brightness(_:), v104);
      uint64_t v48 = sub_100008520(v36, *(void *)(v39 + v107));
      LOBYTE(v41) = v49;
      v45(v36, v104);
      if ((v41 & 1) == 0 && !v48 && (sub_10001A910() & 1) == 0)
      {
        uint64_t v50 = *(void *)(v0 + 384);
        uint64_t v51 = *(void *)(v0 + 368);
        uint64_t v52 = *(void *)(v0 + 344);
        *(void *)(v0 + 72) = &type metadata for Int;
        *(void *)(v0 + 48) = 100;
        v47(v50, v46, v51);
        int64_t v53 = sub_100075164(v52, v50);
        uint64_t v54 = swift_task_alloc();
        *(void *)(v54 + 16) = v0 + 48;
        unint64_t v55 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v54, (unint64_t)v53);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        v45(v50, v51);
        sub_10002ACE4(v0 + 48);
        sub_100071764((unint64_t)v55);
      }
      goto LABEL_25;
    }
    if (v7 == enum case for ServiceKind.lockMechanism(_:))
    {
      uint64_t v57 = *(void *)(v0 + 376);
      uint64_t v56 = *(void *)(v0 + 384);
      uint64_t v58 = *(void *)(v0 + 368);
      int64_t v59 = *(void (**)(uint64_t, void, uint64_t))(v57 + 104);
      v59(v56, enum case for CharacteristicKind.currentLockMechanismState(_:), v58);
      uint64_t v60 = sub_100008520(v56, v3);
      char v62 = v61;
      int64_t v63 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v63(v56, v58);
      if (v62) {
        goto LABEL_25;
      }
      uint64_t v64 = v0 + 208;
      uint64_t v65 = *(void *)(v0 + 384);
      uint64_t v66 = *(void *)(v0 + 368);
      uint64_t v67 = *(void *)(v0 + 344);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 232) = &type metadata for Int;
      *(void *)(v0 + 208) = v60 == 0;
      v59(v65, enum case for CharacteristicKind.targetLockMechanismState(_:), v66);
      uint64_t v68 = sub_100075164(v67, v65);
      uint64_t v69 = swift_task_alloc();
      *(void *)(v69 + 16) = v0 + 208;
      unint64_t v23 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v69, (unint64_t)v68);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v70 = v65;
    }
    else
    {
      if (v7 != enum case for ServiceKind.securitySystem(_:))
      {
        if (v7 != enum case for ServiceKind.window(_:) && v7 != enum case for ServiceKind.windowCovering(_:))
        {
          uint64_t v105 = *(void *)(v0 + 400);
          uint64_t v90 = *(void *)(v0 + 384);
          uint64_t v106 = *(void *)(v0 + 392);
          uint64_t v108 = *(void *)(v0 + 408);
          uint64_t v91 = *(void *)(v0 + 368);
          uint64_t v92 = *(void *)(v0 + 376);
          uint64_t v93 = *(void *)(v0 + 344);
          char v94 = sub_10001A910();
          *(void *)(v0 + 40) = &type metadata for Bool;
          *(unsigned char *)(v0 + 16) = (v94 & 1) == 0;
          unint64_t v103 = *(void (**)(uint64_t, void, uint64_t))(v92 + 104);
          v103(v90, enum case for CharacteristicKind.powerState(_:), v91);
          uint64_t v95 = sub_100075164(v93, v90);
          uint64_t v96 = swift_task_alloc();
          *(void *)(v96 + 16) = v0 + 16;
          unint64_t v97 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076640, v96, (unint64_t)v95);
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          unint64_t v98 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
          v98(v90, v91);
          sub_10002ACE4(v0 + 16);
          sub_100071764((unint64_t)v97);
          char v99 = sub_10001A910();
          *(void *)(v0 + 104) = &type metadata for Bool;
          *(unsigned char *)(v0 + 80) = (v99 & 1) == 0;
          v103(v90, enum case for CharacteristicKind.active(_:), v91);
          uint64_t v100 = sub_100075164(v93, v90);
          uint64_t v101 = swift_task_alloc();
          *(void *)(v101 + 16) = v0 + 80;
          uint64_t v102 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v101, (unint64_t)v100);
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          v98(v90, v91);
          sub_10002ACE4(v0 + 80);
          sub_100071764((unint64_t)v102);
          (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v108, v106);
          goto LABEL_25;
        }
        goto LABEL_3;
      }
      uint64_t v79 = *(void *)(v0 + 376);
      uint64_t v78 = *(void *)(v0 + 384);
      uint64_t v80 = *(void *)(v0 + 368);
      uint64_t v81 = *(void (**)(uint64_t, void, uint64_t))(v79 + 104);
      v81(v78, enum case for CharacteristicKind.currentSecuritySystemState(_:), v80);
      uint64_t v82 = sub_100008520(v78, v3);
      char v84 = v83;
      int64_t v63 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
      v63(v78, v80);
      if (v84) {
        goto LABEL_25;
      }
      uint64_t v64 = v0 + 144;
      uint64_t v85 = *(void *)(v0 + 384);
      uint64_t v66 = *(void *)(v0 + 368);
      uint64_t v86 = *(void *)(v0 + 344);
      swift_bridgeObjectRelease();
      uint64_t v87 = 3;
      if (v82 == 3) {
        uint64_t v87 = 0;
      }
      *(void *)(v0 + 168) = &type metadata for Int;
      *(void *)(v0 + 144) = v87;
      v81(v85, enum case for CharacteristicKind.targetSecuritySystemState(_:), v66);
      char v88 = sub_100075164(v86, v85);
      uint64_t v89 = swift_task_alloc();
      *(void *)(v89 + 16) = v64;
      unint64_t v23 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v89, (unint64_t)v88);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v70 = v85;
    }
    v63(v70, v66);
    uint64_t v24 = v64;
    goto LABEL_7;
  }
  unint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v25;
  *unint64_t v25 = v0;
  v25[1] = sub_1000736B4;
  return sub_10001B5C0();
}

uint64_t sub_1000736B4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 424) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000737B4, 0, 0);
}

uint64_t sub_1000737B4()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = *(int *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 344);
  swift_bridgeObjectRelease();
  *(void *)(v3 + v2) = v1;
  uint64_t v4 = *(void *)(v0 + 424);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v7 = *(void *)(v0 + 392);
  uint64_t v109 = _swiftEmptyArrayStorage;
  sub_1000B43B0();
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7);
  if (v8 == enum case for ServiceKind.door(_:)) {
    goto LABEL_2;
  }
  if (v8 == enum case for ServiceKind.garageDoorOpener(_:))
  {
    uint64_t v27 = *(void *)(v0 + 376);
    uint64_t v26 = *(void *)(v0 + 384);
    uint64_t v28 = *(void *)(v0 + 368);
    uint64_t v29 = *(void (**)(uint64_t, void, uint64_t))(v27 + 104);
    v29(v26, enum case for CharacteristicKind.currentDoorState(_:), v28);
    unint64_t v30 = sub_100008520(v26, v4);
    char v32 = v31;
    char v33 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v33(v26, v28);
    if ((v32 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (v30 > 4) {
        uint64_t v34 = 0;
      }
      else {
        uint64_t v34 = qword_1000B72B8[v30];
      }
      uint64_t v70 = *(void *)(v0 + 384);
      uint64_t v71 = *(void *)(v0 + 368);
      uint64_t v72 = *(void *)(v0 + 344);
      *(void *)(v0 + 264) = &type metadata for Int;
      *(void *)(v0 + 240) = v34;
      v29(v70, enum case for CharacteristicKind.targetDoorState(_:), v71);
      uint64_t v73 = sub_100075164(v72, v70);
      uint64_t v74 = swift_task_alloc();
      *(void *)(v74 + 16) = v0 + 240;
      uint64_t v75 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v74, (unint64_t)v73);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      v33(v70, v71);
      sub_10002ACE4(v0 + 240);
      uint64_t v109 = v75;
    }
    goto LABEL_21;
  }
  if (v8 == enum case for ServiceKind.lightbulb(_:))
  {
    uint64_t v36 = *(void *)(v0 + 376);
    uint64_t v35 = *(void *)(v0 + 384);
    uint64_t v37 = *(void *)(v0 + 368);
    uint64_t v104 = v37;
    uint64_t v38 = *(void *)(v0 + 344);
    uint64_t v107 = *(int *)(v0 + 432);
    char v39 = sub_10001A910();
    *(void *)(v0 + 136) = &type metadata for Bool;
    *(unsigned char *)(v0 + 112) = (v39 & 1) == 0;
    char v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 104);
    v40(v35, enum case for CharacteristicKind.powerState(_:), v37);
    int64_t v41 = sub_100075164(v38, v35);
    uint64_t v42 = swift_task_alloc();
    *(void *)(v42 + 16) = v0 + 112;
    uint64_t v43 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v42, (unint64_t)v41);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    int64_t v44 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v44(v35, v104);
    sub_10002ACE4(v0 + 112);
    uint64_t v109 = v43;
    uint64_t v45 = enum case for CharacteristicKind.brightness(_:);
    uint64_t v46 = v40;
    v40(v35, enum case for CharacteristicKind.brightness(_:), v104);
    uint64_t v47 = sub_100008520(v35, *(void *)(v38 + v107));
    LOBYTE(v40) = v48;
    v44(v35, v104);
    if ((v40 & 1) == 0 && !v47 && (sub_10001A910() & 1) == 0)
    {
      uint64_t v49 = *(void *)(v0 + 384);
      uint64_t v50 = *(void *)(v0 + 368);
      uint64_t v51 = *(void *)(v0 + 344);
      *(void *)(v0 + 72) = &type metadata for Int;
      *(void *)(v0 + 48) = 100;
      v46(v49, v45, v50);
      uint64_t v52 = sub_100075164(v51, v49);
      uint64_t v53 = swift_task_alloc();
      *(void *)(v53 + 16) = v0 + 48;
      uint64_t v54 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v53, (unint64_t)v52);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      v44(v49, v50);
      sub_10002ACE4(v0 + 48);
      sub_100071764((unint64_t)v54);
    }
    goto LABEL_21;
  }
  if (v8 == enum case for ServiceKind.lockMechanism(_:))
  {
    uint64_t v56 = *(void *)(v0 + 376);
    uint64_t v55 = *(void *)(v0 + 384);
    uint64_t v57 = *(void *)(v0 + 368);
    uint64_t v58 = *(void (**)(uint64_t, void, uint64_t))(v56 + 104);
    v58(v55, enum case for CharacteristicKind.currentLockMechanismState(_:), v57);
    uint64_t v59 = sub_100008520(v55, v4);
    char v61 = v60;
    char v62 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v62(v55, v57);
    if (v61) {
      goto LABEL_21;
    }
    uint64_t v63 = v0 + 208;
    uint64_t v64 = *(void *)(v0 + 384);
    uint64_t v65 = *(void *)(v0 + 368);
    uint64_t v66 = *(void *)(v0 + 344);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 232) = &type metadata for Int;
    *(void *)(v0 + 208) = v59 == 0;
    v58(v64, enum case for CharacteristicKind.targetLockMechanismState(_:), v65);
    uint64_t v67 = sub_100075164(v66, v64);
    uint64_t v68 = swift_task_alloc();
    *(void *)(v68 + 16) = v0 + 208;
    uint64_t v24 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v68, (unint64_t)v67);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v69 = v64;
    goto LABEL_29;
  }
  if (v8 == enum case for ServiceKind.securitySystem(_:))
  {
    uint64_t v79 = *(void *)(v0 + 376);
    uint64_t v78 = *(void *)(v0 + 384);
    uint64_t v80 = *(void *)(v0 + 368);
    uint64_t v81 = *(void (**)(uint64_t, void, uint64_t))(v79 + 104);
    v81(v78, enum case for CharacteristicKind.currentSecuritySystemState(_:), v80);
    uint64_t v82 = sub_100008520(v78, v4);
    char v84 = v83;
    char v62 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
    v62(v78, v80);
    if (v84) {
      goto LABEL_21;
    }
    uint64_t v63 = v0 + 144;
    uint64_t v85 = *(void *)(v0 + 384);
    uint64_t v65 = *(void *)(v0 + 368);
    uint64_t v86 = *(void *)(v0 + 344);
    swift_bridgeObjectRelease();
    uint64_t v87 = 3;
    if (v82 == 3) {
      uint64_t v87 = 0;
    }
    *(void *)(v0 + 168) = &type metadata for Int;
    *(void *)(v0 + 144) = v87;
    v81(v85, enum case for CharacteristicKind.targetSecuritySystemState(_:), v65);
    char v88 = sub_100075164(v86, v85);
    uint64_t v89 = swift_task_alloc();
    *(void *)(v89 + 16) = v63;
    uint64_t v24 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v89, (unint64_t)v88);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v69 = v85;
LABEL_29:
    v62(v69, v65);
    uint64_t v25 = v63;
LABEL_6:
    sub_10002ACE4(v25);
    uint64_t v109 = v24;
    goto LABEL_21;
  }
  if (v8 == enum case for ServiceKind.window(_:) || v8 == enum case for ServiceKind.windowCovering(_:))
  {
LABEL_2:
    uint64_t v10 = *(void *)(v0 + 376);
    uint64_t v9 = *(void *)(v0 + 384);
    uint64_t v11 = *(void *)(v0 + 368);
    uint64_t v12 = *(void (**)(uint64_t, void, uint64_t))(v10 + 104);
    v12(v9, enum case for CharacteristicKind.currentPosition(_:), v11);
    uint64_t v13 = sub_100008520(v9, v4);
    char v15 = v14;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v16(v9, v11);
    if (v15) {
      goto LABEL_21;
    }
    uint64_t v17 = *(void *)(v0 + 384);
    uint64_t v18 = *(void *)(v0 + 360);
    uint64_t v19 = *(void *)(v0 + 368);
    uint64_t v20 = *(void *)(v0 + 344);
    swift_bridgeObjectRelease();
    sub_100007FDC(v20, v18);
    uint64_t v21 = 100;
    if (v13 > 0) {
      uint64_t v21 = 0;
    }
    *(void *)(v0 + 200) = &type metadata for Int;
    *(void *)(v0 + 176) = v21;
    v12(v17, enum case for CharacteristicKind.targetPosition(_:), v19);
    uint64_t v22 = sub_100075164(v18, v17);
    uint64_t v23 = swift_task_alloc();
    *(void *)(v23 + 16) = v0 + 176;
    uint64_t v24 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v23, (unint64_t)v22);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    v16(v17, v19);
    sub_100008040(v18);
    uint64_t v25 = v0 + 176;
    goto LABEL_6;
  }
  uint64_t v105 = *(void *)(v0 + 400);
  uint64_t v90 = *(void *)(v0 + 384);
  uint64_t v106 = *(void *)(v0 + 392);
  uint64_t v108 = *(void *)(v0 + 408);
  uint64_t v91 = *(void *)(v0 + 368);
  uint64_t v92 = *(void *)(v0 + 376);
  uint64_t v93 = *(void *)(v0 + 344);
  char v94 = sub_10001A910();
  *(void *)(v0 + 40) = &type metadata for Bool;
  *(unsigned char *)(v0 + 16) = (v94 & 1) == 0;
  unint64_t v103 = *(void (**)(uint64_t, void, uint64_t))(v92 + 104);
  v103(v90, enum case for CharacteristicKind.powerState(_:), v91);
  uint64_t v95 = sub_100075164(v93, v90);
  uint64_t v96 = swift_task_alloc();
  *(void *)(v96 + 16) = v0 + 16;
  unint64_t v97 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076640, v96, (unint64_t)v95);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v98 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
  v98(v90, v91);
  sub_10002ACE4(v0 + 16);
  sub_100071764((unint64_t)v97);
  char v99 = sub_10001A910();
  *(void *)(v0 + 104) = &type metadata for Bool;
  *(unsigned char *)(v0 + 80) = (v99 & 1) == 0;
  v103(v90, enum case for CharacteristicKind.active(_:), v91);
  uint64_t v100 = sub_100075164(v93, v90);
  uint64_t v101 = swift_task_alloc();
  *(void *)(v101 + 16) = v0 + 80;
  uint64_t v102 = sub_100070614((void (*)(uint64_t *__return_ptr, id *))sub_100076D1C, v101, (unint64_t)v100);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v98(v90, v91);
  sub_10002ACE4(v0 + 80);
  sub_100071764((unint64_t)v102);
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v108, v106);
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v76 = *(uint64_t (**)(void *))(v0 + 8);
  return v76(v109);
}

uint64_t sub_10007425C(uint64_t a1)
{
  *(void *)(v1 + 184) = a1;
  return _swift_task_switch(sub_10007427C, 0, 0);
}

uint64_t sub_10007427C()
{
  uint64_t v53 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = (unint64_t *)(v0 + 184);
  uint64_t v2 = sub_1000B3570();
  *(void *)(v0 + 192) = sub_100017618(v2, (uint64_t)qword_1000DCC18);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1000B3550();
  os_log_type_t v4 = sub_1000B42C0();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(void *)(v0 + 184);
  if (!v5)
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_23;
  }
  os_log_type_t log = v4;
  uint64_t v49 = (uint8_t *)swift_slowAlloc();
  uint64_t v51 = swift_slowAlloc();
  *(_DWORD *)uint64_t v49 = 136315138;
  uint64_t v52 = (uint64_t)_swiftEmptyArrayStorage;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000B46A0();
    uint64_t v7 = result;
    if (result) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_6:
      if (v7 < 1)
      {
        __break(1u);
        goto LABEL_47;
      }
      int64_t v44 = v3;
      uint64_t v9 = 0;
      uint64_t v10 = *v1 + 32;
      do
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v11 = (id)sub_1000B45E0();
        }
        else {
          id v11 = *(id *)(v10 + 8 * v9);
        }
        uint64_t v12 = v11;
        self;
        uint64_t v13 = (void *)swift_dynamicCastObjCClass();
        if (v13)
        {
          id v14 = [v13 characteristic];

          if (v14)
          {
            sub_1000B40E0();
            if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1000B4130();
            }
            sub_1000B4150();
            sub_1000B4120();
          }
        }
        else
        {
        }
        ++v9;
      }
      while (v7 != v9);
      swift_bridgeObjectRelease();
      char v15 = (uint64_t *)(v0 + 176);
      uint64_t v3 = v44;
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  char v15 = (uint64_t *)(v0 + 176);
LABEL_22:
  sub_100008148(0, &qword_1000D4FE8);
  uint64_t v16 = sub_1000B4110();
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  *char v15 = sub_10002A68C(v16, v18, &v51);
  sub_1000B4400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  _os_log_impl((void *)&_mh_execute_header, v3, log, "Writing characteristics: %s", v49, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_23:
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1000B3550();
  os_log_type_t v20 = sub_1000B42C0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v22 = *v1;
  if (v21)
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315138;
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1000B46A0();
      uint64_t v24 = result;
    }
    else
    {
      uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
    }
    os_log_t loga = v19;
    uint64_t v46 = v23;
    os_log_type_t v45 = v20;
    if (!v24)
    {
LABEL_41:
      swift_bridgeObjectRelease();
      uint64_t v39 = sub_1000B4110();
      unint64_t v41 = v40;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 168) = sub_10002A68C(v39, v41, &v52);
      sub_1000B4400();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v19 = loga;
      _os_log_impl((void *)&_mh_execute_header, loga, v45, "Executing actionSets: %s", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_42;
    }
    if (v24 >= 1)
    {
      uint64_t v25 = 0;
      unint64_t v26 = v22 & 0xC000000000000001;
      uint64_t v50 = *v1 + 32;
      uint64_t v27 = _swiftEmptyArrayStorage;
      do
      {
        if (v26) {
          id v28 = (id)sub_1000B45E0();
        }
        else {
          id v28 = *(id *)(v50 + 8 * v25);
        }
        uint64_t v29 = v28;
        self;
        unint64_t v30 = (void *)swift_dynamicCastObjCClass();
        if (v30)
        {
          id v31 = [v30 actionSet];
          id v32 = [v31 name];

          uint64_t v33 = sub_1000B4010();
          uint64_t v35 = v34;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v27 = sub_100075914(0, v27[2] + 1, 1, v27);
          }
          unint64_t v37 = v27[2];
          unint64_t v36 = v27[3];
          if (v37 >= v36 >> 1) {
            uint64_t v27 = sub_100075914((void *)(v36 > 1), v37 + 1, 1, v27);
          }
          v27[2] = v37 + 1;
          uint64_t v38 = &v27[2 * v37];
          v38[4] = v33;
          v38[5] = v35;
        }
        else
        {
        }
        ++v25;
      }
      while (v24 != v25);
      goto LABEL_41;
    }
LABEL_47:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease_n();
LABEL_42:

  *(void *)(v0 + 200) = *HomeWidget.shared.unsafeMutableAddressor();
  swift_retain();
  v55.value._rawValue = 0;
  HomeWidgetCore::RecommendedWidgetIdentity v56 = RecommendedWidgetIdentity.init(ids:)(v55);
  *(void *)(v0 + 208) = v56.uniqueIdentifier._object;
  *(void *)(v0 + 216) = v56.widgetKind._object;
  *(HomeWidgetCore::RecommendedWidgetIdentity *)(v0 + 120) = v56;
  uint64_t v42 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v42;
  unint64_t v43 = sub_10001FE98();
  *uint64_t v42 = v0;
  v42[1] = sub_100074968;
  return HomeWidget.synchronizeWithHomeKit<A>(configuration:)(v0 + 120, (uint64_t)&type metadata for RecommendedWidgetIdentity, v43);
}

uint64_t sub_100074968(uint64_t a1)
{
  *(void *)(*(void *)v1 + 232) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100074AC8, 0, 0);
}

uint64_t sub_100074AC8()
{
  uint64_t v12 = v0;
  uint64_t v1 = (void *)v0[29];
  if (v1)
  {
    id v2 = [v1 widgetManager];
    v0[30] = v2;
    sub_100008148(0, &qword_1000D66C0);
    Class isa = sub_1000B40F0().super.isa;
    v0[31] = isa;
    NSString v4 = sub_1000B4000();
    v0[32] = v4;
    v0[2] = v0;
    v0[3] = sub_100074D84;
    uint64_t v5 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_1000703DC;
    v0[13] = &unk_1000CFCD8;
    v0[14] = v5;
    [v2 performRequests:isa forKind:v4 completion:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    unint64_t v6 = sub_1000B3550();
    os_log_type_t v7 = sub_1000B42A0();
    if (os_log_type_enabled(v6, v7))
    {
      int v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)int v8 = 136315138;
      v0[19] = sub_10002A68C(0x3A5F286574697277, 0xE900000000000029, &v11);
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s unable to get shared HMHomeManager instance", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_100074D84()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 264) = v1;
  if (v1) {
    id v2 = sub_100074F90;
  }
  else {
    id v2 = sub_100074E94;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100074E94()
{
  id v2 = *(void **)(v0 + 248);
  uint64_t v1 = *(void **)(v0 + 256);

  uint64_t v3 = sub_1000B3550();
  os_log_type_t v4 = sub_1000B42C0();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(NSObject **)(v0 + 232);
  if (v5)
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Write request complete.", v7, 2u);
    swift_slowDealloc();
  }
  else
  {

    uint64_t v3 = v6;
  }

  int v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100074F90()
{
  uint64_t v1 = (void *)v0[32];
  uint64_t v3 = (void *)v0[30];
  id v2 = (void *)v0[31];
  swift_willThrow();

  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v4 = sub_1000B3550();
  os_log_type_t v5 = sub_1000B42A0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[20] = v8;
    sub_1000B4400();
    void *v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error on write: %@", v6, 0xCu);
    sub_100004210(&qword_1000D51D8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = (void *)v0[29];

  swift_willThrow();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void *sub_100075164(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for WidgetTileInfo() + 56);
  int v4 = *(unsigned __int8 *)(v3 + 8);
  if ((v4 - 2) >= 3)
  {
    unint64_t v6 = *(void **)v3;
    if (v4)
    {
      id v11 = v6;
      id v12 = [v11 services];
      sub_100008148(0, &qword_1000D5020);
      unint64_t v13 = sub_1000B4100();

      __chkstk_darwin(v14);
      void v16[2] = a2;
      os_log_type_t v5 = sub_100070474((void (*)(uint64_t *__return_ptr, id *))sub_1000766B0, (uint64_t)v16, v13);
      swift_bridgeObjectRelease();

      return v5;
    }
    id v7 = v6;
    uint64_t v8 = sub_1000B43C0();
    if (v8)
    {
      uint64_t v9 = v8;
      sub_100004210(&qword_1000D5190);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1000B52D0;
      *(void *)(v10 + 32) = v9;
      unint64_t v17 = (void *)v10;
      sub_1000B4120();
      os_log_type_t v5 = v17;

      return v5;
    }
  }
  return _swiftEmptyArrayStorage;
}

void sub_1000752E4(void **a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  int v4 = *a1;
  sub_10003C804(a2, a2[3]);
  id v5 = v4;
  uint64_t v6 = sub_1000B4820();
  id v7 = [self writeRequestWithCharacteristic:v5 value:v6];
  swift_unknownObjectRelease();

  *a3 = v7;
}

uint64_t sub_100075388(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753F0(a1, a2, a3, a4, &qword_1000D5270, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
}

uint64_t sub_1000753BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753F0(a1, a2, a3, a4, &qword_1000D5240, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_1000753F0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004210(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1000B4680();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100076AB4(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_100075670(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753F0(a1, a2, a3, a4, &qword_1000D5278, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
}

uint64_t sub_1000756A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100004210(&qword_1000D6700);
  uint64_t v10 = *(void *)(sub_100004210(&qword_1000D5528) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1000B4680();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100004210(&qword_1000D5528) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000762C4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_100075914(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004210(&qword_1000D5208);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000766F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100075A24(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004210(&qword_1000D6708);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000769A8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100075B34(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753F0(a1, a2, a3, a4, &qword_1000D5298, (uint64_t (*)(void))&type metadata accessor for EndpointPath, (uint64_t (*)(void))&type metadata accessor for EndpointPath);
}

uint64_t sub_100075B68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000753F0(a1, a2, a3, a4, &qword_1000D6720, (uint64_t (*)(void))&type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))&type metadata accessor for StaticMatterDevice);
}

void *sub_100075B9C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004210(&qword_1000D6628);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      _OWORD v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000768B0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100075CC4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100004210(&qword_1000D6718);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100076C10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100075DD4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1000B46A0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000B46A0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100076660(&qword_1000D66E0, &qword_1000D66D8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100004210(&qword_1000D66D8);
          uint64_t v12 = sub_10001F44C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008148(0, &qword_1000D4FE8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_100075FF4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1000B46A0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1000B46A0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100076660(&qword_1000D66F8, &qword_1000D66E8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100004210(&qword_1000D66E8);
          uint64_t v12 = sub_10001F4B8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008148(0, &qword_1000D66F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_100076214(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1000762C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100004210(&qword_1000D5528) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_100076420()
{
  sub_100008040(v0);
  return _swift_task_switch(sub_100076488, 0, 0);
}

uint64_t sub_100076488()
{
  uint64_t v8 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000B3570();
  sub_100017618(v1, (uint64_t)qword_1000DCC18);
  uint64_t v2 = sub_1000B3550();
  os_log_type_t v3 = sub_1000B42A0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v0 + 16) = sub_10002A68C(0xD000000000000022, 0x80000001000B9F30, &v7);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s Write attempted on a Native Matter device without client support.", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  char v5 = *(uint64_t (**)(void *))(v0 + 8);
  return v5(_swiftEmptyArrayStorage);
}

void sub_100076640(void **a1@<X0>, void *a2@<X8>)
{
  sub_1000752E4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_100076660(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000766B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B43C0();
  *a1 = result;
  return result;
}

uint64_t sub_1000766F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_1000767E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D5010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100076850(uint64_t a1)
{
  uint64_t v2 = sub_100004210(&qword_1000D5010);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000768B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_1000769A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100004210(&qword_1000D6710);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_100076AB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

uint64_t sub_100076C10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100004210(&qword_1000D6560);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1000B46E0();
  __break(1u);
  return result;
}

void sub_100076D1C(void **a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_100076D34(void *a1)
{
  uint64_t v2 = sub_1000B2FA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v6 setNumberStyle:3];
  [v6 setUsesSignificantDigits:0];
  sub_100033068();
  Class isa = sub_1000B4370(1).super.super.isa;
  [v6 setMultiplier:isa];

  sub_1000B2F90();
  Class v8 = sub_1000B2F70().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  [v6 setLocale:v8];

  id v9 = [v6 stringFromNumber:a1];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_1000B4010();
  }
  else
  {
    id v12 = [a1 description];
    uint64_t v13 = sub_1000B4010();
    uint64_t v15 = v14;

    v17[0] = v13;
    v17[1] = v15;
    v18._countAndFlagsBits = 37;
    v18._object = (void *)0xE100000000000000;
    sub_1000B4090(v18);

    return v17[0];
  }
  return v11;
}

void *sub_100076F24(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_100044118(*(void *)v15, v17);
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100077108(uint64_t a1, uint64_t a2)
{
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000B3E50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_1000441FC(v8, v9);
}

void *sub_100077224(void *a1, void *a2, int *a3)
{
  sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  char v9 = (void *)((char *)a2 + v7);
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100044118(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_1000773B8(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D5C80);
    sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000B3E50();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    char v9 = (void *)((char *)a2 + v7);
    sub_100017B5C((uint64_t)a1 + v7, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100044118(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_1000441FC(v16, v17);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

char *sub_100077580(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5C80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3E50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  char v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1000B3E20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  a1[v14] = a2[v14];
  return a1;
}

char *sub_100077714(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D5C80);
    uint64_t v6 = sub_100004210(&qword_1000D5C80);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    char v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100017B5C((uint64_t)&a1[v8], &qword_1000D4F88);
    uint64_t v11 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000B3E20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_1000441FC(v17, v18);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_1000778E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000778F4);
}

uint64_t sub_1000778F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5C88);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_100004210(&qword_1000D5EE0);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
      if (v14 > 1) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_100077A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100077A24);
}

uint64_t sub_100077A24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004210(&qword_1000D5C88);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100004210(&qword_1000D5EE0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for InFlightProgressView()
{
  uint64_t result = qword_1000D6780;
  if (!qword_1000D6780) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100077B8C()
{
  sub_100077CA0(319, (unint64_t *)&unk_1000D5CF8, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_100077CA0(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100077CA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000B3630();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100077CF4()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100077D10()
{
  return &protocol witness table for EmptyView;
}

unint64_t sub_100077D1C(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    unint64_t v14 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100044118(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_1000B3620();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[7];
    BOOL v20 = (void *)(a1 + v19);
    uint64_t v21 = (void *)(a2 + v19);
    sub_100004210(&qword_1000D4F98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_1000B3870();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      void *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v75 = a2;
    uint64_t v23 = a3[8];
    unint64_t v76 = a1;
    uint64_t v24 = a1 + v23;
    uint64_t v25 = a2 + v23;
    uint64_t v26 = sub_1000B2F60();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
    v27(v24, v25, v26);
    uint64_t v28 = type metadata accessor for AccessoryAndSceneEntity();
    v27(v24 + *(int *)(v28 + 20), v25 + *(int *)(v28 + 20), v26);
    uint64_t v29 = *(int *)(v28 + 24);
    uint64_t v30 = v24 + v29;
    uint64_t v31 = v25 + v29;
    v27(v30, v31, v26);
    id v32 = (int *)type metadata accessor for WidgetTileInfo();
    v27(v30 + v32[5], v31 + v32[5], v26);
    uint64_t v33 = v32[6];
    uint64_t v34 = (void *)(v30 + v33);
    uint64_t v35 = (void *)(v31 + v33);
    uint64_t v36 = v35[1];
    void *v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = v32[7];
    uint64_t v38 = (void *)(v30 + v37);
    uint64_t v39 = (void *)(v31 + v37);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    uint64_t v41 = v32[8];
    uint64_t v42 = (void *)(v30 + v41);
    unint64_t v43 = (void *)(v31 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = v32[9];
    uint64_t v46 = (void *)(v30 + v45);
    uint64_t v47 = (void *)(v31 + v45);
    uint64_t v48 = v47[1];
    *uint64_t v46 = *v47;
    v46[1] = v48;
    uint64_t v49 = v32[10];
    uint64_t v71 = v31 + v49;
    __dsta = (void *)(v30 + v49);
    uint64_t v50 = sub_1000B33D0();
    uint64_t v51 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51(__dsta, v71, v50);
    v51((void *)(v30 + v32[11]), v31 + v32[11], v50);
    *(void *)(v30 + v32[12]) = *(void *)(v31 + v32[12]);
    *(unsigned char *)(v30 + v32[13]) = *(unsigned char *)(v31 + v32[13]);
    uint64_t v52 = v32[14];
    uint64_t v53 = v30 + v52;
    uint64_t v54 = v31 + v52;
    Swift::OpaquePointer_optional v55 = *(void **)v54;
    LOBYTE(v54) = *(unsigned char *)(v54 + 8);
    *(void *)uint64_t v53 = v55;
    *(unsigned char *)(v53 + 8) = v54;
    *(void *)(v30 + v32[15]) = *(void *)(v31 + v32[15]);
    *(unsigned char *)(v30 + v32[16]) = *(unsigned char *)(v31 + v32[16]);
    uint64_t v56 = v32[17];
    uint64_t v72 = (const void *)(v31 + v56);
    __dst = (void *)(v30 + v56);
    uint64_t v57 = sub_1000B32E0();
    uint64_t v58 = *(void *)(v57 - 8);
    uint64_t v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48);
    swift_retain();
    id v60 = v55;
    swift_bridgeObjectRetain();
    if (v59(v72, 1, v57))
    {
      uint64_t v61 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v72, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v58 + 16))(__dst, v72, v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(__dst, 0, 1, v57);
    }
    *(unsigned char *)(v30 + v32[18]) = *(unsigned char *)(v31 + v32[18]);
    uint64_t v62 = v32[19];
    uint64_t v63 = v30 + v62;
    uint64_t v64 = v31 + v62;
    *(void *)uint64_t v63 = *(void *)v64;
    *(unsigned char *)(v63 + 8) = *(unsigned char *)(v64 + 8);
    uint64_t v65 = v32[20];
    uint64_t v66 = (void *)(v30 + v65);
    uint64_t v67 = (void *)(v31 + v65);
    uint64_t v68 = v67[1];
    *uint64_t v66 = *v67;
    v66[1] = v68;
    *(unsigned char *)(v30 + v32[21]) = *(unsigned char *)(v31 + v32[21]);
    uint64_t v69 = a3[10];
    unint64_t v14 = v76;
    *(_OWORD *)(v76 + a3[9]) = *(_OWORD *)(v75 + a3[9]);
    *(unsigned char *)(v76 + v69) = *(unsigned char *)(v75 + v69);
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_1000782D8(uint64_t a1, int *a2)
{
  sub_1000441FC(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3620();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  sub_100004210(&qword_1000D4F98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1000B3870();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[8];
  uint64_t v11 = sub_1000B2F60();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = type metadata accessor for AccessoryAndSceneEntity();
  v12(v10 + *(int *)(v13 + 20), v11);
  uint64_t v14 = v10 + *(int *)(v13 + 24);
  v12(v14, v11);
  uint64_t v15 = (int *)type metadata accessor for WidgetTileInfo();
  v12(v14 + v15[5], v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v14 + v15[10];
  uint64_t v17 = sub_1000B33D0();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  v18(v16, v17);
  v18(v14 + v15[11], v17);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v19 = v14 + v15[17];
  uint64_t v20 = sub_1000B32E0();
  uint64_t v21 = *(void *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007865C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3620();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_100004210(&qword_1000D4F98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1000B3870();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v72 = a2;
  uint64_t v20 = a3[8];
  uint64_t v73 = a1;
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1000B2F60();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  uint64_t v25 = type metadata accessor for AccessoryAndSceneEntity();
  v24(v21 + *(int *)(v25 + 20), v22 + *(int *)(v25 + 20), v23);
  uint64_t v26 = *(int *)(v25 + 24);
  uint64_t v27 = v21 + v26;
  uint64_t v28 = v22 + v26;
  v24(v27, v28, v23);
  uint64_t v29 = (int *)type metadata accessor for WidgetTileInfo();
  v24(v27 + v29[5], v28 + v29[5], v23);
  uint64_t v30 = v29[6];
  uint64_t v31 = (void *)(v27 + v30);
  id v32 = (void *)(v28 + v30);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = v29[7];
  uint64_t v35 = (void *)(v27 + v34);
  uint64_t v36 = (void *)(v28 + v34);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v29[8];
  uint64_t v39 = (void *)(v27 + v38);
  uint64_t v40 = (void *)(v28 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v29[9];
  unint64_t v43 = (void *)(v27 + v42);
  uint64_t v44 = (void *)(v28 + v42);
  uint64_t v45 = v44[1];
  *unint64_t v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = v29[10];
  uint64_t v68 = v28 + v46;
  __dsta = (void *)(v27 + v46);
  uint64_t v47 = sub_1000B33D0();
  uint64_t v48 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48(__dsta, v68, v47);
  v48((void *)(v27 + v29[11]), v28 + v29[11], v47);
  *(void *)(v27 + v29[12]) = *(void *)(v28 + v29[12]);
  *(unsigned char *)(v27 + v29[13]) = *(unsigned char *)(v28 + v29[13]);
  uint64_t v49 = v29[14];
  uint64_t v50 = v27 + v49;
  uint64_t v51 = v28 + v49;
  uint64_t v52 = *(void **)v51;
  LOBYTE(v51) = *(unsigned char *)(v51 + 8);
  *(void *)uint64_t v50 = v52;
  *(unsigned char *)(v50 + 8) = v51;
  *(void *)(v27 + v29[15]) = *(void *)(v28 + v29[15]);
  *(unsigned char *)(v27 + v29[16]) = *(unsigned char *)(v28 + v29[16]);
  uint64_t v53 = v29[17];
  uint64_t v69 = (const void *)(v28 + v53);
  __dst = (void *)(v27 + v53);
  uint64_t v54 = sub_1000B32E0();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48);
  swift_retain();
  id v57 = v52;
  swift_bridgeObjectRetain();
  if (v56(v69, 1, v54))
  {
    uint64_t v58 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v69, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 16))(__dst, v69, v54);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v54);
  }
  *(unsigned char *)(v27 + v29[18]) = *(unsigned char *)(v28 + v29[18]);
  uint64_t v59 = v29[19];
  uint64_t v60 = v27 + v59;
  uint64_t v61 = v28 + v59;
  *(void *)uint64_t v60 = *(void *)v61;
  *(unsigned char *)(v60 + 8) = *(unsigned char *)(v61 + 8);
  uint64_t v62 = v29[20];
  uint64_t v63 = (void *)(v27 + v62);
  uint64_t v64 = (void *)(v28 + v62);
  uint64_t v65 = v64[1];
  *uint64_t v63 = *v64;
  v63[1] = v65;
  *(unsigned char *)(v27 + v29[21]) = *(unsigned char *)(v28 + v29[21]);
  uint64_t v66 = a3[10];
  *(_OWORD *)(v73 + a3[9]) = *(_OWORD *)(v72 + a3[9]);
  *(unsigned char *)(v73 + v66) = *(unsigned char *)(v72 + v66);
  swift_bridgeObjectRetain();
  return v73;
}

uint64_t sub_100078BC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000441FC(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100017B5C(a1 + v10, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100017B5C(a1 + v14, &qword_1000D4F90);
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000B3620();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_100017B5C(a1 + v18, &qword_1000D4F98);
    sub_100004210(&qword_1000D4F98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1000B3870();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v75 = a3;
  uint64_t v76 = a2;
  uint64_t v22 = a3[8];
  uint64_t v77 = a1;
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1000B2F60();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  uint64_t v27 = type metadata accessor for AccessoryAndSceneEntity();
  v26(v23 + *(int *)(v27 + 20), v24 + *(int *)(v27 + 20), v25);
  uint64_t v28 = *(int *)(v27 + 24);
  uint64_t v29 = v23 + v28;
  uint64_t v30 = v24 + v28;
  v26(v29, v30, v25);
  uint64_t v31 = (int *)type metadata accessor for WidgetTileInfo();
  v26(v29 + v31[5], v30 + v31[5], v25);
  uint64_t v32 = v31[6];
  uint64_t v33 = (void *)(v29 + v32);
  uint64_t v34 = (void *)(v30 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = v31[7];
  uint64_t v36 = (void *)(v29 + v35);
  uint64_t v37 = (void *)(v30 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = v31[8];
  uint64_t v39 = (void *)(v29 + v38);
  uint64_t v40 = (void *)(v30 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v31[9];
  uint64_t v42 = (void *)(v29 + v41);
  unint64_t v43 = (void *)(v30 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v31[10];
  uint64_t v45 = v29 + v44;
  uint64_t v46 = v30 + v44;
  uint64_t v47 = sub_1000B33D0();
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 24);
  v48(v45, v46, v47);
  v48(v29 + v31[11], v30 + v31[11], v47);
  *(void *)(v29 + v31[12]) = *(void *)(v30 + v31[12]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v29 + v31[13]) = *(unsigned char *)(v30 + v31[13]);
  uint64_t v49 = v31[14];
  uint64_t v50 = v29 + v49;
  uint64_t v51 = v30 + v49;
  uint64_t v52 = *(void **)v51;
  LOBYTE(v51) = *(unsigned char *)(v51 + 8);
  uint64_t v53 = *(void **)v50;
  *(void *)uint64_t v50 = v52;
  *(unsigned char *)(v50 + 8) = v51;
  id v54 = v52;

  *(void *)(v29 + v31[15]) = *(void *)(v30 + v31[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + v31[16]) = *(unsigned char *)(v30 + v31[16]);
  uint64_t v55 = v31[17];
  uint64_t v56 = (void *)(v29 + v55);
  id v57 = (void *)(v30 + v55);
  uint64_t v58 = sub_1000B32E0();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v59 + 48);
  int v61 = v60(v56, 1, v58);
  int v62 = v60(v57, 1, v58);
  if (!v61)
  {
    if (!v62)
    {
      (*(void (**)(void *, void *, uint64_t))(v59 + 24))(v56, v57, v58);
      goto LABEL_18;
    }
    (*(void (**)(void *, uint64_t))(v59 + 8))(v56, v58);
    goto LABEL_17;
  }
  if (v62)
  {
LABEL_17:
    uint64_t v63 = sub_100004210(&qword_1000D5098);
    memcpy(v56, v57, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v59 + 16))(v56, v57, v58);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
LABEL_18:
  *(unsigned char *)(v29 + v31[18]) = *(unsigned char *)(v30 + v31[18]);
  uint64_t v64 = v31[19];
  uint64_t v65 = v29 + v64;
  uint64_t v66 = (uint64_t *)(v30 + v64);
  uint64_t v67 = *v66;
  *(unsigned char *)(v65 + 8) = *((unsigned char *)v66 + 8);
  *(void *)uint64_t v65 = v67;
  uint64_t v68 = v31[20];
  uint64_t v69 = (void *)(v29 + v68);
  uint64_t v70 = (void *)(v30 + v68);
  void *v69 = *v70;
  v69[1] = v70[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + v31[21]) = *(unsigned char *)(v30 + v31[21]);
  uint64_t v71 = v75[9];
  uint64_t v72 = (void *)(v77 + v71);
  uint64_t v73 = (void *)(v76 + v71);
  void *v72 = *v73;
  v72[1] = v73[1];
  *(unsigned char *)(v77 + v75[10]) = *(unsigned char *)(v76 + v75[10]);
  return v77;
}

uint64_t sub_10007924C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000B3E20();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3620();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_100004210(&qword_1000D4F98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_1000B3870();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1000B2F60();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  uint64_t v26 = type metadata accessor for AccessoryAndSceneEntity();
  v25(v22 + *(int *)(v26 + 20), v23 + *(int *)(v26 + 20), v24);
  uint64_t v27 = *(int *)(v26 + 24);
  uint64_t v28 = v22 + v27;
  uint64_t v29 = v23 + v27;
  v25(v28, v29, v24);
  uint64_t v30 = (int *)type metadata accessor for WidgetTileInfo();
  v25(v28 + v30[5], v29 + v30[5], v24);
  *(_OWORD *)(v28 + v30[6]) = *(_OWORD *)(v29 + v30[6]);
  *(_OWORD *)(v28 + v30[7]) = *(_OWORD *)(v29 + v30[7]);
  *(_OWORD *)(v28 + v30[8]) = *(_OWORD *)(v29 + v30[8]);
  *(_OWORD *)(v28 + v30[9]) = *(_OWORD *)(v29 + v30[9]);
  uint64_t v31 = v30[10];
  uint64_t v32 = v28 + v31;
  uint64_t v33 = v29 + v31;
  uint64_t v34 = sub_1000B33D0();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32);
  v35(v32, v33, v34);
  v35(v28 + v30[11], v29 + v30[11], v34);
  *(void *)(v28 + v30[12]) = *(void *)(v29 + v30[12]);
  *(unsigned char *)(v28 + v30[13]) = *(unsigned char *)(v29 + v30[13]);
  uint64_t v36 = v30[14];
  uint64_t v37 = v28 + v36;
  uint64_t v38 = v29 + v36;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  *(void *)(v28 + v30[15]) = *(void *)(v29 + v30[15]);
  *(unsigned char *)(v28 + v30[16]) = *(unsigned char *)(v29 + v30[16]);
  uint64_t v39 = v30[17];
  uint64_t v40 = (void *)(v28 + v39);
  uint64_t v41 = (const void *)(v29 + v39);
  uint64_t v42 = sub_1000B32E0();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = sub_100004210(&qword_1000D5098);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  *(unsigned char *)(v28 + v30[18]) = *(unsigned char *)(v29 + v30[18]);
  uint64_t v45 = v30[19];
  uint64_t v46 = v28 + v45;
  uint64_t v47 = v29 + v45;
  *(void *)uint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  *(_OWORD *)(v28 + v30[20]) = *(_OWORD *)(v29 + v30[20]);
  *(unsigned char *)(v28 + v30[21]) = *(unsigned char *)(v29 + v30[21]);
  uint64_t v48 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(a2 + v48);
  return a1;
}

uint64_t sub_100079768(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000441FC(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_100017B5C(a1 + v10, &qword_1000D4F88);
    uint64_t v13 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1000B3E20();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (char *)a2 + v15;
    sub_100017B5C(a1 + v15, &qword_1000D4F90);
    uint64_t v18 = sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1000B3620();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (char *)a2 + v20;
    sub_100017B5C(a1 + v20, &qword_1000D4F98);
    uint64_t v23 = sub_100004210(&qword_1000D4F98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = sub_1000B3870();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  char v84 = a3;
  uint64_t v85 = a2;
  uint64_t v25 = a3[8];
  uint64_t v86 = a1;
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t)a2 + v25;
  uint64_t v28 = sub_1000B2F60();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  uint64_t v30 = type metadata accessor for AccessoryAndSceneEntity();
  v29(v26 + *(int *)(v30 + 20), v27 + *(int *)(v30 + 20), v28);
  uint64_t v31 = *(int *)(v30 + 24);
  uint64_t v32 = v26 + v31;
  uint64_t v33 = v27 + v31;
  v29(v32, v33, v28);
  uint64_t v34 = (int *)type metadata accessor for WidgetTileInfo();
  v29(v32 + v34[5], v33 + v34[5], v28);
  uint64_t v35 = v34[6];
  uint64_t v36 = (void *)(v32 + v35);
  uint64_t v37 = (uint64_t *)(v33 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = v34[7];
  uint64_t v41 = (void *)(v32 + v40);
  uint64_t v42 = (uint64_t *)(v33 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = v34[8];
  uint64_t v46 = (void *)(v32 + v45);
  uint64_t v47 = (uint64_t *)(v33 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *uint64_t v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = v34[9];
  uint64_t v51 = (void *)(v32 + v50);
  uint64_t v52 = (uint64_t *)(v33 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = v34[10];
  uint64_t v56 = v32 + v55;
  uint64_t v57 = v33 + v55;
  uint64_t v58 = sub_1000B33D0();
  uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40);
  v59(v56, v57, v58);
  v59(v32 + v34[11], v33 + v34[11], v58);
  *(void *)(v32 + v34[12]) = *(void *)(v33 + v34[12]);
  swift_release();
  *(unsigned char *)(v32 + v34[13]) = *(unsigned char *)(v33 + v34[13]);
  uint64_t v60 = v34[14];
  uint64_t v61 = v32 + v60;
  int v62 = (uint64_t *)(v33 + v60);
  uint64_t v63 = *v62;
  LOBYTE(v62) = *((unsigned char *)v62 + 8);
  uint64_t v64 = *(void **)v61;
  *(void *)uint64_t v61 = v63;
  *(unsigned char *)(v61 + 8) = (_BYTE)v62;

  *(void *)(v32 + v34[15]) = *(void *)(v33 + v34[15]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + v34[16]) = *(unsigned char *)(v33 + v34[16]);
  uint64_t v65 = v34[17];
  uint64_t v66 = (void *)(v32 + v65);
  uint64_t v67 = (void *)(v33 + v65);
  uint64_t v68 = sub_1000B32E0();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v70 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v69 + 48);
  int v71 = v70(v66, 1, v68);
  int v72 = v70(v67, 1, v68);
  if (!v71)
  {
    if (!v72)
    {
      (*(void (**)(void *, void *, uint64_t))(v69 + 40))(v66, v67, v68);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v69 + 8))(v66, v68);
    goto LABEL_16;
  }
  if (v72)
  {
LABEL_16:
    uint64_t v73 = sub_100004210(&qword_1000D5098);
    memcpy(v66, v67, *(void *)(*(void *)(v73 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v69 + 32))(v66, v67, v68);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
LABEL_17:
  *(unsigned char *)(v32 + v34[18]) = *(unsigned char *)(v33 + v34[18]);
  uint64_t v74 = v34[19];
  uint64_t v75 = v32 + v74;
  uint64_t v76 = v33 + v74;
  *(void *)uint64_t v75 = *(void *)v76;
  *(unsigned char *)(v75 + 8) = *(unsigned char *)(v76 + 8);
  uint64_t v77 = v34[20];
  uint64_t v78 = (void *)(v32 + v77);
  uint64_t v79 = (uint64_t *)(v33 + v77);
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  *uint64_t v78 = v81;
  v78[1] = v80;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + v34[21]) = *(unsigned char *)(v33 + v34[21]);
  uint64_t v82 = v84[10];
  *(_OWORD *)(v86 + v84[9]) = *(_OWORD *)((char *)v85 + v84[9]);
  *(unsigned char *)(v86 + v82) = *((unsigned char *)v85 + v82);
  return v86;
}

uint64_t sub_100079D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100079DAC);
}

uint64_t sub_100079DAC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v8 = sub_100004210(&qword_1000D5EE0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_100004210(&qword_1000D5D58);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_11;
  }
  uint64_t v13 = sub_100004210(&qword_1000D67C0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[8];

  return v16(v18, a2, v17);
}

uint64_t sub_100079F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100079F88);
}

uint64_t sub_100079F88(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
    return result;
  }
  uint64_t v8 = sub_100004210(&qword_1000D5EE0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_100004210(&qword_1000D5D58);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = sub_100004210(&qword_1000D67C0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[8];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for SmallSquareTileView()
{
  uint64_t result = qword_1000D6820;
  if (!qword_1000D6820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007A1A0()
{
  sub_10007A354(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_10007A354(319, &qword_1000D5F50, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F)
    {
      sub_10007A354(319, (unint64_t *)&unk_1000D6830, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
      if (v2 <= 0x3F)
      {
        type metadata accessor for AccessoryAndSceneEntity();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10007A354(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000B3630();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10007A3A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007A3C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v71 = a1;
  uint64_t v3 = sub_100004210(&qword_1000D6878);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004210(&qword_1000D6880);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004210(&qword_1000D6888);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100004210(&qword_1000D6890);
  __chkstk_darwin(v67);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100004210(&qword_1000D6898);
  __chkstk_darwin(v68);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100004210(&qword_1000D68A0);
  __chkstk_darwin(v69);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = sub_1000B3890();
  *((void *)v5 + 1) = 0;
  unsigned char v5[16] = 1;
  uint64_t v18 = (uint64_t)&v5[*(int *)(sub_100004210(&qword_1000D68A8) + 44)];
  uint64_t v70 = v2;
  sub_10007A8F0(v2, v18);
  unsigned __int8 v19 = sub_1000B39E0();
  char v20 = sub_1000B3A10();
  sub_1000B3A10();
  if (sub_1000B3A10() != v19) {
    char v20 = sub_1000B3A10();
  }
  sub_1000B35D0();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_1000206A0((uint64_t)v5, (uint64_t)v8, &qword_1000D6878);
  uint64_t v29 = &v8[*(int *)(v6 + 36)];
  *uint64_t v29 = v20;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  sub_100017B5C((uint64_t)v5, &qword_1000D6878);
  unsigned __int8 v30 = sub_1000B39F0();
  char v31 = sub_1000B3A10();
  sub_1000B3A10();
  if (sub_1000B3A10() != v30) {
    char v31 = sub_1000B3A10();
  }
  sub_1000B35D0();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_1000206A0((uint64_t)v8, (uint64_t)v11, &qword_1000D6880);
  uint64_t v40 = &v11[*(int *)(v9 + 36)];
  *uint64_t v40 = v31;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_100017B5C((uint64_t)v8, &qword_1000D6880);
  unsigned __int8 v41 = sub_1000B3A00();
  char v42 = sub_1000B3A10();
  sub_1000B3A10();
  if (sub_1000B3A10() != v41) {
    char v42 = sub_1000B3A10();
  }
  sub_1000B35D0();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  sub_1000206A0((uint64_t)v11, (uint64_t)v13, &qword_1000D6888);
  uint64_t v51 = &v13[*(int *)(v67 + 36)];
  *uint64_t v51 = v42;
  *((void *)v51 + 1) = v44;
  *((void *)v51 + 2) = v46;
  *((void *)v51 + 3) = v48;
  *((void *)v51 + 4) = v50;
  v51[40] = 0;
  sub_100017B5C((uint64_t)v11, &qword_1000D6888);
  unsigned __int8 v52 = sub_1000B3A20();
  char v53 = sub_1000B3A10();
  sub_1000B3A10();
  if (sub_1000B3A10() != v52) {
    char v53 = sub_1000B3A10();
  }
  sub_1000B35D0();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  sub_1000206A0((uint64_t)v13, (uint64_t)v15, &qword_1000D6890);
  int v62 = &v15[*(int *)(v68 + 36)];
  char *v62 = v53;
  *((void *)v62 + 1) = v55;
  *((void *)v62 + 2) = v57;
  *((void *)v62 + 3) = v59;
  *((void *)v62 + 4) = v61;
  v62[40] = 0;
  sub_100017B5C((uint64_t)v13, &qword_1000D6890);
  type metadata accessor for SmallSquareTileView();
  sub_1000B3DA0();
  sub_1000B3660();
  sub_1000206A0((uint64_t)v15, (uint64_t)v17, &qword_1000D6898);
  uint64_t v63 = &v17[*(int *)(v69 + 36)];
  long long v64 = v73;
  *(_OWORD *)uint64_t v63 = v72;
  *((_OWORD *)v63 + 1) = v64;
  *((_OWORD *)v63 + 2) = v74;
  sub_100017B5C((uint64_t)v15, &qword_1000D6898);
  return sub_10006B62C((uint64_t)v17, v71, &qword_1000D68A0);
}

uint64_t sub_10007A8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_100004210(&qword_1000D68B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = sub_100004210(&qword_1000D68B8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = type metadata accessor for WidgetTileInfo();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SmallSquareTileView();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *(unsigned __int8 *)(a1 + *(int *)(v19 + 40));
  sub_10007D3CC(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SmallSquareTileView);
  if (v22 == 1)
  {
    uint64_t v23 = *(int *)(v18 + 32);
    uint64_t v24 = type metadata accessor for AccessoryAndSceneEntity();
    sub_10007D3CC((uint64_t)&v21[v23 + *(int *)(v24 + 24)], (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    sub_10007D434((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SmallSquareTileView);
    int v25 = v17[*(int *)(v15 + 52)];
    sub_10007D434((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  }
  else
  {
    sub_10007D434((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SmallSquareTileView);
    int v25 = 0;
  }
  *(void *)uint64_t v14 = sub_1000B3800();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v26 = sub_100004210(&qword_1000D68C0);
  sub_10007AC6C(a1, v25, (uint64_t)&v14[*(int *)(v26 + 44)]);
  *(void *)uint64_t v8 = sub_1000B3800();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 1;
  uint64_t v27 = sub_100004210(&qword_1000D68C8);
  sub_10007C5D4(a1, v25, (uint64_t)&v8[*(int *)(v27 + 44)]);
  sub_1000206A0((uint64_t)v14, (uint64_t)v12, &qword_1000D68B8);
  sub_1000206A0((uint64_t)v8, (uint64_t)v6, &qword_1000D68B0);
  uint64_t v28 = v33;
  sub_1000206A0((uint64_t)v12, v33, &qword_1000D68B8);
  uint64_t v29 = sub_100004210(&qword_1000D68D0);
  uint64_t v30 = v28 + *(int *)(v29 + 48);
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 0;
  sub_1000206A0((uint64_t)v6, v28 + *(int *)(v29 + 64), &qword_1000D68B0);
  sub_100017B5C((uint64_t)v8, &qword_1000D68B0);
  sub_100017B5C((uint64_t)v14, &qword_1000D68B8);
  sub_100017B5C((uint64_t)v6, &qword_1000D68B0);
  return sub_100017B5C((uint64_t)v12, &qword_1000D68B8);
}

uint64_t sub_10007AC6C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v216 = a2;
  uint64_t v214 = a3;
  uint64_t v203 = sub_100004210(&qword_1000D6900);
  __chkstk_darwin(v203);
  unint64_t v171 = (uint64_t *)((char *)&v167 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v168 = type metadata accessor for InFlightProgressView();
  uint64_t v5 = __chkstk_darwin(v168);
  uint64_t v169 = (uint64_t *)((char *)&v167 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v170 = (uint64_t)&v167 - v7;
  uint64_t v200 = sub_100004210(&qword_1000D6908);
  __chkstk_darwin(v200);
  uint64_t v202 = (uint64_t)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_100004210(&qword_1000D6910);
  __chkstk_darwin(v201);
  char v198 = (uint64_t *)((char *)&v167 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000B36A0();
  __chkstk_darwin(v10 - 8);
  unint64_t v187 = (char *)&v167 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_1000B3DC0();
  uint64_t v186 = *(void *)(v188 - 8);
  __chkstk_darwin(v188);
  uint64_t v185 = (char *)&v167 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = sub_100004210(&qword_1000D6918);
  __chkstk_darwin(v184);
  uint64_t v191 = (char *)&v167 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_100004210(&qword_1000D6920);
  __chkstk_darwin(v189);
  uint64_t v195 = (uint64_t)&v167 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_100004210(&qword_1000D6928);
  __chkstk_darwin(v192);
  uint64_t v194 = (uint64_t)&v167 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_100004210(&qword_1000D6930);
  uint64_t v16 = __chkstk_darwin(v193);
  uint64_t v196 = (uint64_t)&v167 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v190 = (uint64_t)&v167 - v19;
  __chkstk_darwin(v18);
  uint64_t v197 = (uint64_t)&v167 - v20;
  uint64_t v209 = type metadata accessor for WidgetTileInfo();
  __chkstk_darwin(v209);
  uint64_t v176 = (uint64_t)&v167 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SmallSquareTileView();
  __chkstk_darwin(v22);
  os_log_type_t v210 = (char *)&v167 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004210(&qword_1000D6938);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v220 = (uint64_t)&v167 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v221 = (uint64_t)&v167 - v27;
  uint64_t v28 = sub_1000B38A0();
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v199 = (char *)&v167 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v172 = (char *)&v167 - v31;
  uint64_t v204 = sub_100004210(&qword_1000D6940);
  __chkstk_darwin(v204);
  uint64_t v206 = (uint64_t)&v167 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = sub_1000B3620();
  uint64_t v207 = *(void *)(v211 - 8);
  uint64_t v33 = __chkstk_darwin(v211);
  char v174 = (char *)&v167 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v173 = (uint64_t)&v167 - v36;
  __chkstk_darwin(v35);
  uint64_t v183 = (char *)&v167 - v37;
  uint64_t v38 = sub_100004210(&qword_1000D6008);
  __chkstk_darwin(v38 - 8);
  uint64_t v217 = (char *)&v167 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_100004210(&qword_1000D6948);
  uint64_t v180 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v179 = (char *)&v167 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = sub_100004210(&qword_1000D6950);
  uint64_t v41 = __chkstk_darwin(v208);
  unint64_t v178 = (char *)&v167 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v182 = (char *)&v167 - v43;
  uint64_t v177 = sub_1000B3E20();
  uint64_t v44 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v46 = (char *)&v167 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = type metadata accessor for TileIconView();
  uint64_t v47 = __chkstk_darwin(v205);
  uint64_t v49 = (char *)&v167 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v51 = (char *)&v167 - v50;
  uint64_t v52 = sub_100004210(&qword_1000D6958);
  uint64_t v53 = __chkstk_darwin(v52 - 8);
  uint64_t v215 = (uint64_t)&v167 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  uint64_t v219 = (char *)&v167 - v55;
  uint64_t v56 = v22;
  uint64_t v57 = a1;
  uint64_t v58 = a1 + *(int *)(v22 + 32);
  uint64_t v175 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v59 = v58 + *(int *)(v175 + 24);
  sub_1000A3DC8();
  uint64_t v213 = v57;
  uint64_t v212 = v56;
  uint64_t v218 = v59;
  if (v61)
  {
    uint64_t v62 = v60;
    uint64_t v63 = v61;
    sub_10007F150((uint64_t)v46);
    uint64_t v64 = *(void *)v57;
    char v65 = *(unsigned char *)(v57 + 8);
    sub_100044118(*(void *)v57, v65);
    sub_10007E9FC(v64, v65);
    sub_1000441FC(v64, v65);
    uint64_t v199 = (char *)sub_100020704((uint64_t)v46);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v177);
    *(void *)&long long v222 = v62;
    *((void *)&v222 + 1) = v63;
    sub_100004BC8();
    uint64_t v66 = sub_1000B3B50();
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    uint64_t v177 = v69;
    LOBYTE(v62) = v71 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v172 = (char *)KeyPath;
    uint64_t v73 = swift_getKeyPath();
    sub_1000B3A80();
    uint64_t v74 = sub_1000B3A70();
    uint64_t v75 = (uint64_t)v217;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v217, 1, 1, v74);
    uint64_t v76 = sub_1000B3AB0();
    sub_100017B5C(v75, &qword_1000D6008);
    uint64_t v77 = swift_getKeyPath();
    *(void *)&long long v222 = v66;
    *((void *)&v222 + 1) = v68;
    LOBYTE(v223) = v62;
    *((void *)&v223 + 1) = v70;
    *(void *)&long long v224 = KeyPath;
    BYTE8(v224) = 1;
    uint64_t v225 = v73;
    uint64_t v226 = 1;
    char v227 = 0;
    uint64_t v228 = v77;
    uint64_t v229 = v76;
    uint64_t v230 = v199;
    swift_retain();
    sub_100004210(&qword_1000D6968);
    sub_10007D084();
    uint64_t v78 = v179;
    sub_1000B3BD0();
    sub_10005B938(v66, v68, v62);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v79 = swift_getKeyPath();
    uint64_t v80 = (int *)v209;
    uint64_t v81 = v207;
    if (*(unsigned char *)(v218 + *(int *)(v209 + 52))) {
      uint64_t v82 = (unsigned int *)&enum case for ColorScheme.light(_:);
    }
    else {
      uint64_t v82 = (unsigned int *)&enum case for ColorScheme.dark(_:);
    }
    uint64_t v83 = (uint64_t)v183;
    uint64_t v84 = v211;
    (*(void (**)(char *, void, uint64_t))(v207 + 104))(v183, *v82, v211);
    uint64_t v85 = v178;
    uint64_t v86 = (uint64_t *)&v178[*(int *)(v208 + 36)];
    uint64_t v87 = sub_100004210(&qword_1000D68F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))((char *)v86 + *(int *)(v87 + 28), v83, v84);
    uint64_t *v86 = v79;
    uint64_t v88 = v180;
    uint64_t v89 = v181;
    (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v85, v78, v181);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v83, v84);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v78, v89);
    uint64_t v90 = (uint64_t)v85;
    uint64_t v91 = (uint64_t)v182;
    sub_10006B62C(v90, (uint64_t)v182, &qword_1000D6950);
    sub_1000206A0(v91, v206, &qword_1000D6950);
    swift_storeEnumTagMultiPayload();
    sub_10007CFB0();
    sub_10007D304(&qword_1000D69E0, (void (*)(uint64_t))type metadata accessor for TileIconView);
    uint64_t v92 = (uint64_t)v219;
    sub_1000B3920();
    swift_release();
    sub_100017B5C(v91, &qword_1000D6950);
    uint64_t v93 = v213;
    uint64_t v94 = (uint64_t)v210;
    uint64_t v95 = v218;
  }
  else
  {
    uint64_t v182 = v49;
    uint64_t v183 = v51;
    uint64_t v96 = v206;
    uint64_t v97 = 32;
    if (*(unsigned char *)(v57 + *(int *)(v56 + 40))) {
      uint64_t v97 = 36;
    }
    uint64_t v80 = (int *)v209;
    unint64_t v98 = (uint64_t *)(v59 + *(int *)(v209 + v97));
    uint64_t v100 = *v98;
    uint64_t v99 = v98[1];
    swift_bridgeObjectRetain();
    uint64_t v101 = (uint64_t)v172;
    sub_1000B33C0();
    uint64_t v102 = (uint64_t)v199;
    sub_1000B33C0();
    if (*(unsigned char *)(v59 + v80[13]) == 1)
    {
      uint64_t v103 = *(void *)(v59 + v80[12]);
      swift_retain();
    }
    else
    {
      uint64_t v103 = sub_1000B3C70();
    }
    uint64_t v92 = (uint64_t)v219;
    uint64_t v104 = (uint64_t)v182;
    uint64_t v105 = sub_1000B3DB0();
    TileIconView.init(isActivated:iconSymbol:iconSymbolRenderingMode:iconSymbolActivatedRenderingMode:iconColor:imageContainerDimension:symbolFontSize:iconAlignment:)(v216 & 1, v100, v99, v101, v102, v103, v105, v106, v104, 15.0, 15.0);
    uint64_t v107 = (uint64_t)v183;
    sub_10007D364(v104, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for TileIconView);
    sub_10007D3CC(v107, v96, (uint64_t (*)(void))type metadata accessor for TileIconView);
    swift_storeEnumTagMultiPayload();
    sub_10007CFB0();
    sub_10007D304(&qword_1000D69E0, (void (*)(uint64_t))type metadata accessor for TileIconView);
    sub_1000B3920();
    sub_10007D434(v107, (uint64_t (*)(void))type metadata accessor for TileIconView);
    uint64_t v93 = v213;
    uint64_t v84 = v211;
    uint64_t v94 = (uint64_t)v210;
    uint64_t v95 = v218;
    uint64_t v81 = v207;
  }
  char v108 = *(unsigned char *)(v95 + v80[13]);
  sub_10007D3CC(v93, v94, (uint64_t (*)(void))type metadata accessor for SmallSquareTileView);
  if (v108)
  {
    uint64_t v109 = v94 + *(int *)(v212 + 32) + (uint64_t)*(int *)(v175 + 24);
    uint64_t v110 = v94;
    uint64_t v111 = v176;
    sub_10007D3CC(v109, v176, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    sub_10007D434(v110, (uint64_t (*)(void))type metadata accessor for SmallSquareTileView);
    LODWORD(v110) = *(unsigned __int8 *)(v111 + v80[16]);
    sub_10007D434(v111, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    if (v110 != 1)
    {
      sub_10001B2F8();
      uint64_t v112 = v214;
      if (v113)
      {
        sub_10001B2F8();
        char v115 = v114;
        uint64_t v116 = swift_getKeyPath();
        uint64_t v117 = (uint64_t)v169;
        uint64_t *v169 = v116;
        sub_100004210(&qword_1000D5C80);
        swift_storeEnumTagMultiPayload();
        uint64_t v118 = v168;
        uint64_t v119 = (uint64_t *)(v117 + *(int *)(v168 + 20));
        *uint64_t v119 = swift_getKeyPath();
        sub_100004210(&qword_1000D4F88);
        swift_storeEnumTagMultiPayload();
        uint64_t v120 = v117 + *(int *)(v118 + 24);
        *(void *)uint64_t v120 = swift_getKeyPath();
        *(unsigned char *)(v120 + 8) = 0;
        *(unsigned char *)(v117 + *(int *)(v118 + 28)) = v115 & 1;
        uint64_t v121 = v170;
        sub_10007D364(v117, v170, (uint64_t (*)(void))type metadata accessor for InFlightProgressView);
        sub_10007D3CC(v121, v117, (uint64_t (*)(void))type metadata accessor for InFlightProgressView);
        uint64_t v122 = (uint64_t)v171;
        *unint64_t v171 = 0;
        *(unsigned char *)(v122 + 8) = 1;
        uint64_t v123 = sub_100004210(&qword_1000D6A10);
        sub_10007D3CC(v117, v122 + *(int *)(v123 + 48), (uint64_t (*)(void))type metadata accessor for InFlightProgressView);
        sub_10007D434(v117, (uint64_t (*)(void))type metadata accessor for InFlightProgressView);
        sub_1000206A0(v122, v202, &qword_1000D6900);
        swift_storeEnumTagMultiPayload();
        sub_10001FF28(&qword_1000D69F0, &qword_1000D6910);
        sub_10001FF28(&qword_1000D69F8, &qword_1000D6900);
        uint64_t v124 = v220;
        sub_1000B3920();
        sub_100017B5C(v122, &qword_1000D6900);
        sub_10007D434(v121, (uint64_t (*)(void))type metadata accessor for InFlightProgressView);
        uint64_t v125 = sub_100004210(&qword_1000D6A00);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v124, 0, 1, v125);
        sub_10006B62C(v124, v221, &qword_1000D6938);
      }
      else
      {
        uint64_t v166 = sub_100004210(&qword_1000D6A00);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 56))(v221, 1, 1, v166);
      }
      goto LABEL_24;
    }
  }
  else
  {
    sub_10007D434(v94, (uint64_t (*)(void))type metadata accessor for SmallSquareTileView);
  }
  uint64_t v126 = v81;
  uint64_t v127 = sub_1000B3D10();
  double v128 = 1.0;
  int v129 = sub_1000B3960();
  uint64_t v112 = v214;
  if ((v216 & 1) == 0)
  {
    uint64_t v130 = v173;
    sub_10007EE5C(v173);
    uint64_t v131 = v112;
    uint64_t v132 = v174;
    (*(void (**)(char *, void, uint64_t))(v126 + 104))(v174, enum case for ColorScheme.light(_:), v84);
    char v133 = sub_1000B3610();
    uint64_t v134 = *(void (**)(char *, uint64_t))(v126 + 8);
    uint64_t v135 = v132;
    uint64_t v112 = v131;
    v134(v135, v84);
    v134((char *)v130, v84);
    if (v133) {
      double v128 = 0.7;
    }
    else {
      double v128 = 0.5;
    }
  }
  uint64_t v136 = *(void *)v93;
  char v137 = *(unsigned char *)(v93 + 8);
  sub_100044118(*(void *)v93, v137);
  char v138 = sub_10007E9FC(v136, v137);
  sub_1000441FC(v136, v137);
  uint64_t v139 = v186;
  uint64_t v140 = (unsigned int *)&enum case for BlendMode.normal(_:);
  if ((v138 & 1) == 0) {
    uint64_t v140 = (unsigned int *)&enum case for BlendMode.difference(_:);
  }
  uint64_t v141 = v185;
  uint64_t v142 = v188;
  (*(void (**)(char *, void, uint64_t))(v186 + 104))(v185, *v140, v188);
  uint64_t v143 = (uint64_t)v187;
  (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v187, v141, v142);
  uint64_t v144 = (uint64_t)v191;
  sub_10007D3CC(v143, (uint64_t)&v191[*(int *)(v184 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v144 = v127;
  *(_DWORD *)(v144 + 8) = v129;
  *(double *)(v144 + 16) = v128;
  swift_retain();
  sub_10007D434(v143, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v141, v142);
  swift_release();
  uint64_t v145 = sub_1000B3A70();
  uint64_t v146 = (uint64_t)v217;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v217, 1, 1, v145);
  uint64_t v147 = sub_1000B3AB0();
  sub_100017B5C(v146, &qword_1000D6008);
  uint64_t v148 = swift_getKeyPath();
  uint64_t v149 = v195;
  sub_1000206A0(v144, v195, &qword_1000D6918);
  unint64_t v150 = (uint64_t *)(v149 + *(int *)(v189 + 36));
  *unint64_t v150 = v148;
  v150[1] = v147;
  sub_100017B5C(v144, &qword_1000D6918);
  sub_1000B3DA0();
  sub_1000B3660();
  uint64_t v151 = v194;
  sub_1000206A0(v149, v194, &qword_1000D6920);
  unint64_t v152 = (_OWORD *)(v151 + *(int *)(v192 + 36));
  long long v153 = v223;
  *unint64_t v152 = v222;
  v152[1] = v153;
  v152[2] = v224;
  sub_100017B5C(v149, &qword_1000D6920);
  uint64_t v154 = v190;
  sub_1000206A0(v151, v190, &qword_1000D6928);
  *(_WORD *)(v154 + *(int *)(v193 + 36)) = 257;
  sub_100017B5C(v151, &qword_1000D6928);
  uint64_t v155 = v197;
  sub_10006B62C(v154, v197, &qword_1000D6930);
  uint64_t v156 = v196;
  sub_1000206A0(v155, v196, &qword_1000D6930);
  uint64_t v157 = (uint64_t)v198;
  void *v198 = 0;
  *(unsigned char *)(v157 + 8) = 1;
  uint64_t v158 = sub_100004210(&qword_1000D69E8);
  sub_1000206A0(v156, v157 + *(int *)(v158 + 48), &qword_1000D6930);
  sub_100017B5C(v156, &qword_1000D6930);
  sub_1000206A0(v157, v202, &qword_1000D6910);
  swift_storeEnumTagMultiPayload();
  sub_10001FF28(&qword_1000D69F0, &qword_1000D6910);
  sub_10001FF28(&qword_1000D69F8, &qword_1000D6900);
  uint64_t v159 = v220;
  sub_1000B3920();
  sub_100017B5C(v157, &qword_1000D6910);
  sub_100017B5C(v155, &qword_1000D6930);
  uint64_t v160 = sub_100004210(&qword_1000D6A00);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(v159, 0, 1, v160);
  sub_10006B62C(v159, v221, &qword_1000D6938);
  uint64_t v92 = (uint64_t)v219;
LABEL_24:
  uint64_t v161 = v215;
  sub_1000206A0(v92, v215, &qword_1000D6958);
  uint64_t v163 = v220;
  uint64_t v162 = v221;
  sub_1000206A0(v221, v220, &qword_1000D6938);
  sub_1000206A0(v161, v112, &qword_1000D6958);
  uint64_t v164 = sub_100004210(&qword_1000D6A08);
  sub_1000206A0(v163, v112 + *(int *)(v164 + 48), &qword_1000D6938);
  sub_100017B5C(v162, &qword_1000D6938);
  sub_100017B5C(v92, &qword_1000D6958);
  sub_100017B5C(v163, &qword_1000D6938);
  return sub_100017B5C(v161, &qword_1000D6958);
}

uint64_t sub_10007C5D4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v100 = a2;
  uint64_t v92 = a3;
  uint64_t v4 = sub_1000B3620();
  uint64_t v90 = *(void *)(v4 - 8);
  uint64_t v91 = v4;
  __chkstk_darwin(v4);
  uint64_t v89 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100004210(&qword_1000D5FE8);
  uint64_t v6 = __chkstk_darwin(v99);
  uint64_t v88 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v82 = (char *)&v76 - v8;
  uint64_t v9 = sub_1000B3680();
  unint64_t v98 = *(void **)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v97 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v96 = (char *)&v76 - v12;
  uint64_t v87 = sub_100004210(&qword_1000D5FF0);
  uint64_t v13 = __chkstk_darwin(v87);
  uint64_t v79 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v84 = (uint64_t)&v76 - v15;
  uint64_t v16 = sub_1000B3350();
  uint64_t v94 = *(char **)(v16 - 8);
  uint64_t v95 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for WidgetTileInfo();
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for TileNameAndStatusView();
  __chkstk_darwin(v77);
  uint64_t v24 = (uint64_t *)((char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v85 = sub_100004210(&qword_1000D68D8);
  uint64_t v83 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v80 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100004210(&qword_1000D68E0);
  uint64_t v26 = __chkstk_darwin(v76);
  uint64_t v86 = (uint64_t)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v78 = (char *)&v76 - v29;
  __chkstk_darwin(v28);
  uint64_t v81 = (uint64_t)&v76 - v30;
  uint64_t v31 = a1 + *(int *)(type metadata accessor for SmallSquareTileView() + 32);
  uint64_t v32 = v31 + *(int *)(type metadata accessor for AccessoryAndSceneEntity() + 24);
  uint64_t v33 = (uint64_t *)(v32 + *(int *)(v20 + 36));
  unint64_t v34 = v33[1];
  uint64_t v93 = *v33;
  sub_10007D3CC(v32, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000B3340();
  uint64_t v35 = sub_1000B3330();
  uint64_t v37 = v36;
  (*((void (**)(char *, uint64_t))v94 + 1))(v18, v95);
  sub_10007D434((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  uint64_t v38 = sub_1000B3AF0();
  sub_10001B2F8();
  uint64_t v95 = (uint64_t)v24;
  unint64_t v40 = v34;
  uint64_t v41 = v37;
  uint64_t v43 = v96;
  uint64_t v42 = v97;
  TileNameAndStatusView.init(roomName:name:statusString:font:tileStyle:isActivated:isInFlight:)(v93, v40, v35, v41, 0, 0, v38, 1, v24, v100, v39 & 1);
  uint64_t v44 = v98;
  uint64_t v45 = (void (*)(char *, void, uint64_t))v98[13];
  v45(v43, enum case for DynamicTypeSize.xSmall(_:), v9);
  v45(v42, enum case for DynamicTypeSize.xxxLarge(_:), v9);
  sub_10007D304(&qword_1000D6058, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t v46 = v9;
  uint64_t result = sub_1000B3F80();
  if (result)
  {
    uint64_t v48 = v99;
    uint64_t v49 = v82;
    uint64_t v50 = &v82[*(int *)(v99 + 48)];
    uint64_t v51 = (void (*)(char *, char *, uint64_t))v44[4];
    v51(v82, v43, v46);
    uint64_t v94 = v50;
    v51(v50, v42, v46);
    uint64_t v52 = *(int *)(v48 + 48);
    uint64_t v53 = v88;
    uint64_t v54 = &v88[v52];
    uint64_t v55 = (void (*)(char *, char *, uint64_t))v44[2];
    v55(v88, v49, v46);
    v55(v54, v50, v46);
    uint64_t v56 = (uint64_t)v79;
    v51(v79, v53, v46);
    uint64_t v57 = (void (*)(char *, uint64_t))v44[1];
    v57(v54, v46);
    uint64_t v58 = &v53[*(int *)(v99 + 48)];
    v51(v53, v49, v46);
    v51(v58, v94, v46);
    v51((char *)(v56 + *(int *)(v87 + 36)), v58, v46);
    v57(v53, v46);
    uint64_t v59 = v84;
    sub_10006B62C(v56, v84, &qword_1000D5FF0);
    sub_10007D304(&qword_1000D68E8, (void (*)(uint64_t))type metadata accessor for TileNameAndStatusView);
    sub_10001FF28(&qword_1000D6090, &qword_1000D5FF0);
    uint64_t v60 = v80;
    uint64_t v61 = v95;
    sub_1000B3BC0();
    sub_100017B5C(v59, &qword_1000D5FF0);
    sub_10007D434(v61, (uint64_t (*)(void))type metadata accessor for TileNameAndStatusView);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v64 = v89;
    uint64_t v63 = v90;
    char v65 = (unsigned int *)&enum case for ColorScheme.light(_:);
    if ((v100 & 1) == 0) {
      char v65 = (unsigned int *)&enum case for ColorScheme.dark(_:);
    }
    uint64_t v66 = v91;
    (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, *v65, v91);
    uint64_t v67 = (uint64_t)v78;
    uint64_t v68 = (uint64_t *)&v78[*(int *)(v76 + 36)];
    uint64_t v69 = sub_100004210(&qword_1000D68F0);
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))((char *)v68 + *(int *)(v69 + 28), v64, v66);
    *uint64_t v68 = KeyPath;
    uint64_t v70 = v83;
    uint64_t v71 = v85;
    (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v67, v60, v85);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v66);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v60, v71);
    uint64_t v72 = v81;
    sub_10006B62C(v67, v81, &qword_1000D68E0);
    uint64_t v73 = v86;
    sub_1000206A0(v72, v86, &qword_1000D68E0);
    uint64_t v74 = v92;
    sub_1000206A0(v73, v92, &qword_1000D68E0);
    uint64_t v75 = v74 + *(int *)(sub_100004210(&qword_1000D68F8) + 48);
    *(void *)uint64_t v75 = 0;
    *(unsigned char *)(v75 + 8) = 0;
    sub_100017B5C(v72, &qword_1000D68E0);
    return sub_100017B5C(v73, &qword_1000D68E0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10007CFB0()
{
  unint64_t result = qword_1000D6960;
  if (!qword_1000D6960)
  {
    sub_100004B80(&qword_1000D6950);
    sub_100004B80(&qword_1000D6968);
    sub_10007D084();
    swift_getOpaqueTypeConformance2();
    sub_10001FF28(&qword_1000D69D8, &qword_1000D68F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6960);
  }
  return result;
}

unint64_t sub_10007D084()
{
  unint64_t result = qword_1000D6970;
  if (!qword_1000D6970)
  {
    sub_100004B80(&qword_1000D6968);
    sub_10007D124();
    sub_10001FF28(&qword_1000D69C8, &qword_1000D69D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6970);
  }
  return result;
}

unint64_t sub_10007D124()
{
  unint64_t result = qword_1000D6978;
  if (!qword_1000D6978)
  {
    sub_100004B80(&qword_1000D6980);
    sub_10007D1C4();
    sub_10001FF28(&qword_1000D6048, &qword_1000D6050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6978);
  }
  return result;
}

unint64_t sub_10007D1C4()
{
  unint64_t result = qword_1000D6988;
  if (!qword_1000D6988)
  {
    sub_100004B80(&qword_1000D6990);
    sub_10007D264();
    sub_10001FF28(&qword_1000D69B8, &qword_1000D69C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6988);
  }
  return result;
}

unint64_t sub_10007D264()
{
  unint64_t result = qword_1000D6998;
  if (!qword_1000D6998)
  {
    sub_100004B80(&qword_1000D69A0);
    sub_10001FF28(&qword_1000D69A8, &qword_1000D69B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6998);
  }
  return result;
}

uint64_t sub_10007D304(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007D364(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007D3CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007D434(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10007D4A4()
{
  return sub_10007D518(&qword_1000D6A18, &qword_1000D68A0, (void (*)(void))sub_10007D4E8);
}

uint64_t sub_10007D4E8()
{
  return sub_10007D518(&qword_1000D6A20, &qword_1000D6898, (void (*)(void))sub_10007D594);
}

uint64_t sub_10007D518(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007D594()
{
  return sub_10007D518(&qword_1000D6A28, &qword_1000D6890, (void (*)(void))sub_10007D5C4);
}

uint64_t sub_10007D5C4()
{
  return sub_10007D518(&qword_1000D6A30, &qword_1000D6888, (void (*)(void))sub_10007D5F4);
}

unint64_t sub_10007D5F4()
{
  unint64_t result = qword_1000D6A38;
  if (!qword_1000D6A38)
  {
    sub_100004B80(&qword_1000D6880);
    sub_10001FF28(&qword_1000D6A40, &qword_1000D6878);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6A38);
  }
  return result;
}

uint64_t sub_10007D694()
{
  return sub_1000B36B0();
}

uint64_t sub_10007D6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007DA84(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t TileIconView.init(isActivated:iconSymbol:iconSymbolRenderingMode:iconSymbolActivatedRenderingMode:iconColor:imageContainerDimension:symbolFontSize:iconAlignment:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  *(void *)a9 = swift_getKeyPath();
  *(unsigned char *)(a9 + 8) = 0;
  uint64_t v18 = (int *)type metadata accessor for TileIconView();
  uint64_t v19 = (uint64_t *)(a9 + v18[5]);
  *uint64_t v19 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F88);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (uint64_t *)(a9 + v18[6]);
  uint64_t *v20 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F90);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a9 + v18[7]) = a1;
  uint64_t v21 = (void *)(a9 + v18[8]);
  void *v21 = a2;
  v21[1] = a3;
  uint64_t v22 = a9 + v18[9];
  uint64_t v23 = sub_1000B38A0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v25(v22, a4, v23);
  v25(a9 + v18[10], a5, v23);
  uint64_t v26 = sub_1000B3C70();
  if ((a1 & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v27 = a6;
  char v28 = sub_1000B3C30();
  swift_release();
  if (v28)
  {
    uint64_t v26 = sub_1000B3CB0();
LABEL_4:
    swift_release();
    uint64_t v27 = v26;
  }
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v29(a5, v23);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v29)(a4, v23);
  *(void *)(a9 + v18[11]) = v27;
  *(double *)(a9 + v18[12]) = a10;
  *(double *)(a9 + v18[13]) = a11;
  uint64_t v31 = (void *)(a9 + v18[14]);
  *uint64_t v31 = a7;
  v31[1] = a8;
  return result;
}

uint64_t sub_10007D914()
{
  sub_1000B3760();
  sub_10008095C();
  sub_1000B37E0();
  return v1;
}

uint64_t sub_10007D960@<X0>(unsigned char *a1@<X8>)
{
  sub_1000B3760();
  sub_10008095C();
  uint64_t result = sub_1000B37E0();
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for TileIconView()
{
  uint64_t result = qword_1000D6AC8;
  if (!qword_1000D6AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007DA10()
{
  return sub_1000B3780();
}

uint64_t sub_10007DA34()
{
  return sub_1000B3780();
}

uint64_t sub_10007DA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007DA84(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_10007DA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10007DB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007DA84(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_10007DB94()
{
  return sub_1000B36B0();
}

uint64_t sub_10007DBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007DA84(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t TileIconView.isActivated.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TileIconView() + 28));
}

uint64_t TileIconView.iconSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TileIconView() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TileIconView.iconSymbolRenderingMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TileIconView() + 36);
  uint64_t v4 = sub_1000B38A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TileIconView.iconSymbolActivatedRenderingMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TileIconView() + 40);
  uint64_t v4 = sub_1000B38A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TileIconView.iconColor.getter()
{
  type metadata accessor for TileIconView();

  return swift_retain();
}

uint64_t TileIconView.iconColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for TileIconView() + 44);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

double (*TileIconView.iconColor.modify())(void, double, double)
{
  return nullsub_1;
}

double TileIconView.imageContainerDimension.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TileIconView() + 48));
}

double TileIconView.symbolFontSize.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TileIconView() + 52));
}

uint64_t TileIconView.iconAlignment.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TileIconView() + 56));
}

uint64_t TileIconView.iconAlignment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = type metadata accessor for TileIconView();
  uint64_t v6 = (void *)(v2 + *(int *)(result + 56));
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

double (*TileIconView.iconAlignment.modify())(void, double, double)
{
  return nullsub_1;
}

uint64_t sub_10007DF00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000B3E20();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = type metadata accessor for TileIconView();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + *(int *)(v11 + 28)))
  {
    uint64_t v28 = a1;
    uint64_t v18 = *(void *)v1;
    char v19 = *(unsigned char *)(v1 + 8);
    sub_100044118(*(void *)v1, v19);
    char v20 = sub_10007E9FC(v18, v19);
    sub_1000441FC(v18, v19);
    sub_100080894(v1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TileIconView);
    if (v20)
    {
      sub_1000808FC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TileIconView);
      uint64_t v21 = v28;
    }
    else
    {
      sub_10007EE98(&qword_1000D4F88, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B9FE0, (uint64_t)v9);
      sub_1000B3E10();
      char v22 = sub_1000B3DE0();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
      v23(v7, v3);
      v23(v9, v3);
      sub_1000808FC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TileIconView);
      uint64_t v21 = v28;
      if ((v22 & 1) == 0)
      {
        uint64_t v24 = (unsigned int *)&enum case for BlendMode.difference(_:);
        goto LABEL_10;
      }
    }
    uint64_t v24 = (unsigned int *)&enum case for BlendMode.normal(_:);
LABEL_10:
    uint64_t v25 = *v24;
    uint64_t v26 = sub_1000B3DC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v21, v25, v26);
  }
  uint64_t v14 = enum case for BlendMode.normal(_:);
  uint64_t v15 = sub_1000B3DC0();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(a1, v14, v15);
}

uint64_t TileIconView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t v3 = sub_100004210(&qword_1000D6008);
  __chkstk_darwin(v3 - 8);
  uint64_t v64 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000B36A0();
  __chkstk_darwin(v5 - 8);
  uint64_t v63 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000B3DC0();
  uint64_t v60 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v53 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000B3620();
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v8 = __chkstk_darwin(v52);
  uint64_t v50 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = sub_100004210(&qword_1000D6A48);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100004210(&qword_1000D6A50);
  __chkstk_darwin(v54);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100004210(&qword_1000D6A58);
  __chkstk_darwin(v55);
  uint64_t v61 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100004210(&qword_1000D6A60);
  __chkstk_darwin(v58);
  uint64_t v59 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100004210(&qword_1000D6A68);
  __chkstk_darwin(v57);
  uint64_t v56 = (uint64_t)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TileIconView();
  swift_bridgeObjectRetain();
  sub_1000B3D20();
  uint64_t v21 = *(int *)(v20 + 28);
  char v22 = *(unsigned char *)(v2 + v21);
  uint64_t v23 = sub_1000B38A0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = 40;
  if ((v22 & 1) == 0) {
    uint64_t v25 = 36;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v14, v2 + *(int *)(v20 + v25), v23);
  sub_1000B38A0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v14, 0, 1, v23);
  uint64_t v26 = sub_1000B3D30();
  swift_release();
  sub_100017B5C((uint64_t)v14, &qword_1000D6A48);
  uint64_t v27 = *(void *)(v2 + *(int *)(v20 + 44));
  if (*(unsigned char *)(v2 + v21))
  {
    swift_retain();
    double v33 = 1.0;
  }
  else
  {
    uint64_t v49 = v2;
    swift_retain();
    sub_10007EE98(&qword_1000D4F90, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v11);
    uint64_t v28 = v51;
    uint64_t v29 = v50;
    uint64_t v30 = v52;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v50, enum case for ColorScheme.light(_:), v52);
    char v31 = sub_1000B3610();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v28 + 8);
    v32(v29, v30);
    v32(v11, v30);
    if (v31) {
      double v33 = 0.7;
    }
    else {
      double v33 = 0.5;
    }
  }
  uint64_t v34 = v53;
  sub_10007DF00(v53);
  uint64_t v35 = v60;
  uint64_t v37 = v62;
  uint64_t v36 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v63, v34, v62);
  sub_100080894(v36, (uint64_t)&v16[*(int *)(v54 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v27;
  *((double *)v16 + 2) = v33;
  swift_retain();
  swift_retain();
  sub_1000808FC(v36, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v37);
  swift_release();
  swift_release();
  uint64_t v38 = sub_1000B3A70();
  uint64_t v39 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v64, 1, 1, v38);
  uint64_t v40 = sub_1000B3AB0();
  sub_100017B5C(v39, &qword_1000D6008);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = v61;
  sub_1000206A0((uint64_t)v16, v61, &qword_1000D6A50);
  uint64_t v43 = (uint64_t *)(v42 + *(int *)(v55 + 36));
  *uint64_t v43 = KeyPath;
  v43[1] = v40;
  sub_100017B5C((uint64_t)v16, &qword_1000D6A50);
  sub_1000B3660();
  uint64_t v44 = v59;
  sub_1000206A0(v42, v59, &qword_1000D6A58);
  uint64_t v45 = (_OWORD *)(v44 + *(int *)(v58 + 36));
  long long v46 = v67;
  *uint64_t v45 = v66;
  v45[1] = v46;
  v45[2] = v68;
  sub_100017B5C(v42, &qword_1000D6A58);
  uint64_t v47 = v56;
  sub_1000206A0(v44, v56, &qword_1000D6A60);
  *(_WORD *)(v47 + *(int *)(v57 + 36)) = 257;
  sub_100017B5C(v44, &qword_1000D6A60);
  return sub_10007F270(v47, v65);
}

uint64_t sub_10007E9FC(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1000B37D0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1000B42B0();
  uint64_t v9 = sub_1000B39C0();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_10002A68C(1819242306, 0xE400000000000000, &v14);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000B37C0();
  swift_getAtKeyPath();
  sub_1000441FC(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

double sub_10007EC00()
{
  uint64_t v1 = sub_1000B37D0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1) {
    return *(double *)v0;
  }
  swift_retain();
  os_log_type_t v6 = sub_1000B42B0();
  uint64_t v7 = sub_1000B39C0();
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v10[0] = v9 + 4;
    v10[1] = sub_10002A68C(0x65736E4965676445, 0xEA00000000007374, &v11);
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000B37C0();
  swift_getAtKeyPath();
  sub_10008085C((uint64_t)v0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return *(double *)&v11;
}

uint64_t sub_10007EE20@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE98(&qword_1000D5C80, (uint64_t (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_10007EE5C@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE98(&qword_1000D4F90, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_10007EE98@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_1000B37D0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004210(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000206A0(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_1000B42B0();
    uint64_t v21 = sub_1000B39C0();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_10002A68C(v27, v25, &v29);
      sub_1000B4400();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1000B37C0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_10007F150@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE98(&qword_1000D4F88, (uint64_t (*)(void))&type metadata accessor for WidgetRenderingMode, 0xD000000000000013, 0x80000001000B9FE0, a1);
}

uint64_t sub_10007F188@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE98(&qword_1000D4F98, (uint64_t (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x80000001000BA000, a1);
}

uint64_t sub_10007F1C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B3740();
  *a1 = result;
  return result;
}

uint64_t sub_10007F1EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000B3740();
  *a1 = result;
  return result;
}

uint64_t sub_10007F218()
{
  return sub_1000B3750();
}

uint64_t sub_10007F244()
{
  return sub_1000B3750();
}

uint64_t sub_10007F270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004210(&qword_1000D6A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007F2D8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t initializeBufferWithCopyOfBuffer for TileIconView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100044118(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    os_log_type_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *os_log_type_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000B3620();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[8];
    *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
    uint64_t v19 = (void *)(a1 + v18);
    os_log_type_t v20 = (void *)(a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = a3[9];
    uint64_t v23 = a1 + v22;
    uint64_t v24 = a2 + v22;
    uint64_t v25 = sub_1000B38A0();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    v26(a1 + a3[10], a2 + a3[10], v25);
    uint64_t v27 = a3[12];
    *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
    *(void *)(a1 + v27) = *(void *)(a2 + v27);
    uint64_t v28 = a3[14];
    *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
    *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for TileIconView(uint64_t a1, int *a2)
{
  sub_1000441FC(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3620();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = sub_1000B38A0();
  os_log_type_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + a2[10], v9);

  return swift_release();
}

uint64_t initializeWithCopy for TileIconView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  os_log_type_t v10 = (void *)(a2 + v8);
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3620();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1000B38A0();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  v24(a1 + a3[10], a2 + a3[10], v23);
  uint64_t v25 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  uint64_t v26 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TileIconView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100044118(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000441FC(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100017B5C(a1 + v10, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100017B5C(a1 + v14, &qword_1000D4F90);
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000B3620();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1000B38A0();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24);
  v25(v22, v23, v24);
  v25(a1 + a3[10], a2 + a3[10], v24);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  uint64_t v26 = a3[14];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  return a1;
}

uint64_t initializeWithTake for TileIconView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000B3E20();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3620();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1000B38A0();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  v21(a1 + a3[10], a2 + a3[10], v20);
  uint64_t v22 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v23 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for TileIconView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000441FC(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_100017B5C(a1 + v10, &qword_1000D4F88);
    uint64_t v13 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1000B3E20();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (char *)a2 + v15;
    sub_100017B5C(a1 + v15, &qword_1000D4F90);
    uint64_t v18 = sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1000B3620();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v20 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t)a2 + v25;
  uint64_t v28 = sub_1000B38A0();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  v29(a1 + a3[10], (uint64_t)a2 + a3[10], v28);
  *(void *)(a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  swift_release();
  uint64_t v30 = a3[13];
  *(void *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  *(void *)(a1 + v30) = *(uint64_t *)((char *)a2 + v30);
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TileIconView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000800D4);
}

uint64_t sub_1000800D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5EE0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_100004210(&qword_1000D5D58);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v13 = *(void *)(a1 + a3[8] + 8);
    if (v13 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = sub_1000B38A0();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[9];
    return v15(v17, a2, v16);
  }
}

uint64_t storeEnumTagSinglePayload for TileIconView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100080270);
}

uint64_t sub_100080270(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004210(&qword_1000D5EE0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_5:
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  uint64_t result = sub_100004210(&qword_1000D5D58);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[8] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v14 = sub_1000B38A0();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a4[9];
    return v15(v17, a2, a2, v16);
  }
  return result;
}

void sub_1000803F8()
{
  sub_10008057C(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_10008057C(319, &qword_1000D5F50, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F)
    {
      sub_1000B38A0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10008057C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000B3630();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000805D0()
{
  return sub_100080740(&qword_1000D6B28, &qword_1000D6A68, (void (*)(void))sub_100080614);
}

uint64_t sub_100080614()
{
  return sub_100080740(&qword_1000D6B30, &qword_1000D6A60, (void (*)(void))sub_100080644);
}

unint64_t sub_100080644()
{
  unint64_t result = qword_1000D6B38;
  if (!qword_1000D6B38)
  {
    sub_100004B80(&qword_1000D6A58);
    sub_100080740(&qword_1000D6B40, &qword_1000D6A50, (void (*)(void))sub_100080710);
    sub_10001FF28(&qword_1000D6048, &qword_1000D6050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B38);
  }
  return result;
}

uint64_t sub_100080710()
{
  return sub_100080740(&qword_1000D6B48, &qword_1000D6B50, (void (*)(void))sub_1000807BC);
}

uint64_t sub_100080740(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000807BC()
{
  unint64_t result = qword_1000D6B58;
  if (!qword_1000D6B58)
  {
    sub_100004B80(&qword_1000D6B60);
    sub_10001FF28(&qword_1000D69C8, &qword_1000D69D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B58);
  }
  return result;
}

uint64_t sub_10008085C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100080894(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000808FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10008095C()
{
  unint64_t result = qword_1000D6B68;
  if (!qword_1000D6B68)
  {
    sub_1000B3760();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B68);
  }
  return result;
}

void *sub_1000809B4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)v12;
    char v14 = v12[8];
    sub_100044118(*(void *)v12, v14);
    *(void *)uint64_t v11 = v13;
    v11[8] = v14;
    uint64_t v118 = a1;
    uint64_t v119 = a3;
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v120 = a2;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1000B2F60();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    uint64_t v20 = type metadata accessor for AccessoryAndSceneEntity();
    v19(&v16[*(int *)(v20 + 20)], &v17[*(int *)(v20 + 20)], v18);
    uint64_t v21 = *(int *)(v20 + 24);
    uint64_t v22 = &v16[v21];
    uint64_t v23 = &v17[v21];
    v19(&v16[v21], &v17[v21], v18);
    uint64_t v24 = (int *)type metadata accessor for WidgetTileInfo();
    uint64_t v114 = v18;
    uint64_t v117 = v19;
    v19(&v22[v24[5]], &v23[v24[5]], v18);
    uint64_t v25 = v24[6];
    uint64_t v26 = &v22[v25];
    uint64_t v27 = &v23[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v24[7];
    uint64_t v30 = &v22[v29];
    char v31 = &v23[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = v24[8];
    uint64_t v34 = &v22[v33];
    uint64_t v35 = &v23[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v24[9];
    uint64_t v38 = &v22[v37];
    uint64_t v39 = &v23[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    uint64_t v41 = v24[10];
    char v115 = &v22[v41];
    uint64_t v112 = &v23[v41];
    uint64_t v42 = sub_1000B33D0();
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43(v115, v112, v42);
    uint64_t v116 = v42;
    char v113 = v43;
    v43(&v22[v24[11]], &v23[v24[11]], v42);
    *(void *)&v22[v24[12]] = *(void *)&v23[v24[12]];
    v22[v24[13]] = v23[v24[13]];
    uint64_t v44 = v24[14];
    uint64_t v45 = &v22[v44];
    long long v46 = &v23[v44];
    uint64_t v47 = *(void **)v46;
    LOBYTE(v46) = v46[8];
    *(void *)uint64_t v45 = v47;
    v45[8] = (char)v46;
    *(void *)&v22[v24[15]] = *(void *)&v23[v24[15]];
    v22[v24[16]] = v23[v24[16]];
    uint64_t v48 = v24[17];
    __dst = &v22[v48];
    uint64_t v49 = &v23[v48];
    uint64_t v50 = sub_1000B32E0();
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    uint64_t v53 = v50;
    swift_retain();
    id v54 = v47;
    swift_bridgeObjectRetain();
    uint64_t v111 = v52;
    uint64_t v109 = v51;
    if (v52(v49, 1, v53))
    {
      uint64_t v55 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v49, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(__dst, v49, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v53);
    }
    uint64_t v56 = v53;
    v22[v24[18]] = v23[v24[18]];
    uint64_t v57 = v24[19];
    uint64_t v58 = &v22[v57];
    uint64_t v59 = &v23[v57];
    *(void *)uint64_t v58 = *(void *)v59;
    v58[8] = v59[8];
    uint64_t v60 = v24[20];
    uint64_t v61 = &v22[v60];
    uint64_t v62 = &v23[v60];
    uint64_t v63 = *((void *)v62 + 1);
    *(void *)uint64_t v61 = *(void *)v62;
    *((void *)v61 + 1) = v63;
    v22[v24[21]] = v23[v24[21]];
    uint64_t v9 = v118;
    uint64_t v64 = v119[7];
    uint64_t v65 = (char *)v118 + v64;
    long long v66 = (char *)v120 + v64;
    swift_bridgeObjectRetain();
    v117(v65, v66, v114);
    v117(&v65[v24[5]], &v66[v24[5]], v114);
    uint64_t v67 = v24[6];
    long long v68 = &v65[v67];
    uint64_t v69 = &v66[v67];
    uint64_t v70 = *((void *)v69 + 1);
    *(void *)long long v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v24[7];
    uint64_t v72 = &v65[v71];
    uint64_t v73 = &v66[v71];
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = v24[8];
    uint64_t v76 = &v65[v75];
    uint64_t v77 = &v66[v75];
    uint64_t v78 = *((void *)v77 + 1);
    *(void *)uint64_t v76 = *(void *)v77;
    *((void *)v76 + 1) = v78;
    uint64_t v79 = v24[9];
    uint64_t v80 = &v65[v79];
    uint64_t v81 = &v66[v79];
    uint64_t v82 = *((void *)v81 + 1);
    *(void *)uint64_t v80 = *(void *)v81;
    *((void *)v80 + 1) = v82;
    uint64_t v83 = v24[10];
    uint64_t v84 = &v65[v83];
    uint64_t v85 = &v66[v83];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v113(v84, v85, v116);
    v113(&v65[v24[11]], &v66[v24[11]], v116);
    *(void *)&v65[v24[12]] = *(void *)&v66[v24[12]];
    v65[v24[13]] = v66[v24[13]];
    uint64_t v86 = v24[14];
    uint64_t v87 = &v65[v86];
    uint64_t v88 = &v66[v86];
    uint64_t v89 = *(void **)v88;
    LOBYTE(v88) = v88[8];
    *(void *)uint64_t v87 = v89;
    v87[8] = (char)v88;
    *(void *)&v65[v24[15]] = *(void *)&v66[v24[15]];
    v65[v24[16]] = v66[v24[16]];
    uint64_t v90 = v24[17];
    uint64_t v91 = &v65[v90];
    uint64_t v92 = &v66[v90];
    swift_retain();
    id v93 = v89;
    swift_bridgeObjectRetain();
    if (v111(v92, 1, v56))
    {
      uint64_t v94 = sub_100004210(&qword_1000D5098);
      memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v91, v92, v56);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v91, 0, 1, v56);
    }
    v65[v24[18]] = v66[v24[18]];
    uint64_t v95 = v24[19];
    uint64_t v96 = &v65[v95];
    uint64_t v97 = &v66[v95];
    *(void *)uint64_t v96 = *(void *)v97;
    v96[8] = v97[8];
    uint64_t v98 = v24[20];
    uint64_t v99 = &v65[v98];
    int v100 = &v66[v98];
    uint64_t v101 = *((void *)v100 + 1);
    *(void *)uint64_t v99 = *(void *)v100;
    *((void *)v99 + 1) = v101;
    v65[v24[21]] = v66[v24[21]];
    uint64_t v102 = v119[9];
    *((unsigned char *)v118 + v119[8]) = *((unsigned char *)v120 + v119[8]);
    *((unsigned char *)v118 + v102) = *((unsigned char *)v120 + v102);
    uint64_t v103 = v119[10];
    uint64_t v104 = v119[11];
    uint64_t v105 = (void *)((char *)v118 + v103);
    uint64_t v106 = (void *)((char *)v120 + v103);
    uint64_t v107 = v106[1];
    *uint64_t v105 = *v106;
    v105[1] = v107;
    *(void *)((char *)v118 + v104) = *(void *)((char *)v120 + v104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v9;
}

uint64_t sub_1000810F4(uint64_t a1, int *a2)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_1000441FC(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = type metadata accessor for AccessoryAndSceneEntity();
  v7(v5 + *(int *)(v8 + 20), v6);
  uint64_t v9 = v5 + *(int *)(v8 + 24);
  v7(v9, v6);
  uint64_t v10 = (int *)type metadata accessor for WidgetTileInfo();
  v7(v9 + v10[5], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v9 + v10[10];
  uint64_t v12 = sub_1000B33D0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v9 + v10[11], v12);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v20 = a1;
  uint64_t v14 = v9 + v10[17];
  uint64_t v21 = sub_1000B32E0();
  uint64_t v18 = *(void *)(v21 - 8);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t))(v18 + 48);
  if (!v19(v14, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v14, v21);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v20 + a2[7];
  v7(v15, v6);
  v7(v15 + v10[5], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13(v15 + v10[10], v12);
  v13(v15 + v10[11], v12);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v16 = v15 + v10[17];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v19)(v16, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v21);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_100081508(void *a1, void *a2, int *a3)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  sub_100044118(*(void *)v8, v10);
  *(void *)uint64_t v7 = v9;
  v7[8] = v10;
  uint64_t v11 = a3[6];
  char v113 = a1;
  uint64_t v114 = a2;
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1000B2F60();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  uint64_t v16 = type metadata accessor for AccessoryAndSceneEntity();
  v15(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v14);
  uint64_t v17 = *(int *)(v16 + 24);
  uint64_t v18 = &v12[v17];
  uint64_t v19 = &v13[v17];
  v15(&v12[v17], &v13[v17], v14);
  uint64_t v20 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v109 = v14;
  uint64_t v112 = v15;
  v15(&v18[v20[5]], &v19[v20[5]], v14);
  uint64_t v21 = v20[6];
  uint64_t v22 = &v18[v21];
  uint64_t v23 = &v19[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  uint64_t v25 = v20[7];
  uint64_t v26 = &v18[v25];
  uint64_t v27 = &v19[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  uint64_t v29 = v20[8];
  uint64_t v30 = &v18[v29];
  char v31 = &v19[v29];
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = v32;
  uint64_t v33 = v20[9];
  uint64_t v34 = &v18[v33];
  uint64_t v35 = &v19[v33];
  uint64_t v36 = *((void *)v35 + 1);
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = v36;
  uint64_t v37 = v20[10];
  uint64_t v110 = &v18[v37];
  uint64_t v107 = &v19[v37];
  uint64_t v38 = sub_1000B33D0();
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39(v110, v107, v38);
  uint64_t v111 = v38;
  char v108 = v39;
  v39(&v18[v20[11]], &v19[v20[11]], v38);
  *(void *)&v18[v20[12]] = *(void *)&v19[v20[12]];
  v18[v20[13]] = v19[v20[13]];
  uint64_t v40 = v20[14];
  uint64_t v41 = &v18[v40];
  uint64_t v42 = &v19[v40];
  uint64_t v43 = *(void **)v42;
  LOBYTE(v42) = v42[8];
  *(void *)uint64_t v41 = v43;
  v41[8] = (char)v42;
  *(void *)&v18[v20[15]] = *(void *)&v19[v20[15]];
  v18[v20[16]] = v19[v20[16]];
  uint64_t v44 = v20[17];
  __dst = &v18[v44];
  uint64_t v45 = &v19[v44];
  uint64_t v46 = sub_1000B32E0();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  uint64_t v49 = v46;
  swift_retain();
  id v50 = v43;
  swift_bridgeObjectRetain();
  uint64_t v106 = v48;
  if (v48(v45, 1, v49))
  {
    uint64_t v51 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v45, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v45, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v49);
  }
  uint64_t v52 = v49;
  v18[v20[18]] = v19[v20[18]];
  uint64_t v53 = v20[19];
  id v54 = &v18[v53];
  uint64_t v55 = &v19[v53];
  *(void *)id v54 = *(void *)v55;
  v54[8] = v55[8];
  uint64_t v56 = v20[20];
  uint64_t v57 = &v18[v56];
  uint64_t v58 = &v19[v56];
  uint64_t v59 = *((void *)v58 + 1);
  *(void *)uint64_t v57 = *(void *)v58;
  *((void *)v57 + 1) = v59;
  v18[v20[21]] = v19[v20[21]];
  uint64_t v60 = a3[7];
  uint64_t v61 = (char *)v113 + v60;
  uint64_t v62 = (char *)v114 + v60;
  swift_bridgeObjectRetain();
  v112(v61, v62, v109);
  v112(&v61[v20[5]], &v62[v20[5]], v109);
  uint64_t v63 = v20[6];
  uint64_t v64 = &v61[v63];
  uint64_t v65 = &v62[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v20[7];
  long long v68 = &v61[v67];
  uint64_t v69 = &v62[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)long long v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = v20[8];
  uint64_t v72 = &v61[v71];
  uint64_t v73 = &v62[v71];
  uint64_t v74 = *((void *)v73 + 1);
  *(void *)uint64_t v72 = *(void *)v73;
  *((void *)v72 + 1) = v74;
  uint64_t v75 = v20[9];
  uint64_t v76 = &v61[v75];
  uint64_t v77 = &v62[v75];
  uint64_t v78 = *((void *)v77 + 1);
  *(void *)uint64_t v76 = *(void *)v77;
  *((void *)v76 + 1) = v78;
  uint64_t v79 = v20[10];
  uint64_t v80 = &v61[v79];
  uint64_t v81 = &v62[v79];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v108(v80, v81, v111);
  v108(&v61[v20[11]], &v62[v20[11]], v111);
  *(void *)&v61[v20[12]] = *(void *)&v62[v20[12]];
  v61[v20[13]] = v62[v20[13]];
  uint64_t v82 = v20[14];
  uint64_t v83 = &v61[v82];
  uint64_t v84 = &v62[v82];
  uint64_t v85 = *(void **)v84;
  LOBYTE(v84) = v84[8];
  *(void *)uint64_t v83 = v85;
  v83[8] = (char)v84;
  *(void *)&v61[v20[15]] = *(void *)&v62[v20[15]];
  v61[v20[16]] = v62[v20[16]];
  uint64_t v86 = v20[17];
  uint64_t v87 = &v61[v86];
  uint64_t v88 = &v62[v86];
  swift_retain();
  id v89 = v85;
  swift_bridgeObjectRetain();
  if (v106(v88, 1, v52))
  {
    uint64_t v90 = sub_100004210(&qword_1000D5098);
    memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v87, v88, v52);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v87, 0, 1, v52);
  }
  v61[v20[18]] = v62[v20[18]];
  uint64_t v91 = v20[19];
  uint64_t v92 = &v61[v91];
  id v93 = &v62[v91];
  *(void *)uint64_t v92 = *(void *)v93;
  v92[8] = v93[8];
  uint64_t v94 = v20[20];
  uint64_t v95 = &v61[v94];
  uint64_t v96 = &v62[v94];
  uint64_t v97 = *((void *)v96 + 1);
  *(void *)uint64_t v95 = *(void *)v96;
  *((void *)v95 + 1) = v97;
  v61[v20[21]] = v62[v20[21]];
  uint64_t v98 = a3[9];
  *((unsigned char *)v113 + a3[8]) = *((unsigned char *)v114 + a3[8]);
  *((unsigned char *)v113 + v98) = *((unsigned char *)v114 + v98);
  uint64_t v99 = a3[10];
  uint64_t v100 = a3[11];
  uint64_t v101 = (void *)((char *)v113 + v99);
  uint64_t v102 = (void *)((char *)v114 + v99);
  uint64_t v103 = v102[1];
  *uint64_t v101 = *v102;
  v101[1] = v103;
  *(void *)((char *)v113 + v100) = *(void *)((char *)v114 + v100);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return v113;
}

char *sub_100081BFC(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_1000B3E20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  sub_100044118(*(void *)v8, v10);
  uint64_t v11 = *(void *)v7;
  char v12 = v7[8];
  *(void *)uint64_t v7 = v9;
  v7[8] = v10;
  sub_1000441FC(v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v100 = a1;
  uint64_t v14 = &a1[v13];
  uint64_t v102 = a2;
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1000B2F60();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  uint64_t v18 = type metadata accessor for AccessoryAndSceneEntity();
  v17(&v14[*(int *)(v18 + 20)], &v15[*(int *)(v18 + 20)], v16);
  uint64_t v19 = *(int *)(v18 + 24);
  uint64_t v20 = &v14[v19];
  uint64_t v21 = &v15[v19];
  v17(&v14[v19], &v15[v19], v16);
  uint64_t v22 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v99 = v17;
  v17(&v20[v22[5]], &v21[v22[5]], v16);
  uint64_t v23 = v22[6];
  uint64_t v24 = &v20[v23];
  uint64_t v25 = &v21[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v22[7];
  uint64_t v27 = &v20[v26];
  uint64_t v28 = &v21[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = v22[8];
  uint64_t v30 = &v20[v29];
  char v31 = &v21[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = v22[9];
  uint64_t v33 = &v20[v32];
  uint64_t v34 = &v21[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = v22[10];
  uint64_t v36 = &v20[v35];
  uint64_t v37 = &v21[v35];
  uint64_t v38 = sub_1000B33D0();
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24);
  v39(v36, v37, v38);
  uint64_t v97 = v39;
  uint64_t v98 = v38;
  v39(&v20[v22[11]], &v21[v22[11]], v38);
  *(void *)&v20[v22[12]] = *(void *)&v21[v22[12]];
  swift_retain();
  swift_release();
  v20[v22[13]] = v21[v22[13]];
  uint64_t v40 = v22[14];
  uint64_t v41 = &v20[v40];
  uint64_t v42 = &v21[v40];
  uint64_t v43 = *(void **)v42;
  LOBYTE(v42) = v42[8];
  uint64_t v44 = *(void **)v41;
  *(void *)uint64_t v41 = v43;
  v41[8] = (char)v42;
  id v45 = v43;

  *(void *)&v20[v22[15]] = *(void *)&v21[v22[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[v22[16]] = v21[v22[16]];
  uint64_t v46 = v22[17];
  uint64_t v47 = &v20[v46];
  uint64_t v48 = &v21[v46];
  uint64_t v49 = sub_1000B32E0();
  uint64_t v101 = *(void *)(v49 - 8);
  id v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  LODWORD(v39) = v50(v47, 1, v49);
  int v51 = v50(v48, 1, v49);
  if (v39)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v47, 0, 1, v49);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v101 + 8))(v47, v49);
LABEL_11:
    uint64_t v52 = sub_100004210(&qword_1000D5098);
    memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 24))(v47, v48, v49);
LABEL_12:
  v20[v22[18]] = v21[v22[18]];
  uint64_t v53 = v22[19];
  id v54 = &v20[v53];
  uint64_t v55 = &v21[v53];
  uint64_t v56 = *(void *)v55;
  v54[8] = v55[8];
  *(void *)id v54 = v56;
  uint64_t v57 = v22[20];
  uint64_t v58 = &v20[v57];
  uint64_t v59 = &v21[v57];
  *(void *)uint64_t v58 = *(void *)v59;
  *((void *)v58 + 1) = *((void *)v59 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[v22[21]] = v21[v22[21]];
  uint64_t v60 = a3[7];
  uint64_t v61 = &v100[v60];
  uint64_t v62 = &v102[v60];
  v99(&v100[v60], &v102[v60], v16);
  v99(&v61[v22[5]], &v62[v22[5]], v16);
  uint64_t v63 = v22[6];
  uint64_t v64 = &v61[v63];
  uint64_t v65 = &v62[v63];
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = *((void *)v65 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = v22[7];
  uint64_t v67 = &v61[v66];
  long long v68 = &v62[v66];
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = *((void *)v68 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = v22[8];
  uint64_t v70 = &v61[v69];
  uint64_t v71 = &v62[v69];
  *(void *)uint64_t v70 = *(void *)v71;
  *((void *)v70 + 1) = *((void *)v71 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = v22[9];
  uint64_t v73 = &v61[v72];
  uint64_t v74 = &v62[v72];
  *(void *)uint64_t v73 = *(void *)v74;
  *((void *)v73 + 1) = *((void *)v74 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97(&v61[v22[10]], &v62[v22[10]], v98);
  v97(&v61[v22[11]], &v62[v22[11]], v98);
  *(void *)&v61[v22[12]] = *(void *)&v62[v22[12]];
  swift_retain();
  swift_release();
  v61[v22[13]] = v62[v22[13]];
  uint64_t v75 = v22[14];
  uint64_t v76 = &v61[v75];
  uint64_t v77 = &v62[v75];
  uint64_t v78 = *(void **)v77;
  LOBYTE(v77) = v77[8];
  uint64_t v79 = *(void **)v76;
  *(void *)uint64_t v76 = v78;
  v76[8] = (char)v77;
  id v80 = v78;

  *(void *)&v61[v22[15]] = *(void *)&v62[v22[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61[v22[16]] = v62[v22[16]];
  uint64_t v81 = v22[17];
  uint64_t v82 = &v61[v81];
  uint64_t v83 = &v62[v81];
  LODWORD(v79) = v50(&v61[v81], 1, v49);
  int v84 = v50(v83, 1, v49);
  if (!v79)
  {
    if (!v84)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 24))(v82, v83, v49);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v82, v49);
    goto LABEL_17;
  }
  if (v84)
  {
LABEL_17:
    uint64_t v85 = sub_100004210(&qword_1000D5098);
    memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v82, v83, v49);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v82, 0, 1, v49);
LABEL_18:
  v61[v22[18]] = v62[v22[18]];
  uint64_t v86 = v22[19];
  uint64_t v87 = &v61[v86];
  uint64_t v88 = &v62[v86];
  uint64_t v89 = *(void *)v88;
  v87[8] = v88[8];
  *(void *)uint64_t v87 = v89;
  uint64_t v90 = v22[20];
  uint64_t v91 = &v61[v90];
  uint64_t v92 = &v62[v90];
  *(void *)uint64_t v91 = *(void *)v92;
  *((void *)v91 + 1) = *((void *)v92 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61[v22[21]] = v62[v22[21]];
  v100[a3[8]] = v102[a3[8]];
  v100[a3[9]] = v102[a3[9]];
  uint64_t v93 = a3[10];
  uint64_t v94 = &v100[v93];
  uint64_t v95 = &v102[v93];
  *(void *)uint64_t v94 = *(void *)v95;
  *((void *)v94 + 1) = *((void *)v95 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v100[a3[11]] = *(void *)&v102[a3[11]];
  swift_retain();
  swift_release();
  return v100;
}

char *sub_1000824B8(char *a1, char *a2, int *a3)
{
  uint64_t v5 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v7];
  char v10 = &a2[v7];
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v11 = &a1[v8];
  char v12 = &a2[v8];
  uint64_t v13 = sub_1000B2F60();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  uint64_t v15 = type metadata accessor for AccessoryAndSceneEntity();
  v14(&v11[*(int *)(v15 + 20)], &v12[*(int *)(v15 + 20)], v13);
  uint64_t v16 = *(int *)(v15 + 24);
  uint64_t v17 = &v11[v16];
  uint64_t v18 = &v12[v16];
  v14(&v11[v16], &v12[v16], v13);
  uint64_t v19 = (int *)type metadata accessor for WidgetTileInfo();
  id v54 = v14;
  v14(&v17[v19[5]], &v18[v19[5]], v13);
  *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
  *(_OWORD *)&v17[v19[7]] = *(_OWORD *)&v18[v19[7]];
  *(_OWORD *)&v17[v19[8]] = *(_OWORD *)&v18[v19[8]];
  *(_OWORD *)&v17[v19[9]] = *(_OWORD *)&v18[v19[9]];
  uint64_t v20 = v19[10];
  uint64_t v21 = &v17[v20];
  uint64_t v22 = &v18[v20];
  uint64_t v23 = sub_1000B33D0();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v24(&v17[v19[11]], &v18[v19[11]], v23);
  *(void *)&v17[v19[12]] = *(void *)&v18[v19[12]];
  v17[v19[13]] = v18[v19[13]];
  uint64_t v25 = v19[14];
  uint64_t v26 = &v17[v25];
  uint64_t v27 = &v18[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)&v17[v19[15]] = *(void *)&v18[v19[15]];
  v17[v19[16]] = v18[v19[16]];
  uint64_t v28 = v19[17];
  uint64_t v29 = &v17[v28];
  uint64_t v30 = &v18[v28];
  uint64_t v31 = sub_1000B32E0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v53(v30, 1, v31))
  {
    uint64_t v33 = sub_100004210(&qword_1000D5098);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v17[v19[18]] = v18[v19[18]];
  uint64_t v34 = v19[19];
  uint64_t v35 = &v17[v34];
  uint64_t v36 = &v18[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v36[8];
  *(_OWORD *)&v17[v19[20]] = *(_OWORD *)&v18[v19[20]];
  v17[v19[21]] = v18[v19[21]];
  uint64_t v37 = a3[7];
  uint64_t v38 = &v55[v37];
  uint64_t v39 = &v56[v37];
  v54(&v55[v37], &v56[v37], v13);
  v54(&v38[v19[5]], &v39[v19[5]], v13);
  *(_OWORD *)&v38[v19[6]] = *(_OWORD *)&v39[v19[6]];
  *(_OWORD *)&v38[v19[7]] = *(_OWORD *)&v39[v19[7]];
  *(_OWORD *)&v38[v19[8]] = *(_OWORD *)&v39[v19[8]];
  *(_OWORD *)&v38[v19[9]] = *(_OWORD *)&v39[v19[9]];
  v24(&v38[v19[10]], &v39[v19[10]], v23);
  v24(&v38[v19[11]], &v39[v19[11]], v23);
  *(void *)&v38[v19[12]] = *(void *)&v39[v19[12]];
  v38[v19[13]] = v39[v19[13]];
  uint64_t v40 = v19[14];
  uint64_t v41 = &v38[v40];
  uint64_t v42 = &v39[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v42[8];
  *(void *)&v38[v19[15]] = *(void *)&v39[v19[15]];
  v38[v19[16]] = v39[v19[16]];
  uint64_t v43 = v19[17];
  uint64_t v44 = &v38[v43];
  id v45 = &v39[v43];
  if (v53(&v39[v43], 1, v31))
  {
    uint64_t v46 = sub_100004210(&qword_1000D5098);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v44, v45, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v44, 0, 1, v31);
  }
  v38[v19[18]] = v39[v19[18]];
  uint64_t v47 = v19[19];
  uint64_t v48 = &v38[v47];
  uint64_t v49 = &v39[v47];
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v49[8];
  *(_OWORD *)&v38[v19[20]] = *(_OWORD *)&v39[v19[20]];
  v38[v19[21]] = v39[v19[21]];
  uint64_t v50 = a3[9];
  v55[a3[8]] = v56[a3[8]];
  v55[v50] = v56[v50];
  uint64_t v51 = a3[11];
  *(_OWORD *)&v55[a3[10]] = *(_OWORD *)&v56[a3[10]];
  *(void *)&v55[v51] = *(void *)&v56[v51];
  return v55;
}

char *sub_100082A9C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    uint64_t v5 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000B3E20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    }
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(void *)v9;
  LOBYTE(v9) = v9[8];
  uint64_t v11 = *(void *)v8;
  char v12 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = (char)v9;
  sub_1000441FC(v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v119 = a1;
  uint64_t v14 = &a1[v13];
  uint64_t v121 = a2;
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1000B2F60();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  uint64_t v18 = type metadata accessor for AccessoryAndSceneEntity();
  v17(&v14[*(int *)(v18 + 20)], &v15[*(int *)(v18 + 20)], v16);
  uint64_t v19 = *(int *)(v18 + 24);
  uint64_t v20 = &v14[v19];
  uint64_t v21 = &v15[v19];
  v17(&v14[v19], &v15[v19], v16);
  uint64_t v22 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v118 = v17;
  v17(&v20[v22[5]], &v21[v22[5]], v16);
  uint64_t v23 = v22[6];
  uint64_t v24 = &v20[v23];
  uint64_t v25 = &v21[v23];
  uint64_t v27 = *(void *)v25;
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = v27;
  *((void *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = v22[7];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  uint64_t v32 = *(void *)v30;
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = v32;
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = v22[8];
  uint64_t v34 = &v20[v33];
  uint64_t v35 = &v21[v33];
  uint64_t v37 = *(void *)v35;
  uint64_t v36 = *((void *)v35 + 1);
  *(void *)uint64_t v34 = v37;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = v22[9];
  uint64_t v39 = &v20[v38];
  uint64_t v40 = &v21[v38];
  uint64_t v42 = *(void *)v40;
  uint64_t v41 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = v42;
  *((void *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = v22[10];
  uint64_t v44 = &v20[v43];
  id v45 = &v21[v43];
  uint64_t v46 = sub_1000B33D0();
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40);
  v47(v44, v45, v46);
  uint64_t v117 = v47;
  v47(&v20[v22[11]], &v21[v22[11]], v46);
  *(void *)&v20[v22[12]] = *(void *)&v21[v22[12]];
  swift_release();
  v20[v22[13]] = v21[v22[13]];
  uint64_t v48 = v22[14];
  uint64_t v49 = &v20[v48];
  uint64_t v50 = &v21[v48];
  uint64_t v51 = *(void *)v50;
  LOBYTE(v50) = v50[8];
  uint64_t v52 = *(void **)v49;
  *(void *)uint64_t v49 = v51;
  v49[8] = (char)v50;

  *(void *)&v20[v22[15]] = *(void *)&v21[v22[15]];
  swift_bridgeObjectRelease();
  v20[v22[16]] = v21[v22[16]];
  uint64_t v53 = v22[17];
  id v54 = &v20[v53];
  uint64_t v55 = &v21[v53];
  uint64_t v56 = sub_1000B32E0();
  uint64_t v120 = *(void *)(v56 - 8);
  uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48);
  LODWORD(v47) = v57(v54, 1, v56);
  int v58 = v57(v55, 1, v56);
  if (v47)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v54, v55, v56);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v54, 0, 1, v56);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v54, v56);
LABEL_10:
    uint64_t v59 = sub_100004210(&qword_1000D5098);
    memcpy(v54, v55, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v54, v55, v56);
LABEL_11:
  v20[v22[18]] = v21[v22[18]];
  uint64_t v60 = v22[19];
  uint64_t v61 = &v20[v60];
  uint64_t v62 = &v21[v60];
  *(void *)uint64_t v61 = *(void *)v62;
  v61[8] = v62[8];
  uint64_t v63 = v22[20];
  uint64_t v64 = &v20[v63];
  uint64_t v65 = &v21[v63];
  uint64_t v67 = *(void *)v65;
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = v67;
  *((void *)v64 + 1) = v66;
  swift_bridgeObjectRelease();
  v20[v22[21]] = v21[v22[21]];
  uint64_t v68 = a3[7];
  uint64_t v69 = &v119[v68];
  uint64_t v70 = &v121[v68];
  v118(&v119[v68], &v121[v68], v16);
  v118(&v69[v22[5]], &v70[v22[5]], v16);
  uint64_t v71 = v22[6];
  uint64_t v72 = &v69[v71];
  uint64_t v73 = &v70[v71];
  uint64_t v75 = *(void *)v73;
  uint64_t v74 = *((void *)v73 + 1);
  *(void *)uint64_t v72 = v75;
  *((void *)v72 + 1) = v74;
  swift_bridgeObjectRelease();
  uint64_t v76 = v22[7];
  uint64_t v77 = &v69[v76];
  uint64_t v78 = &v70[v76];
  uint64_t v80 = *(void *)v78;
  uint64_t v79 = *((void *)v78 + 1);
  *(void *)uint64_t v77 = v80;
  *((void *)v77 + 1) = v79;
  swift_bridgeObjectRelease();
  uint64_t v81 = v22[8];
  uint64_t v82 = &v69[v81];
  uint64_t v83 = &v70[v81];
  uint64_t v85 = *(void *)v83;
  uint64_t v84 = *((void *)v83 + 1);
  *(void *)uint64_t v82 = v85;
  *((void *)v82 + 1) = v84;
  swift_bridgeObjectRelease();
  uint64_t v86 = v22[9];
  uint64_t v87 = &v69[v86];
  uint64_t v88 = &v70[v86];
  uint64_t v90 = *(void *)v88;
  uint64_t v89 = *((void *)v88 + 1);
  *(void *)uint64_t v87 = v90;
  *((void *)v87 + 1) = v89;
  swift_bridgeObjectRelease();
  v117(&v69[v22[10]], &v70[v22[10]], v46);
  v117(&v69[v22[11]], &v70[v22[11]], v46);
  *(void *)&v69[v22[12]] = *(void *)&v70[v22[12]];
  swift_release();
  v69[v22[13]] = v70[v22[13]];
  uint64_t v91 = v22[14];
  uint64_t v92 = &v69[v91];
  uint64_t v93 = &v70[v91];
  uint64_t v94 = *(void *)v93;
  LOBYTE(v93) = v93[8];
  uint64_t v95 = *(void **)v92;
  *(void *)uint64_t v92 = v94;
  v92[8] = (char)v93;

  *(void *)&v69[v22[15]] = *(void *)&v70[v22[15]];
  swift_bridgeObjectRelease();
  v69[v22[16]] = v70[v22[16]];
  uint64_t v96 = v22[17];
  uint64_t v97 = &v69[v96];
  uint64_t v98 = &v70[v96];
  int v99 = v57(&v69[v96], 1, v56);
  int v100 = v57(v98, 1, v56);
  if (!v99)
  {
    if (!v100)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v97, v98, v56);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v120 + 8))(v97, v56);
    goto LABEL_16;
  }
  if (v100)
  {
LABEL_16:
    uint64_t v101 = sub_100004210(&qword_1000D5098);
    memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v97, v98, v56);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v97, 0, 1, v56);
LABEL_17:
  v69[v22[18]] = v70[v22[18]];
  uint64_t v102 = v22[19];
  uint64_t v103 = &v69[v102];
  uint64_t v104 = &v70[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  v103[8] = v104[8];
  uint64_t v105 = v22[20];
  uint64_t v106 = &v69[v105];
  uint64_t v107 = &v70[v105];
  uint64_t v109 = *(void *)v107;
  uint64_t v108 = *((void *)v107 + 1);
  *(void *)uint64_t v106 = v109;
  *((void *)v106 + 1) = v108;
  swift_bridgeObjectRelease();
  v69[v22[21]] = v70[v22[21]];
  uint64_t v110 = a3[9];
  v119[a3[8]] = v121[a3[8]];
  v119[v110] = v121[v110];
  uint64_t v111 = a3[10];
  uint64_t v112 = &v119[v111];
  char v113 = &v121[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)uint64_t v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  *(void *)&v119[a3[11]] = *(void *)&v121[a3[11]];
  swift_release();
  return v119;
}

uint64_t sub_10008327C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100083290);
}

uint64_t sub_100083290(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5EE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for AccessoryAndSceneEntity();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[6];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for WidgetTileInfo();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[10] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_1000833F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008340C);
}

uint64_t sub_10008340C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100004210(&qword_1000D5EE0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for AccessoryAndSceneEntity();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[6];
    }
    else
    {
      uint64_t result = type metadata accessor for WidgetTileInfo();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[10] + 8) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[7];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LargeSquareTileView()
{
  uint64_t result = qword_1000D6BC8;
  if (!qword_1000D6BC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000835BC()
{
  sub_1000836F4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AccessoryAndSceneEntity();
    if (v1 <= 0x3F)
    {
      type metadata accessor for WidgetTileInfo();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1000836F4()
{
  if (!qword_1000D5F58)
  {
    sub_1000B3E20();
    unint64_t v0 = sub_1000B3630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D5F58);
    }
  }
}

uint64_t sub_10008374C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100083768@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v53 = a1;
  uint64_t v3 = sub_100004210(&qword_1000D6C18);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004210(&qword_1000D6C20);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100004210(&qword_1000D6C28);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004210(&qword_1000D6C30);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for LargeSquareTileView() + 32))) {
    uint64_t v15 = sub_1000A4390();
  }
  else {
    uint64_t v15 = sub_1000A3998();
  }
  uint64_t v17 = v15;
  unint64_t v18 = v16;
  *(void *)uint64_t v5 = sub_1000B3890();
  *((void *)v5 + 1) = 0;
  unsigned char v5[16] = 1;
  uint64_t v19 = sub_100004210(&qword_1000D6C38);
  sub_100083AEC(v2, v17, v18, (uint64_t)&v5[*(int *)(v19 + 44)]);
  swift_bridgeObjectRelease();
  LOBYTE(v17) = sub_1000B3A00();
  unsigned __int8 v20 = sub_1000B3A20();
  char v21 = sub_1000B3A10();
  sub_1000B3A10();
  if (sub_1000B3A10() != v17) {
    char v21 = sub_1000B3A10();
  }
  sub_1000B3A10();
  if (sub_1000B3A10() != v20) {
    char v21 = sub_1000B3A10();
  }
  sub_1000B35D0();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_1000206A0((uint64_t)v5, (uint64_t)v8, &qword_1000D6C18);
  uint64_t v30 = &v8[*(int *)(v6 + 36)];
  *uint64_t v30 = v21;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_100017B5C((uint64_t)v5, &qword_1000D6C18);
  char v31 = sub_1000B39E0();
  sub_1000B35D0();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_1000206A0((uint64_t)v8, (uint64_t)v11, &qword_1000D6C20);
  uint64_t v40 = &v11[*(int *)(v9 + 36)];
  *uint64_t v40 = v31;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_100017B5C((uint64_t)v8, &qword_1000D6C20);
  char v41 = sub_1000B39F0();
  sub_1000B35D0();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  sub_1000206A0((uint64_t)v11, (uint64_t)v14, &qword_1000D6C28);
  uint64_t v50 = &v14[*(int *)(v12 + 36)];
  *uint64_t v50 = v41;
  *((void *)v50 + 1) = v43;
  *((void *)v50 + 2) = v45;
  *((void *)v50 + 3) = v47;
  *((void *)v50 + 4) = v49;
  v50[40] = 0;
  sub_100017B5C((uint64_t)v11, &qword_1000D6C28);
  return sub_10006B62C((uint64_t)v14, v53, &qword_1000D6C30);
}

uint64_t sub_100083AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v119 = a3;
  uint64_t v120 = a2;
  uint64_t v114 = a4;
  uint64_t v5 = type metadata accessor for LargeSquareTileView();
  __chkstk_darwin(v5);
  uint64_t v110 = (uint64_t)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B3620();
  uint64_t v112 = *(void *)(v7 - 8);
  uint64_t v113 = v7;
  __chkstk_darwin(v7);
  uint64_t v111 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100004210(&qword_1000D5FE8);
  uint64_t v9 = __chkstk_darwin(v121);
  uint64_t v102 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v98 = (char *)&v92 - v11;
  uint64_t v12 = sub_1000B3680();
  uint64_t v118 = *(void **)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v117 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v116 = (char *)&v92 - v15;
  uint64_t v100 = sub_100004210(&qword_1000D5FF0);
  uint64_t v16 = __chkstk_darwin(v100);
  uint64_t v97 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v99 = (uint64_t)&v92 - v18;
  uint64_t v115 = sub_1000B3350();
  uint64_t v19 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  char v21 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for TileNameAndStatusView();
  __chkstk_darwin(v96);
  uint64_t v122 = (uint64_t *)((char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v107 = sub_100004210(&qword_1000D68D8);
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v95 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100004210(&qword_1000D68E0);
  uint64_t v24 = __chkstk_darwin(v101);
  uint64_t v109 = (uint64_t)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v103 = (char *)&v92 - v27;
  __chkstk_darwin(v26);
  uint64_t v108 = (uint64_t)&v92 - v28;
  uint64_t v29 = sub_100004210(&qword_1000D6C40);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v106 = (uint64_t)&v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v92 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v92 - v35;
  *(void *)uint64_t v34 = sub_1000B3800();
  *((void *)v34 + 1) = 0;
  v34[16] = 1;
  uint64_t v37 = sub_100004210(&qword_1000D6C48);
  sub_100084688(a1, (uint64_t)&v34[*(int *)(v37 + 44)]);
  uint64_t v104 = v36;
  sub_10006B62C((uint64_t)v34, (uint64_t)v36, &qword_1000D6C40);
  uint64_t v38 = a1 + *(int *)(v5 + 28);
  uint64_t v92 = type metadata accessor for WidgetTileInfo();
  uint64_t v39 = (uint64_t *)(v38 + *(int *)(v92 + 28));
  uint64_t v41 = *v39;
  unint64_t v40 = v39[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1000B3340();
  uint64_t v42 = sub_1000B3330();
  uint64_t v44 = v43;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v115);
  uint64_t v45 = sub_1000B3A40();
  uint64_t v93 = v5;
  uint64_t v46 = *(int *)(v5 + 32);
  uint64_t v115 = a1;
  uint64_t v94 = v46;
  LOBYTE(a1) = *(unsigned char *)(a1 + v46);
  sub_10001B2F8();
  LOBYTE(v21) = v47;
  unint64_t v48 = v119;
  swift_bridgeObjectRetain();
  unint64_t v49 = v40;
  uint64_t v50 = v44;
  uint64_t v52 = v116;
  uint64_t v51 = v117;
  TileNameAndStatusView.init(roomName:name:statusString:font:tileStyle:isActivated:isInFlight:)(v41, v49, v42, v50, v120, v48, v45, 2, v122, a1 & 1, v21 & 1);
  uint64_t v53 = v118;
  id v54 = (void (*)(char *, void, uint64_t))v118[13];
  v54(v52, enum case for DynamicTypeSize.xSmall(_:), v12);
  v54(v51, enum case for DynamicTypeSize.accessibility2(_:), v12);
  sub_10007D304(&qword_1000D6058, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t v55 = v12;
  uint64_t result = sub_1000B3F80();
  if (result)
  {
    uint64_t v57 = v121;
    int v58 = v98;
    uint64_t v59 = &v98[*(int *)(v121 + 48)];
    uint64_t v60 = (void (*)(char *, char *, uint64_t))v53[4];
    uint64_t v61 = v55;
    v60(v98, v52, v55);
    uint64_t v62 = v59;
    v60(v59, v51, v61);
    uint64_t v63 = v102;
    uint64_t v64 = &v102[*(int *)(v57 + 48)];
    uint64_t v65 = (void (*)(char *, char *, uint64_t))v53[2];
    v65(v102, v58, v61);
    v65(v64, v62, v61);
    uint64_t v66 = (uint64_t)v97;
    v60(v97, v63, v61);
    uint64_t v67 = (void (*)(char *, uint64_t))v53[1];
    v67(v64, v61);
    uint64_t v68 = &v63[*(int *)(v121 + 48)];
    v60(v63, v58, v61);
    v60(v68, v62, v61);
    v60((char *)(v66 + *(int *)(v100 + 36)), v68, v61);
    v67(v63, v61);
    uint64_t v69 = v99;
    sub_10006B62C(v66, v99, &qword_1000D5FF0);
    sub_10007D304(&qword_1000D68E8, (void (*)(uint64_t))type metadata accessor for TileNameAndStatusView);
    sub_10001FF28(&qword_1000D6090, &qword_1000D5FF0);
    uint64_t v70 = v95;
    uint64_t v71 = v122;
    sub_1000B3BC0();
    sub_100017B5C(v69, &qword_1000D5FF0);
    sub_100085698((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for TileNameAndStatusView);
    uint64_t KeyPath = swift_getKeyPath();
    int v73 = *(unsigned __int8 *)(v115 + v94);
    if (v73 == 2)
    {
      uint64_t v74 = v110;
      sub_100085268(v115, v110, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
    }
    else
    {
      uint64_t v74 = v110;
      sub_100085268(v115, v110, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
      if (v73)
      {
        char v91 = *(unsigned char *)(v74 + *(int *)(v93 + 28) + *(int *)(v92 + 52));
        sub_100085698(v74, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
        if (v91)
        {
          uint64_t v75 = (unsigned int *)&enum case for ColorScheme.light(_:);
          goto LABEL_7;
        }
LABEL_6:
        uint64_t v75 = (unsigned int *)&enum case for ColorScheme.dark(_:);
LABEL_7:
        uint64_t v77 = v111;
        uint64_t v76 = v112;
        uint64_t v78 = v113;
        (*(void (**)(char *, void, uint64_t))(v112 + 104))(v111, *v75, v113);
        uint64_t v79 = (uint64_t)v103;
        uint64_t v80 = (uint64_t *)&v103[*(int *)(v101 + 36)];
        uint64_t v81 = sub_100004210(&qword_1000D68F0);
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))((char *)v80 + *(int *)(v81 + 28), v77, v78);
        uint64_t *v80 = KeyPath;
        uint64_t v82 = v105;
        uint64_t v83 = v107;
        (*(void (**)(uint64_t, char *, uint64_t))(v105 + 16))(v79, v70, v107);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v70, v83);
        uint64_t v84 = v108;
        sub_10006B62C(v79, v108, &qword_1000D68E0);
        uint64_t v85 = (uint64_t)v104;
        uint64_t v86 = v106;
        sub_1000206A0((uint64_t)v104, v106, &qword_1000D6C40);
        uint64_t v87 = v109;
        sub_1000206A0(v84, v109, &qword_1000D68E0);
        uint64_t v88 = v114;
        sub_1000206A0(v86, v114, &qword_1000D6C40);
        uint64_t v89 = sub_100004210(&qword_1000D6C50);
        uint64_t v90 = v88 + *(int *)(v89 + 48);
        *(void *)uint64_t v90 = 0x4000000000000000;
        *(unsigned char *)(v90 + 8) = 0;
        sub_1000206A0(v87, v88 + *(int *)(v89 + 64), &qword_1000D68E0);
        sub_100017B5C(v84, &qword_1000D68E0);
        sub_100017B5C(v85, &qword_1000D6C40);
        sub_100017B5C(v87, &qword_1000D68E0);
        return sub_100017B5C(v86, &qword_1000D6C40);
      }
    }
    sub_100085698(v74, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100084688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v3 = sub_1000B38A0();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v104 = (uint64_t)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v103 = (uint64_t)&v91 - v6;
  uint64_t v7 = (int *)type metadata accessor for LargeSquareTileView();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v93 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v92 = (uint64_t)&v91 - v10;
  uint64_t v107 = sub_100004210(&qword_1000D6C58);
  __chkstk_darwin(v107);
  uint64_t v105 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1000B3620();
  uint64_t v101 = *(void (***)(char *, char *, uint64_t))(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v99 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100004210(&qword_1000D6C60);
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v96 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100004210(&qword_1000D6C68);
  uint64_t v14 = __chkstk_darwin(v106);
  uint64_t v95 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v100 = (uint64_t)&v91 - v16;
  uint64_t v94 = sub_1000B3E20();
  uint64_t v17 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for TileIconView();
  uint64_t v20 = __chkstk_darwin(v109);
  uint64_t v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (void (**)(char *, char *, uint64_t))((char *)&v91 - v23);
  uint64_t v25 = sub_100004210(&qword_1000D6C70);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v111 = (uint64_t)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v110 = (char *)&v91 - v28;
  uint64_t v29 = a1;
  uint64_t v30 = a1 + v7[7];
  sub_1000A3DC8();
  uint64_t v112 = v30;
  if (!v32)
  {
    uint64_t v101 = v24;
    uint64_t v65 = (uint64_t)v93;
    uint64_t v66 = v7[8];
    int v67 = *(unsigned __int8 *)(v29 + v66);
    uint64_t v68 = v7;
    if (v67 == 2)
    {
      uint64_t v69 = v7;
      uint64_t v70 = v92;
      sub_100085268(v29, v92, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
      LODWORD(v102) = 0;
      uint64_t v71 = v112;
      uint64_t v72 = (uint64_t)v22;
    }
    else
    {
      uint64_t v70 = v92;
      sub_100085268(v29, v92, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
      uint64_t v71 = v112;
      uint64_t v72 = (uint64_t)v22;
      uint64_t v69 = v68;
      if (v67)
      {
        uint64_t v73 = v70 + v68[7];
        LODWORD(v102) = *(unsigned __int8 *)(v73 + *(int *)(type metadata accessor for WidgetTileInfo() + 52));
      }
      else
      {
        LODWORD(v102) = 0;
      }
    }
    sub_100085698(v70, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
    char v74 = *(unsigned char *)(v29 + v66);
    uint64_t v75 = type metadata accessor for WidgetTileInfo();
    uint64_t v76 = v29;
    uint64_t v77 = v75;
    uint64_t v78 = 36;
    if ((v74 & 1) == 0) {
      uint64_t v78 = 32;
    }
    uint64_t v79 = (uint64_t *)(v71 + *(int *)(v75 + v78));
    uint64_t v80 = *v79;
    uint64_t v81 = v79[1];
    swift_bridgeObjectRetain();
    sub_1000B33C0();
    sub_1000B33C0();
    sub_100085268(v76, v65, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
    if (v74)
    {
      char v84 = *(unsigned char *)(v65 + v69[7] + *(int *)(v77 + 52));
      sub_100085698(v65, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
      uint64_t v64 = v108;
      uint64_t v82 = v105;
      uint64_t v83 = (uint64_t)v101;
      if (v84)
      {
        uint64_t v85 = *(void *)(v112 + *(int *)(v77 + 48));
        swift_retain();
LABEL_18:
        uint64_t v86 = sub_1000B3DB0();
        TileIconView.init(isActivated:iconSymbol:iconSymbolRenderingMode:iconSymbolActivatedRenderingMode:iconColor:imageContainerDimension:symbolFontSize:iconAlignment:)(v102, v80, v81, v103, v104, v85, v86, v87, v72, 44.0, 34.0);
        sub_100085204(v72, v83);
        sub_100085268(v83, v82, (uint64_t (*)(void))type metadata accessor for TileIconView);
        swift_storeEnumTagMultiPayload();
        sub_1000852D0();
        sub_10007D304(&qword_1000D69E0, (void (*)(uint64_t))type metadata accessor for TileIconView);
        uint64_t v63 = (uint64_t)v110;
        sub_1000B3920();
        sub_100085698(v83, (uint64_t (*)(void))type metadata accessor for TileIconView);
        goto LABEL_19;
      }
    }
    else
    {
      sub_100085698(v65, (uint64_t (*)(void))type metadata accessor for LargeSquareTileView);
      uint64_t v64 = v108;
      uint64_t v82 = v105;
      uint64_t v83 = (uint64_t)v101;
    }
    uint64_t v85 = sub_1000B3C70();
    goto LABEL_18;
  }
  uint64_t v33 = v31;
  uint64_t v34 = v32;
  sub_10007F150((uint64_t)v19);
  uint64_t v35 = a1 + v7[5];
  uint64_t v36 = *(void *)v35;
  char v37 = *(unsigned char *)(v35 + 8);
  sub_100044118(*(void *)v35, v37);
  sub_10007E9FC(v36, v37);
  sub_1000441FC(v36, v37);
  uint64_t v38 = sub_100020704((uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v94);
  uint64_t v113 = v33;
  uint64_t v114 = v34;
  sub_100004BC8();
  uint64_t v39 = sub_1000B3B50();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v104 = v42;
  char v45 = v44 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v103 = KeyPath;
  uint64_t v47 = swift_getKeyPath();
  sub_1000B3A30();
  uint64_t v48 = sub_1000B3A50();
  swift_release();
  uint64_t v49 = swift_getKeyPath();
  uint64_t v113 = v39;
  uint64_t v114 = v41;
  char v115 = v45;
  uint64_t v116 = v43;
  __int16 v117 = 256;
  uint64_t v118 = KeyPath;
  char v119 = 1;
  uint64_t v120 = v47;
  uint64_t v121 = 1;
  char v122 = 0;
  uint64_t v123 = v49;
  uint64_t v124 = v48;
  uint64_t v125 = v38;
  swift_retain();
  sub_100004210(&qword_1000D6C80);
  sub_1000853A4();
  uint64_t v50 = v96;
  sub_1000B3BD0();
  sub_10005B938(v39, v41, v45);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = type metadata accessor for WidgetTileInfo();
  uint64_t v53 = v101;
  if (*(unsigned char *)(v112 + *(int *)(v52 + 52))) {
    id v54 = (unsigned int *)&enum case for ColorScheme.light(_:);
  }
  else {
    id v54 = (unsigned int *)&enum case for ColorScheme.dark(_:);
  }
  uint64_t v55 = v99;
  uint64_t v56 = v102;
  v101[13](v99, (char *)*v54, v102);
  uint64_t v57 = (uint64_t)v95;
  int v58 = (uint64_t *)&v95[*(int *)(v106 + 36)];
  uint64_t v59 = sub_100004210(&qword_1000D68F0);
  v53[2]((char *)v58 + *(int *)(v59 + 28), v55, v56);
  *int v58 = v51;
  uint64_t v60 = v97;
  uint64_t v61 = v98;
  (*(void (**)(uint64_t, char *, uint64_t))(v97 + 16))(v57, v50, v98);
  ((void (*)(char *, uint64_t))v53[1])(v55, v56);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v50, v61);
  uint64_t v62 = v100;
  sub_10006B62C(v57, v100, &qword_1000D6C68);
  sub_1000206A0(v62, v105, &qword_1000D6C68);
  swift_storeEnumTagMultiPayload();
  sub_1000852D0();
  sub_10007D304(&qword_1000D69E0, (void (*)(uint64_t))type metadata accessor for TileIconView);
  uint64_t v63 = (uint64_t)v110;
  sub_1000B3920();
  swift_release();
  sub_100017B5C(v62, &qword_1000D6C68);
  uint64_t v64 = v108;
LABEL_19:
  uint64_t v88 = v111;
  sub_1000206A0(v63, v111, &qword_1000D6C70);
  sub_1000206A0(v88, v64, &qword_1000D6C70);
  uint64_t v89 = v64 + *(int *)(sub_100004210(&qword_1000D6CD0) + 48);
  *(void *)uint64_t v89 = 0;
  *(unsigned char *)(v89 + 8) = 1;
  sub_100017B5C(v63, &qword_1000D6C70);
  return sub_100017B5C(v88, &qword_1000D6C70);
}

uint64_t sub_100085204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TileIconView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100085268(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000852D0()
{
  unint64_t result = qword_1000D6C78;
  if (!qword_1000D6C78)
  {
    sub_100004B80(&qword_1000D6C68);
    sub_100004B80(&qword_1000D6C80);
    sub_1000853A4();
    swift_getOpaqueTypeConformance2();
    sub_10001FF28(&qword_1000D69D8, &qword_1000D68F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6C78);
  }
  return result;
}

unint64_t sub_1000853A4()
{
  unint64_t result = qword_1000D6C88;
  if (!qword_1000D6C88)
  {
    sub_100004B80(&qword_1000D6C80);
    sub_100085444();
    sub_10001FF28(&qword_1000D69C8, &qword_1000D69D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6C88);
  }
  return result;
}

unint64_t sub_100085444()
{
  unint64_t result = qword_1000D6C90;
  if (!qword_1000D6C90)
  {
    sub_100004B80(&qword_1000D6C98);
    sub_1000854E4();
    sub_10001FF28(&qword_1000D6048, &qword_1000D6050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6C90);
  }
  return result;
}

unint64_t sub_1000854E4()
{
  unint64_t result = qword_1000D6CA0;
  if (!qword_1000D6CA0)
  {
    sub_100004B80(&qword_1000D6CA8);
    sub_100085584();
    sub_10001FF28(&qword_1000D69B8, &qword_1000D69C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6CA0);
  }
  return result;
}

unint64_t sub_100085584()
{
  unint64_t result = qword_1000D6CB0;
  if (!qword_1000D6CB0)
  {
    sub_100004B80(&qword_1000D6CB8);
    sub_100085624();
    sub_10001FF28(&qword_1000D69A8, &qword_1000D69B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6CB0);
  }
  return result;
}

unint64_t sub_100085624()
{
  unint64_t result = qword_1000D6CC0;
  if (!qword_1000D6CC0)
  {
    sub_100004B80(&qword_1000D6CC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6CC0);
  }
  return result;
}

uint64_t sub_100085698(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100085710()
{
  return sub_100085774(&qword_1000D6CD8, &qword_1000D6C30, (void (*)(void))sub_10008574C);
}

uint64_t sub_10008574C()
{
  return sub_100085774(&qword_1000D6CE0, &qword_1000D6C28, (void (*)(void))sub_1000857F4);
}

uint64_t sub_100085774(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000857F4()
{
  unint64_t result = qword_1000D6CE8;
  if (!qword_1000D6CE8)
  {
    sub_100004B80(&qword_1000D6C20);
    sub_10001FF28(&qword_1000D6CF0, &qword_1000D6C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6CE8);
  }
  return result;
}

uint64_t sub_100085894(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return _swift_task_switch(sub_1000858B4, 0, 0);
}

uint64_t sub_1000858B4()
{
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1)
  {
    if (v1 == 1)
    {
      id v2 = [*(id *)(v0 + 40) homes];
      sub_10002E604();
      uint64_t v3 = sub_1000B4100();

      sub_1000B4290();
      uint64_t v4 = (void *)swift_task_alloc();
      *uint64_t v4 = sub_100004210(&qword_1000D5558);
      v4[1] = sub_10008717C(&qword_1000D5560);
      v4[2] = sub_1000880CC(&qword_1000D5568, (void (*)(uint64_t))sub_10002E604);
      v4[3] = &protocol witness table for HMHome;
      v4[4] = sub_1000880CC(&qword_1000D5570, (void (*)(uint64_t))sub_10002E604);
      v4[5] = sub_1000880CC(&qword_1000D5578, (void (*)(uint64_t))sub_10002E604);
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      uint64_t v6 = swift_task_alloc();
      *(void *)(v6 + 16) = sub_10008716C;
      *(void *)(v6 + 24) = KeyPath;
      *(void *)(v0 + 16) = v3;
    }
    else
    {
      id v9 = [*(id *)(v0 + 40) homes];
      sub_10002E604();
      unint64_t v10 = sub_1000B4100();

      sub_1000871C4(v1);
      uint64_t v11 = sub_10002C6DC(v10, v1);
      sub_10002E5F4(v1);
      swift_bridgeObjectRelease();
      sub_1000B4290();
      uint64_t v12 = (void *)swift_task_alloc();
      *uint64_t v12 = sub_100004210(&qword_1000D5558);
      v12[1] = sub_10008717C(&qword_1000D5560);
      v12[2] = sub_1000880CC(&qword_1000D5568, (void (*)(uint64_t))sub_10002E604);
      uint64_t v12[3] = &protocol witness table for HMHome;
      v12[4] = sub_1000880CC(&qword_1000D5570, (void (*)(uint64_t))sub_10002E604);
      v12[5] = sub_1000880CC(&qword_1000D5578, (void (*)(uint64_t))sub_10002E604);
      uint64_t v13 = swift_getKeyPath();
      swift_task_dealloc();
      uint64_t v14 = swift_task_alloc();
      *(void *)(v14 + 16) = sub_10008716C;
      *(void *)(v14 + 24) = v13;
      *(void *)(v0 + 24) = v11;
    }
    sub_10008717C(&qword_1000D5580);
    swift_retain();
    uint64_t v15 = sub_1000B40B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v16(v15);
  }
  else
  {
    uint64_t v17 = (uint64_t (__cdecl *)())((char *)&dword_1000D6D00 + dword_1000D6D00);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v7;
    void *v7 = v0;
    v7[1] = sub_100085DD0;
    return v17();
  }
}

uint64_t sub_100085DD0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100085ED0, 0, 0);
}

uint64_t sub_100085ED0()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    id v2 = v1;
    sub_1000B40E0();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000B4130();
    }
    sub_1000B4150();
    sub_1000B4120();
  }

  uint64_t v3 = *(uint64_t (**)(void *))(v0 + 8);
  return v3(_swiftEmptyArrayStorage);
}

uint64_t sub_100085FB0(char a1)
{
  return *(void *)&aCurrent_0[8 * a1];
}

uint64_t sub_100085FD0(void *a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_100004210(&qword_1000D6D70);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  __chkstk_darwin(v3);
  uint64_t v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004210(&qword_1000D6D78);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004210(&qword_1000D6D80);
  uint64_t v20 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004210(&qword_1000D6D88);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C804(a1, a1[3]);
  sub_100087EE8();
  uint64_t v15 = v26;
  sub_1000B4910();
  if (!v15)
  {
    char v28 = 0;
    sub_100087FE4();
    sub_1000B4780();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (v15 == 1)
  {
    char v29 = 1;
    sub_100087F90();
    sub_1000B4780();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  char v30 = 2;
  sub_100087F3C();
  uint64_t v17 = v23;
  sub_1000B4780();
  uint64_t v27 = v15;
  sub_100004210(&qword_1000D6D48);
  sub_100088038(&qword_1000D6D90, &qword_1000D6D98);
  uint64_t v18 = v25;
  sub_1000B47D0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1000863D8()
{
  return 0;
}

uint64_t sub_1000863E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_100086414(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100086420(uint64_t a1)
{
  unint64_t v2 = sub_100087F90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008645C(uint64_t a1)
{
  unint64_t v2 = sub_100087F90();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100086498()
{
  return sub_100085FB0(*v0);
}

uint64_t sub_1000864A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100087794(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000864C8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1000864D4(uint64_t a1)
{
  unint64_t v2 = sub_100087EE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100086510(uint64_t a1)
{
  unint64_t v2 = sub_100087EE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10008654C(uint64_t a1)
{
  unint64_t v2 = sub_100087FE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100086588(uint64_t a1)
{
  unint64_t v2 = sub_100087FE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000865C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000878BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1000865F4(uint64_t a1)
{
  unint64_t v2 = sub_100087F3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100086630(uint64_t a1)
{
  unint64_t v2 = sub_100087F3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10008666C(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (!v2) {
    return !v3;
  }
  if (v2 == 1) {
    return v3 == 1;
  }
  if (v3 < 2) {
    return 0;
  }
  return sub_10008697C(v2, v3);
}

Swift::Int sub_1000866AC()
{
  uint64_t v1 = *v0;
  sub_1000B48C0();
  if (v1)
  {
    if (v1 != 1)
    {
      sub_1000B48D0(2uLL);
      sub_100086E0C(v4, v1);
      return sub_1000B48F0();
    }
    Swift::UInt v2 = 1;
  }
  else
  {
    Swift::UInt v2 = 0;
  }
  sub_1000B48D0(v2);
  return sub_1000B48F0();
}

void sub_100086720(long long *a1)
{
  uint64_t v3 = *v1;
  if (!*v1)
  {
    Swift::UInt v4 = 0;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    Swift::UInt v4 = 1;
LABEL_5:
    sub_1000B48D0(v4);
    return;
  }
  sub_1000B48D0(2uLL);

  sub_100086E0C(a1, v3);
}

Swift::Int sub_1000867A0()
{
  uint64_t v1 = *v0;
  sub_1000B48C0();
  if (v1)
  {
    if (v1 != 1)
    {
      sub_1000B48D0(2uLL);
      sub_100086E0C(v4, v1);
      return sub_1000B48F0();
    }
    Swift::UInt v2 = 1;
  }
  else
  {
    Swift::UInt v2 = 0;
  }
  sub_1000B48D0(v2);
  return sub_1000B48F0();
}

uint64_t sub_100086810@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100087938(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10008683C(void *a1)
{
  return sub_100085FD0(a1, *v1);
}

uint64_t sub_100086858(uint64_t a1)
{
  if (a1 == 1) {
    return 7105633;
  }
  if (!a1) {
    return 0x746E6572727563;
  }
  sub_1000B2F60();
  sub_1000880CC((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  v2._countAndFlagsBits = sub_1000B41F0();
  sub_1000B4090(v2);
  swift_bridgeObjectRelease();
  return 0x3A796C6E6FLL;
}

uint64_t sub_100086934()
{
  return sub_100086858(*v0);
}

uint64_t sub_10008693C()
{
  qword_1000DCC60 = *UserHomeSettings.shared.unsafeMutableAddressor();
  *(void *)algn_1000DCC68 = &protocol witness table for UserHomeSettings;

  return swift_retain();
}

uint64_t sub_10008697C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B2F60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  char v45 = (char *)&v34 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1000880CC((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v27 = sub_1000B3F50();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1000880CC(&qword_1000D5B30, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v32 = sub_1000B3F90();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    uint64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100086DC4()
{
  return 48;
}

__n128 sub_100086DD0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_100086DEC()
{
  return 48;
}

__n128 sub_100086DF8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

void sub_100086E0C(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000B2F60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004210(&qword_1000D5008);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *((void *)a1 + 8);
  long long v12 = a1[1];
  long long v36 = *a1;
  long long v37 = v12;
  long long v13 = a1[2];
  long long v14 = a1[3];
  uint64_t v28 = a1;
  long long v38 = v13;
  long long v39 = v14;
  uint64_t v40 = v11;
  Swift::Int v15 = sub_1000B48F0();
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v30 = a2 + 56;
  Swift::Int v31 = v15;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v29 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v33 = v5 + 16;
  uint64_t v34 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v32 = v5 + 48;
  uint64_t v35 = a2;
  swift_bridgeObjectRetain();
  Swift::UInt v20 = 0;
  int64_t v21 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(void *)(v35 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
      goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1000880CC((unint64_t *)&qword_1000D4FB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v27 = sub_1000B3F50();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v20 ^= v27;
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v21++, 1)) {
      goto LABEL_21;
    }
    if (v21 >= v29) {
      goto LABEL_18;
    }
    unint64_t v25 = *(void *)(v30 + 8 * v21);
    if (!v25) {
      break;
    }
LABEL_14:
    unint64_t v19 = (v25 - 1) & v25;
  }
  int64_t v26 = v21 + 1;
  if (v21 + 1 >= v29)
  {
LABEL_18:
    (*v34)(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    sub_1000B48D0(v20);
    return;
  }
  unint64_t v25 = *(void *)(v30 + 8 * v26);
  if (v25)
  {
    ++v21;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v21 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v21 >= v29) {
      goto LABEL_18;
    }
    unint64_t v25 = *(void *)(v30 + 8 * v21);
    ++v26;
    if (v25) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_10008716C()
{
  return sub_10002C618();
}

uint64_t sub_100087174@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10002C64C(a1, *(uint64_t (**)(uint64_t *))(v2 + 16), a2);
}

uint64_t sub_10008717C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(&qword_1000D5558);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000871C4(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000871D4()
{
  return _swift_task_switch(sub_1000871F0, 0, 0);
}

uint64_t sub_1000871F0()
{
  *(void *)(v0 + 16) = *HomeWidget.shared.unsafeMutableAddressor();
  swift_retain();
  uint64_t v1 = HomeSettingsActor.shared.unsafeMutableAddressor();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = *v1;
  return _swift_task_switch(sub_100087268, v2, 0);
}

uint64_t sub_100087268()
{
  if (qword_1000D4EC0 != -1) {
    swift_once();
  }
  return _swift_task_switch(sub_1000872F8, 0, 0);
}

uint64_t sub_1000872F8()
{
  return _swift_task_switch(sub_100087318, **(void **)(v0 + 24), 0);
}

uint64_t sub_100087318()
{
  uint64_t v2 = qword_1000DCC60;
  uint64_t v1 = *(void *)algn_1000DCC68;
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *long long v3 = v0;
  v3[1] = sub_1000873C8;
  return HomeWidget.recommendedHome(userSettings:)(v2, v1);
}

uint64_t sub_1000873C8(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_errorRelease();
    a1 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
  return v5(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeScope(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for HomeScope(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for HomeScope(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *initializeWithTake for HomeScope(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for HomeScope(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeScope(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HomeScope(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1000876F4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10008770C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for HomeScope()
{
  return &type metadata for HomeScope;
}

unint64_t sub_100087740()
{
  unint64_t result = qword_1000D6D08;
  if (!qword_1000D6D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6D08);
  }
  return result;
}

uint64_t sub_100087794(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746E6572727563 && a2 == 0xE700000000000000;
  if (v3 || (sub_1000B4830() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7105633 && a2 == 0xE300000000000000 || (sub_1000B4830() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2037149295 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1000B4830();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000878BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1000B4830();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10008792C()
{
  return 12383;
}

uint64_t sub_100087938(void *a1)
{
  uint64_t v26 = sub_100004210(&qword_1000D6D10);
  uint64_t v28 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  int64_t v29 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100004210(&qword_1000D6D18);
  uint64_t v27 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  char v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004210(&qword_1000D6D20);
  uint64_t v24 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004210(&qword_1000D6D28);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v30 = a1;
  uint64_t v13 = (uint64_t)sub_10003C804(a1, v12);
  sub_100087EE8();
  uint64_t v14 = v31;
  sub_1000B4900();
  if (!v14)
  {
    uint64_t v31 = v5;
    Swift::Int v15 = v29;
    uint64_t v16 = sub_1000B4770();
    if (*(void *)(v16 + 16) == 1)
    {
      if (*(unsigned char *)(v16 + 32))
      {
        if (*(unsigned char *)(v16 + 32) == 1)
        {
          char v34 = 1;
          sub_100087F90();
          sub_1000B4700();
          (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v25);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          uint64_t v13 = 1;
        }
        else
        {
          char v35 = 2;
          sub_100087F3C();
          sub_1000B4700();
          sub_100004210(&qword_1000D6D48);
          sub_100088038(&qword_1000D6D50, &qword_1000D6D58);
          int64_t v21 = v15;
          uint64_t v22 = v26;
          sub_1000B4750();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v22);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          uint64_t v13 = v32;
        }
      }
      else
      {
        char v33 = 0;
        sub_100087FE4();
        sub_1000B4700();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        uint64_t v13 = 0;
      }
    }
    else
    {
      uint64_t v17 = sub_1000B4610();
      swift_allocError();
      unint64_t v19 = v18;
      sub_100004210(&qword_1000D6D38);
      *unint64_t v19 = &type metadata for HomeScope;
      uint64_t v13 = (uint64_t)v11;
      sub_1000B4710();
      sub_1000B4600();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, enum case for DecodingError.typeMismatch(_:), v17);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  sub_10002ACE4((uint64_t)v30);
  return v13;
}

unint64_t sub_100087EE8()
{
  unint64_t result = qword_1000D6D30;
  if (!qword_1000D6D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6D30);
  }
  return result;
}

unint64_t sub_100087F3C()
{
  unint64_t result = qword_1000D6D40;
  if (!qword_1000D6D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6D40);
  }
  return result;
}

unint64_t sub_100087F90()
{
  unint64_t result = qword_1000D6D60;
  if (!qword_1000D6D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6D60);
  }
  return result;
}

unint64_t sub_100087FE4()
{
  unint64_t result = qword_1000D6D68;
  if (!qword_1000D6D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6D68);
  }
  return result;
}

uint64_t sub_100088038(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(&qword_1000D6D48);
    sub_1000880CC(a2, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000880CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TileStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HomeScope.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100088270);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeScope.CodingKeys()
{
  return &type metadata for HomeScope.CodingKeys;
}

ValueMetadata *type metadata accessor for HomeScope.CurrentCodingKeys()
{
  return &type metadata for HomeScope.CurrentCodingKeys;
}

ValueMetadata *type metadata accessor for HomeScope.AllCodingKeys()
{
  return &type metadata for HomeScope.AllCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for HomeScope.OnlyCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100088364);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeScope.OnlyCodingKeys()
{
  return &type metadata for HomeScope.OnlyCodingKeys;
}

unint64_t sub_1000883A0()
{
  unint64_t result = qword_1000D6DA0;
  if (!qword_1000D6DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DA0);
  }
  return result;
}

unint64_t sub_1000883F8()
{
  unint64_t result = qword_1000D6DA8;
  if (!qword_1000D6DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DA8);
  }
  return result;
}

unint64_t sub_100088450()
{
  unint64_t result = qword_1000D6DB0;
  if (!qword_1000D6DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DB0);
  }
  return result;
}

unint64_t sub_1000884A8()
{
  unint64_t result = qword_1000D6DB8;
  if (!qword_1000D6DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DB8);
  }
  return result;
}

unint64_t sub_100088500()
{
  unint64_t result = qword_1000D6DC0;
  if (!qword_1000D6DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DC0);
  }
  return result;
}

unint64_t sub_100088558()
{
  unint64_t result = qword_1000D6DC8;
  if (!qword_1000D6DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DC8);
  }
  return result;
}

unint64_t sub_1000885B0()
{
  unint64_t result = qword_1000D6DD0;
  if (!qword_1000D6DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DD0);
  }
  return result;
}

unint64_t sub_100088608()
{
  unint64_t result = qword_1000D6DD8;
  if (!qword_1000D6DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DD8);
  }
  return result;
}

unint64_t sub_100088660()
{
  unint64_t result = qword_1000D6DE0;
  if (!qword_1000D6DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DE0);
  }
  return result;
}

unint64_t sub_1000886B8()
{
  unint64_t result = qword_1000D6DE8;
  if (!qword_1000D6DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6DE8);
  }
  return result;
}

uint64_t TileNameAndStatusView.init(roomName:name:statusString:font:tileStyle:isActivated:isInFlight:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>, unsigned __int8 a10, unsigned __int8 a11)
{
  unint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v33 = a5;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  int v38 = a10;
  int v39 = a11;
  uint64_t v15 = sub_1000B3AD0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F98);
  swift_storeEnumTagMultiPayload();
  unint64_t v19 = (int *)type metadata accessor for TileNameAndStatusView();
  Swift::UInt v20 = (uint64_t *)((char *)a9 + v19[5]);
  uint64_t *v20 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F88);
  char v21 = a8;
  swift_storeEnumTagMultiPayload();
  if (a2) {
    uint64_t v22 = a1;
  }
  else {
    uint64_t v22 = 0;
  }
  unint64_t v23 = 0xE000000000000000;
  if (a2) {
    unint64_t v23 = a2;
  }
  uint64_t v24 = (uint64_t *)((char *)a9 + v19[6]);
  *uint64_t v24 = v22;
  v24[1] = v23;
  uint64_t v25 = (uint64_t *)((char *)a9 + v19[7]);
  uint64_t v26 = v35;
  *uint64_t v25 = v34;
  v25[1] = v26;
  if (a8 != 1)
  {
    char v27 = sub_1000B4830();
    swift_bridgeObjectRelease();
    if (!a2 || (v27 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v28 = 0;
    unint64_t v29 = 0;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  if (a2) {
    goto LABEL_11;
  }
LABEL_12:
  uint64_t v28 = v33;
  if (!v36) {
    uint64_t v28 = 0;
  }
  unint64_t v29 = 0xE000000000000000;
  if (v36) {
    unint64_t v29 = v36;
  }
LABEL_16:
  uint64_t v30 = (uint64_t *)((char *)a9 + v19[8]);
  *uint64_t v30 = v28;
  v30[1] = v29;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for Font.Leading.tight(_:), v15);
  uint64_t v31 = sub_1000B3AE0();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  *(uint64_t *)((char *)a9 + v19[9]) = v31;
  *((unsigned char *)a9 + v19[10]) = v21;
  *((unsigned char *)a9 + v19[11]) = v38 & 1;
  *((unsigned char *)a9 + v19[12]) = v39 & 1;
  return result;
}

uint64_t sub_1000889FC@<X0>(unsigned __int16 a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000B3E20();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  int v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v17 - v9;
  sub_1000B3780();
  sub_1000B3DF0();
  char v11 = sub_1000B3DE0();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  if ((v11 & 1) != 0 && (a1 & 1) == 0)
  {
    uint64_t result = sub_1000B3C70();
LABEL_10:
    uint64_t v16 = result;
    goto LABEL_11;
  }
  char v14 = a1;
  if (HIBYTE(a1) == 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t result = sub_1000B3CB0();
    goto LABEL_10;
  }
  char v15 = sub_1000B4830();
  swift_bridgeObjectRelease();
  if (v15 & 1) != 0 || (v14) {
    goto LABEL_9;
  }
  sub_1000B3CC0();
  uint64_t v16 = sub_1000B3CA0();
  uint64_t result = swift_release();
LABEL_11:
  *a2 = v16;
  return result;
}

uint64_t sub_100088C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static ShapeStyle._makeView<A>(view:inputs:)(a1, a2, a5, a3, a6, a4);
}

uint64_t sub_100088C20@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000889FC(*v1 | (unsigned __int16)(v1[1] << 8), a1);
}

uint64_t sub_100088C30()
{
  return sub_1000B36C0();
}

uint64_t sub_100088C54(uint64_t a1)
{
  uint64_t v2 = sub_1000B3870();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1000B36D0();
}

uint64_t TileNameAndStatusView.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TileNameAndStatusView() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TileNameAndStatusView.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TileNameAndStatusView() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TileNameAndStatusView.statusString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TileNameAndStatusView() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TileNameAndStatusView.font.getter()
{
  type metadata accessor for TileNameAndStatusView();

  return swift_retain();
}

uint64_t TileNameAndStatusView.tileStyle.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TileNameAndStatusView() + 40));
}

uint64_t TileNameAndStatusView.isActivated.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TileNameAndStatusView() + 44));
}

BOOL sub_100088E58()
{
  uint64_t v1 = sub_1000B3870();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = type metadata accessor for TileNameAndStatusView();
  uint64_t v9 = (void *)(v0 + *(int *)(v8 + 32));
  unint64_t v10 = v9[1];
  if (v10)
  {
    uint64_t v11 = *v9 & 0xFFFFFFFFFFFFLL;
    if (!((v10 & 0x2000000000000000) != 0 ? HIBYTE(v10) & 0xF : v11)) {
      return 0;
    }
  }
  if (!*(unsigned char *)(v0 + *(int *)(v8 + 40)))
  {
    sub_10007F188((uint64_t)v7);
    char v14 = (unsigned int *)&enum case for ContentSizeCategory.extraExtraLarge(_:);
LABEL_11:
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *v14, v1);
    BOOL v13 = sub_10008C548((uint64_t)v7, (uint64_t)v5);
    char v15 = *(void (**)(char *, uint64_t))(v2 + 8);
    v15(v5, v1);
    v15(v7, v1);
    return v13;
  }
  if (*(unsigned char *)(v0 + *(int *)(v8 + 40)) != 1)
  {
    sub_10007F188((uint64_t)v7);
    char v14 = (unsigned int *)&enum case for ContentSizeCategory.extraExtraExtraLarge(_:);
    goto LABEL_11;
  }
  return 0;
}

uint64_t sub_100088FF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000B3870();
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = (int *)type metadata accessor for TileNameAndStatusView();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  BOOL v13 = (char *)&v41 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  unint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v41 - v21;
  uint64_t v23 = *(void *)(v1 + *(int *)(v20 + 32) + 8);
  sub_10008C268(v1, (uint64_t)&v41 - v21);
  if (!v23) {
    goto LABEL_9;
  }
  uint64_t v24 = &v22[v8[8]];
  uint64_t v25 = *((void *)v24 + 1);
  if (!v25)
  {
    sub_10008C2CC((uint64_t)v22);
    sub_10008C268(v1, (uint64_t)v19);
    goto LABEL_20;
  }
  if (!*(void *)v24 && v25 == 0xE000000000000000)
  {
LABEL_9:
    sub_10008C2CC((uint64_t)v22);
    sub_10008C268(v1, (uint64_t)v19);
    goto LABEL_10;
  }
  char v27 = sub_1000B4830();
  sub_10008C2CC((uint64_t)v22);
  sub_10008C268(v1, (uint64_t)v19);
  if (v27)
  {
LABEL_10:
    sub_10008C2CC((uint64_t)v19);
    sub_10008C268(v1, (uint64_t)v16);
    goto LABEL_11;
  }
LABEL_20:
  BOOL v38 = sub_100088E58();
  sub_10008C2CC((uint64_t)v19);
  sub_10008C268(v1, (uint64_t)v16);
  if (v38)
  {
    sub_10008C2CC((uint64_t)v16);
    sub_10008C268(v1, (uint64_t)v13);
LABEL_22:
    char v37 = 0;
    goto LABEL_26;
  }
LABEL_11:
  uint64_t v28 = &v16[v8[6]];
  uint64_t v30 = *(void *)v28;
  unint64_t v29 = *((void *)v28 + 1);
  uint64_t v31 = v30 & 0xFFFFFFFFFFFFLL;
  if ((v29 & 0x2000000000000000) != 0) {
    uint64_t v32 = HIBYTE(v29) & 0xF;
  }
  else {
    uint64_t v32 = v31;
  }
  sub_10008C2CC((uint64_t)v16);
  sub_10008C268(v1, (uint64_t)v13);
  if (v32) {
    goto LABEL_22;
  }
  sub_10007F188((uint64_t)v7);
  uint64_t v33 = v41;
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v5, enum case for ContentSizeCategory.extraLarge(_:), v2);
  BOOL v34 = sub_10008C960((uint64_t)v7, (uint64_t)v5);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v33 + 8);
  v35(v5, v2);
  v35(v7, v2);
  uint64_t v36 = v42;
  sub_10008C268((uint64_t)v13, v42);
  if (v34)
  {
    if (*(unsigned char *)(v36 + v8[10]) && *(unsigned char *)(v36 + v8[10]) == 1)
    {
      swift_bridgeObjectRelease();
      char v37 = 0;
    }
    else
    {
      char v39 = sub_1000B4830();
      swift_bridgeObjectRelease();
      char v37 = v39 ^ 1;
    }
  }
  else
  {
    char v37 = 1;
  }
  sub_10008C2CC(v36);
LABEL_26:
  sub_10008C2CC((uint64_t)v13);
  return v37 & 1;
}

uint64_t TileNameAndStatusView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v19 = a1;
  uint64_t v3 = sub_1000B3D90();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004210(&qword_1000D6DF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004210(&qword_1000D6DF8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  BOOL v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B3890();
  uint64_t v15 = *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for TileNameAndStatusView() + 40)) == 1;
  *(void *)uint64_t v9 = v14;
  *((void *)v9 + 1) = v15 << 62;
  v9[16] = 0;
  uint64_t v16 = sub_100004210(&qword_1000D6E00);
  sub_100089614(v2, (uint64_t)&v9[*(int *)(v16 + 44)]);
  sub_1000B3D70();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v13[*(int *)(v11 + 44)], v6, v3);
  sub_1000206A0((uint64_t)v9, (uint64_t)v13, &qword_1000D6DF0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100017B5C((uint64_t)v9, &qword_1000D6DF0);
  return sub_10006B62C((uint64_t)v13, v19, &qword_1000D6DF8);
}

uint64_t sub_100089614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v144 = a2;
  uint64_t v3 = sub_100004210(&qword_1000D6ED8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v145 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v143 = (uint64_t *)((char *)&v127 - v6);
  uint64_t v140 = sub_1000B3E20();
  uint64_t v139 = *(void *)(v140 - 8);
  uint64_t v7 = __chkstk_darwin(v140);
  char v138 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v137 = (uint64_t)&v127 - v9;
  uint64_t v148 = sub_100004210(&qword_1000D6EE0);
  uint64_t v157 = *(void *)(v148 - 8);
  uint64_t v10 = __chkstk_darwin(v148);
  uint64_t v147 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v146 = (char *)&v127 - v13;
  __chkstk_darwin(v12);
  uint64_t v156 = (char *)&v127 - v14;
  uint64_t v15 = sub_1000B3B40();
  uint64_t v151 = *(void *)(v15 - 8);
  uint64_t v152 = v15;
  __chkstk_darwin(v15);
  unint64_t v150 = (char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100004210(&qword_1000D6EE8);
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  char v133 = (char *)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_100004210(&qword_1000D6EF0);
  uint64_t v141 = *(void *)(v142 - 8);
  uint64_t v18 = __chkstk_darwin(v142);
  uint64_t v132 = (char *)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v131 = (uint64_t)&v127 - v20;
  uint64_t v21 = sub_100004210(&qword_1000D6EF8);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v155 = (uint64_t)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v158 = (uint64_t)&v127 - v24;
  uint64_t v130 = sub_1000B3870();
  uint64_t v129 = *(void *)(v130 - 8);
  uint64_t v25 = __chkstk_darwin(v130);
  double v128 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v127 = (uint64_t)&v127 - v27;
  uint64_t v28 = type metadata accessor for TileNameAndStatusView();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v127 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v29);
  BOOL v34 = (char *)&v127 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v127 - v35;
  uint64_t v37 = sub_1000B2D70();
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v127 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (uint64_t *)(a1 + *(int *)(v28 + 24));
  uint64_t v42 = v41[1];
  uint64_t v159 = *v41;
  uint64_t v160 = v42;
  swift_bridgeObjectRetain();
  sub_1000B2D60();
  unint64_t v149 = sub_100004BC8();
  uint64_t v136 = sub_1000B4430();
  unint64_t v44 = v43;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
  swift_bridgeObjectRelease();
  uint64_t v153 = *(int *)(v28 + 40);
  uint64_t v154 = (int *)v28;
  if (*(unsigned char *)(a1 + v153) && *(unsigned char *)(a1 + v153) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10008C268(a1, (uint64_t)v36);
  }
  else
  {
    char v45 = sub_1000B4830();
    swift_bridgeObjectRelease();
    sub_10008C268(a1, (uint64_t)v36);
    if ((v45 & 1) == 0)
    {
      sub_10008C2CC((uint64_t)v36);
      swift_bridgeObjectRelease();
      sub_10008C268(a1, (uint64_t)v31);
      goto LABEL_15;
    }
  }
  if (v36[v154[10]] && v36[v154[10]] == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v46 = sub_1000B4830();
    swift_bridgeObjectRelease();
    if ((v46 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_10008C268((uint64_t)v36, (uint64_t)v34);
LABEL_23:
      sub_10008C2CC((uint64_t)v34);
      sub_10008C2CC((uint64_t)v36);
      sub_10008C268(a1, (uint64_t)v31);
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
  if ((v44 & 0x2000000000000000) != 0) {
    uint64_t v47 = HIBYTE(v44) & 0xF;
  }
  else {
    uint64_t v47 = v136 & 0xFFFFFFFFFFFFLL;
  }
  sub_10008C268((uint64_t)v36, (uint64_t)v34);
  if (!v47) {
    goto LABEL_23;
  }
  uint64_t v48 = v127;
  sub_10007F188(v127);
  uint64_t v49 = v129;
  uint64_t v50 = (uint64_t)v128;
  uint64_t v51 = v130;
  (*(void (**)(char *, void, uint64_t))(v129 + 104))(v128, enum case for ContentSizeCategory.extraLarge(_:), v130);
  LODWORD(v136) = sub_10008CD78(v48, v50);
  uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v52(v50, v51);
  v52(v48, v51);
  sub_10008C2CC((uint64_t)v34);
  sub_10008C2CC((uint64_t)v36);
  sub_10008C268(a1, (uint64_t)v31);
  if ((v136 & 1) == 0)
  {
LABEL_24:
    sub_10008C2CC((uint64_t)v31);
    int v69 = 0;
    uint64_t v70 = 1;
    uint64_t v71 = v142;
    uint64_t v72 = v141;
    uint64_t v53 = v154;
    goto LABEL_31;
  }
LABEL_15:
  uint64_t v53 = v154;
  id v54 = &v31[v154[6]];
  uint64_t v56 = *(void *)v54;
  unint64_t v55 = *((void *)v54 + 1);
  uint64_t v57 = v56 & 0xFFFFFFFFFFFFLL;
  if ((v55 & 0x2000000000000000) != 0) {
    uint64_t v58 = HIBYTE(v55) & 0xF;
  }
  else {
    uint64_t v58 = v57;
  }
  sub_10008C2CC((uint64_t)v31);
  if (v58)
  {
    uint64_t v59 = v41[1];
    uint64_t v159 = *v41;
    uint64_t v160 = v59;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_1000B3B50();
    uint64_t v62 = v61;
    char v64 = v63;
    uint64_t v66 = v65;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v68 = swift_getKeyPath();
    if (*(unsigned char *)(a1 + v153) && *(unsigned char *)(a1 + v153) == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v73 = sub_1000B4830();
      swift_bridgeObjectRelease();
      if ((v73 & 1) == 0)
      {
        uint64_t v74 = *(void *)(a1 + v53[9]);
        swift_retain();
        goto LABEL_29;
      }
    }
    sub_1000B3AA0();
    uint64_t v74 = sub_1000B3AC0();
LABEL_29:
    uint64_t v75 = swift_getKeyPath();
    char v76 = *(unsigned char *)(a1 + v53[11]);
    char v77 = *(unsigned char *)(a1 + v153);
    uint64_t v159 = v60;
    uint64_t v160 = v62;
    char v161 = v64 & 1;
    uint64_t v162 = v66;
    uint64_t v163 = KeyPath;
    int v69 = 1;
    LOBYTE(v164) = 1;
    uint64_t v165 = v68;
    uint64_t v166 = 1;
    LOBYTE(v167) = 0;
    uint64_t v168 = v75;
    uint64_t v169 = v74;
    LOBYTE(v170) = v76;
    BYTE1(v170) = v77;
    uint64_t v78 = v150;
    sub_1000B3B30();
    sub_100004210(&qword_1000D6F18);
    sub_10008C4A8();
    uint64_t v79 = v133;
    sub_1000B3B90();
    (*(void (**)(char *, uint64_t))(v151 + 8))(v78, v152);
    sub_10005B938(v159, v160, v161);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v80 = v134;
    uint64_t v81 = (uint64_t)v132;
    uint64_t v82 = v135;
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v132, v79, v135);
    uint64_t v71 = v142;
    *(_WORD *)(v81 + *(int *)(v142 + 36)) = 256;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v82);
    uint64_t v83 = v131;
    sub_10006B62C(v81, v131, &qword_1000D6EF0);
    sub_10006B62C(v83, v158, &qword_1000D6EF0);
    uint64_t v70 = 0;
    goto LABEL_30;
  }
  int v69 = 0;
  uint64_t v70 = 1;
  uint64_t v71 = v142;
LABEL_30:
  uint64_t v72 = v141;
LABEL_31:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v158, v70, 1, v71);
  char v84 = (uint64_t *)(a1 + v53[7]);
  uint64_t v85 = v84[1];
  uint64_t v159 = *v84;
  uint64_t v160 = v85;
  swift_bridgeObjectRetain();
  uint64_t v86 = sub_1000B3B50();
  uint64_t v88 = v87;
  LODWORD(v154) = v89;
  uint64_t v91 = v90;
  unint64_t v149 = swift_getKeyPath();
  if (sub_100088FF0()) {
    uint64_t v92 = 2;
  }
  else {
    uint64_t v92 = 1;
  }
  uint64_t v142 = v92;
  uint64_t v93 = swift_getKeyPath();
  int v94 = *(unsigned __int8 *)(a1 + v153);
  uint64_t v141 = v93;
  if (v94 == 1)
  {
    swift_bridgeObjectRelease();
    if ((v69 & 1) == 0)
    {
LABEL_36:
      sub_1000B3AA0();
      uint64_t v95 = sub_1000B3AC0();
      goto LABEL_39;
    }
  }
  else
  {
    int v96 = sub_1000B4830();
    swift_bridgeObjectRelease();
    if ((v96 & v69) != 1) {
      goto LABEL_36;
    }
  }
  uint64_t v95 = *(void *)(a1 + v53[9]);
  swift_retain();
LABEL_39:
  uint64_t v97 = swift_getKeyPath();
  if (*(unsigned char *)(a1 + v53[11]) == 1)
  {
    uint64_t v98 = sub_1000B3CB0();
  }
  else
  {
    uint64_t v136 = v88;
    uint64_t v153 = v86;
    uint64_t v99 = v91;
    uint64_t v100 = v137;
    sub_10007F150(v137);
    uint64_t v101 = v138;
    sub_1000B3DF0();
    char v102 = sub_1000B3DE0();
    uint64_t v103 = *(void (**)(char *, uint64_t))(v139 + 8);
    uint64_t v104 = v101;
    uint64_t v105 = v140;
    v103(v104, v140);
    v103((char *)v100, v105);
    if (v102) {
      uint64_t v98 = sub_1000B3C70();
    }
    else {
      uint64_t v98 = sub_1000B3CB0();
    }
    uint64_t v91 = v99;
    uint64_t v86 = v153;
    uint64_t v88 = v136;
  }
  uint64_t v159 = v86;
  uint64_t v160 = v88;
  char v161 = v154 & 1;
  uint64_t v162 = v91;
  LOWORD(v163) = 256;
  unint64_t v164 = v149;
  LOBYTE(v165) = 1;
  uint64_t v166 = v141;
  uint64_t v167 = v142;
  LOBYTE(v168) = 0;
  uint64_t v169 = v97;
  uint64_t v170 = v95;
  uint64_t v171 = v98;
  uint64_t v106 = v150;
  sub_1000B3B30();
  sub_100004210(&qword_1000D6C80);
  sub_1000853A4();
  uint64_t v107 = v146;
  sub_1000B3B90();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v106, v152);
  sub_10005B938(v159, v160, v161);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v108 = v148;
  (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v156, v107, v148);
  uint64_t v109 = (uint64_t *)(a1 + v53[8]);
  uint64_t v110 = v109[1];
  if (v110 && (uint64_t v111 = *v109, sub_100088E58()))
  {
    uint64_t v112 = sub_1000B37F0();
    uint64_t v113 = (uint64_t)v143;
    uint64_t *v143 = v112;
    *(void *)(v113 + 8) = 0;
    *(unsigned char *)(v113 + 16) = 1;
    uint64_t v114 = sub_100004210(&qword_1000D6F10);
    sub_10008A7BC(v111, v110, a1, (char *)(v113 + *(int *)(v114 + 44)));
    uint64_t v115 = sub_100004210(&qword_1000D6F00);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v113, 0, 1, v115);
  }
  else
  {
    uint64_t v116 = sub_100004210(&qword_1000D6F00);
    uint64_t v113 = (uint64_t)v143;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v143, 1, 1, v116);
  }
  uint64_t v117 = (uint64_t)v145;
  uint64_t v118 = v144;
  uint64_t v119 = v155;
  sub_1000206A0(v158, v155, &qword_1000D6EF8);
  uint64_t v120 = v156;
  uint64_t v121 = v157;
  char v122 = *(void (**)(char *, char *, uint64_t))(v157 + 16);
  uint64_t v123 = v147;
  v122(v147, v156, v108);
  sub_1000206A0(v113, v117, &qword_1000D6ED8);
  sub_1000206A0(v119, v118, &qword_1000D6EF8);
  uint64_t v124 = sub_100004210(&qword_1000D6F08);
  v122((char *)(v118 + *(int *)(v124 + 48)), v123, v108);
  sub_1000206A0(v117, v118 + *(int *)(v124 + 64), &qword_1000D6ED8);
  sub_100017B5C(v113, &qword_1000D6ED8);
  uint64_t v125 = *(void (**)(char *, uint64_t))(v121 + 8);
  v125(v120, v108);
  sub_100017B5C(v158, &qword_1000D6EF8);
  sub_100017B5C(v117, &qword_1000D6ED8);
  v125(v123, v108);
  return sub_100017B5C(v155, &qword_1000D6EF8);
}

uint64_t sub_10008A7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v82 = a4;
  uint64_t v83 = a3;
  uint64_t v74 = a2;
  uint64_t v75 = a1;
  uint64_t v81 = type metadata accessor for InFlightProgressView();
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v65 = (uint64_t *)((char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = type metadata accessor for TileNameAndStatusView();
  __chkstk_darwin(v66);
  uint64_t v73 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100004210(&qword_1000D6F38);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v80 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v78 = (char *)&v65 - v9;
  uint64_t v10 = sub_1000B3B40();
  uint64_t v76 = *(void *)(v10 - 8);
  uint64_t v77 = v10;
  __chkstk_darwin(v10);
  uint64_t v72 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000B35A0();
  uint64_t v12 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100004210(&qword_1000D6F40);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100004210(&qword_1000D6F48);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100004210(&qword_1000D6F50);
  __chkstk_darwin(v70);
  uint64_t v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100004210(&qword_1000D6F58);
  uint64_t v67 = *(void *)(v68 - 8);
  uint64_t v25 = __chkstk_darwin(v68 - 8);
  int v69 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v65 - v27;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000B3590();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v71;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v14, v71);
  uint64_t v31 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v31 = KeyPath;
  v31[8] = 1;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  uint64_t v32 = swift_getKeyPath();
  sub_1000206A0((uint64_t)v18, (uint64_t)v22, &qword_1000D6F40);
  uint64_t v33 = v67;
  BOOL v34 = &v22[*(int *)(v20 + 44)];
  *(void *)BOOL v34 = v32;
  *((void *)v34 + 1) = 1;
  uint64_t v35 = v28;
  v34[16] = 0;
  sub_100017B5C((uint64_t)v18, &qword_1000D6F40);
  uint64_t v36 = v66;
  uint64_t v37 = v83;
  LOBYTE(v32) = *(unsigned char *)(v83 + *(int *)(v66 + 44));
  LOBYTE(v28) = *(unsigned char *)(v83 + *(int *)(v66 + 40));
  sub_1000206A0((uint64_t)v22, (uint64_t)v24, &qword_1000D6F48);
  uint64_t v38 = &v24[*(int *)(v70 + 36)];
  *uint64_t v38 = v32;
  v38[1] = (char)v28;
  uint64_t v39 = v37;
  sub_100017B5C((uint64_t)v22, &qword_1000D6F48);
  uint64_t v40 = v72;
  sub_1000B3B30();
  sub_10008D190();
  uint64_t v41 = v69;
  sub_1000B3B90();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v40, v77);
  uint64_t v42 = (uint64_t)v24;
  uint64_t v43 = v36;
  sub_100017B5C(v42, &qword_1000D6F50);
  uint64_t v44 = v33;
  char v45 = *(void (**)(char *, char *))(v33 + 32);
  uint64_t v77 = (uint64_t)v35;
  uint64_t v46 = v68;
  v45(v35, v41);
  uint64_t v47 = *(int *)(v43 + 48);
  LODWORD(v40) = *(unsigned __int8 *)(v37 + v47);
  uint64_t v48 = v73;
  sub_10008C268(v37, v73);
  if (v40 == 1)
  {
    if (*(unsigned char *)(v48 + *(int *)(v43 + 40)))
    {
      uint64_t v49 = (uint64_t)v78;
      if (*(unsigned char *)(v48 + *(int *)(v43 + 40)) != 1)
      {
        swift_bridgeObjectRelease();
        sub_10008C2CC(v48);
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v49 = (uint64_t)v78;
    }
    char v52 = sub_1000B4830();
    swift_bridgeObjectRelease();
    sub_10008C2CC(v48);
    if ((v52 & 1) == 0)
    {
      uint64_t v50 = 1;
      uint64_t v51 = v81;
      goto LABEL_11;
    }
LABEL_10:
    char v53 = *(unsigned char *)(v39 + v47);
    uint64_t v54 = swift_getKeyPath();
    uint64_t v55 = (uint64_t)v65;
    *uint64_t v65 = v54;
    sub_100004210(&qword_1000D5C80);
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = v81;
    uint64_t v56 = (uint64_t *)(v55 + *(int *)(v81 + 20));
    *uint64_t v56 = swift_getKeyPath();
    sub_100004210(&qword_1000D4F88);
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = v55 + *(int *)(v51 + 24);
    *(void *)uint64_t v57 = swift_getKeyPath();
    *(unsigned char *)(v57 + 8) = 0;
    *(unsigned char *)(v55 + *(int *)(v51 + 28)) = v53;
    sub_10008D3D0(v55, v49);
    uint64_t v50 = 0;
    goto LABEL_11;
  }
  sub_10008C2CC(v48);
  uint64_t v50 = 1;
  uint64_t v51 = v81;
  uint64_t v49 = (uint64_t)v78;
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v49, v50, 1, v51);
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
  uint64_t v59 = v77;
  v58(v41, v77, v46);
  uint64_t v60 = v80;
  sub_1000206A0(v49, v80, &qword_1000D6F38);
  uint64_t v61 = v82;
  v58(v82, (uint64_t)v41, v46);
  uint64_t v62 = sub_100004210(&qword_1000D6F80);
  sub_1000206A0(v60, (uint64_t)&v61[*(int *)(v62 + 48)], &qword_1000D6F38);
  sub_100017B5C(v49, &qword_1000D6F38);
  char v63 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v63(v59, v46);
  sub_100017B5C(v60, &qword_1000D6F38);
  return ((uint64_t (*)(char *, uint64_t))v63)(v41, v46);
}

uint64_t sub_10008AFDC()
{
  return sub_1000B36C0();
}

uint64_t type metadata accessor for TileNameAndStatusView()
{
  uint64_t result = qword_1000D6E60;
  if (!qword_1000D6E60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008B058()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for TileNameAndStatusView(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100004210(&qword_1000D4F98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3870();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)((char *)v4 + v14);
    uint64_t v19 = (void *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (void *)((char *)v4 + v21);
    uint64_t v24 = (void *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    *(void *)((char *)v4 + v22) = *(void *)((char *)a2 + v22);
    uint64_t v26 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)v4 + v26) = *((unsigned char *)a2 + v26);
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for TileNameAndStatusView(uint64_t a1, uint64_t a2)
{
  sub_100004210(&qword_1000D4F98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000B3870();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *initializeWithCopy for TileNameAndStatusView(void *a1, void *a2, int *a3)
{
  sub_100004210(&qword_1000D4F98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3870();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)((char *)a1 + v12);
  uint64_t v17 = (void *)((char *)a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v24 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TileNameAndStatusView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F98);
    sub_100004210(&qword_1000D4F98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000B3870();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100017B5C((uint64_t)a1 + v7, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

char *initializeWithTake for TileNameAndStatusView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D4F98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3870();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1000B3E20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v15] = a2[v15];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

char *assignWithTake for TileNameAndStatusView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F98);
    uint64_t v6 = sub_100004210(&qword_1000D4F98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3870();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100017B5C((uint64_t)&a1[v8], &qword_1000D4F88);
    uint64_t v11 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000B3E20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v27 = *(void *)v25;
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = v27;
  *((void *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_release();
  uint64_t v28 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v28] = a2[v28];
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for TileNameAndStatusView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008BBF4);
}

uint64_t sub_10008BBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D67C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100004210(&qword_1000D5EE0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TileNameAndStatusView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008BD28);
}

uint64_t sub_10008BD28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100004210(&qword_1000D67C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100004210(&qword_1000D5EE0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_10008BE44()
{
  sub_10008BF7C(319, (unint64_t *)&unk_1000D6830, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  if (v0 <= 0x3F)
  {
    sub_10008BF7C(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10008BF7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000B3630();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_10008BFD4()
{
  unint64_t result = qword_1000D6EB8;
  if (!qword_1000D6EB8)
  {
    sub_100004B80(&qword_1000D6DF8);
    sub_10001FF28(&qword_1000D6EC0, &qword_1000D6DF0);
    sub_10001FF28(&qword_1000D6EC8, &qword_1000D6ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6EB8);
  }
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for SecondaryForegroundStyle(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SecondaryForegroundStyle(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SecondaryForegroundStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008C214);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecondaryForegroundStyle()
{
  return &type metadata for SecondaryForegroundStyle;
}

uint64_t sub_10008C24C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008C268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TileNameAndStatusView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008C2CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TileNameAndStatusView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008C328@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000B36E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10008C358@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000B36E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10008C388()
{
  return sub_1000B36F0();
}

uint64_t sub_10008C3B0()
{
  return sub_1000B36F0();
}

uint64_t sub_10008C3D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000B37A0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10008C40C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000B37A0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10008C440()
{
  return sub_1000B37B0();
}

uint64_t sub_10008C470()
{
  return sub_1000B37B0();
}

unint64_t sub_10008C4A8()
{
  unint64_t result = qword_1000D6F20;
  if (!qword_1000D6F20)
  {
    sub_100004B80(&qword_1000D6F18);
    sub_10007D124();
    sub_10001FF28(&qword_1000D6F28, &qword_1000D6F30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6F20);
  }
  return result;
}

BOOL sub_10008C548(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_1000B3870();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  BOOL v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a1, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v12 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v12 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v12 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v13 = 4;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v13 = 5;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v13 = 6;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v13 = 7;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v13 = 8;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v13 = 9;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v16 = 1;
  }
  else if (v15 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != enum case for ContentSizeCategory.large(_:))
    {
      if (v15 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v16 = 4;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v16 = 5;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v16 = 6;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v16 = 7;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v16 = 8;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v16 = 9;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v16 = 10;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v16 = 11;
        return v13 < v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 < v16;
}

BOOL sub_10008C960(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v3 = sub_1000B3870();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  BOOL v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a2, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v12 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v12 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v12 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v13 = 4;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v13 = 5;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v13 = 6;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v13 = 7;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v13 = 8;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v13 = 9;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v16 = 1;
  }
  else if (v15 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != enum case for ContentSizeCategory.large(_:))
    {
      if (v15 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v16 = 4;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v16 = 5;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v16 = 6;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v16 = 7;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v16 = 8;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v16 = 9;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v16 = 10;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v16 = 11;
        return v13 < v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 < v16;
}

BOOL sub_10008CD78(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v3 = sub_1000B3870();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  BOOL v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a2, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v12 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v12 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v12 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v13 = 4;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v13 = 5;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v13 = 6;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v13 = 7;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v13 = 8;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v13 = 9;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v16 = 1;
  }
  else if (v15 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != enum case for ContentSizeCategory.large(_:))
    {
      if (v15 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v16 = 4;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v16 = 5;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v16 = 6;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v16 = 7;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v16 = 8;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v16 = 9;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v16 = 10;
        return v13 >= v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v16 = 11;
        return v13 >= v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 >= v16;
}

unint64_t sub_10008D190()
{
  unint64_t result = qword_1000D6F60;
  if (!qword_1000D6F60)
  {
    sub_100004B80(&qword_1000D6F50);
    sub_10008D230();
    sub_10001FF28(&qword_1000D6F28, &qword_1000D6F30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6F60);
  }
  return result;
}

unint64_t sub_10008D230()
{
  unint64_t result = qword_1000D6F68;
  if (!qword_1000D6F68)
  {
    sub_100004B80(&qword_1000D6F48);
    sub_10008D2D0();
    sub_10001FF28(&qword_1000D69B8, &qword_1000D69C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6F68);
  }
  return result;
}

unint64_t sub_10008D2D0()
{
  unint64_t result = qword_1000D6F70;
  if (!qword_1000D6F70)
  {
    sub_100004B80(&qword_1000D6F40);
    sub_10008D370();
    sub_10001FF28(&qword_1000D69A8, &qword_1000D69B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6F70);
  }
  return result;
}

unint64_t sub_10008D370()
{
  unint64_t result = qword_1000D6F78;
  if (!qword_1000D6F78)
  {
    sub_1000B35A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6F78);
  }
  return result;
}

uint64_t sub_10008D3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InFlightProgressView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10008D434()
{
  return &protocol witness table for Color;
}

unint64_t sub_10008D444()
{
  unint64_t result = qword_1000D6F88;
  if (!qword_1000D6F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6F88);
  }
  return result;
}

unint64_t sub_10008D49C()
{
  unint64_t result = qword_1000D6F90;
  if (!qword_1000D6F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6F90);
  }
  return result;
}

uint64_t sub_10008D4F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008D50C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008D55C()
{
  uint64_t v0 = sub_1000B2C70();
  sub_100022374(v0, qword_1000DCC70);
  uint64_t v1 = sub_100017618(v0, (uint64_t)qword_1000DCC70);
  uint64_t v2 = enum case for IntentAuthenticationPolicy.alwaysAllowed(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_10008D5E4()
{
  uint64_t v0 = sub_1000B2DA0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000B2FA0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000B3FF0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000B2DC0();
  sub_100022374(v6, qword_1000DCC88);
  sub_100017618(v6, (uint64_t)qword_1000DCC88);
  sub_1000B3FA0();
  sub_1000B2F90();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1000B2DD0();
}

uint64_t sub_10008D7D4(uint64_t a1, uint64_t a2)
{
  v2[90] = a2;
  v2[89] = a1;
  uint64_t v3 = sub_1000B3570();
  v2[91] = v3;
  v2[92] = *(void *)(v3 - 8);
  v2[93] = swift_task_alloc();
  v2[94] = type metadata accessor for AccessoryAndSceneEntity();
  v2[95] = swift_task_alloc();
  v2[96] = type metadata accessor for WidgetTileInfo();
  v2[97] = swift_task_alloc();
  return _swift_task_switch(sub_10008D8F8, 0, 0);
}

uint64_t sub_10008D8F8()
{
  uint64_t v32 = v0;
  uint64_t v1 = v0[97];
  uint64_t v2 = v0[96];
  uint64_t v3 = v0[95];
  uint64_t v4 = v0[94];
  sub_1000B2990();
  sub_10002E52C(v3 + *(int *)(v4 + 24), v1, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  sub_100030438(v3, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  unsigned int v5 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 56) + 8);
  if (v5 < 3)
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v0[99] = v6;
    *uint64_t v6 = v0;
    BOOL v7 = sub_10008E1A8;
LABEL_5:
    v6[1] = v7;
    return sub_100071930();
  }
  if (v5 == 3)
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v0[98] = v6;
    *uint64_t v6 = v0;
    BOOL v7 = sub_10008DD68;
    goto LABEL_5;
  }
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v9 = v0[93];
  uint64_t v10 = v0[92];
  uint64_t v11 = v0[91];
  uint64_t v12 = sub_100017618(v11, (uint64_t)qword_1000DCC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
  swift_retain();
  unint64_t v13 = sub_1000B3550();
  os_log_type_t v14 = sub_1000B42C0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = v0[95];
    uint64_t v26 = v0[94];
    uint64_t v27 = v0[96];
    uint64_t v28 = v0[92];
    uint64_t v29 = v0[91];
    uint64_t v30 = v0[93];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    v0[87] = sub_10002A68C(0x286D726F66726570, 0xE900000000000029, &v31);
    sub_1000B4400();
    *(_WORD *)(v16 + 12) = 2080;
    sub_1000B2990();
    uint64_t v17 = (uint64_t *)(v15 + *(int *)(v26 + 24) + *(int *)(v27 + 24));
    uint64_t v19 = *v17;
    unint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    sub_100030438(v15, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    v0[88] = sub_10002A68C(v19, v18, &v31);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s %s sent toggle() to device", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    uint64_t v20 = v0[93];
    uint64_t v21 = v0[92];
    uint64_t v22 = v0[91];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  uint64_t v23 = v0[97];
  uint64_t v24 = v0[90];
  uint64_t v25 = swift_task_alloc();
  v0[100] = v25;
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v23;
  swift_asyncLet_begin();
  sub_1000B2970();
  return _swift_asyncLet_finish(v0 + 2);
}

uint64_t sub_10008DD68()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10008DE64, 0, 0);
}

uint64_t sub_10008DE64()
{
  uint64_t v25 = v0;
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[93];
  uint64_t v2 = v0[92];
  uint64_t v3 = v0[91];
  uint64_t v4 = sub_100017618(v3, (uint64_t)qword_1000DCC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_retain();
  unsigned int v5 = sub_1000B3550();
  os_log_type_t v6 = sub_1000B42C0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[95];
    uint64_t v19 = v0[94];
    uint64_t v20 = v0[96];
    uint64_t v21 = v0[92];
    uint64_t v22 = v0[91];
    uint64_t v23 = v0[93];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[87] = sub_10002A68C(0x286D726F66726570, 0xE900000000000029, &v24);
    sub_1000B4400();
    *(_WORD *)(v8 + 12) = 2080;
    sub_1000B2990();
    uint64_t v9 = (uint64_t *)(v7 + *(int *)(v19 + 24) + *(int *)(v20 + 24));
    uint64_t v11 = *v9;
    unint64_t v10 = v9[1];
    swift_bridgeObjectRetain();
    sub_100030438(v7, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    v0[88] = sub_10002A68C(v11, v10, &v24);
    sub_1000B4400();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s %s sent toggle() to device", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    uint64_t v12 = v0[93];
    uint64_t v13 = v0[92];
    uint64_t v14 = v0[91];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[97];
  uint64_t v16 = v0[90];
  uint64_t v17 = swift_task_alloc();
  v0[100] = v17;
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v15;
  swift_asyncLet_begin();
  sub_1000B2970();
  return _swift_asyncLet_finish(v0 + 2);
}

uint64_t sub_10008E1A8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10008F7A4, 0, 0);
}

uint64_t sub_10008E2A4()
{
  return _swift_task_switch(sub_10008E2C0, 0, 0);
}

uint64_t sub_10008E2C0()
{
  uint64_t v1 = *(void *)(v0 + 776);
  swift_task_dealloc();
  sub_100030438(v1, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10008E36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  *unsigned int v5 = v3;
  v5[1] = sub_100041A40;
  return sub_10008F13C(a3);
}

uint64_t sub_10008E400@<X0>(uint64_t a1@<X8>)
{
  return sub_10002FCD4(&qword_1000D4ED0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1000DCC88, a1);
}

uint64_t sub_10008E438@<X0>(uint64_t a1@<X8>)
{
  return sub_10002FCD4(&qword_1000D4EC8, (uint64_t (*)(void))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_1000DCC70, a1);
}

uint64_t sub_10008E470(uint64_t a1)
{
  uint64_t v4 = *v1;
  unsigned int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unsigned int v5 = v2;
  v5[1] = sub_100021DB0;
  return sub_10008D7D4(a1, v4);
}

uint64_t sub_10008E510@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008EB78();
  *a1 = result;
  return result;
}

uint64_t sub_10008E538(uint64_t a1)
{
  unint64_t v2 = sub_100067A5C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for SecureToggleIntent()
{
  return &type metadata for SecureToggleIntent;
}

uint64_t sub_10008E584(uint64_t a1)
{
  uint64_t v39 = a1;
  uint64_t v35 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v33 = *(void *)(v35 - 8);
  uint64_t v1 = __chkstk_darwin(v35);
  uint64_t v38 = (uint64_t)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v37 = (uint64_t)v28 - v3;
  uint64_t v36 = sub_1000B2BB0();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v32 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100004210(&qword_1000D5370);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v31 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v30 = (char *)v28 - v8;
  uint64_t v9 = sub_100004210(&qword_1000D55D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v29 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000B2DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000B2FA0();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = sub_1000B3FF0();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = sub_1000B2DC0();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  v28[1] = sub_100004210(&qword_1000D55D8);
  sub_1000B3FA0();
  sub_1000B2F90();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  sub_1000B2DD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v13, 1, 1, v20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v29, 1, 1, v35);
  uint64_t v22 = sub_1000B2960();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v30, 1, 1, v22);
  v23(v31, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v32, enum case for InputConnectionBehavior.default(_:), v36);
  sub_100030380();
  uint64_t v24 = sub_1000B29E0();
  uint64_t v25 = v39;
  uint64_t v26 = v37;
  sub_10002E52C(v39, v37, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  sub_10002E52C(v26, v38, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  swift_retain();
  sub_1000B29A0();
  sub_100030438(v26, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  swift_release();
  sub_100030438(v25, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  return v24;
}

uint64_t sub_10008EB78()
{
  uint64_t v0 = sub_1000B2BB0();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100004210(&qword_1000D5370);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)&v23 - v5;
  uint64_t v6 = sub_100004210(&qword_1000D55D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v24 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100004210(&qword_1000D5380);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000B2DA0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000B2FA0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000B3FF0();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_1000B2DC0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v23 = sub_100004210(&qword_1000D55D8);
  sub_1000B3FA0();
  sub_1000B2F90();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  sub_1000B2DD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v10, 1, 1, v17);
  uint64_t v19 = type metadata accessor for AccessoryAndSceneEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v24, 1, 1, v19);
  uint64_t v20 = sub_1000B2960();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v25, 1, 1, v20);
  v21(v26, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  sub_100030380();
  return sub_1000B29E0();
}

uint64_t sub_10008F064()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100021DB0;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100041A40;
  return sub_10008F13C(v2);
}

uint64_t sub_10008F13C(uint64_t a1)
{
  v1[15] = a1;
  v1[16] = type metadata accessor for WidgetTileInfo();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  uint64_t v2 = sub_1000B31A0();
  v1[19] = v2;
  v1[20] = *(void *)(v2 - 8);
  v1[21] = swift_task_alloc();
  return _swift_task_switch(sub_10008F23C, 0, 0);
}

uint64_t sub_10008F23C()
{
  uint64_t v42 = v0;
  *(void *)(v0 + 88) = 0;
  *(_WORD *)(v0 + 192) = 256;
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 120);
  unint64_t v3 = 0xE000000000000000;
  *(void *)(v0 + 96) = 0xE000000000000000;
  uint64_t v4 = v2 + *(int *)(v1 + 56);
  if (*(unsigned char *)(v4 + 8) == 2)
  {
    uint64_t v11 = 0;
    *(unsigned char *)(v0 + 193) = 0;
    *(unsigned char *)(v0 + 192) = 1;
    int v39 = 0;
    int v40 = 1;
  }
  else if (*(unsigned char *)(v4 + 8))
  {
    int v39 = 1;
    int v40 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v7 = *(void *)(v0 + 152);
    id v8 = *(id *)v4;
    sub_1000B43B0();
    uint64_t v9 = sub_1000B3180();
    unint64_t v3 = v10;

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v11 = v9;
    *(void *)(v0 + 88) = v9;
    *(void *)(v0 + 96) = v3;
    int v39 = 1;
    int v40 = 0;
  }
  if (qword_1000D4EA8 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = *(void *)(v0 + 144);
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v15 = sub_1000B3570();
  sub_100017618(v15, (uint64_t)qword_1000DCC18);
  sub_10002E52C(v14, v13, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  sub_10002E52C(v14, v12, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_1000B3550();
  os_log_type_t v17 = sub_1000B42C0();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v20 = *(void *)(v0 + 136);
  uint64_t v19 = *(void *)(v0 + 144);
  if (v18)
  {
    uint64_t v37 = *(void *)(v0 + 128);
    os_log_type_t type = v17;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136316418;
    *(void *)(v0 + 104) = sub_10002A68C(0xD00000000000001FLL, 0x80000001000BA050, &v41);
    sub_1000B4400();
    *(_WORD *)(v21 + 12) = 1024;
    *(_DWORD *)(v0 + 180) = v39;
    sub_1000B4400();
    *(_WORD *)(v21 + 18) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 112) = sub_10002A68C(v11, v3, &v41);
    sub_1000B4400();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 28) = 1024;
    *(_DWORD *)(v0 + 184) = v40;
    sub_1000B4400();
    *(_WORD *)(v21 + 34) = 1024;
    int v22 = *(unsigned __int8 *)(v19 + *(int *)(v37 + 52));
    sub_100030438(v19, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    *(_DWORD *)(v0 + 188) = v22;
    sub_1000B4400();
    *(_WORD *)(v21 + 40) = 1024;
    int v23 = sub_10001A910() & 1;
    sub_100030438(v20, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    *(_DWORD *)(v0 + 176) = v23;
    sub_1000B4400();
    _os_log_impl((void *)&_mh_execute_header, v16, type, "%s - isAccessory:%{BOOL}d accessoryCategoryType:%s isScene:%{BOOL}d isReachable:%{BOOL}d isActivated:%{BOOL}d", (uint8_t *)v21, 0x2Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100030438(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    sub_100030438(v19, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v24 = *(void *)(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 128);
  swift_beginAccess();
  uint64_t v26 = *(unsigned __int8 *)(v0 + 193);
  swift_beginAccess();
  uint64_t v27 = *(void *)(v0 + 88);
  uint64_t v28 = *(void *)(v0 + 96);
  swift_beginAccess();
  uint64_t v29 = *(unsigned __int8 *)(v0 + 192);
  LODWORD(v25) = *(unsigned __int8 *)(v24 + *(int *)(v25 + 52));
  char v30 = sub_10001A910();
  uint64_t v31 = 256;
  if (!v25) {
    uint64_t v31 = 0;
  }
  uint64_t v32 = 0x10000;
  if ((v30 & 1) == 0) {
    uint64_t v32 = 0;
  }
  uint64_t v33 = v31 | v29 | v32 | 0x2000000;
  type metadata accessor for WidgetAnalyticsEvent();
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 16) = 1;
  *(void *)(v34 + 24) = v26;
  *(void *)(v34 + 32) = v27;
  *(void *)(v34 + 40) = v28;
  *(void *)(v34 + 48) = v33;
  *(void *)(v34 + 56) = 0;
  *(unsigned char *)(v34 + 64) = 1;
  sub_10006F728(0, 0, 1);
  sub_10006CB14(v34);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

Swift::Int sub_10008F7A8()
{
  return sub_1000B48F0();
}

uint64_t sub_10008F814@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = sub_1000B3690();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (double *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100093E24(a1, a3, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v14 = (int *)type metadata accessor for TileView(0);
  uint64_t v15 = (double *)(a3 + v14[7]);
  *uint64_t v15 = a4;
  v15[1] = a5;
  uint64_t v16 = type metadata accessor for AccessoryAndSceneEntity();
  sub_100093E24(a1 + *(int *)(v16 + 24), a3 + v14[5], (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  *(unsigned char *)(a3 + v14[6]) = a2;
  double v17 = a5 * 0.25;
  BOOL v18 = (char *)v13 + *(int *)(v11 + 28);
  uint64_t v19 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v20 = sub_1000B3860();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
  *uint64_t v13 = v17;
  v13[1] = v17;
  sub_100093E8C(a1, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  return sub_1000A0388((uint64_t)v13, a3 + v14[8], (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
}

_UNKNOWN **static TileStyle.allCases.getter()
{
  return &off_1000CEF68;
}

uint64_t TileStyle.rawValue.getter(char a1)
{
  return *(void *)&aRectanglsmalls[8 * a1];
}

uint64_t sub_10008F9E4(char *a1, char *a2)
{
  return sub_1000A0AC8(*a1, *a2);
}

Swift::Int sub_10008F9F0()
{
  return sub_10008F7A8();
}

uint64_t sub_10008F9F8()
{
  return sub_1000A0D4C();
}

Swift::Int sub_10008FA00()
{
  return sub_1000A0FD4();
}

uint64_t sub_10008FA08@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s10HomeWidget9TileStyleO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10008FA38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TileStyle.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10008FA64(void *a1@<X8>)
{
  *a1 = &off_1000CEF90;
}

uint64_t TileView.style.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TileView(0) + 24));
}

uint64_t TileView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v43 = a1;
  uint64_t v3 = sub_1000B3840();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000B3690();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (int64x2_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for SingleTapTargetTileView(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_100004210(&qword_1000D6FC0);
  __chkstk_darwin(v15 - 8);
  uint64_t v42 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100093E24(v2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v17 = type metadata accessor for TileView(0);
  uint64_t v19 = *(int *)(v17 + 24);
  uint64_t v18 = *(int *)(v17 + 28);
  uint64_t v41 = v2;
  uint64_t v20 = (uint64_t *)(v2 + v18);
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  char v23 = *(unsigned char *)(v2 + v19);
  *uint64_t v14 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F88);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (char *)v14 + v12[5];
  *(void *)uint64_t v24 = swift_getKeyPath();
  v24[8] = 0;
  uint64_t v25 = (uint64_t *)((char *)v14 + v12[6]);
  *uint64_t v25 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F90);
  swift_storeEnumTagMultiPayload();
  sub_100093E24((uint64_t)v11, (uint64_t)v14 + v12[7], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v26 = (uint64_t *)((char *)v14 + v12[10]);
  *uint64_t v26 = v21;
  v26[1] = v22;
  *((unsigned char *)v14 + v12[9]) = v23;
  sub_100093E24((uint64_t)&v11[*(int *)(v9 + 32)], (uint64_t)v14 + v12[8], (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  uint64_t v27 = &v7->i8[*(int *)(v5 + 28)];
  uint64_t v28 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v29 = sub_1000B3860();
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v27, v28, v29);
  int64x2_t *v7 = vdupq_n_s64(0x4030C00000000000uLL);
  sub_100093E8C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  sub_1000A0388((uint64_t)v7, (uint64_t)v14 + v12[11], (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000B3830();
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  sub_1000B3820(v44);
  uint64_t v30 = v41 + *(int *)(v9 + 32);
  uint64_t v31 = type metadata accessor for WidgetTileInfo();
  uint64_t v32 = (uint64_t *)(v30 + *(int *)(v31 + 28));
  uint64_t v33 = v32[1];
  if (v33) {
    uint64_t v34 = *v32;
  }
  else {
    uint64_t v34 = 0;
  }
  if (v33) {
    uint64_t v35 = (void *)v32[1];
  }
  else {
    uint64_t v35 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v45._countAndFlagsBits = v34;
  v45._object = v35;
  sub_1000B3810(v45);
  swift_bridgeObjectRelease();
  v46._countAndFlagsBits = 44;
  v46._object = (void *)0xE100000000000000;
  sub_1000B3820(v46);
  sub_1000B3810(*(Swift::String *)(v30 + *(int *)(v31 + 24)));
  v47._countAndFlagsBits = 44;
  v47._object = (void *)0xE100000000000000;
  sub_1000B3820(v47);
  sub_1000A3DC8();
  if (v36._object)
  {
    object = v36._object;
  }
  else
  {
    v36._countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v36._object = object;
  sub_1000B3810(v36);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  sub_1000B3820(v48);
  sub_1000B3850();
  sub_100096B54(&qword_1000D6FC8, (void (*)(uint64_t))type metadata accessor for SingleTapTargetTileView);
  uint64_t v38 = (uint64_t)v42;
  sub_1000B3BE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100093E8C((uint64_t)v14, type metadata accessor for SingleTapTargetTileView);
  return sub_10006B62C(v38, v43, &qword_1000D6FC0);
}

uint64_t sub_10008FF88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v80 = sub_100004210(&qword_1000D7138);
  uint64_t v66 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v65 = (char *)v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100004210(&qword_1000D5378);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v62 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v61 - v6;
  uint64_t v82 = sub_1000B2E90();
  uint64_t v67 = *(void *)(v82 - 8);
  uint64_t v8 = __chkstk_darwin(v82);
  char v64 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v76 = (char *)v61 - v10;
  uint64_t v81 = sub_100004210(&qword_1000D7140);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004210(&qword_1000D5EE0);
  __chkstk_darwin(v12 - 8);
  int v69 = (void *)((char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000B3620();
  uint64_t v72 = *(void *)(v14 - 8);
  uint64_t v73 = v14;
  __chkstk_darwin(v14);
  uint64_t v71 = (uint64_t)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)type metadata accessor for NormalTileGutsViewToggleStyle(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for AccessoryAndSceneEntity();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100004210(&qword_1000D60F0);
  uint64_t v70 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  char v23 = (char *)v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100004210(&qword_1000D7148);
  uint64_t v75 = *(void *)(v24 - 8);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v68 = (char *)v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v74 = (char *)v61 - v27;
  uint64_t v28 = (int *)type metadata accessor for SingleTapTargetTileView(0);
  uint64_t v29 = v1 + v28[7];
  int v63 = sub_10001A910();
  if (sub_10001A5A8())
  {
    sub_10001A910();
    sub_100093E24(v29, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v83 = sub_10008E584((uint64_t)v21);
    sub_100067A5C();
    sub_1000B3D50();
    sub_100093E24(v29, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v30 = (uint64_t *)(v1 + v28[10]);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    char v33 = *(unsigned char *)(v1 + v28[9]);
    uint64_t v34 = v71;
    sub_10007EE5C(v71);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v36 = (uint64_t)v69;
    uint64_t *v69 = KeyPath;
    sub_100004210(&qword_1000D4F88);
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = swift_getKeyPath();
    sub_10006B62C(v36, (uint64_t)v18, &qword_1000D5EE0);
    uint64_t v38 = &v18[v16[5]];
    *(void *)uint64_t v38 = v37;
    v38[8] = 0;
    sub_1000A0388((uint64_t)v21, (uint64_t)&v18[v16[6]], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    int v39 = &v18[v16[7]];
    *(void *)int v39 = v31;
    *((void *)v39 + 1) = v32;
    v18[v16[8]] = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(&v18[v16[9]], v34, v73);
    uint64_t v40 = sub_10001FF28(&qword_1000D6158, &qword_1000D60F0);
    uint64_t v41 = sub_100096B54(&qword_1000D7170, (void (*)(uint64_t))type metadata accessor for NormalTileGutsViewToggleStyle);
    uint64_t v42 = v68;
    uint64_t v43 = v77;
    sub_1000B3BA0();
    sub_100093E8C((uint64_t)v18, type metadata accessor for NormalTileGutsViewToggleStyle);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v23, v43);
    uint64_t v45 = (uint64_t)v74;
    uint64_t v44 = v75;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v74, v42, v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v79, v45, v24);
    swift_storeEnumTagMultiPayload();
    uint64_t v83 = v43;
    char v84 = v16;
    uint64_t v85 = v40;
    uint64_t v86 = v41;
    swift_getOpaqueTypeConformance2();
    sub_10001FF28(&qword_1000D7178, &qword_1000D7138);
    sub_1000B3920();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v45, v24);
  }
  uint64_t v75 = v1;
  Swift::String v47 = v16;
  uint64_t v48 = v80;
  uint64_t v49 = v79;
  sub_100023850();
  uint64_t v50 = v67;
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
  int v52 = v51(v7, 1, v82);
  v61[1] = v24;
  v61[0] = v47;
  if (v52 != 1)
  {
    uint64_t v54 = v76;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v76, v7, v82);
    uint64_t v55 = v66;
    uint64_t v56 = v75;
    goto LABEL_7;
  }
  uint64_t v74 = v7;
  char v53 = v62;
  sub_1000B2E80();
  uint64_t result = v51(v53, 1, v82);
  if (result != 1)
  {
    uint64_t v54 = v76;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v76, v53, v82);
    sub_100017B5C((uint64_t)v74, &qword_1000D5378);
    uint64_t v55 = v66;
    uint64_t v56 = v75;
LABEL_7:
    uint64_t v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v50 + 16))(v64, v54, v82);
    __chkstk_darwin(v57);
    v61[-2] = v56;
    LOBYTE(v61[-1]) = v63 & 1;
    sub_100004210(&qword_1000D7150);
    sub_100099FD8();
    uint64_t v58 = v65;
    sub_1000B3B10();
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v49, v58, v48);
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = sub_10001FF28(&qword_1000D6158, &qword_1000D60F0);
    uint64_t v60 = sub_100096B54(&qword_1000D7170, (void (*)(uint64_t))type metadata accessor for NormalTileGutsViewToggleStyle);
    uint64_t v83 = v77;
    char v84 = (int *)v61[0];
    uint64_t v85 = v59;
    uint64_t v86 = v60;
    swift_getOpaqueTypeConformance2();
    sub_10001FF28(&qword_1000D7178, &qword_1000D7138);
    sub_1000B3920();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v76, v82);
  }
  __break(1u);
  return result;
}

uint64_t sub_100090AAC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v36 = a2;
  uint64_t v40 = a3;
  uint64_t v33 = type metadata accessor for AccessoryAndSceneEntity();
  __chkstk_darwin(v33);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000B3E20();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000B3620();
  uint64_t v9 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100004210(&qword_1000D7150);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = (int *)type metadata accessor for SingleTapTargetTileView(0);
  uint64_t v16 = a1 + v15[7];
  uint64_t v17 = (double *)(a1 + v15[10]);
  double v19 = *v17;
  double v18 = v17[1];
  int v35 = *(unsigned __int8 *)(a1 + v15[9]);
  sub_10007EE5C((uint64_t)v11);
  sub_10007F150((uint64_t)v8);
  uint64_t v20 = a1 + v15[5];
  uint64_t v21 = *(void *)v20;
  LOBYTE(a1) = *(unsigned char *)(v20 + 8);
  sub_100044118(*(void *)v20, a1);
  int v34 = sub_10007E9FC(v21, a1);
  sub_1000441FC(v21, a1);
  sub_100093E24(v16, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  char v22 = v36;
  if (v36)
  {
    char v23 = &v5[*(int *)(v33 + 24)];
    int v24 = v23[*(int *)(type metadata accessor for WidgetTileInfo() + 52)];
  }
  else
  {
    int v24 = 0;
  }
  sub_100093E8C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v25 = (double *)((char *)v14 + *(int *)(v12 + 36));
  uint64_t v26 = (char *)v25 + *(int *)(sub_1000B3690() + 20);
  uint64_t v27 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v28 = sub_1000B3860();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
  *uint64_t v25 = v18 * 0.25;
  v25[1] = v18 * 0.25;
  *uint64_t v14 = sub_1000B3DA0();
  v14[1] = v29;
  uint64_t v30 = sub_100004210(&qword_1000D7180);
  sub_100091050(v24, v16, v35, v22 & 1, (uint64_t)v8, v34 & 1, (uint64_t)v11, (uint64_t)v14 + *(int *)(v30 + 44), v19, v18);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v39);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  return sub_10006B62C((uint64_t)v14, v40, &qword_1000D7150);
}

uint64_t sub_100090E6C@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t *a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  uint64_t v30 = a4;
  uint64_t v17 = type metadata accessor for AccessoryAndSceneEntity();
  __chkstk_darwin(v17);
  double v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100093E24(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  if (a3)
  {
    uint64_t v20 = &v19[*(int *)(v17 + 24)];
    int v21 = v20[*(int *)(type metadata accessor for WidgetTileInfo() + 52)];
  }
  else
  {
    int v21 = 0;
  }
  sub_100093E8C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  char v22 = (double *)((char *)a7 + *(int *)(sub_100004210(&qword_1000D7150) + 36));
  char v23 = (char *)v22 + *(int *)(sub_1000B3690() + 20);
  uint64_t v24 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v25 = sub_1000B3860();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  *char v22 = a9 * 0.25;
  v22[1] = a9 * 0.25;
  *a7 = sub_1000B3DA0();
  a7[1] = v26;
  uint64_t v27 = sub_100004210(&qword_1000D7180);
  return sub_100091050(v21, a1, a2, a3 & 1, a5, a6 & 1, v30, (uint64_t)a7 + *(int *)(v27 + 44), a8, a9);
}

uint64_t sub_100091050@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v54 = a7;
  int v53 = a6;
  uint64_t v68 = a5;
  int v57 = a3;
  int v58 = a4;
  uint64_t v56 = a2;
  int v55 = a1;
  uint64_t v66 = a8;
  uint64_t v12 = sub_1000B3D90();
  uint64_t v64 = *(void *)(v12 - 8);
  uint64_t v65 = v12;
  __chkstk_darwin(v12);
  int v63 = &v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1000B3E20();
  uint64_t v67 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = &v52[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for NormalTileGutsView(0);
  uint64_t v18 = (int *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v52[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v59 = sub_100004210(&qword_1000D7188);
  __chkstk_darwin(v59);
  char v22 = &v52[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v60 = sub_100004210(&qword_1000D7190);
  uint64_t v23 = __chkstk_darwin(v60);
  uint64_t v61 = &v52[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = &v52[-v26];
  __chkstk_darwin(v25);
  uint64_t v29 = &v52[-v28];
  uint64_t v30 = type metadata accessor for AccentableBackgroundView(0);
  uint64_t v31 = v30 - 8;
  uint64_t v32 = __chkstk_darwin(v30);
  int v34 = &v52[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v32);
  int v36 = (uint64_t *)&v52[-v35];
  *int v36 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F88);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = *(int *)(v31 + 28);
  LOBYTE(v31) = v55;
  *((unsigned char *)v36 + v37) = v55;
  sub_100093E24(v56, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v38 = (double *)&v20[v18[7]];
  *uint64_t v38 = a9;
  v38[1] = a10;
  v20[v18[8]] = v57;
  v20[v18[9]] = v58;
  uint64_t v62 = v14;
  if (v31)
  {
    sub_1000B3E00();
    char v39 = sub_1000B3DE0();
    (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v16, v14);
    if (v39)
    {
      uint64_t v40 = sub_1000B3C60();
      goto LABEL_9;
    }
    if (qword_1000D4EF8 != -1) {
      swift_once();
    }
    uint64_t v40 = qword_1000DCCC0;
  }
  else
  {
    uint64_t v40 = sub_10009A128(v68, v53 & 1);
  }
  swift_retain();
LABEL_9:
  uint64_t v41 = v67;
  char v42 = sub_1000B39D0();
  sub_100093E24((uint64_t)v20, (uint64_t)v22, type metadata accessor for NormalTileGutsView);
  uint64_t v43 = &v22[*(int *)(v59 + 36)];
  *(void *)uint64_t v43 = v40;
  v43[8] = v42;
  sub_100093E8C((uint64_t)v20, type metadata accessor for NormalTileGutsView);
  sub_1000B3DF0();
  char v44 = sub_1000B3DE0();
  (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v16, v62);
  uint64_t v45 = v63;
  if (v44) {
    sub_1000B3D70();
  }
  else {
    sub_1000B3D80();
  }
  uint64_t v47 = v64;
  uint64_t v46 = v65;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v64 + 16))(&v27[*(int *)(v60 + 36)], v45, v65);
  sub_1000206A0((uint64_t)v22, (uint64_t)v27, &qword_1000D7188);
  (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v45, v46);
  sub_100017B5C((uint64_t)v22, &qword_1000D7188);
  sub_10006B62C((uint64_t)v27, (uint64_t)v29, &qword_1000D7190);
  sub_100093E24((uint64_t)v36, (uint64_t)v34, type metadata accessor for AccentableBackgroundView);
  uint64_t v48 = v61;
  sub_1000206A0((uint64_t)v29, (uint64_t)v61, &qword_1000D7190);
  uint64_t v49 = v66;
  sub_100093E24((uint64_t)v34, v66, type metadata accessor for AccentableBackgroundView);
  uint64_t v50 = sub_100004210(&qword_1000D7198);
  sub_1000206A0((uint64_t)v48, v49 + *(int *)(v50 + 48), &qword_1000D7190);
  sub_100017B5C((uint64_t)v29, &qword_1000D7190);
  sub_100093E8C((uint64_t)v36, type metadata accessor for AccentableBackgroundView);
  sub_100017B5C((uint64_t)v48, &qword_1000D7190);
  return sub_100093E8C((uint64_t)v34, type metadata accessor for AccentableBackgroundView);
}

uint64_t sub_100091644@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000B3E20();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for NormalTileGutsViewToggleStyle(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = sub_1000B3970();
  uint64_t v12 = v1 + v8[6];
  char v13 = sub_10002396C();
  sub_100093E24(v2, (uint64_t)v10, type metadata accessor for NormalTileGutsViewToggleStyle);
  uint64_t v26 = v4;
  if (v13)
  {
    type metadata accessor for AccessoryAndSceneEntity();
    int v14 = sub_10001A910();
    sub_100093E8C((uint64_t)v10, type metadata accessor for NormalTileGutsViewToggleStyle);
    if ((v11 ^ v14)) {
      LOBYTE(v11) = sub_10001A910();
    }
  }
  else
  {
    sub_100093E8C((uint64_t)v10, type metadata accessor for NormalTileGutsViewToggleStyle);
  }
  uint64_t v15 = (double *)(v2 + v8[7]);
  double v16 = *v15;
  double v17 = v15[1];
  uint64_t v18 = v2 + v8[9];
  int v19 = *(unsigned __int8 *)(v2 + v8[8]);
  sub_10007F150((uint64_t)v7);
  uint64_t v20 = v2 + v8[5];
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_100044118(*(void *)v20, v22);
  char v23 = sub_10007E9FC(v21, v22);
  sub_1000441FC(v21, v22);
  sub_100090E6C(v12, v19, v11 & 1, v18, (uint64_t)v7, v23 & 1, a1, v16, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v26);
}

uint64_t sub_1000918BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v3 = sub_100004210(&qword_1000D5D58);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = type metadata accessor for SmallSquareTileView();
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100004210(&qword_1000D7378);
  __chkstk_darwin(v40);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004210(&qword_1000D5EE0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for AccessoryAndSceneEntity();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = (int *)type metadata accessor for RectangleTileView(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v19 = (int *)type metadata accessor for NormalTileGutsView(0);
  if (!*(unsigned char *)(v1 + v19[6]))
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v20 = sub_1000B4830();
  swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_5:
    sub_100093E24(v2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v31 = (uint64_t *)(v2 + v19[5]);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    char v34 = *(unsigned char *)(v2 + v19[7]);
    *uint64_t v12 = swift_getKeyPath();
    sub_100004210(&qword_1000D4F88);
    swift_storeEnumTagMultiPayload();
    uint64_t KeyPath = swift_getKeyPath();
    sub_10006B62C((uint64_t)v12, (uint64_t)v18, &qword_1000D5EE0);
    int v36 = &v18[v16[5]];
    *(void *)int v36 = KeyPath;
    v36[8] = 0;
    sub_1000A0388((uint64_t)v15, (uint64_t)&v18[v16[6]], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
    uint64_t v37 = &v18[v16[7]];
    *(void *)uint64_t v37 = v32;
    *((void *)v37 + 1) = v33;
    v18[v16[8]] = v34;
    sub_100093E24((uint64_t)v18, (uint64_t)v9, type metadata accessor for RectangleTileView);
    swift_storeEnumTagMultiPayload();
    sub_100096B54(&qword_1000D7380, (void (*)(uint64_t))type metadata accessor for RectangleTileView);
    sub_100096B54(&qword_1000D7388, (void (*)(uint64_t))type metadata accessor for SmallSquareTileView);
    sub_1000B3920();
    uint64_t v29 = type metadata accessor for RectangleTileView;
    uint64_t v30 = (uint64_t)v18;
    return sub_100093E8C(v30, v29);
  }
  sub_100093E24(v2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v21 = (uint64_t *)(v2 + v19[5]);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  char v24 = *(unsigned char *)(v2 + v19[7]);
  uint64_t v25 = swift_getKeyPath();
  *uint64_t v12 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F88);
  swift_storeEnumTagMultiPayload();
  *uint64_t v5 = swift_getKeyPath();
  sub_100004210(&qword_1000D4F90);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = (int *)v41;
  *(void *)&v7[*(int *)(v41 + 28)] = v26;
  sub_100004210(&qword_1000D4F98);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v7 = v25;
  v7[8] = 0;
  sub_10006B62C((uint64_t)v12, (uint64_t)&v7[v27[5]], &qword_1000D5EE0);
  sub_10006B62C((uint64_t)v5, (uint64_t)&v7[v27[6]], &qword_1000D5D58);
  sub_1000A0388((uint64_t)v15, (uint64_t)&v7[v27[8]], (uint64_t (*)(void))type metadata accessor for AccessoryAndSceneEntity);
  uint64_t v28 = &v7[v27[9]];
  *(void *)uint64_t v28 = v22;
  *((void *)v28 + 1) = v23;
  v7[v27[10]] = v24;
  sub_100093E24((uint64_t)v7, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SmallSquareTileView);
  swift_storeEnumTagMultiPayload();
  sub_100096B54(&qword_1000D7380, (void (*)(uint64_t))type metadata accessor for RectangleTileView);
  sub_100096B54(&qword_1000D7388, (void (*)(uint64_t))type metadata accessor for SmallSquareTileView);
  sub_1000B3920();
  uint64_t v29 = (uint64_t (*)(void))type metadata accessor for SmallSquareTileView;
  uint64_t v30 = (uint64_t)v7;
  return sub_100093E8C(v30, v29);
}

uint64_t sub_100091F14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100004210(&qword_1000D7468);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100004210(&qword_1000D7470);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100004210(&qword_1000D7478);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_1000B3800();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v13 = sub_100004210(&qword_1000D7480);
  sub_1000921D0(v2, (uint64_t)&v6[*(int *)(v13 + 44)]);
  unsigned __int8 v14 = sub_1000B3A00();
  unsigned __int8 v15 = sub_1000B3A20();
  char v16 = sub_1000B3A10();
  sub_1000B3A10();
  if (sub_1000B3A10() != v14) {
    char v16 = sub_1000B3A10();
  }
  sub_1000B3A10();
  if (sub_1000B3A10() != v15) {
    char v16 = sub_1000B3A10();
  }
  type metadata accessor for RectangleTileView(0);
  sub_1000B35D0();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_1000206A0((uint64_t)v6, (uint64_t)v9, &qword_1000D7468);
  uint64_t v25 = &v9[*(int *)(v7 + 36)];
  *uint64_t v25 = v16;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v22;
  *((void *)v25 + 4) = v24;
  v25[40] = 0;
  sub_100017B5C((uint64_t)v6, &qword_1000D7468);
  sub_1000B3DA0();
  sub_1000B3660();
  sub_1000206A0((uint64_t)v9, (uint64_t)v12, &qword_1000D7470);
  uint64_t v26 = &v12[*(int *)(v10 + 36)];
  long long v27 = v29[1];
  *(_OWORD *)uint64_t v26 = v29[0];
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v29[2];
  sub_100017B5C((uint64_t)v9, &qword_1000D7470);
  return sub_10006B62C((uint64_t)v12, a1, &qword_1000D7478);
}

uint64_t sub_1000921D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v3 = type metadata accessor for RectangleTileView(0);
  __chkstk_darwin(v3);
  uint64_t v117 = (uint64_t)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000B3620();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v118 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_100004210(&qword_1000D5FE8);
  uint64_t v6 = __chkstk_darwin(v132);
  uint64_t v109 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v105 = (char *)&v94 - v8;
  uint64_t v128 = sub_1000B3680();
  uint64_t v9 = *(void **)(v128 - 8);
  uint64_t v10 = __chkstk_darwin(v128);
  uint64_t v127 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v126 = (char *)&v94 - v12;
  uint64_t v107 = sub_100004210(&qword_1000D5FF0);
  uint64_t v13 = __chkstk_darwin(v107);
  uint64_t v103 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v106 = (uint64_t)&v94 - v15;
  uint64_t v16 = sub_1000B3350();
  uint64_t v124 = *(void *)(v16 - 8);
  uint64_t v125 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for WidgetTileInfo();
  __chkstk_darwin(v131);
  uint64_t v130 = (uint64_t)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for TileNameAndStatusView();
  __chkstk_darwin(v102);
  uint64_t v134 = (uint64_t *)((char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v113 = sub_100004210(&qword_1000D68D8);
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v111 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100004210(&qword_1000D68E0);
  uint64_t v22 = __chkstk_darwin(v104);
  uint64_t v116 = (uint64_t)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v108 = (char *)&v94 - v25;
  __chkstk_darwin(v24);
  uint64_t v115 = (uint64_t)&v94 - v26;
  uint64_t v27 = sub_100004210(&qword_1000D7488);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v114 = (uint64_t)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v94 - v31;
  __chkstk_darwin(v30);
  char v34 = (char *)&v94 - v33;
  uint64_t v133 = *(int *)(v3 + 32);
  int v35 = *(unsigned __int8 *)(a1 + v133);
  uint64_t v36 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v129 = v9;
  if (v35 == 1) {
    uint64_t v37 = sub_1000A4390();
  }
  else {
    uint64_t v37 = sub_1000A3998();
  }
  unint64_t v122 = v38;
  uint64_t v123 = v37;
  *(void *)uint64_t v32 = sub_1000B3800();
  *((void *)v32 + 1) = 0;
  v32[16] = 1;
  uint64_t v39 = sub_100004210(&qword_1000D7490);
  sub_100092F7C(a1, (uint64_t)&v32[*(int *)(v39 + 44)]);
  uint64_t v110 = v34;
  sub_10006B62C((uint64_t)v32, (uint64_t)v34, &qword_1000D7488);
  sub_1000B3DA0();
  sub_1000B3660();
  uint64_t v101 = v135;
  int v100 = v136;
  uint64_t v99 = v137;
  int v98 = v138;
  uint64_t v97 = v139;
  uint64_t v96 = v140;
  uint64_t v95 = v3;
  uint64_t v40 = a1 + *(int *)(v3 + 24);
  type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v94 = v36;
  uint64_t v41 = v40 + *(int *)(v36 + 24);
  uint64_t v42 = v130;
  uint64_t v43 = (uint64_t *)(v41 + *(int *)(v131 + 28));
  uint64_t v44 = *v43;
  unint64_t v45 = v43[1];
  sub_100093E24(v41, v130, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000B3340();
  uint64_t v46 = sub_1000B3330();
  uint64_t v48 = v47;
  (*(void (**)(char *, uint64_t))(v124 + 8))(v18, v125);
  sub_100093E8C(v42, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
  uint64_t v49 = sub_1000B3B00();
  uint64_t v125 = a1;
  unsigned __int8 v50 = *(unsigned char *)(a1 + v133);
  sub_10001B2F8();
  TileNameAndStatusView.init(roomName:name:statusString:font:tileStyle:isActivated:isInFlight:)(v44, v45, v46, v48, v123, v122, v49, 0, v134, v50, v51 & 1);
  uint64_t v53 = v128;
  int v52 = v129;
  uint64_t v54 = (void (*)(char *, void, uint64_t))v129[13];
  int v55 = v126;
  v54(v126, enum case for DynamicTypeSize.xSmall(_:), v128);
  uint64_t v56 = v127;
  v54(v127, enum case for DynamicTypeSize.accessibility1(_:), v53);
  sub_100096B54(&qword_1000D6058, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_1000B3F80();
  if (result)
  {
    uint64_t v58 = v132;
    uint64_t v59 = v105;
    uint64_t v60 = &v105[*(int *)(v132 + 48)];
    uint64_t v61 = (void (*)(char *, char *, uint64_t))v52[4];
    v61(v105, v55, v53);
    v61(v60, v56, v53);
    uint64_t v62 = v109;
    int v63 = &v109[*(int *)(v58 + 48)];
    uint64_t v64 = v53;
    uint64_t v65 = (void (*)(char *, char *, uint64_t))v52[2];
    v65(v109, v59, v53);
    v65(v63, v60, v53);
    uint64_t v66 = (uint64_t)v103;
    v61(v103, v62, v53);
    uint64_t v67 = (void (*)(char *, uint64_t))v52[1];
    v67(v63, v64);
    uint64_t v68 = &v62[*(int *)(v132 + 48)];
    v61(v62, v59, v64);
    v61(v68, v60, v64);
    v61((char *)(v66 + *(int *)(v107 + 36)), v68, v64);
    v67(v62, v64);
    uint64_t v69 = v106;
    sub_10006B62C(v66, v106, &qword_1000D5FF0);
    sub_100096B54(&qword_1000D68E8, (void (*)(uint64_t))type metadata accessor for TileNameAndStatusView);
    sub_10001FF28(&qword_1000D6090, &qword_1000D5FF0);
    uint64_t v70 = v111;
    uint64_t v71 = v134;
    sub_1000B3BC0();
    sub_100017B5C(v69, &qword_1000D5FF0);
    sub_100093E8C((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for TileNameAndStatusView);
    uint64_t KeyPath = swift_getKeyPath();
    LODWORD(v71) = *(unsigned __int8 *)(v125 + v133);
    uint64_t v73 = v117;
    sub_100093E24(v125, v117, type metadata accessor for RectangleTileView);
    if (v71 == 1)
    {
      uint64_t v74 = v130;
      sub_100093E24(v73 + *(int *)(v95 + 24) + (uint64_t)*(int *)(v94 + 24), v130, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
      sub_100093E8C(v73, type metadata accessor for RectangleTileView);
      char v75 = *(unsigned char *)(v74 + *(int *)(v131 + 52));
      sub_100093E8C(v74, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
      uint64_t v76 = (uint64_t)v110;
      if (v75)
      {
        uint64_t v77 = (unsigned int *)&enum case for ColorScheme.light(_:);
LABEL_10:
        uint64_t v78 = v119;
        uint64_t v79 = v118;
        uint64_t v80 = v120;
        (*(void (**)(char *, void, uint64_t))(v119 + 104))(v118, *v77, v120);
        uint64_t v81 = (uint64_t)v108;
        uint64_t v82 = (uint64_t *)&v108[*(int *)(v104 + 36)];
        uint64_t v83 = sub_100004210(&qword_1000D68F0);
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))((char *)v82 + *(int *)(v83 + 28), v79, v80);
        uint64_t *v82 = KeyPath;
        uint64_t v84 = v112;
        uint64_t v85 = v113;
        (*(void (**)(uint64_t, char *, uint64_t))(v112 + 16))(v81, v70, v113);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v70, v85);
        uint64_t v86 = v115;
        sub_10006B62C(v81, v115, &qword_1000D68E0);
        uint64_t v87 = v114;
        sub_1000206A0(v76, v114, &qword_1000D7488);
        uint64_t v88 = v116;
        sub_1000206A0(v86, v116, &qword_1000D68E0);
        uint64_t v89 = v121;
        sub_1000206A0(v87, v121, &qword_1000D7488);
        uint64_t v90 = (int *)sub_100004210(&qword_1000D7498);
        uint64_t v91 = v89 + v90[12];
        *(void *)uint64_t v91 = 0;
        *(unsigned char *)(v91 + 8) = 1;
        *(void *)(v91 + 16) = v101;
        *(unsigned char *)(v91 + 24) = v100;
        *(void *)(v91 + 32) = v99;
        *(unsigned char *)(v91 + 40) = v98;
        uint64_t v92 = v96;
        *(void *)(v91 + 48) = v97;
        *(void *)(v91 + 56) = v92;
        sub_1000206A0(v88, v89 + v90[16], &qword_1000D68E0);
        uint64_t v93 = v89 + v90[20];
        *(void *)uint64_t v93 = 0;
        *(unsigned char *)(v93 + 8) = 0;
        sub_100017B5C(v86, &qword_1000D68E0);
        sub_100017B5C(v76, &qword_1000D7488);
        sub_100017B5C(v88, &qword_1000D68E0);
        return sub_100017B5C(v87, &qword_1000D7488);
      }
    }
    else
    {
      sub_100093E8C(v73, type metadata accessor for RectangleTileView);
      uint64_t v76 = (uint64_t)v110;
    }
    uint64_t v77 = (unsigned int *)&enum case for ColorScheme.dark(_:);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100092F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v3 = sub_1000B38A0();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v99 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v98 = (uint64_t)&v85 - v6;
  uint64_t v100 = type metadata accessor for WidgetTileInfo();
  __chkstk_darwin(v100);
  uint64_t v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100004210(&qword_1000D74A0);
  __chkstk_darwin(v102);
  uint64_t v103 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000B3620();
  uint64_t v96 = *(char **)(v9 - 8);
  uint64_t v97 = (char *)v9;
  __chkstk_darwin(v9);
  uint64_t v94 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100004210(&qword_1000D74A8);
  uint64_t v92 = *(void *)(v11 - 8);
  uint64_t v93 = v11;
  __chkstk_darwin(v11);
  uint64_t v91 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100004210(&qword_1000D74B0);
  uint64_t v13 = __chkstk_darwin(v101);
  uint64_t v90 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v95 = (uint64_t)&v85 - v15;
  uint64_t v16 = sub_1000B3E20();
  uint64_t v88 = *(void *)(v16 - 8);
  uint64_t v89 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (int *)type metadata accessor for RectangleTileView(0);
  __chkstk_darwin(v19);
  uint64_t v86 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TileIconView();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v85 - v25;
  uint64_t v27 = a1;
  uint64_t v28 = a1 + v19[6];
  uint64_t v29 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v106 = v28 + *(int *)(v29 + 24);
  sub_1000A3DC8();
  uint64_t v104 = v21;
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = v27;
    uint64_t v34 = v30;
    sub_10007F150((uint64_t)v18);
    uint64_t v35 = v33 + v19[5];
    uint64_t v36 = *(void *)v35;
    char v37 = *(unsigned char *)(v35 + 8);
    sub_100044118(*(void *)v35, v37);
    sub_10007E9FC(v36, v37);
    sub_1000441FC(v36, v37);
    uint64_t v99 = sub_100020704((uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v18, v89);
    *(void *)&long long v125 = v34;
    *((void *)&v125 + 1) = v32;
    sub_100004BC8();
    uint64_t v38 = sub_1000B3B50();
    uint64_t v40 = v39;
    LOBYTE(v32) = v41;
    uint64_t v43 = v42;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v45 = swift_getKeyPath();
    sub_1000B3A60();
    uint64_t v46 = sub_1000B3A50();
    swift_release();
    uint64_t v47 = swift_getKeyPath();
    uint64_t v48 = swift_getKeyPath();
    char v124 = v32 & 1;
    char v120 = 0;
    char v118 = 1;
    *(void *)&long long v125 = v38;
    *((void *)&v125 + 1) = v40;
    LOBYTE(v126) = v32 & 1;
    *(_DWORD *)((char *)&v126 + 1) = *(_DWORD *)v123;
    DWORD1(v126) = *(_DWORD *)&v123[3];
    *((void *)&v126 + 1) = v43;
    LOWORD(v127) = 256;
    *(_DWORD *)((char *)&v127 + 2) = *(_DWORD *)&v121[7];
    WORD3(v127) = v122;
    *((void *)&v127 + 1) = KeyPath;
    LOBYTE(v128) = 1;
    *(_DWORD *)((char *)&v128 + 1) = *(_DWORD *)v121;
    DWORD1(v128) = *(_DWORD *)&v121[3];
    *((void *)&v128 + 1) = v45;
    *(void *)&long long v129 = 1;
    BYTE8(v129) = 0;
    *(_DWORD *)((char *)&v129 + 9) = *(_DWORD *)v119;
    HIDWORD(v129) = *(_DWORD *)&v119[3];
    *(void *)&long long v130 = v47;
    *((void *)&v130 + 1) = v46;
    *(void *)&long long v131 = 0;
    WORD4(v131) = 1;
    HIWORD(v131) = v117;
    *(_DWORD *)((char *)&v131 + 10) = v116;
    *(void *)&long long v132 = v48;
    *((void *)&v132 + 1) = 0x3F847AE147AE147BLL;
    uint64_t v133 = v99;
    long long v113 = v131;
    long long v114 = v132;
    uint64_t v115 = v99;
    long long v111 = v129;
    long long v112 = v130;
    long long v109 = v127;
    long long v110 = v128;
    long long v107 = v125;
    long long v108 = v126;
    swift_retain();
    sub_100004210(&qword_1000D74C0);
    sub_1000A04C4();
    uint64_t v49 = v91;
    sub_1000B3BD0();
    sub_1000A069C((uint64_t)&v125);
    uint64_t v50 = swift_getKeyPath();
    uint64_t v52 = (uint64_t)v96;
    uint64_t v51 = (uint64_t)v97;
    if (*(unsigned char *)(v106 + *(int *)(v100 + 52))) {
      uint64_t v53 = (unsigned int *)&enum case for ColorScheme.light(_:);
    }
    else {
      uint64_t v53 = (unsigned int *)&enum case for ColorScheme.dark(_:);
    }
    uint64_t v54 = v94;
    (*((void (**)(char *, void, char *))v96 + 13))(v94, *v53, v97);
    uint64_t v55 = (uint64_t)v90;
    uint64_t v56 = (uint64_t *)&v90[*(int *)(v101 + 36)];
    uint64_t v57 = sub_100004210(&qword_1000D68F0);
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v56 + *(int *)(v57 + 28), v54, v51);
    *uint64_t v56 = v50;
    uint64_t v59 = v92;
    uint64_t v58 = v93;
    (*(void (**)(uint64_t, char *, uint64_t))(v92 + 16))(v55, v49, v93);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v51);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v49, v58);
    uint64_t v60 = v95;
    sub_10006B62C(v55, v95, &qword_1000D74B0);
    sub_1000206A0(v60, v103, &qword_1000D74B0);
    swift_storeEnumTagMultiPayload();
    sub_1000A03F0();
    sub_100096B54(&qword_1000D69E0, (void (*)(uint64_t))type metadata accessor for TileIconView);
    sub_1000B3920();
    swift_release();
    return sub_100017B5C(v60, &qword_1000D74B0);
  }
  else
  {
    uint64_t v96 = v24;
    uint64_t v97 = v26;
    uint64_t v63 = v86;
    uint64_t v62 = (uint64_t)v87;
    uint64_t v64 = v100;
    uint64_t v65 = v19[8];
    uint64_t v66 = v27;
    int v67 = *(unsigned __int8 *)(v27 + v65);
    uint64_t v68 = v66;
    sub_100093E24(v66, v86, type metadata accessor for RectangleTileView);
    BOOL v69 = v67 == 1;
    uint64_t v70 = v103;
    if (v69)
    {
      uint64_t v71 = v63 + v19[6] + (uint64_t)*(int *)(v29 + 24);
      uint64_t v72 = v62;
      sub_100093E24(v71, v62, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
      sub_100093E8C(v63, type metadata accessor for RectangleTileView);
      uint64_t v74 = v64;
      char v73 = *(unsigned char *)(v62 + *(int *)(v64 + 52));
      sub_100093E8C(v72, (uint64_t (*)(void))type metadata accessor for WidgetTileInfo);
    }
    else
    {
      sub_100093E8C(v63, type metadata accessor for RectangleTileView);
      char v73 = 0;
      uint64_t v74 = v64;
    }
    uint64_t v75 = 32;
    if (*(unsigned char *)(v68 + v65)) {
      uint64_t v75 = 36;
    }
    uint64_t v76 = v106;
    uint64_t v77 = (uint64_t *)(v106 + *(int *)(v74 + v75));
    uint64_t v79 = *v77;
    uint64_t v78 = v77[1];
    swift_bridgeObjectRetain();
    sub_1000B33C0();
    sub_1000B33C0();
    if (*(unsigned char *)(v76 + *(int *)(v74 + 52)) == 1)
    {
      uint64_t v80 = *(void *)(v76 + *(int *)(v74 + 48));
      swift_retain();
    }
    else
    {
      uint64_t v80 = sub_1000B3C70();
    }
    uint64_t v81 = sub_1000B3DA0();
    uint64_t v82 = (uint64_t)v96;
    TileIconView.init(isActivated:iconSymbol:iconSymbolRenderingMode:iconSymbolActivatedRenderingMode:iconColor:imageContainerDimension:symbolFontSize:iconAlignment:)(v73, v79, v78, v98, v99, v80, v81, v83, (uint64_t)v96, 38.0, 26.0);
    uint64_t v84 = (uint64_t)v97;
    sub_1000A0388(v82, (uint64_t)v97, (uint64_t (*)(void))type metadata accessor for TileIconView);
    sub_100093E24(v84, v70, (uint64_t (*)(void))type metadata accessor for TileIconView);
    swift_storeEnumTagMultiPayload();
    sub_1000A03F0();
    sub_100096B54(&qword_1000D69E0, (void (*)(uint64_t))type metadata accessor for TileIconView);
    sub_1000B3920();
    return sub_100093E8C(v84, (uint64_t (*)(void))type metadata accessor for TileIconView);
  }
}

uint64_t sub_1000939D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v25 = type metadata accessor for AccentableBackgroundView(0);
  __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000B3E20();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v27 = sub_100004210(&qword_1000D7390);
  uint64_t v9 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100004210(&qword_1000D7398);
  __chkstk_darwin(v26);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000B3C50();
  __int16 v32 = 256;
  sub_100004210(&qword_1000D73A0);
  sub_10001FF28(&qword_1000D73A8, &qword_1000D73A0);
  sub_1000B3B60();
  swift_release();
  uint64_t v14 = v29;
  sub_10007F150((uint64_t)v8);
  sub_1000B3E00();
  char v15 = sub_1000B3DE0();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v6, v2);
  uint64_t v17 = v8;
  uint64_t v18 = (uint64_t)v30;
  v16(v17, v2);
  sub_100093E24(v14, v18, type metadata accessor for AccentableBackgroundView);
  if ((v15 & 1) == 0)
  {
    sub_100093E8C(v18, type metadata accessor for AccentableBackgroundView);
    uint64_t v21 = v27;
    uint64_t v20 = v28;
    uint64_t v22 = v26;
    goto LABEL_5;
  }
  char v19 = *(unsigned char *)(v18 + *(int *)(v25 + 20));
  sub_100093E8C(v18, type metadata accessor for AccentableBackgroundView);
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  uint64_t v22 = v26;
  if ((v19 & 1) == 0)
  {
LABEL_5:
    uint64_t v23 = 0;
    goto LABEL_6;
  }
  uint64_t v23 = 0x3FE3333333333333;
LABEL_6:
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v21);
  *(void *)&v13[*(int *)(v22 + 36)] = v23;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  return sub_10006B62C((uint64_t)v13, v20, &qword_1000D7398);
}

uint64_t _s10HomeWidget9TileStyleO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000CEEB0;
  v6._object = a2;
  unint64_t v4 = sub_1000B46F0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t type metadata accessor for TileView(uint64_t a1)
{
  return sub_10006842C(a1, qword_1000D7040);
}

uint64_t type metadata accessor for SingleTapTargetTileView(uint64_t a1)
{
  return sub_10006842C(a1, qword_1000D70E8);
}

uint64_t sub_100093E24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100093E8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100093EF0()
{
  unint64_t result = qword_1000D6FD0;
  if (!qword_1000D6FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6FD0);
  }
  return result;
}

uint64_t sub_100093F44()
{
  return sub_10001FF28(&qword_1000D6FD8, &qword_1000D6FE0);
}

uint64_t sub_100093F80()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for TileStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100094068);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TileStyle()
{
  return &type metadata for TileStyle;
}

void *initializeBufferWithCopyOfBuffer for TileView(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v45 = (void *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1000B2F60();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    uint64_t v8 = type metadata accessor for AccessoryAndSceneEntity();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    uint64_t v9 = *(int *)(v8 + 24);
    long long v111 = a1;
    long long v112 = a2;
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    v7(&a1[v9], &a2[v9], v6);
    uint64_t v12 = (int *)type metadata accessor for WidgetTileInfo();
    uint64_t v107 = v6;
    long long v110 = v7;
    v7(&v10[v12[5]], &v11[v12[5]], v6);
    uint64_t v13 = v12[6];
    uint64_t v14 = &v10[v13];
    char v15 = &v11[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v12[7];
    uint64_t v18 = &v10[v17];
    char v19 = &v11[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = v12[8];
    uint64_t v22 = &v10[v21];
    uint64_t v23 = &v11[v21];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = v12[9];
    uint64_t v26 = &v10[v25];
    uint64_t v27 = &v11[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v12[10];
    long long v108 = &v10[v29];
    uint64_t v105 = &v11[v29];
    uint64_t v30 = sub_1000B33D0();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v108, v105, v30);
    uint64_t v109 = v30;
    uint64_t v106 = v31;
    v31(&v10[v12[11]], &v11[v12[11]], v30);
    *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
    v10[v12[13]] = v11[v12[13]];
    uint64_t v32 = v12[14];
    uint64_t v33 = &v10[v32];
    uint64_t v34 = &v11[v32];
    uint64_t v35 = *(void **)v34;
    LOBYTE(v34) = v34[8];
    *(void *)uint64_t v33 = v35;
    v33[8] = (char)v34;
    *(void *)&v10[v12[15]] = *(void *)&v11[v12[15]];
    v10[v12[16]] = v11[v12[16]];
    uint64_t v36 = v12[17];
    __dst = &v10[v36];
    char v37 = &v11[v36];
    uint64_t v38 = sub_1000B32E0();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    uint64_t v41 = v38;
    swift_retain();
    id v42 = v35;
    swift_bridgeObjectRetain();
    uint64_t v104 = v40;
    uint64_t v102 = v39;
    if (v40(v37, 1, v41))
    {
      uint64_t v43 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v37, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v37, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v41);
    }
    uint64_t v46 = v41;
    v10[v12[18]] = v11[v12[18]];
    uint64_t v47 = v12[19];
    uint64_t v48 = &v10[v47];
    uint64_t v49 = &v11[v47];
    *(void *)uint64_t v48 = *(void *)v49;
    v48[8] = v49[8];
    uint64_t v50 = v12[20];
    uint64_t v51 = &v10[v50];
    uint64_t v52 = &v11[v50];
    uint64_t v53 = *((void *)v52 + 1);
    *(void *)uint64_t v51 = *(void *)v52;
    *((void *)v51 + 1) = v53;
    v10[v12[21]] = v11[v12[21]];
    uint64_t v54 = a3[5];
    uint64_t v45 = v111;
    uint64_t v55 = (char *)v111 + v54;
    uint64_t v56 = (char *)v112 + v54;
    swift_bridgeObjectRetain();
    v110(v55, v56, v107);
    v110(&v55[v12[5]], &v56[v12[5]], v107);
    uint64_t v57 = v12[6];
    uint64_t v58 = &v55[v57];
    uint64_t v59 = &v56[v57];
    uint64_t v60 = *((void *)v59 + 1);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v60;
    uint64_t v61 = v12[7];
    uint64_t v62 = &v55[v61];
    uint64_t v63 = &v56[v61];
    uint64_t v64 = *((void *)v63 + 1);
    *(void *)uint64_t v62 = *(void *)v63;
    *((void *)v62 + 1) = v64;
    uint64_t v65 = v12[8];
    uint64_t v66 = &v55[v65];
    int v67 = &v56[v65];
    uint64_t v68 = *((void *)v67 + 1);
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    uint64_t v69 = v12[9];
    uint64_t v70 = &v55[v69];
    uint64_t v71 = &v56[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    uint64_t v73 = v12[10];
    uint64_t v74 = &v55[v73];
    uint64_t v75 = &v56[v73];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v106(v74, v75, v109);
    v106(&v55[v12[11]], &v56[v12[11]], v109);
    *(void *)&v55[v12[12]] = *(void *)&v56[v12[12]];
    v55[v12[13]] = v56[v12[13]];
    uint64_t v76 = v12[14];
    uint64_t v77 = &v55[v76];
    uint64_t v78 = &v56[v76];
    uint64_t v79 = *(void **)v78;
    LOBYTE(v78) = v78[8];
    *(void *)uint64_t v77 = v79;
    v77[8] = (char)v78;
    *(void *)&v55[v12[15]] = *(void *)&v56[v12[15]];
    v55[v12[16]] = v56[v12[16]];
    uint64_t v80 = v12[17];
    uint64_t v81 = &v55[v80];
    uint64_t v82 = &v56[v80];
    swift_retain();
    id v83 = v79;
    swift_bridgeObjectRetain();
    if (v104(v82, 1, v46))
    {
      uint64_t v84 = sub_100004210(&qword_1000D5098);
      memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v81, v82, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v81, 0, 1, v46);
    }
    v55[v12[18]] = v56[v12[18]];
    uint64_t v85 = v12[19];
    uint64_t v86 = &v55[v85];
    uint64_t v87 = &v56[v85];
    *(void *)uint64_t v86 = *(void *)v87;
    v86[8] = v87[8];
    uint64_t v88 = v12[20];
    uint64_t v89 = &v55[v88];
    uint64_t v90 = &v56[v88];
    uint64_t v91 = *((void *)v90 + 1);
    *(void *)uint64_t v89 = *(void *)v90;
    *((void *)v89 + 1) = v91;
    v55[v12[21]] = v56[v12[21]];
    uint64_t v92 = a3[7];
    *((unsigned char *)v111 + a3[6]) = *((unsigned char *)v112 + a3[6]);
    *(_OWORD *)((char *)v111 + v92) = *(_OWORD *)((char *)v112 + v92);
    uint64_t v93 = a3[8];
    uint64_t v94 = (char *)v111 + v93;
    uint64_t v95 = (char *)v112 + v93;
    *(_OWORD *)((char *)v111 + v93) = *(_OWORD *)((char *)v112 + v93);
    uint64_t v96 = *(int *)(sub_1000B3690() + 20);
    uint64_t v97 = &v94[v96];
    uint64_t v98 = &v95[v96];
    uint64_t v99 = sub_1000B3860();
    uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
    swift_bridgeObjectRetain();
    v100(v97, v98, v99);
  }
  return v45;
}

uint64_t destroy for TileView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000B2F60();
  unsigned int v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(a1, v3);
  uint64_t v5 = type metadata accessor for AccessoryAndSceneEntity();
  v4(a1 + *(int *)(v5 + 20), v3);
  uint64_t v6 = a1 + *(int *)(v5 + 24);
  v4(v6, v3);
  uint64_t v7 = (int *)type metadata accessor for WidgetTileInfo();
  v4(v6 + v7[5], v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + v7[10];
  uint64_t v9 = sub_1000B33D0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v6 + v7[11], v9);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v11 = v6 + v7[17];
  uint64_t v21 = sub_1000B32E0();
  uint64_t v19 = *(void *)(v21 - 8);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t))(v19 + 48);
  if (!v20(v11, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v11, v21);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  v4(v12, v3);
  v4(v12 + v7[5], v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10(v12 + v7[10], v9);
  v10(v12 + v7[11], v9);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v13 = v12 + v7[17];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v20)(v13, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v13, v21);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + *(int *)(a2 + 32);
  uint64_t v15 = v14 + *(int *)(sub_1000B3690() + 20);
  uint64_t v16 = sub_1000B3860();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t initializeWithCopy for TileView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v107 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v109 = a2;
  uint64_t v10 = a2 + v8;
  v6(a1 + v8, a2 + v8, v5);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v103 = v5;
  uint64_t v106 = v6;
  v6(v9 + v11[5], v10 + v11[5], v5);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (void *)(v10 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v11[7];
  uint64_t v17 = (void *)(v9 + v16);
  uint64_t v18 = (void *)(v10 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v11[8];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v22 = (void *)(v10 + v20);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v11[9];
  uint64_t v25 = (void *)(v9 + v24);
  uint64_t v26 = (void *)(v10 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v11[10];
  uint64_t v104 = v9 + v28;
  uint64_t v101 = v10 + v28;
  uint64_t v29 = sub_1000B33D0();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(v104, v101, v29);
  uint64_t v105 = v29;
  uint64_t v102 = v30;
  v30(v9 + v11[11], v10 + v11[11], v29);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v31 = v11[14];
  uint64_t v32 = v9 + v31;
  uint64_t v33 = v10 + v31;
  uint64_t v34 = *(void **)v33;
  LOBYTE(v33) = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v32 = v34;
  *(unsigned char *)(v32 + 8) = v33;
  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v35 = v11[17];
  __dst = (void *)(v9 + v35);
  uint64_t v36 = (const void *)(v10 + v35);
  uint64_t v37 = sub_1000B32E0();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
  uint64_t v40 = v37;
  swift_retain();
  id v41 = v34;
  swift_bridgeObjectRetain();
  uint64_t v100 = v39;
  if (v39(v36, 1, v40))
  {
    uint64_t v42 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v36, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(__dst, v36, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v40);
  }
  uint64_t v43 = v40;
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v44 = v11[19];
  uint64_t v45 = v9 + v44;
  uint64_t v46 = v10 + v44;
  *(void *)uint64_t v45 = *(void *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  uint64_t v47 = v11[20];
  uint64_t v48 = (void *)(v9 + v47);
  uint64_t v49 = (void *)(v10 + v47);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  uint64_t v51 = a3[5];
  uint64_t v52 = v107 + v51;
  uint64_t v53 = v109 + v51;
  swift_bridgeObjectRetain();
  v106(v52, v53, v103);
  v106(v52 + v11[5], v53 + v11[5], v103);
  uint64_t v54 = v11[6];
  uint64_t v55 = (void *)(v52 + v54);
  uint64_t v56 = (void *)(v53 + v54);
  uint64_t v57 = v56[1];
  *uint64_t v55 = *v56;
  v55[1] = v57;
  uint64_t v58 = v11[7];
  uint64_t v59 = (void *)(v52 + v58);
  uint64_t v60 = (void *)(v53 + v58);
  uint64_t v61 = v60[1];
  void *v59 = *v60;
  v59[1] = v61;
  uint64_t v62 = v11[8];
  uint64_t v63 = (void *)(v52 + v62);
  uint64_t v64 = (void *)(v53 + v62);
  uint64_t v65 = v64[1];
  *uint64_t v63 = *v64;
  v63[1] = v65;
  uint64_t v66 = v11[9];
  int v67 = (void *)(v52 + v66);
  uint64_t v68 = (void *)(v53 + v66);
  uint64_t v69 = v68[1];
  *int v67 = *v68;
  v67[1] = v69;
  uint64_t v70 = v11[10];
  uint64_t v71 = v52 + v70;
  uint64_t v72 = v53 + v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v102(v71, v72, v105);
  v102(v52 + v11[11], v53 + v11[11], v105);
  *(void *)(v52 + v11[12]) = *(void *)(v53 + v11[12]);
  *(unsigned char *)(v52 + v11[13]) = *(unsigned char *)(v53 + v11[13]);
  uint64_t v73 = v11[14];
  uint64_t v74 = v52 + v73;
  uint64_t v75 = v53 + v73;
  uint64_t v76 = *(void **)v75;
  LOBYTE(v75) = *(unsigned char *)(v75 + 8);
  *(void *)uint64_t v74 = v76;
  *(unsigned char *)(v74 + 8) = v75;
  *(void *)(v52 + v11[15]) = *(void *)(v53 + v11[15]);
  *(unsigned char *)(v52 + v11[16]) = *(unsigned char *)(v53 + v11[16]);
  uint64_t v77 = v11[17];
  uint64_t v78 = (void *)(v52 + v77);
  uint64_t v79 = (const void *)(v53 + v77);
  swift_retain();
  id v80 = v76;
  swift_bridgeObjectRetain();
  if (v100(v79, 1, v43))
  {
    uint64_t v81 = sub_100004210(&qword_1000D5098);
    memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 16))(v78, v79, v43);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v78, 0, 1, v43);
  }
  *(unsigned char *)(v52 + v11[18]) = *(unsigned char *)(v53 + v11[18]);
  uint64_t v82 = v11[19];
  uint64_t v83 = v52 + v82;
  uint64_t v84 = v53 + v82;
  *(void *)uint64_t v83 = *(void *)v84;
  *(unsigned char *)(v83 + 8) = *(unsigned char *)(v84 + 8);
  uint64_t v85 = v11[20];
  uint64_t v86 = (void *)(v52 + v85);
  uint64_t v87 = (void *)(v53 + v85);
  uint64_t v88 = v87[1];
  void *v86 = *v87;
  v86[1] = v88;
  *(unsigned char *)(v52 + v11[21]) = *(unsigned char *)(v53 + v11[21]);
  uint64_t v89 = a3[7];
  *(unsigned char *)(v107 + a3[6]) = *(unsigned char *)(v109 + a3[6]);
  *(_OWORD *)(v107 + v89) = *(_OWORD *)(v109 + v89);
  uint64_t v90 = a3[8];
  uint64_t v91 = v107 + v90;
  uint64_t v92 = v109 + v90;
  *(_OWORD *)(v107 + v90) = *(_OWORD *)(v109 + v90);
  uint64_t v93 = *(int *)(sub_1000B3690() + 20);
  uint64_t v94 = v91 + v93;
  uint64_t v95 = v92 + v93;
  uint64_t v96 = sub_1000B3860();
  uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16);
  swift_bridgeObjectRetain();
  v97(v94, v95, v96);
  return v107;
}

uint64_t assignWithCopy for TileView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24);
  v6(a1, a2, v5);
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v96 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v99 = a2;
  uint64_t v10 = a2 + v8;
  v6(a1 + v8, a2 + v8, v5);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v95 = v6;
  v6(v9 + v11[5], v10 + v11[5], v5);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (void *)(v10 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v11[7];
  uint64_t v16 = (void *)(v9 + v15);
  uint64_t v17 = (void *)(v10 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v11[8];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = (void *)(v10 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v11[9];
  uint64_t v22 = (void *)(v9 + v21);
  uint64_t v23 = (void *)(v10 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v11[10];
  uint64_t v25 = v9 + v24;
  uint64_t v26 = v10 + v24;
  uint64_t v27 = sub_1000B33D0();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24);
  v28(v25, v26, v27);
  uint64_t v93 = v28;
  uint64_t v94 = v27;
  v28(v9 + v11[11], v10 + v11[11], v27);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v29 = v11[14];
  uint64_t v30 = v9 + v29;
  uint64_t v31 = v10 + v29;
  uint64_t v32 = *(void **)v31;
  LOBYTE(v31) = *(unsigned char *)(v31 + 8);
  uint64_t v33 = *(void **)v30;
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = v31;
  id v34 = v32;

  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v35 = v11[17];
  uint64_t v36 = (void *)(v9 + v35);
  uint64_t v37 = (void *)(v10 + v35);
  uint64_t v38 = sub_1000B32E0();
  uint64_t v97 = *(void *)(v38 - 8);
  uint64_t v39 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v97 + 48);
  LODWORD(v28) = v39(v36, 1, v38);
  int v40 = v39(v37, 1, v38);
  if (v28)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v97 + 16))(v36, v37, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v36, 0, 1, v38);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v97 + 8))(v36, v38);
LABEL_6:
    uint64_t v41 = sub_100004210(&qword_1000D5098);
    memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v97 + 24))(v36, v37, v38);
LABEL_7:
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v42 = v11[19];
  uint64_t v43 = v9 + v42;
  uint64_t v44 = (uint64_t *)(v10 + v42);
  uint64_t v45 = *v44;
  *(unsigned char *)(v43 + 8) = *((unsigned char *)v44 + 8);
  *(void *)uint64_t v43 = v45;
  uint64_t v46 = v11[20];
  uint64_t v47 = (void *)(v9 + v46);
  uint64_t v48 = (void *)(v10 + v46);
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  uint64_t v49 = a3[5];
  uint64_t v50 = v96 + v49;
  uint64_t v51 = v99 + v49;
  v95(v96 + v49, v99 + v49, v5);
  v95(v50 + v11[5], v51 + v11[5], v5);
  uint64_t v52 = v11[6];
  uint64_t v53 = (void *)(v50 + v52);
  uint64_t v54 = (void *)(v51 + v52);
  *uint64_t v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = v11[7];
  uint64_t v56 = (void *)(v50 + v55);
  uint64_t v57 = (void *)(v51 + v55);
  *uint64_t v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = v11[8];
  uint64_t v59 = (void *)(v50 + v58);
  uint64_t v60 = (void *)(v51 + v58);
  void *v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = v11[9];
  uint64_t v62 = (void *)(v50 + v61);
  uint64_t v63 = (void *)(v51 + v61);
  void *v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v93(v50 + v11[10], v51 + v11[10], v94);
  v93(v50 + v11[11], v51 + v11[11], v94);
  *(void *)(v50 + v11[12]) = *(void *)(v51 + v11[12]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v50 + v11[13]) = *(unsigned char *)(v51 + v11[13]);
  uint64_t v64 = v11[14];
  uint64_t v65 = v50 + v64;
  uint64_t v66 = v51 + v64;
  int v67 = *(void **)v66;
  LOBYTE(v66) = *(unsigned char *)(v66 + 8);
  uint64_t v68 = *(void **)v65;
  *(void *)uint64_t v65 = v67;
  *(unsigned char *)(v65 + 8) = v66;
  id v69 = v67;

  *(void *)(v50 + v11[15]) = *(void *)(v51 + v11[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v50 + v11[16]) = *(unsigned char *)(v51 + v11[16]);
  uint64_t v70 = v11[17];
  uint64_t v71 = (void *)(v50 + v70);
  uint64_t v72 = (void *)(v51 + v70);
  LODWORD(v68) = v39((void *)(v50 + v70), 1, v38);
  int v73 = v39(v72, 1, v38);
  if (!v68)
  {
    if (!v73)
    {
      (*(void (**)(void *, void *, uint64_t))(v97 + 24))(v71, v72, v38);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v97 + 8))(v71, v38);
    goto LABEL_12;
  }
  if (v73)
  {
LABEL_12:
    uint64_t v74 = sub_100004210(&qword_1000D5098);
    memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v97 + 16))(v71, v72, v38);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v71, 0, 1, v38);
LABEL_13:
  *(unsigned char *)(v50 + v11[18]) = *(unsigned char *)(v51 + v11[18]);
  uint64_t v75 = v11[19];
  uint64_t v76 = v50 + v75;
  uint64_t v77 = (uint64_t *)(v51 + v75);
  uint64_t v78 = *v77;
  *(unsigned char *)(v76 + 8) = *((unsigned char *)v77 + 8);
  *(void *)uint64_t v76 = v78;
  uint64_t v79 = v11[20];
  id v80 = (void *)(v50 + v79);
  uint64_t v81 = (void *)(v51 + v79);
  void *v80 = *v81;
  v80[1] = v81[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v50 + v11[21]) = *(unsigned char *)(v51 + v11[21]);
  *(unsigned char *)(v96 + a3[6]) = *(unsigned char *)(v99 + a3[6]);
  uint64_t v82 = a3[7];
  uint64_t v83 = (void *)(v96 + v82);
  uint64_t v84 = (void *)(v99 + v82);
  void *v83 = *v84;
  v83[1] = v84[1];
  uint64_t v85 = a3[8];
  uint64_t v86 = (void *)(v96 + v85);
  uint64_t v87 = v99 + v85;
  void *v86 = *(void *)(v99 + v85);
  v86[1] = *(void *)(v99 + v85 + 8);
  uint64_t v88 = *(int *)(sub_1000B3690() + 20);
  uint64_t v89 = (char *)v86 + v88;
  uint64_t v90 = v87 + v88;
  uint64_t v91 = sub_1000B3860();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 24))(v89, v90, v91);
  return v96;
}

uint64_t initializeWithTake for TileView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  v6(a1, a2, v5);
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v53 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v55 = a2;
  uint64_t v10 = a2 + v8;
  v6(a1 + v8, a2 + v8, v5);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v52 = v6;
  v6(v9 + v11[5], v10 + v11[5], v5);
  *(_OWORD *)(v9 + v11[6]) = *(_OWORD *)(v10 + v11[6]);
  *(_OWORD *)(v9 + v11[7]) = *(_OWORD *)(v10 + v11[7]);
  *(_OWORD *)(v9 + v11[8]) = *(_OWORD *)(v10 + v11[8]);
  *(_OWORD *)(v9 + v11[9]) = *(_OWORD *)(v10 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_1000B33D0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(v9 + v11[11], v10 + v11[11], v15);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v17 = v11[14];
  uint64_t v18 = v9 + v17;
  uint64_t v19 = v10 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v20 = v11[17];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v22 = (const void *)(v10 + v20);
  uint64_t v23 = sub_1000B32E0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v51 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  if (v51(v22, 1, v23))
  {
    uint64_t v25 = sub_100004210(&qword_1000D5098);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v26 = v11[19];
  uint64_t v27 = v9 + v26;
  uint64_t v28 = v10 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(_OWORD *)(v9 + v11[20]) = *(_OWORD *)(v10 + v11[20]);
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  uint64_t v29 = a3[5];
  uint64_t v30 = v53 + v29;
  uint64_t v31 = v55 + v29;
  v52(v53 + v29, v55 + v29, v5);
  v52(v30 + v11[5], v31 + v11[5], v5);
  *(_OWORD *)(v30 + v11[6]) = *(_OWORD *)(v31 + v11[6]);
  *(_OWORD *)(v30 + v11[7]) = *(_OWORD *)(v31 + v11[7]);
  *(_OWORD *)(v30 + v11[8]) = *(_OWORD *)(v31 + v11[8]);
  *(_OWORD *)(v30 + v11[9]) = *(_OWORD *)(v31 + v11[9]);
  v16(v30 + v11[10], v31 + v11[10], v15);
  v16(v30 + v11[11], v31 + v11[11], v15);
  *(void *)(v30 + v11[12]) = *(void *)(v31 + v11[12]);
  *(unsigned char *)(v30 + v11[13]) = *(unsigned char *)(v31 + v11[13]);
  uint64_t v32 = v11[14];
  uint64_t v33 = v30 + v32;
  uint64_t v34 = v31 + v32;
  *(void *)uint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  *(void *)(v30 + v11[15]) = *(void *)(v31 + v11[15]);
  *(unsigned char *)(v30 + v11[16]) = *(unsigned char *)(v31 + v11[16]);
  uint64_t v35 = v11[17];
  uint64_t v36 = (void *)(v30 + v35);
  uint64_t v37 = (const void *)(v31 + v35);
  if (v51((const void *)(v31 + v35), 1, v23))
  {
    uint64_t v38 = sub_100004210(&qword_1000D5098);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v36, v37, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v36, 0, 1, v23);
  }
  *(unsigned char *)(v30 + v11[18]) = *(unsigned char *)(v31 + v11[18]);
  uint64_t v39 = v11[19];
  uint64_t v40 = v30 + v39;
  uint64_t v41 = v31 + v39;
  *(void *)uint64_t v40 = *(void *)v41;
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
  *(_OWORD *)(v30 + v11[20]) = *(_OWORD *)(v31 + v11[20]);
  *(unsigned char *)(v30 + v11[21]) = *(unsigned char *)(v31 + v11[21]);
  uint64_t v42 = a3[7];
  *(unsigned char *)(v53 + a3[6]) = *(unsigned char *)(v55 + a3[6]);
  *(_OWORD *)(v53 + v42) = *(_OWORD *)(v55 + v42);
  uint64_t v43 = a3[8];
  uint64_t v44 = v53 + v43;
  uint64_t v45 = v55 + v43;
  *(_OWORD *)(v53 + v43) = *(_OWORD *)(v55 + v43);
  uint64_t v46 = *(int *)(sub_1000B3690() + 20);
  uint64_t v47 = v44 + v46;
  uint64_t v48 = v45 + v46;
  uint64_t v49 = sub_1000B3860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  return v53;
}

uint64_t assignWithTake for TileView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  v6(a1, a2, v5);
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v110 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v113 = a2;
  uint64_t v10 = a2 + v8;
  v6(a1 + v8, a2 + v8, v5);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v109 = v6;
  v6(v9 + v11[5], v10 + v11[5], v5);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (uint64_t *)(v10 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v11[7];
  uint64_t v18 = (void *)(v9 + v17);
  uint64_t v19 = (uint64_t *)(v10 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v11[8];
  uint64_t v23 = (void *)(v9 + v22);
  uint64_t v24 = (uint64_t *)(v10 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v11[9];
  uint64_t v28 = (void *)(v9 + v27);
  uint64_t v29 = (uint64_t *)(v10 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v11[10];
  uint64_t v33 = v9 + v32;
  uint64_t v34 = v10 + v32;
  uint64_t v35 = sub_1000B33D0();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40);
  v36(v33, v34, v35);
  long long v108 = v36;
  v36(v9 + v11[11], v10 + v11[11], v35);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  swift_release();
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v37 = v11[14];
  uint64_t v38 = v9 + v37;
  uint64_t v39 = (uint64_t *)(v10 + v37);
  uint64_t v40 = *v39;
  LOBYTE(v39) = *((unsigned char *)v39 + 8);
  uint64_t v41 = *(void **)v38;
  *(void *)uint64_t v38 = v40;
  *(unsigned char *)(v38 + 8) = (_BYTE)v39;

  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v42 = v11[17];
  uint64_t v43 = (void *)(v9 + v42);
  uint64_t v44 = (void *)(v10 + v42);
  uint64_t v45 = sub_1000B32E0();
  uint64_t v111 = *(void *)(v45 - 8);
  uint64_t v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v111 + 48);
  LODWORD(v36) = v46(v43, 1, v45);
  int v47 = v46(v44, 1, v45);
  if (v36)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v111 + 32))(v43, v44, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v43, 0, 1, v45);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v111 + 8))(v43, v45);
LABEL_6:
    uint64_t v48 = sub_100004210(&qword_1000D5098);
    memcpy(v43, v44, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v111 + 40))(v43, v44, v45);
LABEL_7:
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v49 = v11[19];
  uint64_t v50 = v9 + v49;
  uint64_t v51 = v10 + v49;
  *(void *)uint64_t v50 = *(void *)v51;
  *(unsigned char *)(v50 + 8) = *(unsigned char *)(v51 + 8);
  uint64_t v52 = v11[20];
  uint64_t v53 = (void *)(v9 + v52);
  uint64_t v54 = (uint64_t *)(v10 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  *uint64_t v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  uint64_t v57 = a3[5];
  uint64_t v58 = v110 + v57;
  uint64_t v59 = v113 + v57;
  v109(v110 + v57, v113 + v57, v5);
  v109(v58 + v11[5], v59 + v11[5], v5);
  uint64_t v60 = v11[6];
  uint64_t v61 = (void *)(v58 + v60);
  uint64_t v62 = (uint64_t *)(v59 + v60);
  uint64_t v64 = *v62;
  uint64_t v63 = v62[1];
  void *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  uint64_t v65 = v11[7];
  uint64_t v66 = (void *)(v58 + v65);
  int v67 = (uint64_t *)(v59 + v65);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  *uint64_t v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  uint64_t v70 = v11[8];
  uint64_t v71 = (void *)(v58 + v70);
  uint64_t v72 = (uint64_t *)(v59 + v70);
  uint64_t v74 = *v72;
  uint64_t v73 = v72[1];
  *uint64_t v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  uint64_t v75 = v11[9];
  uint64_t v76 = (void *)(v58 + v75);
  uint64_t v77 = (uint64_t *)(v59 + v75);
  uint64_t v79 = *v77;
  uint64_t v78 = v77[1];
  void *v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
  v108(v58 + v11[10], v59 + v11[10], v35);
  v108(v58 + v11[11], v59 + v11[11], v35);
  *(void *)(v58 + v11[12]) = *(void *)(v59 + v11[12]);
  swift_release();
  *(unsigned char *)(v58 + v11[13]) = *(unsigned char *)(v59 + v11[13]);
  uint64_t v80 = v11[14];
  uint64_t v81 = v58 + v80;
  uint64_t v82 = (uint64_t *)(v59 + v80);
  uint64_t v83 = *v82;
  LOBYTE(v82) = *((unsigned char *)v82 + 8);
  uint64_t v84 = *(void **)v81;
  *(void *)uint64_t v81 = v83;
  *(unsigned char *)(v81 + 8) = (_BYTE)v82;

  *(void *)(v58 + v11[15]) = *(void *)(v59 + v11[15]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v58 + v11[16]) = *(unsigned char *)(v59 + v11[16]);
  uint64_t v85 = v11[17];
  uint64_t v86 = (void *)(v58 + v85);
  uint64_t v87 = (void *)(v59 + v85);
  int v88 = v46((void *)(v58 + v85), 1, v45);
  int v89 = v46(v87, 1, v45);
  if (!v88)
  {
    if (!v89)
    {
      (*(void (**)(void *, void *, uint64_t))(v111 + 40))(v86, v87, v45);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v111 + 8))(v86, v45);
    goto LABEL_12;
  }
  if (v89)
  {
LABEL_12:
    uint64_t v90 = sub_100004210(&qword_1000D5098);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v111 + 32))(v86, v87, v45);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v86, 0, 1, v45);
LABEL_13:
  *(unsigned char *)(v58 + v11[18]) = *(unsigned char *)(v59 + v11[18]);
  uint64_t v91 = v11[19];
  uint64_t v92 = v58 + v91;
  uint64_t v93 = v59 + v91;
  *(void *)uint64_t v92 = *(void *)v93;
  *(unsigned char *)(v92 + 8) = *(unsigned char *)(v93 + 8);
  uint64_t v94 = v11[20];
  uint64_t v95 = (void *)(v58 + v94);
  uint64_t v96 = (uint64_t *)(v59 + v94);
  uint64_t v98 = *v96;
  uint64_t v97 = v96[1];
  *uint64_t v95 = v98;
  v95[1] = v97;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v58 + v11[21]) = *(unsigned char *)(v59 + v11[21]);
  uint64_t v99 = a3[7];
  *(unsigned char *)(v110 + a3[6]) = *(unsigned char *)(v113 + a3[6]);
  *(_OWORD *)(v110 + v99) = *(_OWORD *)(v113 + v99);
  uint64_t v100 = a3[8];
  uint64_t v101 = v110 + v100;
  uint64_t v102 = v113 + v100;
  *(_OWORD *)(v110 + v100) = *(_OWORD *)(v113 + v100);
  uint64_t v103 = *(int *)(sub_1000B3690() + 20);
  uint64_t v104 = v101 + v103;
  uint64_t v105 = v102 + v103;
  uint64_t v106 = sub_1000B3860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 40))(v104, v105, v106);
  return v110;
}

uint64_t getEnumTagSinglePayload for TileView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100096654);
}

uint64_t sub_100096654(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for WidgetTileInfo();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 253)
  {
    unsigned int v14 = *(unsigned __int8 *)(a1 + a3[6]);
    if (v14 >= 3) {
      return v14 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v15 = sub_1000B3690();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for TileView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000967E0);
}

uint64_t sub_1000967E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for WidgetTileInfo();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 253)
  {
    *(unsigned char *)(a1 + a4[6]) = a2 + 2;
  }
  else
  {
    uint64_t v15 = sub_1000B3690();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t sub_10009695C()
{
  uint64_t result = type metadata accessor for AccessoryAndSceneEntity();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WidgetTileInfo();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1000B3690();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_100096A78()
{
  unint64_t result = qword_1000D7088;
  if (!qword_1000D7088)
  {
    sub_100004B80(&qword_1000D6FC0);
    sub_100096B54(&qword_1000D6FC8, (void (*)(uint64_t))type metadata accessor for SingleTapTargetTileView);
    sub_100096B54(&qword_1000D6168, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7088);
  }
  return result;
}

uint64_t sub_100096B54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100096B9C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)v12;
    char v14 = v12[8];
    sub_100044118(*(void *)v12, v14);
    *(void *)uint64_t v11 = v13;
    v11[8] = v14;
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_1000B3620();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    long long v125 = a1;
    long long v126 = a3;
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    long long v127 = a2;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_1000B2F60();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    v23(v20, v21, v22);
    uint64_t v24 = type metadata accessor for AccessoryAndSceneEntity();
    v23(&v20[*(int *)(v24 + 20)], &v21[*(int *)(v24 + 20)], v22);
    uint64_t v25 = *(int *)(v24 + 24);
    uint64_t v26 = &v20[v25];
    uint64_t v27 = &v21[v25];
    v23(&v20[v25], &v21[v25], v22);
    uint64_t v28 = (int *)type metadata accessor for WidgetTileInfo();
    uint64_t v121 = v22;
    char v124 = v23;
    v23(&v26[v28[5]], &v27[v28[5]], v22);
    uint64_t v29 = v28[6];
    uint64_t v30 = &v26[v29];
    uint64_t v31 = &v27[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = v28[7];
    uint64_t v34 = &v26[v33];
    uint64_t v35 = &v27[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v28[8];
    uint64_t v38 = &v26[v37];
    uint64_t v39 = &v27[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    uint64_t v41 = v28[9];
    uint64_t v42 = &v26[v41];
    uint64_t v43 = &v27[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *(void *)uint64_t v42 = *(void *)v43;
    *((void *)v42 + 1) = v44;
    uint64_t v45 = v28[10];
    __int16 v122 = &v26[v45];
    uint64_t v119 = &v27[v45];
    uint64_t v46 = sub_1000B33D0();
    int v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(v122, v119, v46);
    uint64_t v123 = v46;
    char v120 = v47;
    v47(&v26[v28[11]], &v27[v28[11]], v46);
    *(void *)&v26[v28[12]] = *(void *)&v27[v28[12]];
    v26[v28[13]] = v27[v28[13]];
    uint64_t v48 = v28[14];
    uint64_t v49 = &v26[v48];
    uint64_t v50 = &v27[v48];
    uint64_t v51 = *(void **)v50;
    LOBYTE(v50) = v50[8];
    *(void *)uint64_t v49 = v51;
    v49[8] = (char)v50;
    *(void *)&v26[v28[15]] = *(void *)&v27[v28[15]];
    v26[v28[16]] = v27[v28[16]];
    uint64_t v52 = v28[17];
    __dst = &v26[v52];
    uint64_t v53 = &v27[v52];
    uint64_t v54 = sub_1000B32E0();
    uint64_t v55 = *(void *)(v54 - 8);
    uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    uint64_t v57 = v54;
    swift_retain();
    id v58 = v51;
    swift_bridgeObjectRetain();
    char v118 = v56;
    uint64_t v116 = v55;
    if (v56(v53, 1, v57))
    {
      uint64_t v59 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v53, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(__dst, v53, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v57);
    }
    uint64_t v60 = v57;
    v26[v28[18]] = v27[v28[18]];
    uint64_t v61 = v28[19];
    uint64_t v62 = &v26[v61];
    uint64_t v63 = &v27[v61];
    *(void *)uint64_t v62 = *(void *)v63;
    v62[8] = v63[8];
    uint64_t v64 = v28[20];
    uint64_t v65 = &v26[v64];
    uint64_t v66 = &v27[v64];
    uint64_t v67 = *((void *)v66 + 1);
    *(void *)uint64_t v65 = *(void *)v66;
    *((void *)v65 + 1) = v67;
    v26[v28[21]] = v27[v28[21]];
    uint64_t v9 = v125;
    uint64_t v68 = v126[8];
    uint64_t v69 = (char *)v125 + v68;
    uint64_t v70 = (char *)v127 + v68;
    swift_bridgeObjectRetain();
    v124(v69, v70, v121);
    v124(&v69[v28[5]], &v70[v28[5]], v121);
    uint64_t v71 = v28[6];
    uint64_t v72 = &v69[v71];
    uint64_t v73 = &v70[v71];
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = v28[7];
    uint64_t v76 = &v69[v75];
    uint64_t v77 = &v70[v75];
    uint64_t v78 = *((void *)v77 + 1);
    *(void *)uint64_t v76 = *(void *)v77;
    *((void *)v76 + 1) = v78;
    uint64_t v79 = v28[8];
    uint64_t v80 = &v69[v79];
    uint64_t v81 = &v70[v79];
    uint64_t v82 = *((void *)v81 + 1);
    *(void *)uint64_t v80 = *(void *)v81;
    *((void *)v80 + 1) = v82;
    uint64_t v83 = v28[9];
    uint64_t v84 = &v69[v83];
    uint64_t v85 = &v70[v83];
    uint64_t v86 = *((void *)v85 + 1);
    *(void *)uint64_t v84 = *(void *)v85;
    *((void *)v84 + 1) = v86;
    uint64_t v87 = v28[10];
    int v88 = &v69[v87];
    int v89 = &v70[v87];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v120(v88, v89, v123);
    v120(&v69[v28[11]], &v70[v28[11]], v123);
    *(void *)&v69[v28[12]] = *(void *)&v70[v28[12]];
    v69[v28[13]] = v70[v28[13]];
    uint64_t v90 = v28[14];
    uint64_t v91 = &v69[v90];
    uint64_t v92 = &v70[v90];
    uint64_t v93 = *(void **)v92;
    LOBYTE(v92) = v92[8];
    *(void *)uint64_t v91 = v93;
    v91[8] = (char)v92;
    *(void *)&v69[v28[15]] = *(void *)&v70[v28[15]];
    v69[v28[16]] = v70[v28[16]];
    uint64_t v94 = v28[17];
    uint64_t v95 = &v69[v94];
    uint64_t v96 = &v70[v94];
    swift_retain();
    id v97 = v93;
    swift_bridgeObjectRetain();
    if (v118(v96, 1, v60))
    {
      uint64_t v98 = sub_100004210(&qword_1000D5098);
      memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v95, v96, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v95, 0, 1, v60);
    }
    v69[v28[18]] = v70[v28[18]];
    uint64_t v99 = v28[19];
    uint64_t v100 = &v69[v99];
    uint64_t v101 = &v70[v99];
    *(void *)uint64_t v100 = *(void *)v101;
    v100[8] = v101[8];
    uint64_t v102 = v28[20];
    uint64_t v103 = &v69[v102];
    uint64_t v104 = &v70[v102];
    uint64_t v105 = *((void *)v104 + 1);
    *(void *)uint64_t v103 = *(void *)v104;
    *((void *)v103 + 1) = v105;
    v69[v28[21]] = v70[v28[21]];
    uint64_t v106 = v126[10];
    *((unsigned char *)v125 + v126[9]) = *((unsigned char *)v127 + v126[9]);
    *(_OWORD *)((char *)v125 + v106) = *(_OWORD *)((char *)v127 + v106);
    uint64_t v107 = v126[11];
    long long v108 = (char *)v125 + v107;
    uint64_t v109 = (char *)v127 + v107;
    *(_OWORD *)((char *)v125 + v107) = *(_OWORD *)((char *)v127 + v107);
    uint64_t v110 = *(int *)(sub_1000B3690() + 20);
    uint64_t v111 = &v108[v110];
    long long v112 = &v109[v110];
    uint64_t v113 = sub_1000B3860();
    long long v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
    swift_bridgeObjectRetain();
    v114(v111, v112, v113);
  }
  return v9;
}

uint64_t sub_1000973B0(uint64_t a1, int *a2)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_1000441FC(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3620();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_1000B2F60();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = type metadata accessor for AccessoryAndSceneEntity();
  v9(v7 + *(int *)(v10 + 20), v8);
  uint64_t v11 = v7 + *(int *)(v10 + 24);
  v9(v11, v8);
  uint64_t v12 = (int *)type metadata accessor for WidgetTileInfo();
  v9(v11 + v12[5], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v11 + v12[10];
  uint64_t v14 = sub_1000B33D0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);
  v15(v11 + v12[11], v14);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v26 = a1;
  uint64_t v16 = v11 + v12[17];
  uint64_t v27 = sub_1000B32E0();
  uint64_t v24 = *(void *)(v27 - 8);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t))(v24 + 48);
  if (!v25(v16, 1)) {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v16, v27);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v26 + a2[8];
  v9(v17, v8);
  v9(v17 + v12[5], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15(v17 + v12[10], v14);
  v15(v17 + v12[11], v14);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v18 = v17 + v12[17];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v25)(v18, 1, v27)) {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v18, v27);
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = v26 + a2[11];
  uint64_t v20 = v19 + *(int *)(sub_1000B3690() + 20);
  uint64_t v21 = sub_1000B3860();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);

  return v22(v20, v21);
}

void *sub_100097864(void *a1, void *a2, int *a3)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3620();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v121 = a1;
  __int16 v122 = a3;
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v123 = a2;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1000B2F60();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  uint64_t v21 = type metadata accessor for AccessoryAndSceneEntity();
  v20(&v17[*(int *)(v21 + 20)], &v18[*(int *)(v21 + 20)], v19);
  uint64_t v22 = *(int *)(v21 + 24);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  v20(&v17[v22], &v18[v22], v19);
  uint64_t v25 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v117 = v19;
  char v120 = v20;
  v20(&v23[v25[5]], &v24[v25[5]], v19);
  uint64_t v26 = v25[6];
  uint64_t v27 = &v23[v26];
  uint64_t v28 = &v24[v26];
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  uint64_t v30 = v25[7];
  uint64_t v31 = &v23[v30];
  uint64_t v32 = &v24[v30];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  uint64_t v34 = v25[8];
  uint64_t v35 = &v23[v34];
  uint64_t v36 = &v24[v34];
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = v37;
  uint64_t v38 = v25[9];
  uint64_t v39 = &v23[v38];
  uint64_t v40 = &v24[v38];
  uint64_t v41 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = v41;
  uint64_t v42 = v25[10];
  char v118 = &v23[v42];
  uint64_t v115 = &v24[v42];
  uint64_t v43 = sub_1000B33D0();
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(v118, v115, v43);
  uint64_t v119 = v43;
  uint64_t v116 = v44;
  v44(&v23[v25[11]], &v24[v25[11]], v43);
  *(void *)&v23[v25[12]] = *(void *)&v24[v25[12]];
  v23[v25[13]] = v24[v25[13]];
  uint64_t v45 = v25[14];
  uint64_t v46 = &v23[v45];
  int v47 = &v24[v45];
  uint64_t v48 = *(void **)v47;
  LOBYTE(v47) = v47[8];
  *(void *)uint64_t v46 = v48;
  v46[8] = (char)v47;
  *(void *)&v23[v25[15]] = *(void *)&v24[v25[15]];
  v23[v25[16]] = v24[v25[16]];
  uint64_t v49 = v25[17];
  __dst = &v23[v49];
  uint64_t v50 = &v24[v49];
  uint64_t v51 = sub_1000B32E0();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
  uint64_t v54 = v51;
  swift_retain();
  id v55 = v48;
  swift_bridgeObjectRetain();
  long long v114 = v53;
  if (v53(v50, 1, v54))
  {
    uint64_t v56 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v50, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v50, v54);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 1, v54);
  }
  uint64_t v57 = v54;
  v23[v25[18]] = v24[v25[18]];
  uint64_t v58 = v25[19];
  uint64_t v59 = &v23[v58];
  uint64_t v60 = &v24[v58];
  *(void *)uint64_t v59 = *(void *)v60;
  v59[8] = v60[8];
  uint64_t v61 = v25[20];
  uint64_t v62 = &v23[v61];
  uint64_t v63 = &v24[v61];
  uint64_t v64 = *((void *)v63 + 1);
  *(void *)uint64_t v62 = *(void *)v63;
  *((void *)v62 + 1) = v64;
  v23[v25[21]] = v24[v25[21]];
  uint64_t v65 = v122[8];
  uint64_t v66 = (char *)v121 + v65;
  uint64_t v67 = (char *)v123 + v65;
  swift_bridgeObjectRetain();
  v120(v66, v67, v117);
  v120(&v66[v25[5]], &v67[v25[5]], v117);
  uint64_t v68 = v25[6];
  uint64_t v69 = &v66[v68];
  uint64_t v70 = &v67[v68];
  uint64_t v71 = *((void *)v70 + 1);
  *(void *)uint64_t v69 = *(void *)v70;
  *((void *)v69 + 1) = v71;
  uint64_t v72 = v25[7];
  uint64_t v73 = &v66[v72];
  uint64_t v74 = &v67[v72];
  uint64_t v75 = *((void *)v74 + 1);
  *(void *)uint64_t v73 = *(void *)v74;
  *((void *)v73 + 1) = v75;
  uint64_t v76 = v25[8];
  uint64_t v77 = &v66[v76];
  uint64_t v78 = &v67[v76];
  uint64_t v79 = *((void *)v78 + 1);
  *(void *)uint64_t v77 = *(void *)v78;
  *((void *)v77 + 1) = v79;
  uint64_t v80 = v25[9];
  uint64_t v81 = &v66[v80];
  uint64_t v82 = &v67[v80];
  uint64_t v83 = *((void *)v82 + 1);
  *(void *)uint64_t v81 = *(void *)v82;
  *((void *)v81 + 1) = v83;
  uint64_t v84 = v25[10];
  uint64_t v85 = &v66[v84];
  uint64_t v86 = &v67[v84];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v116(v85, v86, v119);
  v116(&v66[v25[11]], &v67[v25[11]], v119);
  *(void *)&v66[v25[12]] = *(void *)&v67[v25[12]];
  v66[v25[13]] = v67[v25[13]];
  uint64_t v87 = v25[14];
  int v88 = &v66[v87];
  int v89 = &v67[v87];
  uint64_t v90 = *(void **)v89;
  LOBYTE(v89) = v89[8];
  *(void *)int v88 = v90;
  v88[8] = (char)v89;
  *(void *)&v66[v25[15]] = *(void *)&v67[v25[15]];
  v66[v25[16]] = v67[v25[16]];
  uint64_t v91 = v25[17];
  uint64_t v92 = &v66[v91];
  uint64_t v93 = &v67[v91];
  swift_retain();
  id v94 = v90;
  swift_bridgeObjectRetain();
  if (v114(v93, 1, v57))
  {
    uint64_t v95 = sub_100004210(&qword_1000D5098);
    memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v92, v93, v57);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v92, 0, 1, v57);
  }
  v66[v25[18]] = v67[v25[18]];
  uint64_t v96 = v25[19];
  id v97 = &v66[v96];
  uint64_t v98 = &v67[v96];
  *(void *)id v97 = *(void *)v98;
  v97[8] = v98[8];
  uint64_t v99 = v25[20];
  uint64_t v100 = &v66[v99];
  uint64_t v101 = &v67[v99];
  uint64_t v102 = *((void *)v101 + 1);
  *(void *)uint64_t v100 = *(void *)v101;
  *((void *)v100 + 1) = v102;
  v66[v25[21]] = v67[v25[21]];
  uint64_t v103 = v122[10];
  *((unsigned char *)v121 + v122[9]) = *((unsigned char *)v123 + v122[9]);
  *(_OWORD *)((char *)v121 + v103) = *(_OWORD *)((char *)v123 + v103);
  uint64_t v104 = v122[11];
  uint64_t v105 = (char *)v121 + v104;
  uint64_t v106 = (char *)v123 + v104;
  *(_OWORD *)((char *)v121 + v104) = *(_OWORD *)((char *)v123 + v104);
  uint64_t v107 = *(int *)(sub_1000B3690() + 20);
  long long v108 = &v105[v107];
  uint64_t v109 = &v106[v107];
  uint64_t v110 = sub_1000B3860();
  uint64_t v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
  swift_bridgeObjectRetain();
  v111(v108, v109, v110);
  return v121;
}

char *sub_100098028(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000B3E20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_1000441FC(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    sub_100017B5C((uint64_t)&a1[v14], &qword_1000D4F90);
    sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1000B3620();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *(void *)uint64_t v15 = *(void *)v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  long long v114 = a3;
  uint64_t v115 = a2;
  uint64_t v18 = a3[7];
  long long v112 = a1;
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_1000B2F60();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24);
  v22(v19, v20, v21);
  uint64_t v23 = type metadata accessor for AccessoryAndSceneEntity();
  v22(&v19[*(int *)(v23 + 20)], &v20[*(int *)(v23 + 20)], v21);
  uint64_t v24 = *(int *)(v23 + 24);
  uint64_t v25 = &v19[v24];
  uint64_t v26 = &v20[v24];
  v22(&v19[v24], &v20[v24], v21);
  uint64_t v27 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v111 = v22;
  v22(&v25[v27[5]], &v26[v27[5]], v21);
  uint64_t v28 = v27[6];
  uint64_t v29 = &v25[v28];
  uint64_t v30 = &v26[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v27[7];
  uint64_t v32 = &v25[v31];
  uint64_t v33 = &v26[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = *((void *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v27[8];
  uint64_t v35 = &v25[v34];
  uint64_t v36 = &v26[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v27[9];
  uint64_t v38 = &v25[v37];
  uint64_t v39 = &v26[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = v27[10];
  uint64_t v41 = &v25[v40];
  uint64_t v42 = &v26[v40];
  uint64_t v43 = sub_1000B33D0();
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24);
  v44(v41, v42, v43);
  uint64_t v109 = v44;
  uint64_t v110 = v43;
  v44(&v25[v27[11]], &v26[v27[11]], v43);
  *(void *)&v25[v27[12]] = *(void *)&v26[v27[12]];
  swift_retain();
  swift_release();
  v25[v27[13]] = v26[v27[13]];
  uint64_t v45 = v27[14];
  uint64_t v46 = &v25[v45];
  int v47 = &v26[v45];
  uint64_t v48 = *(void **)v47;
  LOBYTE(v47) = v47[8];
  uint64_t v49 = *(void **)v46;
  *(void *)uint64_t v46 = v48;
  v46[8] = (char)v47;
  id v50 = v48;

  *(void *)&v25[v27[15]] = *(void *)&v26[v27[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25[v27[16]] = v26[v27[16]];
  uint64_t v51 = v27[17];
  uint64_t v52 = &v25[v51];
  uint64_t v53 = &v26[v51];
  uint64_t v54 = sub_1000B32E0();
  uint64_t v113 = *(void *)(v54 - 8);
  id v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v113 + 48);
  LODWORD(v44) = v55(v52, 1, v54);
  int v56 = v55(v53, 1, v54);
  if (v44)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v52, 0, 1, v54);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v52, v54);
LABEL_16:
    uint64_t v57 = sub_100004210(&qword_1000D5098);
    memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v113 + 24))(v52, v53, v54);
LABEL_17:
  v25[v27[18]] = v26[v27[18]];
  uint64_t v58 = v27[19];
  uint64_t v59 = &v25[v58];
  uint64_t v60 = &v26[v58];
  uint64_t v61 = *(void *)v60;
  v59[8] = v60[8];
  *(void *)uint64_t v59 = v61;
  uint64_t v62 = v27[20];
  uint64_t v63 = &v25[v62];
  uint64_t v64 = &v26[v62];
  *(void *)uint64_t v63 = *(void *)v64;
  *((void *)v63 + 1) = *((void *)v64 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25[v27[21]] = v26[v27[21]];
  uint64_t v65 = v114[8];
  uint64_t v66 = &v112[v65];
  uint64_t v67 = &v115[v65];
  v111(&v112[v65], &v115[v65], v21);
  v111(&v66[v27[5]], &v67[v27[5]], v21);
  uint64_t v68 = v27[6];
  uint64_t v69 = &v66[v68];
  uint64_t v70 = &v67[v68];
  *(void *)uint64_t v69 = *(void *)v70;
  *((void *)v69 + 1) = *((void *)v70 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v71 = v27[7];
  uint64_t v72 = &v66[v71];
  uint64_t v73 = &v67[v71];
  *(void *)uint64_t v72 = *(void *)v73;
  *((void *)v72 + 1) = *((void *)v73 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = v27[8];
  uint64_t v75 = &v66[v74];
  uint64_t v76 = &v67[v74];
  *(void *)uint64_t v75 = *(void *)v76;
  *((void *)v75 + 1) = *((void *)v76 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v77 = v27[9];
  uint64_t v78 = &v66[v77];
  uint64_t v79 = &v67[v77];
  *(void *)uint64_t v78 = *(void *)v79;
  *((void *)v78 + 1) = *((void *)v79 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v109(&v66[v27[10]], &v67[v27[10]], v110);
  v109(&v66[v27[11]], &v67[v27[11]], v110);
  *(void *)&v66[v27[12]] = *(void *)&v67[v27[12]];
  swift_retain();
  swift_release();
  v66[v27[13]] = v67[v27[13]];
  uint64_t v80 = v27[14];
  uint64_t v81 = &v66[v80];
  uint64_t v82 = &v67[v80];
  uint64_t v83 = *(void **)v82;
  LOBYTE(v82) = v82[8];
  uint64_t v84 = *(void **)v81;
  *(void *)uint64_t v81 = v83;
  v81[8] = (char)v82;
  id v85 = v83;

  *(void *)&v66[v27[15]] = *(void *)&v67[v27[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[v27[16]] = v67[v27[16]];
  uint64_t v86 = v27[17];
  uint64_t v87 = &v66[v86];
  int v88 = &v67[v86];
  LODWORD(v84) = v55(&v66[v86], 1, v54);
  int v89 = v55(v88, 1, v54);
  if (!v84)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v113 + 24))(v87, v88, v54);
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v113 + 8))(v87, v54);
    goto LABEL_22;
  }
  if (v89)
  {
LABEL_22:
    uint64_t v90 = sub_100004210(&qword_1000D5098);
    memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v87, v88, v54);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v87, 0, 1, v54);
LABEL_23:
  v66[v27[18]] = v67[v27[18]];
  uint64_t v91 = v27[19];
  uint64_t v92 = &v66[v91];
  uint64_t v93 = &v67[v91];
  uint64_t v94 = *(void *)v93;
  v92[8] = v93[8];
  *(void *)uint64_t v92 = v94;
  uint64_t v95 = v27[20];
  uint64_t v96 = &v66[v95];
  id v97 = &v67[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[v27[21]] = v67[v27[21]];
  v112[v114[9]] = v115[v114[9]];
  uint64_t v98 = v114[10];
  uint64_t v99 = &v112[v98];
  uint64_t v100 = &v115[v98];
  *(void *)uint64_t v99 = *(void *)v100;
  *((void *)v99 + 1) = *((void *)v100 + 1);
  uint64_t v101 = v114[11];
  uint64_t v102 = &v112[v101];
  uint64_t v103 = &v115[v101];
  *(void *)uint64_t v102 = *(void *)&v115[v101];
  *((void *)v102 + 1) = *(void *)&v115[v101 + 8];
  uint64_t v104 = *(int *)(sub_1000B3690() + 20);
  uint64_t v105 = &v102[v104];
  uint64_t v106 = &v103[v104];
  uint64_t v107 = sub_1000B3860();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 24))(v105, v106, v107);
  return v112;
}

char *sub_1000989C0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3E20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  uint64_t v14 = sub_100004210(&qword_1000D4F90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1000B3620();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v68 = a1;
  uint64_t v69 = a3;
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_1000B2F60();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  uint64_t v21 = type metadata accessor for AccessoryAndSceneEntity();
  v20(&v17[*(int *)(v21 + 20)], &v18[*(int *)(v21 + 20)], v19);
  uint64_t v22 = *(int *)(v21 + 24);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  v20(&v17[v22], &v18[v22], v19);
  uint64_t v25 = (int *)type metadata accessor for WidgetTileInfo();
  uint64_t v67 = v20;
  v20(&v23[v25[5]], &v24[v25[5]], v19);
  *(_OWORD *)&v23[v25[6]] = *(_OWORD *)&v24[v25[6]];
  *(_OWORD *)&v23[v25[7]] = *(_OWORD *)&v24[v25[7]];
  *(_OWORD *)&v23[v25[8]] = *(_OWORD *)&v24[v25[8]];
  *(_OWORD *)&v23[v25[9]] = *(_OWORD *)&v24[v25[9]];
  uint64_t v26 = v25[10];
  uint64_t v27 = &v23[v26];
  uint64_t v28 = &v24[v26];
  uint64_t v29 = sub_1000B33D0();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32);
  v30(v27, v28, v29);
  uint64_t v66 = v30;
  v30(&v23[v25[11]], &v24[v25[11]], v29);
  *(void *)&v23[v25[12]] = *(void *)&v24[v25[12]];
  v23[v25[13]] = v24[v25[13]];
  uint64_t v31 = v25[14];
  uint64_t v32 = &v23[v31];
  uint64_t v33 = &v24[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)&v23[v25[15]] = *(void *)&v24[v25[15]];
  v23[v25[16]] = v24[v25[16]];
  uint64_t v34 = v25[17];
  uint64_t v35 = &v23[v34];
  uint64_t v36 = &v24[v34];
  uint64_t v37 = sub_1000B32E0();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  if (v65(v36, 1, v37))
  {
    uint64_t v39 = sub_100004210(&qword_1000D5098);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v23[v25[18]] = v24[v25[18]];
  uint64_t v40 = v25[19];
  uint64_t v41 = &v23[v40];
  uint64_t v42 = &v24[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v42[8];
  *(_OWORD *)&v23[v25[20]] = *(_OWORD *)&v24[v25[20]];
  v23[v25[21]] = v24[v25[21]];
  uint64_t v43 = v69[8];
  uint64_t v44 = &v68[v43];
  uint64_t v45 = &a2[v43];
  v67(&v68[v43], &a2[v43], v19);
  v67(&v44[v25[5]], &v45[v25[5]], v19);
  *(_OWORD *)&v44[v25[6]] = *(_OWORD *)&v45[v25[6]];
  *(_OWORD *)&v44[v25[7]] = *(_OWORD *)&v45[v25[7]];
  *(_OWORD *)&v44[v25[8]] = *(_OWORD *)&v45[v25[8]];
  *(_OWORD *)&v44[v25[9]] = *(_OWORD *)&v45[v25[9]];
  v66(&v44[v25[10]], &v45[v25[10]], v29);
  v66(&v44[v25[11]], &v45[v25[11]], v29);
  *(void *)&v44[v25[12]] = *(void *)&v45[v25[12]];
  v44[v25[13]] = v45[v25[13]];
  uint64_t v46 = v25[14];
  int v47 = &v44[v46];
  uint64_t v48 = &v45[v46];
  *(void *)int v47 = *(void *)v48;
  v47[8] = v48[8];
  *(void *)&v44[v25[15]] = *(void *)&v45[v25[15]];
  v44[v25[16]] = v45[v25[16]];
  uint64_t v49 = v25[17];
  id v50 = &v44[v49];
  uint64_t v51 = &v45[v49];
  if (v65(&v45[v49], 1, v37))
  {
    uint64_t v52 = sub_100004210(&qword_1000D5098);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v50, v51, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v50, 0, 1, v37);
  }
  v44[v25[18]] = v45[v25[18]];
  uint64_t v53 = v25[19];
  uint64_t v54 = &v44[v53];
  id v55 = &v45[v53];
  *(void *)uint64_t v54 = *(void *)v55;
  v54[8] = v55[8];
  *(_OWORD *)&v44[v25[20]] = *(_OWORD *)&v45[v25[20]];
  v44[v25[21]] = v45[v25[21]];
  uint64_t v56 = v69[10];
  v68[v69[9]] = a2[v69[9]];
  *(_OWORD *)&v68[v56] = *(_OWORD *)&a2[v56];
  uint64_t v57 = v69[11];
  uint64_t v58 = &v68[v57];
  uint64_t v59 = &a2[v57];
  *(_OWORD *)&v68[v57] = *(_OWORD *)&a2[v57];
  uint64_t v60 = *(int *)(sub_1000B3690() + 20);
  uint64_t v61 = &v58[v60];
  uint64_t v62 = &v59[v60];
  uint64_t v63 = sub_1000B3860();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
  return v68;
}

char *sub_100099094(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    uint64_t v6 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_1000441FC(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    sub_100017B5C((uint64_t)&a1[v14], &qword_1000D4F90);
    uint64_t v17 = sub_100004210(&qword_1000D4F90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_1000B3620();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  long long v129 = a3;
  long long v130 = a2;
  uint64_t v19 = a3[7];
  long long v127 = a1;
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_1000B2F60();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40);
  v23(v20, v21, v22);
  uint64_t v24 = type metadata accessor for AccessoryAndSceneEntity();
  v23(&v20[*(int *)(v24 + 20)], &v21[*(int *)(v24 + 20)], v22);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v26 = &v20[v25];
  uint64_t v27 = &v21[v25];
  v23(&v20[v25], &v21[v25], v22);
  uint64_t v28 = (int *)type metadata accessor for WidgetTileInfo();
  long long v126 = v23;
  v23(&v26[v28[5]], &v27[v28[5]], v22);
  uint64_t v29 = v28[6];
  uint64_t v30 = &v26[v29];
  uint64_t v31 = &v27[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = v28[7];
  uint64_t v35 = &v26[v34];
  uint64_t v36 = &v27[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = v38;
  *((void *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = v28[8];
  uint64_t v40 = &v26[v39];
  uint64_t v41 = &v27[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = v43;
  *((void *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = v28[9];
  uint64_t v45 = &v26[v44];
  uint64_t v46 = &v27[v44];
  uint64_t v48 = *(void *)v46;
  uint64_t v47 = *((void *)v46 + 1);
  *(void *)uint64_t v45 = v48;
  *((void *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = v28[10];
  id v50 = &v26[v49];
  uint64_t v51 = &v27[v49];
  uint64_t v52 = sub_1000B33D0();
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 40);
  v53(v50, v51, v52);
  long long v125 = v53;
  v53(&v26[v28[11]], &v27[v28[11]], v52);
  *(void *)&v26[v28[12]] = *(void *)&v27[v28[12]];
  swift_release();
  v26[v28[13]] = v27[v28[13]];
  uint64_t v54 = v28[14];
  id v55 = &v26[v54];
  uint64_t v56 = &v27[v54];
  uint64_t v57 = *(void *)v56;
  LOBYTE(v56) = v56[8];
  uint64_t v58 = *(void **)v55;
  *(void *)id v55 = v57;
  v55[8] = (char)v56;

  *(void *)&v26[v28[15]] = *(void *)&v27[v28[15]];
  swift_bridgeObjectRelease();
  v26[v28[16]] = v27[v28[16]];
  uint64_t v59 = v28[17];
  uint64_t v60 = &v26[v59];
  uint64_t v61 = &v27[v59];
  uint64_t v62 = sub_1000B32E0();
  uint64_t v128 = *(void *)(v62 - 8);
  uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v128 + 48);
  LODWORD(v53) = v63(v60, 1, v62);
  int v64 = v63(v61, 1, v62);
  if (v53)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v60, v61, v62);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v60, 0, 1, v62);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v128 + 8))(v60, v62);
LABEL_14:
    uint64_t v65 = sub_100004210(&qword_1000D5098);
    memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v128 + 40))(v60, v61, v62);
LABEL_15:
  v26[v28[18]] = v27[v28[18]];
  uint64_t v66 = v28[19];
  uint64_t v67 = &v26[v66];
  uint64_t v68 = &v27[v66];
  *(void *)uint64_t v67 = *(void *)v68;
  v67[8] = v68[8];
  uint64_t v69 = v28[20];
  uint64_t v70 = &v26[v69];
  uint64_t v71 = &v27[v69];
  uint64_t v73 = *(void *)v71;
  uint64_t v72 = *((void *)v71 + 1);
  *(void *)uint64_t v70 = v73;
  *((void *)v70 + 1) = v72;
  swift_bridgeObjectRelease();
  v26[v28[21]] = v27[v28[21]];
  uint64_t v74 = v129[8];
  uint64_t v75 = &v127[v74];
  uint64_t v76 = &v130[v74];
  v126(&v127[v74], &v130[v74], v22);
  v126(&v75[v28[5]], &v76[v28[5]], v22);
  uint64_t v77 = v28[6];
  uint64_t v78 = &v75[v77];
  uint64_t v79 = &v76[v77];
  uint64_t v81 = *(void *)v79;
  uint64_t v80 = *((void *)v79 + 1);
  *(void *)uint64_t v78 = v81;
  *((void *)v78 + 1) = v80;
  swift_bridgeObjectRelease();
  uint64_t v82 = v28[7];
  uint64_t v83 = &v75[v82];
  uint64_t v84 = &v76[v82];
  uint64_t v86 = *(void *)v84;
  uint64_t v85 = *((void *)v84 + 1);
  *(void *)uint64_t v83 = v86;
  *((void *)v83 + 1) = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = v28[8];
  int v88 = &v75[v87];
  int v89 = &v76[v87];
  uint64_t v91 = *(void *)v89;
  uint64_t v90 = *((void *)v89 + 1);
  *(void *)int v88 = v91;
  *((void *)v88 + 1) = v90;
  swift_bridgeObjectRelease();
  uint64_t v92 = v28[9];
  uint64_t v93 = &v75[v92];
  uint64_t v94 = &v76[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  swift_bridgeObjectRelease();
  v125(&v75[v28[10]], &v76[v28[10]], v52);
  v125(&v75[v28[11]], &v76[v28[11]], v52);
  *(void *)&v75[v28[12]] = *(void *)&v76[v28[12]];
  swift_release();
  v75[v28[13]] = v76[v28[13]];
  uint64_t v97 = v28[14];
  uint64_t v98 = &v75[v97];
  uint64_t v99 = &v76[v97];
  uint64_t v100 = *(void *)v99;
  LOBYTE(v99) = v99[8];
  uint64_t v101 = *(void **)v98;
  *(void *)uint64_t v98 = v100;
  v98[8] = (char)v99;

  *(void *)&v75[v28[15]] = *(void *)&v76[v28[15]];
  swift_bridgeObjectRelease();
  v75[v28[16]] = v76[v28[16]];
  uint64_t v102 = v28[17];
  uint64_t v103 = &v75[v102];
  uint64_t v104 = &v76[v102];
  int v105 = v63(&v75[v102], 1, v62);
  int v106 = v63(v104, 1, v62);
  if (!v105)
  {
    if (!v106)
    {
      (*(void (**)(char *, char *, uint64_t))(v128 + 40))(v103, v104, v62);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v128 + 8))(v103, v62);
    goto LABEL_20;
  }
  if (v106)
  {
LABEL_20:
    uint64_t v107 = sub_100004210(&qword_1000D5098);
    memcpy(v103, v104, *(void *)(*(void *)(v107 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v103, v104, v62);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v103, 0, 1, v62);
LABEL_21:
  v75[v28[18]] = v76[v28[18]];
  uint64_t v108 = v28[19];
  uint64_t v109 = &v75[v108];
  uint64_t v110 = &v76[v108];
  *(void *)uint64_t v109 = *(void *)v110;
  v109[8] = v110[8];
  uint64_t v111 = v28[20];
  long long v112 = &v75[v111];
  uint64_t v113 = &v76[v111];
  uint64_t v115 = *(void *)v113;
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)long long v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  v75[v28[21]] = v76[v28[21]];
  uint64_t v116 = v129[10];
  v127[v129[9]] = v130[v129[9]];
  *(_OWORD *)&v127[v116] = *(_OWORD *)&v130[v116];
  uint64_t v117 = v129[11];
  char v118 = &v127[v117];
  uint64_t v119 = &v130[v117];
  *(_OWORD *)&v127[v117] = *(_OWORD *)&v130[v117];
  uint64_t v120 = *(int *)(sub_1000B3690() + 20);
  uint64_t v121 = &v118[v120];
  __int16 v122 = &v119[v120];
  uint64_t v123 = sub_1000B3860();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 40))(v121, v122, v123);
  return v127;
}

uint64_t sub_10009995C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100099970);
}

uint64_t sub_100099970(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5EE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  if (a2 == 254)
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v11 > 1) {
      return (v11 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v13 = sub_100004210(&qword_1000D5D58);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[6];
LABEL_13:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_14;
  }
  uint64_t v16 = type metadata accessor for AccessoryAndSceneEntity();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[7];
    goto LABEL_13;
  }
  uint64_t v17 = type metadata accessor for WidgetTileInfo();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[8];
    goto LABEL_13;
  }
  uint64_t v18 = sub_1000B3690();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[11];

  return v19(v21, a2, v20);
}

uint64_t sub_100099B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100099BA0);
}

uint64_t sub_100099BA0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_100004210(&qword_1000D5EE0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[5] + 8) = -(char)a2;
    return result;
  }
  uint64_t v13 = sub_100004210(&qword_1000D5D58);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[6];
LABEL_11:
    uint64_t v12 = a1 + v15;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = type metadata accessor for AccessoryAndSceneEntity();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v17 = type metadata accessor for WidgetTileInfo();
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v18 = sub_1000B3690();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[11];

  return v19(v21, a2, a2, v20);
}

void sub_100099DC0()
{
  sub_10008057C(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_10008057C(319, &qword_1000D5F50, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F)
    {
      type metadata accessor for AccessoryAndSceneEntity();
      if (v2 <= 0x3F)
      {
        type metadata accessor for WidgetTileInfo();
        if (v3 <= 0x3F)
        {
          sub_1000B3690();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t sub_100099F90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for NormalTileGutsViewToggleStyle(uint64_t a1)
{
  return sub_10006842C(a1, qword_1000D7320);
}

uint64_t sub_100099FCC@<X0>(uint64_t a1@<X8>)
{
  return sub_100090AAC(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

unint64_t sub_100099FD8()
{
  unint64_t result = qword_1000D7158;
  if (!qword_1000D7158)
  {
    sub_100004B80(&qword_1000D7150);
    sub_10001FF28(&qword_1000D7160, &qword_1000D7168);
    sub_10001FF28(&qword_1000D6140, &qword_1000D6148);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7158);
  }
  return result;
}

Swift::Int sub_10009A09C()
{
  return sub_1000B48F0();
}

uint64_t type metadata accessor for NormalTileGutsView(uint64_t a1)
{
  return sub_10006842C(a1, qword_1000D71F8);
}

uint64_t type metadata accessor for AccentableBackgroundView(uint64_t a1)
{
  return sub_10006842C(a1, qword_1000D7290);
}

uint64_t sub_10009A128(uint64_t a1, char a2)
{
  uint64_t v3 = sub_1000B3620();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000B3E20();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B3DF0();
  char v11 = sub_1000B3DE0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    if (a2)
    {
      if (qword_1000D4ED8 != -1) {
        swift_once();
      }
      uint64_t v12 = &qword_1000DCCA0;
    }
    else
    {
      if (qword_1000D4EE0 != -1) {
        swift_once();
      }
      uint64_t v12 = &qword_1000DCCA8;
    }
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ColorScheme.light(_:), v3);
    char v13 = sub_1000B3610();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v13)
    {
      if (qword_1000D4EE8 != -1) {
        swift_once();
      }
      uint64_t v12 = &qword_1000DCCB0;
    }
    else
    {
      if (qword_1000D4EF0 != -1) {
        swift_once();
      }
      uint64_t v12 = &qword_1000DCCB8;
    }
  }
  return *v12;
}

void *sub_10009A3E0(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v42 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v43 = (void *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1000B2F60();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    uint64_t v8 = type metadata accessor for AccessoryAndSceneEntity();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v58 = a2;
    uint64_t v59 = a1;
    uint64_t v10 = &a1[v9];
    char v11 = &a2[v9];
    v7(&a1[v9], v11, v6);
    uint64_t v12 = (int *)type metadata accessor for WidgetTileInfo();
    v7(&v10[v12[5]], &v11[v12[5]], v6);
    uint64_t v13 = v12[6];
    uint64_t v14 = &v10[v13];
    uint64_t v15 = &v11[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v12[7];
    uint64_t v18 = &v10[v17];
    uint64_t v19 = &v11[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = v12[8];
    uint64_t v22 = &v10[v21];
    uint64_t v23 = &v11[v21];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = v12[9];
    uint64_t v26 = &v10[v25];
    uint64_t v27 = &v11[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v12[10];
    uint64_t v53 = &v11[v29];
    __dsta = &v10[v29];
    uint64_t v30 = sub_1000B33D0();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(__dsta, v53, v30);
    v31(&v10[v12[11]], &v11[v12[11]], v30);
    *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
    v10[v12[13]] = v11[v12[13]];
    uint64_t v32 = v12[14];
    uint64_t v33 = &v10[v32];
    uint64_t v34 = &v11[v32];
    uint64_t v35 = *(void **)v34;
    LOBYTE(v34) = v34[8];
    *(void *)uint64_t v33 = v35;
    v33[8] = (char)v34;
    *(void *)&v10[v12[15]] = *(void *)&v11[v12[15]];
    v10[v12[16]] = v11[v12[16]];
    uint64_t v36 = v12[17];
    __dst = &v10[v36];
    uint64_t v37 = &v11[v36];
    uint64_t v38 = sub_1000B32E0();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_retain();
    id v40 = v35;
    swift_bridgeObjectRetain();
    if (v54(v37, 1, v38))
    {
      uint64_t v41 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v37, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
    }
    v10[v12[18]] = v11[v12[18]];
    uint64_t v44 = v12[19];
    uint64_t v45 = &v10[v44];
    uint64_t v46 = &v11[v44];
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
    uint64_t v47 = v12[20];
    uint64_t v48 = &v10[v47];
    uint64_t v49 = &v11[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    v10[v12[21]] = v11[v12[21]];
    uint64_t v51 = a3[6];
    uint64_t v43 = v59;
    *(_OWORD *)((char *)v59 + a3[5]) = *(_OWORD *)((char *)v58 + a3[5]);
    *((unsigned char *)v59 + v51) = *((unsigned char *)v58 + v51);
    *((unsigned char *)v59 + a3[7]) = *((unsigned char *)v58 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v43;
}

uint64_t sub_10009A7D0(uint64_t a1)
{
  uint64_t v2 = sub_1000B2F60();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = type metadata accessor for AccessoryAndSceneEntity();
  v3(a1 + *(int *)(v4 + 20), v2);
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  v3(v5, v2);
  uint64_t v6 = (int *)type metadata accessor for WidgetTileInfo();
  v3(v5 + v6[5], v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v5 + v6[10];
  uint64_t v8 = sub_1000B33D0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v5 + v6[11], v8);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v10 = v5 + v6[17];
  uint64_t v11 = sub_1000B32E0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10009A9F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v55 = a2;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v6(a1 + v8, v10, v5);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  v6(v9 + v11[5], v10 + v11[5], v5);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (void *)(v10 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v11[7];
  uint64_t v17 = (void *)(v9 + v16);
  uint64_t v18 = (void *)(v10 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v11[8];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v22 = (void *)(v10 + v20);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v11[9];
  uint64_t v25 = (void *)(v9 + v24);
  uint64_t v26 = (void *)(v10 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v11[10];
  uint64_t v50 = v10 + v28;
  __dsta = (void *)(v9 + v28);
  uint64_t v29 = sub_1000B33D0();
  uint64_t v30 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(__dsta, v50, v29);
  v30((void *)(v9 + v11[11]), v10 + v11[11], v29);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v31 = v11[14];
  uint64_t v32 = v9 + v31;
  uint64_t v33 = v10 + v31;
  uint64_t v34 = *(void **)v33;
  LOBYTE(v33) = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v32 = v34;
  *(unsigned char *)(v32 + 8) = v33;
  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v35 = v11[17];
  uint64_t v51 = (const void *)(v10 + v35);
  __dst = (void *)(v9 + v35);
  uint64_t v36 = sub_1000B32E0();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
  swift_retain();
  id v39 = v34;
  swift_bridgeObjectRetain();
  if (v38(v51, 1, v36))
  {
    uint64_t v40 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v51, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(__dst, v51, v36);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
  }
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v41 = v11[19];
  uint64_t v42 = v9 + v41;
  uint64_t v43 = v10 + v41;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  uint64_t v44 = v11[20];
  uint64_t v45 = (void *)(v9 + v44);
  uint64_t v46 = (void *)(v10 + v44);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  uint64_t v48 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(v55 + a3[5]);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(v55 + v48);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(v55 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

double sub_10009AD94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24);
  v6(a1, a2, v5);
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v56 = a2;
  uint64_t v57 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v6(a1 + v8, a2 + v8, v5);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  v6(v9 + v11[5], v10 + v11[5], v5);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (void *)(v10 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v11[7];
  uint64_t v16 = (void *)(v9 + v15);
  uint64_t v17 = (void *)(v10 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v11[8];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = (void *)(v10 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v11[9];
  uint64_t v22 = (void *)(v9 + v21);
  uint64_t v23 = (void *)(v10 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v11[10];
  uint64_t v25 = v9 + v24;
  uint64_t v26 = v10 + v24;
  uint64_t v27 = sub_1000B33D0();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24);
  v28(v25, v26, v27);
  v28(v9 + v11[11], v10 + v11[11], v27);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v29 = v11[14];
  uint64_t v30 = v9 + v29;
  uint64_t v31 = v10 + v29;
  uint64_t v32 = *(void **)v31;
  LOBYTE(v31) = *(unsigned char *)(v31 + 8);
  uint64_t v33 = *(void **)v30;
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = v31;
  id v34 = v32;

  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v35 = v11[17];
  uint64_t v36 = (void *)(v9 + v35);
  uint64_t v37 = (void *)(v10 + v35);
  uint64_t v38 = sub_1000B32E0();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v39 + 24))(v36, v37, v38);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
    goto LABEL_6;
  }
  if (v42)
  {
LABEL_6:
    uint64_t v43 = sub_100004210(&qword_1000D5098);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v39 + 16))(v36, v37, v38);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_7:
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v44 = v11[19];
  uint64_t v45 = v9 + v44;
  uint64_t v46 = (uint64_t *)(v10 + v44);
  uint64_t v47 = *v46;
  *(unsigned char *)(v45 + 8) = *((unsigned char *)v46 + 8);
  *(void *)uint64_t v45 = v47;
  uint64_t v48 = v11[20];
  uint64_t v49 = (void *)(v9 + v48);
  uint64_t v50 = (void *)(v10 + v48);
  void *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  uint64_t v51 = a3[5];
  uint64_t v52 = v57 + v51;
  uint64_t v53 = v56 + v51;
  *(void *)uint64_t v52 = *(void *)v53;
  double result = *(double *)(v53 + 8);
  *(double *)(v52 + 8) = result;
  *(unsigned char *)(v57 + a3[6]) = *(unsigned char *)(v56 + a3[6]);
  *(unsigned char *)(v57 + a3[7]) = *(unsigned char *)(v56 + a3[7]);
  return result;
}

uint64_t sub_10009B1FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  v6(a1, a2, v5);
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v6(a1 + v8, a2 + v8, v5);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  v6(v9 + v11[5], v10 + v11[5], v5);
  *(_OWORD *)(v9 + v11[6]) = *(_OWORD *)(v10 + v11[6]);
  *(_OWORD *)(v9 + v11[7]) = *(_OWORD *)(v10 + v11[7]);
  *(_OWORD *)(v9 + v11[8]) = *(_OWORD *)(v10 + v11[8]);
  *(_OWORD *)(v9 + v11[9]) = *(_OWORD *)(v10 + v11[9]);
  uint64_t v12 = v11[10];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = sub_1000B33D0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(v9 + v11[11], v10 + v11[11], v15);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v17 = v11[14];
  uint64_t v18 = v9 + v17;
  uint64_t v19 = v10 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v20 = v11[17];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v22 = (const void *)(v10 + v20);
  uint64_t v23 = sub_1000B32E0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_100004210(&qword_1000D5098);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v26 = v11[19];
  uint64_t v27 = v9 + v26;
  uint64_t v28 = v10 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(_OWORD *)(v9 + v11[20]) = *(_OWORD *)(v10 + v11[20]);
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  uint64_t v29 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10009B524(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_1000B2F60();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  v6(a1, a2, v5);
  uint64_t v7 = type metadata accessor for AccessoryAndSceneEntity();
  v6(a1 + *(int *)(v7 + 20), a2 + *(int *)(v7 + 20), v5);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v6(a1 + v8, a2 + v8, v5);
  uint64_t v11 = (int *)type metadata accessor for WidgetTileInfo();
  v6(v9 + v11[5], v10 + v11[5], v5);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (uint64_t *)(v10 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v11[7];
  uint64_t v18 = (void *)(v9 + v17);
  uint64_t v19 = (uint64_t *)(v10 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v11[8];
  uint64_t v23 = (void *)(v9 + v22);
  uint64_t v24 = (uint64_t *)(v10 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v11[9];
  uint64_t v28 = (void *)(v9 + v27);
  uint64_t v29 = (uint64_t *)(v10 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v11[10];
  uint64_t v33 = v9 + v32;
  uint64_t v34 = v10 + v32;
  uint64_t v35 = sub_1000B33D0();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40);
  v36(v33, v34, v35);
  v36(v9 + v11[11], v10 + v11[11], v35);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  swift_release();
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  uint64_t v37 = v11[14];
  uint64_t v38 = v9 + v37;
  uint64_t v39 = (uint64_t *)(v10 + v37);
  uint64_t v40 = *v39;
  LOBYTE(v39) = *((unsigned char *)v39 + 8);
  int v41 = *(void **)v38;
  *(void *)uint64_t v38 = v40;
  *(unsigned char *)(v38 + 8) = (_BYTE)v39;

  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  uint64_t v42 = v11[17];
  uint64_t v43 = (void *)(v9 + v42);
  uint64_t v44 = (void *)(v10 + v42);
  uint64_t v45 = sub_1000B32E0();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  int v48 = v47(v43, 1, v45);
  int v49 = v47(v44, 1, v45);
  if (!v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 40))(v43, v44, v45);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
    goto LABEL_6;
  }
  if (v49)
  {
LABEL_6:
    uint64_t v50 = sub_100004210(&qword_1000D5098);
    memcpy(v43, v44, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 32))(v43, v44, v45);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
LABEL_7:
  *(unsigned char *)(v9 + v11[18]) = *(unsigned char *)(v10 + v11[18]);
  uint64_t v51 = v11[19];
  uint64_t v52 = v9 + v51;
  uint64_t v53 = v10 + v51;
  *(void *)uint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  uint64_t v54 = v11[20];
  uint64_t v55 = (void *)(v9 + v54);
  uint64_t v56 = (uint64_t *)(v10 + v54);
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  *uint64_t v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[21]) = *(unsigned char *)(v10 + v11[21]);
  uint64_t v59 = a3[6];
  uint64_t result = v63;
  *(_OWORD *)(v63 + a3[5]) = *(_OWORD *)(v62 + a3[5]);
  *(unsigned char *)(v63 + v59) = *(unsigned char *)(v62 + v59);
  *(unsigned char *)(v63 + a3[7]) = *(unsigned char *)(v62 + a3[7]);
  return result;
}

uint64_t sub_10009B914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009B928);
}

uint64_t sub_10009B928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10009B9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009BA0C);
}

uint64_t sub_10009BA0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t sub_10009BAC8()
{
  uint64_t result = type metadata accessor for AccessoryAndSceneEntity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10009BB70(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10009BC8C(uint64_t a1)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1000B3E20();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10009BD30(void *a1, void *a2, uint64_t a3)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10009BDFC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10009BEE0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3E20();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10009BFB4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    uint64_t v6 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E20();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10009C0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009C0B4);
}

uint64_t sub_10009C0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5EE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10009C188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009C19C);
}

uint64_t sub_10009C19C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004210(&qword_1000D5EE0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

void sub_10009C25C()
{
  sub_10008057C(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_10009C30C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)v12;
    char v14 = v12[8];
    sub_100044118(*(void *)v12, v14);
    *(void *)uint64_t v11 = v13;
    v11[8] = v14;
    uint64_t v72 = a3;
    uint64_t v15 = a3[6];
    uint64_t v73 = a1;
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1000B2F60();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    uint64_t v20 = type metadata accessor for AccessoryAndSceneEntity();
    v19(&v16[*(int *)(v20 + 20)], &v17[*(int *)(v20 + 20)], v18);
    uint64_t v21 = *(int *)(v20 + 24);
    uint64_t v22 = &v16[v21];
    uint64_t v23 = &v17[v21];
    v19(v22, v23, v18);
    uint64_t v24 = (int *)type metadata accessor for WidgetTileInfo();
    v19(&v22[v24[5]], &v23[v24[5]], v18);
    uint64_t v25 = v24[6];
    uint64_t v26 = &v22[v25];
    uint64_t v27 = &v23[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v24[7];
    uint64_t v30 = &v22[v29];
    uint64_t v31 = &v23[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = v24[8];
    uint64_t v34 = &v22[v33];
    uint64_t v35 = &v23[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v24[9];
    uint64_t v38 = &v22[v37];
    uint64_t v39 = &v23[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    uint64_t v41 = v24[10];
    uint64_t v68 = &v23[v41];
    __dsta = &v22[v41];
    uint64_t v42 = sub_1000B33D0();
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43(__dsta, v68, v42);
    v43(&v22[v24[11]], &v23[v24[11]], v42);
    *(void *)&v22[v24[12]] = *(void *)&v23[v24[12]];
    v22[v24[13]] = v23[v24[13]];
    uint64_t v44 = v24[14];
    uint64_t v45 = &v22[v44];
    uint64_t v46 = &v23[v44];
    uint64_t v47 = *(void **)v46;
    LOBYTE(v46) = v46[8];
    *(void *)uint64_t v45 = v47;
    v45[8] = (char)v46;
    *(void *)&v22[v24[15]] = *(void *)&v23[v24[15]];
    v22[v24[16]] = v23[v24[16]];
    uint64_t v48 = v24[17];
    uint64_t v69 = &v23[v48];
    __dst = &v22[v48];
    uint64_t v49 = sub_1000B32E0();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    swift_retain();
    id v52 = v47;
    swift_bridgeObjectRetain();
    if (v51(v69, 1, v49))
    {
      uint64_t v53 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v69, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v69, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v49);
    }
    v22[v24[18]] = v23[v24[18]];
    uint64_t v54 = v24[19];
    uint64_t v55 = &v22[v54];
    uint64_t v56 = &v23[v54];
    *(void *)uint64_t v55 = *(void *)v56;
    v55[8] = v56[8];
    uint64_t v57 = v24[20];
    uint64_t v58 = &v22[v57];
    uint64_t v59 = &v23[v57];
    uint64_t v60 = *((void *)v59 + 1);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v60;
    v22[v24[21]] = v23[v24[21]];
    uint64_t v61 = v72[8];
    uint64_t v9 = v73;
    *(_OWORD *)((char *)v73 + v72[7]) = *(_OWORD *)((char *)a2 + v72[7]);
    *((unsigned char *)v73 + v61) = *((unsigned char *)a2 + v61);
    uint64_t v62 = v72[9];
    uint64_t v63 = (char *)v73 + v62;
    int v64 = (char *)a2 + v62;
    uint64_t v65 = sub_1000B3620();
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
    swift_bridgeObjectRetain();
    v66(v63, v64, v65);
  }
  return v9;
}

uint64_t sub_10009C800(uint64_t a1, int *a2)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_1000441FC(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = type metadata accessor for AccessoryAndSceneEntity();
  v7(v5 + *(int *)(v8 + 20), v6);
  uint64_t v9 = v5 + *(int *)(v8 + 24);
  v7(v9, v6);
  uint64_t v10 = (int *)type metadata accessor for WidgetTileInfo();
  v7(v9 + v10[5], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v9 + v10[10];
  uint64_t v12 = sub_1000B33D0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v9 + v10[11], v12);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v14 = v9 + v10[17];
  uint64_t v15 = sub_1000B32E0();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + a2[9];
  uint64_t v18 = sub_1000B3620();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

void *sub_10009CAF4(void *a1, void *a2, int *a3)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v69 = a3;
  uint64_t v12 = a3[6];
  uint64_t v70 = a1;
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000B2F60();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  uint64_t v17 = type metadata accessor for AccessoryAndSceneEntity();
  v16(&v13[*(int *)(v17 + 20)], &v14[*(int *)(v17 + 20)], v15);
  uint64_t v18 = *(int *)(v17 + 24);
  uint64_t v19 = &v13[v18];
  uint64_t v20 = &v14[v18];
  v16(v19, v20, v15);
  uint64_t v21 = (int *)type metadata accessor for WidgetTileInfo();
  v16(&v19[v21[5]], &v20[v21[5]], v15);
  uint64_t v22 = v21[6];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  uint64_t v26 = v21[7];
  uint64_t v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  uint64_t v30 = v21[8];
  uint64_t v31 = &v19[v30];
  uint64_t v32 = &v20[v30];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  uint64_t v34 = v21[9];
  uint64_t v35 = &v19[v34];
  uint64_t v36 = &v20[v34];
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = v37;
  uint64_t v38 = v21[10];
  uint64_t v65 = &v20[v38];
  __dsta = &v19[v38];
  uint64_t v39 = sub_1000B33D0();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40(__dsta, v65, v39);
  v40(&v19[v21[11]], &v20[v21[11]], v39);
  *(void *)&v19[v21[12]] = *(void *)&v20[v21[12]];
  v19[v21[13]] = v20[v21[13]];
  uint64_t v41 = v21[14];
  uint64_t v42 = &v19[v41];
  uint64_t v43 = &v20[v41];
  uint64_t v44 = *(void **)v43;
  LOBYTE(v43) = v43[8];
  *(void *)uint64_t v42 = v44;
  v42[8] = (char)v43;
  *(void *)&v19[v21[15]] = *(void *)&v20[v21[15]];
  v19[v21[16]] = v20[v21[16]];
  uint64_t v45 = v21[17];
  uint64_t v66 = &v20[v45];
  __dst = &v19[v45];
  uint64_t v46 = sub_1000B32E0();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  swift_retain();
  id v49 = v44;
  swift_bridgeObjectRetain();
  if (v48(v66, 1, v46))
  {
    uint64_t v50 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v66, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v66, v46);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
  }
  v19[v21[18]] = v20[v21[18]];
  uint64_t v51 = v21[19];
  id v52 = &v19[v51];
  uint64_t v53 = &v20[v51];
  *(void *)id v52 = *(void *)v53;
  v52[8] = v53[8];
  uint64_t v54 = v21[20];
  uint64_t v55 = &v19[v54];
  uint64_t v56 = &v20[v54];
  uint64_t v57 = *((void *)v56 + 1);
  *(void *)uint64_t v55 = *(void *)v56;
  *((void *)v55 + 1) = v57;
  v19[v21[21]] = v20[v21[21]];
  uint64_t v58 = v69[8];
  *(_OWORD *)((char *)v70 + v69[7]) = *(_OWORD *)((char *)a2 + v69[7]);
  *((unsigned char *)v70 + v58) = *((unsigned char *)a2 + v58);
  uint64_t v59 = v69[9];
  uint64_t v60 = (char *)v70 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = sub_1000B3620();
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
  swift_bridgeObjectRetain();
  v63(v60, v61, v62);
  return v70;
}

void *sub_10009CF98(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_1000441FC(v12, v13);
  uint64_t v71 = a3;
  uint64_t v72 = a2;
  uint64_t v14 = a3[6];
  uint64_t v73 = a1;
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1000B2F60();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  uint64_t v19 = type metadata accessor for AccessoryAndSceneEntity();
  v18(&v15[*(int *)(v19 + 20)], &v16[*(int *)(v19 + 20)], v17);
  uint64_t v20 = *(int *)(v19 + 24);
  uint64_t v21 = &v15[v20];
  uint64_t v22 = &v16[v20];
  v18(v21, v22, v17);
  uint64_t v23 = (int *)type metadata accessor for WidgetTileInfo();
  v18(&v21[v23[5]], &v22[v23[5]], v17);
  uint64_t v24 = v23[6];
  uint64_t v25 = &v21[v24];
  uint64_t v26 = &v22[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v23[7];
  uint64_t v28 = &v21[v27];
  uint64_t v29 = &v22[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v23[8];
  uint64_t v31 = &v21[v30];
  uint64_t v32 = &v22[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = v23[9];
  uint64_t v34 = &v21[v33];
  uint64_t v35 = &v22[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = v23[10];
  uint64_t v37 = &v21[v36];
  uint64_t v38 = &v22[v36];
  uint64_t v39 = sub_1000B33D0();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24);
  v40(v37, v38, v39);
  v40(&v21[v23[11]], &v22[v23[11]], v39);
  *(void *)&v21[v23[12]] = *(void *)&v22[v23[12]];
  swift_retain();
  swift_release();
  v21[v23[13]] = v22[v23[13]];
  uint64_t v41 = v23[14];
  uint64_t v42 = &v21[v41];
  uint64_t v43 = &v22[v41];
  uint64_t v44 = *(void **)v43;
  LOBYTE(v43) = v43[8];
  uint64_t v45 = *(void **)v42;
  *(void *)uint64_t v42 = v44;
  v42[8] = (char)v43;
  id v46 = v44;

  *(void *)&v21[v23[15]] = *(void *)&v22[v23[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[v23[16]] = v22[v23[16]];
  uint64_t v47 = v23[17];
  uint64_t v48 = &v21[v47];
  id v49 = &v22[v47];
  uint64_t v50 = sub_1000B32E0();
  uint64_t v51 = *(void *)(v50 - 8);
  id v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v48, v49, v50);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
    goto LABEL_11;
  }
  if (v54)
  {
LABEL_11:
    uint64_t v55 = sub_100004210(&qword_1000D5098);
    memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
LABEL_12:
  v21[v23[18]] = v22[v23[18]];
  uint64_t v56 = v23[19];
  uint64_t v57 = &v21[v56];
  uint64_t v58 = &v22[v56];
  uint64_t v59 = *(void *)v58;
  v57[8] = v58[8];
  *(void *)uint64_t v57 = v59;
  uint64_t v60 = v23[20];
  uint64_t v61 = &v21[v60];
  uint64_t v62 = &v22[v60];
  *(void *)uint64_t v61 = *(void *)v62;
  *((void *)v61 + 1) = *((void *)v62 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[v23[21]] = v22[v23[21]];
  uint64_t v63 = v71[7];
  int v64 = (void *)((char *)v73 + v63);
  uint64_t v65 = (void *)((char *)v72 + v63);
  *int v64 = *v65;
  v64[1] = v65[1];
  *((unsigned char *)v73 + v71[8]) = *((unsigned char *)v72 + v71[8]);
  uint64_t v66 = v71[9];
  uint64_t v67 = (char *)v73 + v66;
  uint64_t v68 = (char *)v72 + v66;
  uint64_t v69 = sub_1000B3620();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 24))(v67, v68, v69);
  return v73;
}

char *sub_10009D528(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3E20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  uint64_t v14 = sub_1000B2F60();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  uint64_t v16 = type metadata accessor for AccessoryAndSceneEntity();
  v15(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v14);
  uint64_t v17 = *(int *)(v16 + 24);
  uint64_t v18 = &v12[v17];
  uint64_t v19 = &v13[v17];
  v15(v18, v19, v14);
  uint64_t v20 = (int *)type metadata accessor for WidgetTileInfo();
  v15(&v18[v20[5]], &v19[v20[5]], v14);
  *(_OWORD *)&v18[v20[6]] = *(_OWORD *)&v19[v20[6]];
  *(_OWORD *)&v18[v20[7]] = *(_OWORD *)&v19[v20[7]];
  *(_OWORD *)&v18[v20[8]] = *(_OWORD *)&v19[v20[8]];
  *(_OWORD *)&v18[v20[9]] = *(_OWORD *)&v19[v20[9]];
  uint64_t v21 = v20[10];
  uint64_t v22 = &v18[v21];
  uint64_t v23 = &v19[v21];
  uint64_t v24 = sub_1000B33D0();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v25(&v18[v20[11]], &v19[v20[11]], v24);
  *(void *)&v18[v20[12]] = *(void *)&v19[v20[12]];
  v18[v20[13]] = v19[v20[13]];
  uint64_t v26 = v20[14];
  uint64_t v27 = &v18[v26];
  uint64_t v28 = &v19[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  *(void *)&v18[v20[15]] = *(void *)&v19[v20[15]];
  v18[v20[16]] = v19[v20[16]];
  uint64_t v29 = v20[17];
  uint64_t v30 = &v18[v29];
  uint64_t v31 = &v19[v29];
  uint64_t v32 = sub_1000B32E0();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_100004210(&qword_1000D5098);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v18[v20[18]] = v19[v20[18]];
  uint64_t v35 = v20[19];
  uint64_t v36 = &v18[v35];
  uint64_t v37 = &v19[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v37[8];
  *(_OWORD *)&v18[v20[20]] = *(_OWORD *)&v19[v20[20]];
  v18[v20[21]] = v19[v20[21]];
  uint64_t v38 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v38] = a2[v38];
  uint64_t v39 = a3[9];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v42 = sub_1000B3620();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

char *sub_10009D948(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    uint64_t v6 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_1000441FC(v12, v13);
  uint64_t v77 = a3;
  uint64_t v78 = a2;
  uint64_t v14 = a3[6];
  uint64_t v79 = a1;
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_1000B2F60();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  uint64_t v19 = type metadata accessor for AccessoryAndSceneEntity();
  v18(&v15[*(int *)(v19 + 20)], &v16[*(int *)(v19 + 20)], v17);
  uint64_t v20 = *(int *)(v19 + 24);
  uint64_t v21 = &v15[v20];
  uint64_t v22 = &v16[v20];
  v18(v21, v22, v17);
  uint64_t v23 = (int *)type metadata accessor for WidgetTileInfo();
  v18(&v21[v23[5]], &v22[v23[5]], v17);
  uint64_t v24 = v23[6];
  uint64_t v25 = &v21[v24];
  uint64_t v26 = &v22[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v23[7];
  uint64_t v30 = &v21[v29];
  uint64_t v31 = &v22[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = v23[8];
  uint64_t v35 = &v21[v34];
  uint64_t v36 = &v22[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = v38;
  *((void *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = v23[9];
  uint64_t v40 = &v21[v39];
  uint64_t v41 = &v22[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = v43;
  *((void *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = v23[10];
  uint64_t v45 = &v21[v44];
  id v46 = &v22[v44];
  uint64_t v47 = sub_1000B33D0();
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 40);
  v48(v45, v46, v47);
  v48(&v21[v23[11]], &v22[v23[11]], v47);
  *(void *)&v21[v23[12]] = *(void *)&v22[v23[12]];
  swift_release();
  v21[v23[13]] = v22[v23[13]];
  uint64_t v49 = v23[14];
  uint64_t v50 = &v21[v49];
  uint64_t v51 = &v22[v49];
  uint64_t v52 = *(void *)v51;
  LOBYTE(v51) = v51[8];
  int v53 = *(void **)v50;
  *(void *)uint64_t v50 = v52;
  v50[8] = (char)v51;

  *(void *)&v21[v23[15]] = *(void *)&v22[v23[15]];
  swift_bridgeObjectRelease();
  v21[v23[16]] = v22[v23[16]];
  uint64_t v54 = v23[17];
  uint64_t v55 = &v21[v54];
  uint64_t v56 = &v22[v54];
  uint64_t v57 = sub_1000B32E0();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  int v60 = v59(v55, 1, v57);
  int v61 = v59(v56, 1, v57);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v55, v56, v57);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
    goto LABEL_10;
  }
  if (v61)
  {
LABEL_10:
    uint64_t v62 = sub_100004210(&qword_1000D5098);
    memcpy(v55, v56, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
LABEL_11:
  v21[v23[18]] = v22[v23[18]];
  uint64_t v63 = v23[19];
  int v64 = &v21[v63];
  uint64_t v65 = &v22[v63];
  *(void *)int v64 = *(void *)v65;
  v64[8] = v65[8];
  uint64_t v66 = v23[20];
  uint64_t v67 = &v21[v66];
  uint64_t v68 = &v22[v66];
  uint64_t v70 = *(void *)v68;
  uint64_t v69 = *((void *)v68 + 1);
  *(void *)uint64_t v67 = v70;
  *((void *)v67 + 1) = v69;
  swift_bridgeObjectRelease();
  v21[v23[21]] = v22[v23[21]];
  uint64_t v71 = v77[8];
  *(_OWORD *)&v79[v77[7]] = *(_OWORD *)&v78[v77[7]];
  v79[v71] = v78[v71];
  uint64_t v72 = v77[9];
  uint64_t v73 = &v79[v72];
  uint64_t v74 = &v78[v72];
  uint64_t v75 = sub_1000B3620();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 40))(v73, v74, v75);
  return v79;
}

uint64_t sub_10009DE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009DE74);
}

uint64_t sub_10009DE74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5EE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 254)
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v11 > 1) {
      return (v11 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v13 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v10 = a1 + a3[6];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_9;
  }
  uint64_t v15 = sub_1000B3620();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[9];

  return v16(v18, a2, v17);
}

uint64_t sub_10009DFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009E008);
}

uint64_t sub_10009E008(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_100004210(&qword_1000D5EE0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[5] + 8) = -(char)a2;
    return result;
  }
  uint64_t v13 = type metadata accessor for AccessoryAndSceneEntity();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_1000B3620();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[9];

  return v16(v18, a2, a2, v17);
}

void sub_10009E18C()
{
  sub_10008057C(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    type metadata accessor for AccessoryAndSceneEntity();
    if (v1 <= 0x3F)
    {
      sub_1000B3620();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_10009E2CC()
{
  unint64_t result = qword_1000D7368;
  if (!qword_1000D7368)
  {
    sub_100004B80(&qword_1000D7370);
    sub_100004B80(&qword_1000D60F0);
    type metadata accessor for NormalTileGutsViewToggleStyle(255);
    sub_10001FF28(&qword_1000D6158, &qword_1000D60F0);
    sub_100096B54(&qword_1000D7170, (void (*)(uint64_t))type metadata accessor for NormalTileGutsViewToggleStyle);
    swift_getOpaqueTypeConformance2();
    sub_10001FF28(&qword_1000D7178, &qword_1000D7138);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7368);
  }
  return result;
}

uint64_t sub_10009E414()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009E430()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009E44C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for RectangleTileView(uint64_t a1)
{
  return sub_10006842C(a1, qword_1000D7408);
}

void *sub_10009E490(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 20);
    unsigned int v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)v12;
    char v14 = v12[8];
    sub_100044118(*(void *)v12, v14);
    *(void *)unsigned int v11 = v13;
    v11[8] = v14;
    uint64_t v67 = a3;
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v68 = a1;
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1000B2F60();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    v19(v16, v17, v18);
    uint64_t v20 = type metadata accessor for AccessoryAndSceneEntity();
    v19(&v16[*(int *)(v20 + 20)], &v17[*(int *)(v20 + 20)], v18);
    uint64_t v21 = *(int *)(v20 + 24);
    uint64_t v22 = &v16[v21];
    uint64_t v23 = &v17[v21];
    v19(v22, v23, v18);
    uint64_t v24 = (int *)type metadata accessor for WidgetTileInfo();
    v19(&v22[v24[5]], &v23[v24[5]], v18);
    uint64_t v25 = v24[6];
    uint64_t v26 = &v22[v25];
    uint64_t v27 = &v23[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v24[7];
    uint64_t v30 = &v22[v29];
    uint64_t v31 = &v23[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = v24[8];
    uint64_t v34 = &v22[v33];
    uint64_t v35 = &v23[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v24[9];
    uint64_t v38 = &v22[v37];
    uint64_t v39 = &v23[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    uint64_t v41 = v24[10];
    uint64_t v63 = &v23[v41];
    __dsta = &v22[v41];
    uint64_t v42 = sub_1000B33D0();
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43(__dsta, v63, v42);
    v43(&v22[v24[11]], &v23[v24[11]], v42);
    *(void *)&v22[v24[12]] = *(void *)&v23[v24[12]];
    v22[v24[13]] = v23[v24[13]];
    uint64_t v44 = v24[14];
    uint64_t v45 = &v22[v44];
    id v46 = &v23[v44];
    uint64_t v47 = *(void **)v46;
    LOBYTE(v46) = v46[8];
    *(void *)uint64_t v45 = v47;
    v45[8] = (char)v46;
    *(void *)&v22[v24[15]] = *(void *)&v23[v24[15]];
    v22[v24[16]] = v23[v24[16]];
    uint64_t v48 = v24[17];
    int v64 = &v23[v48];
    __dst = &v22[v48];
    uint64_t v49 = sub_1000B32E0();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    swift_retain();
    id v52 = v47;
    swift_bridgeObjectRetain();
    if (v51(v64, 1, v49))
    {
      uint64_t v53 = sub_100004210(&qword_1000D5098);
      memcpy(__dst, v64, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v64, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v49);
    }
    v22[v24[18]] = v23[v24[18]];
    uint64_t v54 = v24[19];
    uint64_t v55 = &v22[v54];
    uint64_t v56 = &v23[v54];
    *(void *)uint64_t v55 = *(void *)v56;
    v55[8] = v56[8];
    uint64_t v57 = v24[20];
    uint64_t v58 = &v22[v57];
    uint64_t v59 = &v23[v57];
    uint64_t v60 = *((void *)v59 + 1);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v60;
    v22[v24[21]] = v23[v24[21]];
    uint64_t v61 = *(int *)(v67 + 32);
    uint64_t v9 = v68;
    *(_OWORD *)((char *)v68 + *(int *)(v67 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v67 + 28));
    *((unsigned char *)v68 + v61) = *((unsigned char *)a2 + v61);
    swift_bridgeObjectRetain();
  }
  return v9;
}

uint64_t sub_10009E934(uint64_t a1, uint64_t a2)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000B3E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_1000441FC(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1000B2F60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = type metadata accessor for AccessoryAndSceneEntity();
  v7(v5 + *(int *)(v8 + 20), v6);
  uint64_t v9 = v5 + *(int *)(v8 + 24);
  v7(v9, v6);
  uint64_t v10 = (int *)type metadata accessor for WidgetTileInfo();
  v7(v9 + v10[5], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v9 + v10[10];
  uint64_t v12 = sub_1000B33D0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v9 + v10[11], v12);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v14 = v9 + v10[17];
  uint64_t v15 = sub_1000B32E0();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }

  return swift_bridgeObjectRelease();
}

void *sub_10009EBE0(void *a1, void *a2, uint64_t a3)
{
  sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000B3E20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v64 = a3;
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v65 = a1;
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000B2F60();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  uint64_t v17 = type metadata accessor for AccessoryAndSceneEntity();
  v16(&v13[*(int *)(v17 + 20)], &v14[*(int *)(v17 + 20)], v15);
  uint64_t v18 = *(int *)(v17 + 24);
  uint64_t v19 = &v13[v18];
  uint64_t v20 = &v14[v18];
  v16(v19, v20, v15);
  uint64_t v21 = (int *)type metadata accessor for WidgetTileInfo();
  v16(&v19[v21[5]], &v20[v21[5]], v15);
  uint64_t v22 = v21[6];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  uint64_t v26 = v21[7];
  uint64_t v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  uint64_t v30 = v21[8];
  uint64_t v31 = &v19[v30];
  uint64_t v32 = &v20[v30];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  uint64_t v34 = v21[9];
  uint64_t v35 = &v19[v34];
  uint64_t v36 = &v20[v34];
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = v37;
  uint64_t v38 = v21[10];
  uint64_t v60 = &v20[v38];
  __dsta = &v19[v38];
  uint64_t v39 = sub_1000B33D0();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40(__dsta, v60, v39);
  v40(&v19[v21[11]], &v20[v21[11]], v39);
  *(void *)&v19[v21[12]] = *(void *)&v20[v21[12]];
  v19[v21[13]] = v20[v21[13]];
  uint64_t v41 = v21[14];
  uint64_t v42 = &v19[v41];
  uint64_t v43 = &v20[v41];
  uint64_t v44 = *(void **)v43;
  LOBYTE(v43) = v43[8];
  *(void *)uint64_t v42 = v44;
  v42[8] = (char)v43;
  *(void *)&v19[v21[15]] = *(void *)&v20[v21[15]];
  v19[v21[16]] = v20[v21[16]];
  uint64_t v45 = v21[17];
  uint64_t v61 = &v20[v45];
  __dst = &v19[v45];
  uint64_t v46 = sub_1000B32E0();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  swift_retain();
  id v49 = v44;
  swift_bridgeObjectRetain();
  if (v48(v61, 1, v46))
  {
    uint64_t v50 = sub_100004210(&qword_1000D5098);
    memcpy(__dst, v61, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v61, v46);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
  }
  v19[v21[18]] = v20[v21[18]];
  uint64_t v51 = v21[19];
  id v52 = &v19[v51];
  uint64_t v53 = &v20[v51];
  *(void *)id v52 = *(void *)v53;
  v52[8] = v53[8];
  uint64_t v54 = v21[20];
  uint64_t v55 = &v19[v54];
  uint64_t v56 = &v20[v54];
  uint64_t v57 = *((void *)v56 + 1);
  *(void *)uint64_t v55 = *(void *)v56;
  *((void *)v55 + 1) = v57;
  v19[v21[21]] = v20[v21[21]];
  uint64_t v58 = *(int *)(v64 + 32);
  *(_OWORD *)((char *)v65 + *(int *)(v64 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v64 + 28));
  *((unsigned char *)v65 + v58) = *((unsigned char *)a2 + v58);
  swift_bridgeObjectRetain();
  return v65;
}

void *sub_10009F034(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000B3E20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100044118(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_1000441FC(v12, v13);
  uint64_t v67 = a3;
  uint64_t v68 = a2;
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v69 = a1;
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1000B2F60();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  uint64_t v19 = type metadata accessor for AccessoryAndSceneEntity();
  v18(&v15[*(int *)(v19 + 20)], &v16[*(int *)(v19 + 20)], v17);
  uint64_t v20 = *(int *)(v19 + 24);
  uint64_t v21 = &v15[v20];
  uint64_t v22 = &v16[v20];
  v18(v21, v22, v17);
  uint64_t v23 = (int *)type metadata accessor for WidgetTileInfo();
  v18(&v21[v23[5]], &v22[v23[5]], v17);
  uint64_t v24 = v23[6];
  uint64_t v25 = &v21[v24];
  uint64_t v26 = &v22[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v23[7];
  uint64_t v28 = &v21[v27];
  uint64_t v29 = &v22[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v23[8];
  uint64_t v31 = &v21[v30];
  uint64_t v32 = &v22[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = v23[9];
  uint64_t v34 = &v21[v33];
  uint64_t v35 = &v22[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = v23[10];
  uint64_t v37 = &v21[v36];
  uint64_t v38 = &v22[v36];
  uint64_t v39 = sub_1000B33D0();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24);
  v40(v37, v38, v39);
  v40(&v21[v23[11]], &v22[v23[11]], v39);
  *(void *)&v21[v23[12]] = *(void *)&v22[v23[12]];
  swift_retain();
  swift_release();
  v21[v23[13]] = v22[v23[13]];
  uint64_t v41 = v23[14];
  uint64_t v42 = &v21[v41];
  uint64_t v43 = &v22[v41];
  uint64_t v44 = *(void **)v43;
  LOBYTE(v43) = v43[8];
  uint64_t v45 = *(void **)v42;
  *(void *)uint64_t v42 = v44;
  v42[8] = (char)v43;
  id v46 = v44;

  *(void *)&v21[v23[15]] = *(void *)&v22[v23[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[v23[16]] = v22[v23[16]];
  uint64_t v47 = v23[17];
  uint64_t v48 = &v21[v47];
  id v49 = &v22[v47];
  uint64_t v50 = sub_1000B32E0();
  uint64_t v51 = *(void *)(v50 - 8);
  id v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v48, v49, v50);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
    goto LABEL_11;
  }
  if (v54)
  {
LABEL_11:
    uint64_t v55 = sub_100004210(&qword_1000D5098);
    memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
LABEL_12:
  v21[v23[18]] = v22[v23[18]];
  uint64_t v56 = v23[19];
  uint64_t v57 = &v21[v56];
  uint64_t v58 = &v22[v56];
  uint64_t v59 = *(void *)v58;
  v57[8] = v58[8];
  *(void *)uint64_t v57 = v59;
  uint64_t v60 = v23[20];
  uint64_t v61 = &v21[v60];
  uint64_t v62 = &v22[v60];
  *(void *)uint64_t v61 = *(void *)v62;
  *((void *)v61 + 1) = *((void *)v62 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[v23[21]] = v22[v23[21]];
  uint64_t v63 = *(int *)(v67 + 28);
  uint64_t v64 = (void *)((char *)v69 + v63);
  uint64_t v65 = (void *)((char *)v68 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  *((unsigned char *)v69 + *(int *)(v67 + 32)) = *((unsigned char *)v68 + *(int *)(v67 + 32));
  return v69;
}

char *sub_10009F57C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D4F88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000B3E20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  uint64_t v14 = sub_1000B2F60();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  uint64_t v16 = type metadata accessor for AccessoryAndSceneEntity();
  v15(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v14);
  uint64_t v17 = *(int *)(v16 + 24);
  uint64_t v18 = &v12[v17];
  uint64_t v19 = &v13[v17];
  v15(v18, v19, v14);
  uint64_t v20 = (int *)type metadata accessor for WidgetTileInfo();
  v15(&v18[v20[5]], &v19[v20[5]], v14);
  *(_OWORD *)&v18[v20[6]] = *(_OWORD *)&v19[v20[6]];
  *(_OWORD *)&v18[v20[7]] = *(_OWORD *)&v19[v20[7]];
  *(_OWORD *)&v18[v20[8]] = *(_OWORD *)&v19[v20[8]];
  *(_OWORD *)&v18[v20[9]] = *(_OWORD *)&v19[v20[9]];
  uint64_t v21 = v20[10];
  uint64_t v22 = &v18[v21];
  uint64_t v23 = &v19[v21];
  uint64_t v24 = sub_1000B33D0();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v25(&v18[v20[11]], &v19[v20[11]], v24);
  *(void *)&v18[v20[12]] = *(void *)&v19[v20[12]];
  v18[v20[13]] = v19[v20[13]];
  uint64_t v26 = v20[14];
  uint64_t v27 = &v18[v26];
  uint64_t v28 = &v19[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  *(void *)&v18[v20[15]] = *(void *)&v19[v20[15]];
  v18[v20[16]] = v19[v20[16]];
  uint64_t v29 = v20[17];
  uint64_t v30 = &v18[v29];
  uint64_t v31 = &v19[v29];
  uint64_t v32 = sub_1000B32E0();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_100004210(&qword_1000D5098);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v18[v20[18]] = v19[v20[18]];
  uint64_t v35 = v20[19];
  uint64_t v36 = &v18[v35];
  uint64_t v37 = &v19[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v37[8];
  *(_OWORD *)&v18[v20[20]] = *(_OWORD *)&v19[v20[20]];
  v18[v20[21]] = v19[v20[21]];
  uint64_t v38 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v38] = a2[v38];
  return a1;
}

char *sub_10009F954(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100017B5C((uint64_t)a1, &qword_1000D4F88);
    uint64_t v6 = sub_100004210(&qword_1000D4F88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000B3E20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_1000441FC(v12, v13);
  uint64_t v73 = a3;
  uint64_t v74 = a2;
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v75 = a1;
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_1000B2F60();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  uint64_t v19 = type metadata accessor for AccessoryAndSceneEntity();
  v18(&v15[*(int *)(v19 + 20)], &v16[*(int *)(v19 + 20)], v17);
  uint64_t v20 = *(int *)(v19 + 24);
  uint64_t v21 = &v15[v20];
  uint64_t v22 = &v16[v20];
  v18(v21, v22, v17);
  uint64_t v23 = (int *)type metadata accessor for WidgetTileInfo();
  v18(&v21[v23[5]], &v22[v23[5]], v17);
  uint64_t v24 = v23[6];
  uint64_t v25 = &v21[v24];
  uint64_t v26 = &v22[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v23[7];
  uint64_t v30 = &v21[v29];
  uint64_t v31 = &v22[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = v23[8];
  uint64_t v35 = &v21[v34];
  uint64_t v36 = &v22[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = v38;
  *((void *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = v23[9];
  uint64_t v40 = &v21[v39];
  uint64_t v41 = &v22[v39];
  uint64_t v43 = *(void *)v41;
  uint64_t v42 = *((void *)v41 + 1);
  *(void *)uint64_t v40 = v43;
  *((void *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = v23[10];
  uint64_t v45 = &v21[v44];
  id v46 = &v22[v44];
  uint64_t v47 = sub_1000B33D0();
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 40);
  v48(v45, v46, v47);
  v48(&v21[v23[11]], &v22[v23[11]], v47);
  *(void *)&v21[v23[12]] = *(void *)&v22[v23[12]];
  swift_release();
  v21[v23[13]] = v22[v23[13]];
  uint64_t v49 = v23[14];
  uint64_t v50 = &v21[v49];
  uint64_t v51 = &v22[v49];
  uint64_t v52 = *(void *)v51;
  LOBYTE(v51) = v51[8];
  int v53 = *(void **)v50;
  *(void *)uint64_t v50 = v52;
  v50[8] = (char)v51;

  *(void *)&v21[v23[15]] = *(void *)&v22[v23[15]];
  swift_bridgeObjectRelease();
  v21[v23[16]] = v22[v23[16]];
  uint64_t v54 = v23[17];
  uint64_t v55 = &v21[v54];
  uint64_t v56 = &v22[v54];
  uint64_t v57 = sub_1000B32E0();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  int v60 = v59(v55, 1, v57);
  int v61 = v59(v56, 1, v57);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v55, v56, v57);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
    goto LABEL_10;
  }
  if (v61)
  {
LABEL_10:
    uint64_t v62 = sub_100004210(&qword_1000D5098);
    memcpy(v55, v56, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
LABEL_11:
  v21[v23[18]] = v22[v23[18]];
  uint64_t v63 = v23[19];
  uint64_t v64 = &v21[v63];
  uint64_t v65 = &v22[v63];
  *(void *)uint64_t v64 = *(void *)v65;
  v64[8] = v65[8];
  uint64_t v66 = v23[20];
  uint64_t v67 = &v21[v66];
  uint64_t v68 = &v22[v66];
  uint64_t v70 = *(void *)v68;
  uint64_t v69 = *((void *)v68 + 1);
  *(void *)uint64_t v67 = v70;
  *((void *)v67 + 1) = v69;
  swift_bridgeObjectRelease();
  v21[v23[21]] = v22[v23[21]];
  uint64_t v71 = *(int *)(v73 + 32);
  *(_OWORD *)&v75[*(int *)(v73 + 28)] = *(_OWORD *)&v74[*(int *)(v73 + 28)];
  v75[v71] = v74[v71];
  return v75;
}

uint64_t sub_10009FE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009FE38);
}

uint64_t sub_10009FE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004210(&qword_1000D5EE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 254)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = type metadata accessor for AccessoryAndSceneEntity();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10009FF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009FF78);
}

uint64_t sub_10009FF78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100004210(&qword_1000D5EE0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  else
  {
    uint64_t v11 = type metadata accessor for AccessoryAndSceneEntity();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1000A00A8()
{
  sub_10008057C(319, (unint64_t *)&qword_1000D5F58, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    type metadata accessor for AccessoryAndSceneEntity();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1000A01B0()
{
  unint64_t result = qword_1000D7450;
  if (!qword_1000D7450)
  {
    sub_100004B80(&qword_1000D7458);
    sub_100096B54(&qword_1000D7380, (void (*)(uint64_t))type metadata accessor for RectangleTileView);
    sub_100096B54(&qword_1000D7388, (void (*)(uint64_t))type metadata accessor for SmallSquareTileView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7450);
  }
  return result;
}

unint64_t sub_1000A0290()
{
  unint64_t result = qword_1000D7460;
  if (!qword_1000D7460)
  {
    sub_100004B80(&qword_1000D7398);
    sub_100004B80(&qword_1000D73A0);
    sub_10001FF28(&qword_1000D73A8, &qword_1000D73A0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7460);
  }
  return result;
}

uint64_t sub_1000A036C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A0388(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000A03F0()
{
  unint64_t result = qword_1000D74B8;
  if (!qword_1000D74B8)
  {
    sub_100004B80(&qword_1000D74B0);
    sub_100004B80(&qword_1000D74C0);
    sub_1000A04C4();
    swift_getOpaqueTypeConformance2();
    sub_10001FF28(&qword_1000D69D8, &qword_1000D68F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D74B8);
  }
  return result;
}

unint64_t sub_1000A04C4()
{
  unint64_t result = qword_1000D74C8;
  if (!qword_1000D74C8)
  {
    sub_100004B80(&qword_1000D74C0);
    sub_1000A0564();
    sub_10001FF28(&qword_1000D69C8, &qword_1000D69D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D74C8);
  }
  return result;
}

unint64_t sub_1000A0564()
{
  unint64_t result = qword_1000D74D0;
  if (!qword_1000D74D0)
  {
    sub_100004B80(&qword_1000D74D8);
    sub_1000A077C(&qword_1000D74E0, &qword_1000D74E8, (void (*)(void))sub_100085444);
    sub_10001FF28(&qword_1000D74F0, &qword_1000D74F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D74D0);
  }
  return result;
}

uint64_t sub_1000A0648@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000B3700();
  *a1 = v3;
  return result;
}

uint64_t sub_1000A0674()
{
  return sub_1000B3710();
}

uint64_t sub_1000A069C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000A0738()
{
  return sub_1000A077C(&qword_1000D7500, &qword_1000D7478, (void (*)(void))sub_1000A07F8);
}

uint64_t sub_1000A077C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100004B80(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A07F8()
{
  unint64_t result = qword_1000D7508;
  if (!qword_1000D7508)
  {
    sub_100004B80(&qword_1000D7470);
    sub_10001FF28(&qword_1000D7510, &qword_1000D7468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7508);
  }
  return result;
}

ValueMetadata *type metadata accessor for TileConstants()
{
  return &type metadata for TileConstants;
}

uint64_t sub_1000A08A8(uint64_t a1)
{
  return sub_1000A08D0(a1, &qword_1000DCCA0);
}

uint64_t sub_1000A08BC(uint64_t a1)
{
  return sub_1000A08D0(a1, &qword_1000DCCA8);
}

uint64_t sub_1000A08D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000B3C20();
  __chkstk_darwin(v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Color.RGBColorSpace.sRGB(_:));
  uint64_t result = sub_1000B3CE0();
  *a2 = result;
  return result;
}

uint64_t sub_1000A09AC(uint64_t a1)
{
  return sub_1000A09D4(a1, &qword_1000DCCB0);
}

uint64_t sub_1000A09BC(uint64_t a1)
{
  return sub_1000A09D4(a1, &qword_1000DCCB8);
}

uint64_t sub_1000A09D4(uint64_t a1, uint64_t *a2)
{
  sub_1000B3CB0();
  uint64_t v3 = sub_1000B3CA0();
  uint64_t result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_1000A0A28()
{
  sub_1000B3C70();
  sub_1000A0A74();
  uint64_t result = sub_1000B3D00();
  qword_1000DCCC0 = result;
  return result;
}

unint64_t sub_1000A0A74()
{
  unint64_t result = qword_1000D7518;
  if (!qword_1000D7518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7518);
  }
  return result;
}

uint64_t sub_1000A0AC8(char a1, char a2)
{
  if (*(void *)&aRectanglsmalls_0[8 * a1] == *(void *)&aRectanglsmalls_0[8 * a2]
    && *(void *)&aRectanglsmalls_0[8 * a1 + 24] == *(void *)&aRectanglsmalls_0[8 * a2 + 24])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1000B4830();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1000A0B50(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001000B8B80;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      break;
    case 2:
      unint64_t v5 = 0xD000000000000018;
      uint64_t v6 = "widgetRecommendedToggled";
      goto LABEL_8;
    case 3:
      unint64_t v5 = 0xD000000000000017;
      uint64_t v6 = "widgetFamilySizeChanged";
      goto LABEL_8;
    case 4:
      unint64_t v5 = 0xD00000000000001DLL;
      uint64_t v6 = "widgetAccessorySceneReordered";
      goto LABEL_8;
    case 5:
      unint64_t v5 = 0xD000000000000019;
      uint64_t v6 = "widgetAccessorySceneAdded";
      goto LABEL_8;
    case 6:
      unint64_t v5 = 0xD00000000000001BLL;
      uint64_t v6 = "widgetAccessorySceneRemoved";
LABEL_8:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      unint64_t v5 = 0x7243746567646977;
      unint64_t v3 = 0xED00006465746165;
      break;
  }
  unint64_t v7 = 0x80000001000B8B80;
  switch(a2)
  {
    case 1:
      break;
    case 2:
      unint64_t v2 = 0xD000000000000018;
      uint64_t v8 = "widgetRecommendedToggled";
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xD000000000000017;
      uint64_t v8 = "widgetFamilySizeChanged";
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0xD00000000000001DLL;
      uint64_t v8 = "widgetAccessorySceneReordered";
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0xD000000000000019;
      uint64_t v8 = "widgetAccessorySceneAdded";
      goto LABEL_16;
    case 6:
      unint64_t v2 = 0xD00000000000001BLL;
      uint64_t v8 = "widgetAccessorySceneRemoved";
LABEL_16:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      unint64_t v2 = 0x7243746567646977;
      unint64_t v7 = 0xED00006465746165;
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1000B4830();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1000A0D4C()
{
  sub_1000B4070();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A0DA0()
{
  sub_1000B4070();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A0EAC()
{
  return sub_1000B48F0();
}

Swift::Int sub_1000A0FD4()
{
  return sub_1000B48F0();
}

unint64_t sub_1000A103C(char a1)
{
  switch(a1)
  {
    case 1:
      sub_1000B45C0(37);
      uint64_t v2 = qword_1000D4F00;
      unint64_t v1 = 0xD000000000000032;
      break;
    case 2:
      sub_1000B45C0(31);
      uint64_t v2 = qword_1000D4F00;
      unint64_t v1 = 0xD00000000000002CLL;
      break;
    case 3:
      sub_1000B45C0(30);
      uint64_t v2 = qword_1000D4F00;
      unint64_t v1 = 0xD00000000000002BLL;
      break;
    case 4:
      sub_1000B45C0(36);
      uint64_t v2 = qword_1000D4F00;
      unint64_t v1 = 0xD000000000000031;
      break;
    case 5:
      sub_1000B45C0(32);
      uint64_t v2 = qword_1000D4F00;
      unint64_t v1 = 0xD00000000000002DLL;
      break;
    case 6:
      sub_1000B45C0(34);
      uint64_t v2 = qword_1000D4F00;
      unint64_t v1 = 0xD00000000000002FLL;
      break;
    default:
      unint64_t v1 = 0xD000000000000021;
      sub_1000B45C0(20);
      uint64_t v2 = qword_1000D4F00;
      break;
  }
  if (v2 != -1) {
    swift_once();
  }
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1000A126C()
{
  qword_1000DCCC8 = 0x6C7070612E6D6F63;
  unk_1000DCCD0 = 0xEF2E656D6F482E65;
}

void *sub_1000A129C()
{
  uint64_t v1 = sub_1000B2F10();
  uint64_t v51 = *(void *)(v1 - 8);
  uint64_t v52 = v1;
  __chkstk_darwin(v1);
  unint64_t v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  Swift::Int v8 = *(void *)(v0 + 56);
  char v9 = *(unsigned char *)(v0 + 64);
  if (v7 == 1)
  {
    Swift::Int v10 = 0;
    uint64_t v11 = 0;
    uint64_t v49 = 2;
    int v50 = 1;
    HIDWORD(v48) = 2;
    int v12 = 2;
    int v13 = 2;
LABEL_5:
    sub_1000A392C(v4, v5, v7);
    uint64_t v15 = &_swiftEmptyDictionarySingleton;
    Swift::Int v8 = v10;
    uint64_t v7 = v11;
    goto LABEL_9;
  }
  char v14 = *(void *)(v0 + 24);
  int v13 = *(void *)(v0 + 48);
  int v12 = BYTE1(v6);
  HIDWORD(v48) = BYTE2(v6);
  uint64_t v49 = BYTE3(v6);
  int v50 = v9 & 1;
  if (v4 == 2)
  {
    Swift::Int v10 = v8;
    uint64_t v11 = v7;
    goto LABEL_5;
  }
  sub_1000A392C(v4, v5, v7);
  if (qword_1000D4F10 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1000D7530;
  uint64_t v17 = *(void *)algn_1000D7538;
  sub_100033068();
  swift_bridgeObjectRetain();
  Class isa = sub_1000B4360(v14 & 1).super.super.isa;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  int v53 = &_swiftEmptyDictionarySingleton;
  sub_1000A2EAC((uint64_t)isa, v16, v17, isUniquelyReferenced_nonNull_native);
  uint64_t v15 = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  if (v7)
  {
    id v20 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    NSString v21 = sub_1000B4000();
    swift_bridgeObjectRelease();
    id v22 = [v20 initWithString:v21];

    char v23 = swift_isUniquelyReferenced_nonNull_native();
    int v53 = v15;
    sub_1000A2EAC((uint64_t)v22, 0xD000000000000015, 0x80000001000BA240, v23);
    uint64_t v15 = v53;
    swift_bridgeObjectRelease();
  }
  if (v13 == 2) {
    goto LABEL_14;
  }
  if (qword_1000D4F18 != -1) {
    goto LABEL_36;
  }
  while (1)
  {
    uint64_t v24 = qword_1000D7540;
    uint64_t v25 = *(void *)algn_1000D7548;
    sub_100033068();
    swift_bridgeObjectRetain();
    Class v26 = sub_1000B4360(v13 & 1).super.super.isa;
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    int v53 = v15;
    sub_1000A2EAC((uint64_t)v26, v24, v25, v27);
    uint64_t v15 = v53;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    int v13 = HIDWORD(v48);
    if (v12 != 2)
    {
      if (qword_1000D4F20 != -1) {
        swift_once();
      }
      uint64_t v28 = qword_1000D7550;
      uint64_t v29 = *(void *)algn_1000D7558;
      sub_100033068();
      swift_bridgeObjectRetain();
      Class v30 = sub_1000B4360(v12 & 1).super.super.isa;
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      int v53 = v15;
      sub_1000A2EAC((uint64_t)v30, v28, v29, v31);
      uint64_t v15 = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    int v12 = v49;
    if (v13 == 2)
    {
      if (v49 == 2) {
        goto LABEL_20;
      }
    }
    else
    {
      if (qword_1000D4F28 != -1) {
        swift_once();
      }
      uint64_t v32 = qword_1000D7560;
      uint64_t v33 = *(void *)algn_1000D7568;
      sub_100033068();
      swift_bridgeObjectRetain();
      Class v34 = sub_1000B4360(v13 & 1).super.super.isa;
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      int v53 = v15;
      sub_1000A2EAC((uint64_t)v34, v32, v33, v35);
      uint64_t v15 = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12 == 2)
      {
LABEL_20:
        if ((v50 & 1) == 0) {
          goto LABEL_26;
        }
        goto LABEL_27;
      }
    }
    sub_100033068();
    Class v36 = sub_1000B4360(v12 & 1).super.super.isa;
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    int v53 = v15;
    sub_1000A2EAC((uint64_t)v36, 0xD000000000000019, 0x80000001000BA220, v37);
    uint64_t v15 = v53;
    swift_bridgeObjectRelease();
    if ((v50 & 1) == 0)
    {
LABEL_26:
      sub_100033068();
      Class v38 = sub_1000B4370(v8).super.super.isa;
      swift_bridgeObjectRelease();
      char v39 = swift_isUniquelyReferenced_nonNull_native();
      int v53 = v15;
      sub_1000A2EAC((uint64_t)v38, 0xD000000000000010, 0x80000001000B9EF0, v39);
      uint64_t v15 = v53;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    if (qword_1000D4F08 != -1) {
      swift_once();
    }
    Swift::Int v8 = qword_1000D7520;
    uint64_t v40 = *(void *)algn_1000D7528;
    sub_100033068();
    swift_bridgeObjectRetain();
    sub_1000B2F00();
    sub_1000B2EE0();
    double v42 = v41;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v3, v52);
    double v43 = v42 * 1000.0;
    if ((~COERCE__INT64(v42 * 1000.0) & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v43 <= -9.22337204e18) {
      goto LABEL_34;
    }
    if (v43 < 9.22337204e18) {
      break;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    swift_once();
  }
  Class v44 = sub_1000B4370((uint64_t)v43).super.super.isa;
  char v45 = swift_isUniquelyReferenced_nonNull_native();
  int v53 = v15;
  sub_1000A2EAC((uint64_t)v44, v8, v40, v45);
  id v46 = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_1000A193C()
{
  sub_10006F728(v0[3], v0[4], v0[5]);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetAnalyticsEvent()
{
  return self;
}

uint64_t destroy for WidgetAnalyticsEventData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WidgetAnalyticsEventData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetAnalyticsEventData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  return a1;
}

__n128 initializeWithTake for WidgetAnalyticsEventData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WidgetAnalyticsEventData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetAnalyticsEventData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetAnalyticsEventData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetAnalyticsEventData()
{
  return &type metadata for WidgetAnalyticsEventData;
}

uint64_t getEnumTagSinglePayload for WidgetAnalyticsEventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetAnalyticsEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A1D18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetAnalyticsEventType()
{
  return &type metadata for WidgetAnalyticsEventType;
}

unint64_t sub_1000A1D50(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      unint64_t result = 0x7243746567646977;
      break;
  }
  return result;
}

uint64_t sub_1000A1E28(unsigned __int8 *a1, char *a2)
{
  return sub_1000A0B50(*a1, *a2);
}

Swift::Int sub_1000A1E34()
{
  return sub_1000A0EAC();
}

uint64_t sub_1000A1E40()
{
  return sub_1000A0DA0();
}

Swift::Int sub_1000A1E48()
{
  return sub_1000A0EAC();
}

uint64_t sub_1000A1E50@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000A38E0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000A1E80@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000A1D50(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000A1EAC()
{
  return sub_1000A103C(*v0);
}

unint64_t sub_1000A1EB8()
{
  unint64_t result = qword_1000D7650;
  if (!qword_1000D7650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7650);
  }
  return result;
}

void sub_1000A1F0C()
{
  qword_1000D7520 = 0x6D617473656D6974;
  *(void *)algn_1000D7528 = 0xE900000000000070;
}

void sub_1000A1F34()
{
  qword_1000D7530 = 0x7373656363417369;
  *(void *)algn_1000D7538 = 0xEB0000000079726FLL;
}

void sub_1000A1F60()
{
  qword_1000D7540 = 0x656E6563537369;
  *(void *)algn_1000D7548 = 0xE700000000000000;
}

void sub_1000A1F84()
{
  qword_1000D7550 = 0x6168636165527369;
  *(void *)algn_1000D7558 = 0xEB00000000656C62;
}

void sub_1000A1FB0()
{
  qword_1000D7560 = 0x6176697463417369;
  *(void *)algn_1000D7568 = 0xEB00000000646574;
}

uint64_t sub_1000A1FDC(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_100004210(&qword_1000D7660);
  char v36 = a2;
  uint64_t v6 = sub_1000B46C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    id v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1000B48C0();
    sub_1000B4070();
    uint64_t result = sub_1000B48F0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int v3 = v7;
  return result;
}