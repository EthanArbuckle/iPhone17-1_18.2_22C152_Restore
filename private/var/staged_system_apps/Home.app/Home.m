uint64_t sub_1000038EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_10000D858(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100003950(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000D858(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1000039AC(uint64_t a1, void *a2)
{
  v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _reloadStateWithInvitation:0 home:v3];
}

void sub_100003B18(void *a1)
{
  uint64_t v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext);
  *(void *)(v2 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext) = a1;
  id v8 = a1;
  if (!a1)
  {
    if (!v4)
    {
LABEL_7:
      id v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    sub_10000A2A8();
    goto LABEL_7;
  }
  if (!v4) {
    goto LABEL_6;
  }
  type metadata accessor for DashboardContext();
  id v5 = v4;
  id v6 = v8;
  char v7 = static NSObject.== infix(_:_:)();

  if ((v7 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_8:
}

void sub_100003BD8(id a1)
{
  id v1 = +[HUViewControllerRegistry sharedInstance];
  [v1 registerViewControllerClass:objc_opt_class() forIdentifier:HUViewControllerClassIdentifierServiceLikeItemDetails];
}

void sub_100003C40(id a1)
{
  id v1 = +[HUTipsManager sharedManager];
  [v1 warmUp];

  id v2 = +[HUTipsManager sharedManager];
  [v2 donateAppLaunchEvent];
}

void sub_100003CEC(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  [v3 _logAccessoryCountMetricsWithHomes:v4];
  [*(id *)(a1 + 32) _logUserAutomationNamingTypeProportions:v4];
  [*(id *)(a1 + 32) _logNonConfiguredAccessoryMetricsWithHomes:v4];
}

uint64_t sub_100003DB0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000EC18(v0, qword_1000DDD10);
  sub_10000D89C(v0, (uint64_t)qword_1000DDD10);
  return Logger.init(subsystem:category:)();
}

void sub_100003F50(uint64_t a1)
{
  id v2 = +[HMFScheduler mainScheduler];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100004618;
  v4[3] = &unk_1000C1FE0;
  objc_copyWeak(v5, (id *)(a1 + 32));
  v5[1] = *(id *)(a1 + 40);
  id v3 = [v2 performBlock:v4];

  objc_destroyWeak(v5);
}

void sub_100004010(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100004024()
{
  type metadata accessor for Logger();
  __chkstk_darwin();
  uint64_t v0 = type metadata accessor for OSSignposter();
  sub_10000EC18(v0, qword_1000DF960);
  sub_10000D89C(v0, (uint64_t)qword_1000DF960);
  type metadata accessor for DataModel();
  static DataModel.modelLogger.getter();
  return OSSignposter.init(logger:)();
}

id sub_1000040DC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10000D858(&qword_1000DE220);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SidebarTabElementBuilder();
  uint64_t v46 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000D858(&qword_1000DE250);
  __chkstk_darwin(v10 - 8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StateSnapshot();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000038EC(a1, (uint64_t)v12, &qword_1000DE250);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100003950((uint64_t)v12, &qword_1000DE250);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  if (objc_msgSend(a2, "hf_shouldBlockCurrentRestrictedGuestFromHome")
    || (objc_msgSend(a2, "hf_shouldBlockCurrentUserFromHome") & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return 0;
  }
  uint64_t v44 = v7;
  uint64_t v19 = static SidebarTabElementBuilder.createRooms(with:)();
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    v27 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_12;
    }
LABEL_15:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    swift_bridgeObjectRelease();
    return 0;
  }
  v39 = a2;
  v40 = v6;
  v41 = v16;
  uint64_t v42 = v14;
  uint64_t v43 = v13;
  v50 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  uint64_t v21 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v38 = v19;
  uint64_t v22 = v19 + ((v21 + 32) & ~v21);
  uint64_t v23 = *(void *)(v46 + 72);
  v24 = (void (**)(char *, uint64_t))(v46 + 8);
  uint64_t v25 = v44;
  do
  {
    v47(v9, v22, v25);
    uint64_t v49 = 0;
    memset(v48, 0, sizeof(v48));
    id v26 = sub_100007C94((uint64_t)v9, (uint64_t)v48, 0);
    [v26 _setTabBarPlacement:4 v38];
    (*v24)(v9, v25);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    v22 += v23;
    --v20;
  }
  while (v20);
  v27 = v50;
  swift_bridgeObjectRelease();
  uint64_t v14 = v42;
  uint64_t v13 = v43;
  id v6 = v40;
  v16 = v41;
  a2 = v39;
  if (!v27[2]) {
    goto LABEL_15;
  }
LABEL_12:
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = (id)HULocalizedString();

  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v47 = v30;

  id v31 = HFHomeAppTabIdentifierHome;
  id v32 = a2;
  SidebarTabElementBuilder.init(from:home:)();
  uint64_t v33 = v46;
  uint64_t v34 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v6, 1, v44) == 1)
  {
    sub_100003950((uint64_t)v6, &qword_1000DE220);
    uint64_t v35 = 0;
    uint64_t v36 = 0xE000000000000000;
  }
  else
  {
    uint64_t v35 = SidebarTabElementBuilder.accessibilityIdentifier.getter();
    uint64_t v36 = v37;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
  }
  swift_bridgeObjectRetain();
  id v17 = sub_100007880(2u, 0, 0, v43, (uint64_t)v47, v35, v36, (uint64_t)v27, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v17;
}

void sub_100004618(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained itemManager];
  id v3 = [v2 reloadAndUpdateAllItemsFromSenderSelector:*(void *)(a1 + 40)];
}

id sub_100004680(uint64_t a1, void *a2)
{
  id v48 = a2;
  uint64_t v3 = sub_10000D858(&qword_1000DE220);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SidebarTabElementBuilder();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000D858(&qword_1000DE250);
  __chkstk_darwin(v10 - 8);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StateSnapshot();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000038EC(a1, (uint64_t)v12, &qword_1000DE250);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100003950((uint64_t)v12, &qword_1000DE250);
    return 0;
  }
  uint64_t v17 = v49;
  uint64_t v47 = v7;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  id v18 = v48;
  if (objc_msgSend(v48, "hf_currentUserIsRestrictedGuest")
    || (objc_msgSend(v18, "hf_shouldBlockCurrentUserFromHome") & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return 0;
  }
  uint64_t v45 = v5;
  uint64_t v21 = static SidebarTabElementBuilder.createCategories(with:home:)();
  uint64_t v22 = _swiftEmptyArrayStorage;
  v53 = _swiftEmptyArrayStorage;
  uint64_t v23 = *(void *)(v21 + 16);
  uint64_t v46 = v16;
  if (v23)
  {
    uint64_t v43 = v14;
    uint64_t v44 = v13;
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
    uint64_t v24 = *(unsigned __int8 *)(v47 + 80);
    v42[1] = v21;
    uint64_t v25 = v21 + ((v24 + 32) & ~v24);
    uint64_t v26 = *(void *)(v47 + 72);
    v27 = (void (**)(char *, uint64_t))(v47 + 8);
    do
    {
      v50(v9, v25, v6);
      uint64_t v52 = 0;
      memset(v51, 0, sizeof(v51));
      [sub_100007C94((uint64_t)v9, (uint64_t)v51, 0) _setTabBarPlacement:4];
      (*v27)(v9, v6);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (v53[2] >= v53[3] >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v25 += v26;
      --v23;
    }
    while (v23);
    uint64_t v22 = v53;
    id v18 = v48;
    uint64_t v28 = v49;
    uint64_t v14 = v43;
    uint64_t v13 = v44;
    v16 = v46;
  }
  else
  {
    uint64_t v28 = v17;
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t)v45;
  if (!v22[2])
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    swift_bridgeObjectRelease();
    return 0;
  }
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = (id)HULocalizedString();

  v50 = (void (*)(char *, uint64_t, uint64_t))static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  id v34 = HFHomeAppTabIdentifierHome;
  id v35 = v18;
  SidebarTabElementBuilder.init(from:home:)();
  uint64_t v36 = v47;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v29, 1, v6) == 1)
  {
    sub_100003950(v29, &qword_1000DE220);
    uint64_t v37 = 0;
    uint64_t v38 = 0xE000000000000000;
  }
  else
  {
    uint64_t v39 = SidebarTabElementBuilder.accessibilityIdentifier.getter();
    uint64_t v40 = v36;
    uint64_t v37 = v39;
    uint64_t v38 = v41;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v29, v6);
  }
  swift_bridgeObjectRetain();
  id v19 = sub_100007880(1u, 0, 0, (uint64_t)v50, v33, v37, v38, (uint64_t)v22, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v46, v13);
  return v19;
}

void sub_100004BC0(id a1)
{
  id v1 = objc_alloc_init((Class)NAFuture);
  id v2 = (void *)qword_1000DE960;
  qword_1000DE960 = (uint64_t)v1;

  uint64_t v3 = dispatch_get_global_queue(2, 0);
  dispatch_async(v3, &stru_1000C3F88);
}

void sub_100004E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100004F98(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id AdaptiveTabBarController.baseController.getter()
{
  uint64_t v1 = OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)HOBaseController) initWithRootController:v0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

BOOL sub_1000051E4(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_100005230(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 hf_allVisibleServices];
  uint64_t v5 = [v3 accessories];

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v6 = *(_OWORD *)(a1 + 48);
  long long v10 = *(_OWORD *)(a1 + 32);
  long long v11 = v6;
  v8[2] = sub_10000B890;
  v8[3] = &unk_1000C2668;
  id v9 = v4;
  id v7 = v4;
  [v5 na_each:v8];
}

id sub_1000052FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) dispatcher];
  uint64_t v5 = [v4 homeFuture];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10000E484;
  v8[3] = &unk_1000C22B0;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  long long v6 = [v5 addCompletionBlock:v8];
  objc_destroyWeak(&v9);

  return v6;
}

void sub_1000053E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000054D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *sub_10000567C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  result = &_swiftEmptyArrayStorage;
  unint64_t v12 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v8 = *(void *)(type metadata accessor for SidebarTabElementBuilder() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      a1(&v11, v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return (void *)v12;
  }
  return result;
}

void sub_1000057F4(uint64_t a1@<X0>, void *a2@<X8>)
{
}

void sub_10000580C(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_10000B3BC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), a2);
}

id _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0()
{
  uint64_t v1 = OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator];
  }
  else
  {
    id v4 = AdaptiveTabBarController.baseController.getter();
    uint64_t v5 = self;
    uint64_t v6 = v0;
    id v7 = [v5 navigatorWithRootViewController:v6 baseController:v4];

    uint64_t v8 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_100005D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t start(int a1, char **a2)
{
  uint64_t v5 = HFLogForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Home application launched", buf, 2u);
  }

  uint64_t v6 = HFLogForCategory();
  if (os_signpost_enabled(v6))
  {
    *(_WORD *)uint64_t v11 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v6, OS_SIGNPOST_INTERVAL_BEGIN, 0x1F4uLL, "HomeAppLaunch", "App started launching from main", v11, 2u);
  }

  id v7 = (objc_class *)objc_opt_class();
  NSStringFromClass(v7);
  uint64_t v8 = (NSString *)objc_claimAutoreleasedReturnValue();
  uint64_t v9 = UIApplicationMain(a1, a2, 0, v8);

  return v9;
}

void sub_1000060B4(void *a1)
{
  if (a1)
  {
    uint64_t v2 = HFLogForCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Navigation provider: HOAdaptiveTabBarController", v6, 2u);
    }

    id v3 = objc_alloc_init(HOAdaptiveTabBarController);
    id v4 = [(HOAdaptiveTabBarController *)v3 dashboardNavigator];
    [a1 setNavigator:v4];

    [a1 setTabBarController:v3];
    uint64_t v5 = [a1 window];
    [v5 setRootViewController:v3];
  }
}

void sub_1000063D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_100006420(id a1, HMHome *a2)
{
  uint64_t v2 = a2;
  uint64_t v19 = 0;
  uint64_t v20 = &v19;
  uint64_t v21 = 0x2020000000;
  uint64_t v22 = 0;
  uint64_t v15 = 0;
  v16 = &v15;
  uint64_t v17 = 0x2020000000;
  uint64_t v18 = 0;
  uint64_t v11 = 0;
  unint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000;
  uint64_t v14 = 0;
  id v3 = [(HMHome *)v2 accessories];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000085FC;
  v10[3] = &unk_1000C26D8;
  v10[4] = &v11;
  v10[5] = &v15;
  v10[6] = &v19;
  [v3 na_each:v10];

  v23[0] = HFAnalyticsResumeSetupNonConfiguredAccessoryCountKey;
  id v4 = +[NSNumber numberWithUnsignedInteger:v20[3]];
  v24[0] = v4;
  v23[1] = HFAnalyticsResumeSetupNonConfiguredBridgeCountKey;
  uint64_t v5 = +[NSNumber numberWithUnsignedInteger:v16[3]];
  v24[1] = v5;
  v23[2] = HFAnalyticsResumeSetupNonConfiguredBridgedCountKey;
  uint64_t v6 = +[NSNumber numberWithUnsignedInteger:v12[3]];
  v24[2] = v6;
  v23[3] = HFAnalyticsDataHomeUUIDKey;
  id v7 = [(HMHome *)v2 uniqueIdentifier];
  uint64_t v8 = [v7 UUIDString];
  v24[3] = v8;
  uint64_t v9 = +[NSDictionary dictionaryWithObjects:v24 forKeys:v23 count:4];

  +[HFAnalytics sendEvent:30 withData:v9];
  _Block_object_dispose(&v11, 8);
  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v19, 8);
}

void sub_100006658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va2, a8);
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v16 = va_arg(va2, void);
  uint64_t v17 = va_arg(va2, void);
  uint64_t v18 = va_arg(va2, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va2, 8);
  _Unwind_Resume(a1);
}

void sub_10000699C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100006AE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class();
  id v5 = v3;
  if (v5)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 0;
    }
    id v7 = v6;
    if (!v7)
    {
      uint64_t v8 = +[NSAssertionHandler currentHandler];
      uint64_t v9 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
      [v8 handleFailureInFunction:v9, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v4, objc_opt_class() file lineNumber description];
    }
  }
  else
  {
    id v7 = 0;
  }

  uint64_t v10 = [*(id *)(a1 + 32) _generateShortcutItemForActionSetItem:v7];

  return v10;
}

id sub_100006BFC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v37 = 0;
  memset(v36, 0, sizeof(v36));
  id v7 = sub_100007C94(a1, (uint64_t)v36, 0);
  [v7 _setTabBarPlacement:2];
  id v8 = sub_1000040DC(a2, a3);
  uint64_t v9 = OBJC_IVAR___HOAdaptiveTabBarController_roomsElements;
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR___HOAdaptiveTabBarController_roomsElements);
  *(void *)(v3 + OBJC_IVAR___HOAdaptiveTabBarController_roomsElements) = v8;

  id v11 = sub_100004680(a2, a3);
  uint64_t v12 = OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements;
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements);
  *(void *)(v3 + OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements) = v11;

  uint64_t v35 = SidebarTabElementBuilder.id.getter();
  uint64_t v15 = v14;
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = (id)HFLocalizedString();

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  uint64_t v21 = SidebarTabElementBuilder.accessibilityIdentifier.getter();
  uint64_t v23 = v22;
  sub_10000D858(&qword_1000DE258);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100095300;
  *(void *)(inited + 32) = v7;
  uint64_t v25 = *(void **)(v4 + v12);
  *(void *)(inited + 40) = v25;
  uint64_t v26 = *(void **)(v4 + v9);
  *(void *)(inited + 48) = v26;
  *(void *)&v36[0] = inited;
  specialized Array._endMutation()();
  uint64_t v27 = *(void *)&v36[0];
  id v28 = v26;
  id v29 = v7;
  id v30 = v25;
  id v31 = sub_100007880(0, v35, v15, v18, v20, v21, v23, v27, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  [v31 _setTabBarPlacement:4];
  uint64_t v32 = *(void **)(v4 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements);
  *(void *)(v4 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements) = v31;
  id v33 = v31;

  sub_10000A2A8();
  return v33;
}

uint64_t sub_10000747C(uint64_t a1, void *a2)
{
  id v5 = a2;
  if ([*(id *)(a1 + 32) containsObject:v5])
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    if (objc_msgSend(v5, "hf_isOnForContextType:", 2)) {
      ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
    }
    if (objc_msgSend(v5, "hf_isLegacyService")) {
      uint64_t v3 = *(void *)(a1 + 56);
    }
    else {
      uint64_t v3 = *(void *)(a1 + 64);
    }
    ++*(void *)(*(void *)(v3 + 8) + 24);
  }

  return _objc_release_x1();
}

void sub_100007530(id a1)
{
  uint64_t v1 = +[NSMapTable strongToStrongObjectsMapTable];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v2 = [&off_1000CB550 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v14;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(void *)v14 != v4) {
          objc_enumerationMutation(&off_1000CB550);
        }
        uint64_t v6 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        id v7 = +[UIImage systemImageNamed:v6];
        id v8 = [v7 _imageThatSuppressesAccessibilityHairlineThickening];

        [v1 setObject:v8 forKey:v6];
      }
      id v3 = [&off_1000CB550 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v3);
  }
  uint64_t v9 = (void *)qword_1000DE958;
  qword_1000DE958 = (uint64_t)v1;
  id v10 = v1;

  id v11 = HFLogForCategory();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "HOMainTabBarController: Done preloading tab bar icons.", v12, 2u);
  }

  [(id)qword_1000DE960 finishWithNoResult];
}

id sub_100007880(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a3)
  {
    if (!a1) {
      goto LABEL_6;
    }
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = 0;
    goto LABEL_7;
  }
  if (a1) {
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v12 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  id v11 = [v12 hu_systemTabImageWithNamed:v13 filled:0];

LABEL_7:
  id v14 = objc_allocWithZone((Class)_UITabElementGroup);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [v14 initWithIdentifier:v15 title:v16 image:v11];

  uint64_t v18 = *(void *)(a8 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v18; ++i)
    {
      uint64_t v20 = *(void **)(a8 + 8 * i + 32);
      if (v20)
      {
        id v21 = v20;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_10000AE6C(0, (unint64_t *)&qword_1000DE218);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 _setChildren:isa];

  if (a1)
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v23) {
      uint64_t v24 = 1;
    }
    else {
      uint64_t v24 = 2;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = 1;
  }
  [v17 _setSidebarAppearance:v24 a6:a7];
  [v17 _setDelegate:a9];
  id v25 = v17;
  NSString v26 = String._bridgeToObjectiveC()();
  [v25 setAccessibilityIdentifier:v26];

  if (a1 > 1u) {
    char v27 = 1;
  }
  else {
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  [v25 _setAllowsReordering:v27 & 1];
  return v25;
}

id sub_100007C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a2 + 24))
  {
    sub_100074600((long long *)a2, (uint64_t)v19);
    SidebarTabElementBuilder.id.getter();
    SidebarTabElementBuilder.title.getter();
    uint64_t v4 = (void *)SidebarTabElementBuilder.tabIcon.getter();
    id v5 = objc_allocWithZone((Class)_UITabElementGroup);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v8 = [v5 initWithIdentifier:v6 title:v7 image:v4];

    sub_1000657D0(v19, v19[3]);
    sub_100074618();
    Sequence.compactMap<A>(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 _setChildren:isa];

    [v8 _setDelegate:a3];
    [v8 _setSelectedElement:0];
    [v8 _setAllowsReordering:SidebarTabElementBuilder.allowsReordering.getter() & 1];
    id v10 = v8;
    SidebarTabElementBuilder.accessibilityIdentifier.getter();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 setAccessibilityIdentifier:v11];

    sub_10000C4CC((uint64_t)v19);
  }
  else
  {
    SidebarTabElementBuilder.id.getter();
    SidebarTabElementBuilder.title.getter();
    uint64_t v12 = (void *)SidebarTabElementBuilder.tabIcon.getter();
    id v13 = objc_allocWithZone((Class)_UITabElement);
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v16 = [v13 initWithIdentifier:v14 title:v15 image:v12];

    id v10 = v16;
    SidebarTabElementBuilder.accessibilityIdentifier.getter();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 setAccessibilityIdentifier:v17];
  }
  return v10;
}

Swift::Void __swiftcall AdaptiveTabBarController.viewDidLoad()()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  NSString v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v41 - v8;
  v46.receiver = v1;
  v46.super_class = ObjectType;
  [super viewDidLoad];
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = (id)HFLocalizedString();

  if (!v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v1 setTitle:v11];

  id v12 = [v1 _uip_sidebar];
  [v12 _setEditable:1];

  id v13 = self;
  id v14 = [v13 sharedDispatcher];
  unsigned int v15 = [v14 hasLoadedHomes];

  if (v15
    && (id v16 = [v13 sharedDispatcher],
        id v17 = [v16 home],
        v17,
        v16,
        v17))
  {
    if (qword_1000DD590 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10000D89C(v3, (uint64_t)qword_1000DDD10);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v18, v3);
    uint64_t v19 = v1;
    uint64_t v43 = v7;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      char v23 = (void *)swift_slowAlloc();
      uint64_t v44 = v4;
      uint64_t v45 = v19;
      *(_DWORD *)uint64_t v22 = 138412290;
      uint64_t v24 = v19;
      uint64_t v4 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v23 = v19;

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%@ viewDidLoad", v22, 0xCu);
      sub_10000D858(&qword_1000DD730);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v20 = v19;
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v43, v3);
    sub_100009004();
  }
  else
  {
    id v25 = AdaptiveTabBarController.baseController.getter();
    id v26 = [v25 loadLoadingViewController];

    sub_10000D858((uint64_t *)&unk_1000DDDB0);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_100094FC0;
    *(void *)(v27 + 32) = v26;
    uint64_t v45 = v27;
    specialized Array._endMutation()();
    sub_10000AE6C(0, &qword_1000DD750);
    id v28 = v26;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v1 setViewControllers:isa];

    if (qword_1000DD590 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_10000D89C(v3, (uint64_t)qword_1000DDD10);
    uint64_t v44 = v4;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v30, v3);
    id v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v42 = v28;
      uint64_t v43 = (char *)v3;
      uint64_t v33 = swift_slowAlloc();
      id v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 67109378;
      id v35 = [v13 sharedDispatcher];
      unsigned int v36 = [v35 hasLoadedHomes];

      LODWORD(v45) = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v33 + 8) = 2112;
      id v37 = [v13 sharedDispatcher];
      uint64_t v38 = [v37 home];

      if (v38) {
        uint64_t v45 = v38;
      }
      else {
        uint64_t v45 = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v40 = v42;
      *id v34 = v38;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Showing loading screen and hide sidebar, hasLoadedHomes:%{BOOL}d, hasHome: %@", (uint8_t *)v33, 0x12u);
      sub_10000D858(&qword_1000DD730);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v39 = v40;
      uint64_t v3 = (uint64_t)v43;
    }
    else
    {
      uint64_t v39 = v31;
      id v31 = v28;
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v3);
  }
}

void sub_1000085FC(void *a1, void *a2)
{
  id v4 = a2;
  uint64_t v3 = [v4 pendingConfigurationIdentifier];
  if ([v3 length])
  {
    if ([v4 isBridged]) {
      ++*(void *)(*(void *)(a1[4] + 8) + 24);
    }
    if (objc_msgSend(v4, "hf_isBridge")) {
      ++*(void *)(*(void *)(a1[5] + 8) + 24);
    }
    ++*(void *)(*(void *)(a1[6] + 8) + 24);
  }
}

void sub_100009004()
{
  uint64_t v1 = sub_10000D858(&qword_1000DE220);
  __chkstk_darwin(v1 - 8);
  v148 = (char *)&v130 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SidebarTabElementBuilder();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  v158 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v149 = (char *)&v130 - v7;
  uint64_t v8 = type metadata accessor for OSSignpostError();
  uint64_t v143 = *(void *)(v8 - 8);
  uint64_t v144 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  v150 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v141 = (char *)&v130 - v11;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType();
  uint64_t v142 = *(void *)(updated - 8);
  __chkstk_darwin(updated);
  id v14 = (uint64_t *)((char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v15 = (void *)type metadata accessor for StateSnapshot();
  uint64_t v155 = *(v15 - 1);
  id v156 = v15;
  __chkstk_darwin(v15);
  v153 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for OSSignpostID();
  uint64_t v152 = *(void *)(v154 - 8);
  uint64_t v17 = __chkstk_darwin(v154);
  v147 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  v146 = (char *)&v130 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v151 = (char *)&v130 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v130 - v23;
  uint64_t v25 = sub_10000D858(&qword_1000DE250);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = self;
  id v29 = [v28 sharedDispatcher];
  id v157 = [v29 home];

  if (v157)
  {
    id v30 = [v28 sharedDispatcher];
    id v31 = [v30 homeManager];

    if (v31)
    {
      unsigned __int8 v32 = [self isAnIPhone];
      v145 = v0;
      uint64_t v139 = v4;
      id v140 = v31;
      if (v32)
      {
        (*(void (**)(char *, uint64_t, uint64_t, id))(v155 + 56))(v27, 1, 1, v156);
        uint64_t v33 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)();
        __chkstk_darwin(v33);
        *(&v130 - 4) = (uint64_t)v0;
        *(&v130 - 3) = (uint64_t)v27;
        *(&v130 - 2) = (uint64_t)v157;
        unint64_t v34 = (unint64_t)sub_10000567C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1000057F4, (uint64_t)(&v130 - 6), v33);
        swift_bridgeObjectRelease();
        sub_100003950((uint64_t)v27, &qword_1000DE250);
        uint64_t v35 = v154;
        if (v34 >> 62)
        {
          sub_10000AE6C(0, &qword_1000DD750);
          swift_bridgeObjectRetain();
          _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          sub_10000AE6C(0, &qword_1000DD750);
        }
        unsigned int v36 = v158;
        id v37 = v150;
        swift_bridgeObjectRelease();
        sub_10000AE6C(0, &qword_1000DD750);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v39 = v145;
        [v145 setViewControllers:isa animated:0];
      }
      else
      {
        uint64_t v136 = v3;
        if (qword_1000DD598 != -1) {
          swift_once();
        }
        uint64_t v41 = type metadata accessor for OSSignposter();
        uint64_t v42 = sub_10000D89C(v41, (uint64_t)qword_1000DF960);
        static OSSignpostID.exclusive.getter();
        uint64_t v134 = v42;
        uint64_t v43 = OSSignposter.logHandle.getter();
        os_signpost_type_t v44 = static os_signpost_type_t.begin.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          uint64_t v45 = v152;
          v138 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
          unint64_t v137 = (v152 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          objc_super v46 = v151;
          uint64_t v47 = v154;
          v138(v151, v24, v154);
          id v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v48 = 0;
          os_signpost_id_t v49 = OSSignpostID.rawValue.getter();
          os_signpost_type_t v50 = v44;
          v51 = v46;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v43, v50, v49, "AdaptiveTabBarBuildSnapshot", "", v48, 2u);
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
          unint64_t v52 = v137;
          v53 = v138;
        }
        else
        {

          v51 = v151;
          uint64_t v45 = v152;
          v53 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
          unint64_t v52 = (v152 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          uint64_t v47 = v154;
        }
        v138 = v53;
        unint64_t v137 = v52;
        v53(v51, v24, v47);
        type metadata accessor for OSSignpostIntervalState();
        swift_allocObject();
        uint64_t v54 = OSSignpostIntervalState.init(id:isOpen:)();
        v55 = *(void (**)(char *, uint64_t))(v45 + 8);
        uint64_t v133 = v45 + 8;
        v132 = v55;
        v55(v24, v47);
        *id v14 = v157;
        (*(void (**)(void *, void, uint64_t))(v142 + 104))(v14, enum case for StateSnapshot.UpdateType.all(_:), updated);
        uint64_t v142 = *(void *)(v155 + 56);
        ((void (*)(char *, uint64_t, uint64_t, id))v142)(v27, 1, 1, v156);
        sub_10000D858(&qword_1000DE268);
        uint64_t v56 = type metadata accessor for StateSnapshot.Coverage();
        uint64_t v57 = *(void *)(v56 - 8);
        unint64_t v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_100094FB0;
        (*(void (**)(unint64_t, void, uint64_t))(v57 + 104))(v59 + v58, enum case for StateSnapshot.Coverage.everythingElse(_:), v56);
        id v60 = v157;
        id v61 = v140;
        sub_100072FCC(v59);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v131 = (uint64_t)v60;
        StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)();
        v62 = OSSignposter.logHandle.getter();
        v63 = v146;
        OSSignpostIntervalState.signpostID.getter();
        int v64 = static os_signpost_type_t.end.getter();
        char v65 = OS_os_log.signpostsEnabled.getter();
        uint64_t v135 = v54;
        if (v65)
        {
          LODWORD(v134) = v64;
          swift_retain();
          v66 = v141;
          checkForErrorAndConsumeState(state:)();
          swift_release();
          uint64_t v68 = v143;
          uint64_t v67 = v144;
          int v69 = (*(uint64_t (**)(char *, uint64_t))(v143 + 88))(v66, v144);
          uint64_t v3 = v136;
          if (v69 == enum case for OSSignpostError.doubleEnd(_:))
          {
            v70 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v67);
            v70 = "";
          }
          uint64_t v4 = v139;
          v72 = v151;
          v73 = v146;
          uint64_t v74 = v154;
          v138(v151, v146, v154);
          v75 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v75 = 0;
          os_signpost_id_t v76 = OSSignpostID.rawValue.getter();
          v77 = v70;
          uint64_t v35 = v74;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v62, (os_signpost_type_t)v134, v76, "AdaptiveTabBarBuildSnapshot", v77, v75, 2u);
          swift_slowDealloc();

          v78 = v73;
          v79 = v132;
          v132(v78, v74);
          v71 = v145;
          v79(v72, v74);
        }
        else
        {

          uint64_t v3 = v136;
          uint64_t v4 = v139;
          v71 = v145;
          uint64_t v35 = v154;
          v132(v63, v154);
        }
        id v80 = v156;
        (*(void (**)(char *, char *, id))(v155 + 16))(v27, v153, v156);
        ((void (*)(char *, void, uint64_t, id))v142)(v27, 0, 1, v80);
        uint64_t v81 = v131;
        uint64_t v82 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)();
        __chkstk_darwin(v82);
        *(&v130 - 4) = (uint64_t)v71;
        *(&v130 - 3) = (uint64_t)v27;
        *(&v130 - 2) = v81;
        unint64_t v83 = (unint64_t)sub_10000567C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1000057F4, (uint64_t)(&v130 - 6), v82);
        swift_bridgeObjectRelease();
        sub_100003950((uint64_t)v27, &qword_1000DE250);
        unsigned int v36 = v158;
        id v37 = v150;
        if (v83 >> 62)
        {
          sub_10000AE6C(0, &qword_1000DD750);
          swift_bridgeObjectRetain();
          _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          sub_10000AE6C(0, &qword_1000DD750);
        }
        swift_bridgeObjectRelease();
        sub_10000AE6C(0, &qword_1000DD750);
        Class v84 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v39 = v145;
        [v145 setViewControllers:v84 animated:0];
        swift_release();

        (*(void (**)(char *, id))(v155 + 8))(v153, v156);
      }
      if (*(void *)&v39[OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost])
      {
        uint64_t v85 = qword_1000DD598;
        swift_retain();
        if (v85 != -1) {
          swift_once();
        }
        uint64_t v86 = type metadata accessor for OSSignposter();
        sub_10000D89C(v86, (uint64_t)qword_1000DF960);
        v87 = OSSignposter.logHandle.getter();
        v88 = v147;
        OSSignpostIntervalState.signpostID.getter();
        int v89 = static os_signpost_type_t.end.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          swift_retain();
          checkForErrorAndConsumeState(state:)();
          swift_release();
          uint64_t v91 = v143;
          uint64_t v90 = v144;
          int v92 = (*(uint64_t (**)(char *, uint64_t))(v143 + 88))(v37, v144);
          LODWORD(v156) = v89;
          if (v92 == enum case for OSSignpostError.doubleEnd(_:))
          {
            v93 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v91 + 8))(v37, v90);
            v93 = "";
          }
          v94 = v151;
          uint64_t v95 = v152;
          v96 = v147;
          (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v151, v147, v35);
          uint64_t v97 = v35;
          v98 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v98 = 0;
          os_signpost_id_t v99 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v87, (os_signpost_type_t)v156, v99, "AdaptiveTabBarInitialLoad", v93, v98, 2u);
          swift_slowDealloc();

          v100 = *(void (**)(char *, uint64_t))(v95 + 8);
          v100(v96, v97);
          swift_release();
          v100(v94, v97);
          uint64_t v4 = v139;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v152 + 8))(v88, v35);
          swift_release();
        }
      }
      uint64_t v101 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)();
      uint64_t v102 = v101;
      uint64_t v103 = *(void *)(v101 + 16);
      if (v103)
      {
        unint64_t v104 = v101 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        v105 = self;
        uint64_t v107 = *(void *)(v4 + 16);
        uint64_t v106 = v4 + 16;
        uint64_t v155 = v107;
        id v156 = v105;
        uint64_t v108 = *(void *)(v106 + 56);
        v153 = (char *)HFHomeAppTabIdentifierHome;
        uint64_t v154 = v108;
        uint64_t v152 = v102;
        swift_bridgeObjectRetain();
        while (1)
        {
          uint64_t v109 = v3;
          ((void (*)(char *, unint64_t, uint64_t))v155)(v36, v104, v3);
          v110 = (void *)SidebarTabElementBuilder.homeAppTabIdentifier.getter();
          id v111 = [v156 sharedInstance];
          v112 = (char *)[v111 selectedHomeAppTabIdentifier];

          if (!v112) {
            v112 = v153;
          }
          uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v115 = v114;
          if (v113 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v115 == v116) {
            break;
          }
          char v118 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v118) {
            goto LABEL_47;
          }
          unsigned int v36 = v158;
          uint64_t v3 = v109;
          (*(void (**)(char *, uint64_t))(v106 - 8))(v158, v109);
          v104 += v154;
          if (!--v103)
          {
            swift_bridgeObjectRelease();
            uint64_t v119 = 1;
            uint64_t v4 = v139;
            goto LABEL_45;
          }
        }

        swift_bridgeObjectRelease_n();
LABEL_47:
        swift_bridgeObjectRelease();
        uint64_t v4 = v139;
        uint64_t v120 = (uint64_t)v148;
        uint64_t v3 = v109;
        (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v148, v158, v109);
        uint64_t v119 = 0;
      }
      else
      {
        uint64_t v119 = 1;
LABEL_45:
        uint64_t v120 = (uint64_t)v148;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v120, v119, 1, v3);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v120, 1, v3) == 1)
      {

        sub_100003950(v120, &qword_1000DE220);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v149, v120, v3);
        uint64_t v121 = SidebarTabElementBuilder.id.getter();
        uint64_t v123 = v122;
        v124 = &v145[OBJC_IVAR___HOAdaptiveTabBarController_controllers];
        swift_beginAccess();
        uint64_t v125 = *(void *)v124;
        if (*(void *)(v125 + 16) && (unint64_t v126 = sub_10000CC18(v121, v123), (v127 & 1) != 0))
        {
          v128 = *(void **)(*(void *)(v125 + 56) + 8 * v126);
          swift_endAccess();
          id v129 = v128;
          swift_bridgeObjectRelease();
          [v145 setSelectedViewController:v129];
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_endAccess();
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v149, v3);
      }
    }
    else
    {
      id v40 = v157;
    }
  }
}

void sub_10000A2A8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v86 - v7;
  id v9 = [self sharedInstance];
  id v10 = [v9 selectedHomeAppTabIdentifier];

  uint64_t v11 = (void *)HFHomeAppTabIdentifierHome;
  if (!v10) {
    id v10 = HFHomeAppTabIdentifierHome;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  id v94 = v11;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return;
    }
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_hideRooms) & 1) == 0)
  {
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext);
    if (v18)
    {
      id v19 = v18;
      id v20 = (id)DashboardContext.room.getter();

      if (v20)
      {
        uint64_t v21 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_roomsElements);
        if (v21)
        {
          int v92 = v21;
          id v22 = [v92 _children];
          sub_10000AE6C(0, (unint64_t *)&qword_1000DE218);
          unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          id v24 = v20;
          id v25 = sub_10007263C(v23, v24);
          swift_bridgeObjectRelease();

          if (v25)
          {
            self;
            uint64_t v26 = (void *)swift_dynamicCastObjCClass();
            if (v26)
            {
              id v94 = v26;
              if (qword_1000DD590 != -1) {
                swift_once();
              }
              uint64_t v27 = sub_10000D89C(v2, (uint64_t)qword_1000DDD10);
              (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v27, v2);
              id v28 = v24;
              id v29 = Logger.logObject.getter();
              os_log_type_t v30 = static os_log_type_t.default.getter();
              int v31 = v30;
              uint64_t v91 = v29;
              if (os_log_type_enabled(v29, v30))
              {
                uint64_t v32 = swift_slowAlloc();
                uint64_t v90 = v3;
                uint64_t v33 = v32;
                v87 = (void *)swift_slowAlloc();
                uint64_t v88 = swift_slowAlloc();
                v96[0] = v88;
                *(_DWORD *)uint64_t v33 = 136315650;
                id v89 = v25;
                uint64_t v34 = sub_10006F370();
                uint64_t v95 = sub_10000C3F8(v34, v35, v96);
                LODWORD(v86) = v31;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                *(_WORD *)(v33 + 12) = 2080;
                uint64_t v95 = sub_10000C3F8(0xD000000000000012, 0x800000010009CC10, v96);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v33 + 22) = 2112;
                uint64_t v95 = (uint64_t)v28;
                id v36 = v28;
                id v25 = v89;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                void *v87 = v20;

                id v37 = v91;
                _os_log_impl((void *)&_mh_execute_header, v91, (os_log_type_t)v86, "<%s: %s> Room Selected: %@", (uint8_t *)v33, 0x20u);
                sub_10000D858(&qword_1000DD730);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v90 + 8))(v8, v2);
              }
              else
              {

                (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
              }
              id v77 = v92;
              [v92 _setSelectedElement:v94];
              v78 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements);
              if (v78)
              {
                id v79 = v77;
                id v80 = v78;
                [v80 _setSelectedElement:v79];
              }
              else
              {
              }
              return;
            }
          }
          id v20 = v92;
        }
      }
    }
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_hideCategories) & 1) == 0)
  {
    uint64_t v38 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext);
    if (v38)
    {
      id v39 = v38;
      id v40 = (void *)dispatch thunk of DashboardContext.accessoryTypeGroup.getter();

      if (v40)
      {
        uint64_t v41 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements);
        if (v41)
        {
          id v42 = v41;
          id v43 = [v42 _children];
          sub_10000AE6C(0, (unint64_t *)&qword_1000DE218);
          unint64_t v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          id v45 = v40;
          objc_super v46 = (char *)sub_10007263C(v44, v45);
          swift_bridgeObjectRelease();

          int v92 = v46;
          if (v46)
          {
            self;
            uint64_t v47 = swift_dynamicCastObjCClass();
            if (v47)
            {
              uint64_t v48 = v47;
              if (qword_1000DD590 != -1) {
                swift_once();
              }
              uint64_t v49 = sub_10000D89C(v2, (uint64_t)qword_1000DDD10);
              (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v49, v2);
              id v50 = v45;
              v51 = Logger.logObject.getter();
              os_log_type_t v52 = static os_log_type_t.default.getter();
              LODWORD(v91) = v52;
              BOOL v53 = os_log_type_enabled(v51, v52);
              id v94 = v50;
              if (v53)
              {
                uint64_t v54 = swift_slowAlloc();
                uint64_t v90 = v3;
                uint64_t v55 = v54;
                v87 = (void *)swift_slowAlloc();
                uint64_t v88 = swift_slowAlloc();
                v96[0] = v88;
                *(_DWORD *)uint64_t v55 = 136315650;
                os_log_t v86 = v51;
                uint64_t v56 = sub_10006F370();
                uint64_t v95 = sub_10000C3F8(v56, v57, v96);
                id v89 = (id)v48;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                *(_WORD *)(v55 + 12) = 2080;
                uint64_t v95 = sub_10000C3F8(0xD000000000000012, 0x800000010009CC10, v96);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v55 + 22) = 2112;
                uint64_t v95 = (uint64_t)v50;
                id v58 = v50;
                uint64_t v48 = (uint64_t)v89;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                void *v87 = v40;

                os_log_t v59 = v86;
                _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v91, "<%s: %s> Category Selected: %@", (uint8_t *)v55, 0x20u);
                sub_10000D858(&qword_1000DD730);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v90 + 8))(v6, v2);
              }
              else
              {

                (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
              }
              [v42 _setSelectedElement:v48];
              uint64_t v81 = *(void **)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements);
              if (v81)
              {
                id v82 = v42;
                id v83 = v81;
                [v83 _setSelectedElement:v82];
              }
              else
              {
              }
              return;
            }
          }
        }
        else
        {
          id v42 = v40;
        }
      }
    }
  }
  id v60 = (char *)OBJC_IVAR___HOAdaptiveTabBarController_homeElements;
  id v61 = *(id *)(v1 + OBJC_IVAR___HOAdaptiveTabBarController_homeElements);
  if (v61)
  {
    id v62 = [v61 _children];
    sub_10000AE6C(0, (unint64_t *)&qword_1000DE218);
    unint64_t v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v93 = v1;
    if (v63 >> 62)
    {
LABEL_67:
      swift_bridgeObjectRetain();
      uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
      if (v64)
      {
LABEL_41:
        int v92 = v60;
        uint64_t v65 = 4;
        while (1)
        {
          id v60 = (char *)(v65 - 4);
          if ((v63 & 0xC000000000000001) != 0) {
            id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v66 = *(id *)(v63 + 8 * v65);
          }
          uint64_t v67 = v66;
          uint64_t v68 = v65 - 3;
          if (__OFADD__(v60, 1))
          {
            __break(1u);
            goto LABEL_67;
          }
          id v69 = [v66 _identifier];
          uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v72 = v71;

          if (v70 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v72 == v73) {
            break;
          }
          char v75 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v75) {
            goto LABEL_54;
          }

          ++v65;
          if (v68 == v64)
          {
            swift_bridgeObjectRelease_n();
            id v61 = 0;
            id v60 = v92;
            uint64_t v76 = v93;
            goto LABEL_69;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_54:
        swift_bridgeObjectRelease_n();
        self;
        id v61 = (id)swift_dynamicCastObjCClass();
        id v60 = v92;
        uint64_t v76 = v93;
        if (!v61)
        {

          id v61 = 0;
        }
        goto LABEL_69;
      }
    }
    else
    {
      uint64_t v64 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v64) {
        goto LABEL_41;
      }
    }
    swift_bridgeObjectRelease_n();
    id v61 = 0;
    uint64_t v76 = v93;
LABEL_69:
    Class v84 = *(void **)&v60[v76];
    if (v84)
    {
      id v94 = v61;
      id v85 = v84;
      [v85 _setSelectedElement:v94];

      id v61 = v94;
    }
  }
}

uint64_t sub_10000AE6C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_10000AEA8(uint64_t a1, void *a2)
{
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = &__NSArray0__struct;
  }
  uint64_t v4 = [v3 na_filter:&stru_1000C2048];
  id v5 = [v4 mutableCopy];

  uint64_t v6 = [*(id *)(a1 + 32) itemManager];
  uint64_t v7 = [v6 home];

  if (v7)
  {
    uint64_t v8 = +[NSBundle mainBundle];
    id v9 = @"HOHomeScreenQuickActionCreateSceneTitle";
    id v10 = [v8 localizedStringForKey:@"HOHomeScreenQuickActionCreateSceneTitle" value:@"_" table:@"HOLocalizable"];

    if ([@"_" isEqualToString:v10])
    {
      long long v25 = 0u;
      long long v26 = 0u;
      long long v27 = 0u;
      long long v28 = 0u;
      uint64_t v11 = sub_1000162F8();
      id v12 = [v11 countByEnumeratingWithState:&v25 objects:buf count:16];
      if (v12)
      {
        id v13 = v12;
        uint64_t v23 = a1;
        id v24 = v5;
        uint64_t v14 = *(void *)v26;
LABEL_8:
        uint64_t v15 = 0;
        while (1)
        {
          if (*(void *)v26 != v14) {
            objc_enumerationMutation(v11);
          }
          uint64_t v16 = *(void *)(*((void *)&v25 + 1) + 8 * v15);
          char v17 = +[NSBundle mainBundle];
          uint64_t v18 = [v17 localizedStringForKey:@"HOHomeScreenQuickActionCreateSceneTitle" value:@"HOHomeScreenQuickActionCreateSceneTitle" table:v16];

          if (![(__CFString *)v18 isEqualToString:@"HOHomeScreenQuickActionCreateSceneTitle"])break; {
          if (v13 == (id)++v15)
          }
          {
            id v13 = [v11 countByEnumeratingWithState:&v25 objects:buf count:16];
            if (v13) {
              goto LABEL_8;
            }
            uint64_t v18 = @"_";
            break;
          }
        }
        a1 = v23;
        id v5 = v24;
      }
      else
      {
        uint64_t v18 = @"_";
      }

      id v10 = v18;
    }
    if ([@"_" isEqualToString:v10]) {
      NSLog(@"Sensitive key '%@' not found!", @"HOHomeScreenQuickActionCreateSceneTitle");
    }
    else {
      id v9 = v10;
    }

    id v19 = +[UIApplicationShortcutIcon iconWithType:3];
    id v20 = [objc_alloc((Class)UIApplicationShortcutItem) initWithType:@"HOHomeScreenQuickActionCreateSceneType" localizedTitle:v9 localizedSubtitle:0 icon:v19 userInfo:0];
    [v5 addObject:v20];
  }
  uint64_t v21 = [*(id *)(a1 + 32) application];
  [v21 setShortcutItems:v5];

  id v22 = HFLogForCategory();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v30 = v5;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Updated home screen quick actions: %@", buf, 0xCu);
  }
}

void sub_10000B1C0(uint64_t a1)
{
  v14[0] = @"HOHomeScreenQuickActionActionSetIdentifierKey";
  v14[1] = @"HOHomeScreenQuickActionHomeIdentifierKey";
  uint64_t v2 = *(void *)(a1 + 40);
  v15[0] = *(void *)(a1 + 32);
  v15[1] = v2;
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:2];
  uint64_t v4 = [*(id *)(a1 + 48) latestResults];
  id v5 = [v4 objectForKeyedSubscript:HFResultDisplayIconDescriptorKey];

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    NSLog(@"All scene icon descriptors should be images. This scene's icon descriptor is: %@", v5);
  }
  uint64_t v6 = [v5 identifier];
  uint64_t v7 = +[UIImage _systemImageNamed:v6];

  if (!v7)
  {
    uint64_t v8 = [v5 identifier];
    NSLog(@"Could not find icon image for descriptor with identifier %@!", v8);
  }
  id v9 = objc_alloc((Class)SBSApplicationShortcutCustomImageIcon);
  id v10 = UIImagePNGRepresentation(v7);
  id v11 = [v9 initWithImageData:v10 dataType:0 isTemplate:1];

  id v12 = [objc_alloc((Class)UIApplicationShortcutIcon) initWithSBSApplicationShortcutIcon:v11];
  id v13 = [objc_alloc((Class)UIApplicationShortcutItem) initWithType:@"HOHomeScreenQuickActionExecuteSceneType" localizedTitle:*(void *)(a1 + 56) localizedSubtitle:0 icon:v12 userInfo:v3];
  [*(id *)(a1 + 64) finishWithResult:v13];
}

void sub_10000B3BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = SidebarTabElementBuilder.id.getter();
  uint64_t v12 = v11;
  id v13 = (void *)HFHomeAppTabIdentifierHome;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v14)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_8:
    id v17 = sub_100006BFC(a1, a3, a4);
    goto LABEL_9;
  }
  uint64_t v48 = 0;
  memset(v47, 0, sizeof(v47));
  id v17 = sub_100007C94(a1, (uint64_t)v47, 0);
  [v17 _setTabBarPlacement:2];
LABEL_9:
  uint64_t v18 = SidebarTabElementBuilder.id.getter();
  uint64_t v20 = v19;
  uint64_t v21 = (uint64_t *)(a2 + OBJC_IVAR___HOAdaptiveTabBarController_controllers);
  swift_beginAccess();
  uint64_t v22 = *v21;
  if (!*(void *)(*v21 + 16) || (unint64_t v23 = sub_10000CC18(v18, v20), (v24 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    SidebarTabElementBuilder.navigationBarClass.getter();
    id v29 = [objc_allocWithZone((Class)HUDashboardNavigationController) initWithNavigationBarClass:swift_getObjCClassFromMetadata() toolbarClass:0];
    [v29 setShouldUseCustomTabBarAppearance:SidebarTabElementBuilder.shouldUseCustomTabBarAppearance.getter() & 1];
    uint64_t v30 = SidebarTabElementBuilder.id.getter();
    uint64_t v32 = v31;
    swift_beginAccess();
    id v33 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    sub_10000CAA8((uint64_t)v33, v30, v32, isUniquelyReferenced_nonNull_native);
    *uint64_t v21 = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v35 = SidebarTabElementBuilder.viewController.getter();
    if (!v35)
    {

      id v27 = 0;
      long long v28 = a5;
      goto LABEL_24;
    }
    id v36 = v35;
    id v37 = (void *)SidebarTabElementBuilder.homeAppTabIdentifier.getter();
    id v38 = [self sharedInstance];
    id v39 = [v38 selectedHomeAppTabIdentifier];

    if (v39) {
      id v40 = v39;
    }
    else {
      id v40 = v13;
    }
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v42;
    if (v41 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v43 == v44)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v45 & 1) == 0)
      {
        [v33 pushViewController:v36 animated:0];
        goto LABEL_23;
      }
    }

LABEL_23:
    long long v28 = a5;
    id v27 = v33;
    [v27 _uip_setTabElement:v17];

    goto LABEL_24;
  }
  long long v25 = *(void **)(*(void *)(v22 + 56) + 8 * v23);
  swift_endAccess();
  id v26 = v25;
  swift_bridgeObjectRelease();
  id v27 = v26;
  [v27 _uip_setTabElement:v17];

  long long v28 = a5;
LABEL_24:
  *long long v28 = v27;
}

void sub_10000B890(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x2020000000;
  char v17 = 0;
  uint64_t v4 = [v3 services];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10000747C;
  v9[3] = &unk_1000C2640;
  id v10 = *(id *)(a1 + 32);
  uint64_t v11 = &v14;
  long long v12 = *(_OWORD *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 56);
  [v4 na_each:v9];

  if (!*((unsigned char *)v15 + 24)) {
    ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
  if (objc_msgSend(v3, "hf_isCamera"))
  {
    uint64_t v5 = &OBJC_PROTOCOL___HFFavoritable;
    id v6 = v3;
    if ([v6 conformsToProtocol:v5]) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    id v8 = v7;

    if (objc_msgSend(v8, "hf_effectiveIsFavorite")) {
      ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
    }
  }
  NSLog(&stru_1000C7D40.isa);

  _Block_object_dispose(&v14, 8);
}

void sub_10000BA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SidebarTabElementBuilder.viewController.getter()
{
  uint64_t v0 = type metadata accessor for SidebarTabElementBuilder.Kind();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  SidebarTabElementBuilder.kind.getter();
  int v4 = (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for SidebarTabElementBuilder.Kind.category(_:)
    || v4 == enum case for SidebarTabElementBuilder.Kind.room(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    goto LABEL_7;
  }
  if (v4 == enum case for SidebarTabElementBuilder.Kind.automation(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v1 + 96))(v3, v0);
    id v10 = (Class *)HUTriggerListViewController_ptr;
    if (!*v3) {
      id v10 = (Class *)HUAboutResidentDeviceViewController_ptr;
    }
    return [objc_allocWithZone(*v10) init];
  }
  if (v4 == enum case for SidebarTabElementBuilder.Kind.home(_:))
  {
LABEL_7:
    id v6 = [self sharedDispatcher];
    id v7 = [v6 home];

    if (v7)
    {
      type metadata accessor for DashboardContext();
      Class isa = (void *)dispatch thunk of static DashboardContext.homeDashboard(for:)();
      id v9 = [objc_allocWithZone((Class)HUDashboardViewController) initWithContext:isa delegate:0];

LABEL_9:
      return v9;
    }
    return 0;
  }
  if (v4 == enum case for SidebarTabElementBuilder.Kind.learn(_:))
  {
    id v11 = [self getAvailabilityDictionary];
    uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v13 = sub_10000C6D8(v12);
    swift_bridgeObjectRelease();
    if (v13)
    {
      id v14 = objc_allocWithZone((Class)HODiscoverWebViewController);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v9 = [v14 initWithLocalizationDictionary:isa];
      goto LABEL_9;
    }
    return 0;
  }
  id result = (id)_diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

void AdaptiveTabBarController.didUpdateDashboarContext(dashboardContext:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000DD590 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10000D89C(v5, (uint64_t)qword_1000DDD10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  id v10 = v2;
  id v11 = a1;
  uint64_t v12 = (char *)v10;
  id v13 = v11;
  id v14 = Logger.logObject.getter();
  int v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    int v27 = v15;
    uint64_t v29 = v5;
    uint64_t v16 = swift_slowAlloc();
    id v26 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v30 = ObjectType;
    uint64_t v31 = v28;
    *(_DWORD *)uint64_t v16 = 136315906;
    swift_getMetatypeMetadata();
    uint64_t v17 = String.init<A>(describing:)();
    uint64_t v30 = sub_10000C3F8(v17, v18, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v30 = sub_10000C3F8(0xD00000000000002BLL, 0x800000010009C8B0, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 22) = 2112;
    uint64_t v19 = *(void **)&v12[OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext];
    os_log_t v25 = v14;
    if (v19)
    {
      uint64_t v30 = (uint64_t)v19;
      id v20 = v19;
    }
    else
    {
      uint64_t v30 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v21 = v26;
    *id v26 = v19;

    *(_WORD *)(v16 + 32) = 2112;
    uint64_t v30 = (uint64_t)v13;
    id v22 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v21[1] = v13;

    os_log_t v23 = v25;
    _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v27, "<%s: %s> Changing context from %@ to %@", (uint8_t *)v16, 0x2Au);
    sub_10000D858(&qword_1000DD730);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  id v24 = v13;
  sub_100003B18(v13);
}

uint64_t sub_10000C3F8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10000C51C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10000CA4C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10000CA4C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000C4CC((uint64_t)v12);
  return v7;
}

uint64_t sub_10000C4CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10000C51C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100071FE4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

unint64_t sub_10000C6D8(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10000D858(&qword_1000DE410);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v31 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  uint64_t v6 = &v38;
  int64_t v30 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v5)
    {
      uint64_t v33 = (v5 - 1) & v5;
      unint64_t v16 = __clz(__rbit64(v5)) | (v8 << 6);
      int64_t v17 = v8;
    }
    else
    {
      int64_t v18 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_37;
      }
      if (v18 >= v30)
      {
LABEL_33:
        sub_10000EE28();
        return (unint64_t)v2;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v18);
      int64_t v17 = v8 + 1;
      if (!v19)
      {
        int64_t v17 = v8 + 2;
        if (v8 + 2 >= v30) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v17);
        if (!v19)
        {
          int64_t v17 = v8 + 3;
          if (v8 + 3 >= v30) {
            goto LABEL_33;
          }
          unint64_t v19 = *(void *)(v31 + 8 * v17);
          if (!v19)
          {
            int64_t v17 = v8 + 4;
            if (v8 + 4 >= v30) {
              goto LABEL_33;
            }
            unint64_t v19 = *(void *)(v31 + 8 * v17);
            if (!v19)
            {
              int64_t v20 = v8 + 5;
              if (v8 + 5 >= v30) {
                goto LABEL_33;
              }
              unint64_t v19 = *(void *)(v31 + 8 * v20);
              if (!v19)
              {
                while (1)
                {
                  int64_t v17 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_38;
                  }
                  if (v17 >= v30) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = *(void *)(v31 + 8 * v17);
                  ++v20;
                  if (v19) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v17 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v33 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v17 << 6);
    }
    uint64_t v21 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v16);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    sub_10000CA4C(*(void *)(v1 + 56) + 32 * v16, (uint64_t)v6);
    v37[0] = v22;
    v37[1] = v23;
    sub_10000CA4C((uint64_t)v6, (uint64_t)v36);
    swift_bridgeObjectRetain_n();
    sub_10000D084((uint64_t)v37);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10000EE28();
      swift_release();
      return 0;
    }
    int64_t v32 = v17;
    unint64_t result = sub_10000CC18(v22, v23);
    if (v24)
    {
      uint64_t v10 = v9;
      uint64_t v11 = 16 * result;
      uint64_t v12 = v6;
      uint64_t v13 = v1;
      id v14 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *id v14 = v22;
      v14[1] = v23;
      int v15 = (void *)(v2[7] + v11);
      uint64_t v9 = v10;
      unint64_t result = swift_bridgeObjectRelease();
      *int v15 = v34;
      v15[1] = v35;
      uint64_t v1 = v13;
      uint64_t v6 = v12;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    os_log_t v25 = (uint64_t *)(v2[6] + 16 * result);
    *os_log_t v25 = v22;
    v25[1] = v23;
    id v26 = (void *)(v2[7] + 16 * result);
    *id v26 = v34;
    v26[1] = v35;
    uint64_t v27 = v2[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_36;
    }
    v2[2] = v29;
LABEL_8:
    int64_t v8 = v32;
    unint64_t v5 = v33;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_10000CA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_10000CAA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10000CC18(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100072488();
LABEL_7:
    int64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10000CD74(v15, a4 & 1);
  unint64_t v20 = sub_10000CC18(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  int64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

unint64_t sub_10000CC18(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10000CC90(a1, a2, v4);
}

unint64_t sub_10000CC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_10000CD74(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000D858(&qword_1000DE260);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    int64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10000D084(uint64_t a1)
{
  uint64_t v2 = sub_10000D858(&qword_1000DE418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

NSObject *AdaptiveTabBarController.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v50 = type metadata accessor for Logger();
  uint64_t v52 = *(void *)(v50 - 8);
  ((void (*)(void))__chkstk_darwin)();
  v51 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for OSSignpostID();
  uint64_t v2 = *(void *)(v48 - 8);
  uint64_t v3 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v46 - v6;
  uint64_t v8 = sub_10000D858(&qword_1000DDD40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController] = 0;
  *(void *)&v0[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator] = 0;
  *(void *)&v0[OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext] = 0;
  *(void *)&v0[OBJC_IVAR___HOAdaptiveTabBarController_roomsElements] = 0;
  *(void *)&v0[OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements] = 0;
  *(void *)&v0[OBJC_IVAR___HOAdaptiveTabBarController_homeElements] = 0;
  v0[OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop] = 0;
  uint64_t v12 = &v0[OBJC_IVAR___HOAdaptiveTabBarController__viewIsVisible];
  LOBYTE(v53) = 0;
  int64_t v13 = v0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(void *)&v13[OBJC_IVAR___HOAdaptiveTabBarController_controllers] = &_swiftEmptyDictionarySingleton;
  uint64_t v47 = OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost;
  *(void *)&v13[OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost] = 0;
  uint64_t v14 = OBJC_IVAR___HOAdaptiveTabBarController_localeAvailability;
  id v15 = [self getAvailabilityDictionary];
  uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&v13[v14] = v16;
  v13[OBJC_IVAR___HOAdaptiveTabBarController_hideCategories] = 0;
  v13[OBJC_IVAR___HOAdaptiveTabBarController_hideRooms] = 0;
  if (qword_1000DD598 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for OSSignposter();
  sub_10000D89C(v17, (uint64_t)qword_1000DF960);
  static OSSignpostID.exclusive.getter();
  int64_t v18 = OSSignposter.logHandle.getter();
  os_signpost_type_t v19 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    unint64_t v20 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    int64_t v21 = v5;
    uint64_t v22 = v5;
    uint64_t v23 = v48;
    v20(v22, v7, v48);
    int64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v24 = 0;
    os_signpost_id_t v25 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, v19, v25, "AdaptiveTabBarInitialLoad", "", v24, 2u);
    swift_slowDealloc();

    uint64_t v26 = v23;
    uint64_t v5 = v21;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v21, v26);
  }
  else
  {

    unint64_t v20 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    uint64_t v26 = v48;
  }
  v20(v5, v7, v26);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v27 = OSSignpostIntervalState.init(id:isOpen:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v26);
  *(void *)&v13[v47] = v27;

  swift_release();
  uint64_t v28 = ObjectType;
  v56.receiver = v13;
  v56.super_class = ObjectType;
  [super initWithNibName:0 bundle:0];
  type metadata accessor for DashboardPresentationManager();
  id v30 = v29;
  uint64_t v31 = (void *)static DashboardPresentationManager.shared.getter();
  uint64_t v54 = v28;
  uint64_t v55 = sub_10000EFEC((unint64_t *)&unk_1000DDDA0, (void (*)(uint64_t))type metadata accessor for AdaptiveTabBarController);
  id v53 = v30;
  id v32 = v30;
  dispatch thunk of DashboardPresentationManager.delegate.setter();

  [v32 setDelegate:v32];
  id v33 = self;
  id v34 = [v33 sharedDispatcher];
  [v34 addHomeObserver:v32];

  id v35 = [v33 sharedDispatcher];
  [v35 addUserObserver:v32];

  id v36 = [v33 sharedDispatcher];
  [v36 addResidentDeviceObserver:v32];

  if (qword_1000DD590 != -1) {
    swift_once();
  }
  uint64_t v37 = v50;
  uint64_t v38 = sub_10000D89C(v50, (uint64_t)qword_1000DDD10);
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v38, v37);
  id v39 = v32;
  id v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 138412290;
    id v44 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();
    id v53 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v43 = v44;

    _os_log_impl((void *)&_mh_execute_header, v40, v41, "navigator create %@", v42, 0xCu);
    sub_10000D858(&qword_1000DD730);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v40 = v39;
  }

  (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v37);
  return v39;
}

uint64_t sub_10000D858(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000D89C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_10000E450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000E484(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  uint64_t v5 = +[HOOnboardingRootNavigationController onboardingStatesForHome:v3];
  uint64_t v6 = [WeakRetained pendingHomeIDsFromInvitations];
  uint64_t v7 = +[HOOnboardingRootNavigationController onboardingStatesForHome:v3 pendingHomeIDsFromInvitations:v6];

  uint64_t v8 = HFLogForCategory();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = [v7 count];
    id v10 = [v7 count];
    CFStringRef v11 = @"will not";
    if (!v10) {
      CFStringRef v11 = @"will";
    }
    int v13 = 134218242;
    id v14 = v9;
    __int16 v15 = 2112;
    CFStringRef v16 = v11;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Remaining App Onboarding states = %lu, %@ start feature onboarding", (uint8_t *)&v13, 0x16u);
  }

  if (![v7 count])
  {
    uint64_t v12 = [WeakRetained delegate];
    [v12 appOnboardingWillFinishForStateController:WeakRetained];
  }
}

uint64_t type metadata accessor for AdaptiveTabBarController()
{
  uint64_t result = qword_1000DDE18;
  if (!qword_1000DDE18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_10000EC18(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_10000EC7C(id a1)
{
  +[HFUtilities warmUpStaticPreferences];
  +[HFAccessoryTypeGroup warmUp];

  +[HUGraphicsUtilities shouldReduceVisualEffects];
}

NSArray *__cdecl sub_10000ECC0(id a1, HMHome *a2)
{
  return [(HMHome *)a2 triggers];
}

void sub_10000ECC8(id a1)
{
  qword_1000DE8A8 = (uint64_t)dispatch_queue_create("com.apple.Home.networkPathMonitorDispatchQueue", 0);

  _objc_release_x1();
}

id sub_10000ED08()
{
  if (qword_1000DE8A0 != -1) {
    dispatch_once(&qword_1000DE8A0, &stru_1000C2448);
  }
  uint64_t v0 = (void *)qword_1000DE8A8;

  return v0;
}

void sub_10000ED5C(id a1)
{
  qword_1000DE918 = objc_alloc_init(HODiscoverWebViewManager);

  _objc_release_x1();
}

void sub_10000ED98(id a1)
{
  qword_1000DE950 = objc_opt_new();

  _objc_release_x1();
}

uint64_t sub_10000EE28()
{
  return swift_release();
}

void sub_10000EE30()
{
  sub_10000EF94();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10000EEFC()
{
  return type metadata accessor for AdaptiveTabBarController();
}

void sub_10000EF70(void *a1)
{
}

void sub_10000EF94()
{
  if (!qword_1000DDE28)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000DDE28);
    }
  }
}

uint64_t sub_10000EFEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10000FA68(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[NSBundle mainBundle];
  uint64_t v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    uint64_t v5 = sub_100011F90();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        CFStringRef v11 = +[NSBundle mainBundle];
        uint64_t v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      uint64_t v12 = @"_";
    }

    uint64_t v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  id v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    id v14 = v1;
  }
  id v15 = v14;

  return v15;
}

void sub_10000FC54(uint64_t a1, objc_class *a2)
{
  id v4 = [*(id *)(a1 + 32) tableView];
  uint64_t v3 = NSStringFromClass(a2);
  [v4 registerClass:a2 forCellReuseIdentifier:v3];
}

id sub_10000FCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _[*(id *)(a1 + 32) tableView:a2 cellForRowAtIndexPath:a3 rowIdentifier:a4];
}

void sub_10001027C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id sub_1000102A8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) savedButtonBarItem];
  uint64_t v3 = [*(id *)(a1 + 32) navigationItem];
  [v3 setRightBarButtonItem:v2];

  id v4 = *(void **)(a1 + 32);

  return [v4 setSavedButtonBarItem:0];
}

void sub_100010318(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[HFHomeKitDispatcher sharedDispatcher];
  [v4 setSelectedHome:v3 userInitiated:1];

  id v5 = [*(id *)(a1 + 32) delegate];
  [v5 addLocationViewController:*(void *)(a1 + 32) didFinishWithHome:v3];
}

void sub_1000103AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = +[HFErrorHandler sharedHandler];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000104F8;
  v8[3] = &unk_1000C1CF8;
  void v8[4] = WeakRetained;
  [v5 handleError:v3 retryBlock:v8 cancelBlock:0];

  id v6 = HFLogForCategory();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    uint64_t v10 = v7;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Creating home \"%@\" failed with error %@", buf, 0x16u);
  }
}

id sub_1000104F8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) saveButtonPressed:0];
}

void sub_1000108E8(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 wallpaper];
  id v4 = [v3 type];

  if (v4 == (id)1)
  {
    id v5 = [v10 processedImage];
    id v6 = [*(id *)(a1 + 32) wallpaperPickerViewController];
    uint64_t v7 = [v10 wallpaper];
    [v6 setCustomWallpaper:v7 image:v5];
  }
  uint64_t v8 = [*(id *)(a1 + 32) wallpaperPickerViewController];
  uint64_t v9 = [v10 wallpaper];
  [v8 setSelectedWallpaper:v9 animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100010F64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = [v3 processedImage];
  [*(id *)(a1 + 32) setImage:v5];
  id v4 = [v3 wallpaper];

  LODWORD(v3) = [v4 type] != (id)2;
  [*(id *)(a1 + 32) setContentMode:2 * v3];
}

void sub_1000111E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v7 = [v3 originalImage];
  id v4 = objc_alloc((Class)HUWallpaperEditingViewController);
  id v5 = [v3 wallpaper];

  id v6 = [v4 initWithWallpaper:v5 image:v7 delegate:*(void *)(a1 + 32)];
  [v6 setModalPresentationStyle:0];
  [*(id *)(a1 + 32) presentViewController:v6 animated:1 completion:0];
}

void sub_100011930(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = [v3 originalImage];
  id v4 = *(void **)(a1 + 32);
  id v5 = [v3 wallpaper];

  [v4 presentWallpaperEditingViewControllerWithImage:v6 wallpaper:v5];
}

id sub_100011F90()
{
  if (qword_1000DE830 != -1) {
    dispatch_once(&qword_1000DE830, &stru_1000C1DB0);
  }
  unint64_t v0 = (void *)qword_1000DE838;

  return v0;
}

void sub_100011FE4(id a1)
{
  id v1 = (void *)qword_1000DE838;
  qword_1000DE838 = (uint64_t)&off_1000CB3B8;
}

BOOL sub_1000125BC(id a1, HMIncomingHomeInvitation *a2)
{
  return [(HMIncomingHomeInvitation *)a2 invitationState] == (id)2;
}

BOOL sub_1000125E0(id a1, HMIncomingHomeInvitation *a2)
{
  return [(HMIncomingHomeInvitation *)a2 isInviteeRestrictedGuest];
}

id sub_1000125E8(id a1, HMIncomingHomeInvitation *a2)
{
  return [(HMIncomingHomeInvitation *)a2 hf_prettyDescription];
}

id sub_10001263C(id a1, NSNumber *a2)
{
  NSUInteger v2 = [(NSNumber *)a2 unsignedIntegerValue];

  return +[HOOnboardingRootNavigationController stringForOnboardingState:v2];
}

void sub_1000137D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

id sub_1000137F8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 48) + 1;
  id v3 = [*(id *)(a1 + 32) onboardingViewControllers];
  id v4 = [v3 count];

  if (v2 >= (unint64_t)v4)
  {
LABEL_9:
    id v6 = 0;
  }
  else
  {
    while (1)
    {
      id v5 = [*(id *)(a1 + 32) onboardingViewControllers];
      id v6 = [v5 objectAtIndexedSubscript:v2];

      if (!*(unsigned char *)(a1 + 56)) {
        break;
      }
      if (objc_opt_respondsToSelector())
      {
        id v7 = [v6 segmentIdentifier];
      }
      else
      {
        id v7 = 0;
      }
      uint64_t v8 = *(void **)(a1 + 40);
      if (!v8 || ([v8 isEqualToString:v7] & 1) == 0)
      {

        break;
      }

      ++v2;
      uint64_t v9 = [*(id *)(a1 + 32) onboardingViewControllers];
      id v10 = [v9 count];

      if (v2 >= (unint64_t)v10) {
        goto LABEL_9;
      }
    }
  }

  return v6;
}

id sub_100013914(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 code] != (id)32) {
    goto LABEL_4;
  }
  id v4 = +[HFHomeKitDispatcher sharedDispatcher];
  id v5 = [v4 homeManager];
  id v6 = [*(id *)(a1 + 32) name];
  id v7 = [v5 hf_homeForName:v6];

  if (v7)
  {
    uint64_t v8 = +[NAFuture futureWithResult:v7];
  }
  else
  {
LABEL_4:
    uint64_t v8 = +[NAFuture futureWithError:v3];
  }

  return v8;
}

void sub_1000139FC(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = +[HFHomeKitDispatcher sharedDispatcher];
  [v4 setSelectedHome:v8 userInitiated:1];

  [v8 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:1];
  id v6 = +[HFHomeKitDispatcher sharedDispatcher];
  id v7 = [v6 homeManager];
  [v7 hf_enableEventLogOnboardingFlag];

  [WeakRetained _finishedOnboarding];
}

void sub_100013AC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[HFErrorHandler sharedHandler];
  [v4 handleError:v3];

  id v5 = HFLogForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [*(id *)(a1 + 32) name];
    int v7 = 138412546;
    id v8 = v6;
    __int16 v9 = 2112;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Creating first home \"%@\" failed with error %@", (uint8_t *)&v7, 0x16u);
  }
}

void sub_100013C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100013CAC(uint64_t a1, void *a2)
{
  unint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = [v3 unsignedIntegerValue];

  id v6 = [WeakRetained _viewControllerForState:v5];

  return v6;
}

id sub_100014BB4(void *a1)
{
  id v1 = a1;
  unint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = sub_100015458();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        __int16 v11 = +[NSBundle mainBundle];
        id v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      id v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  id v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    id v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_100015458()
{
  if (qword_1000DE840 != -1) {
    dispatch_once(&qword_1000DE840, &stru_1000C1FB0);
  }
  unint64_t v0 = (void *)qword_1000DE848;

  return v0;
}

void sub_1000154AC(id a1)
{
  id v1 = (void *)qword_1000DE848;
  qword_1000DE848 = (uint64_t)&off_1000CB3D0;
}

id sub_100015F84(id *a1, void *a2)
{
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_1000161E4;
  v20[3] = &unk_1000C20C0;
  id v21 = a1[4];
  id v4 = [a2 na_firstObjectPassingTest:v20];
  id v5 = v4;
  if (v4)
  {
    id v6 = [v4 actionSets];
    id v15 = _NSConcreteStackBlock;
    uint64_t v16 = 3221225472;
    long long v17 = sub_100016240;
    long long v18 = &unk_1000C20E8;
    id v19 = a1[6];
    id v7 = [v6 na_firstObjectPassingTest:&v15];

    if (v7)
    {
      uint64_t v8 = [v5 hf_characteristicValueManager:v15, v16, v17, v18];
      uint64_t v9 = [v8 executeActionSet:v7];

      [a1[7] showHomeDashboardCellForActionSet:v7 executeActionSetFuture:v9];
    }
    else
    {
      id v12 = HFLogForCategory();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_100082B94();
      }

      unsigned int v13 = +[NSError hf_errorWithCode:](NSError, "hf_errorWithCode:", 30, v15, v16, v17, v18);
      uint64_t v9 = +[NAFuture futureWithError:v13];
    }
    __int16 v11 = v19;
  }
  else
  {
    uint64_t v10 = HFLogForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100082B24();
    }

    __int16 v11 = +[NSError hf_errorWithCode:30];
    uint64_t v9 = +[NAFuture futureWithError:v11];
  }

  return v9;
}

id sub_1000161E4(uint64_t a1, void *a2)
{
  id v3 = [a2 uniqueIdentifier];
  id v4 = [v3 UUIDString];
  id v5 = [v4 isEqualToString:*(void *)(a1 + 32)];

  return v5;
}

id sub_100016240(uint64_t a1, void *a2)
{
  id v3 = [a2 uniqueIdentifier];
  id v4 = [v3 UUIDString];
  id v5 = [v4 isEqualToString:*(void *)(a1 + 32)];

  return v5;
}

id sub_1000162F8()
{
  if (qword_1000DE850 != -1) {
    dispatch_once(&qword_1000DE850, &stru_1000C2130);
  }
  unint64_t v0 = (void *)qword_1000DE858;

  return v0;
}

void sub_10001634C(id a1)
{
  id v1 = (void *)qword_1000DE858;
  qword_1000DE858 = (uint64_t)&off_1000CB400;
}

void sub_10001637C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

BOOL sub_1000172D8(id a1, UIWindow *a2)
{
  return [(UIWindow *)a2 isKeyWindow];
}

id sub_100017B24()
{
  if (qword_1000DE860 != -1) {
    dispatch_once(&qword_1000DE860, &stru_1000C2190);
  }
  unint64_t v0 = (void *)qword_1000DE868;

  return v0;
}

void sub_100017B78(id a1)
{
  id v1 = (void *)qword_1000DE868;
  qword_1000DE868 = (uint64_t)&off_1000CB418;
}

void sub_100017E60(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

NAFuture *__cdecl sub_100017E90(id a1)
{
  v6[0] = @"HOResultTabClassKey";
  v7[0] = objc_opt_class();
  v6[1] = @"HOResultTabTitleKey";
  id v1 = sub_100018004(@"HOTabHomeTitle");
  v7[1] = v1;
  v7[2] = @"house.fill";
  v6[2] = HFResultDisplayIconNamesKey;
  v6[3] = @"HOResultNavigationBarClassKey";
  v7[3] = objc_opt_class();
  v7[4] = HFHomeAppTabIdentifierHome;
  v6[4] = @"HOResultMainTabIdentifierKey";
  v6[5] = HFResultDependentHomeKitClassesKey;
  uint64_t v2 = +[NSSet setWithObject:objc_opt_class()];
  v7[5] = v2;
  id v3 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:6];
  uint64_t v4 = +[NAFuture futureWithResult:v3];

  return (NAFuture *)v4;
}

id sub_100018004(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = sub_100018940();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        __int16 v11 = +[NSBundle mainBundle];
        id v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      id v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  id v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    id v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_1000181F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (!objc_msgSend(*(id *)(a1 + 32), "hf_shouldBlockCurrentUserFromHome"))
  {
    if ([WeakRetained _shouldShowTriggerListForHome:*(void *)(a1 + 32)])
    {
      v19[0] = @"HOResultTabClassKey";
      v20[0] = objc_opt_class();
      v19[1] = @"HOResultTabTitleKey";
      id v3 = sub_100018004(@"HOTabAutomationTitle");
      v20[1] = v3;
      v20[2] = @"deskclock.fill";
      v19[2] = HFResultDisplayIconNamesKey;
      v19[3] = HFResultDependentHomeKitClassesKey;
      uint64_t v6 = objc_opt_class();
      uint64_t v7 = objc_opt_class();
      uint64_t v8 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v6, v7, objc_opt_class(), 0);
      void v19[4] = @"HOResultMainTabIdentifierKey";
      v20[3] = v8;
      void v20[4] = HFHomeAppTabIdentifierTriggers;
      uint64_t v9 = v20;
      uint64_t v10 = v19;
    }
    else
    {
      if (![WeakRetained _shouldShowTriggerAboutPageForHome:*(void *)(a1 + 32)])
      {
        v15[0] = HFResultDependentHomeKitClassesKey;
        id v3 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", objc_opt_class(), 0);
        v15[1] = HFResultHiddenKey;
        v16[0] = v3;
        v16[1] = &__kCFBooleanTrue;
        id v4 = v16;
        id v5 = v15;
        goto LABEL_9;
      }
      v17[0] = @"HOResultTabClassKey";
      v18[0] = objc_opt_class();
      v17[1] = @"HOResultTabTitleKey";
      id v3 = sub_100018004(@"HOTabAutomationTitle");
      v18[1] = v3;
      v18[2] = @"deskclock.fill";
      v17[2] = HFResultDisplayIconNamesKey;
      v17[3] = HFResultDependentHomeKitClassesKey;
      uint64_t v11 = objc_opt_class();
      uint64_t v8 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v11, objc_opt_class(), 0);
      v17[4] = @"HOResultMainTabIdentifierKey";
      v18[3] = v8;
      v18[4] = HFHomeAppTabIdentifierTriggers;
      uint64_t v9 = v18;
      uint64_t v10 = v17;
    }
    id v12 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v10 count:5];
    unsigned int v13 = +[NAFuture futureWithResult:v12];

    goto LABEL_10;
  }
  v21[0] = HFResultDependentHomeKitClassesKey;
  id v3 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", objc_opt_class(), 0);
  v21[1] = HFResultHiddenKey;
  v22[0] = v3;
  v22[1] = &__kCFBooleanTrue;
  id v4 = v22;
  id v5 = v21;
LABEL_9:
  uint64_t v8 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v5 count:2];
  unsigned int v13 = +[NAFuture futureWithResult:v8];
LABEL_10:

  return v13;
}

id sub_1000185A0(uint64_t a1)
{
  id v2 = objc_alloc((Class)NSMutableDictionary);
  v12[0] = @"HOResultTabClassKey";
  v13[0] = objc_opt_class();
  v12[1] = @"HOResultTabTitleKey";
  id v3 = sub_100018004(@"HOTabDiscoverTitle");
  v13[1] = v3;
  v13[2] = @"star.fill";
  v12[2] = HFResultDisplayIconNamesKey;
  uint64_t v12[3] = @"HOResultMainTabIdentifierKey";
  v13[3] = HFHomeAppTabIdentifierDiscover;
  v12[4] = HFResultDependentHomeKitClassesKey;
  id v4 = +[NSSet setWithObject:objc_opt_class()];
  v13[4] = v4;
  id v5 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:5];
  id v6 = [v2 initWithDictionary:v5];

  uint64_t v7 = *(void *)(a1 + 32);
  if (v7
    && ([v6 setObject:v7 forKeyedSubscript:HFResultStoreLocaleDictionaryArgumentsKey],
        *(void *)(a1 + 32))
    && (objc_msgSend(*(id *)(a1 + 40), "hf_shouldBlockCurrentUserFromHome") & 1) == 0)
  {
    uint64_t v8 = [*(id *)(a1 + 40) hf_currentUserIsRestrictedGuest];
  }
  else
  {
    uint64_t v8 = 1;
  }
  uint64_t v9 = +[NSNumber numberWithBool:v8];
  [v6 setObject:v9 forKeyedSubscript:HFResultHiddenKey];

  uint64_t v10 = +[NAFuture futureWithResult:v6];

  return v10;
}

id sub_100018940()
{
  if (qword_1000DE870 != -1) {
    dispatch_once(&qword_1000DE870, &stru_1000C2260);
  }
  unint64_t v0 = (void *)qword_1000DE878;

  return v0;
}

void sub_100018994(id a1)
{
  id v1 = (void *)qword_1000DE878;
  qword_1000DE878 = (uint64_t)&off_1000CB430;
}

void sub_1000189AC(uint64_t a1)
{
  id v2 = HFLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Home preferences changed; reloading state",
      v4,
      2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadState];
}

void sub_100018B28(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100018B4C(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _reloadStateWithInvitation:*(void *)(a1 + 32) home:v4];
}

id sub_100018BB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateOnboardingCompleteFutureForNewPresentationState:*(void *)(a1 + 48)];
  id v3 = HFLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = *(void *)(a1 + 48);
    int v9 = 134217984;
    uint64_t v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "desired onboarding state: %lu", (uint8_t *)&v9, 0xCu);
  }

  uint64_t v5 = *(void *)(a1 + 48);
  if (v5 == 3)
  {
    uint64_t v6 = [WeakRetained _presentOnboardingWithStates:*(void *)(a1 + 32)];
  }
  else if (v5 == 2)
  {
    uint64_t v6 = [WeakRetained _presentDataSyncingControllerWithState:*(void *)(a1 + 56)];
  }
  else
  {
    if (v5 == 1) {
      [WeakRetained _presentiCloudDisabledControllerWithState:*(void *)(a1 + 56) andStatus:*(void *)(a1 + 64)];
    }
    else {
    uint64_t v6 = +[NAFuture futureWithNoResult];
    }
  }
  uint64_t v7 = (void *)v6;

  return v7;
}

id sub_100018D04(uint64_t a1)
{
  return [*(id *)(a1 + 32) performMigrationSuccessTasks];
}

void sub_10001A040(uint64_t a1)
{
  [*(id *)(a1 + 32) _checkForAppOnboardingWillFinish];
  id v2 = [*(id *)(a1 + 32) onboardingCompleteFuture];
  [v2 finishWithNoResult];
}

id sub_10001A27C(uint64_t a1, void *a2)
{
  id v3 = [a2 uniqueIdentifier];
  uint64_t v4 = [*(id *)(a1 + 32) homeUUID];
  id v5 = [v3 isEqual:v4];

  return v5;
}

void sub_10001B79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

id sub_10001B7C8(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = sub_10001E288();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        uint64_t v11 = +[NSBundle mainBundle];
        id v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      id v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  id v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    id v14 = v1;
  }
  id v15 = v14;

  return v15;
}

void sub_10001B9B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = HFLogForCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      id v3 = [WeakRetained invitation];
      id v4 = [v3 hf_prettyDescription];
      id v5 = [WeakRetained invitation];
      int v10 = 136315650;
      uint64_t v11 = "-[HOOnboardingIncomingInvitationViewController invitationResponseController:stateDidChange:]_block_invoke";
      __int16 v12 = 2112;
      unsigned int v13 = v4;
      __int16 v14 = 1024;
      unsigned int v15 = [v5 isInviteeRestrictedGuest];
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(%s) Two minutes time out reached for handling invitation. invitation = %@. isInviteeRestrictedGuest = %{BOOL}d", (uint8_t *)&v10, 0x1Cu);
    }
    id v6 = [WeakRetained incomingInvitationDelegate];
    char v7 = objc_opt_respondsToSelector();

    if (v7)
    {
      uint64_t v8 = +[NSError hf_errorWithCode:39];
      uint64_t v9 = [WeakRetained incomingInvitationDelegate];
      [v9 invitationViewControllerDidDecideLaterInvitation:WeakRetained error:v8];
    }
    else
    {
      uint64_t v8 = [WeakRetained incomingInvitationDelegate];
      [v8 invitationViewControllerDidDecideLaterInvitation:WeakRetained];
    }
  }
}

void sub_10001C758(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 144));
  _Unwind_Resume(a1);
}

void sub_10001C7B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = HFLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = NSStringFromSelector(*(SEL *)(a1 + 40));
    int v5 = 138412546;
    id v6 = WeakRetained;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped ignore on the action sheet", (uint8_t *)&v5, 0x16u);
  }
  [WeakRetained _ignoreInvitation:0];
}

void sub_10001C8A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = HFLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = NSStringFromSelector(*(SEL *)(a1 + 40));
    int v5 = 138412546;
    id v6 = WeakRetained;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped report on the action sheet", (uint8_t *)&v5, 0x16u);
  }
  [WeakRetained _reportJunk:0];
}

void sub_10001C98C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = HFLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = [v3 title];
    int v6 = 136315394;
    __int16 v7 = "-[HOOnboardingIncomingInvitationViewController _ignoreOrReportAlert:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "(%s) User tapped cancel button '%@' from alert", (uint8_t *)&v6, 0x16u);
  }
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_10001D68C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 144));
  _Unwind_Resume(a1);
}

void sub_10001D6E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = HFLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = NSStringFromSelector(*(SEL *)(a1 + 40));
    int v5 = 138412546;
    id v6 = WeakRetained;
    __int16 v7 = 2112;
    __int16 v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped Accept on the alert. Finally / really / accepting invitation.", (uint8_t *)&v5, 0x16u);
  }
  [WeakRetained _reallyAcceptInvitation];
}

void sub_10001D7D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = HFLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = NSStringFromSelector(*(SEL *)(a1 + 40));
    int v5 = 138412546;
    id v6 = WeakRetained;
    __int16 v7 = 2112;
    __int16 v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped Ignore and Report on the alert", (uint8_t *)&v5, 0x16u);
  }
  [WeakRetained _reportJunk:0];
}

void sub_10001D8BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = HFLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315394;
    id v6 = "-[HOOnboardingIncomingInvitationViewController _acceptInvitation]_block_invoke";
    __int16 v7 = 2114;
    id v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "(%s) User tapped '%{public}@' from the alert popup", (uint8_t *)&v5, 0x16u);
  }

  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

id sub_10001E288()
{
  if (qword_1000DE880 != -1) {
    dispatch_once(&qword_1000DE880, &stru_1000C2408);
  }
  unint64_t v0 = (void *)qword_1000DE888;

  return v0;
}

void sub_10001E2DC(id a1)
{
  id v1 = (void *)qword_1000DE888;
  qword_1000DE888 = (uint64_t)&off_1000CB460;
}

id sub_10001E6A8(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    int v5 = sub_10001F094();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        uint64_t v11 = +[NSBundle mainBundle];
        __int16 v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      __int16 v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  __int16 v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    __int16 v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_10001F094()
{
  if (qword_1000DE890 != -1) {
    dispatch_once(&qword_1000DE890, &stru_1000C2428);
  }
  unint64_t v0 = (void *)qword_1000DE898;

  return v0;
}

void sub_10001F0E8(id a1)
{
  id v1 = (void *)qword_1000DE898;
  qword_1000DE898 = (uint64_t)&off_1000CB478;
}

void sub_10001F168(uint64_t a1, nw_path_t path)
{
  if (nw_path_get_status(path) == nw_path_status_satisfied)
  {
    id v3 = v6;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    id v4 = sub_10001F234;
  }
  else
  {
    id v3 = v5;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    id v4 = sub_10001F298;
  }
  v3[2] = v4;
  v3[3] = &unk_1000C1CF8;
  v3[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_10001F234(uint64_t a1)
{
  if ([*(id *)(a1 + 32) currentConnectionIssueState] == (id)2)
  {
    id v2 = +[HODiscoverWebViewManager sharedInstance];
    [v2 reloadWebViews];
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 _updateNetworkConnectionState:0];
}

id sub_10001F298(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateNetworkConnectionState:1];
}

void sub_100020ED8(uint64_t a1)
{
  id v2 = +[HODiscoverWebViewManager sharedInstance];
  id v3 = [*(id *)(a1 + 32) webView];
  id v4 = [v2 getWebViewNavigationStateForWebView:v3];

  if (!v4)
  {
    id v5 = [*(id *)(a1 + 32) webViewActivityIndicator];
    [v5 startAnimating];
  }
}

id sub_1000217F0()
{
  if (qword_1000DE8B0 != -1) {
    dispatch_once(&qword_1000DE8B0, &stru_1000C24B8);
  }
  unint64_t v0 = (void *)qword_1000DE8B8;

  return v0;
}

void sub_100021844(id a1)
{
  id v1 = (void *)qword_1000DE8B8;
  qword_1000DE8B8 = (uint64_t)&off_1000CB490;
}

void sub_10002185C(void *a1)
{
  if (a1)
  {
    id v2 = HFLogForCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)__int16 v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Navigation provider: HOSplitViewController", v12, 2u);
    }

    id v3 = [[HOSplitViewController alloc] initWithStyle:1];
    [a1 setSplitViewController:v3];

    id v4 = [a1 splitViewController];
    id v5 = [a1 splitViewController];
    id v6 = [v5 baseController];
    id v7 = +[HOAppNavigator navigatorWithRootViewController:v4 baseController:v6];
    [a1 setNavigator:v7];

    uint64_t v8 = [a1 navigator];
    uint64_t v9 = [a1 splitViewController];
    [v9 setAppNavigator:v8];

    uint64_t v10 = [a1 window];
    uint64_t v11 = [a1 splitViewController];
    [v10 setRootViewController:v11];
  }
}

void sub_1000219D8(void *a1)
{
  if (a1)
  {
    id v2 = HFLogForCategory();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Navigation provider: HOMainTabBarController", v7, 2u);
    }

    id v3 = objc_alloc_init(HOMainTabBarController);
    id v4 = [(HOMainTabBarController *)v3 baseController];
    id v5 = +[HOAppNavigator navigatorWithRootViewController:v3 baseController:v4];
    [a1 setNavigator:v5];

    [(HOMainTabBarController *)v3 setNavigator:a1[5]];
    [a1 setTabBarController:v3];
    id v6 = [a1 window];
    [v6 setRootViewController:v3];
  }
}

void sub_100021C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100021C34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained URLHandler];
  id v3 = [v2 openURL:*(void *)(a1 + 32)];
}

uint64_t sub_100021E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a3 == 0);
  }
  return result;
}

void sub_100022028(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  id v4 = a3;
  id v5 = HFLogForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 67109120;
    LODWORD(v8) = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Notification authorization granted %{BOOL}d", (uint8_t *)&v7, 8u);
  }

  if (v4)
  {
    id v6 = HFLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 138412290;
      uint64_t v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Error in notification authorization %@", (uint8_t *)&v7, 0xCu);
    }
  }
}

void sub_100022274(id a1, HMHome *a2)
{
  id v2 = [(HMHome *)a2 hf_characteristicValueManager];
  [v2 cancelInFlightReadRequests];
}

void sub_100022824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100022848(uint64_t a1)
{
  id v2 = HFLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
    int v6 = 138412546;
    uint64_t v7 = v3;
    __int16 v8 = 2048;
    uint64_t v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "expirationHandler called for itemID = %@ - taskID = %lu", (uint8_t *)&v6, 0x16u);
  }

  return [*(id *)(a1 + 40) _endBackgroundTaskWithTaskIdentifier:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
}

BOOL sub_100022AAC(id a1, HMTrigger *a2)
{
  id v2 = [(HMTrigger *)a2 configuredName];
  BOOL v3 = v2 != 0;

  return v3;
}

void sub_100022D9C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100025104(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 176));
  _Unwind_Resume(a1);
}

id sub_100025190(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = [a2 uniqueIdentifier];
  id v4 = [v2 isEqual:v3];

  return v4;
}

id sub_1000251D8(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v37 = 0;
  uint64_t v38 = &v37;
  uint64_t v39 = 0x3032000000;
  id v40 = sub_1000256BC;
  os_log_type_t v41 = sub_1000256CC;
  id v42 = 0;
  uint64_t v31 = _NSConcreteStackBlock;
  uint64_t v32 = 3221225472;
  id v33 = sub_1000256D4;
  id v34 = &unk_1000C2780;
  id v36 = &v37;
  id v35 = a1[4];
  id v4 = [v3 na_firstObjectPassingTest:&v31];
  if (v4)
  {
    if (objc_msgSend((id)v38[5], "isBridged", v31, v32, v33, v34))
    {
      id v5 = [v38[5] hf_owningBridgeAccessory];
      int v6 = HFLogForCategory();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = a1[4];
        __int16 v8 = (void *)v38[5];
        uint64_t v9 = [v5 deviceIdentifier];
        *(_DWORD *)buf = 138413058;
        id v44 = v7;
        __int16 v45 = 2112;
        uint64_t v46 = v8;
        __int16 v47 = 2112;
        uint64_t v48 = v5;
        __int16 v49 = 2112;
        uint64_t v50 = v9;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to reprovision device for deviceIdentifier %@. Corresponding accessory %@ is a bridged accessory. Opening its bridge %@ with deviceIdentifier %@ instead.", buf, 0x2Au);
      }
      uint64_t v10 = (void *)v38[5];
      v38[5] = (uint64_t)v5;
    }
    uint64_t v11 = HFLogForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v12 = [v38[5] hf_prettyDescription];
      unsigned int v13 = [v4 hf_prettyDescription];
      *(_DWORD *)buf = 138412546;
      id v44 = v12;
      __int16 v45 = 2112;
      uint64_t v46 = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to reprovision accessory %@ in home %@.", buf, 0x16u);
    }
    id v14 = [a1[5] navigator];
    uint64_t v15 = [v14 showAccessory:v38[5] secondaryDestination:1];
LABEL_19:
    os_signpost_id_t v25 = (void *)v15;

    goto LABEL_20;
  }
  if (+[HFUtilities supportsAccessorySetup])
  {
    uint64_t v16 = +[HFHomeKitDispatcher sharedDispatcher];
    long long v17 = [v16 homeManager];
    id v18 = objc_alloc((Class)NSUUID);
    long long v19 = [a1[6] valueForParameter:HFURLComponentsHome];
    id v20 = [v18 initWithUUIDString:v19];
    id v21 = [v17 hf_homeWithIdentifier:v20];
    uint64_t v22 = v21;
    if (v21)
    {
      id v14 = v21;
    }
    else
    {
      uint64_t v26 = +[HFHomeKitDispatcher sharedDispatcher];
      id v14 = [v26 home];
    }
    uint64_t v27 = HFLogForCategory();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      id v28 = a1[4];
      id v29 = [v14 hf_prettyDescription];
      *(_DWORD *)buf = 138412546;
      id v44 = v28;
      __int16 v45 = 2112;
      uint64_t v46 = v29;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler request to reprovision device deviceIdentifier %@. Showing add new accessory UI for home %@ as no accessory found.", buf, 0x16u);
    }
    uint64_t v15 = +[HFAddAndSetupNewAccessoriesHandler addAndSetupNewAccessoriesForHome:v14 room:0];
    goto LABEL_19;
  }
  uint64_t v23 = HFLogForCategory();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    id v24 = a1[4];
    *(_DWORD *)buf = 138412290;
    id v44 = v24;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler request to reprovision device deviceIdentifier %@. Ignoring as no accessory found and we do not support adding accessories.", buf, 0xCu);
  }

  os_signpost_id_t v25 = +[NAFuture futureWithNoResult];
LABEL_20:

  _Block_object_dispose(&v37, 8);

  return v25;
}

void sub_100025678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000256BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000256CC(uint64_t a1)
{
}

BOOL sub_1000256D4(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 hf_accessoryWithDeviceIdentifier:*(void *)(a1 + 32)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) != 0;
}

id sub_10002572C(uint64_t a1, void *a2)
{
  uint64_t v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  int v6 = HFLogForCategory();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v11 = 138412802;
    id v12 = WeakRetained;
    __int16 v13 = 2080;
    id v14 = "-[HOAppNavigationURLHandler _openURLComponents:]_block_invoke";
    __int16 v15 = 2112;
    uint64_t v16 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "(%@:%s) Opening user vc for %@", (uint8_t *)&v11, 0x20u);
  }

  __int16 v8 = [WeakRetained navigator];
  uint64_t v9 = [v8 showUserDetails:v4];

  return v9;
}

id sub_100025858(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = HFLogForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    int v11 = 138413314;
    id v12 = WeakRetained;
    __int16 v13 = 2080;
    id v14 = "-[HOAppNavigationURLHandler _openURLComponents:]_block_invoke";
    __int16 v15 = 2112;
    id v16 = v3;
    __int16 v17 = 2112;
    uint64_t v18 = v6;
    __int16 v19 = 2112;
    uint64_t v20 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "(%@:%s) %@ occurred looking for user with uniqueIdentifier %@. Showing settings for current home %@", (uint8_t *)&v11, 0x34u);
  }

  __int16 v8 = [WeakRetained navigator];
  uint64_t v9 = [v8 showHomeSettingsForHome:*(void *)(a1 + 40)];

  return v9;
}

void sub_100025990(id a1, NAPromise *a2)
{
  id v2 = a2;
  dispatch_time_t v3 = dispatch_time(0, 500000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100025A40;
  block[3] = &unk_1000C1CF8;
  uint64_t v6 = v2;
  id v4 = v2;
  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100025A40(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishWithNoResult];
}

id sub_100025A48(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  dispatch_time_t v3 = HFLogForCategory();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler request from HUIS to show accessory details", buf, 2u);
    }

    id v5 = +[HFHomeKitDispatcher sharedDispatcher];
    uint64_t v6 = [v5 allHomesFuture];
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_100025DFC;
    v30[3] = &unk_1000C2888;
    id v7 = *(id *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 48);
    uint64_t v32 = *(void *)(a1 + 40);
    uint64_t v33 = v8;
    id v31 = v7;
    uint64_t v9 = [v6 flatMap:v30];

    goto LABEL_5;
  }
  if (v4)
  {
    int v11 = [*(id *)(a1 + 32) URL];
    *(_DWORD *)buf = 138412290;
    id v35 = v11;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request for destination: %@.", buf, 0xCu);
  }
  id v12 = [*(id *)(a1 + 32) destination];
  __int16 v13 = *(void **)(a1 + 32);
  if (v12 == (id)8)
  {
    id v14 = [v13 URL];
    __int16 v15 = [v14 pathComponents];
    id v16 = [v15 count];

    if ((unint64_t)v16 < 2)
    {
      id v5 = [*(id *)(a1 + 40) navigator];
      uint64_t v9 = [v5 showAutomationTab];
      goto LABEL_6;
    }
    id v17 = objc_alloc((Class)NSUUID);
    uint64_t v18 = [*(id *)(a1 + 32) URL];
    __int16 v19 = [v18 pathComponents];
    uint64_t v20 = [v19 objectAtIndexedSubscript:1];
    id v5 = [v17 initWithUUIDString:v20];

    id v21 = HFLogForCategory();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v35 = v5;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request for trigger with identifier %@", buf, 0xCu);
    }

    uint64_t v6 = [*(id *)(a1 + 40) navigator];
    uint64_t v9 = [v6 presentConfirmationAlertForExecutingTriggerWithIdentifier:v5];
LABEL_5:

LABEL_6:
    goto LABEL_7;
  }
  uint64_t v22 = [v13 homeKitObjectFuture];
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_1000263C8;
  v27[3] = &unk_1000C28B0;
  uint64_t v29 = *(void *)(a1 + 48);
  int8x16_t v26 = *(int8x16_t *)(a1 + 32);
  id v23 = (id)v26.i64[0];
  int8x16_t v28 = vextq_s8(v26, v26, 8uLL);
  id v24 = [v22 flatMap:v27];
  uint64_t v9 = [v24 recover:&stru_1000C28F0];

  id v25 = [v9 addFailureBlock:&stru_1000C2930];
LABEL_7:

  return v9;
}

id sub_100025DFC(uint64_t a1)
{
  int v2 = HFLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler [HFHomeKitDispatcher.sharedDispatcher allHomesFuture] completed", buf, 2u);
  }

  id v3 = objc_alloc((Class)NSUUID);
  BOOL v4 = [*(id *)(a1 + 32) valueForParameter:HFURLComponentsHome];
  id v5 = [v3 initWithUUIDString:v4];

  uint64_t v6 = +[HFHomeKitDispatcher sharedDispatcher];
  id v7 = [v6 homeManager];
  uint64_t v8 = [v7 hf_homeWithIdentifier:v5];
  uint64_t v9 = v8;
  if (v8)
  {
    id v10 = v8;
  }
  else
  {
    int v11 = +[HFHomeKitDispatcher sharedDispatcher];
    id v10 = [v11 home];
  }
  id v12 = [*(id *)(a1 + 32) secondaryDestination];
  uint64_t v13 = *(void *)(a1 + 48);
  if (v13 <= 19)
  {
    uint64_t v14 = (uint64_t)v12;
    if ((unint64_t)(v13 - 6) >= 2 && v13 != 4) {
      goto LABEL_24;
    }
LABEL_18:
    uint64_t v18 = [*(id *)(a1 + 32) URL];
    __int16 v19 = [v18 pathComponents];
    uint64_t v20 = [v19 objectAtIndexedSubscript:1];

    id v21 = [*(id *)(a1 + 40) navigator];
    id v22 = [objc_alloc((Class)NSUUID) initWithUUIDString:v20];
    id v17 = [v21 showCardForHomeKitIdentifier:v22 destination:*(void *)(a1 + 48) secondaryDestination:v14 inHome:v10];

    id v23 = HFLogForCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v24 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 136315650;
      os_log_type_t v41 = "-[HOAppNavigationURLHandler _openURLComponents:]_block_invoke";
      __int16 v42 = 2048;
      uint64_t v43 = v24;
      __int16 v44 = 2048;
      uint64_t v45 = v14;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "%s Showing card destination: %lu, secondaryDestination: %lu", buf, 0x20u);
    }

    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_1000262C4;
    v33[3] = &unk_1000C2860;
    uint64_t v25 = *(void *)(a1 + 48);
    id v34 = v20;
    uint64_t v36 = v25;
    uint64_t v37 = v14;
    id v35 = v10;
    id v16 = v20;
    id v26 = [v17 addCompletionBlock:v33];

    goto LABEL_21;
  }
  if (v13 != 20)
  {
    if (v13 == 21)
    {
      uint64_t v14 = 1;
    }
    else
    {
      if (v13 != 29)
      {
LABEL_24:
        int8x16_t v28 = HFLogForCategory();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v29 = [*(id *)(a1 + 32) URL];
          *(_DWORD *)buf = 138412290;
          os_log_type_t v41 = v29;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler got unhandled URL from HUIS: %@.", buf, 0xCu);
        }
        uint64_t v30 = HFErrorDomain;
        uint64_t v38 = NSURLErrorFailingURLErrorKey;
        id v16 = [*(id *)(a1 + 32) URL];
        id v39 = v16;
        id v31 = +[NSDictionary dictionaryWithObjects:&v39 forKeys:&v38 count:1];
        uint64_t v32 = +[NSError errorWithDomain:v30 code:38 userInfo:v31];
        id v17 = +[NAFuture futureWithError:v32];

        goto LABEL_21;
      }
      uint64_t v14 = 3;
    }
    goto LABEL_18;
  }
  __int16 v15 = HFLogForCategory();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    os_log_type_t v41 = (const char *)v10;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Home Hub Onboarding for home: %@", buf, 0xCu);
  }

  id v16 = [*(id *)(a1 + 40) navigator];
  id v17 = [v16 showHH2OnboardingFlowForHome:v10];
LABEL_21:

  return v17;
}

void sub_1000262C4(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = HFLogForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = a1[6];
    uint64_t v9 = a1[7];
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    int v12 = 138413570;
    uint64_t v13 = v10;
    __int16 v14 = 2048;
    uint64_t v15 = v8;
    __int16 v16 = 2048;
    uint64_t v17 = v9;
    __int16 v18 = 2112;
    uint64_t v19 = v11;
    __int16 v20 = 2112;
    id v21 = v5;
    __int16 v22 = 2112;
    id v23 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler showCard for {UUID %@, destination %lu, secondaryDestination %lu, home %@}, result %@ error %@", (uint8_t *)&v12, 0x3Eu);
  }
}

id sub_1000263C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = HFLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v102 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler HomeKit object lookup succeeded with: %@.", buf, 0xCu);
  }

  switch(*(void *)(a1 + 48))
  {
    case 0:
    case 8:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xFLL:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x14:
    case 0x16:
    case 0x17:
    case 0x1ELL:
      id v5 = HFLogForCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        id v6 = [*(id *)(a1 + 40) URL];
        *(_DWORD *)buf = 138412290;
        id v102 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler unable to handle request for destination: %@.", buf, 0xCu);
      }
      uint64_t v95 = NSURLErrorFailingURLErrorKey;
      id v7 = [*(id *)(a1 + 40) URL];
      id v96 = v7;
      uint64_t v8 = +[NSDictionary dictionaryWithObjects:&v96 forKeys:&v95 count:1];
      uint64_t v9 = +[NSError errorWithDomain:NSURLErrorDomain code:-1002 userInfo:v8];
      a1 = +[NAFuture futureWithError:v9];

      goto LABEL_88;
    case 1:
      id v7 = [*(id *)(a1 + 32) navigator];
      uint64_t v10 = [v7 showHomeInvitation:v3];
      goto LABEL_46;
    case 2:
      id v7 = [*(id *)(a1 + 32) navigator];
      uint64_t v10 = [v7 showHome:v3];
      goto LABEL_46;
    case 3:
      id v7 = [*(id *)(a1 + 32) navigator];
      uint64_t v10 = [v7 showRoom:v3];
      goto LABEL_46;
    case 4:
    case 0x1DLL:
      id v7 = v3;
      uint64_t v11 = HFLogForCategory();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = [v7 hf_prettyDescription];
        uint64_t v13 = [v7 home];
        __int16 v14 = [v13 hf_prettyDescription];
        *(_DWORD *)buf = 138412546;
        id v102 = v12;
        __int16 v103 = 2112;
        unint64_t v104 = v14;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Accessory for accessory %@ in home %@.", buf, 0x16u);
      }
      uint64_t v15 = [*(id *)(a1 + 32) navigator];
      if (*(void *)(a1 + 48) == 29) {
        uint64_t v16 = 3;
      }
      else {
        uint64_t v16 = (uint64_t)[*(id *)(a1 + 40) secondaryDestination];
      }
      uint64_t v21 = [v15 showAccessory:v7 secondaryDestination:v16];
      goto LABEL_49;
    case 5:
      id v7 = [*(id *)(a1 + 32) navigator];
      uint64_t v10 = [v7 showMediaSystem:v3 secondaryDestination:[*(id *)(a1 + 40) secondaryDestination]];
      goto LABEL_46;
    case 6:
      id v7 = v3;
      uint64_t v15 = [v7 accessory];
      uint64_t v25 = HFLogForCategory();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        id v26 = [v7 hf_prettyDescription];
        uint64_t v27 = [v15 hf_prettyDescription];
        int8x16_t v28 = [v15 home];
        uint64_t v29 = [v28 hf_prettyDescription];
        *(_DWORD *)buf = 138412802;
        id v102 = v26;
        __int16 v103 = 2112;
        unint64_t v104 = v27;
        __int16 v105 = 2112;
        id v106 = v29;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Camera Profile for camera profile %@ accessory %@ in home %@.", buf, 0x20u);
      }
      if ([*(id *)(a1 + 40) secondaryDestination] == (id)1)
      {
        id v30 = [*(id *)(a1 + 32) navigator];
        uint64_t v31 = [v30 showSettingsForCameraProfile:v7];
LABEL_44:
        a1 = v31;
      }
      else
      {
        uint64_t v54 = [*(id *)(a1 + 40) URL];
        uint64_t v55 = [v54 absoluteString];
        objc_super v56 = +[HFCameraUtilities cameraFeedbackQueryString];
        unsigned int v57 = [v55 containsString:v56];

        id v58 = *(void **)(a1 + 32);
        if (v57)
        {
          id v30 = [v58 navigator];
          os_log_t v59 = [*(id *)(a1 + 40) valueForParameter:HFNotificationCameraClipKey];
          uint64_t v60 = [v30 showFeedbackFlowForCameraClipID:v59 cameraProfile:v7];
LABEL_84:
          a1 = v60;
        }
        else
        {
          id v30 = [v58 _startDateForURLComponents:*(void *)(a1 + 40)];
          os_log_t v59 = [*(id *)(a1 + 32) _startDateForURLComponents:*(void *)(a1 + 40)];
          int v92 = [*(id *)(a1 + 32) navigator];
          uint64_t v93 = v92;
          if (v30 && v59)
          {
            a1 = [v92 showRoomContainedCamera:v7 startDate:v30 endDate:v59];
          }
          else
          {
            id v94 = [*(id *)(a1 + 40) valueForParameter:HFNotificationCameraClipKey];
            a1 = [v93 showCameraProfile:v7 clipID:v94];
          }
        }
      }
      goto LABEL_87;
    case 7:
      id v7 = v3;
      uint64_t v15 = [v7 accessory];
      uint64_t v32 = HFLogForCategory();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v33 = [v7 hf_prettyDescription];
        id v34 = [v15 hf_prettyDescription];
        id v35 = [v15 home];
        uint64_t v36 = [v35 hf_prettyDescription];
        *(_DWORD *)buf = 138412802;
        id v102 = v33;
        __int16 v103 = 2112;
        unint64_t v104 = v34;
        __int16 v105 = 2112;
        id v106 = v36;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Service for service %@ accessory %@ in home %@.", buf, 0x20u);
      }
      id v30 = [*(id *)(a1 + 32) navigator];
      uint64_t v31 = [v30 showService:v7 secondaryDestination:[*(id *)(a1 + 40) secondaryDestination]];
      goto LABEL_44;
    case 9:
      uint64_t v37 = +[HFHomeKitDispatcher sharedDispatcher];
      uint64_t v38 = [v37 homeManager];
      id v39 = objc_alloc((Class)NSUUID);
      id v40 = [*(id *)(a1 + 40) valueForParameter:HFURLComponentsHome];
      id v41 = [v39 initWithUUIDString:v40];
      __int16 v42 = [v38 hf_homeWithIdentifier:v41];
      uint64_t v43 = v42;
      if (v42)
      {
        id v7 = v42;
      }
      else
      {
        uint64_t v65 = +[HFHomeKitDispatcher sharedDispatcher];
        id v7 = [v65 home];
      }
      id v66 = objc_alloc((Class)NSUUID);
      uint64_t v67 = [*(id *)(a1 + 40) valueForParameter:HFURLComponentsPersonManager];
      id v68 = [v66 initWithUUIDString:v67];
      id v69 = [v7 hf_personManagerWithIdentifier:v68];
      uint64_t v70 = v69;
      if (v69)
      {
        id v71 = v69;
      }
      else
      {
        id v71 = [v7 personManager];
      }
      uint64_t v15 = v71;

      uint64_t v84 = objc_opt_class();
      id v85 = v3;
      if (v85)
      {
        if (objc_opt_isKindOfClass()) {
          os_log_t v86 = v85;
        }
        else {
          os_log_t v86 = 0;
        }
        id v30 = v86;
        if (!v30)
        {
          v87 = +[NSAssertionHandler currentHandler];
          uint64_t v88 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
          [v87 handleFailureInFunction:v88, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v84, objc_opt_class() file lineNumber description];
        }
      }
      else
      {
        id v30 = 0;
      }

      uint64_t v90 = HFLogForCategory();
      if (os_log_type_enabled(v90, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412802;
        id v102 = v30;
        __int16 v103 = 2112;
        unint64_t v104 = v15;
        __int16 v105 = 2112;
        id v106 = v7;
        _os_log_impl((void *)&_mh_execute_header, v90, OS_LOG_TYPE_DEFAULT, "Presenting face recognition settings for person:%@ personManager:%@ home:%@", buf, 0x20u);
      }

      os_log_t v59 = [*(id *)(a1 + 32) navigator];
      uint64_t v60 = [v59 showFaceRecognitionSettingsForPerson:v30 personManager:v15 inHome:v7];
      goto LABEL_84;
    case 0xALL:
      __int16 v44 = +[HFHomeKitDispatcher sharedDispatcher];
      uint64_t v45 = [v44 homeManager];
      id v46 = objc_alloc((Class)NSUUID);
      __int16 v47 = [*(id *)(a1 + 40) valueForParameter:HFURLComponentsHome];
      id v48 = [v46 initWithUUIDString:v47];
      __int16 v49 = [v45 hf_homeWithIdentifier:v48];
      uint64_t v50 = v49;
      if (v49)
      {
        id v7 = v49;
      }
      else
      {
        uint64_t v72 = +[HFHomeKitDispatcher sharedDispatcher];
        id v7 = [v72 home];
      }
      id v73 = objc_alloc((Class)NSUUID);
      uint64_t v74 = [*(id *)(a1 + 40) valueForParameter:HFURLComponentsCameraProfile];
      id v75 = [v73 initWithUUIDString:v74];
      uint64_t v15 = [v7 hf_cameraProfileWithIdentifier:v75];

      uint64_t v76 = objc_opt_class();
      id v77 = v3;
      if (v77)
      {
        if (objc_opt_isKindOfClass()) {
          v78 = v77;
        }
        else {
          v78 = 0;
        }
        id v30 = v78;
        if (!v30)
        {
          id v79 = +[NSAssertionHandler currentHandler];
          id v80 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
          [v79 handleFailureInFunction:v80, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v76, objc_opt_class() file lineNumber description];
        }
      }
      else
      {
        id v30 = 0;
      }

      id v89 = HFLogForCategory();
      if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412802;
        id v102 = v30;
        __int16 v103 = 2112;
        unint64_t v104 = v15;
        __int16 v105 = 2112;
        id v106 = v7;
        _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_DEFAULT, "Presenting face recognition settings for unknown person event:%@ cameraProfile:%@ home:%@", buf, 0x20u);
      }

      os_log_t v59 = [*(id *)(a1 + 32) navigator];
      uint64_t v60 = [v59 showFaceRecognitionSettingsForUnknownPersonEvent:v30 inHome:v7];
      goto LABEL_84;
    case 0xELL:
    case 0x13:
      id v7 = [*(id *)(a1 + 32) navigator];
      uint64_t v10 = [v7 showSoftwareUpdateForHome:v3];
      goto LABEL_46;
    case 0x15:
      id v7 = v3;
      uint64_t v17 = HFLogForCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v18 = [v7 hf_prettyDescription];
        uint64_t v19 = [v7 home];
        __int16 v20 = [v19 hf_prettyDescription];
        *(_DWORD *)buf = 138412546;
        id v102 = v18;
        __int16 v103 = 2112;
        unint64_t v104 = v20;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Bridge Settings for accessory %@ in home %@.", buf, 0x16u);
      }
      uint64_t v15 = [*(id *)(a1 + 32) navigator];
      uint64_t v21 = [v15 showBridgeSettingsForAccessory:v7];
      goto LABEL_49;
    case 0x18:
      v51 = HFLogForCategory();
      if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v102 = v3;
        _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open User settings for Locks for home %@.", buf, 0xCu);
      }

      id v7 = [*(id *)(a1 + 32) navigator];
      uint64_t v10 = [v7 showUserLockSettingsForHome:v3];
      goto LABEL_46;
    case 0x19:
      __int16 v22 = HFLogForCategory();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v102 = v3;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Locks Onboarding for home %@.", buf, 0xCu);
      }

      id v7 = [*(id *)(a1 + 40) valueForParameter:HFURLLocksOnboardingTypeParameter];
      id v23 = [*(id *)(a1 + 32) lockOnboardingTypeForString:v7];
      if (v23)
      {
        id v24 = v23;
        uint64_t v15 = [*(id *)(a1 + 32) navigator];
        uint64_t v21 = [v15 showLocksOnboardingForHome:v3 onboardingType:v24];
        goto LABEL_49;
      }
      id v61 = HFLogForCategory();
      if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v102 = v7;
        _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler unable to handle request for HFURLComponentsDestinationLocksOnboarding with type: %@.", buf, 0xCu);
      }

      NSErrorDomain v62 = NSURLErrorDomain;
      os_signpost_id_t v99 = NSURLErrorFailingURLErrorKey;
      uint64_t v15 = [*(id *)(a1 + 40) URL];
      v100 = v15;
      unint64_t v63 = &v100;
      uint64_t v64 = &v99;
      goto LABEL_68;
    case 0x1ALL:
      uint64_t v52 = HFLogForCategory();
      if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v102 = v3;
        _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Locks Firmware Setup for home %@.", buf, 0xCu);
      }

      id v7 = [*(id *)(a1 + 40) valueForParameter:HFURLLocksOnboardingTypeParameter];
      if ([*(id *)(a1 + 32) lockOnboardingTypeForString:v7])
      {
        uint64_t v15 = [*(id *)(a1 + 32) navigator];
        uint64_t v21 = [v15 showLocksFirmwareSetupForHome:v3];
LABEL_49:
        a1 = v21;
      }
      else
      {
        uint64_t v81 = HFLogForCategory();
        if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          id v102 = v7;
          _os_log_impl((void *)&_mh_execute_header, v81, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler unable to handle request for HFURLComponentsDestinationLocksFirmwareUpdateSetup with type: %@.", buf, 0xCu);
        }

        NSErrorDomain v62 = NSURLErrorDomain;
        uint64_t v97 = NSURLErrorFailingURLErrorKey;
        uint64_t v15 = [*(id *)(a1 + 40) URL];
        v98 = v15;
        unint64_t v63 = &v98;
        uint64_t v64 = &v97;
LABEL_68:
        id v82 = +[NSDictionary dictionaryWithObjects:v63 forKeys:v64 count:1];
        id v83 = +[NSError errorWithDomain:v62 code:-1002 userInfo:v82];
        a1 = +[NAFuture futureWithError:v83];
      }
LABEL_87:

LABEL_88:
LABEL_89:

      return (id)a1;
    case 0x1BLL:
      id v7 = v3;
      id v53 = HFLogForCategory();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v102 = v7;
        _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handling request to open Drop In UI for accessory %@.", buf, 0xCu);
      }

      uint64_t v15 = [*(id *)(a1 + 32) navigator];
      id v30 = [v7 home];
      uint64_t v31 = [v15 showDropInUI:v7 home:v30];
      goto LABEL_44;
    case 0x1CLL:
      id v7 = [*(id *)(a1 + 32) navigator];
      uint64_t v10 = [v7 showDefaultAccountForHome:v3];
LABEL_46:
      a1 = v10;
      goto LABEL_88;
    default:
      goto LABEL_89;
  }
}

NAFuture *__cdecl sub_100027498(id a1, NSError *a2)
{
  return +[NAFuture futureWithError:a2];
}

void sub_1000274A8(id a1, NSError *a2)
{
  int v2 = a2;
  id v3 = HFLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_100082D3C((uint64_t)v2, v3);
  }
}

id sub_100027714(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = HFLogForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v7 = 138412290;
      uint64_t v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler opened application URL: %@.", (uint8_t *)&v7, 0xCu);
    }

    return [*(id *)(a1 + 40) finishWithNoResult];
  }
  else
  {
    id v6 = HFLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100082DB4(a1, v6);
    }

    return [*(id *)(a1 + 40) finishWithError:*(void *)(a1 + 48)];
  }
}

void sub_1000278E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    id v4 = [objc_alloc((Class)HFURLComponents) initWithURL:*(void *)(a1 + 32)];
    unint64_t v5 = (unint64_t)[v4 destination];
    if (v5 > 7 || ((1 << v5) & 0xD0) == 0)
    {
      __int16 v14 = HFLogForCategory();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v15 = *(void **)(a1 + 32);
        *(_DWORD *)buf = 138412546;
        id v21 = v15;
        __int16 v22 = 2112;
        id v23 = v3;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handle show notification settings (URL: %@) for home: %@.", buf, 0x16u);
      }

      uint64_t v11 = [*(id *)(a1 + 40) navigator];
      id v16 = [v11 showNotificationSettingsForHome:v3];
    }
    else
    {
      int v7 = [v4 homeKitObjectFuture];
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_100027B0C;
      v17[3] = &unk_1000C29A8;
      id v8 = v3;
      uint64_t v9 = *(void *)(a1 + 40);
      id v18 = v8;
      uint64_t v19 = v9;
      id v10 = [v7 addSuccessBlock:v17];

      uint64_t v11 = v18;
    }
  }
  else
  {
    int v12 = HFLogForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v21 = v3;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handle show notification settings (missing objectURL) for home: %@.", buf, 0xCu);
    }

    id v4 = [*(id *)(a1 + 40) navigator];
    id v13 = [v4 showNotificationSettingsForHome:v3];
  }
}

void sub_100027B0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = &OBJC_PROTOCOL___HFUserNotificationServiceSettingsProviding;
  if ([v3 conformsToProtocol:v4]) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = 0;
  }
  id v6 = v5;

  if (v6)
  {
    int v7 = HFLogForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      id v13 = v3;
      __int16 v14 = 2112;
      uint64_t v15 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "HOAppNavigationURLHandler handle show notification settings for object: %@ in home: %@.", buf, 0x16u);
    }

    uint64_t v9 = [*(id *)(a1 + 40) navigator];
    id v10 = [v9 showNotificationSettingsForHomeKitObject:v6 inHome:*(void *)(a1 + 32)];
  }
  else
  {
    NSLog(@"Received unexpected object %@ that does not support notifications!", v3);
    uint64_t v9 = [*(id *)(a1 + 40) navigator];
    id v11 = [v9 showNotificationSettingsForHome:*(void *)(a1 + 32)];
  }
}

id sub_100028048(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = v3;
  if (objc_opt_isKindOfClass()) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = 0;
  }
  id v6 = v5;

  if (!v6) {
    NSLog(@"Expected an HMService: %@", v4);
  }
  int v7 = [*(id *)(a1 + 32) room];
  uint64_t v8 = [v7 uniqueIdentifier];
  uint64_t v9 = [v6 accessory];
  id v10 = [v9 room];
  id v11 = [v10 uniqueIdentifier];
  id v12 = [v8 isEqual:v11];

  return v12;
}

id sub_10002814C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) finishWithError:a2];
}

void sub_100028158(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v13 = +[NSMutableDictionary dictionary];
  id v4 = [v3 addedItems];

  id v5 = [v4 count];
  if (!v5) {
    [v13 setObject:&__kCFBooleanTrue forKeyedSubscript:HFResultHiddenKey];
  }
  id v6 = [*(id *)(a1 + 32) room];

  if (v6)
  {
    int v7 = +[NSMutableSet set];
    uint64_t v8 = [*(id *)(a1 + 32) room];
    uint64_t v9 = [v8 accessories];
    [v7 addObjectsFromArray:v9];

    id v10 = [*(id *)(a1 + 32) room];
    [v7 addObject:v10];

    [v13 setObject:v7 forKeyedSubscript:HFResultDependentHomeKitObjectsKey];
  }
  id v11 = *(void **)(a1 + 40);
  id v12 = +[HFItemUpdateOutcome outcomeWithResults:v13];
  [v11 finishWithResult:v12];
}

void sub_100028C38(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100028C60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (([WeakRetained initialLoadCompleted] & 1) != 0
    || (+[HFHomeKitDispatcher sharedDispatcher],
        id v3 = objc_claimAutoreleasedReturnValue(),
        [v3 home],
        id v4 = objc_claimAutoreleasedReturnValue(),
        v4,
        v3,
        !v4))
  {
    id v6 = HFLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "sidebar item manager finishes its initial load but split view already did its intial load", buf, 2u);
    }
  }
  else
  {
    id v5 = HFLogForCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "initial load after sidebar item manager finishes intial load", buf, 2u);
    }

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100028DDC;
    v7[3] = &unk_1000C1CF8;
    v7[4] = WeakRetained;
    [WeakRetained _allowingMutationsInDelegateCallback:v7];
    [WeakRetained setInitialLoadCompleted:1];
    if (*(unsigned char *)(a1 + 40)) {
      [WeakRetained setPreferredDisplayMode:0];
    }
  }
}

id sub_100028DDC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _initialLoad];
}

void sub_100028DE4(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) primaryNavigationController];
  uint64_t v2 = [*(id *)(a1 + 32) sideBarViewController];
  [v3 pushViewController:v2 animated:0];
}

void sub_10002930C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100029328(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = [*(id *)(a1 + 32) hu_preloadContent];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100029454;
  v11[3] = &unk_1000C2A98;
  id v8 = *(id *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  id v12 = v8;
  uint64_t v13 = v9;
  objc_copyWeak(&v16, (id *)(a1 + 64));
  id v14 = *(id *)(a1 + 32);
  id v15 = *(id *)(a1 + 56);
  id v10 = [v7 addCompletionBlock:v11];

  objc_destroyWeak(&v16);
}

void sub_100029440(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_100029454(id *a1)
{
  id v2 = a1[4];
  id v3 = +[HFStateRestorationSettings sharedInstance];
  [v3 setSelectedHomeAppTabIdentifier:v2];

  id v4 = a1[4];
  id v5 = +[HUSideBarSelectionManager sharedManager];
  [v5 setCurrentTabIdentifier:v4];

  if ([a1[5] _isCollapsed]) {
    NSLog(@"trying to select tab: %@ through SplitViewController while in compact mode", a1[4]);
  }
  if ([a1[5] _isCollapsed])
  {
    id WeakRetained = HFLogForCategory();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = a1[4];
      *(_DWORD *)buf = 136315394;
      uint64_t v13 = "-[HOSplitViewController selectTabWithIdentifier:]_block_invoke";
      __int16 v14 = 2112;
      id v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_DEFAULT, "(%s) trying to select tab: %@ through SplitViewController while in compact mode", buf, 0x16u);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained(a1 + 8);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100029624;
    v9[3] = &unk_1000C2A70;
    void v9[4] = WeakRetained;
    id v10 = a1[6];
    id v11 = a1[4];
    [WeakRetained _allowingMutationsInDelegateCallback:v9];
  }
  return [a1[7] finishWithResult:a1[6]];
}

void sub_100029624(uint64_t a1)
{
  [*(id *)(a1 + 32) showDetailViewController:*(void *)(a1 + 40) sender:0];
  id v2 = HFLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    int v6 = 136315394;
    id v7 = "-[HOSplitViewController selectTabWithIdentifier:]_block_invoke_3";
    __int16 v8 = 2112;
    uint64_t v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(%s) select tab: %@", (uint8_t *)&v6, 0x16u);
  }

  if (*(void *)(a1 + 48) == HFHomeAppTabIdentifierDiscover)
  {
    id v4 = +[NSMutableDictionary dictionary];
    id v5 = +[NSNumber numberWithInt:1];
    [v4 setObject:v5 forKeyedSubscript:HFAnalyticsDiscoverTabTapCountKey];

    +[HFAnalytics sendEvent:10 withData:v4];
  }
}

void sub_10002A02C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002A050(id *a1)
{
  if ([a1[4] _isCollapsed])
  {
    id WeakRetained = HFLogForCategory();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_DEFAULT, "skip initial VC presentation through SplitViewController since we are in compact mode", v3, 2u);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained(a1 + 6);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10002A144;
    v4[3] = &unk_1000C2AE8;
    void v4[4] = WeakRetained;
    id v5 = a1[5];
    [WeakRetained _allowingMutationsInDelegateCallback:v4];
  }
}

id sub_10002A144(uint64_t a1)
{
  return [*(id *)(a1 + 32) showDetailViewController:*(void *)(a1 + 40) sender:0];
}

id sub_10002A280(uint64_t a1)
{
  id v2 = objc_opt_new();
  uint64_t v3 = [*(id *)(a1 + 32) wallpaperView];
  id v4 = [v3 leadingAnchor];
  id v5 = [*(id *)(a1 + 32) view];
  int v6 = [v5 leadingAnchor];
  id v7 = [v4 constraintEqualToAnchor:v6];
  [v2 addObject:v7];

  __int16 v8 = [*(id *)(a1 + 32) wallpaperView];
  uint64_t v9 = [v8 trailingAnchor];
  id v10 = [*(id *)(a1 + 32) view];
  id v11 = [v10 trailingAnchor];
  id v12 = [v9 constraintEqualToAnchor:v11];
  [v2 addObject:v12];

  uint64_t v13 = [*(id *)(a1 + 32) wallpaperView];
  __int16 v14 = [v13 bottomAnchor];
  id v15 = [*(id *)(a1 + 32) view];
  id v16 = [v15 bottomAnchor];
  uint64_t v17 = [v14 constraintEqualToAnchor:v16];
  [v2 addObject:v17];

  id v18 = [*(id *)(a1 + 32) wallpaperView];
  uint64_t v19 = [v18 topAnchor];
  __int16 v20 = [*(id *)(a1 + 32) view];
  id v21 = [v20 topAnchor];
  __int16 v22 = [v19 constraintEqualToAnchor:v21];
  [v2 addObject:v22];

  return v2;
}

id sub_10002AC44(uint64_t a1)
{
  return [*(id *)(a1 + 32) setPresentsWithGesture:*(void *)(a1 + 40) != 2];
}

id sub_10002B12C()
{
  if (qword_1000DE8C0 != -1) {
    dispatch_once(&qword_1000DE8C0, &stru_1000C2B80);
  }
  unint64_t v0 = (void *)qword_1000DE8C8;

  return v0;
}

void sub_10002B180(id a1)
{
  id v1 = (void *)qword_1000DE8C8;
  qword_1000DE8C8 = (uint64_t)&off_1000CB4A8;
}

id sub_10002B454(uint64_t a1)
{
  [*(id *)(a1 + 32) startedTest:*(void *)(a1 + 40)];
  id v2 = *(void **)(a1 + 48);
  uint64_t v3 = HFHomeAppTabIdentifierTriggers;

  return [v2 selectTabWithIdentifier:v3];
}

id sub_10002B4A0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40) waitForCommit:1 extraResults:0];
}

id sub_10002B4B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40)];
}

void sub_10002B6C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class();
  id v5 = [v3 topViewController];

  id v6 = v5;
  if (v6)
  {
    if (objc_opt_isKindOfClass()) {
      id v7 = v6;
    }
    else {
      id v7 = 0;
    }
    id v16 = v7;
    if (!v16)
    {
      __int16 v8 = +[NSAssertionHandler currentHandler];
      uint64_t v9 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
      [v8 handleFailureInFunction:v9, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v4, objc_opt_class() file lineNumber description];
    }
  }
  else
  {
    id v16 = 0;
  }

  id v10 = [v16 tableView];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v15 = +[NSAssertionHandler currentHandler];
    [v15 handleFailureInMethod:*(void *)(a1 + 56) object:*(void *)(a1 + 32) file:@"HOAppDelegate+PerformanceTests.m" lineNumber:92 description:@"Oops - Expected a scroll view"];
  }
  id v11 = [*(id *)(a1 + 40) valueForKey:@"iterations"];
  id v12 = [v11 intValue];

  uint64_t v13 = [*(id *)(a1 + 40) valueForKey:@"offset"];
  id v14 = [v13 intValue];

  [v10 _performScrollTest:*(void *)(a1 + 48) iterations:v12 delta:v14];
}

id sub_10002B8AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40)];
}

id sub_10002BB80(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40)];
}

void sub_10002BB8C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [a2 localizedDescription];
  [v2 failedTest:v3 withFailure:v4];
}

id sub_10002BBE8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _deleteRoomWithName:*(void *)(a1 + 40) inHome:*(void *)(a1 + 48)];
}

id sub_10002BEBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)NAFuture);
  [*(id *)(a1 + 32) startedTest:*(void *)(a1 + 40)];
  id v5 = *(void **)(a1 + 48);
  id v6 = [v4 errorOnlyCompletionHandlerAdapter];
  [v5 removeRoom:v3 completionHandler:v6];

  return v4;
}

id sub_10002BF48(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40)];
}

void sub_10002BF54(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [a2 localizedDescription];
  [v2 failedTest:v3 withFailure:v4];
}

void sub_10002C19C(id *a1)
{
  id v2 = +[HFHomeKitDispatcher sharedDispatcher];
  uint64_t v3 = [v2 home];

  id v4 = a1[4];
  id v5 = a1[5];
  if (v3)
  {
    [v4 startedTest:v5];
    id v6 = [a1[6] appNavigator];
    id v7 = [v6 showHomeSettingsForHome:v3];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_10002C344;
    v13[3] = &unk_1000C2CC0;
    id v14 = a1[4];
    id v15 = a1[5];
    __int16 v8 = [v7 addSuccessBlock:v13];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10002C350;
    v10[3] = &unk_1000C2BF8;
    id v11 = a1[4];
    id v12 = a1[5];
    id v9 = [v8 addFailureBlock:v10];
  }
  else
  {
    [v4 failedTest:v5 withFailure:@"Invalid home"];
  }
}

id sub_10002C344(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40)];
}

id sub_10002C350(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"Presentation failed"];
}

id sub_10002C364(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40)];
}

void sub_10002C55C(id *a1)
{
  id v2 = +[HFHomeKitDispatcher sharedDispatcher];
  uint64_t v3 = [v2 home];

  if (v3)
  {
    id v4 = [a1[6] _networkRouterForTestingInHome:v3];
    id v5 = a1[4];
    id v6 = a1[5];
    if (v4)
    {
      [v5 startedTest:v6];
      id v7 = [a1[6] appNavigator];
      __int16 v8 = [v7 showNetworkSettingsForHome:v3];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      void v14[2] = sub_10002C734;
      v14[3] = &unk_1000C2CC0;
      id v15 = a1[4];
      id v16 = a1[5];
      id v9 = [v8 addSuccessBlock:v14];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_10002C740;
      v11[3] = &unk_1000C2BF8;
      id v12 = a1[4];
      id v13 = a1[5];
      id v10 = [v9 addFailureBlock:v11];
    }
    else
    {
      [v5 failedTest:v6 withFailure:@"Invalid network router"];
    }
  }
  else
  {
    [a1[4] failedTest:a1[5] withFailure:@"Invalid home"];
  }
}

id sub_10002C734(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40)];
}

id sub_10002C740(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"Presentation failed"];
}

id sub_10002C754(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40)];
}

void sub_10002C94C(id *a1)
{
  id v2 = +[HFHomeKitDispatcher sharedDispatcher];
  uint64_t v3 = [v2 home];

  if (v3)
  {
    id v4 = [a1[6] _networkRouterForTestingInHome:v3];
    id v5 = a1[4];
    id v6 = a1[5];
    if (v4)
    {
      [v5 startedTest:v6];
      id v7 = [a1[6] appNavigator];
      __int16 v8 = [v7 showNetworkSettingsForAccessory:v4 home:v3];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      void v14[2] = sub_10002CB28;
      v14[3] = &unk_1000C2CC0;
      id v15 = a1[4];
      id v16 = a1[5];
      id v9 = [v8 addSuccessBlock:v14];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_10002CB34;
      v11[3] = &unk_1000C2BF8;
      id v12 = a1[4];
      id v13 = a1[5];
      id v10 = [v9 addFailureBlock:v11];
    }
    else
    {
      [v5 failedTest:v6 withFailure:@"Invalid network router profile"];
    }
  }
  else
  {
    [a1[4] failedTest:a1[5] withFailure:@"Invalid home"];
  }
}

id sub_10002CB28(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40)];
}

id sub_10002CB34(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"Presentation failed"];
}

id sub_10002CB48(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40)];
}

void sub_10002CD64(id *a1)
{
  id v2 = +[HFHomeKitDispatcher sharedDispatcher];
  uint64_t v3 = [v2 home];

  if (v3)
  {
    id v4 = [a1[6] _networkRouterForTestingInHome:v3];
    if (v4)
    {
      id v5 = [a1[6] _networkConfigurationProfileForTestingInHome:v3];
      id v6 = a1[4];
      id v7 = a1[5];
      if (v5)
      {
        [v6 startedTest:v7];
        __int16 v8 = [a1[6] appNavigator];
        id v9 = [v8 showNetworkSettingsForNetworkConfigurationProfile:v5 home:v3];
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        void v15[2] = sub_10002CF78;
        v15[3] = &unk_1000C2CC0;
        id v16 = a1[4];
        id v17 = a1[5];
        id v10 = [v9 addSuccessBlock:v15];
        v12[0] = _NSConcreteStackBlock;
        v12[1] = 3221225472;
        v12[2] = sub_10002CF84;
        uint64_t v12[3] = &unk_1000C2BF8;
        id v13 = a1[4];
        id v14 = a1[5];
        id v11 = [v10 addFailureBlock:v12];
      }
      else
      {
        [v6 failedTest:v7 withFailure:@"Invalid network configuration profile"];
      }
    }
    else
    {
      [a1[4] failedTest:a1[5] withFailure:@"Invalid network router"];
    }
  }
  else
  {
    [a1[4] failedTest:a1[5] withFailure:@"Invalid home"];
  }
}

id sub_10002CF78(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest:*(void *)(a1 + 40)];
}

id sub_10002CF84(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"Presentation failed"];
}

id sub_10002CF98(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40)];
}

void sub_10002D39C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10002D3B8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10002D3C8(uint64_t a1)
{
}

id sub_10002D3D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_class();
  id v5 = [v3 topViewController];

  id v6 = v5;
  if (v6)
  {
    if (objc_opt_isKindOfClass()) {
      id v7 = v6;
    }
    else {
      id v7 = 0;
    }
    id v8 = v7;
    if (!v8)
    {
      id v9 = +[NSAssertionHandler currentHandler];
      id v10 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
      [v9 handleFailureInFunction:v10, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v4, objc_opt_class() file lineNumber description];
    }
  }
  else
  {
    id v8 = 0;
  }

  uint64_t v11 = *(void *)(*(void *)(a1 + 64) + 8);
  id v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v8;

  id v13 = +[HFHomeKitDispatcher sharedDispatcher];
  id v14 = [v13 home];

  if (v14)
  {
    id v15 = [*(id *)(a1 + 48) _cameraProfileForTestingInHome:v14 withUUID:*(void *)(a1 + 56)];
    if (v15)
    {
      id v16 = [*(id *)(a1 + 48) appNavigator];
      id v17 = [v16 showCameraProfile:v15 clipID:0];
    }
    else
    {
      [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"Invalid camera profile"];
      id v17 = +[NAFuture futureWithNoResult];
    }
  }
  else
  {
    [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"Invalid home"];
    id v17 = +[NAFuture futureWithNoResult];
  }

  return v17;
}

id sub_10002D5C0(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) ppt_cameraController];

  if (v2)
  {
    id v3 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) ppt_cameraController];
    uint64_t v4 = [v3 ppt_clipsLoadedFuture];
  }
  else
  {
    [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"The dashboard's camera controller is nil"];
    uint64_t v4 = +[NAFuture futureWithNoResult];
  }

  return v4;
}

void sub_10002D664(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) ppt_cameraController];
  [v2 ppt_clipCollectionView];
  id v8 = (id)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    id v3 = [*(id *)(a1 + 48) valueForKey:@"iterations"];
    id v4 = [v3 intValue];

    id v5 = [*(id *)(a1 + 48) valueForKey:@"duration"];
    id v6 = objc_alloc_init((Class)NSNumberFormatter);
    [v6 setNumberStyle:1];
    id v7 = [v6 numberFromString:v5];
    [v8 _performTranslationScrollTest:*(void *)(a1 + 40) duration:v4 iterations:1 scrollAxis:[v7 intValue]];
  }
  else
  {
    [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"Failed to find clip collection view"];
  }
}

void sub_10002D788(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [a2 localizedDescription];
  [v2 failedTest:v3 withFailure:v4];
}

void sub_10002D9CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = [v3 topViewController];

  if (objc_opt_isKindOfClass()) {
    id v5 = v4;
  }
  else {
    id v5 = 0;
  }
  id v6 = v5;

  if (v6)
  {
    id v7 = [v6 itemManager];
    id v8 = [v7 allDisplayedItems];
    id v9 = [v8 na_firstObjectPassingTest:&stru_1000C2DA0];

    id v10 = *(void **)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    if (v9)
    {
      [v10 startedTest:v11];
      id v12 = [v6 _performTapActionForItem:v9 tappedArea:HUTileCellTappableAreaStateToggleButton];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      void v14[2] = sub_10002DC74;
      v14[3] = &unk_1000C2DC8;
      id v15 = *(id *)(a1 + 32);
      id v16 = *(id *)(a1 + 40);
      id v13 = [v12 addCompletionBlock:v14];
    }
    else
    {
      [v10 failedTest:v11 withFailure:@"cannot found any light service item"];
    }
  }
  else
  {
    [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"cannot find dashboardViewController"];
  }
}

BOOL sub_10002DB6C(id a1, HFItem *a2)
{
  id v2 = a2;
  if ([(HFItem *)v2 conformsToProtocol:&OBJC_PROTOCOL___HFAccessoryRepresentableItem])id v3 = v2; {
  else
  }
    id v3 = 0;
  id v4 = v3;
  id v5 = v4;
  if (v4)
  {
    id v6 = [(HFItem *)v4 accessoryRepresentableObject];
    id v7 = [v6 hf_containedServices];
    if ([v7 count] == (id)1)
    {
      id v8 = [v6 hf_containedServices];
      id v9 = [v8 allObjects];
      id v10 = [v9 firstObject];
      uint64_t v11 = [v10 serviceType];
      unsigned __int8 v12 = [v11 isEqualToString:HMServiceTypeLightbulb];
    }
    else
    {
      unsigned __int8 v12 = 0;
    }
  }
  else
  {
    unsigned __int8 v12 = 0;
  }

  return v12;
}

id sub_10002DC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  if (a3) {
    return [v5 failedTest:v6 withFailure:@"failed to tap light service item"];
  }
  else {
    return [v5 finishedTest:v6];
  }
}

id sub_10002DC98(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40)];
}

void sub_10002DE8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = [v3 topViewController];

  if (objc_opt_isKindOfClass()) {
    id v5 = v4;
  }
  else {
    id v5 = 0;
  }
  id v6 = v5;

  if (v6)
  {
    id v7 = [v6 itemManager];
    id v8 = [v7 allDisplayedItems];
    id v9 = [v8 na_firstObjectPassingTest:&stru_1000C2DE8];

    id v10 = *(void **)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    if (v9)
    {
      [v10 startedTest:v11];
      unsigned __int8 v12 = [v6 _performTapActionForItem:v9 tappedArea:HUTileCellTappableAreaStateToggleButton];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      void v14[2] = sub_10002E078;
      v14[3] = &unk_1000C2DC8;
      id v15 = *(id *)(a1 + 32);
      id v16 = *(id *)(a1 + 40);
      id v13 = [v12 addCompletionBlock:v14];
    }
    else
    {
      [v10 failedTest:v11 withFailure:@"cannot found any action set item"];
    }
  }
  else
  {
    [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40) withFailure:@"cannot find dashboardViewController"];
  }
}

BOOL sub_10002E02C(id a1, HFItem *a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

id sub_10002E078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  if (a3) {
    return [v5 failedTest:v6 withFailure:@"failed to tap action set item"];
  }
  else {
    return [v5 finishedTest:v6];
  }
}

id sub_10002E09C(uint64_t a1)
{
  return [*(id *)(a1 + 32) failedTest:*(void *)(a1 + 40)];
}

NAFuture *__cdecl sub_10002E11C(id a1, HMHome *a2)
{
  id v2 = [(HMHome *)a2 hf_characteristicValueManager];
  id v3 = [v2 firstReadCompleteFuture];

  return (NAFuture *)v3;
}

NAFuture *__cdecl sub_10002E328(id a1, NSArray *a2)
{
  id v2 = [(NSArray *)a2 objectAtIndexedSubscript:0];
  id v3 = +[NAFuture futureWithResult:v2];
  id v4 = +[NAScheduler schedulerWithDispatchQueue:&_dispatch_main_q];
  id v5 = [v3 reschedule:v4];

  return (NAFuture *)v5;
}

NAFuture *__cdecl sub_10002E3CC(id a1, UINavigationController *a2)
{
  id v2 = a2;
  id v3 = &OBJC_PROTOCOL___HUPreloadableViewController;
  if ([(UINavigationController *)v2 conformsToProtocol:v3]) {
    id v4 = v2;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  uint64_t v6 = [(UINavigationController *)v2 topViewController];
  if ([v6 conformsToProtocol:&OBJC_PROTOCOL___HUPreloadableViewController]) {
    id v7 = v6;
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;

  if (v8)
  {
    id v9 = [v8 hu_preloadContent];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10002E51C;
    uint64_t v12[3] = &unk_1000C2ED0;
    id v13 = v2;
    id v10 = [v9 flatMap:v12];
  }
  else
  {
    id v10 = +[NAFuture futureWithResult:v2];
  }

  return (NAFuture *)v10;
}

NAFuture *sub_10002E51C(uint64_t a1)
{
  return +[NAFuture futureWithResult:*(void *)(a1 + 32)];
}

NAFuture *__cdecl sub_10002E530(id a1, UINavigationController *a2)
{
  id v2 = a2;
  id v3 = +[NAFuture futureWithNoResult];
  id v4 = [(UINavigationController *)v2 topViewController];
  char v5 = objc_opt_respondsToSelector();

  if (v5)
  {
    uint64_t v6 = [(UINavigationController *)v2 topViewController];
    uint64_t v7 = [v6 hu_performanceTestReadyFuture];

    id v3 = (void *)v7;
  }
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10002E650;
  v11[3] = &unk_1000C2F18;
  unsigned __int8 v12 = v2;
  id v8 = v2;
  id v9 = [v3 flatMap:v11];

  return (NAFuture *)v9;
}

NAFuture *sub_10002E650(uint64_t a1)
{
  return +[NAFuture futureWithResult:*(void *)(a1 + 32)];
}

NAFuture *__cdecl sub_10002E664(id a1, id a2)
{
  id v2 = a2;
  id v3 = +[NAFuture futureWithNoResult];
  id v4 = +[HFHomeKitDispatcher sharedDispatcher];
  char v5 = [v4 home];
  uint64_t v6 = [v5 hf_characteristicValueManager];

  uint64_t v7 = [v6 characteristicsWithPendingReads];
  id v8 = [v7 count];

  if (v8)
  {
    uint64_t v9 = [v6 firstReadCompleteFuture];

    id v3 = (void *)v9;
  }
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10002E7AC;
  v13[3] = &unk_1000C2F18;
  id v14 = v2;
  id v10 = v2;
  uint64_t v11 = [v3 flatMap:v13];

  return (NAFuture *)v11;
}

NAFuture *sub_10002E7AC(uint64_t a1)
{
  return +[NAFuture futureWithResult:*(void *)(a1 + 32)];
}

int64_t sub_10002E830(id a1, HMAccessory *a2, HMAccessory *a3)
{
  id v4 = a3;
  char v5 = [(HMAccessory *)a2 name];
  uint64_t v6 = [(HMAccessory *)v4 name];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

int64_t sub_10002E910(id a1, HMNetworkConfigurationProfile *a2, HMNetworkConfigurationProfile *a3)
{
  id v4 = a3;
  char v5 = [(HMNetworkConfigurationProfile *)a2 accessory];
  uint64_t v6 = [v5 name];
  id v7 = [(HMNetworkConfigurationProfile *)v4 accessory];

  id v8 = [v7 name];
  id v9 = [v6 compare:v8];

  return (int64_t)v9;
}

int64_t sub_10002EA04(id a1, HMAccessory *a2, HMAccessory *a3)
{
  id v4 = a3;
  char v5 = [(HMAccessory *)a2 name];
  uint64_t v6 = [(HMAccessory *)v4 name];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_10002EB98(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = HFLogForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_100082FE0((uint64_t)v2, v3);
    }
  }
}

void sub_10002ED94(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  [v2 finishedTest:*(void *)(a1 + 32)];
}

id *sub_10002EFE0(id *result, char a2)
{
  if ((a2 & 1) == 0) {
    return (id *)[result[4] finishWithNoResult];
  }
  return result;
}

id sub_10002EFF4(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishWithNoResult];
}

id sub_10002EFFC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _simulateScrollWithTranslation:*(double *)(a1 + 64) numIterations:*(unsigned char *)(a1 + 68) duration:*(double *)(a1 + 40) reversed:*(double *)(a1 + 48) ];
}

void sub_10002F024(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

id sub_10002F380(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    char v5 = sub_10002F848();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        uint64_t v11 = +[NSBundle mainBundle];
        unsigned __int8 v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      unsigned __int8 v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  id v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    id v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_10002F848()
{
  if (qword_1000DE8D0 != -1) {
    dispatch_once(&qword_1000DE8D0, &stru_1000C30C8);
  }
  unint64_t v0 = (void *)qword_1000DE8D8;

  return v0;
}

void sub_10002F89C(id a1)
{
  id v1 = (void *)qword_1000DE8D8;
  qword_1000DE8D8 = (uint64_t)&off_1000CB4C0;
}

void sub_10002FA68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

id sub_10002FA94(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  char v5 = [WeakRetained _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:1];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10002FB80;
  v9[3] = &unk_1000C3110;
  void v9[4] = WeakRetained;
  id v10 = v3;
  id v6 = v3;
  id v7 = [v5 flatMap:v9];

  return v7;
}

NAFuture *sub_10002FB80(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _selectHome:*(void *)(a1 + 40)];

  return +[NAFuture futureWithNoResult];
}

id sub_10002FBC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:1];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10002FCA0;
  v6[3] = &unk_1000C3110;
  id v7 = *(id *)(a1 + 32);
  id v8 = WeakRetained;
  id v4 = [v3 flatMap:v6];

  return v4;
}

NAFuture *sub_10002FCA0(uint64_t a1)
{
  id v1 = *(void **)(a1 + 40);
  if (*(void *)(a1 + 32))
  {
    [*(id *)(a1 + 40) _createHomeWithName:];
  }
  else
  {
    id v2 = +[HFHomeKitDispatcher sharedDispatcher];
    id v3 = [v2 home];
    id v4 = [v1 _selectHome:v3];
  }

  return +[NAFuture futureWithNoResult];
}

void sub_10002FDE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_10002FE00(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  char v5 = [WeakRetained _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:1];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10002FEEC;
  v9[3] = &unk_1000C3110;
  void v9[4] = WeakRetained;
  id v10 = v3;
  id v6 = v3;
  id v7 = [v5 flatMap:v9];

  return v7;
}

NAFuture *sub_10002FEEC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _selectHome:*(void *)(a1 + 40)];

  return +[NAFuture futureWithNoResult];
}

void sub_1000300A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000300BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  char v5 = [v3 rooms];
  id v6 = +[NSPredicate predicateWithFormat:@"name LIKE[cd] %@", *(void *)(a1 + 32)];
  id v7 = [v5 filteredArrayUsingPredicate:v6];

  if ([v7 count])
  {
    id v8 = [v7 firstObject];
    id v9 = [WeakRetained showRoom:v8];
    +[NAFuture futureWithResult:v8];
  }
  else
  {
    [WeakRetained _createRoomWithName:*(void *)(a1 + 32) home:v3];
    id v8 = +[NSError hf_errorWithCode:30];
    +[NAFuture futureWithError:v8];
  id v10 = };

  return v10;
}

NAFuture *__cdecl sub_100030208(id a1, NSError *a2)
{
  return +[NAFuture futureWithError:a2];
}

void sub_100030318(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100030334(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  char v5 = WeakRetained;
  if (*(unsigned char *)(a1 + 48))
  {
    id v6 = [WeakRetained _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:1];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100030440;
    v8[3] = &unk_1000C31D0;
    void v8[4] = v5;
    id v9 = *(id *)(a1 + 32);
    id v10 = v3;
    id v7 = [v6 addCompletionBlock:v8];
  }
  else
  {
    [WeakRetained _showCreateOrEditActionSetViewControllerWithActionSetName:*(void *)(a1 + 32) home:v3];
  }
}

id sub_100030440(uint64_t a1)
{
  return [*(id *)(a1 + 32) _showCreateOrEditActionSetViewControllerWithActionSetName:*(void *)(a1 + 40) home:*(void *)(a1 + 48)];
}

void sub_100030740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100030764(void *a1, void *a2)
{
  id v3 = (id *)(a1 + 7);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v6 = [v4 hf_roomWithName:a1[4]];
  id v7 = [WeakRetained _serviceWithName:a1[5] type:a1[6] home:v4 room:v6];

  if (v7) {
    [WeakRetained showService:v7 secondaryDestination:0];
  }
  else {
  id v8 = +[NAFuture futureWithNoResult];
  }

  return v8;
}

void sub_100030A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100030A80(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 9);
  char v5 = [WeakRetained _selectHome:v3];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100030BC4;
  v9[3] = &unk_1000C3270;
  id v10 = v3;
  id v11 = a1[4];
  id v12 = a1[5];
  id v13 = WeakRetained;
  id v14 = a1[6];
  id v15 = a1[7];
  id v16 = a1[8];
  id v6 = v3;
  id v7 = [v5 flatMap:v9];

  return v7;
}

id sub_100030BC4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) hf_roomWithName:*(void *)(a1 + 40)];
  id v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 48);
  if (!(v4 | v2))
  {
    [*(id *)(a1 + 56) showHomeForName:*(void *)(a1 + 64)];
    char v5 = +[NAFuture futureWithNoResult];
    goto LABEL_15;
  }
  if (!v4)
  {
    id v6 = [v2 hf_allCameraProfiles];
    if ((unint64_t)[v6 count] > 1)
    {
      uint64_t v10 = [*(id *)(a1 + 56) showRoom:v3];
      goto LABEL_13;
    }

    uint64_t v4 = *(void *)(a1 + 48);
  }
  id v6 = [*(id *)(a1 + 56) _cameraProfileWithName:v4 home:*(void *)(a1 + 32) room:v3];
  id v7 = *(void **)(a1 + 56);
  if (v6) {
    BOOL v8 = v3 == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    uint64_t v10 = [v7 showRoomContainedCamera:v6 startDate:*(void *)(a1 + 72) endDate:*(void *)(a1 + 80)];
LABEL_13:
    char v5 = (void *)v10;
    goto LABEL_14;
  }
  id v9 = [v7 _showRoom:v3 animated:0];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100030D74;
  uint64_t v12[3] = &unk_1000C3248;
  id v13 = v6;
  id v14 = *(id *)(a1 + 72);
  id v15 = *(id *)(a1 + 80);
  char v5 = [v9 flatMap:v12];

LABEL_14:
LABEL_15:

  return v5;
}

id sub_100030D74(void *a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector())
  {
    uint64_t v4 = [v3 presentCameraProfile:a1[4] startDate:a1[5] endDate:a1[6] animated:1];
  }
  else
  {
    char v5 = HFLogForCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = a1[4];
      int v9 = 138412290;
      uint64_t v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Invalid attempt to display camera %@", (uint8_t *)&v9, 0xCu);
    }

    uint64_t v4 = +[NAFuture futureWithNoResult];
  }
  id v7 = (void *)v4;

  return v7;
}

void sub_100030F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100030FB0(uint64_t a1, void *a2)
{
  if ((objc_msgSend(a2, "hf_shouldBlockCurrentUserFromHome") & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v3 = [WeakRetained _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:1];
    id v4 = [v3 addCompletionBlock:&stru_1000C32D8];
  }
}

void sub_100031048(id a1, UINavigationController *a2, NSError *a3)
{
  id v3 = [(UINavigationController *)a2 popToRootViewControllerAnimated:1];
}

void sub_100031254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100031278(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v6 = [v4 hf_allRooms];

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1000313C0;
  uint64_t v12[3] = &unk_1000C3300;
  id v13 = *(id *)(a1 + 32);
  id v7 = [v6 na_firstObjectPassingTest:v12];

  if (v7)
  {
    BOOL v8 = +[HFHomeKitDispatcher sharedDispatcher];
    int v9 = [v8 home];
    [v9 hf_setSelectedRoom:v7];

    [WeakRetained _showRoom:v7 animated:1];
  }
  else
  {
    +[NAFuture futureWithNoResult];
  uint64_t v10 = };

  return v10;
}

id sub_1000313C0(uint64_t a1, void *a2)
{
  id v3 = [a2 name];
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

NAFuture *__cdecl sub_100031604(id a1, Class a2, id a3)
{
  id v4 = a3;
  char v5 = NSStringFromClass(a2);
  uint64_t v6 = +[NSString stringWithFormat:@"HOAppNavigator Class Mismatch. Expected %@, but got %@", v5, v4];

  id v7 = +[NSError hf_errorWithCode:-1 description:v6];
  BOOL v8 = HFLogForCategory();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
    sub_100083058();
  }

  int v9 = +[NAFuture futureWithError:v7];

  return (NAFuture *)v9;
}

id sub_1000316F8(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 BOOLValue];
  id v4 = HFLogForCategory();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      int v8 = 136315138;
      int v9 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s, home has changed, _showHomeTabForHome", (uint8_t *)&v8, 0xCu);
    }

    uint64_t v6 = [*(id *)(a1 + 32) _showHomeTabForHome:*(void *)(a1 + 40) animated:1];
  }
  else
  {
    if (v5)
    {
      int v8 = 136315138;
      int v9 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s, home has not changed, selectingCurrentTabAnimated", (uint8_t *)&v8, 0xCu);
    }

    uint64_t v6 = [*(id *)(a1 + 32) _selectCurrentTabAnimated:1];
  }

  return v6;
}

NAFuture *__cdecl sub_100031838(id a1, Protocol *a2, id a3)
{
  id v4 = a3;
  BOOL v5 = NSStringFromProtocol(a2);
  uint64_t v6 = +[NSString stringWithFormat:@"HOAppNavigator Nil Protocol. Expected %@, but got %@", v5, v4];

  id v7 = +[NSError hf_errorWithCode:-1 description:v6];
  int v8 = HFLogForCategory();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
    sub_100083058();
  }

  int v9 = +[NAFuture futureWithError:v7];

  return (NAFuture *)v9;
}

id sub_10003192C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = HFLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    id v26 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
    __int16 v27 = 2112;
    id v28 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s, navControlFuture completed %@", buf, 0x16u);
  }

  objc_opt_class();
  id v5 = v3;
  if (objc_opt_isKindOfClass()) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = v6;

  id v8 = v5;
  if (v7) {
    goto LABEL_7;
  }
  objc_opt_class();
  id v13 = v5;
  if (objc_opt_isKindOfClass()) {
    id v14 = v13;
  }
  else {
    id v14 = 0;
  }
  id v8 = v14;

  if (!v8)
  {
    uint64_t v20 = *(void *)(a1 + 48);
    uint64_t v21 = objc_opt_class();
    long long v18 = (*(void (**)(uint64_t, uint64_t, id))(v20 + 16))(v20, v21, v13);
    goto LABEL_22;
  }
  uint64_t v15 = [v8 navigationController];
  if (v15)
  {
    id v16 = (void *)v15;

    id v8 = v16;
LABEL_7:
    int v9 = [v8 topViewController];
    if ([v9 conformsToProtocol:&OBJC_PROTOCOL___HUHomeKitObjectPresenting]) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    id v11 = v10;

    if (v11)
    {
      uint64_t v12 = +[NAFuture futureWithResult:v11];
    }
    else
    {
      long long v17 = HFLogForCategory();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        id v26 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%s, We are not in a tab capable of presenting homekit object. Select Home tab.", buf, 0xCu);
      }

      uint64_t v12 = [*(id *)(a1 + 32) _showHomeTabForHome:*(void *)(a1 + 40) animated:1];
    }
    long long v18 = (void *)v12;

    goto LABEL_22;
  }
  __int16 v22 = +[NSString stringWithFormat:@"HOAppNavigator Error: No Navigation Controller found from View Controller: %@", v8];
  id v23 = +[NSError hf_errorWithCode:-1 description:v22];
  id v24 = HFLogForCategory();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
    sub_100083058();
  }

  long long v18 = +[NAFuture futureWithError:v23];

LABEL_22:

  return v18;
}

id sub_100031C34(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = HFLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 136315394;
    uint64_t v12 = "-[HOAppNavigator showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:]_block_invoke";
    __int16 v13 = 2112;
    id v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s, homeKitObjectPresentingFuture completed %@", (uint8_t *)&v11, 0x16u);
  }

  id v5 = v3;
  uint64_t v6 = &OBJC_PROTOCOL___HUHomeKitObjectPresenting;
  if ([v5 conformsToProtocol:v6]) {
    id v7 = v5;
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;

  if (v8) {
    [v8 presentItemWithUUID:a1[4] destination:a1[6] secondaryDestination:a1[7] animated:1];
  }
  else {
  int v9 = (*(void (**)(void))(a1[5] + 16))();
  }

  return v9;
}

id sub_100031ECC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) items];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_1000320EC;
  v14[3] = &unk_1000C3420;
  id v15 = *(id *)(a1 + 40);
  unsigned int v3 = [v2 na_any:v14];

  id v4 = HFLogForCategory();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      uint64_t v6 = [*(id *)(a1 + 40) hf_prettyDescription];
      id v7 = [*(id *)(a1 + 48) hf_prettyDescription];
      *(_DWORD *)buf = 138412546;
      long long v17 = v6;
      __int16 v18 = 2112;
      long long v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "HOAppNavigator handling request to open Accessory for accessory %@. Open Bridge Settings for home %@.", buf, 0x16u);
    }
    uint64_t v8 = [*(id *)(a1 + 56) showBridgeSettingsForAccessory:*(void *)(a1 + 40)];
  }
  else
  {
    if (v5)
    {
      int v9 = [*(id *)(a1 + 40) hf_prettyDescription];
      uint64_t v10 = [*(id *)(a1 + 48) hf_prettyDescription];
      uint64_t v11 = *(void *)(a1 + 64);
      *(_DWORD *)buf = 138412802;
      long long v17 = v9;
      __int16 v18 = 2112;
      long long v19 = v10;
      __int16 v20 = 2048;
      uint64_t v21 = v11;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "HOAppNavigator handling request to open Accessory for accessory %@ in home %@ with secondary destination %lu.", buf, 0x20u);
    }
    uint64_t v8 = [*(id *)(a1 + 56) _showRoomContainedObject:*(void *)(a1 + 40) secondaryDestination:*(void *)(a1 + 64)];
  }
  uint64_t v12 = (void *)v8;

  return v12;
}

id sub_1000320EC(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 accessory];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_100032278(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100032294(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v6 = WeakRetained;
  if (v4)
  {
    id v7 = HFLogForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
      sub_1000830C0();
    }
  }
  else
  {
    uint64_t v8 = [WeakRetained homePodProfileInstaller];
    int v9 = [v6 rootViewController];
    [v8 showProfileInstallationFlowFromViewController:v9 withSenderURLString:*(void *)(a1 + 32)];
  }
}

void sub_100032450(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_100032474(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v3 = [WeakRetained _showLocationListWithHome:*(void *)(a1 + 32) customizationBlock:&stru_1000C34B0];

  return v3;
}

void sub_1000324D0(id a1, HUEditLocationViewController *a2)
{
  id v2 = [(HUEditLocationViewController *)a2 presentSoftwareUpdate:0];
}

BOOL sub_1000327D0(id a1, NSURLQueryItem *a2)
{
  id v2 = [(NSURLQueryItem *)a2 name];
  unsigned __int8 v3 = [v2 isEqualToString:@"payload"];

  return v3;
}

void sub_100032814(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = HULocalizedString();
  BOOL v5 = +[NSError hf_errorWithCode:62 description:v4];

  if (*(void *)(a1 + 32))
  {
    uint64_t v6 = +[HFHomeKitDispatcher sharedDispatcher];
    id v7 = [v6 homeManager];
    uint64_t v8 = [v7 accessorySetupCoordinator];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100032988;
    v10[3] = &unk_1000C3540;
    uint64_t v9 = *(void *)(a1 + 32);
    id v11 = *(id *)(a1 + 40);
    id v12 = *(id *)(a1 + 32);
    id v13 = v3;
    id v14 = v5;
    [v8 createSetupAccessoryPayloadWithSetupPayloadURLString:v9 completionHandler:v10];
  }
  else
  {
    [v3 finishWithError:v5];
  }
}

void sub_100032988(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = v5;
  if (!a2 || v5)
  {
    id v7 = HFLogForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100083140();
    }

    [*(id *)(a1 + 48) finishWithError:*(void *)(a1 + 56)];
  }
  else
  {
    [*(id *)(a1 + 48) finishWithResult:a2];
  }
}

id sub_100032A14(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = HFLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = +[HFHomeKitDispatcher sharedDispatcher];
    id v7 = [v6 allHomesFuture];
    unsigned int v8 = [v7 isFinished];
    CFStringRef v9 = @"Not Done";
    if (v8) {
      CFStringRef v9 = @"Done";
    }
    *(_DWORD *)buf = 138412546;
    uint64_t v20 = v5;
    __int16 v21 = 2112;
    CFStringRef v22 = v9;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Waiting for homeManager before opening the setup flow for URL: %@. (allHomesFuture = %@)", buf, 0x16u);
  }
  uint64_t v10 = +[HFHomeKitDispatcher sharedDispatcher];
  id v11 = [v10 allHomesFuture];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_100032C00;
  v15[3] = &unk_1000C35D0;
  id v16 = v3;
  id v17 = *(id *)(a1 + 40);
  id v18 = *(id *)(a1 + 32);
  id v12 = v3;
  id v13 = [v11 addCompletionBlock:v15];

  return v13;
}

void sub_100032C00(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = +[HFHomeKitDispatcher sharedDispatcher];
  uint64_t v6 = [v5 homeManager];

  id v7 = HFLogForCategory();
  unsigned int v8 = v7;
  if (v4 || !v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1000831C8();
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = a1[4];
      uint64_t v10 = a1[5];
      uint64_t v11 = a1[6];
      int v12 = 138412802;
      uint64_t v13 = v9;
      __int16 v14 = 2112;
      uint64_t v15 = v10;
      __int16 v16 = 2112;
      uint64_t v17 = v11;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "homeManager loaded. addAndSetupAccessoriesWithPayload: %@, payload string, \"%@\", URL %@", (uint8_t *)&v12, 0x20u);
    }

    [v6 addAndSetupAccessoriesWithPayload:a1[4] completionHandler:&stru_1000C35A8];
  }
}

void sub_100032D4C(id a1, NSError *a2, NSArray *a3)
{
  id v4 = a2;
  uint64_t v5 = a3;
  uint64_t v6 = HFLogForCategory();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = [(NSArray *)v5 hf_prettyDescription];
    int v8 = 138412546;
    uint64_t v9 = v4;
    __int16 v10 = 2112;
    uint64_t v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "addAndSetupAccessoriesWithPayload finished with error: %@, addedAccessories: %@", (uint8_t *)&v8, 0x16u);
  }
}

NAFuture *__cdecl sub_100032E34(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = +[HFErrorHandler sharedHandler];
  [v3 handleError:v2 operationType:HFOperationSetupAccessory options:0 retryBlock:0 cancelBlock:0];

  id v4 = +[NAFuture futureWithError:v2];

  return (NAFuture *)v4;
}

id sub_10003303C(uint64_t a1, void *a2)
{
  return [a2 presentPersonalRequestsSettings:*(void *)(a1 + 32)];
}

id sub_10003324C(uint64_t a1, void *a2)
{
  return [a2 presentPersonalRequestsSettings:*(void *)(a1 + 32)];
}

id sub_1000333EC(uint64_t a1, void *a2)
{
  return [a2 presentUserViewController:*(void *)(a1 + 32)];
}

id sub_10003351C(uint64_t a1, void *a2)
{
  return [a2 presentUserLockSettings:*(void *)(a1 + 32)];
}

void sub_100033650(uint64_t a1, void *a2)
{
  id v8 = a2;
  uint64_t v3 = *(void *)(a1 + 40);
  if ((unint64_t)(v3 - 1) < 2)
  {
    uint64_t v4 = +[HUHomeUIServiceLaunchUserInfo userInfoForLockAccessWalletKeySetupInHome:*(void *)(a1 + 32)];
LABEL_5:
    uint64_t v5 = (void *)v4;
    goto LABEL_7;
  }
  if (v3 == 3)
  {
    uint64_t v4 = +[HUHomeUIServiceLaunchUserInfo userInfoForLockAccessPinCodeSetupInHome:*(void *)(a1 + 32)];
    goto LABEL_5;
  }
  uint64_t v5 = 0;
LABEL_7:
  uint64_t v6 = +[HFHomeKitDispatcher sharedDispatcher];
  id v7 = [v6 homeManager];
  [v7 launchHomeUIServiceToResumeSetupWithUserInfo:v5 completionHandler:&stru_1000C3660];

  [v8 finishWithNoResult];
}

void sub_100033834(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v6 = +[HUHomeUIServiceLaunchUserInfo userInfoForLockAccessFirmwareUpgradeSetupInHome:v2];
  uint64_t v4 = +[HFHomeKitDispatcher sharedDispatcher];
  uint64_t v5 = [v4 homeManager];
  [v5 launchHomeUIServiceToResumeSetupWithUserInfo:v6 completionHandler:&stru_1000C36A8];

  [v3 finishWithNoResult];
}

void sub_1000339F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v4 = +[HFHomeKitDispatcher sharedDispatcher];
  uint64_t v5 = [v4 homeManager];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100033B24;
  v7[3] = &unk_1000C36F8;
  objc_copyWeak(&v10, &location);
  id v8 = *(id *)(a1 + 40);
  id v6 = v3;
  id v9 = v6;
  [v5 fetchDevicesWithCompletionHandler:v7];

  objc_destroyWeak(&v10);
  objc_destroyWeak(&location);
}

void sub_100033B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100033B24(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v8 = HFLogForCategory();
  id v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10008323C(a1, v9);
    }

    [*(id *)(a1 + 40) finishWithError:v6];
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v14 = 136315650;
      uint64_t v15 = "-[HOAppNavigator showHH2OnboardingFlowForHome:]_block_invoke";
      __int16 v16 = 2112;
      id v17 = v5;
      __int16 v18 = 2112;
      uint64_t v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s Fetched devices:[%@] for home: %@", (uint8_t *)&v14, 0x20u);
    }

    uint64_t v11 = *(void *)(a1 + 32);
    int v12 = [WeakRetained currentViewController];
    id v13 = +[HUHomeFeatureOnboardingUtilities home:v11 onboardHomeHub2FromPresentingViewController:v12 devices:v5 usageOptions:0];

    [*(id *)(a1 + 40) finishWithNoResult];
  }
}

id sub_100033E0C(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 BOOLValue];
  uint64_t v4 = HFLogForCategory();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      int v8 = 136315138;
      id v9 = "-[HOAppNavigator showDropInUI:home:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s, home has changed, _showHomeTabForHome", (uint8_t *)&v8, 0xCu);
    }

    id v6 = [*(id *)(a1 + 32) _showHomeTabForHome:*(void *)(a1 + 40) animated:1];
  }
  else
  {
    if (v5)
    {
      int v8 = 136315138;
      id v9 = "-[HOAppNavigator showDropInUI:home:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s, home has not changed, selectingCurrentTabAnimated", (uint8_t *)&v8, 0xCu);
    }

    id v6 = [*(id *)(a1 + 32) _selectCurrentTabAnimated:1];
  }

  return v6;
}

void sub_100033F4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    BOOL v5 = HFLogForCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
      sub_100083318();
    }
  }
  else
  {
    id v6 = objc_alloc((Class)HUHomeControlServiceContext);
    id v7 = [*(id *)(a1 + 32) home];
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = [*(id *)(a1 + 40) currentViewController];
    id v10 = [v6 initWithServiceType:2 home:v7 accessory:v8 presentingViewController:v9];

    uint64_t v11 = +[HUHomeControlServiceManager sharedInstance];
    [v11 launchServiceWithContext:v10];
  }
}

id sub_100034140(uint64_t a1, void *a2)
{
  return [a2 presentDefaultMediaServiceSettings:*(void *)(a1 + 32)];
}

id sub_100034358(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3
    && ((objc_opt_class(), id v4 = v3, isKindOfClass = objc_opt_isKindOfClass(), (isKindOfClass & 1) == 0)
      ? (id v6 = 0)
      : (id v6 = v4),
        id v7 = v6,
        v4,
        v7,
        (isKindOfClass & 1) != 0))
  {
    uint64_t v8 = HFLogForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v16 = 138412546;
      uint64_t v17 = v9;
      __int16 v18 = 2112;
      id v19 = v4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Show camera profile:%@ for clip:%@.", (uint8_t *)&v16, 0x16u);
    }

    uint64_t v10 = [*(id *)(a1 + 40) _showRoomContainedCamera:*(void *)(a1 + 32) forCameraClip:v4];
  }
  else
  {
    uint64_t v11 = HFLogForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      id v13 = *(void **)(a1 + 48);
      int v16 = 138412546;
      uint64_t v17 = v12;
      __int16 v18 = 2112;
      id v19 = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Show camera profile:%@ for missing clip with request clipID:%@.", (uint8_t *)&v16, 0x16u);
    }

    uint64_t v10 = [*(id *)(a1 + 40) _showRoomContainedObject:*(void *)(a1 + 32) secondaryDestination:0];
  }
  int v14 = (void *)v10;

  return v14;
}

id sub_100034718(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = [v3 canAskForUserFeedback];
  BOOL v5 = HFLogForCategory();
  id v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Display dashboard for camera %@", buf, 0xCu);
    }

    uint64_t v8 = [*(id *)(a1 + 40) _showDashboardForRoomContainedObject:*(void *)(a1 + 32) animated:1];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1000348C8;
    v11[3] = &unk_1000C3748;
    id v12 = v3;
    id v13 = *(id *)(a1 + 32);
    uint64_t v9 = [v8 flatMap:v11];
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000833DC();
    }

    uint64_t v9 = +[NAFuture futureWithNoResult];
  }

  return v9;
}

id sub_1000348C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector())
  {
    uint64_t v4 = [v3 presentFeedbackFlowForCameraClip:*(void *)(a1 + 32) fromProfile:*(void *)(a1 + 40)];
  }
  else
  {
    BOOL v5 = HFLogForCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v10 = 138412546;
      uint64_t v11 = v6;
      __int16 v12 = 2112;
      uint64_t v13 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Invalid attempt to display feedback flow for clip:%@ cameraProfile:%@", (uint8_t *)&v10, 0x16u);
    }

    uint64_t v4 = +[NAFuture futureWithNoResult];
  }
  uint64_t v8 = (void *)v4;

  return v8;
}

void sub_1000349F4(id a1, HUEditLocationViewController *a2)
{
  id v2 = [(HUEditLocationViewController *)a2 presentNetworkSettings:0];
}

void sub_100034ADC(uint64_t a1, void *a2)
{
  id v3 = [a2 presentNetworkSettings:0];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_100034B88;
  v5[3] = &unk_1000C37B8;
  id v6 = *(id *)(a1 + 32);
  id v4 = [v3 flatMap:v5];
}

id sub_100034B88(uint64_t a1, void *a2)
{
  return _[a2 presentNetworkConfigurationSettingsForProfile:*(void *)(a1 + 32) animated:0];
}

void sub_100034C58(uint64_t a1, void *a2)
{
  id v3 = [a2 presentNetworkSettings:0];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_100034D04;
  v5[3] = &unk_1000C37B8;
  id v6 = *(id *)(a1 + 32);
  id v4 = [v3 flatMap:v5];
}

id sub_100034D04(uint64_t a1, void *a2)
{
  return _[a2 presentNetworkRouterSettingsForAccessory:*(void *)(a1 + 32) animated:0];
}

void sub_100034DE4(uint64_t a1, void *a2)
{
  id v3 = [a2 presentBridgeSettings:0];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_100034E90;
  v5[3] = &unk_1000C37E0;
  id v6 = *(id *)(a1 + 32);
  id v4 = [v3 flatMap:v5];
}

id sub_100034E90(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [v1 home];
  id v3 = +[HUHomeHubsAndBridgesHelper presentBridgeDetailViewForAccessory:v1 withHome:v2];

  return v3;
}

void sub_100034F0C(id a1, HUEditLocationViewController *a2)
{
  id v2 = [(HUEditLocationViewController *)a2 presentBridgeSettings:0];
}

void sub_100034F40(id a1, HUEditLocationViewController *a2)
{
}

id sub_10003500C(uint64_t a1, void *a2)
{
  return [a2 showNotificationSettingsForHomeKitObject:*(void *)(a1 + 32) animated:0];
}

void sub_1000350F4(id a1, HUEditLocationViewController *a2)
{
  id v4 = a2;
  id v2 = +[HFUserNotificationServiceTopic _cameraTopic];
  id v3 = [(HUEditLocationViewController *)v4 presentNotificationSettingsForTopic:v2 animated:0];
}

void sub_1000352AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[HFUserNotificationServiceTopic _cameraTopic];
  BOOL v5 = [v3 presentNotificationSettingsForTopic:v4 animated:0];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000353A0;
  v7[3] = &unk_1000C3868;
  id v8 = *(id *)(a1 + 32);
  id v9 = *(id *)(a1 + 40);
  id v6 = [v5 flatMap:v7];
}

id sub_1000353A0(uint64_t a1, void *a2)
{
  return _[a2 presentFaceRecognitionPersonSettingsForPerson:*(void *)(a1 + 32) personManager:*(void *)(a1 + 40) animated:0];
}

void sub_1000354D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[HFUserNotificationServiceTopic _cameraTopic];
  BOOL v5 = [v3 presentNotificationSettingsForTopic:v4 animated:0];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000355B8;
  v7[3] = &unk_1000C38B8;
  id v8 = *(id *)(a1 + 32);
  id v6 = [v5 flatMap:v7];
}

id sub_1000355B8(uint64_t a1, void *a2)
{
  return _[a2 presentFaceRecognitionAddPersonSettingsForUnknownPersonEvent:*(void *)(a1 + 32) animated:0];
}

void sub_1000356B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000356D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained _selectTabWithIdentifier:HFHomeAppTabIdentifierTriggers animated:1];
  id v2 = [v1 addCompletionBlock:&stru_1000C38D8];
}

void sub_100035750(id a1, UINavigationController *a2, NSError *a3)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = [(UINavigationController *)v3 topViewController];

  if (objc_opt_isKindOfClass()) {
    BOOL v5 = v4;
  }
  else {
    BOOL v5 = 0;
  }
  id v7 = v5;

  id v6 = v7;
  if (!v7)
  {
    NSLog(@"Please verify that this code runs if you can add an automation.");
    id v6 = 0;
  }
  [v6 showAddTriggerView];
}

void sub_100035A44(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v5 = +[HFHomeKitDispatcher sharedDispatcher];
  id v4 = [v5 home];
  [v2 _configureDashboardContextWithHome:v4 navigationController:v3 animated:1];
}

id sub_100035C68(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) baseController];
  id v3 = [v2 selectTabWithIdentifier:*(void *)(a1 + 40)];

  return v3;
}

id sub_100035D84(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) baseController];
  id v2 = [v1 selectCurrentTab];

  return v2;
}

id sub_100035F70(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (*(id *)(a1 + 32) != v3)
  {
    id v5 = +[HFHomeKitDispatcher sharedDispatcher];
    [v5 setSelectedHome:*(void *)(a1 + 32) userInitiated:1];

    id v4 = *(id *)(a1 + 32);
  }
  id v6 = +[NSNumber numberWithInt:v4 != v3];
  id v7 = +[NAFuture futureWithResult:v6];

  return v7;
}

uint64_t sub_1000363DC(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v3 = &OBJC_PROTOCOL___HFShowInHomeDashboard;
  if ([v2 conformsToProtocol:v3]) {
    id v4 = v2;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  if (v5 && (objc_msgSend(v5, "hf_effectiveShowInHomeDashboard") & 1) != 0)
  {
    uint64_t v6 = 1;
  }
  else
  {
    id v7 = *(id *)(a1 + 32);
    id v8 = &OBJC_PROTOCOL___HFFavoritable;
    if ([v7 conformsToProtocol:v8]) {
      id v9 = v7;
    }
    else {
      id v9 = 0;
    }
    id v10 = v9;

    uint64_t v6 = [v10 hf_effectiveIsFavorite];
  }

  return v6;
}

id sub_10003659C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = a2;
  id v6 = [v3 _selectHome:v4];
  [*(id *)(a1 + 32) _configureDashboardContextWithHome:*(void *)(a1 + 40) navigationController:v5 animated:*(unsigned __int8 *)(a1 + 48)];
  uint64_t v7 = objc_opt_class();
  id v8 = [v5 topViewController];

  id v9 = v8;
  if (v9)
  {
    if (objc_opt_isKindOfClass()) {
      id v10 = v9;
    }
    else {
      id v10 = 0;
    }
    id v11 = v10;
    if (!v11)
    {
      __int16 v12 = +[NSAssertionHandler currentHandler];
      uint64_t v13 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
      [v12 handleFailureInFunction:v13, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v7, objc_opt_class() file lineNumber description];
    }
  }
  else
  {
    id v11 = 0;
  }

  int v14 = +[NAFuture futureWithResult:v11];

  return v14;
}

id sub_10003684C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100036868(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v7 = [v3 viewControllers];
    [v5 _configureDashboardContextWithRoom:v6 navigationController:v4 animated:[v7 count] == 1];
  }
  else
  {
    [*(id *)(a1 + 32) _configureDashboardContextWithRoom:*(void *)(a1 + 40) navigationController:v3 animated:0];
  }
  uint64_t v8 = objc_opt_class();
  id v9 = [v4 topViewController];
  if (v9)
  {
    if (objc_opt_isKindOfClass()) {
      id v10 = v9;
    }
    else {
      id v10 = 0;
    }
    id v11 = v10;
    if (!v11)
    {
      __int16 v12 = +[NSAssertionHandler currentHandler];
      uint64_t v13 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
      [v12 handleFailureInFunction:v13, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v8, objc_opt_class() file lineNumber description];
    }
  }
  else
  {
    id v11 = 0;
  }

  int v14 = +[NAFuture futureWithResult:v11];

  return v14;
}

id sub_100036AE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  char v4 = objc_opt_respondsToSelector();
  id v5 = HFLogForCategory();
  uint64_t v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v17 = 138412290;
      uint64_t v18 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Present camera from dashboard for clip:%@", (uint8_t *)&v17, 0xCu);
    }

    uint64_t v8 = [v3 presentCameraProfile:*(void *)(a1 + 40) forCameraClip:*(void *)(a1 + 32) animated:1];
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000834CC(a1, v6, v9, v10, v11, v12, v13, v14);
    }

    uint64_t v8 = +[NAFuture futureWithNoResult];
  }
  uint64_t v15 = (void *)v8;

  return v15;
}

id sub_100036D4C(void *a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector())
  {
    uint64_t v4 = [v3 presentCameraProfile:a1[4] startDate:a1[5] endDate:a1[6] animated:1];
  }
  else
  {
    id v5 = HFLogForCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = a1[4];
      int v9 = 138412290;
      uint64_t v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Invalid attempt to display camera %@", (uint8_t *)&v9, 0xCu);
    }

    uint64_t v4 = +[NAFuture futureWithNoResult];
  }
  uint64_t v7 = (void *)v4;

  return v7;
}

id sub_100036F3C(uint64_t a1, void *a2)
{
  return _[a2 presentHomeKitObject:*(void *)(a1 + 32) destination:*(void *)(a1 + 40) animated:1];
}

void sub_100037184(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v3];

  [v6 setModalPresentationStyle:2];
  uint64_t v4 = [*(id *)(a1 + 32) rootViewController];
  id v5 = [v4 hu_presentPreloadableViewController:v6 animated:1];
}

void sub_1000373F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

id sub_100037428(uint64_t a1, void *a2)
{
  uint64_t v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000374FC;
  v8[3] = &unk_1000C3640;
  id v9 = *(id *)(a1 + 32);
  id v6 = [WeakRetained _showLocationListWithHome:v4 customizationBlock:v8];

  return v6;
}

id sub_1000374FC(uint64_t a1, void *a2)
{
  return [a2 presentUserViewController:*(void *)(a1 + 32)];
}

id sub_100037524(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = +[HFHomeKitDispatcher sharedDispatcher];
  id v6 = [v5 home];

  uint64_t v7 = HFLogForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = [*(id *)(a1 + 32) uniqueIdentifier];
    int v11 = 138413314;
    id v12 = WeakRetained;
    __int16 v13 = 2080;
    uint64_t v14 = "-[HOAppNavigator _showUser:customizationBlock:]_block_invoke_3";
    __int16 v15 = 2112;
    id v16 = v3;
    __int16 v17 = 2112;
    uint64_t v18 = v8;
    __int16 v19 = 2112;
    uint64_t v20 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "(%@:%s) %@ occurred looking for user with uniqueIdentifier %@. Showing settings for current home %@", (uint8_t *)&v11, 0x34u);
  }
  id v9 = [WeakRetained _showLocationListWithHome:v6 customizationBlock:*(void *)(a1 + 40)];

  return v9;
}

id sub_100037794(uint64_t a1)
{
  id v2 = +[HOLocationListViewController viewControllerForPresentingLocationEditorForHome:*(void *)(a1 + 32) delegate:*(void *)(a1 + 40) customizationBlock:*(void *)(a1 + 48)];
  id v3 = [*(id *)(a1 + 40) rootViewController];
  id v4 = [v3 hu_presentPreloadableViewController:v2 animated:1];

  return v4;
}

NAFuture *__cdecl sub_100037910(id a1, UINavigationController *a2)
{
  id v2 = [(UINavigationController *)a2 topViewController];
  id v3 = +[NAFuture futureWithResult:v2];

  return (NAFuture *)v3;
}

id sub_100037970(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = &OBJC_PROTOCOL___HURoomSettingsDelegate;
  if ([v3 conformsToProtocol:v4]) {
    id v5 = v3;
  }
  else {
    id v5 = 0;
  }
  id v6 = v5;

  if (v6)
  {
    uint64_t v7 = [v6 presentRoomSettingsForRoom:*(void *)(a1 + 32)];
  }
  else
  {
    uint64_t v8 = HFLogForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10008353C();
    }

    uint64_t v7 = +[NAFuture futureWithNoResult];
  }
  id v9 = (void *)v7;

  return v9;
}

id sub_100037F0C(uint64_t a1, void *a2)
{
  id v3 = [a2 topViewController];
  if ([v3 conformsToProtocol:&OBJC_PROTOCOL___HUHomeKitObjectPresenting]) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  if (v5 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    uint64_t v6 = [v5 presentStatusDetailsForStatusItemClass:*(void *)(a1 + 32) animated:1];
  }
  else
  {
    uint64_t v6 = +[NAFuture futureWithNoResult];
  }
  uint64_t v7 = (void *)v6;

  return v7;
}

id sub_10003812C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100038148(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 56);
  id v6 = a2;
  [v2 _configureDashboardContextWithAccessoryTypeGroup:v3 home:v4 navigationController:v6 animated:v5];
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = [v6 topViewController];

  id v9 = v8;
  if (v9)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    id v11 = v10;
    if (!v11)
    {
      id v12 = +[NSAssertionHandler currentHandler];
      __int16 v13 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
      [v12 handleFailureInFunction:v13, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v7, objc_opt_class() file lineNumber description];
    }
  }
  else
  {
    id v11 = 0;
  }

  uint64_t v14 = +[NAFuture futureWithResult:v11];

  return v14;
}

id sub_100038404(uint64_t a1)
{
  return [*(id *)(a1 + 32) _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100038420(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 56);
  id v6 = a2;
  [v2 _configureScenesDashboardContextWithTitle:v3 home:v4 navigationController:v6 animated:v5];
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = [v6 topViewController];

  id v9 = v8;
  if (v9)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    id v11 = v10;
    if (!v11)
    {
      id v12 = +[NSAssertionHandler currentHandler];
      __int16 v13 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
      [v12 handleFailureInFunction:v13, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v7, objc_opt_class() file lineNumber description];
    }
  }
  else
  {
    id v11 = 0;
  }

  uint64_t v14 = +[NAFuture futureWithResult:v11];

  return v14;
}

id sub_1000386DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:*(unsigned __int8 *)(a1 + 40)];
}

id sub_1000386F8(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 56);
  id v6 = a2;
  [v2 _configureSpeakersAndTVsDashboardContextWithTitle:v3 home:v4 navigationController:v6 animated:v5];
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = [v6 topViewController];

  id v9 = v8;
  if (v9)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    id v11 = v10;
    if (!v11)
    {
      id v12 = +[NSAssertionHandler currentHandler];
      __int16 v13 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
      [v12 handleFailureInFunction:v13, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v7, objc_opt_class() file lineNumber description];
    }
  }
  else
  {
    id v11 = 0;
  }

  uint64_t v14 = +[NAFuture futureWithResult:v11];

  return v14;
}

id sub_1000389B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _selectTabWithIdentifier:HFHomeAppTabIdentifierHome animated:*(unsigned __int8 *)(a1 + 40)];
}

id sub_1000389D0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 56);
  id v6 = a2;
  [v2 _configureCameraDashboardContextWithTitle:v3 home:v4 navigationController:v6 animated:v5];
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = [v6 topViewController];

  id v9 = v8;
  if (v9)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    id v11 = v10;
    if (!v11)
    {
      id v12 = +[NSAssertionHandler currentHandler];
      __int16 v13 = +[NSString stringWithUTF8String:"id  _Nullable NAAssertCast(Class  _Nonnull __unsafe_unretained, id  _Nonnull __strong)"];
      [v12 handleFailureInFunction:v13, @"NSObject+NAAdditions.h", 54, @"Expected class of %@ but was %@", v7, objc_opt_class() file lineNumber description];
    }
  }
  else
  {
    id v11 = 0;
  }

  uint64_t v14 = +[NAFuture futureWithResult:v11];

  return v14;
}

void sub_100038BD4(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 topViewController];
  uint64_t v4 = [v3 contentScrollViewForEdge:1];
  uint64_t v5 = HFLogForCategory();
  id v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 138412546;
      uint64_t v9 = v7;
      __int16 v10 = 2112;
      id v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@ Scrolling to the top of currently presented view controller: %@", (uint8_t *)&v8, 0x16u);
    }

    [v4 _scrollToTopIfPossible:*(unsigned __int8 *)(a1 + 40)];
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1000835A4();
    }
  }
}

id sub_100039ED8(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  uint64_t v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    uint64_t v5 = sub_10003A588();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        id v11 = +[NSBundle mainBundle];
        id v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      id v12 = @"_";
    }

    uint64_t v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  uint64_t v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    uint64_t v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_10003A588()
{
  if (qword_1000DE8E8 != -1) {
    dispatch_once(&qword_1000DE8E8, &stru_1000C3B18);
  }
  unint64_t v0 = (void *)qword_1000DE8F0;

  return v0;
}

void sub_10003A5DC(id a1)
{
  id v1 = (void *)qword_1000DE8F0;
  qword_1000DE8F0 = (uint64_t)&off_1000CB4D8;
}

void sub_10003A64C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _checkAndRunFeatureOnboardingWithHomeSwitch:0];
}

void sub_10003A9AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = HFLogForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100083614();
    }
  }
  uint64_t v8 = sub_10003AC78(@"HOLocationTriggerAlertDescription");
  v26[0] = 0;
  uint64_t v9 = +[NSString stringWithValidatedFormat:v8, @"%@", v26, v5 validFormatSpecifiers error];
  id v10 = v26[0];

  if (!v9) {
    NSLog(@"Couldn't localize format string \"HOLocationTriggerAlertDescription\". Most likely, the format specifiers don't match. %@", v10);
  }
  id v11 = sub_10003AC78(@"HOLocationTriggerAlertTitle");
  id v12 = +[UIAlertController alertControllerWithTitle:v11 message:v9 preferredStyle:1];

  unsigned int v13 = sub_10003AC78(@"HOLocationTriggerAlertRun");
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_10003AE64;
  v24[3] = &unk_1000C3B68;
  int8x16_t v20 = *(int8x16_t *)(a1 + 32);
  id v14 = (id)v20.i64[0];
  int8x16_t v25 = vextq_s8(v20, v20, 8uLL);
  id v15 = +[UIAlertAction actionWithTitle:v13 style:0 handler:v24];
  [v12 addAction:v15];

  id v16 = sub_10003AC78(@"HOLocationTriggerAlertCancel");
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_10003AE74;
  v22[3] = &unk_1000C3B68;
  int8x16_t v21 = *(int8x16_t *)(a1 + 32);
  id v17 = (id)v21.i64[0];
  int8x16_t v23 = vextq_s8(v21, v21, 8uLL);
  long long v18 = +[UIAlertAction actionWithTitle:v16 style:1 handler:v22];
  [v12 addAction:v18];

  long long v19 = [*(id *)(a1 + 40) rootViewController];
  [v19 presentViewController:v12 animated:1 completion:0];
}

id sub_10003AC78(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  uint64_t v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = sub_10003C260();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        id v11 = +[NSBundle mainBundle];
        id v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      id v12 = @"_";
    }

    uint64_t v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  id v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    id v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_10003AE64(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _userDidConfirmExection:1 ofTriggerWithIdentifier:*(void *)(a1 + 40)];
}

id sub_10003AE74(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _userDidConfirmExection:0 ofTriggerWithIdentifier:*(void *)(a1 + 40)];
}

void sub_10003AF70(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = HFLogForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_100083680();
    }
  }
}

id sub_10003B31C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) rootViewController];
  uint64_t v3 = [v2 hu_presentPreloadableViewController:*(void *)(a1 + 40) animated:1];

  return v3;
}

void sub_10003B970(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) home];

  if (!v2)
  {
    uint64_t v3 = [*(id *)(a1 + 40) rootViewController];
    [v3 setLoadingViewController:*(void *)(a1 + 48)];

    id v4 = [*(id *)(a1 + 40) rootViewController];
    unsigned int v5 = [(id)objc_opt_class() instancesRespondToSelector:"didLoadLoadingViewController"];

    if (v5)
    {
      id v6 = [*(id *)(a1 + 40) rootViewController];
      [v6 didLoadLoadingViewController];
    }
  }
}

id sub_10003C260()
{
  if (qword_1000DE8F8 != -1) {
    dispatch_once(&qword_1000DE8F8, &stru_1000C3C00);
  }
  unint64_t v0 = (void *)qword_1000DE900;

  return v0;
}

void sub_10003C2B4(id a1)
{
  id v1 = (void *)qword_1000DE900;
  qword_1000DE900 = (uint64_t)&off_1000CB4F0;
}

void sub_10003D7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003D7FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (([WeakRetained didPushNextViewController] & 1) == 0)
  {
    id v1 = [WeakRetained navigationController];
    id v2 = [v1 visibleViewController];
    unsigned int v3 = [v2 isEqual:WeakRetained];

    if (v3)
    {
      id v4 = [WeakRetained navigationController];
      unsigned int v5 = [WeakRetained joinedHomeVC];
      [v4 pushViewController:v5 animated:1];

      [WeakRetained setDidPushNextViewController:1];
    }
  }
}

void sub_10003DA6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10003DA98(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unsigned __int8 v5 = [v3 BOOLValue];

  id v6 = HFLogForCategory();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v7)
    {
      uint64_t v8 = [WeakRetained responseController];
      uint64_t v9 = [v8 invitation];
      uint64_t v10 = [v9 hf_prettyDescription];
      int v17 = 136315394;
      long long v18 = "-[HOOnboardingInvitationJoiningHomeViewController _handleAppDidForeground]_block_invoke";
      __int16 v19 = 2112;
      long long v20 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "(%s) At the moment when Home app got foregrounded, invitation's home was found. Moving onto next screen for %@.", (uint8_t *)&v17, 0x16u);
    }
    [WeakRetained _moveToNextViewController];
  }
  else
  {
    if (v7)
    {
      id v11 = [WeakRetained responseController];
      id v12 = [v11 invitation];
      unsigned int v13 = [v12 hf_prettyDescription];
      int v17 = 136315394;
      long long v18 = "-[HOOnboardingInvitationJoiningHomeViewController _handleAppDidForeground]_block_invoke";
      __int16 v19 = 2112;
      long long v20 = v13;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "(%s) At the moment when Home app got foregrounded, invitation's home was NOT found. Starting timer for invitation %@.", (uint8_t *)&v17, 0x16u);
    }
    id v14 = [WeakRetained acceptedPendingAddHomeTimeoutCancellationToken];

    if (!v14) {
      [WeakRetained _startAddHomeTimeout];
    }
  }
  id v15 = +[NAFuture futureWithNoResult];

  return v15;
}

void sub_10003DD90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003DDB4(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained _didHomeGetAdded];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10003DE90;
    v6[3] = &unk_1000C3C28;
    objc_copyWeak(&v7, v1);
    id v5 = [v4 flatMap:v6];

    objc_destroyWeak(&v7);
  }
}

void sub_10003DE7C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_10003DE90(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = [v3 BOOLValue];
  id v5 = (id *)(a1 + 32);
  if (v4)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10003E158;
    v10[3] = &unk_1000C3C50;
    id v6 = &v11;
    objc_copyWeak(&v11, v5);
    uint64_t v7 = +[NAFuture futureWithBlock:v10];
  }
  else
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10003DFDC;
    uint64_t v12[3] = &unk_1000C3C50;
    id v6 = &v13;
    objc_copyWeak(&v13, v5);
    uint64_t v7 = +[NAFuture futureWithBlock:v12];
  }
  uint64_t v8 = (void *)v7;
  objc_destroyWeak(v6);

  return v8;
}

void sub_10003DFC4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10003DFDC(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unsigned __int8 v4 = +[NSError hf_errorWithCode:39];
  [WeakRetained setAcceptInvitationError:v4];

  id v5 = [WeakRetained incomingInvitationDelegate];
  char v6 = objc_opt_respondsToSelector();

  uint64_t v7 = [WeakRetained incomingInvitationDelegate];
  if (v6)
  {
    uint64_t v8 = [WeakRetained responseController];
    uint64_t v9 = [v8 invitation];
    uint64_t v10 = [WeakRetained acceptInvitationError];
    [v7 didDecideLaterForInvitation:v9 viewController:WeakRetained error:v10];

LABEL_5:
    goto LABEL_7;
  }
  char v11 = objc_opt_respondsToSelector();

  id v12 = [WeakRetained incomingInvitationDelegate];
  uint64_t v7 = v12;
  if (v11)
  {
    uint64_t v8 = [WeakRetained acceptInvitationError];
    [v7 invitationViewControllerDidDecideLaterInvitation:WeakRetained error:v8];
    goto LABEL_5;
  }
  [v12 invitationViewControllerDidDecideLaterInvitation:WeakRetained];
LABEL_7:

  [v3 finishWithNoResult];
}

void sub_10003E158(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setAcceptInvitationError:0];
  [WeakRetained _moveToNextViewController];
  [v3 finishWithNoResult];
}

id sub_10003E288(uint64_t a1, void *a2)
{
  id v3 = a2;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_10003E56C;
  v18[3] = &unk_1000C20C0;
  v18[4] = *(void *)(a1 + 32);
  unsigned __int8 v4 = [v3 na_firstObjectPassingTest:v18];
  id v5 = HFLogForCategory();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (!v6) {
      goto LABEL_7;
    }
    uint64_t v7 = [*(id *)(a1 + 32) responseController];
    uint64_t v8 = [v7 invitation];
    uint64_t v9 = [v8 homeName];
    uint64_t v10 = [*(id *)(a1 + 32) responseController];
    char v11 = [v10 invitation];
    id v12 = [v11 homeUUID];
    id v13 = +[HMHome hf_minimumDescriptionsOfHomes:v3];
    *(_DWORD *)buf = 136315906;
    long long v20 = "-[HOOnboardingInvitationJoiningHomeViewController _didHomeGetAdded]_block_invoke";
    __int16 v21 = 2112;
    CFStringRef v22 = v9;
    __int16 v23 = 2112;
    id v24 = v12;
    __int16 v25 = 2112;
    id v26 = v13;
    id v14 = "(%s) New invited HMHome <name:%@, uuid: %@> was found. resultHomes = %@";
  }
  else
  {
    if (!v6) {
      goto LABEL_7;
    }
    uint64_t v7 = [*(id *)(a1 + 32) responseController];
    uint64_t v8 = [v7 invitation];
    uint64_t v9 = [v8 homeName];
    uint64_t v10 = [*(id *)(a1 + 32) responseController];
    char v11 = [v10 invitation];
    id v12 = [v11 homeUUID];
    id v13 = +[HMHome hf_minimumDescriptionsOfHomes:v3];
    *(_DWORD *)buf = 136315906;
    long long v20 = "-[HOOnboardingInvitationJoiningHomeViewController _didHomeGetAdded]_block_invoke";
    __int16 v21 = 2112;
    CFStringRef v22 = v9;
    __int16 v23 = 2112;
    id v24 = v12;
    __int16 v25 = 2112;
    id v26 = v13;
    id v14 = "(%s) New invited HMHome <name:%@, uuid: %@> was NOT found among %@";
  }
  _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v14, buf, 0x2Au);

LABEL_7:
  id v15 = +[NSNumber numberWithInt:v4 != 0];
  id v16 = +[NAFuture futureWithResult:v15];

  return v16;
}

id sub_10003E56C(uint64_t a1, void *a2)
{
  id v3 = [a2 uuid];
  unsigned __int8 v4 = [*(id *)(a1 + 32) responseController];
  id v5 = [v4 invitation];
  BOOL v6 = [v5 homeUUID];
  id v7 = [v3 hmf_isEqualToUUID:v6];

  return v7;
}

id sub_10003EB94()
{
  if (qword_1000DE908 != -1) {
    dispatch_once(&qword_1000DE908, &stru_1000C3C98);
  }
  unint64_t v0 = (void *)qword_1000DE910;

  return v0;
}

void sub_10003EBE8(id a1)
{
  id v1 = (void *)qword_1000DE910;
  qword_1000DE910 = (uint64_t)&off_1000CB508;
}

void sub_10003F63C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = +[NSURL URLWithString:v5];
  uint64_t v8 = [*(id *)(a1 + 32) getURLRequestForURL:v7];
  uint64_t v9 = [v6 webView];

  id v10 = [v9 loadRequest:v8];
  char v11 = HFLogForCategory();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 136315394;
    id v13 = "-[HODiscoverWebViewManager reloadWebViews]_block_invoke";
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "(%s) Reloaded Discover webview with url:[%@]", (uint8_t *)&v12, 0x16u);
  }
}

BOOL sub_10003FB98(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  unsigned __int8 v4 = [a3 webView];
  BOOL v5 = v3 == v4;

  return v5;
}

id sub_100040C00(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    BOOL v5 = sub_1000422CC();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        char v11 = +[NSBundle mainBundle];
        int v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      int v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  __int16 v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    __int16 v14 = v1;
  }
  id v15 = v14;

  return v15;
}

void sub_10004148C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v28);
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000414F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = HFLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = 136315138;
    id v4 = "-[HOOnboardingInvitationRestrictedGuestAccessViewController _continueButtonTapped:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(%s) User tapped Accept on the alert", (uint8_t *)&v3, 0xCu);
  }

  [WeakRetained _displayNextViewController];
}

void sub_1000415B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = HFLogForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = 136315138;
    id v4 = "-[HOOnboardingInvitationRestrictedGuestAccessViewController _continueButtonTapped:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(%s) User tapped Ignore and Report on the alert", (uint8_t *)&v3, 0xCu);
  }

  [WeakRetained _reportJunk];
}

void sub_100041678(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = HFLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = [v3 title];
    int v6 = 136315394;
    id v7 = "-[HOOnboardingInvitationRestrictedGuestAccessViewController _continueButtonTapped:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "(%s) User tapped cancel button '%@' from the alert popup", (uint8_t *)&v6, 0x16u);
  }
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

id sub_1000422CC()
{
  if (qword_1000DE928 != -1) {
    dispatch_once(&qword_1000DE928, &stru_1000C3D50);
  }
  unint64_t v0 = (void *)qword_1000DE930;

  return v0;
}

void sub_100042320(id a1)
{
  id v1 = (void *)qword_1000DE930;
  qword_1000DE930 = (uint64_t)&off_1000CB520;
}

id sub_100042558(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    BOOL v5 = sub_100042D5C();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        char v11 = +[NSBundle mainBundle];
        int v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      int v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  __int16 v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    __int16 v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_100042D5C()
{
  if (qword_1000DE938 != -1) {
    dispatch_once(&qword_1000DE938, &stru_1000C3D70);
  }
  unint64_t v0 = (void *)qword_1000DE940;

  return v0;
}

void sub_100042DB0(id a1)
{
  id v1 = (void *)qword_1000DE940;
  qword_1000DE940 = (uint64_t)&off_1000CB538;
}

id sub_10004306C(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(a1 + 32)) {
    return [a2 finishWithNoResult];
  }
  else {
    return [a2 cancel];
  }
}

void sub_1000432F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100043318(id a1, NSNull *a2, NSError *a3)
{
}

void sub_100043324(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = +[NAScheduler mainThreadScheduler];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100043418;
  v9[3] = &unk_1000C2398;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  id v8 = [v7 afterDelay:v9 performBlock:0.5];

  objc_destroyWeak(&v10);
}

void sub_100043404(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100043418(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained itemManager];
  id v3 = [v2 home];
  id v4 = [v3 hf_characteristicValueManager];
  uint64_t v5 = [v4 _debug_totalNumberOfIssuedBatchReadRequests];

  if (v5 >= 2)
  {
    id v6 = HFLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100083828(v5, v6, v7, v8, v9, v10, v11, v12);
    }
  }
}

void sub_100043770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004379C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = [WeakRetained presentedViewController];
  if (v3) {
    [WeakRetained dismissPresentedViewControllersAnimated:0];
  }
  else {
  id v4 = +[NAFuture futureWithNoResult];
  }

  uint64_t v5 = [WeakRetained _navigationControllerForMainTabIdentifier:*(void *)(a1 + 32)];
  if (!v5)
  {
    id v6 = HFLogForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100083894(a1 + 32, v6, v7, v8, v9, v10, v11, v12);
    }

    uint64_t v5 = [WeakRetained _navigationControllerForMainTabIdentifier:HFHomeAppTabIdentifierHome];
  }
  unsigned int v13 = HFLogForCategory();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v14 = [WeakRetained presentedViewController];
    *(_DWORD *)buf = 136315650;
    CFStringRef v22 = "-[HOMainTabBarController selectTabWithIdentifier:]_block_invoke";
    __int16 v23 = 2112;
    id v24 = v14;
    __int16 v25 = 2112;
    id v26 = v5;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s, loadTabsFuture completed, presentedViewController: %@, nextNavigationController: %@", buf, 0x20u);
  }
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_1000439C0;
  v17[3] = &unk_1000C3E68;
  id v18 = v5;
  id v19 = WeakRetained;
  id v20 = *(id *)(a1 + 40);
  id v15 = v5;
  id v16 = [v4 addCompletionBlock:v17];
}

void sub_1000439C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = HFLogForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    __int16 v14 = "-[HOMainTabBarController selectTabWithIdentifier:]_block_invoke";
    __int16 v15 = 2112;
    id v16 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s, dismissalFuture completion.  error: %@", buf, 0x16u);
  }

  id v6 = [*(id *)(a1 + 32) hu_preloadContent];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100043B34;
  v10[3] = &unk_1000C3E40;
  int8x16_t v9 = *(int8x16_t *)(a1 + 32);
  id v7 = (id)v9.i64[0];
  int8x16_t v11 = vextq_s8(v9, v9, 8uLL);
  id v12 = *(id *)(a1 + 48);
  id v8 = [v6 addCompletionBlock:v10];
}

void sub_100043B34(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = HFLogForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 136315394;
    int8x16_t v9 = "-[HOMainTabBarController selectTabWithIdentifier:]_block_invoke";
    __int16 v10 = 2112;
    id v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s, preloadContent future completion.  error: %@", (uint8_t *)&v8, 0x16u);
  }

  id v6 = [*(id *)(a1 + 32) selectedViewController];
  id v7 = *(void **)(a1 + 40);

  if (v6 != v7) {
    [*(id *)(a1 + 32) _setSelectedViewController:*(void *)(a1 + 40) persistSelection:1];
  }
  [*(id *)(a1 + 48) finishWithResult:*(void *)(a1 + 40)];
}

void sub_100043D20(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_100043D44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_opt_class();
  id v3 = [WeakRetained selectedViewController];
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  id v6 = [v5 popToRootViewControllerAnimated:*(unsigned __int8 *)(a1 + 40)];
  id v7 = +[NAFuture futureWithNoResult];

  return v7;
}

void sub_100043F40(uint64_t a1)
{
  uint64_t v2 = +[HMFScheduler mainScheduler];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100043FF0;
  v4[3] = &unk_1000C1CF8;
  id v5 = *(id *)(a1 + 32);
  id v3 = [v2 performWithQualityOfService:17 block:v4];
}

id sub_100043FF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishWithNoResult];
}

id sub_10004477C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _navigationControllerForItem:a2];
}

id sub_100044858(uint64_t a1, void *a2)
{
  id v3 = [a2 latestResults];
  id v4 = [v3 objectForKeyedSubscript:@"HOResultMainTabIdentifierKey"];
  id v5 = [v4 isEqualToString:*(void *)(a1 + 32)];

  return v5;
}

id sub_1000449A0(uint64_t a1, void *a2)
{
  id v3 = [a2 latestResults];
  id v4 = [v3 objectForKeyedSubscript:@"HOResultMainTabIdentifierKey"];
  id v5 = [v4 isEqualToString:*(void *)(a1 + 32)];

  return v5;
}

id sub_100044EC4(id a1, HFItem *a2)
{
  uint64_t v2 = [(HFItem *)a2 latestResults];
  id v3 = [v2 objectForKeyedSubscript:@"HOResultMainTabIdentifierKey"];

  return v3;
}

void sub_1000460E8(uint64_t a1)
{
  id v3 = +[UIBlurEffect effectWithStyle:6];
  uint64_t v2 = [*(id *)(a1 + 32) blurView];
  [v2 setEffect:v3];
}

void sub_100046224(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) blurView];
  [v1 setEffect:0];
}

void sub_100046400(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) presentedViewController];
  id v3 = [v2 view];
  [v3 frame];
  double v5 = v4;
  double v7 = v6;

  int v8 = [*(id *)(a1 + 32) presentedViewController];
  int8x16_t v9 = [v8 view];
  [v9 frame];
  double v11 = v10;

  id v12 = [*(id *)(a1 + 32) presentedViewController];
  unsigned int v13 = [v12 view];
  [v13 setFrame:v11, 40.0, v5, v7];

  id v15 = [*(id *)(a1 + 32) presentedViewController];
  __int16 v14 = [v15 view];
  [v14 layoutIfNeeded];
}

id sub_100046738(uint64_t a1)
{
  return [*(id *)(a1 + 32) pushViewController:*(void *)(a1 + 40) animated:0];
}

BOOL sub_10004694C(id a1, HMIncomingHomeInvitation *a2)
{
  uint64_t v2 = a2;
  BOOL v3 = [(HMIncomingHomeInvitation *)v2 invitationState] == (id)2
    || [(HMIncomingHomeInvitation *)v2 invitationState] == (id)5;

  return v3;
}

id sub_100046EBC(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[NSBundle mainBundle];
  BOOL v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    double v5 = sub_10004B000();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        double v11 = +[NSBundle mainBundle];
        id v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      id v12 = @"_";
    }

    BOOL v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  __int16 v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    __int16 v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_100048588(uint64_t a1, void *a2)
{
  BOOL v3 = [a2 homeUUID];
  id v4 = [*(id *)(a1 + 32) uuid];
  id v5 = [v3 isEqual:v4];

  return v5;
}

id sub_100048718(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 uniqueIdentifier];
  id v5 = [v3 uniqueIdentifier];

  id v6 = [v4 isEqual:v5];
  return v6;
}

id sub_100048E84(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 uniqueIdentifier];
  id v5 = [v3 uniqueIdentifier];

  id v6 = [v4 isEqual:v5];
  return v6;
}

void sub_100049B58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location)
{
  objc_destroyWeak(v13);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v14 - 144));
  _Unwind_Resume(a1);
}

void sub_100049BEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = HFLogForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = NSStringFromSelector(*(SEL *)(a1 + 56));
    id v7 = [v3 title];
    int v23 = 138412802;
    id v24 = WeakRetained;
    __int16 v25 = 2112;
    id v26 = v6;
    __int16 v27 = 2112;
    id v28 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped %@ on the alert", (uint8_t *)&v23, 0x20u);
  }
  uint64_t v8 = [*(id *)(a1 + 32) invitation];
  unsigned int v9 = [v8 isInviteeRestrictedGuest];

  if (v9)
  {
    uint64_t v10 = [*(id *)(a1 + 32) invitation];
    double v11 = [v10 restrictedGuestSchedule];

    id v12 = HFLogForCategory();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
    if (v11)
    {
      if (v13)
      {
        uint64_t v14 = [*(id *)(a1 + 32) invitation];
        id v15 = [v14 hf_prettyDescription];
        int v23 = 136315394;
        id v24 = "-[HOLocationListViewController invitationCell:didRespondToInvitationWithResponse:]_block_invoke";
        __int16 v25 = 2112;
        id v26 = v15;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "(%s) Presenting invitation flow starting from 'Guest Access' screen. Invitation = %@", (uint8_t *)&v23, 0x16u);
      }
      id v16 = [[HOOnboardingInvitationRestrictedGuestAccessViewController alloc] initWithIncomingInvitation:*(void *)(a1 + 40) invitationHelper:*(void *)(a1 + 32) incomingInvitationDelegate:WeakRetained];
      [(HOOnboardingInvitationRestrictedGuestAccessViewController *)v16 setDelegate:WeakRetained];
      [(HOOnboardingInvitationRestrictedGuestAccessViewController *)v16 setDidUserTriggerOnboardingDismissal:0];
    }
    else
    {
      if (v13)
      {
        long long v19 = [*(id *)(a1 + 32) invitation];
        long long v20 = [v19 hf_prettyDescription];
        int v23 = 136315394;
        id v24 = "-[HOLocationListViewController invitationCell:didRespondToInvitationWithResponse:]_block_invoke";
        __int16 v25 = 2112;
        id v26 = v20;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "(%s) Presenting invitation flow starting from 'Setting Up <Home Name>' screen. Invitation = %@", (uint8_t *)&v23, 0x16u);
      }
      id v16 = [[HOOnboardingInvitationJoiningHomeViewController alloc] initWithIncomingInvitation:*(void *)(a1 + 40) invitationHelper:*(void *)(a1 + 32) incomingInvitationDelegate:WeakRetained];
      [(HOOnboardingInvitationRestrictedGuestAccessViewController *)v16 setDelegate:WeakRetained];
    }
    id v21 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v16];
    id v22 = [WeakRetained hu_presentPreloadableViewController:v21 animated:1];
  }
  else
  {
    id v16 = (HOOnboardingInvitationRestrictedGuestAccessViewController *)[objc_alloc((Class)HUIncomingInvitationResponseController) initWithDelegate:WeakRetained invitation:*(void *)(a1 + 40)];
    long long v17 = [WeakRetained invitationResponseControllersByHomeUUID];
    long long v18 = [*(id *)(a1 + 40) homeUUID];
    [v17 setObject:v16 forKeyedSubscript:v18];

    [(HOOnboardingInvitationRestrictedGuestAccessViewController *)v16 respondToInvitationWithResponse:*(void *)(a1 + 64)];
  }
}

void sub_100049F38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = HFLogForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = NSStringFromSelector(*(SEL *)(a1 + 48));
    int v5 = 138412546;
    id v6 = WeakRetained;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@:%@ User tapped Cancel on the alert", (uint8_t *)&v5, 0x16u);
  }
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_10004A028(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v5 = HFLogForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v3 title];
    int v10 = 136315394;
    double v11 = "-[HOLocationListViewController invitationCell:didRespondToInvitationWithResponse:]_block_invoke";
    __int16 v12 = 2112;
    BOOL v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "(%s) User tapped delete and report button '%@' from alert", (uint8_t *)&v10, 0x16u);
  }
  id v7 = [objc_alloc((Class)HUIncomingInvitationResponseController) initWithDelegate:WeakRetained invitation:*(void *)(a1 + 32)];
  uint64_t v8 = [WeakRetained invitationResponseControllersByHomeUUID];
  unsigned int v9 = [*(id *)(a1 + 32) homeUUID];
  [v8 setObject:v7 forKeyedSubscript:v9];

  [v7 respondToInvitationWithResponse:*(void *)(a1 + 48)];
}

void sub_10004A188(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = HFLogForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = [v3 title];
    int v6 = 136315394;
    id v7 = "-[HOLocationListViewController invitationCell:didRespondToInvitationWithResponse:]_block_invoke";
    __int16 v8 = 2112;
    unsigned int v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "(%s) User tapped cancel button '%@' from alert", (uint8_t *)&v6, 0x16u);
  }
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_10004A418(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = +[HFErrorHandler sharedHandler];
    [v2 handleError:*(void *)(a1 + 32) operationType:HFOperationAcceptInvitation options:0 retryBlock:0 cancelBlock:0];
  }
}

id sub_10004A878(id a1, HMIncomingHomeInvitation *a2)
{
  id v2 = [(HMIncomingHomeInvitation *)a2 identifier];
  id v3 = [v2 UUIDString];

  return v3;
}

id sub_10004AA20(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) isEqualToString:a2];
}

id sub_10004AA80(id a1, HMIncomingHomeInvitation *a2)
{
  id v2 = [(HMIncomingHomeInvitation *)a2 identifier];
  id v3 = [v2 UUIDString];

  return v3;
}

void sub_10004ACAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004ACD0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  unsigned int v4 = [WeakRetained locationSensingAvailable];
  id v5 = [v3 BOOLValue];

  int v6 = WeakRetained;
  if (v4 != v5)
  {
    if ([WeakRetained tableViewReady])
    {
      if (v4)
      {
        id v7 = +[NSIndexSet indexSetWithIndex:](NSIndexSet, "indexSetWithIndex:", [WeakRetained _indexOfSectionWithIdentifier:@"HOLocationListHomeSensingSectionIdentifier"]);
        [WeakRetained setLocationSensingAvailable:0];
        __int16 v8 = [WeakRetained tableView];
        [v8 deleteSections:v7 withRowAnimation:100];
      }
      else
      {
        id v7 = +[NSIndexSet indexSetWithIndex:](NSIndexSet, "indexSetWithIndex:", (char *)[WeakRetained _indexOfSectionWithIdentifier:@"HOLocationListLocationsSectionIdentifier"]+ 1);
        [WeakRetained setLocationSensingAvailable:1];
        __int16 v8 = [WeakRetained tableView];
        [v8 insertSections:v7 withRowAnimation:100];
      }
    }
    else
    {
      [WeakRetained setLocationSensingAvailable:v5];
      id v7 = [WeakRetained tableView];
      [v7 reloadData];
    }

    int v6 = WeakRetained;
  }
}

id sub_10004B000()
{
  if (qword_1000DE970 != -1) {
    dispatch_once(&qword_1000DE970, &stru_1000C4148);
  }
  unint64_t v0 = (void *)qword_1000DE978;

  return v0;
}

void sub_10004B054(id a1)
{
  id v1 = (void *)qword_1000DE978;
  qword_1000DE978 = (uint64_t)&off_1000CB568;
}

id sub_10004B478(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = sub_10004BEA0();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        double v11 = +[NSBundle mainBundle];
        __int16 v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      __int16 v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  uint64_t v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    uint64_t v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_10004BEA0()
{
  if (qword_1000DE980 != -1) {
    dispatch_once(&qword_1000DE980, &stru_1000C4168);
  }
  unint64_t v0 = (void *)qword_1000DE988;

  return v0;
}

void sub_10004BEF4(id a1)
{
  id v1 = (void *)qword_1000DE988;
  qword_1000DE988 = (uint64_t)&off_1000CB580;
}

void sub_10004CD40(uint64_t a1, char a2, void *a3)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  id v5[2] = sub_10004ECE8;
  v5[3] = &unk_1000C4218;
  id v6 = a3;
  BOOL v7 = (a2 & 2) != 0;
  id v4 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

id sub_10004D5A8(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = sub_10004EC7C();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        double v11 = +[NSBundle mainBundle];
        __int16 v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      __int16 v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  uint64_t v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    uint64_t v14 = v1;
  }
  id v15 = v14;

  return v15;
}

void sub_10004E234(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = HFLogForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT)) {
      sub_1000839E8((uint64_t)v2, v3);
    }

    id v4 = +[HFOpenURLRouter sharedInstance];
    id v5 = +[NSURL hf_openiCloudPreferencesURL];
    id v6 = [v4 openURL:v5];
  }
}

void sub_10004E2EC(id a1)
{
  id v1 = +[UIApplication sharedApplication];
  [v1 terminateWithSuccess];
}

id sub_10004E584(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _resetButtonConfirmed];
}

void sub_10004E634(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = HFLogForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      sub_100083A60(v3, v4);
    }

    id v5 = sub_10004D5A8(@"HODataSyncingAlertTitle");
    id v6 = sub_10004D5A8(@"HODataSyncingResetBodyGeneric");
    id v7 = +[UIAlertController alertControllerWithTitle:v5 message:v6 preferredStyle:1];

    uint64_t v8 = sub_10004D5A8(@"HODataSyncingAlertOKButton");
    uint64_t v9 = +[UIAlertAction actionWithTitle:v8 style:0 handler:0];
    [v7 addAction:v9];

    uint64_t v10 = [*(id *)(a1 + 32) navigationController];
    [v10 presentViewController:v7 animated:1 completion:0];
  }
}

void sub_10004E8EC(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v7 = HFLogForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100083B64();
    }
    goto LABEL_7;
  }
  id v6 = HFLogForCategory();
  id v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100083AF8();
    }
LABEL_7:

    goto LABEL_8;
  }
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CDPUIDeviceToDeviceEncryption succeed in repairing.", v8, 2u);
  }

  [*(id *)(a1 + 40) dismissViewControllerAnimated:1 completion:0];
LABEL_8:
}

id sub_10004EC7C()
{
  if (qword_1000DE990 != -1) {
    dispatch_once(&qword_1000DE990, &stru_1000C41F0);
  }
  unint64_t v0 = (void *)qword_1000DE998;

  return v0;
}

void sub_10004ECD0(id a1)
{
  id v1 = (void *)qword_1000DE998;
  qword_1000DE998 = (uint64_t)&off_1000CB598;
}

id sub_10004ECE8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setICloudURLIsReachable:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10004F0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
}

void sub_10004F13C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (*(unsigned char *)(a1 + 40))
  {
    id v3 = WeakRetained;
    [WeakRetained openSenderURL];
    id WeakRetained = v3;
  }
}

void sub_10004F4C8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id v3 = HFLogForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_100083DBC(a1, v3);
    }
  }
}

id sub_10004F8E0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) setInstallProfileViewController:0];
  if (*(unsigned char *)(a1 + 40))
  {
    id v3 = *(void **)(a1 + 32);
    return [v3 openSenderURL];
  }
  return result;
}

id sub_10004F9FC()
{
  if (qword_1000DE9A0 != -1) {
    dispatch_once(&qword_1000DE9A0, &stru_1000C4260);
  }
  unint64_t v0 = (void *)qword_1000DE9A8;

  return v0;
}

void sub_10004FA50(id a1)
{
  id v1 = (void *)qword_1000DE9A8;
  qword_1000DE9A8 = (uint64_t)&off_1000CB5B0;
}

void sub_10004FA84(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

id sub_100050114(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = sub_100051CA4();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        double v11 = +[NSBundle mainBundle];
        __int16 v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      __int16 v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  uint64_t v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    uint64_t v14 = v1;
  }
  id v15 = v14;

  return v15;
}

void sub_100050658(uint64_t a1, void *a2)
{
  [a2 na_filter:&stru_1000C42A0];
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  id v3 = [v6 count];
  id v4 = *(void **)(a1 + 32);
  if ((unint64_t)v3 < 2)
  {
    id v5 = [v6 firstObject];
    [v4 _handleProfileInstallationForHome:v5];
  }
  else
  {
    [v4 _presentHomeSelectionAlertWithHomes:v6];
  }
}

BOOL sub_1000506EC(id a1, HMHome *a2)
{
  id v2 = a2;
  if ([(HMHome *)v2 hf_isCurrentLocationHome]) {
    unsigned __int8 v3 = [(HMHome *)v2 hf_hasHomePods];
  }
  else {
    unsigned __int8 v3 = 0;
  }
  unsigned __int8 v4 = [(HMHome *)v2 hf_allHomePodsSupportRemoteProfileInstallation];
  char v5 = (v3 | v4) & [(HMHome *)v2 hf_currentUserIsOwner];

  return v5;
}

void sub_100050884(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100050964;
  v10[3] = &unk_1000C42C8;
  id v11 = a3;
  id v6 = *(id *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  id v12 = v6;
  uint64_t v13 = v7;
  id v14 = v5;
  id v8 = v5;
  id v9 = v11;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

id sub_100050964(uint64_t a1)
{
  id v2 = (uint64_t *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned __int8 v4 = HFLogForCategory();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100083F60(a1, v2, v5);
    }

    return [*(id *)(a1 + 48) _presentErrorAlert];
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 56);
      id v8 = [*(id *)(a1 + 40) hf_prettyDescription];
      int v9 = 138412546;
      uint64_t v10 = v7;
      __int16 v11 = 2112;
      id v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Profile: %@ successfully installed on HomePod: %@", (uint8_t *)&v9, 0x16u);
    }
    return [*(id *)(a1 + 48) _presentCompletionAlert];
  }
}

void sub_100050B44(id *a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = [a1[4] profileData];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100050C20;
  v8[3] = &unk_1000C42F0;
  id v9 = a1[5];
  id v10 = v3;
  id v5 = a1[6];
  id v6 = a1[4];
  id v11 = v5;
  id v12 = v6;
  id v7 = v3;
  [v7 installManagedConfigurationProfileWithData:v4 completionHandler:v8];
}

void sub_100050C20(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3) {
    uint64_t v6 = *(void *)(a1 + 40);
  }
  else {
    uint64_t v6 = 0;
  }
  [*(id *)(a1 + 32) na_safeAddObject:v6];
  id v7 = [*(id *)(a1 + 48) lastObject];
  id v8 = *(void **)(a1 + 40);

  if (v7 == v8)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100050D3C;
    block[3] = &unk_1000C2098;
    id v12 = *(id *)(a1 + 32);
    id v13 = *(id *)(a1 + 48);
    id v9 = *(id *)(a1 + 40);
    uint64_t v10 = *(void *)(a1 + 56);
    id v14 = v9;
    uint64_t v15 = v10;
    id v16 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_100050D3C(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  if ([*(id *)(a1 + 32) count])
  {
    id v3 = [*(id *)(a1 + 32) count];
    id v4 = [*(id *)(a1 + 40) count];
    id v5 = HFLogForCategory();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);
    if (v3 == v4)
    {
      if (v6) {
        sub_100084010(a1, v5);
      }

      return [*(id *)(a1 + 56) _presentErrorAlert];
    }
    else
    {
      if (v6) {
        sub_1000840C4(v2, v5);
      }

      return [*(id *)(a1 + 56) _presentPartialErrorAlertForHomePods:*(void *)(a1 + 32)];
    }
  }
  else
  {
    id v8 = HFLogForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 64);
      uint64_t v10 = [*(id *)(a1 + 48) home];
      id v11 = [v10 hf_prettyDescription];
      int v12 = 138412546;
      uint64_t v13 = v9;
      __int16 v14 = 2112;
      uint64_t v15 = v11;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Profile: %@ successfully installed on all HomePods in home: %@", (uint8_t *)&v12, 0x16u);
    }
    return [*(id *)(a1 + 56) _presentCompletionAlert];
  }
}

void sub_100050FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100051028(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v3)
  {
    id v5 = HFLogForCategory();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_100084174();
    }

    BOOL v6 = sub_100050114(@"HOProfileHomePodSearchFailedTitle");
    id v7 = sub_100050114(@"HOProfileHomePodSearchFailedMessage");
    [WeakRetained showProfileInstallationAlertViewWithTitle:v6 message:v7 shouldGoBackToSenderURL:1];
  }
}

int64_t sub_10005122C(id a1, HMHome *a2, HMHome *a3)
{
  id v4 = a3;
  id v5 = [(HMHome *)a2 name];
  BOOL v6 = [(HMHome *)v4 name];

  id v7 = [v5 localizedCaseInsensitiveCompare:v6];
  return (int64_t)v7;
}

void sub_10005129C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 name];
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  uint64_t v9 = sub_100051378;
  uint64_t v10 = &unk_1000C3B68;
  uint64_t v11 = *(void *)(a1 + 32);
  id v12 = v3;
  id v5 = v3;
  BOOL v6 = +[UIAlertAction actionWithTitle:v4 style:0 handler:&v7];

  [*(id *)(a1 + 40) addAction:v6, v7, v8, v9, v10, v11];
}

id sub_100051378(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleProfileInstallationForHome:*(void *)(a1 + 40)];
}

id sub_10005158C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _installProfileForHomePods:*(void *)(a1 + 40)];
}

int64_t sub_100051598(id a1, HMAccessory *a2, HMAccessory *a3)
{
  id v4 = a3;
  id v5 = [(HMAccessory *)a2 name];
  BOOL v6 = [(HMAccessory *)v4 name];

  id v7 = [v5 localizedCaseInsensitiveCompare:v6];
  return (int64_t)v7;
}

void sub_100051608(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 name];
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  uint64_t v9 = sub_1000516E4;
  uint64_t v10 = &unk_1000C3B68;
  uint64_t v11 = *(void *)(a1 + 32);
  id v12 = v3;
  id v5 = v3;
  BOOL v6 = +[UIAlertAction actionWithTitle:v4 style:0 handler:&v7];

  [*(id *)(a1 + 40) addAction:v6, v7, v8, v9, v10, v11];
}

id sub_1000516E4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _installProfileForHomePod:*(void *)(a1 + 40)];
}

id sub_100051818(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissInstallProfileViewControllerWithAnimation:1 shouldOpenSenderURL:1];
}

id sub_100051968(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissInstallProfileViewControllerWithAnimation:1 shouldOpenSenderURL:1];
}

id sub_100051BBC(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissInstallProfileViewControllerWithAnimation:1 shouldOpenSenderURL:1];
}

id sub_100051C94(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissInstallProfileViewControllerWithAnimation:1 shouldOpenSenderURL:1];
}

id sub_100051CA4()
{
  if (qword_1000DE9B0 != -1) {
    dispatch_once(&qword_1000DE9B0, &stru_1000C43E8);
  }
  unint64_t v0 = (void *)qword_1000DE9B8;

  return v0;
}

void sub_100051CF8(id a1)
{
  id v1 = (void *)qword_1000DE9B8;
  qword_1000DE9B8 = (uint64_t)&off_1000CB5C8;
}

void sub_100051D20(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

id sub_100052B14(uint64_t a1, void *a2)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v3 = a2;
  id v4 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v17;
    while (2)
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        uint64_t v9 = [v8 name:v16];
        uint64_t v10 = [*(id *)(a1 + 32) entityName];
        uint64_t v11 = [v10 description];
        unsigned __int8 v12 = [v9 isEqualToString:v11];

        if (v12)
        {
          __int16 v14 = +[NAFuture futureWithResult:v8];
          uint64_t v13 = v3;
          goto LABEL_11;
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }

  uint64_t v13 = +[NSError hf_errorWithCode:30];
  __int16 v14 = +[NAFuture futureWithError:v13];
LABEL_11:

  return v14;
}

id sub_100053238(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:@"_" table:@"HOLocalizable"];

  if ([@"_" isEqualToString:v3])
  {
    id v4 = v1;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = sub_1000536C8();
    id v6 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v18;
LABEL_4:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void *)(*((void *)&v17 + 1) + 8 * v9);
        uint64_t v11 = +[NSBundle mainBundle];
        unsigned __int8 v12 = [v11 localizedStringForKey:v4 value:v4 table:v10];

        if (![(__CFString *)v12 isEqualToString:v4]) {
          break;
        }

        if (v7 == (id)++v9)
        {
          id v7 = [v5 countByEnumeratingWithState:&v17 objects:v21 count:16];
          if (v7) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
      unsigned __int8 v12 = @"_";
    }

    id v3 = v12;
  }
  unsigned int v13 = [@"_" isEqualToString:v3];
  __int16 v14 = v3;
  if (v13)
  {
    NSLog(@"Sensitive key '%@' not found!", v1);
    __int16 v14 = v1;
  }
  id v15 = v14;

  return v15;
}

id sub_1000536C8()
{
  if (qword_1000DE9C0 != -1) {
    dispatch_once(&qword_1000DE9C0, &stru_1000C4560);
  }
  unint64_t v0 = (void *)qword_1000DE9C8;

  return v0;
}

void sub_10005371C(id a1)
{
  id v1 = (void *)qword_1000DE9C8;
  qword_1000DE9C8 = (uint64_t)&off_1000CB5E0;
}

void sub_100053B10(uint64_t a1, void *a2)
{
}

void sub_100053B18(uint64_t a1, void *a2)
{
}

void sub_100053B20(void *a1, uint64_t a2)
{
  id v5 = (void *)swift_allocObject();
  v5[3] = 0;
  void v5[4] = 0;
  id v5[2] = v2;
  id v6 = v2;
  id v7 = sub_10005467C(1, (uint64_t)sub_10006A6C4, (uint64_t)v5);
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  *(unsigned char *)(v8 + 24) = 5;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = a1;
  id v21 = sub_100064DBC;
  uint64_t v22 = v8;
  long long v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  long long v19 = sub_100053B10;
  long long v20 = &unk_1000C5100;
  uint64_t v9 = _Block_copy(&v17);
  id v10 = v6;
  swift_bridgeObjectRetain();
  id v11 = a1;
  swift_release();
  id v12 = [v7 addSuccessBlock:v9];
  _Block_release(v9);

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(unsigned char *)(v13 + 24) = 5;
  id v21 = (void (*)(void *))sub_10006AACC;
  uint64_t v22 = v13;
  long long v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  long long v19 = sub_100053B18;
  long long v20 = &unk_1000C5150;
  __int16 v14 = _Block_copy(&v17);
  id v15 = v11;
  swift_release();
  id v16 = [v12 addFailureBlock:v14];
  _Block_release(v14);
}

void sub_100053D58(void *a1, uint64_t a2)
{
  id v5 = [self lightAccessoryTypeGroup];
  id v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  void v6[4] = v5;
  id v7 = v5;
  id v8 = sub_10005467C(1, (uint64_t)sub_100064F64, (uint64_t)v6);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  *(unsigned char *)(v9 + 24) = 11;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a1;
  uint64_t v22 = sub_10006A700;
  uint64_t v23 = v9;
  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  long long v20 = sub_100053B10;
  id v21 = &unk_1000C5790;
  id v10 = _Block_copy(&v18);
  id v11 = v2;
  swift_bridgeObjectRetain();
  id v12 = a1;
  swift_release();
  id v13 = [v8 addSuccessBlock:v10];
  _Block_release(v10);

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(unsigned char *)(v14 + 24) = 11;
  uint64_t v22 = sub_10006AACC;
  uint64_t v23 = v14;
  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  long long v20 = sub_100053B18;
  id v21 = &unk_1000C57E0;
  id v15 = _Block_copy(&v18);
  id v16 = v12;
  swift_release();
  id v17 = [v13 addFailureBlock:v15];
  _Block_release(v15);
}

id sub_100053FAC(void *a1, void *a2, char a3, void *a4)
{
  id v8 = [a1 itemManager];
  id v9 = [v8 home];

  if (v9)
  {
    sub_10007609C(a3);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a2 startedTest:v10];

    id v11 = [a4 showHome:v9];
  }
  else
  {
    sub_100064C18();
    swift_allocError();
    uint64_t v13 = v12;
    id v14 = [a1 itemManager];
    uint64_t v15 = sub_10000AE6C(0, (unint64_t *)&unk_1000DD820);
    *(void *)uint64_t v13 = v14;
    *(void *)(v13 + 24) = v15;
    *(void *)(v13 + 32) = 1701670760;
    *(void *)(v13 + 40) = 0xE400000000000000;
    *(unsigned char *)(v13 + 48) = 3;
    id v9 = (id)_convertErrorToNSError(_:)();
    id v11 = [self futureWithError:v9];
    swift_errorRelease();
  }

  return v11;
}

void sub_100054138(void *a1, char a2)
{
  sub_10007609C(a2);
  id v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedTest:v3];
}

void sub_1000541A4(void *a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  id v6 = sub_10005467C(1, (uint64_t)sub_100064E8C, v5);
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  *(unsigned char *)(v7 + 24) = 8;
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a1;
  long long v20 = sub_10006A700;
  uint64_t v21 = v7;
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_100053B10;
  uint64_t v19 = &unk_1000C5448;
  id v8 = _Block_copy(&v16);
  id v9 = v2;
  swift_bridgeObjectRetain();
  id v10 = a1;
  swift_release();
  id v11 = [v6 addSuccessBlock:v8];
  _Block_release(v8);

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(unsigned char *)(v12 + 24) = 8;
  long long v20 = sub_10006AACC;
  uint64_t v21 = v12;
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_100053B18;
  uint64_t v19 = &unk_1000C5498;
  uint64_t v13 = _Block_copy(&v16);
  id v14 = v10;
  swift_release();
  id v15 = [v11 addFailureBlock:v13];
  _Block_release(v13);
}

void sub_1000543C4(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  id v4 = sub_100079944(a1, a3, a4);
}

id sub_100054488(int a1, void *a2, id a3, void *a4, void (*a5)(id))
{
  id v10 = [a3 hf_activeRooms];
  sub_10000AE6C(0, &qword_1000DE210);
  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
  {
    id v21 = a4;
    unint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t)sub_10007D304(v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    id v13 = a4;
    swift_bridgeObjectRetain();
  }
  uint64_t v24 = v12;
  uint64_t v14 = a4;
  sub_100064790(&v24, (void *)v14);
  if (v5) {
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();

  uint64_t v14 = v24;
  if ((v24 & 0x8000000000000000) == 0 && (v24 & 0x4000000000000000) == 0)
  {
    if (*(void *)(v24 + 16)) {
      goto LABEL_8;
    }
LABEL_17:
    swift_release();
    id v17 = [a3 roomForEntireHome];
    id v16 = v17;
    if (!a5)
    {
LABEL_13:
      id v18 = [a2 _showRoom:v16 animated:1];
      if (v18)
      {
        id v19 = v18;

        return v19;
      }
      goto LABEL_21;
    }
LABEL_12:
    a5(v17);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v23) {
    goto LABEL_17;
  }
LABEL_8:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_11:
    id v16 = v15;
    id v17 = (id)swift_release();
    if (!a5) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (*(void *)(v14 + 16))
  {
    id v15 = *(id *)(v14 + 32);
    goto LABEL_11;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:

  id result = (id)swift_release();
  __break(1u);
  return result;
}

id sub_10005467C(char a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  id result = [v4 _selectAndFinishFirstReadForTabWithIdentifier:HFHomeAppTabIdentifierHome];
  if (result)
  {
    id v9 = result;
    uint64_t v23 = sub_10007CB3C;
    uint64_t v24 = 0;
    id v19 = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    id v21 = sub_100053D50;
    unint64_t v22 = &unk_1000C4E80;
    id v10 = _Block_copy(&v19);
    id v11 = [v9 flatMap:v10];
    _Block_release(v10);

    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v4;
    uint64_t v12[3] = a2;
    void v12[4] = a3;
    uint64_t v23 = (id (*)(void *))sub_10006A6F8;
    uint64_t v24 = v12;
    id v19 = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    id v21 = sub_100053D50;
    unint64_t v22 = &unk_1000C4ED0;
    id v13 = _Block_copy(&v19);
    id v14 = v4;
    swift_retain();
    swift_release();
    id v15 = [v11 flatMap:v13];
    _Block_release(v13);

    if (a1)
    {
      uint64_t v23 = sub_10005F3C8;
      uint64_t v24 = 0;
      id v19 = _NSConcreteStackBlock;
      uint64_t v20 = 1107296256;
      id v21 = sub_10005F640;
      unint64_t v22 = &unk_1000C4EF8;
      id v16 = _Block_copy(&v19);
      id v17 = v15;
      swift_release();
      id v18 = [v17 flatMap:v16];
      _Block_release(v16);

      return v18;
    }
    else
    {
      return v15;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000548EC(void *a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  uint64_t v6 = HFHomeAppTabIdentifierHome;
  id v7 = v2;
  id v8 = [v7 _selectAndFinishFirstReadForTabWithIdentifier:v6];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_100065084;
    *(void *)(v10 + 24) = v5;
    id v26 = (uint64_t (*)())sub_1000650D8;
    uint64_t v27 = v10;
    unint64_t v22 = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_100053D50;
    __int16 v25 = &unk_1000C5970;
    id v11 = _Block_copy(&v22);
    swift_retain();
    swift_release();
    id v12 = [v9 flatMap:v11];
    _Block_release(v11);
    swift_release();

    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v7;
    *(unsigned char *)(v13 + 24) = 13;
    *(void *)(v13 + 32) = a2;
    *(void *)(v13 + 40) = a1;
    id v26 = (uint64_t (*)())sub_1000650E4;
    uint64_t v27 = v13;
    unint64_t v22 = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_100053B10;
    __int16 v25 = &unk_1000C59C0;
    id v14 = _Block_copy(&v22);
    id v15 = v7;
    swift_bridgeObjectRetain();
    id v16 = a1;
    swift_release();
    id v17 = [v12 addSuccessBlock:v14];
    _Block_release(v14);

    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(unsigned char *)(v18 + 24) = 13;
    id v26 = sub_10006AACC;
    uint64_t v27 = v18;
    unint64_t v22 = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_100053B18;
    __int16 v25 = &unk_1000C5A10;
    id v19 = _Block_copy(&v22);
    id v20 = v16;
    swift_release();
    id v21 = [v17 addFailureBlock:v19];
    _Block_release(v19);
  }
  else
  {
    __break(1u);
  }
}

id sub_100054BDC(void *a1)
{
  uint64_t v4 = sub_100064830(a1);
  if (!v2)
  {
    uint64_t v5 = (void *)v4;
    id v6 = [objc_allocWithZone((Class)HFActionSetBuilder) initWithExistingObject:v4 inHome:a1];
    _s23AccessoryPickerDelegateCMa();
    swift_allocObject();
    objc_allocWithZone((Class)type metadata accessor for ActionSetAccessoryPickerViewController());
    id v7 = v6;
    swift_retain();
    id v1 = (id)ActionSetAccessoryPickerViewController.init(actionSetBuilder:delegate:)();
    [v1 setModalPresentationStyle:2];

    swift_release();
  }
  return v1;
}

void sub_100054CBC(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  type metadata accessor for ActionSetAccessoryPickerViewController();
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = a1;
    id v10 = [v8 collectionView];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = sub_10007609C(a3);
      id v18 = sub_100079A84(v12, v13, v11, a4, 0);
      swift_bridgeObjectRelease();
      id v17 = [v18 asGeneric];

      return;
    }
    sub_100064C18();
    uint64_t v14 = swift_allocError();
    *(void *)uint64_t v16 = 0xD000000000000035;
    *(void *)(v16 + 8) = 0x800000010009C1D0;
    *(unsigned char *)(v16 + 48) = 4;
    swift_willThrow();
  }
  else
  {
    sub_100064C18();
    uint64_t v14 = swift_allocError();
    *(void *)uint64_t v15 = 0xD000000000000036;
    *(void *)(v15 + 8) = 0x800000010009C190;
    *(unsigned char *)(v15 + 48) = 4;
    swift_willThrow();
  }
  swift_errorRetain();
  sub_100075F28(a3, v14);
  swift_errorRelease();

  swift_errorRelease();
}

void sub_100054EC8(void *a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  uint64_t v6 = HFHomeAppTabIdentifierHome;
  id v7 = v2;
  id v8 = [v7 _selectAndFinishFirstReadForTabWithIdentifier:v6];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_1000651F0;
    *(void *)(v10 + 24) = v5;
    id v26 = (void (*)(void *))sub_10006AAD8;
    uint64_t v27 = v10;
    unint64_t v22 = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_100053D50;
    __int16 v25 = &unk_1000C5B78;
    id v11 = _Block_copy(&v22);
    swift_retain();
    swift_release();
    id v12 = [v9 flatMap:v11];
    _Block_release(v11);
    swift_release();

    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v7;
    *(unsigned char *)(v13 + 24) = 14;
    *(void *)(v13 + 32) = a2;
    *(void *)(v13 + 40) = a1;
    id v26 = sub_100065258;
    uint64_t v27 = v13;
    unint64_t v22 = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_100053B10;
    __int16 v25 = &unk_1000C5BC8;
    uint64_t v14 = _Block_copy(&v22);
    id v15 = v7;
    swift_bridgeObjectRetain();
    id v16 = a1;
    swift_release();
    id v17 = [v12 addSuccessBlock:v14];
    _Block_release(v14);

    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(unsigned char *)(v18 + 24) = 14;
    id v26 = (void (*)(void *))sub_10006AACC;
    uint64_t v27 = v18;
    unint64_t v22 = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    uint64_t v24 = sub_100053B18;
    __int16 v25 = &unk_1000C5C18;
    id v19 = _Block_copy(&v22);
    id v20 = v16;
    swift_release();
    id v21 = [v17 addFailureBlock:v19];
    _Block_release(v19);
  }
  else
  {
    __break(1u);
  }
}

id sub_1000551B8(void *a1)
{
  uint64_t v4 = sub_100064830(a1);
  if (!v1)
  {
    uint64_t v5 = (void *)v4;
    id v6 = [objc_allocWithZone((Class)HFActionSetBuilder) initWithExistingObject:v4 inHome:a1];
    id v2 = [objc_allocWithZone((Class)HUSceneActionEditorViewController) initWithActionSetBuilder:v6 mode:0];
    [v2 setModalPresentationStyle:2];
  }
  return v2;
}

void sub_100055260(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = a1;
    id v10 = [v8 tableView];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = sub_10007609C(a3);
      id v24 = sub_100079A84(v12, v13, v11, a4, 0);
      swift_bridgeObjectRelease();
      id v23 = [v24 asGeneric];

      return;
    }
    sub_100064C18();
    uint64_t v14 = swift_allocError();
    *(void *)uint64_t v22 = 0x656956656C626174;
    *(void *)(v22 + 8) = 0xE900000000000077;
    *(void *)(v22 + 16) = v8;
    *(unsigned char *)(v22 + 48) = 0;
  }
  else
  {
    sub_100064C18();
    uint64_t v14 = swift_allocError();
    uint64_t v16 = v15;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    id v17 = [a1 description];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v20 = v19;

    v21._countAndFlagsBits = v18;
    v21._object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v16 = 0xD00000000000002ELL;
    *(void *)(v16 + 8) = 0x800000010009C260;
    *(unsigned char *)(v16 + 48) = 4;
  }
  swift_willThrow();
  swift_errorRetain();
  sub_100075F28(a3, v14);
  swift_errorRelease();

  swift_errorRelease();
}

BOOL sub_1000554D0(id *a1, void **a2)
{
  id v2 = *a1;
  id v3 = *a2;
  id v4 = [*a1 hf_affectedServices];
  sub_10000AE6C(0, &qword_1000DD830);
  sub_100064D08(&qword_1000DD838, &qword_1000DD830);
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v5 & 0xC000000000000001) != 0) {
    uint64_t v6 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v6 = *(void *)(v5 + 16);
  }
  swift_bridgeObjectRelease();
  id v7 = [v3 hf_affectedServices];
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v8 & 0xC000000000000001) != 0) {
    uint64_t v9 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v9 = *(void *)(v8 + 16);
  }
  swift_bridgeObjectRelease();
  if (v6 != v9) {
    return v9 < v6;
  }
  id v10 = [v2 name];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  id v14 = [v3 name];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  if (v15 == v11 && v17 == v13)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  else
  {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19 & 1;
  }
}

id sub_1000556C4(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = [a1 topViewController];
  if (!v6) {
    goto LABEL_6;
  }
  id v7 = v6;
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (!v8)
  {

LABEL_6:
    uint64_t v18 = self;
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [v18 hf_errorWithCode:30 description:v19];

    Swift::String v21 = (void *)_convertErrorToNSError(_:)();
    id v22 = [self futureWithError:v21];

    return v22;
  }
  id v9 = [v8 itemManager];
  id v10 = [v9 home];

  if (v10)
  {
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a2;
    v11[3] = a3;
    void v11[4] = v10;
    v11[5] = a1;
    v28[4] = sub_10006513C;
    v28[5] = v11;
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 1107296256;
    v28[2] = sub_10007A168;
    v28[3] = &unk_1000C5A60;
    uint64_t v12 = _Block_copy(v28);
    uint64_t v13 = self;
    swift_retain();
    id v14 = v10;
    id v15 = a1;
    id v16 = [v13 futureWithBlock:v12];
    _Block_release(v12);

    swift_release();
    return v16;
  }
  else
  {
    id v23 = self;
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v23 hf_errorWithCode:59 description:v24];

    id v26 = (void *)_convertErrorToNSError(_:)();
    id v27 = [self futureWithError:v26];

    return v27;
  }
}

uint64_t sub_1000559A0(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v10 = [self mainThreadScheduler];
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  void v11[4] = a4;
  v11[5] = a5;
  v11[6] = a1;
  v18[4] = sub_100065198;
  void v18[5] = v11;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10007A124;
  v18[3] = &unk_1000C5AB0;
  uint64_t v12 = _Block_copy(v18);
  swift_retain();
  id v13 = a4;
  id v14 = a5;
  id v15 = a1;
  swift_release();
  id v16 = [v10 afterDelay:v12 performBlock:0.3];
  _Block_release(v12);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

void sub_100055AFC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v7 = (void *)a1(a3);
  id v8 = [a4 hu_presentPreloadableViewController:v7 animated:1];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a5;
    *(void *)(v10 + 24) = v7;
    aBlock[4] = sub_1000651E8;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100074764;
    aBlock[3] = &unk_1000C5B00;
    uint64_t v11 = _Block_copy(aBlock);
    id v12 = a5;
    id v13 = v7;
    swift_release();
    id v14 = [v9 addCompletionBlock:v11];
    _Block_release(v11);
  }
  else
  {
    __break(1u);
  }
}

id sub_100055C9C(int a1, uint64_t a2, id a3, uint64_t a4)
{
  if (a2)
  {
    swift_errorRetain();
    uint64_t v5 = (void *)_convertErrorToNSError(_:)();
    [a3 finishWithError:v5];

    return (id)swift_errorRelease();
  }
  else
  {
    return [a3 finishWithResult:a4];
  }
}

uint64_t sub_100055D54()
{
  return swift_deallocClassInstance();
}

void sub_100055D64(void *a1, void *a2, char a3, void *a4)
{
  id v7 = [a1 topViewController];
  if (v7 && (id v8 = v7, self, v9 = swift_dynamicCastObjCClass(), v8, v9))
  {
    sub_10007609C(a3);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a2 startedTest:v10];

    id v11 = [a4 firstReadCompleteFuture];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a2;
    *(unsigned char *)(v12 + 24) = a3;
    id v26 = sub_10006AADC;
    uint64_t v27 = v12;
    aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    NSString v24 = sub_100053B10;
    id v25 = &unk_1000C4C50;
    id v13 = _Block_copy(&aBlock);
    id v14 = a2;
    swift_release();
    id v15 = [v11 addSuccessBlock:v13];
    _Block_release(v13);

    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    *(unsigned char *)(v16 + 24) = a3;
    id v26 = (void (*)(uint64_t))sub_10006AACC;
    uint64_t v27 = v16;
    aBlock = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    NSString v24 = sub_100053B18;
    id v25 = &unk_1000C4CA0;
    uint64_t v17 = _Block_copy(&aBlock);
    id v18 = v14;
    swift_release();
    id v19 = [v15 addFailureBlock:v17];
    _Block_release(v17);
  }
  else
  {
    sub_100064C18();
    uint64_t v20 = swift_allocError();
    *(void *)uint64_t v21 = 0xD000000000000024;
    *(void *)(v21 + 8) = 0x800000010009BF50;
    *(unsigned char *)(v21 + 48) = 4;
    swift_willThrow();
    swift_errorRetain();
    sub_100075F28(a3, v20);
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_100056050(void *a1, uint64_t a2)
{
  id v3 = v2;
  id v6 = [v3 _selectAndFinishFirstReadForTabWithIdentifier:HFHomeAppTabIdentifierHome];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v3;
    *(unsigned char *)(v8 + 24) = 1;
    *(void *)(v8 + 32) = a2;
    *(void *)(v8 + 40) = a1;
    void v13[4] = sub_100064C70;
    void v13[5] = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_100053B10;
    v13[3] = &unk_1000C4CF0;
    uint64_t v9 = _Block_copy(v13);
    id v10 = v3;
    swift_bridgeObjectRetain();
    id v11 = a1;
    swift_release();
    id v12 = [v7 addSuccessBlock:v9];
    _Block_release(v9);
  }
  else
  {
    __break(1u);
  }
}

void sub_100056194(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  id v6 = [a1 topViewController];
  if (v6)
  {
    id v7 = v6;
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      id v11 = sub_100079944(v8, a3, a4);

      return;
    }
  }
  sub_100064C18();
  uint64_t v9 = swift_allocError();
  *(void *)uint64_t v10 = 0xD000000000000024;
  *(void *)(v10 + 8) = 0x800000010009BF50;
  *(unsigned char *)(v10 + 48) = 4;
  swift_willThrow();
  swift_errorRetain();
  sub_100075F28(a3, v9);
  swift_errorRelease();

  swift_errorRelease();
}

id sub_1000562E4(int a1, id a2)
{
  id v2 = [a2 selectTabWithIdentifier:HFHomeAppTabIdentifierTriggers];
  id v3 = [v2 asGeneric];

  return v3;
}

id sub_100056348(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

id sub_1000563B0(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(unsigned char *)(v7 + 24) = a3;
  *(void *)(v7 + 32) = a4;
  uint64_t v8 = self;
  id v9 = a2;
  id v10 = a4;
  id v11 = [v8 mainThreadScheduler];
  void v15[4] = sub_100065720;
  v15[5] = v7;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  void v15[2] = sub_10007A168;
  v15[3] = &unk_1000C5DA8;
  id v12 = _Block_copy(v15);
  id v13 = [self futureWithBlock:v12 scheduler:v11];
  swift_unknownObjectRelease();
  _Block_release(v12);
  swift_release();
  return v13;
}

uint64_t sub_1000564EC(void *a1, void *a2, char a3, void *a4)
{
  id v8 = [self mainThreadScheduler];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(unsigned char *)(v9 + 24) = a3;
  *(void *)(v9 + 32) = a4;
  *(void *)(v9 + 40) = a1;
  v16[4] = sub_100065778;
  v16[5] = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  void v16[2] = sub_10007A124;
  v16[3] = &unk_1000C5DF8;
  id v10 = _Block_copy(v16);
  id v11 = a2;
  id v12 = a4;
  id v13 = a1;
  swift_release();
  id v14 = [v8 afterDelay:v10 performBlock:0.5];
  _Block_release(v10);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

void sub_10005662C(void *a1, char a2, void *a3, void *a4)
{
  sub_10007609C(a2);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedTest:v7];

  id v8 = [a3 selectTabWithIdentifier:HFHomeAppTabIdentifierHome];
  id v9 = [v8 asGeneric];

  id v10 = [a4 completionHandlerAdapter];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000657C0;
  *(void *)(v12 + 24) = v11;
  void v15[4] = sub_1000657C8;
  v15[5] = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  void v15[2] = sub_100074764;
  v15[3] = &unk_1000C5E70;
  id v13 = _Block_copy(v15);
  swift_release();
  id v14 = [v9 addCompletionBlock:v13];
  _Block_release(v13);
}

void sub_1000567E0(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1000038EC(a1, (uint64_t)v11, &qword_1000DE200);
  uint64_t v5 = v12;
  if (!v12)
  {
    uint64_t v10 = 0;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v6 = sub_1000657D0(v11, v12);
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  sub_10000C4CC((uint64_t)v11);
  if (a2) {
LABEL_3:
  }
    a2 = (void *)_convertErrorToNSError(_:)();
LABEL_4:
  (*(void (**)(uint64_t, uint64_t, void *))(a3 + 16))(a3, v10, a2);
  swift_unknownObjectRelease();
}

uint64_t sub_10005694C(uint64_t a1, uint64_t a2, void (*a3)(long long *, uint64_t))
{
  if (a1)
  {
    *((void *)&v8 + 1) = swift_getObjectType();
    *(void *)&long long v7 = a1;
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  swift_unknownObjectRetain();
  a3(&v7, a2);
  return sub_100003950((uint64_t)&v7, &qword_1000DE200);
}

void sub_1000569D0(uint64_t a1, void *a2, char a3)
{
  sub_10007609C(a3);
  id v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 finishedTest:v4 waitForCommit:1 extraResults:0];
}

void sub_100056A44(uint64_t a1, uint64_t a2, id a3, void *a4, char a5, uint64_t a6)
{
  id v11 = [a3 _selectAndFinishFirstReadForTabWithIdentifier:HFHomeAppTabIdentifierHome];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a4;
    *(unsigned char *)(v13 + 24) = a5;
    *(void *)(v13 + 32) = a6;
    *(void *)(v13 + 40) = a1;
    *(void *)(v13 + 48) = a2;
    void v17[4] = sub_100066384;
    void v17[5] = v13;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_100053B10;
    v17[3] = &unk_1000C5F10;
    id v14 = _Block_copy(v17);
    id v15 = a4;
    swift_retain();
    swift_retain();
    swift_release();
    id v16 = [v12 addSuccessBlock:v14];
    _Block_release(v14);
  }
  else
  {
    __break(1u);
  }
}

void sub_100056B98(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = [a1 topViewController];
  if (v11)
  {
    uint64_t v12 = v11;
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v13 = (id *)(a4 + 16);
      swift_beginAccess();
      if (*v13)
      {
        id v14 = *v13;
        id v15 = sub_100074658((uint64_t)v14);

        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = a5;
        *(void *)(v16 + 24) = a6;
        uint64_t v29 = sub_100066398;
        uint64_t v30 = v16;
        aBlock = _NSConcreteStackBlock;
        uint64_t v26 = 1107296256;
        uint64_t v27 = sub_100053B10;
        id v28 = &unk_1000C5F60;
        uint64_t v17 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        id v18 = [v15 addSuccessBlock:v17];
        _Block_release(v17);

        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = a2;
        *(unsigned char *)(v19 + 24) = a3;
        uint64_t v29 = sub_10006AACC;
        uint64_t v30 = v19;
        aBlock = _NSConcreteStackBlock;
        uint64_t v26 = 1107296256;
        uint64_t v27 = sub_100053B18;
        id v28 = &unk_1000C5FB0;
        uint64_t v20 = _Block_copy(&aBlock);
        id v21 = a2;
        swift_release();
        id v22 = [v18 addFailureBlock:v20];
        _Block_release(v20);
      }
      else
      {
        __break(1u);
      }
      return;
    }
  }
  sub_100064C18();
  uint64_t v23 = swift_allocError();
  *(void *)uint64_t v24 = 0xD000000000000024;
  *(void *)(v24 + 8) = 0x800000010009BF50;
  *(unsigned char *)(v24 + 48) = 4;
  sub_100075F28(a3, v23);

  swift_errorRelease();
}

void sub_100056E70(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_100056EDC(int a1, id a2, void *a3, char a4, char a5, uint64_t a6)
{
  [a2 dismissViewControllerAnimated:1 completion:0];
  sub_10000D858(&qword_1000DD850);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100094FB0;
  strcpy((char *)&aBlock, "usingBuilders");
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for Bool;
  *(unsigned char *)(inited + 72) = a5;
  sub_1000570D8(inited);
  sub_10007609C(a4);
  swift_retain_n();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  uint64_t v17 = sub_1000663DC;
  uint64_t v18 = a6;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  id v15 = sub_10007A124;
  uint64_t v16 = &unk_1000C6028;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [a3 finishedTest:v11 waitForCommit:1 extraResults:isa withTeardownBlock:v13];
  _Block_release(v13);
  swift_bridgeObjectRelease();
  swift_release_n();
}

unint64_t sub_1000570D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D858(&qword_1000DD858);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  id v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000038EC(v6, (uint64_t)v15, &qword_1000DD860);
    unint64_t result = sub_10007E63C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100066400(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005721C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D858(&qword_1000DDA30);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  id v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000038EC(v6, (uint64_t)&v15, &qword_1000DDA38);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10000CC18(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100066400(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_100057354(uint64_t a1, uint64_t a2, id a3, uint64_t a4, void *a5, char a6)
{
  id v11 = [a3 _selectAndFinishFirstReadForTabWithIdentifier:HFHomeAppTabIdentifierTriggers];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a4;
    *(void *)(v13 + 24) = a1;
    *(void *)(v13 + 32) = a2;
    *(void *)(v13 + 40) = a5;
    *(unsigned char *)(v13 + 48) = a6;
    void v17[4] = sub_100067190;
    void v17[5] = v13;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_100053B10;
    v17[3] = &unk_1000C6168;
    uint64_t v14 = _Block_copy(v17);
    swift_retain();
    swift_retain();
    id v15 = a5;
    swift_release();
    id v16 = [v12 addSuccessBlock:v14];
    _Block_release(v14);
  }
  else
  {
    __break(1u);
  }
}

void sub_1000574A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  swift_beginAccess();
  uint64_t v12 = *(void **)(a2 + 16);
  if (v12)
  {
    id v13 = [v12 asGeneric];
    id v14 = [objc_allocWithZone((Class)HUTriggerSummaryViewController) initWithTriggerBuilder:v13 mode:0 isPresentedModally:1 delegate:0];

    id v15 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v14];
    id v16 = [a1 topViewController];
    if (v16)
    {
      long long v17 = v16;
      [v16 hu_presentPreloadableViewController:v15 animated:1];

      if (v18)
      {
        uint64_t v19 = (void *)swift_allocObject();
        v19[2] = a3;
        v19[3] = a4;
        void v19[4] = v14;
        uint64_t v31 = sub_1000671E0;
        uint64_t v32 = v19;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v28 = 1107296256;
        uint64_t v29 = sub_100053D54;
        uint64_t v30 = &unk_1000C61B8;
        uint64_t v20 = _Block_copy(&aBlock);
        id v21 = v18;
        swift_retain();
        id v22 = v14;
        swift_release();
        id v14 = [v21 addSuccessBlock:v20];
        _Block_release(v20);

        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = a5;
        *(unsigned char *)(v23 + 24) = a6;
        uint64_t v31 = sub_10006AACC;
        uint64_t v32 = (void *)v23;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v28 = 1107296256;
        uint64_t v29 = sub_100053B18;
        uint64_t v30 = &unk_1000C6208;
        uint64_t v24 = _Block_copy(&aBlock);
        id v25 = a5;
        swift_release();
        id v26 = [v14 addFailureBlock:v24];

        _Block_release(v24);
        id v15 = v26;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10005776C(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10007609C(a3);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 startedTest:v13];

  swift_beginAccess();
  id v14 = *(void **)(a4 + 16);
  if (v14)
  {
    id v15 = [v14 home];
    unsigned __int8 v16 = [v15 areAutomationBuildersSupported];

    id v17 = [a1 commitChanges];
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    *(void *)(v18 + 24) = a2;
    *(unsigned char *)(v18 + 32) = a3;
    *(unsigned char *)(v18 + 33) = v16;
    *(void *)(v18 + 40) = a4;
    aBlock[4] = a6;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100053D54;
    aBlock[3] = a7;
    uint64_t v19 = _Block_copy(aBlock);
    id v20 = a1;
    id v21 = a2;
    swift_retain();
    swift_release();
    id v22 = [v17 addSuccessBlock:v19];
    _Block_release(v19);
  }
  else
  {
    __break(1u);
  }
}

void sub_100057924(int a1, id a2, void *a3, char a4, char a5, uint64_t a6)
{
  [a2 dismissViewControllerAnimated:1 completion:0];
  sub_10000D858(&qword_1000DD850);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100094FB0;
  strcpy((char *)&aBlock, "usingBuilders");
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for Bool;
  *(unsigned char *)(inited + 72) = a5;
  sub_1000570D8(inited);
  sub_10007609C(a4);
  swift_retain_n();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v17 = sub_100067290;
  uint64_t v18 = a6;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  id v15 = sub_10007A124;
  unsigned __int8 v16 = &unk_1000C6280;
  NSString v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [a3 finishedTest:v11 waitForCommit:1 extraResults:isa withTeardownBlock:v13];
  _Block_release(v13);
  swift_bridgeObjectRelease();
  swift_release_n();
}

void *sub_100057B20(uint64_t a1, SEL *a2)
{
  swift_beginAccess();
  unint64_t result = *(void **)(a1 + 16);
  if (result)
  {

    return (void *)sleep(3u);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100057B88(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_100057C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a3 + 16) = a2;
  swift_errorRetain();
  swift_errorRelease();
  if (a1)
  {
    sub_10000AE6C(0, &qword_1000DD878);
    static Array._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(a4 + 16) = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100057CEC(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v6 = v5;
  uint64_t v55 = a5;
  unsigned int v57 = a3;
  int v58 = a2;
  uint64_t v9 = sub_10000D858(&qword_1000DD8E8);
  uint64_t v53 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v54 = v10;
  NSString v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  id v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v14;
  __chkstk_darwin(v13);
  id v17 = (char *)&v50 - v16;
  os_log_type_t v18 = static os_log_type_t.default.getter();
  sub_10000AE6C(0, (unint64_t *)&qword_1000DD840);
  uint64_t v19 = static OS_os_log.default.getter();
  BOOL v20 = os_log_type_enabled(v19, v18);
  os_log_t v59 = v17;
  uint64_t v56 = a1;
  if (v20)
  {
    uint64_t v50 = v6;
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)id v21 = 136315138;
    uint64_t v22 = 0xD000000000000016;
    unint64_t v23 = 0x800000010009BA50;
    switch((char)a1)
    {
      case 1:
        break;
      case 2:
        unint64_t v23 = 0x800000010009BA70;
        uint64_t v22 = 0xD000000000000015;
        break;
      case 3:
        unint64_t v23 = 0xE90000000000006CLL;
        uint64_t v22 = 0x617373696D736964;
        break;
      default:
        unint64_t v23 = 0xEC00000079726F73;
        uint64_t v22 = 0x7365636341796E61;
        break;
    }
    *(void *)&long long v68 = sub_10000C3F8(v22, v23, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v18, "PPT - Launching quick controls for %s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v17 = v59;
    id v6 = v50;
  }
  else
  {
  }
  uint64_t v66 = 0x726F737365636361;
  unint64_t v67 = 0xEB00000000444979;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a4 + 16) && (unint64_t v24 = sub_10007E63C((uint64_t)&aBlock), (v25 & 1) != 0))
  {
    sub_10000CA4C(*(void *)(a4 + 56) + 32 * v24, (uint64_t)&v68);
  }
  else
  {
    long long v68 = 0u;
    long long v69 = 0u;
  }
  sub_100067314((uint64_t)&aBlock);
  if (*((void *)&v69 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0 && v67)
    {
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  else
  {
    sub_100003950((uint64_t)&v68, &qword_1000DE200);
  }
  uint64_t v26 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v17, 1, 1, v26);
LABEL_18:
  id v27 = [v6 _selectAndFinishFirstReadForTabWithIdentifier:HFHomeAppTabIdentifierHome];
  if (!v27)
  {
    __break(1u);
    JUMPOUT(0x100058454);
  }
  uint64_t v28 = v27;
  uint64_t v29 = v6;
  sub_1000038EC((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_1000DD8F0);
  sub_1000038EC(v55, (uint64_t)v11, &qword_1000DD8E8);
  unint64_t v30 = (*(unsigned __int8 *)(v52 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v31 = (v51 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (*(unsigned __int8 *)(v53 + 80) + v31 + 9) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v29;
  *(unsigned char *)(v33 + 24) = v56;
  sub_1000688D8((uint64_t)v15, v33 + v30, (uint64_t *)&unk_1000DD8F0);
  unint64_t v34 = v33 + v31;
  id v35 = v57;
  *(void *)unint64_t v34 = v57;
  char v36 = v58;
  *(unsigned char *)(v34 + 8) = v58;
  sub_1000688D8((uint64_t)v11, v33 + v32, &qword_1000DD8E8);
  uint64_t v64 = sub_100067584;
  uint64_t v65 = v33;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  NSErrorDomain v62 = sub_100053D50;
  unint64_t v63 = &unk_1000C6320;
  uint64_t v37 = _Block_copy(&aBlock);
  id v38 = v29;
  id v39 = v35;
  swift_release();
  id v40 = [v28 flatMap:v37];
  _Block_release(v37);

  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v39;
  *(unsigned char *)(v41 + 24) = v36;
  uint64_t v64 = (id (*)(void *))sub_10006AAD4;
  uint64_t v65 = v41;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  NSErrorDomain v62 = sub_100053D54;
  unint64_t v63 = &unk_1000C6370;
  __int16 v42 = _Block_copy(&aBlock);
  id v43 = v39;
  swift_release();
  id v44 = [v40 addSuccessBlock:v42];
  _Block_release(v42);

  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v43;
  *(unsigned char *)(v45 + 24) = v36;
  uint64_t v64 = (id (*)(void *))sub_10006AACC;
  uint64_t v65 = v45;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  NSErrorDomain v62 = sub_100053B18;
  unint64_t v63 = &unk_1000C63C0;
  id v46 = _Block_copy(&aBlock);
  id v47 = v43;
  swift_release();
  id v48 = [v44 addFailureBlock:v46];
  _Block_release(v46);

  return sub_100003950((uint64_t)v59, (uint64_t *)&unk_1000DD8F0);
}

uint64_t sub_100058464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a5;
  v6[3] = type metadata accessor for MainActor();
  void v6[4] = static MainActor.shared.getter();
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)&dword_1000DD940 + dword_1000DD940);
  uint64_t v8 = (void *)swift_task_alloc();
  void v6[5] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_100058538;
  return v10(a6);
}

uint64_t sub_100058538()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_1000586F4;
  }
  else {
    uint64_t v4 = sub_100058694;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100058694()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000586F4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  swift_errorRetain();
  sub_100075F28(29, v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100058780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a5;
  v6[3] = type metadata accessor for MainActor();
  void v6[4] = static MainActor.shared.getter();
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)&dword_1000DD9F8 + dword_1000DD9F8);
  uint64_t v8 = (void *)swift_task_alloc();
  void v6[5] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_100058854;
  return v10(a6);
}

uint64_t sub_100058854()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_1000589B0;
  }
  else {
    uint64_t v4 = sub_10006A6F0;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1000589B0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  swift_errorRetain();
  sub_100075F28(30, v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100058A3C()
{
  v1[3] = v0;
  type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_100058AD4, v3, v2);
}

uint64_t sub_100058AD4()
{
  id v1 = [*(id *)(v0 + 24) _selectAndFinishFirstReadForTabWithIdentifier:HFHomeAppTabIdentifierHome];
  *(void *)(v0 + 56) = v1;
  if (v1)
  {
    id v3 = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v4;
    uint64_t v2 = sub_10000AE6C(0, &qword_1000DDDE0);
    void *v4 = v0;
    v4[1] = sub_100058BBC;
    id v1 = v3;
  }
  else
  {
    __break(1u);
  }
  return static NAFutureHelper.continuation<A>(_:)(v1, v2);
}

uint64_t sub_100058BBC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(void *)(v3 + 40);
    uint64_t v5 = *(void *)(v3 + 48);
    uint64_t v6 = sub_100058EA4;
  }
  else
  {

    uint64_t v4 = *(void *)(v3 + 40);
    uint64_t v5 = *(void *)(v3 + 48);
    uint64_t v6 = sub_100058CD8;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100058CD8()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  id v2 = [v1 topViewController];
  if (v2)
  {
    uint64_t v3 = v2;
    self;
    uint64_t v4 = swift_dynamicCastObjCClass();
    if (v4)
    {
      uint64_t v5 = v4;

      uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v6(v5);
    }
  }
  uint64_t v8 = *(void **)(v0 + 72);
  sub_100064C18();
  swift_allocError();
  uint64_t v10 = v9;
  _StringGuts.grow(_:)(83);
  v11._object = (void *)0x800000010009C340;
  v11._countAndFlagsBits = 0xD000000000000051;
  String.append(_:)(v11);
  *(void *)(v0 + 16) = [v8 topViewController];
  sub_10000D858((uint64_t *)&unk_1000DE650);
  v12._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v10 = 0;
  *(void *)(v10 + 8) = 0xE000000000000000;
  *(unsigned char *)(v10 + 48) = 4;
  swift_willThrow();

  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100058EA4()
{
  uint64_t v1 = *(void **)(v0 + 56);
  swift_release();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100058F10()
{
  uint64_t v0 = type metadata accessor for Device.Control.Kind.Primitive();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v34 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v33 = (char *)&v23 - v4;
  uint64_t v32 = type metadata accessor for Device.Control.Kind();
  uint64_t v5 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  id v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Device.Control();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = static Device.ControlModule.controls(in:)();
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    id v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v14 = v9 + 16;
    uint64_t v16 = *(unsigned __int8 *)(v14 + 64);
    uint64_t v23 = v12;
    uint64_t v17 = v12 + ((v16 + 32) & ~v16);
    uint64_t v28 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v29 = v15;
    unsigned int v27 = enum case for Device.Control.Kind.Primitive.incremental(_:);
    uint64_t v25 = v14;
    uint64_t v26 = (void (**)(char *, void, uint64_t))(v1 + 104);
    os_log_type_t v18 = (void (**)(char *, uint64_t))(v1 + 8);
    unint64_t v30 = (void (**)(char *, uint64_t))(v14 - 8);
    uint64_t v31 = v8;
    uint64_t v24 = *(void *)(v14 + 56);
    while (1)
    {
      v29(v11, v17, v8);
      Device.Control.kind.getter();
      Device.Control.Kind.primitive.getter();
      (*v28)(v7, v32);
      (*v26)(v34, v27, v0);
      sub_10005FAF4((unint64_t *)&unk_1000DD9E0, (void (*)(uint64_t))&type metadata accessor for Device.Control.Kind.Primitive);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (v37 == v35 && v38 == v36) {
        break;
      }
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v20 = *v18;
      (*v18)(v34, v0);
      v20(v33, v0);
      uint64_t v8 = v31;
      (*v30)(v11, v31);
      if (v19) {
        goto LABEL_9;
      }
      v17 += v24;
      if (!--v13) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v22 = *v18;
    (*v18)(v34, v0);
    v22(v33, v0);
    (*v30)(v11, v31);
LABEL_9:
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_100059320(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v7 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v35 + 64);
  uint64_t v9 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v34 - v15;
  __chkstk_darwin(v14);
  os_log_type_t v18 = (char *)&v34 - v17;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v20 = [v5 homeKitObjectIDFrom:isa userDefaultsEnabled:1];

  if (v20)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 0, 1, v21);
  }
  else
  {
    uint64_t v21 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 1, 1, v21);
  }
  sub_1000688D8((uint64_t)v16, (uint64_t)v18, (uint64_t *)&unk_1000DD8F0);
  id v22 = [a2 itemManager];
  sub_1000038EC((uint64_t)v18, (uint64_t)v13, (uint64_t *)&unk_1000DD8F0);
  type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v21 - 8);
  Class v24 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v21) != 1)
  {
    Class v24 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v21);
  }
  sub_1000038EC((uint64_t)v18, (uint64_t)v10, (uint64_t *)&unk_1000DD8F0);
  unint64_t v25 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v26 = swift_allocObject();
  sub_1000688D8((uint64_t)v10, v26 + v25, (uint64_t *)&unk_1000DD8F0);
  unsigned int v27 = (void *)(v26 + ((v8 + v25 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v28 = v37;
  void *v27 = v36;
  v27[1] = v28;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_100068AC0;
  *(void *)(v29 + 24) = v26;
  aBlock[4] = sub_10006AAE0;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10005A840;
  aBlock[3] = &unk_1000C6708;
  unint64_t v30 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v31 = [v5 findAccessoryWithItemManager:v22 accessoryID:v24 testBlock:v30];
  _Block_release(v30);

  sub_100003950((uint64_t)v18, (uint64_t *)&unk_1000DD8F0);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0) {
    return (uint64_t)v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_100059778()
{
  return static AccessoryControlViewController.test_performanceTestingEnded()();
}

uint64_t sub_1000597A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Device.Control.ViewSize();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  uint64_t v41 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Device.Control.ViewSizeConstraint();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v39 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000D858(&qword_1000DDA00);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ControlViewType();
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v38 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v37 - v11;
  uint64_t v12 = type metadata accessor for Device.Control.Kind.Primitive();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  os_log_type_t v18 = (char *)&v37 - v17;
  uint64_t v19 = type metadata accessor for Device.Control.Kind();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a1;
  Device.Control.kind.getter();
  Device.Control.Kind.primitive.getter();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for Device.Control.Kind.Primitive.binary(_:), v12);
  sub_10005FAF4((unint64_t *)&unk_1000DD9E0, (void (*)(uint64_t))&type metadata accessor for Device.Control.Kind.Primitive);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v49 == v47 && v50 == v48)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
    v23(v16, v12);
    v23(v18, v12);
  }
  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
    v25(v16, v12);
    v25(v18, v12);
    char v26 = 0;
    if ((v24 & 1) == 0) {
      return v26 & 1;
    }
  }
  Device.Control.preferredViewType.getter();
  uint64_t v27 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v7, 1, v8) == 1)
  {
    sub_100003950((uint64_t)v7, &qword_1000DDA00);
  }
  else
  {
    uint64_t v28 = v37;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v37, v7, v8);
    uint64_t v29 = v38;
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v38, enum case for ControlViewType.largeSwitch(_:), v8);
    sub_10005FAF4(&qword_1000DDA08, (void (*)(uint64_t))&type metadata accessor for ControlViewType);
    char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
    id v31 = *(void (**)(char *, uint64_t))(v27 + 8);
    v31(v29, v8);
    v31(v28, v8);
    if ((v30 & 1) == 0)
    {
      char v26 = 0;
      return v26 & 1;
    }
  }
  uint64_t v32 = v39;
  Device.Control.sizeConstraint.getter();
  uint64_t v34 = v43;
  uint64_t v33 = v44;
  uint64_t v35 = v41;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v41, enum case for Device.Control.ViewSize.large(_:), v44);
  char v26 = Device.Control.ViewSizeConstraint.allows(size:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v42);
  return v26 & 1;
}

uint64_t sub_100059DF0(uint64_t a1, uint64_t (*a2)(unint64_t))
{
  uint64_t v3 = static Device.ControlModule.controls(in:)();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(type metadata accessor for Device.Control() - 8);
    unint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    while ((a2(v6) & 1) == 0)
    {
      v6 += v7;
      if (!--v4) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_100059ED8(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = &OBJC_PROTOCOL___HFAccessoryRepresentableItem;
  uint64_t v18 = swift_dynamicCastObjCProtocolConditional();
  if (!v18) {
    goto LABEL_8;
  }
  uint64_t v19 = (void *)v18;
  id v39 = v11;
  uint64_t v40 = a4;
  uint64_t v41 = a3;
  id v43 = a1;
  id v20 = [v19 accessoryRepresentableObject];
  swift_getObjectType();
  uint64_t v21 = HFAccessoryRepresentable.containedServices.getter();
  swift_unknownObjectRelease();
  uint64_t v44 = sub_10005A318(v21);
  swift_bridgeObjectRelease();
  sub_10000D858(&qword_1000DD9C8);
  unint64_t v22 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100094FB0;
  uint64_t v42 = v19;
  id v24 = [v19 homeKitObject];
  unint64_t v25 = v13;
  uint64_t v26 = a2;
  id v27 = [v24 uniqueIdentifier];
  uint64_t v28 = (uint64_t)v25;
  swift_unknownObjectRelease();
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v23 + v22, v17, v14);
  uint64_t v45 = v44;
  sub_1000614A8(v23);
  uint64_t v29 = (uint64_t)v45;
  char v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v25) = v30(v26, 1, v14);
  sub_1000038EC(v26, v28, (uint64_t *)&unk_1000DD8F0);
  if (v25 == 1)
  {
    sub_100003950(v28, (uint64_t *)&unk_1000DD8F0);
    swift_bridgeObjectRelease();
    id v31 = v42;
LABEL_6:
    type metadata accessor for AccessoryControlsHelper();
    id v35 = [v31 accessoryRepresentableObject];
    uint64_t v36 = static AccessoryControlsHelper.controlModules(for:)();
    swift_unknownObjectRelease();
    char v37 = v41(v36);

    swift_bridgeObjectRelease();
    return v37 & 1;
  }
  uint64_t v32 = (uint64_t)v39;
  sub_1000038EC(v28, (uint64_t)v39, (uint64_t *)&unk_1000DD8F0);
  uint64_t result = v30(v32, 1, v14);
  if (result != 1)
  {
    __chkstk_darwin(result);
    *(&v38 - 2) = v32;
    BOOL v34 = sub_10007A364((uint64_t (*)(char *))sub_100068B74, (uint64_t)(&v38 - 4), v29);
    sub_100003950(v28, (uint64_t *)&unk_1000DD8F0);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v32, v14);
    swift_bridgeObjectRelease();
    id v31 = v42;
    if (v34) {
      goto LABEL_6;
    }

LABEL_8:
    char v37 = 0;
    return v37 & 1;
  }
  __break(1u);
  return result;
}

void *sub_10005A318(uint64_t a1)
{
  uint64_t v33 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v6 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  uint64_t result = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v38 = _swiftEmptyArrayStorage;
    sub_100061658(0, v6 & ~(v6 >> 63), 0);
    if (v5)
    {
      uint64_t result = (void *)__CocoaSet.startIndex.getter();
      char v9 = 1;
    }
    else
    {
      uint64_t result = (void *)sub_10007F264(a1);
      char v9 = v10 & 1;
    }
    id v35 = result;
    uint64_t v36 = v8;
    char v37 = v9;
    if (v6 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
      uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0) {
        uint64_t v11 = a1;
      }
      uint64_t v31 = v2;
      uint64_t v32 = v11;
      v29[2] = v2 + 32;
      unint64_t v30 = a1 & 0xC000000000000001;
      do
      {
        while (1)
        {
          sub_10007EFE0((uint64_t)v35, v36, v37, a1);
          uint64_t v23 = v22;
          id v24 = [v22 uniqueIdentifier];
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v25 = v38;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100061658(0, v25[2] + 1, 1);
            unint64_t v25 = v38;
          }
          unint64_t v27 = v25[2];
          unint64_t v26 = v25[3];
          if (v27 >= v26 >> 1)
          {
            sub_100061658(v26 > 1, v27 + 1, 1);
            unint64_t v25 = v38;
          }
          v25[2] = v27 + 1;
          uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v25+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v27, v4, v33);
          uint64_t v38 = v25;
          if (v5) {
            break;
          }
          uint64_t v12 = (uint64_t)v35;
          uint64_t v13 = v36;
          char v14 = v37;
          uint64_t v15 = v4;
          int64_t v16 = sub_1000618B8((int64_t)v35, v36, v37, a1);
          uint64_t v17 = a1;
          uint64_t v19 = v18;
          char v21 = v20;
          sub_1000699D0(v12, v13, v14);
          id v35 = (void *)v16;
          uint64_t v36 = v19;
          uint64_t v4 = v15;
          a1 = v17;
          unint64_t v5 = v30;
          uint64_t v2 = v31;
          char v37 = v21 & 1;
          if (!--v6) {
            goto LABEL_22;
          }
        }
        if ((v37 & 1) == 0) {
          goto LABEL_25;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_10000D858(&qword_1000DD9D8);
        uint64_t v28 = (void (*)(char *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v28(v34, 0);
        --v6;
      }
      while (v6);
LABEL_22:
      sub_1000699D0((uint64_t)v35, v36, v37);
      return v38;
    }
  }
  return result;
}

uint64_t sub_10005A648(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10005A6AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      BOOL v6 = v5;
      sub_10000AE6C(0, &qword_1000DD750);
      char v7 = static NSObject.== infix(_:_:)();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10005A838()
{
  return 1;
}

uint64_t sub_10005A840(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_10005A884(void *a1, double a2, double a3, double a4, double a5, double a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  [swift_unknownObjectRetain() tap:a2, a3];
  [a1 dragWithStartPoint:a2 endPoint:a3 duration:a4];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4, a5, 0.5];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4, a5, 0.5];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4, a5, 0.1];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4, a5, 0.1];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4, a5, 0.1];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4, a5, 0.1];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4, a5, 0.1];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4, a5, 0.1];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  [a1 dragWithStartPoint:a6 endPoint:a7 duration:a4, a5, 0.1];
  [a1 dragWithStartPoint:a4 endPoint:a5 duration:a6];
  for (uint64_t i = 0; i != 11; ++i)
  {
    v32.origin.x = a8;
    v32.origin.y = a9;
    v32.size.width = a10;
    v32.size.height = a11;
    double MinY = CGRectGetMinY(v32);
    v33.origin.x = a8;
    v33.origin.y = a9;
    v33.size.width = a10;
    v33.size.height = a11;
    double v27 = MinY + CGRectGetHeight(v33) / 10.0 * (double)i;
    v34.origin.x = a8;
    v34.origin.y = a9;
    v34.size.width = a10;
    v34.size.height = a11;
    [a1 tap:CGRectGetMidX(v34), v27];
    [a1 advanceTime:0.2];
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_10005AE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a6;
  *(unsigned char *)(v7 + 56) = a5;
  *(void *)(v7 + 24) = type metadata accessor for MainActor();
  *(void *)(v7 + 32) = static MainActor.shared.getter();
  char v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 40) = v11;
  *char v11 = v7;
  v11[1] = sub_10005AF1C;
  return sub_10005B078(a5, a6, a7);
}

uint64_t sub_10005AF1C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    char v4 = sub_10006A6DC;
  }
  else {
    char v4 = sub_10006A6F0;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10005B078(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 144) = a3;
  *(void *)(v4 + 152) = v3;
  *(void *)(v4 + 136) = a2;
  *(unsigned char *)(v4 + 288) = a1;
  sub_10000D858((uint64_t *)&unk_1000DD8F0);
  *(void *)(v4 + 160) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 168) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 176) = v6;
  *(void *)(v4 + 184) = v5;
  return _swift_task_switch(sub_10005B148, v6, v5);
}

uint64_t sub_10005B148()
{
  uint64_t v19 = v0;
  os_log_type_t v1 = static os_log_type_t.default.getter();
  *(void *)(v0 + 192) = sub_10000AE6C(0, (unint64_t *)&qword_1000DD840);
  uint64_t v2 = static OS_os_log.default.getter();
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(v2, v1))
  {
    char v4 = *(unsigned char *)(v0 + 288);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = sub_10007609C(v4);
    *(void *)(v0 + 128) = sub_10000C3F8(v6, v7, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "PPT - Launching accessory settings for %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v8 = *(void *)(v0 + 144);
  *(void *)(v0 + 88) = 0x726F737365636361;
  *(void *)(v0 + 96) = 0xEB00000000444979;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_10007E63C(v0 + 16), (v10 & 1) != 0))
  {
    sub_10000CA4C(*(void *)(*(void *)(v0 + 144) + 56) + 32 * v9, v0 + 56);
  }
  else
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  sub_100067314(v0 + 16);
  if (*(void *)(v0 + 80))
  {
    if ((swift_dynamicCast() & 1) != 0 && *(void *)(v0 + 112))
    {
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  else
  {
    sub_100003950(v0 + 56, &qword_1000DE200);
  }
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
LABEL_13:
  id v13 = [*(id *)(v0 + 152) _selectAndFinishFirstReadForTabWithIdentifier:HFHomeAppTabIdentifierHome v18];
  *(void *)(v0 + 200) = v13;
  if (v13)
  {
    id v15 = v13;
    int64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v16;
    uint64_t v14 = sub_10000AE6C(0, &qword_1000DDDE0);
    void *v16 = v0;
    v16[1] = sub_10005B49C;
    id v13 = v15;
  }
  else
  {
    __break(1u);
  }
  return static NAFutureHelper.continuation<A>(_:)(v13, v14);
}

uint64_t sub_10005B49C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 216) = a1;
  *(void *)(v4 + 224) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 184);
  uint64_t v6 = *(void *)(v3 + 176);
  if (v1) {
    unint64_t v7 = sub_10005BFB4;
  }
  else {
    unint64_t v7 = sub_10005B5E0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_10005B5E0()
{
  id v1 = [*(id *)(v0 + 216) topViewController];
  *(void *)(v0 + 232) = v1;
  if (!v1) {
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  *(void *)(v0 + 240) = v3;
  if (!v3)
  {

LABEL_10:
    uint64_t v18 = *(void **)(v0 + 216);
    uint64_t v2 = *(void **)(v0 + 200);
    swift_release();
    sub_100064C18();
    swift_allocError();
    uint64_t v20 = v19;
    _StringGuts.grow(_:)(83);
    v21._countAndFlagsBits = 0xD000000000000051;
    v21._object = (void *)0x800000010009C340;
    String.append(_:)(v21);
    *(void *)(v0 + 120) = [v18 topViewController];
    sub_10000D858((uint64_t *)&unk_1000DE650);
    v22._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v20 = 0;
    *(void *)(v20 + 8) = 0xE000000000000000;
    *(unsigned char *)(v20 + 48) = 4;
    swift_willThrow();
    goto LABEL_14;
  }
  uint64_t v4 = (void *)v3;
  id v5 = [*(id *)(v0 + 152) appNavigator];
  *(void *)(v0 + 248) = v5;
  if (v5)
  {
    uint64_t v6 = v5;
    static os_log_type_t.default.getter();
    unint64_t v7 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();

    id v8 = [v4 collectionView];
    if (!v8)
    {
      __break(1u);
      return static NAFutureHelper.continuation<A>(_:)(v8, v9);
    }
    char v10 = v8;
    uint64_t v12 = *(void **)(v0 + 152);
    uint64_t v11 = *(void *)(v0 + 160);
    char v13 = *(unsigned char *)(v0 + 288);
    id v14 = [v4 itemManager];
    id v15 = (void *)sub_1000699E4(v13, (uint64_t)v14, v12, v11, (uint64_t)&off_1000C46B0);
    *(void *)(v0 + 256) = v15;

    if (v15)
    {
      if (sub_10007609C(*(unsigned char *)(v0 + 288)) == 0xD000000000000018 && v16 == 0x800000010009BDC0)
      {
        id v17 = v15;
        swift_bridgeObjectRelease();
      }
      else
      {
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
        id v29 = v15;
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0) {
          goto LABEL_19;
        }
      }
      unint64_t v30 = *(void **)(v0 + 136);
      sub_10007609C(*(unsigned char *)(v0 + 288));
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v30 startedTest:v31];

LABEL_19:
      id v32 = [v6 showAccessory:v15 secondaryDestination:1];
      *(void *)(v0 + 264) = v32;
      CGRect v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 272) = v33;
      *CGRect v33 = v0;
      v33[1] = sub_10005BA98;
      uint64_t v9 = (char *)&type metadata for Swift.AnyObject + 8;
      id v8 = v32;
      return static NAFutureHelper.continuation<A>(_:)(v8, v9);
    }
    uint64_t v23 = *(void **)(v0 + 216);
    uint64_t v18 = *(void **)(v0 + 200);
    swift_release();
    sub_100064C18();
    swift_allocError();
    *(void *)uint64_t v25 = 0xD000000000000031;
    *(void *)(v25 + 8) = 0x800000010009C690;
    *(unsigned char *)(v25 + 48) = 4;
    swift_willThrow();
  }
  else
  {
    uint64_t v23 = *(void **)(v0 + 216);
    uint64_t v18 = *(void **)(v0 + 200);
    swift_release();
    sub_100064C18();
    swift_allocError();
    *(void *)uint64_t v24 = 1;
    *(_OWORD *)(v24 + 8) = 0u;
    *(_OWORD *)(v24 + 24) = 0u;
    *(void *)(v24 + 40) = 0;
    *(unsigned char *)(v24 + 48) = 5;
    swift_willThrow();
  }

LABEL_14:
  sub_100003950(*(void *)(v0 + 160), (uint64_t *)&unk_1000DD8F0);
  swift_task_dealloc();
  unint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_10005BA98()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 176);
    uint64_t v4 = *(void *)(v2 + 184);
    id v5 = sub_10005C03C;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 176);
    uint64_t v4 = *(void *)(v2 + 184);
    id v5 = sub_10005BBC0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10005BBC0()
{
  char v1 = *(unsigned char *)(v0 + 288);
  swift_release();
  if (sub_10007609C(v1) == 0xD000000000000018 && v2 == 0x800000010009BDC0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v4 = *(void **)(v0 + 136);
    sub_10007609C(*(unsigned char *)(v0 + 288));
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v4 finishedTest:v5 waitForCommit:1 extraResults:0];

    goto LABEL_6;
  }
  char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v3) {
    goto LABEL_5;
  }
LABEL_6:
  if (sub_10007609C(*(unsigned char *)(v0 + 288)) == 0xD000000000000017 && v6 == 0x800000010009BDE0) {
    goto LABEL_8;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    if (sub_10007609C(*(unsigned char *)(v0 + 288)) == 0xD00000000000001ELL && v8 == 0x800000010009BE00)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      uint64_t v36 = *(void **)(v0 + 256);
      char v37 = *(void **)(v0 + 264);
      uint64_t v38 = *(void **)(v0 + 248);
      id v39 = *(void **)(v0 + 232);
      uint64_t v40 = *(void **)(v0 + 216);
      uint64_t v41 = *(void **)(v0 + 200);
      sub_100003950(*(void *)(v0 + 160), (uint64_t *)&unk_1000DD8F0);

      goto LABEL_28;
    }
  }
LABEL_13:
  id v10 = [*(id *)(v0 + 240) presentedViewController];
  if (!v10)
  {
LABEL_21:
    unint64_t v26 = *(void **)(v0 + 256);
    double v27 = *(void **)(v0 + 264);
    char v28 = *(void **)(v0 + 240);
    id v29 = *(void **)(v0 + 248);
    uint64_t v25 = *(void **)(v0 + 232);
    unint64_t v30 = *(void **)(v0 + 216);
    uint64_t v20 = *(void **)(v0 + 200);
    sub_100064C18();
    swift_allocError();
    uint64_t v32 = v31;
    id v33 = [v28 presentedViewController];
    *(void *)uint64_t v32 = 0xD00000000000001ELL;
    *(void *)(v32 + 8) = 0x800000010009C6D0;
    *(void *)(v32 + 16) = v33;
    *(unsigned char *)(v32 + 48) = 0;
    swift_willThrow();

    goto LABEL_22;
  }
  uint64_t v11 = v10;
  self;
  uint64_t v12 = (void *)swift_dynamicCastObjCClass();
  if (!v12 || (id v13 = [v12 topViewController]) == 0)
  {
LABEL_20:

    goto LABEL_21;
  }
  id v14 = v13;
  self;
  id v15 = (void *)swift_dynamicCastObjCClass();
  if (!v15)
  {

    goto LABEL_20;
  }
  uint64_t v16 = *(void *)(v0 + 280);
  id v17 = sub_10007A97C(v15, *(unsigned char *)(v0 + 288), *(void *)(v0 + 144));
  uint64_t v18 = v16;
  uint64_t v20 = *(void **)(v0 + 256);
  uint64_t v19 = *(void **)(v0 + 264);
  Swift::String v21 = *(void **)(v0 + 248);
  Swift::String v22 = *(void **)(v0 + 232);
  uint64_t v23 = *(void **)(v0 + 216);
  uint64_t v24 = *(void **)(v0 + 200);
  if (v18)
  {

    uint64_t v25 = v20;
LABEL_22:

    sub_100003950(*(void *)(v0 + 160), (uint64_t *)&unk_1000DD8F0);
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_23;
  }
  uint64_t v43 = *(void *)(v0 + 160);
  uint64_t v42 = v17;

  sub_100003950(v43, (uint64_t *)&unk_1000DD8F0);
LABEL_28:
  swift_task_dealloc();
  uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
LABEL_23:
  return v34();
}

uint64_t sub_10005BFB4()
{
  char v1 = (void *)v0[25];
  swift_release();

  sub_100003950(v0[20], (uint64_t *)&unk_1000DD8F0);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10005C03C()
{
  char v1 = (void *)v0[32];
  uint64_t v2 = (void *)v0[33];
  char v3 = (void *)v0[31];
  uint64_t v4 = (void *)v0[29];
  NSString v5 = (void *)v0[27];
  uint64_t v6 = (void *)v0[25];
  swift_release();

  sub_100003950(v0[20], (uint64_t *)&unk_1000DD8F0);
  swift_task_dealloc();
  char v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10005C0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a6;
  *(unsigned char *)(v7 + 56) = a5;
  *(void *)(v7 + 24) = type metadata accessor for MainActor();
  *(void *)(v7 + 32) = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 40) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_10005C1D8;
  return sub_10005B078(a5, a6, a7);
}

uint64_t sub_10005C1D8()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_10005C334;
  }
  else {
    uint64_t v4 = sub_100058694;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10005C334()
{
  uint64_t v1 = *(void **)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 56);
  swift_release();
  sub_10007609C(v2);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 failedTest:v3 withFailure:0];

  swift_errorRelease();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10005C3E8(void *a1, uint64_t a2)
{
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    NSString v5 = (void *)result;
    id v6 = a1;
    char v7 = sub_10005A648((uint64_t)[v5 mediaAccessoryItemType], a2);

    return v7 & 1;
  }
  return result;
}

BOOL sub_10005C460(void *a1)
{
  id v1 = [a1 services];
  sub_10000AE6C(0, &qword_1000DD830);
  sub_100064D08(&qword_1000DD838, &qword_1000DD830);
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v2 & 0xC000000000000001) != 0) {
    uint64_t v3 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v3 = *(void *)(v2 + 16);
  }
  swift_bridgeObjectRelease();
  return v3 == 1;
}

unint64_t sub_10005C520(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x617373696D736964;
      break;
    default:
      unint64_t result = 0x7365636341796E61;
      break;
  }
  return result;
}

uint64_t sub_10005C5CC(char *a1, char *a2)
{
  return sub_10007877C(*a1, *a2);
}

Swift::Int sub_10005C5D8()
{
  return sub_1000789B0();
}

uint64_t sub_10005C5E0()
{
  return sub_100078B10();
}

Swift::Int sub_10005C5E8()
{
  return sub_100078CAC();
}

unint64_t sub_10005C5F0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10006A04C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10005C620@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10005C520(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_10005C64C(void *a1, void *a2, unsigned __int8 a3, uint64_t a4, void *a5, int a6, uint64_t a7)
{
  uint64_t v101 = (BOOL (*)(void *))a7;
  int v104 = a6;
  id v105 = a5;
  uint64_t v11 = sub_10000D858(&qword_1000DD8E8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchTimeInterval();
  uint64_t v102 = *(void *)(v14 - 8);
  uint64_t v103 = v14;
  uint64_t v15 = *(void *)(v102 + 64);
  uint64_t v16 = __chkstk_darwin(v14);
  os_signpost_id_t v99 = (char *)v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v100 = (char *)v93 - v17;
  uint64_t v18 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  Swift::String v21 = (char *)v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v93 - v22;
  id v24 = [a1 topViewController];
  if (!v24) {
    goto LABEL_11;
  }
  uint64_t v25 = v24;
  self;
  uint64_t v26 = swift_dynamicCastObjCClass();
  double v27 = v25;
  if (!v26)
  {

LABEL_11:
    sub_100064C18();
    swift_allocError();
    uint64_t v50 = v49;
    uint64_t aBlock = 0;
    unint64_t v107 = 0xE000000000000000;
    _StringGuts.grow(_:)(83);
    v51._countAndFlagsBits = 0xD000000000000051;
    v51._object = (void *)0x800000010009C340;
    String.append(_:)(v51);
    id v112 = [a1 topViewController];
    sub_10000D858((uint64_t *)&unk_1000DE650);
    v52._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v52);
    swift_bridgeObjectRelease();
    unint64_t v53 = v107;
    *(void *)uint64_t v50 = aBlock;
    *(void *)(v50 + 8) = v53;
    *(unsigned char *)(v50 + 48) = 4;
    uint64_t v54 = (void *)_convertErrorToNSError(_:)();
    id v55 = [self futureWithError:v54];
    swift_errorRelease();

    return v55;
  }
  char v28 = (void *)v26;
  id v98 = v27;
  id v29 = [a2 appNavigator];
  if (v29)
  {
    unint64_t v30 = v29;
    id v31 = [a2 baseViewController];
    if (v31)
    {
      id v95 = v31;
      id v97 = v30;
      uint64_t v32 = a3;
      static os_log_type_t.default.getter();
      sub_10000AE6C(0, (unint64_t *)&qword_1000DD840);
      id v33 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)();

      uint64_t v96 = v32;
      id v34 = [v28 itemManager];
      id v35 = v34;
      if ((v32 - 1) >= 2)
      {
        sub_1000038EC(a4, (uint64_t)v23, (uint64_t *)&unk_1000DD8F0);
        uint64_t v60 = type metadata accessor for UUID();
        uint64_t v61 = *(void *)(v60 - 8);
        int v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48))(v23, 1, v60);
        Class isa = 0;
        id v48 = v98;
        if (v62 != 1)
        {
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v61 + 8))(v23, v60);
        }
        v110 = sub_10005D4CC;
        uint64_t v111 = 0;
        uint64_t aBlock = _NSConcreteStackBlock;
        unint64_t v107 = 1107296256;
        uint64_t v108 = sub_10005D4D0;
        uint64_t v109 = &unk_1000C6500;
        uint64_t v64 = _Block_copy(&aBlock);
        swift_release();
        id v44 = [a2 findPreferredAccessoryWithItemManager:v35 accessoryID:isa with:v64];

        _Block_release(v64);
        if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
        {
          uint64_t v46 = 0;
          uint64_t v94 = 0;
          uint64_t v41 = v96;
          id v47 = v97;
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v36 = v34;
        sub_1000038EC(a4, (uint64_t)v21, (uint64_t *)&unk_1000DD8F0);
        uint64_t v37 = type metadata accessor for UUID();
        uint64_t v38 = *(void *)(v37 - 8);
        Class v39 = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v21, 1, v37) != 1)
        {
          Class v39 = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v37);
        }
        uint64_t v40 = swift_allocObject();
        uint64_t v41 = v96;
        *(unsigned char *)(v40 + 16) = v96;
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = sub_100067690;
        *(void *)(v42 + 24) = v40;
        uint64_t v94 = v40;
        v110 = sub_1000676A8;
        uint64_t v111 = v42;
        uint64_t aBlock = _NSConcreteStackBlock;
        unint64_t v107 = 1107296256;
        uint64_t v108 = sub_10005A840;
        uint64_t v109 = &unk_1000C6438;
        uint64_t v43 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        id v44 = [a2 findAccessoryWithItemManager:v36 accessoryID:v39 testBlock:v43];

        _Block_release(v43);
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0)
        {
          uint64_t v46 = sub_100067690;
          id v47 = v97;
          id v48 = v98;
LABEL_18:
          if (v44)
          {
            v93[1] = "dAccessories";
            switch(v41)
            {
              case 3:
                id v73 = v44;
                swift_bridgeObjectRelease();
                break;
              default:
                char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
                id v71 = v44;
                swift_bridgeObjectRelease();
                if ((v70 & 1) == 0)
                {
                  sub_10007609C(v104);
                  NSString v72 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                  [v105 startedTest:v72];
                }
                break;
            }
            id v74 = [v47 showAccessory:v44 secondaryDestination:0];
            sub_1000038EC((uint64_t)v101, (uint64_t)v13, &qword_1000DD8E8);
            uint64_t v76 = v102;
            uint64_t v75 = v103;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v13, 1, v103) == 1)
            {
              sub_100003950((uint64_t)v13, &qword_1000DD8E8);
            }
            else
            {
              id v77 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
              uint64_t v101 = v46;
              v78 = v100;
              v77(v100, v13, v75);
              id v79 = v99;
              (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v99, v78, v75);
              unint64_t v80 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
              uint64_t v81 = v75;
              uint64_t v82 = swift_allocObject();
              v77((char *)(v82 + v80), v79, v81);
              v110 = sub_100067734;
              uint64_t v111 = v82;
              uint64_t aBlock = _NSConcreteStackBlock;
              unint64_t v107 = 1107296256;
              uint64_t v108 = sub_10007A1D0;
              uint64_t v109 = &unk_1000C64D8;
              id v83 = _Block_copy(&aBlock);
              id v84 = v74;
              swift_release();
              id v74 = [v84 flatMap:v83];

              _Block_release(v83);
              uint64_t v41 = v96;
              id v85 = v78;
              uint64_t v46 = v101;
              (*(void (**)(char *, uint64_t))(v76 + 8))(v85, v81);
            }
            switch(v41)
            {
              case 3:
                swift_bridgeObjectRelease();
                goto LABEL_31;
              default:
                char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if ((v86 & 1) == 0)
                {

                  sub_1000676D4((uint64_t)v46);
                  return v74;
                }
LABEL_31:
                uint64_t v87 = swift_allocObject();
                id v88 = v95;
                id v89 = v105;
                *(void *)(v87 + 16) = v95;
                *(void *)(v87 + 24) = v89;
                *(unsigned char *)(v87 + 32) = v104;
                v110 = sub_100067724;
                uint64_t v111 = v87;
                uint64_t aBlock = _NSConcreteStackBlock;
                unint64_t v107 = 1107296256;
                uint64_t v108 = sub_10007A1D0;
                uint64_t v109 = &unk_1000C6488;
                uint64_t v90 = _Block_copy(&aBlock);
                id v91 = v88;
                id v92 = v89;
                swift_release();
                id v59 = [v74 flatMap:v90];

                _Block_release(v90);
                break;
            }
          }
          else
          {
            sub_100064C18();
            swift_allocError();
            uint64_t v66 = v65;
            uint64_t aBlock = 0;
            unint64_t v107 = 0xE000000000000000;
            _StringGuts.grow(_:)(44);
            v67._countAndFlagsBits = 0xD00000000000002ALL;
            v67._object = (void *)0x800000010009C3F0;
            String.append(_:)(v67);
            LOBYTE(v112) = v41;
            _print_unlocked<A, B>(_:_:)();
            unint64_t v68 = v107;
            *(void *)uint64_t v66 = aBlock;
            *(void *)(v66 + 8) = v68;
            *(unsigned char *)(v66 + 48) = 4;
            long long v69 = (void *)_convertErrorToNSError(_:)();
            id v59 = [self futureWithError:v69];
            swift_errorRelease();
          }
          sub_1000676D4((uint64_t)v46);
          return v59;
        }
        __break(1u);
      }
      __break(1u);
      JUMPOUT(0x10005D384);
    }
  }
  sub_100064C18();
  swift_allocError();
  *(void *)uint64_t v57 = 1;
  *(_OWORD *)(v57 + 8) = 0u;
  *(_OWORD *)(v57 + 24) = 0u;
  *(void *)(v57 + 40) = 0;
  *(unsigned char *)(v57 + 48) = 5;
  int v58 = (void *)_convertErrorToNSError(_:)();
  id v59 = [self futureWithError:v58];
  swift_errorRelease();

  return v59;
}

BOOL sub_10005D3A4(void *a1, void *a2)
{
  id v3 = [a1 services];
  sub_10000AE6C(0, &qword_1000DD830);
  sub_100064D08(&qword_1000DD838, &qword_1000DD830);
  uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v4 & 0xC000000000000001) != 0) {
    uint64_t v5 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v5 = *(void *)(v4 + 16);
  }
  swift_bridgeObjectRelease();
  id v6 = [a2 services];
  uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v7 & 0xC000000000000001) != 0) {
    uint64_t v8 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v8 = *(void *)(v7 + 16);
  }
  swift_bridgeObjectRelease();
  return v8 < v5;
}

uint64_t sub_10005D4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  char v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v6 & 1;
}

BOOL sub_10005D538(id a1, char a2)
{
  switch(a2)
  {
    case 1:
      id v6 = [a1 services];
      sub_10000AE6C(0, &qword_1000DD830);
      sub_100064D08(&qword_1000DD838, &qword_1000DD830);
      uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v7 & 0xC000000000000001) != 0) {
        uint64_t v8 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v8 = *(void *)(v7 + 16);
      }
      swift_bridgeObjectRelease();
      BOOL result = v8 == 1;
      break;
    case 2:
      id v9 = [a1 accessories];
      sub_10000AE6C(0, &qword_1000DD928);
      sub_100064D08(&qword_1000DD930, &qword_1000DD928);
      uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v10 & 0xC000000000000001) != 0) {
        uint64_t v11 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v11 = *(void *)(v10 + 16);
      }
      swift_bridgeObjectRelease();
      if (v11 == 1)
      {
        id v14 = [a1 services];
        sub_10000AE6C(0, &qword_1000DD830);
        sub_100064D08(&qword_1000DD838, &qword_1000DD830);
        uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if ((v15 & 0xC000000000000001) != 0) {
          uint64_t v16 = __CocoaSet.count.getter();
        }
        else {
          uint64_t v16 = *(void *)(v15 + 16);
        }
        swift_bridgeObjectRelease();
        BOOL v12 = v16 <= 1;
        goto LABEL_10;
      }
      BOOL result = 0;
      break;
    default:
      id v3 = [a1 services];
      sub_10000AE6C(0, &qword_1000DD830);
      sub_100064D08(&qword_1000DD838, &qword_1000DD830);
      uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v4 & 0xC000000000000001) != 0) {
        uint64_t v5 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v5 = *(void *)(v4 + 16);
      }
      swift_bridgeObjectRelease();
      BOOL v12 = v5 <= 0;
LABEL_10:
      BOOL result = !v12;
      break;
  }
  return result;
}

id sub_10005D828(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchTimeInterval();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = sub_100067838;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A168;
  aBlock[3] = &unk_1000C6550;
  uint64_t v8 = _Block_copy(aBlock);
  id v9 = [self futureWithBlock:v8];
  _Block_release(v8);
  swift_release();
  id v10 = [v9 asGeneric];

  return v10;
}

uint64_t sub_10005D9F8(void *a1, void (*a2)(char *, uint64_t))
{
  uint64_t v22 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v23 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v21 - v14;
  sub_10000AE6C(0, &qword_1000DD900);
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  DispatchTime.advanced(by:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v13, v9);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  aBlock[4] = sub_1000678A8;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A124;
  aBlock[3] = &unk_1000C65A0;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FAF4(&qword_1000DD908, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000D858(&qword_1000DD910);
  sub_1000678B8(&qword_1000DD918, &qword_1000DD910);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
  return ((uint64_t (*)(char *, uint64_t))v22)(v15, v23);
}

id sub_10005DDC0(int a1, id a2, void *a3, char a4)
{
  id v7 = [a2 presentedViewController];
  if (!v7) {
    goto LABEL_5;
  }
  uint64_t v8 = v7;
  sub_10000D858(&qword_1000DD920);
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {

LABEL_5:
    sub_100064C18();
    swift_allocError();
    uint64_t v19 = v18;
    uint64_t aBlock = 0;
    unint64_t v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(57);
    v20._object = (void *)0x800000010009C460;
    v20._countAndFlagsBits = 0xD000000000000037;
    String.append(_:)(v20);
    id v29 = [a2 presentedViewController];
    sub_10000D858((uint64_t *)&unk_1000DE650);
    v21._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v19 = 0;
    *(void *)(v19 + 8) = 0xE000000000000000;
    *(unsigned char *)(v19 + 48) = 4;
    id v16 = (id)_convertErrorToNSError(_:)();
    id v17 = [self futureWithError:v16];
    swift_errorRelease();
    goto LABEL_6;
  }
  uint64_t v10 = v9;
  sub_10007609C(a4);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 startedTest:v11];

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  double v27 = sub_1000678FC;
  uint64_t v28 = v12;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v24 = 1107296256;
  uint64_t v25 = sub_10007A168;
  uint64_t v26 = &unk_1000C65F0;
  uint64_t v13 = _Block_copy(&aBlock);
  uint64_t v14 = self;
  id v15 = v8;
  id v16 = [v14 futureWithBlock:v13];
  _Block_release(v13);
  swift_release();
  id v17 = [v16 asGeneric];

LABEL_6:
  return v17;
}

uint64_t sub_10005E058(void *a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  id v2 = a1;
  dispatch thunk of AccessoryControlViewController.dismissControlView(animated:completion:)();

  return swift_release();
}

id sub_10005E0D8(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5 - 8);
  uint64_t v9 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  NSString v11 = (char *)&aBlock - v10;
  sub_10005E544(a2, (uint64_t)&aBlock - v10);
  sub_1000038EC((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_1000DD8F0);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  sub_1000688D8((uint64_t)v9, v13 + v12, (uint64_t *)&unk_1000DD8F0);
  unint64_t v14 = v13 + ((v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v14 = a1;
  *(unsigned char *)(v14 + 8) = 34;
  uint64_t v15 = HFHomeAppTabIdentifierHome;
  id v16 = v2;
  id v17 = a1;
  id result = [v16 _selectAndFinishFirstReadForTabWithIdentifier:v15];
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v38 = sub_10007CB3C;
    Class v39 = 0;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_100053D50;
    uint64_t v37 = &unk_1000C6820;
    Swift::String v20 = _Block_copy(&aBlock);
    id v21 = [v19 flatMap:v20];
    _Block_release(v20);

    uint64_t v22 = (void *)swift_allocObject();
    void v22[2] = v16;
    v22[3] = sub_10006A01C;
    void v22[4] = v13;
    uint64_t v38 = (id (*)(void *))sub_10006A6F8;
    Class v39 = v22;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_100053D50;
    uint64_t v37 = &unk_1000C6870;
    uint64_t v23 = _Block_copy(&aBlock);
    id v24 = v16;
    swift_retain();
    swift_release();
    id v25 = [v21 flatMap:v23];
    _Block_release(v23);
    swift_release();

    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v17;
    *(unsigned char *)(v26 + 24) = 34;
    uint64_t v38 = (id (*)(void *))sub_10006AAD4;
    Class v39 = (void *)v26;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_100053D54;
    uint64_t v37 = &unk_1000C68C0;
    double v27 = _Block_copy(&aBlock);
    id v28 = v17;
    swift_release();
    id v29 = [v25 addSuccessBlock:v27];
    _Block_release(v27);

    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v28;
    *(unsigned char *)(v30 + 24) = 34;
    uint64_t v38 = (id (*)(void *))sub_10006AACC;
    Class v39 = (void *)v30;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_100053B18;
    uint64_t v37 = &unk_1000C6910;
    id v31 = _Block_copy(&aBlock);
    id v32 = v28;
    swift_release();
    id v33 = [v29 addFailureBlock:v31];
    _Block_release(v31);

    return (id)sub_100003950((uint64_t)v11, (uint64_t *)&unk_1000DD8F0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10005E544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_10007E63C((uint64_t)v8), (v5 & 1) != 0))
  {
    sub_10000CA4C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_100067314((uint64_t)v8);
  if (*((void *)&v10 + 1))
  {
    if (swift_dynamicCast())
    {
      UUID.init(uuidString:)();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_100003950((uint64_t)&v9, &qword_1000DE200);
  }
  uint64_t v7 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);
}

void sub_10005E67C(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, char a7)
{
  uint64_t v12 = sub_10007F36C(a3, a5);
  if (!v7)
  {
    uint64_t v13 = (void *)v12;
    if (v12)
    {
      id v14 = [a4 baseViewController];
      if (v14)
      {
        uint64_t v15 = v14;
        sub_10007609C(a7);
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [a6 startedTest:v16];

        id v17 = [a2 showCameraProfile:v13 clipID:0];
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v15;
        void v23[4] = sub_10006A098;
        v23[5] = v18;
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 1107296256;
        v23[2] = sub_10007A1D0;
        v23[3] = &unk_1000C6960;
        uint64_t v19 = _Block_copy(v23);
        id v20 = v15;
        swift_release();
        [v17 flatMap:v19];
        _Block_release(v19);
      }
      else
      {
        sub_100064C18();
        swift_allocError();
        *(void *)uint64_t v22 = 1;
        *(_OWORD *)(v22 + 8) = 0u;
        *(_OWORD *)(v22 + 24) = 0u;
        *(void *)(v22 + 40) = 0;
        *(unsigned char *)(v22 + 48) = 5;
        swift_willThrow();
      }
    }
    else
    {
      sub_100064C18();
      swift_allocError();
      strcpy(v21, "cameraProfile");
      *((_WORD *)v21 + 7) = -4864;
      v21[48] = 2;
      swift_willThrow();
    }
  }
}

id sub_10005E8D0(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5 - 8);
  long long v9 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  NSString v11 = (char *)&aBlock - v10;
  sub_10005E544(a2, (uint64_t)&aBlock - v10);
  sub_1000038EC((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_1000DD8F0);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  sub_1000688D8((uint64_t)v9, v13 + v12, (uint64_t *)&unk_1000DD8F0);
  unint64_t v14 = v13 + ((v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v14 = a1;
  *(unsigned char *)(v14 + 8) = 35;
  uint64_t v15 = HFHomeAppTabIdentifierHome;
  id v16 = v2;
  id v17 = a1;
  id result = [v16 _selectAndFinishFirstReadForTabWithIdentifier:v15];
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v38 = sub_10007CB3C;
    Class v39 = 0;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_100053D50;
    uint64_t v37 = &unk_1000C69B0;
    id v20 = _Block_copy(&aBlock);
    id v21 = [v19 flatMap:v20];
    _Block_release(v20);

    uint64_t v22 = (void *)swift_allocObject();
    void v22[2] = v16;
    v22[3] = sub_10006A1FC;
    void v22[4] = v13;
    uint64_t v38 = (id (*)(void *))sub_10006A6F8;
    Class v39 = v22;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_100053D50;
    uint64_t v37 = &unk_1000C6A00;
    uint64_t v23 = _Block_copy(&aBlock);
    id v24 = v16;
    swift_retain();
    swift_release();
    id v25 = [v21 flatMap:v23];
    _Block_release(v23);
    swift_release();

    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v17;
    *(unsigned char *)(v26 + 24) = 35;
    uint64_t v38 = (id (*)(void *))sub_10006AAD4;
    Class v39 = (void *)v26;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_100053D54;
    uint64_t v37 = &unk_1000C6A50;
    double v27 = _Block_copy(&aBlock);
    id v28 = v17;
    swift_release();
    id v29 = [v25 addSuccessBlock:v27];
    _Block_release(v27);

    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v28;
    *(unsigned char *)(v30 + 24) = 35;
    uint64_t v38 = (id (*)(void *))sub_10006AACC;
    Class v39 = (void *)v30;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    uint64_t v36 = sub_100053B18;
    uint64_t v37 = &unk_1000C6AA0;
    id v31 = _Block_copy(&aBlock);
    id v32 = v28;
    swift_release();
    id v33 = [v29 addFailureBlock:v31];
    _Block_release(v31);

    return (id)sub_100003950((uint64_t)v11, (uint64_t *)&unk_1000DD8F0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10005ED3C(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, char a7)
{
  uint64_t v12 = sub_10007F36C(a3, a5);
  if (!v7)
  {
    uint64_t v13 = (void *)v12;
    if (v12)
    {
      id v14 = [a4 baseViewController];
      if (v14)
      {
        uint64_t v15 = v14;
        sub_10007609C(a7);
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [a6 startedTest:v16];

        id v17 = [a2 showSettingsForCameraProfile:v13];
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v15;
        void v23[4] = sub_10006A6F4;
        v23[5] = v18;
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 1107296256;
        v23[2] = sub_10007A1D0;
        v23[3] = &unk_1000C6AF0;
        uint64_t v19 = _Block_copy(v23);
        id v20 = v15;
        swift_release();
        [v17 flatMap:v19];
        _Block_release(v19);
      }
      else
      {
        sub_100064C18();
        swift_allocError();
        *(void *)uint64_t v22 = 1;
        *(_OWORD *)(v22 + 8) = 0u;
        *(_OWORD *)(v22 + 24) = 0u;
        *(void *)(v22 + 40) = 0;
        *(unsigned char *)(v22 + 48) = 5;
        swift_willThrow();
      }
    }
    else
    {
      sub_100064C18();
      swift_allocError();
      strcpy(v21, "cameraProfile");
      *((_WORD *)v21 + 7) = -4864;
      v21[48] = 2;
      swift_willThrow();
    }
  }
}

id sub_10005EF8C(int a1, id a2)
{
  id v2 = [a2 hu_dismissViewControllerAnimated:1];
  id v3 = [v2 asGeneric];

  return v3;
}

void sub_10005EFE8(uint64_t a1, void *a2, char a3)
{
  sub_10007609C(a3);
  id v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 finishedTest:v4 waitForCommit:0 extraResults:0];
}

uint64_t variable initialization expression of AdaptiveTabBarController.$__lazy_storage_$_navigator()
{
  return 0;
}

uint64_t variable initialization expression of AdaptiveTabBarController.hideRooms()
{
  return 0;
}

void *variable initialization expression of AdaptiveTabBarController.controllers()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of AdaptiveTabBarController.localeAvailability()
{
  id v0 = [self getAvailabilityDictionary];
  uint64_t v1 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v1;
}

uint64_t _s23AccessoryPickerDelegateCMa()
{
  return self;
}

void type metadata accessor for HFHomeAppTabIdentifier(uint64_t a1)
{
}

uint64_t sub_10005F11C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_10007EFCC(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10005FF10(v6);
  return specialized ContiguousArray._endMutation()();
}

id sub_10005F198(void *a1, id a2, uint64_t (*a3)(void *, void *, id))
{
  id v5 = [a2 appNavigator];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [a1 itemManager];
    id v8 = [v7 home];

    if (v8)
    {
      id v13 = (id)a3(a1, v6, v8);
      id v14 = [v13 asGeneric];
    }
    else
    {
      NSString v11 = self;
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [v11 hf_errorWithCode:30 description:v12];

      id v8 = (id)_convertErrorToNSError(_:)();
      id v14 = [self futureWithError:v8];
    }
    id v10 = v14;
  }
  else
  {
    sub_100064C18();
    swift_allocError();
    *(void *)uint64_t v9 = 1;
    *(_OWORD *)(v9 + 8) = 0u;
    *(_OWORD *)(v9 + 24) = 0u;
    *(void *)(v9 + 40) = 0;
    *(unsigned char *)(v9 + 48) = 5;
    id v13 = (id)_convertErrorToNSError(_:)();
    id v10 = [self futureWithError:v13];
    swift_errorRelease();
  }

  return v10;
}

id sub_10005F3C8(void *a1)
{
  id v24 = &OBJC_PROTOCOL___HUPerformanceTestableViewController;
  uint64_t v2 = swift_dynamicCastObjCProtocolConditional();
  if (v2)
  {
    id v3 = (void *)v2;
    id v4 = a1;
    id v5 = [v3 hu_performanceTestReadyFuture];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    id v21 = sub_100064D5C;
    uint64_t v22 = v6;
    id v17 = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_100053D50;
    id v20 = &unk_1000C4F98;
    id v7 = _Block_copy(&v17);
    id v8 = v4;
    swift_release();
    id v9 = [v5 flatMap:v7];
LABEL_6:
    id v15 = v9;
    _Block_release(v7);

    return v15;
  }
  uint64_t v23 = &OBJC_PROTOCOL___HUPreloadableViewController;
  uint64_t v10 = swift_dynamicCastObjCProtocolConditional();
  if (v10)
  {
    NSString v11 = (void *)v10;
    id v12 = a1;
    id result = [v11 hu_preloadContent];
    if (result)
    {
      id v5 = result;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v12;
      id v21 = sub_100064D5C;
      uint64_t v22 = v14;
      id v17 = _NSConcreteStackBlock;
      uint64_t v18 = 1107296256;
      uint64_t v19 = sub_100053D50;
      id v20 = &unk_1000C4F48;
      id v7 = _Block_copy(&v17);
      id v8 = v12;
      swift_release();
      id v9 = [v5 flatMap:v7];
      goto LABEL_6;
    }
    __break(1u);
  }
  else
  {
    id v16 = [self futureWithResult:a1];
    return v16;
  }
  return result;
}

id sub_10005F640(uint64_t a1, void *a2)
{
  sub_10000AE6C(0, &qword_1000DD750);
  id v4 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v5 = a2;
  uint64_t v6 = (void *)v4();
  swift_release();

  return v6;
}

uint64_t sub_10005F6C4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_10005F724(uint64_t a1, uint64_t a2)
{
  return sub_10005FB9C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10005F73C(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_10005F7B4(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10005F834@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10005F878@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10005F8C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10005F8EC()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_10005F978(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_10005F98C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_10005F99C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10005F9A8(uint64_t a1)
{
  uint64_t v2 = sub_10005FAF4(&qword_1000DD6B0, type metadata accessor for HFHomeAppTabIdentifier);
  uint64_t v3 = sub_10005FAF4(&qword_1000DD6B8, type metadata accessor for HFHomeAppTabIdentifier);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10005FA64()
{
  return sub_10005FAF4(&qword_1000DD698, type metadata accessor for HFHomeAppTabIdentifier);
}

uint64_t sub_10005FAAC()
{
  return sub_10005FAF4(&qword_1000DD6A0, type metadata accessor for HFHomeAppTabIdentifier);
}

uint64_t sub_10005FAF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005FB3C()
{
  return sub_10005FAF4(&qword_1000DD6A8, type metadata accessor for HFHomeAppTabIdentifier);
}

uint64_t sub_10005FB84(uint64_t a1, uint64_t a2)
{
  return sub_10005FB9C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10005FB9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10005FBE0()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10005FC34()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10005FCA8(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000D858(&qword_1000DD9C8);
  uint64_t v10 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100069874(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void sub_10005FF10(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_160;
    }
    if (v4) {
      sub_1000609D4(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_168;
  }
  Swift::Int v130 = v5;
  Swift::Int v132 = v4;
  uint64_t v125 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    uint64_t v143 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v69 = _swiftEmptyArrayStorage[2];
LABEL_124:
      if (v69 >= 2)
      {
        uint64_t v118 = *v125;
        do
        {
          unint64_t v119 = v69 - 2;
          if (v69 < 2) {
            goto LABEL_154;
          }
          if (!v118) {
            goto LABEL_167;
          }
          uint64_t v120 = *(void *)&v9[16 * v119 + 32];
          uint64_t v121 = *(void *)&v9[16 * v69 + 24];
          sub_100060C70((void **)(v118 + 8 * v120), (void **)(v118 + 8 * *(void *)&v9[16 * v69 + 16]), v118 + 8 * v121, __dst);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_156;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_10007E628((uint64_t)v9);
          }
          if (v119 >= *((void *)v9 + 2)) {
            goto LABEL_157;
          }
          uint64_t v122 = &v9[16 * v119 + 32];
          *(void *)uint64_t v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v9 + 2);
          if (v69 > v123) {
            goto LABEL_158;
          }
          memmove(&v9[16 * v69 + 16], &v9[16 * v69 + 32], 16 * (v123 - v69));
          *((void *)v9 + 2) = v123 - 1;
          unint64_t v69 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_135:
      swift_bridgeObjectRelease();
      goto LABEL_136;
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    sub_10000AE6C(0, &qword_1000DE630);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v143 = v8;
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v126 = *a1 + 16;
  uint64_t v127 = *a1 - 8;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v12 = v132;
  uint64_t v137 = *a1;
  while (1)
  {
    Swift::Int v13 = v10 + 1;
    Swift::Int v133 = v10;
    if (v10 + 1 >= v12) {
      goto LABEL_42;
    }
    Swift::Int v14 = v10;
    BOOL v15 = *(void **)(v11 + 8 * v13);
    v141 = *(void **)(v11 + 8 * v10);
    uint64_t v16 = v141;
    id v142 = v15;
    id v17 = v15;
    id v18 = v16;
    BOOL v134 = sub_1000554D0(&v142, &v141);
    if (v2)
    {
      swift_bridgeObjectRelease();

LABEL_136:
      *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }

    Swift::Int v13 = v14 + 2;
    if (v14 + 2 < v132)
    {
      v128 = v9;
      uint64_t v19 = (id *)(v126 + 8 * v14);
      while (1)
      {
        Swift::Int v138 = v13;
        id v20 = *(v19 - 1);
        id v21 = *v19;
        id v22 = v20;
        id v23 = [v21 hf_affectedServices];
        sub_10000AE6C(0, &qword_1000DD830);
        sub_100064D08(&qword_1000DD838, &qword_1000DD830);
        uint64_t v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v25 = (v24 & 0xC000000000000001) != 0 ? __CocoaSet.count.getter() : *(void *)(v24 + 16);
        swift_bridgeObjectRelease();
        id v26 = [v22 hf_affectedServices];
        uint64_t v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v28 = (v27 & 0xC000000000000001) != 0 ? __CocoaSet.count.getter() : *(void *)(v27 + 16);
        swift_bridgeObjectRelease();
        if (v25 == v28)
        {
          id v29 = [v21 name];
          uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v32 = v31;

          id v33 = [v22 name];
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v35;

          if (v34 != v30) {
            goto LABEL_28;
          }
          if (v36 == v32) {
            int v37 = 0;
          }
          else {
LABEL_28:
          }
            int v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
          Swift::Int v13 = v138;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          int v37 = v28 < v25;
          Swift::Int v13 = v138;
        }
        if ((v134 ^ v37)) {
          break;
        }
        ++v13;
        ++v19;
        if (v132 == v13)
        {
          Swift::Int v13 = v132;
          break;
        }
      }
      uint64_t v9 = v128;
    }
    uint64_t v11 = v137;
    if (v134)
    {
      if (v13 < v133) {
        goto LABEL_163;
      }
      if (v133 < v13)
      {
        uint64_t v38 = (uint64_t *)(v127 + 8 * v13);
        Swift::Int v39 = v13;
        Swift::Int v40 = v133;
        uint64_t v41 = (uint64_t *)(v137 + 8 * v133);
        do
        {
          if (v40 != --v39)
          {
            if (!v137) {
              goto LABEL_166;
            }
            uint64_t v42 = *v41;
            uint64_t *v41 = *v38;
            *uint64_t v38 = v42;
          }
          ++v40;
          --v38;
          ++v41;
        }
        while (v40 < v39);
      }
    }
LABEL_42:
    if (v13 < v132)
    {
      if (__OFSUB__(v13, v133)) {
        goto LABEL_159;
      }
      if (v13 - v133 < v130) {
        break;
      }
    }
LABEL_73:
    if (v13 < v133) {
      goto LABEL_155;
    }
LABEL_74:
    Swift::Int v140 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_10007E46C(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v68 = *((void *)v9 + 2);
    unint64_t v67 = *((void *)v9 + 3);
    unint64_t v69 = v68 + 1;
    uint64_t v11 = v137;
    if (v68 >= v67 >> 1)
    {
      v117 = sub_10007E46C((char *)(v67 > 1), v68 + 1, 1, v9);
      uint64_t v11 = v137;
      uint64_t v9 = v117;
    }
    *((void *)v9 + 2) = v69;
    char v70 = v9 + 32;
    id v71 = &v9[16 * v68 + 32];
    *(void *)id v71 = v133;
    *((void *)v71 + 1) = v140;
    if (v68)
    {
      while (1)
      {
        unint64_t v72 = v69 - 1;
        if (v69 >= 4)
        {
          id v77 = &v70[16 * v69];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_143;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_144;
          }
          unint64_t v84 = v69 - 2;
          id v85 = &v70[16 * v69 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_146;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_149;
          }
          if (v89 >= v80)
          {
            unint64_t v107 = &v70[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_153;
            }
            BOOL v100 = v75 < v110;
            goto LABEL_110;
          }
        }
        else
        {
          if (v69 != 3)
          {
            uint64_t v101 = *((void *)v9 + 4);
            uint64_t v102 = *((void *)v9 + 5);
            BOOL v83 = __OFSUB__(v102, v101);
            uint64_t v94 = v102 - v101;
            char v95 = v83;
            goto LABEL_104;
          }
          uint64_t v74 = *((void *)v9 + 4);
          uint64_t v73 = *((void *)v9 + 5);
          BOOL v83 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          char v76 = v83;
        }
        if (v76) {
          goto LABEL_145;
        }
        unint64_t v84 = v69 - 2;
        uint64_t v90 = &v70[16 * v69 - 32];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v93 = __OFSUB__(v91, v92);
        uint64_t v94 = v91 - v92;
        char v95 = v93;
        if (v93) {
          goto LABEL_148;
        }
        uint64_t v96 = &v70[16 * v72];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v83 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v83) {
          goto LABEL_151;
        }
        if (__OFADD__(v94, v99)) {
          goto LABEL_152;
        }
        if (v94 + v99 >= v75)
        {
          BOOL v100 = v75 < v99;
LABEL_110:
          if (v100) {
            unint64_t v72 = v84;
          }
          goto LABEL_112;
        }
LABEL_104:
        if (v95) {
          goto LABEL_147;
        }
        uint64_t v103 = &v70[16 * v72];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v83 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v83) {
          goto LABEL_150;
        }
        if (v106 < v94) {
          goto LABEL_121;
        }
LABEL_112:
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v69)
        {
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
          goto LABEL_162;
        }
        if (!v11) {
          goto LABEL_165;
        }
        id v112 = &v70[16 * v111];
        uint64_t v113 = *(void *)v112;
        uint64_t v114 = &v70[16 * v72];
        uint64_t v115 = *((void *)v114 + 1);
        sub_100060C70((void **)(v11 + 8 * *(void *)v112), (void **)(v11 + 8 * *(void *)v114), v11 + 8 * v115, __dst);
        if (v2) {
          goto LABEL_135;
        }
        if (v115 < v113) {
          goto LABEL_140;
        }
        if (v72 > *((void *)v9 + 2)) {
          goto LABEL_141;
        }
        *(void *)id v112 = v113;
        *(void *)&v70[16 * v111 + 8] = v115;
        unint64_t v116 = *((void *)v9 + 2);
        if (v72 >= v116) {
          goto LABEL_142;
        }
        unint64_t v69 = v116 - 1;
        memmove(&v70[16 * v72], v114 + 16, 16 * (v116 - 1 - v72));
        *((void *)v9 + 2) = v116 - 1;
        uint64_t v11 = v137;
        if (v116 <= 2) {
          goto LABEL_121;
        }
      }
    }
    unint64_t v69 = 1;
LABEL_121:
    Swift::Int v12 = v132;
    Swift::Int v10 = v140;
    if (v140 >= v132) {
      goto LABEL_124;
    }
  }
  if (__OFADD__(v133, v130)) {
    goto LABEL_161;
  }
  Swift::Int v43 = v132;
  if (v133 + v130 < v132) {
    Swift::Int v43 = v133 + v130;
  }
  if (v43 >= v133)
  {
    if (v13 == v43)
    {
      if (v13 < v133) {
        goto LABEL_155;
      }
      goto LABEL_74;
    }
    id v129 = v9;
    uint64_t v124 = v2;
    uint64_t v44 = v127 + 8 * v13;
    Swift::Int v131 = v43;
LABEL_55:
    uint64_t v45 = *(void **)(v11 + 8 * v13);
    Swift::Int v46 = v133;
    uint64_t v135 = v44;
    Swift::Int v139 = v13;
    while (1)
    {
      id v47 = *(void **)v44;
      id v48 = v45;
      id v49 = v47;
      id v50 = [v48 hf_affectedServices];
      sub_10000AE6C(0, &qword_1000DD830);
      sub_100064D08(&qword_1000DD838, &qword_1000DD830);
      uint64_t v51 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v51 & 0xC000000000000001) != 0) {
        uint64_t v52 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v52 = *(void *)(v51 + 16);
      }
      swift_bridgeObjectRelease();
      id v53 = [v49 hf_affectedServices];
      uint64_t v54 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v54 & 0xC000000000000001) != 0) {
        uint64_t v55 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v55 = *(void *)(v54 + 16);
      }
      swift_bridgeObjectRelease();
      if (v52 == v55)
      {
        id v56 = [v48 name];
        uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v59 = v58;

        id v60 = [v49 name];
        uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v63 = v62;

        if (v61 == v57 && v63 == v59)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v11 = v137;
          Swift::Int v65 = v139;
LABEL_54:
          Swift::Int v13 = v65 + 1;
          uint64_t v44 = v135 + 8;
          if (v13 == v131)
          {
            Swift::Int v13 = v131;
            uint64_t v2 = v124;
            uint64_t v9 = v129;
            goto LABEL_73;
          }
          goto LABEL_55;
        }
        char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int v65 = v139;
        if ((v64 & 1) == 0) {
          goto LABEL_53;
        }
      }
      else
      {

        Swift::Int v65 = v139;
        if (v55 >= v52)
        {
LABEL_53:
          uint64_t v11 = v137;
          goto LABEL_54;
        }
      }
      uint64_t v11 = v137;
      if (!v137) {
        goto LABEL_164;
      }
      uint64_t v66 = *(void **)v44;
      uint64_t v45 = *(void **)(v44 + 8);
      *(void *)uint64_t v44 = v45;
      *(void *)(v44 + 8) = v66;
      v44 -= 8;
      if (v65 == ++v46) {
        goto LABEL_54;
      }
    }
  }
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1000609D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v31 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v6 = *(void **)(v31 + 8 * v4);
    uint64_t v7 = a1;
    uint64_t v29 = v5;
    uint64_t v30 = v4;
    while (1)
    {
      uint64_t v8 = *(void **)v5;
      id v9 = v6;
      id v10 = v8;
      id v11 = [v9 hf_affectedServices];
      sub_10000AE6C(0, &qword_1000DD830);
      sub_100064D08(&qword_1000DD838, &qword_1000DD830);
      uint64_t v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v13 = (v12 & 0xC000000000000001) != 0 ? __CocoaSet.count.getter() : *(void *)(v12 + 16);
      swift_bridgeObjectRelease();
      id v14 = [v10 hf_affectedServices];
      uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v16 = (v15 & 0xC000000000000001) != 0 ? __CocoaSet.count.getter() : *(void *)(v15 + 16);
      swift_bridgeObjectRelease();
      if (v13 == v16)
      {
        id v17 = [v9 name];
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;

        id v21 = [v10 name];
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v23;

        if (v22 == v18 && v24 == v20)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v4 = v30;
LABEL_5:
          ++v4;
          uint64_t v5 = v29 + 8;
          if (v4 == a2) {
            return;
          }
          goto LABEL_6;
        }
        char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = v30;
        if ((v25 & 1) == 0) {
          goto LABEL_5;
        }
      }
      else
      {

        if (v16 >= v13) {
          goto LABEL_5;
        }
      }
      if (!v31) {
        break;
      }
      id v26 = *(void **)v5;
      uint64_t v6 = *(void **)(v5 + 8);
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v26;
      v5 -= 8;
      if (v4 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100060C70(void **__src, void **a2, unint64_t a3, void **__dst)
{
  uint64_t v35 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v41 = __src;
  Swift::Int v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      id v21 = &__dst[v12];
      Swift::Int v39 = v21;
      uint64_t v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        uint64_t v22 = (id *)(a3 - 8);
        uint64_t v23 = v5;
        uint64_t v34 = v6;
        while (1)
        {
          uint64_t v24 = v21;
          char v25 = *--v21;
          id v38 = v25;
          id v26 = *--v23;
          int v37 = v26;
          id v27 = v38;
          id v28 = v26;
          BOOL v29 = sub_1000554D0(&v38, &v37);
          if (v36) {
            break;
          }
          BOOL v30 = v29;
          uint64_t v36 = 0;
          uint64_t v31 = v22 + 1;

          if (v30)
          {
            uint64_t v32 = v35;
            if (v31 != v5 || v22 >= v5) {
              *uint64_t v22 = *v23;
            }
            uint64_t v41 = v23;
            id v21 = v24;
          }
          else
          {
            Swift::Int v39 = v21;
            uint64_t v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24) {
              *uint64_t v22 = *v21;
            }
            uint64_t v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            uint64_t v5 = v23;
            if (v21 > v32) {
              continue;
            }
          }
          goto LABEL_48;
        }
      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    uint64_t v13 = &__dst[v9];
    Swift::Int v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        id v38 = *v5;
        id v14 = __dst;
        int v37 = *__dst;
        uint64_t v15 = v37;
        id v16 = v38;
        id v17 = v15;
        BOOL v18 = sub_1000554D0(&v38, &v37);
        if (v36) {
          break;
        }
        BOOL v19 = v18;

        if (v19)
        {
          uint64_t v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5) {
            *uint64_t v6 = *v5;
          }
          __dst = v14;
        }
        else
        {
          if (v6 != v14) {
            *uint64_t v6 = *v14;
          }
          __dst = v14 + 1;
          Swift::Int v40 = v14 + 1;
          uint64_t v20 = v5;
        }
        uint64_t v36 = 0;
        uint64_t v41 = ++v6;
        if (__dst < v13)
        {
          uint64_t v5 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_10007E568(&v41, &v40, &v39);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100060FA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000D858(&qword_1000DD748);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    id v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_100061248(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    int64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000D858(&qword_1000DD748);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  int64_t v9 = (void *)result;
  BOOL v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000614A8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_10005FCA8(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100061658(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100061678(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_100061678(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000D858(&qword_1000DD9C8);
  uint64_t v10 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  id v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  BOOL v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

int64_t sub_1000618B8(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_10006199C(void *a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 24) = 3;
  unint64_t v4 = (void *)swift_allocObject();
  v4[2] = v1;
  v4[3] = sub_100064C80;
  void v4[4] = v3;
  uint64_t v5 = HFHomeAppTabIdentifierHome;
  id v6 = a1;
  id v7 = v1;
  swift_retain();
  id v8 = [v7 _selectAndFinishFirstReadForTabWithIdentifier:v5];
  if (v8)
  {
    unint64_t v9 = v8;
    id v28 = (uint64_t (*)())sub_10007CB3C;
    BOOL v29 = 0;
    char v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053D50;
    uint64_t v27 = &unk_1000C4D68;
    unint64_t v10 = _Block_copy(&v24);
    id v11 = [v9 flatMap:v10];
    _Block_release(v10);

    unint64_t v12 = (void *)swift_allocObject();
    v12[2] = v7;
    uint64_t v12[3] = sub_100064CA4;
    void v12[4] = v4;
    id v28 = (uint64_t (*)())sub_100064CC8;
    BOOL v29 = v12;
    char v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053D50;
    uint64_t v27 = &unk_1000C4DB8;
    unint64_t v13 = _Block_copy(&v24);
    id v14 = v7;
    swift_retain();
    swift_release();
    id v15 = [v11 flatMap:v13];
    _Block_release(v13);
    swift_release();
    swift_release();

    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v6;
    *(unsigned char *)(v16 + 24) = 3;
    id v28 = (uint64_t (*)())sub_100064CE8;
    BOOL v29 = (void *)v16;
    char v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053B10;
    uint64_t v27 = &unk_1000C4E08;
    unint64_t v17 = _Block_copy(&v24);
    id v18 = v6;
    swift_release();
    id v19 = [v15 addSuccessBlock:v17];
    _Block_release(v17);

    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v18;
    *(unsigned char *)(v20 + 24) = 3;
    id v28 = sub_10006AACC;
    BOOL v29 = (void *)v20;
    char v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053B18;
    uint64_t v27 = &unk_1000C4E58;
    BOOL v21 = _Block_copy(&v24);
    id v22 = v18;
    swift_release();
    id v23 = [v19 addFailureBlock:v21];
    _Block_release(v21);
  }
  else
  {
    __break(1u);
  }
}

void sub_100061D50(void *a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 24) = 4;
  unint64_t v4 = (void *)swift_allocObject();
  v4[2] = v1;
  v4[3] = sub_10006A6E8;
  void v4[4] = v3;
  id v5 = a1;
  id v6 = v1;
  swift_retain();
  id v7 = sub_10005467C(1, (uint64_t)sub_10006A6C4, (uint64_t)v4);
  swift_release();
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  *(unsigned char *)(v8 + 24) = 4;
  uint64_t v20 = sub_10006AAD4;
  uint64_t v21 = v8;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  id v18 = sub_100053B10;
  id v19 = &unk_1000C5038;
  unint64_t v9 = _Block_copy(&v16);
  id v10 = v5;
  swift_release();
  id v11 = [v7 addSuccessBlock:v9];
  _Block_release(v9);

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(unsigned char *)(v12 + 24) = 4;
  uint64_t v20 = sub_10006AACC;
  uint64_t v21 = v12;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  id v18 = sub_100053B18;
  id v19 = &unk_1000C5088;
  unint64_t v13 = _Block_copy(&v16);
  id v14 = v10;
  swift_release();
  id v15 = [v11 addFailureBlock:v13];
  _Block_release(v13);
}

void sub_100061FA8(void *a1)
{
  id v3 = [v1 appNavigator];
  if (v3)
  {
    unint64_t v4 = v3;
    id v5 = (void *)swift_allocObject();
    v5[3] = 0;
    void v5[4] = 0;
    id v5[2] = v1;
    id v6 = v1;
    id v7 = sub_10005467C(1, (uint64_t)sub_10006A6C4, (uint64_t)v5);
    swift_release();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(unsigned char *)(v8 + 24) = 6;
    *(void *)(v8 + 32) = v4;
    uint64_t v27 = sub_100064E64;
    uint64_t v28 = v8;
    id v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_100053D50;
    BOOL v26 = &unk_1000C51C8;
    unint64_t v9 = _Block_copy(&v23);
    id v10 = a1;
    id v11 = v4;
    swift_release();
    id v12 = [v7 flatMap:v9];
    _Block_release(v9);

    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    *(unsigned char *)(v13 + 24) = 6;
    uint64_t v27 = (id (*)(void *))sub_10006AAD4;
    uint64_t v28 = v13;
    id v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_100053D54;
    BOOL v26 = &unk_1000C5218;
    id v14 = _Block_copy(&v23);
    id v15 = v10;
    swift_release();
    id v16 = [v12 addSuccessBlock:v14];
    _Block_release(v14);

    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    *(unsigned char *)(v17 + 24) = 6;
    uint64_t v27 = (id (*)(void *))sub_10006AACC;
    uint64_t v28 = v17;
    id v23 = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_100053B18;
    BOOL v26 = &unk_1000C5268;
    id v18 = _Block_copy(&v23);
    id v19 = v15;
    swift_release();
    id v20 = [v16 addFailureBlock:v18];
    _Block_release(v18);
  }
  else
  {
    sub_100064C18();
    uint64_t v21 = swift_allocError();
    *(void *)uint64_t v22 = 1;
    *(_OWORD *)(v22 + 8) = 0u;
    *(_OWORD *)(v22 + 24) = 0u;
    *(void *)(v22 + 40) = 0;
    *(unsigned char *)(v22 + 48) = 5;
    sub_100075F28(6, v21);
    swift_errorRelease();
  }
}

void sub_100062328(void *a1)
{
  unint64_t v2 = v1;
  id v4 = [self lightAccessoryTypeGroup];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(unsigned char *)(v5 + 24) = 10;
  id v6 = (void *)swift_allocObject();
  uint64_t v6[2] = sub_10006A6E8;
  v6[3] = v5;
  void v6[4] = v4;
  uint64_t v7 = HFHomeAppTabIdentifierHome;
  id v8 = a1;
  swift_retain();
  id v25 = v4;
  id v9 = [v2 _selectAndFinishFirstReadForTabWithIdentifier:v7];
  if (v9)
  {
    id v10 = v9;
    BOOL v30 = sub_10007CB3C;
    uint64_t v31 = 0;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_100053D50;
    BOOL v29 = &unk_1000C5628;
    id v11 = _Block_copy(&aBlock);
    id v12 = [v10 flatMap:v11];
    _Block_release(v11);

    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v2;
    v13[3] = sub_100064F64;
    void v13[4] = v6;
    BOOL v30 = (id (*)(void *))sub_10006A6F8;
    uint64_t v31 = v13;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_100053D50;
    BOOL v29 = &unk_1000C5678;
    id v14 = _Block_copy(&aBlock);
    id v15 = v2;
    swift_retain();
    swift_release();
    id v16 = [v12 flatMap:v14];
    _Block_release(v14);
    swift_release();
    swift_release();

    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v8;
    *(unsigned char *)(v17 + 24) = 10;
    BOOL v30 = (id (*)(void *))sub_10006AAD4;
    uint64_t v31 = (void *)v17;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_100053B10;
    BOOL v29 = &unk_1000C56C8;
    id v18 = _Block_copy(&aBlock);
    id v19 = v8;
    swift_release();
    id v20 = [v16 addSuccessBlock:v18];
    _Block_release(v18);

    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    *(unsigned char *)(v21 + 24) = 10;
    BOOL v30 = (id (*)(void *))sub_10006AACC;
    uint64_t v31 = (void *)v21;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_100053B18;
    BOOL v29 = &unk_1000C5718;
    uint64_t v22 = _Block_copy(&aBlock);
    id v23 = v19;
    swift_release();
    id v24 = [v20 addFailureBlock:v22];
    _Block_release(v22);
  }
  else
  {
    __break(1u);
  }
}

void sub_10006270C(void *a1)
{
  id v3 = [v1 appNavigator];
  if (v3)
  {
    id v4 = v3;
    id v5 = [self lightAccessoryTypeGroup];
    id v6 = (void *)swift_allocObject();
    uint64_t v6[2] = 0;
    v6[3] = 0;
    void v6[4] = v5;
    id v7 = v5;
    id v8 = sub_10005467C(1, (uint64_t)sub_100064F64, (uint64_t)v6);
    swift_release();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(unsigned char *)(v9 + 24) = 12;
    *(void *)(v9 + 32) = v4;
    uint64_t v28 = sub_10006A6FC;
    uint64_t v29 = v9;
    id v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053D50;
    uint64_t v27 = &unk_1000C5858;
    id v10 = _Block_copy(&v24);
    id v11 = a1;
    id v12 = v4;
    swift_release();
    id v13 = [v8 flatMap:v10];
    _Block_release(v10);

    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v11;
    *(unsigned char *)(v14 + 24) = 12;
    uint64_t v28 = sub_10006AAD4;
    uint64_t v29 = v14;
    id v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053D54;
    uint64_t v27 = &unk_1000C58A8;
    id v15 = _Block_copy(&v24);
    id v16 = v11;
    swift_release();
    id v17 = [v13 addSuccessBlock:v15];
    _Block_release(v15);

    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(unsigned char *)(v18 + 24) = 12;
    uint64_t v28 = sub_10006AACC;
    uint64_t v29 = v18;
    id v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053B18;
    uint64_t v27 = &unk_1000C58F8;
    id v19 = _Block_copy(&v24);
    id v20 = v16;
    swift_release();
    id v21 = [v17 addFailureBlock:v19];
    _Block_release(v19);
  }
  else
  {
    sub_100064C18();
    uint64_t v22 = swift_allocError();
    *(void *)uint64_t v23 = 1;
    *(_OWORD *)(v23 + 8) = 0u;
    *(_OWORD *)(v23 + 24) = 0u;
    *(void *)(v23 + 40) = 0;
    *(unsigned char *)(v23 + 48) = 5;
    sub_100075F28(12, v22);
    swift_errorRelease();
  }
}

void sub_100062AB4(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 24) = 7;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_10006A6E8;
  *(void *)(v5 + 24) = v4;
  uint64_t v6 = HFHomeAppTabIdentifierHome;
  id v7 = a1;
  swift_retain();
  id v8 = [v2 _selectAndFinishFirstReadForTabWithIdentifier:v6];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v28 = sub_10007CB3C;
    uint64_t v29 = 0;
    id v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053D50;
    uint64_t v27 = &unk_1000C52E0;
    id v10 = _Block_copy(&v24);
    id v11 = [v9 flatMap:v10];
    _Block_release(v10);

    id v12 = (void *)swift_allocObject();
    v12[2] = v2;
    uint64_t v12[3] = sub_100064E8C;
    void v12[4] = v5;
    uint64_t v28 = (id (*)(void *))sub_10006A6F8;
    uint64_t v29 = v12;
    id v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053D50;
    uint64_t v27 = &unk_1000C5330;
    id v13 = _Block_copy(&v24);
    id v14 = v2;
    swift_retain();
    swift_release();
    id v15 = [v11 flatMap:v13];
    _Block_release(v13);
    swift_release();
    swift_release();

    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v7;
    *(unsigned char *)(v16 + 24) = 7;
    uint64_t v28 = (id (*)(void *))sub_10006AAD4;
    uint64_t v29 = (void *)v16;
    id v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053B10;
    uint64_t v27 = &unk_1000C5380;
    id v17 = _Block_copy(&v24);
    id v18 = v7;
    swift_release();
    id v19 = [v15 addSuccessBlock:v17];
    _Block_release(v17);

    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v18;
    *(unsigned char *)(v20 + 24) = 7;
    uint64_t v28 = (id (*)(void *))sub_10006AACC;
    uint64_t v29 = (void *)v20;
    id v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    BOOL v26 = sub_100053B18;
    uint64_t v27 = &unk_1000C53D0;
    id v21 = _Block_copy(&v24);
    id v22 = v18;
    swift_release();
    id v23 = [v19 addFailureBlock:v21];
    _Block_release(v21);
  }
  else
  {
    __break(1u);
  }
}

void sub_100062E60(void *a1)
{
  id v3 = [v1 appNavigator];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = 0;
    *(void *)(v5 + 24) = 0;
    id v6 = sub_10005467C(1, (uint64_t)sub_100064E8C, v5);
    swift_release();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(unsigned char *)(v7 + 24) = 9;
    *(void *)(v7 + 32) = v4;
    BOOL v26 = sub_10006A6FC;
    uint64_t v27 = v7;
    id v22 = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    id v24 = sub_100053D50;
    uint64_t v25 = &unk_1000C5510;
    id v8 = _Block_copy(&v22);
    id v9 = a1;
    id v10 = v4;
    swift_release();
    id v11 = [v6 flatMap:v8];
    _Block_release(v8);

    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(unsigned char *)(v12 + 24) = 9;
    BOOL v26 = sub_10006AAD4;
    uint64_t v27 = v12;
    id v22 = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    id v24 = sub_100053D54;
    uint64_t v25 = &unk_1000C5560;
    id v13 = _Block_copy(&v22);
    id v14 = v9;
    swift_release();
    id v15 = [v11 addSuccessBlock:v13];
    _Block_release(v13);

    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    *(unsigned char *)(v16 + 24) = 9;
    BOOL v26 = sub_10006AACC;
    uint64_t v27 = v16;
    id v22 = _NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    id v24 = sub_100053B18;
    uint64_t v25 = &unk_1000C55B0;
    id v17 = _Block_copy(&v22);
    id v18 = v14;
    swift_release();
    id v19 = [v15 addFailureBlock:v17];
    _Block_release(v17);
  }
  else
  {
    sub_100064C18();
    uint64_t v20 = swift_allocError();
    *(void *)uint64_t v21 = 1;
    *(_OWORD *)(v21 + 8) = 0u;
    *(_OWORD *)(v21 + 24) = 0u;
    *(void *)(v21 + 40) = 0;
    *(unsigned char *)(v21 + 48) = 5;
    sub_100075F28(9, v20);
    swift_errorRelease();
  }
}

void sub_1000631D4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v9) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v9) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v9) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
LABEL_5:
    id v12 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    char v13 = dispatch thunk of DashboardContext.accessoryRepresentableHasStandardTileRepresentation(_:)();

    if (v13)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v20++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_100061248(a1, a2, v20, a3);
        return;
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v9) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_100063388(uint64_t a1, void *a2)
{
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  unint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    int64_t v9 = (char *)&v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_1000631D4((unint64_t *)v9, v6, a1);
    uint64_t v12 = v11;
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    char v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    id v14 = v8;
    sub_1000631D4((unint64_t *)v13, v6, a1);
    uint64_t v12 = v15;
    swift_release();

    swift_slowDealloc();
  }
  return v12;
}

Swift::Int sub_10006353C(uint64_t a1, void *a2)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_100063388(a1, a2);
  }
  id v2 = a2;
  __CocoaSet.makeIterator()();
  if (__CocoaSet.Iterator.next()())
  {
    sub_10000AE6C(0, &qword_1000DD738);
    do
    {
      swift_dynamicCast();
      if (dispatch thunk of DashboardContext.accessoryRepresentableHasStandardTileRepresentation(_:)())
      {
        if (*((void *)&_swiftEmptySetSingleton + 3) <= *((void *)&_swiftEmptySetSingleton + 2)) {
          sub_100060FA8();
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*((void *)&_swiftEmptySetSingleton + 5));
        char v4 = (char *)&_swiftEmptySetSingleton + 56;
        uint64_t v5 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*((void *)&_swiftEmptySetSingleton + (v6 >> 6) + 7)) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*((void *)&_swiftEmptySetSingleton + (v6 >> 6) + 7))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)&v4[8 * v7];
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)&v4[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
        *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v8) = v13;
        ++*((void *)&_swiftEmptySetSingleton + 2);
      }
      else
      {
      }
    }
    while (__CocoaSet.Iterator.next()());
  }

  swift_release();
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_100063758(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [a1 home];
  if (v6)
  {
    unint64_t v7 = v6;
    type metadata accessor for DashboardContext();
    unint64_t v8 = (void *)dispatch thunk of static DashboardContext.roomDashboard(for:in:)();
    id v9 = [a1 hf_accessoryLikeObjects];
    sub_10000AE6C(0, &qword_1000DD738);
    sub_100064D08(&qword_1000DD740, &qword_1000DD738);
    uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v11 = v8;
    Swift::Int v12 = sub_10006353C(v10, v11);

    if ((v12 & 0xC000000000000001) != 0) {
      uint64_t v13 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v13 = *(void *)(v12 + 16);
    }

    swift_release();
  }
  else
  {
    if (qword_1000DD5A8 != -1) {
      swift_once();
    }
    id v14 = (id)qword_1000DF990;
    Logger.init(_:)();
    id v15 = a1;
    int64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v25 = v23;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v24 = sub_10000C3F8(0xD000000000000024, 0x800000010009C0B0, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2112;
      uint64_t v22 = v3;
      uint64_t v24 = (uint64_t)v15;
      id v19 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v21 = v15;

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s nil home for room %@", (uint8_t *)v18, 0x16u);
      sub_10000D858(&qword_1000DD730);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    return 0;
  }
  return v13;
}

uint64_t sub_100063B28(void **__src, id *a2, unint64_t a3, void **a4, void *a5)
{
  uint64_t v5 = a2;
  id v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  int v37 = __src;
  uint64_t v36 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (a4 != a2 || &a2[v12] <= a4) {
        memmove(a4, a2, 8 * v12);
      }
      uint64_t v21 = &a4[v12];
      uint64_t v35 = (char *)v21;
      int v37 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        uint64_t v22 = (id *)(a3 - 8);
        uint64_t v23 = v5;
        uint64_t v31 = v6;
        do
        {
          uint64_t v34 = v5;
          uint64_t v24 = v22 + 1;
          uint64_t v25 = *--v23;
          id v26 = *(v21 - 1);
          id v27 = v25;
          uint64_t v28 = sub_100063758(v26);
          uint64_t v29 = sub_100063758(v27);

          if (v29 >= v28)
          {
            uint64_t v35 = (char *)(v21 - 1);
            if (v24 < v21 || v22 >= v21 || v24 != v21) {
              *uint64_t v22 = *(v21 - 1);
            }
            uint64_t v23 = v34;
            --v21;
          }
          else
          {
            if (v24 != v34 || v22 >= v34) {
              *uint64_t v22 = *v23;
            }
            int v37 = v23;
          }
          if (v23 <= v31) {
            break;
          }
          --v22;
          uint64_t v5 = v23;
        }
        while (v21 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4) {
      memmove(a4, __src, 8 * v9);
    }
    uint64_t v13 = &a4[v9];
    uint64_t v35 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      id v14 = a4;
      do
      {
        id v15 = *v14;
        id v16 = *v5;
        id v17 = v15;
        uint64_t v18 = sub_100063758(v16);
        uint64_t v19 = sub_100063758(v17);

        if (v19 >= v18)
        {
          if (v6 != v14) {
            *id v6 = *v14;
          }
          uint64_t v36 = ++v14;
          uint64_t v20 = v5;
        }
        else
        {
          uint64_t v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5) {
            *id v6 = *v5;
          }
        }
        ++v6;
        if (v14 >= v13) {
          break;
        }
        uint64_t v5 = v20;
      }
      while ((unint64_t)v20 < a3);
      int v37 = v6;
    }
LABEL_43:
    sub_10007E568(&v37, &v36, &v35);
    return 1;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100063E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    int64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v9 = v6;
    while (1)
    {
      uint64_t v10 = *(void **)v9;
      id v11 = v7;
      id v12 = v10;
      uint64_t v13 = sub_100063758(v11);
      uint64_t v14 = sub_100063758(v12);

      if (v14 >= v13)
      {
LABEL_4:
        ++v4;
        v6 += 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      id v15 = *(void **)v9;
      int64_t v7 = *(void **)(v9 + 8);
      *(void *)uint64_t v9 = v7;
      *(void *)(v9 + 8) = v15;
      v9 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

void sub_100063F0C(uint64_t *a1, void *a2)
{
  uint64_t v3 = v2;
  Swift::Int v5 = a1[1];
  id v119 = a2;
  Swift::Int v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_135;
    }
    if (v5) {
      sub_100063E28(0, v5, 1, a1);
    }

    return;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_143;
  }
  Swift::Int v113 = v6;
  uint64_t v110 = a1;
  if (v5 < 2)
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
    uint64_t v131 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v118 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      unint64_t v14 = _swiftEmptyArrayStorage[2];
LABEL_100:
      if (v14 >= 2)
      {
        uint64_t v101 = *v110;
        uint64_t v125 = *v110;
        do
        {
          unint64_t v102 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_130;
          }
          if (!v101) {
            goto LABEL_142;
          }
          uint64_t v103 = (uint64_t)v10;
          uint64_t v104 = *(void *)&v10[16 * v102 + 32];
          uint64_t v105 = *(void *)&v10[16 * v14 + 24];
          v128 = (id *)(v101 + 8 * *(void *)&v10[16 * v14 + 16]);
          Swift::Int v130 = (void **)(v101 + 8 * v104);
          unint64_t v106 = v101 + 8 * v105;
          id v107 = v119;
          sub_100063B28(v130, v128, v106, v118, v107);
          if (v3) {
            goto LABEL_98;
          }

          if (v105 < v104) {
            goto LABEL_131;
          }
          uint64_t v10 = (char *)v103;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_10007E628(v103);
          }
          if (v102 >= *((void *)v10 + 2)) {
            goto LABEL_132;
          }
          uint64_t v108 = &v10[16 * v102 + 32];
          *(void *)uint64_t v108 = v104;
          *((void *)v108 + 1) = v105;
          unint64_t v109 = *((void *)v10 + 2);
          if (v14 > v109) {
            goto LABEL_133;
          }
          memmove(&v10[16 * v14 + 16], &v10[16 * v14 + 32], 16 * (v109 - v14));
          *((void *)v10 + 2) = v109 - 1;
          unint64_t v14 = v109 - 1;
          uint64_t v101 = v125;
        }
        while (v109 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();

LABEL_112:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    sub_10000AE6C(0, &qword_1000DE210);
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    uint64_t v118 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v131 = v9;
  }
  Swift::Int v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v111 = *a1 - 8;
  uint64_t v112 = *a1 + 16;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v13 = v5;
  Swift::Int v115 = v5;
  uint64_t v129 = *a1;
  while (1)
  {
    Swift::Int v15 = v11;
    Swift::Int v16 = v11 + 1;
    Swift::Int v126 = v11;
    if (v11 + 1 < v13)
    {
      uint64_t v120 = v10;
      id v17 = *(void **)(v12 + 8 * v16);
      uint64_t v18 = *(void **)(v12 + 8 * v11);
      id v19 = v17;
      id v20 = v18;
      uint64_t v21 = sub_100063758(v19);
      uint64_t v22 = sub_100063758(v20);

      Swift::Int v23 = v15 + 2;
      if (v15 + 2 < v13)
      {
        uint64_t v116 = v3;
        uint64_t v24 = (id *)(v112 + 8 * v15);
        while (1)
        {
          uint64_t v25 = *(v24 - 1);
          id v26 = *v24;
          id v27 = v25;
          uint64_t v28 = sub_100063758(v26);
          uint64_t v29 = sub_100063758(v27);

          if (v22 < v21 == v29 >= v28) {
            break;
          }
          ++v24;
          if (v115 == ++v23)
          {
            Swift::Int v23 = v115;
            break;
          }
        }
        uint64_t v3 = v116;
        Swift::Int v15 = v126;
      }
      uint64_t v10 = v120;
      uint64_t v12 = v129;
      if (v22 >= v21)
      {
        Swift::Int v13 = v115;
        Swift::Int v16 = v23;
      }
      else
      {
        Swift::Int v13 = v115;
        if (v23 < v15) {
          goto LABEL_136;
        }
        Swift::Int v16 = v23;
        if (v15 < v23)
        {
          BOOL v30 = (uint64_t *)(v111 + 8 * v23);
          Swift::Int v31 = v23;
          Swift::Int v32 = v15;
          id v33 = (uint64_t *)(v129 + 8 * v15);
          do
          {
            if (v32 != --v31)
            {
              if (!v129) {
                goto LABEL_141;
              }
              uint64_t v34 = *v33;
              *id v33 = *v30;
              *BOOL v30 = v34;
            }
            ++v32;
            --v30;
            ++v33;
          }
          while (v32 < v31);
        }
      }
    }
    if (v16 < v13)
    {
      if (__OFSUB__(v16, v15)) {
        goto LABEL_134;
      }
      if (v16 - v15 < v113) {
        break;
      }
    }
LABEL_51:
    if (v16 < v15) {
      goto LABEL_129;
    }
    Swift::Int v114 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_10007E46C(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v48 = *((void *)v10 + 2);
    unint64_t v47 = *((void *)v10 + 3);
    unint64_t v14 = v48 + 1;
    uint64_t v12 = v129;
    if (v48 >= v47 >> 1)
    {
      BOOL v100 = sub_10007E46C((char *)(v47 > 1), v48 + 1, 1, v10);
      uint64_t v12 = v129;
      uint64_t v10 = v100;
    }
    *((void *)v10 + 2) = v14;
    id v49 = v10 + 32;
    id v50 = &v10[16 * v48 + 32];
    *(void *)id v50 = v15;
    *((void *)v50 + 1) = v114;
    if (v48)
    {
      while (1)
      {
        unint64_t v51 = v14 - 1;
        if (v14 >= 4)
        {
          id v56 = &v49[16 * v14];
          uint64_t v57 = *((void *)v56 - 8);
          uint64_t v58 = *((void *)v56 - 7);
          BOOL v62 = __OFSUB__(v58, v57);
          uint64_t v59 = v58 - v57;
          if (v62) {
            goto LABEL_118;
          }
          uint64_t v61 = *((void *)v56 - 6);
          uint64_t v60 = *((void *)v56 - 5);
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v54 = v60 - v61;
          char v55 = v62;
          if (v62) {
            goto LABEL_119;
          }
          unint64_t v63 = v14 - 2;
          char v64 = &v49[16 * v14 - 32];
          uint64_t v66 = *(void *)v64;
          uint64_t v65 = *((void *)v64 + 1);
          BOOL v62 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v62) {
            goto LABEL_121;
          }
          BOOL v62 = __OFADD__(v54, v67);
          uint64_t v68 = v54 + v67;
          if (v62) {
            goto LABEL_124;
          }
          if (v68 >= v59)
          {
            uint64_t v86 = &v49[16 * v51];
            uint64_t v88 = *(void *)v86;
            uint64_t v87 = *((void *)v86 + 1);
            BOOL v62 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v62) {
              goto LABEL_128;
            }
            BOOL v79 = v54 < v89;
            goto LABEL_88;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v80 = *((void *)v10 + 4);
            uint64_t v81 = *((void *)v10 + 5);
            BOOL v62 = __OFSUB__(v81, v80);
            uint64_t v73 = v81 - v80;
            char v74 = v62;
            goto LABEL_82;
          }
          uint64_t v53 = *((void *)v10 + 4);
          uint64_t v52 = *((void *)v10 + 5);
          BOOL v62 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          char v55 = v62;
        }
        if (v55) {
          goto LABEL_120;
        }
        unint64_t v63 = v14 - 2;
        unint64_t v69 = &v49[16 * v14 - 32];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v72 = __OFSUB__(v70, v71);
        uint64_t v73 = v70 - v71;
        char v74 = v72;
        if (v72) {
          goto LABEL_123;
        }
        uint64_t v75 = &v49[16 * v51];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v62 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v62) {
          goto LABEL_126;
        }
        if (__OFADD__(v73, v78)) {
          goto LABEL_127;
        }
        if (v73 + v78 >= v54)
        {
          BOOL v79 = v54 < v78;
LABEL_88:
          if (v79) {
            unint64_t v51 = v63;
          }
          goto LABEL_90;
        }
LABEL_82:
        if (v74) {
          goto LABEL_122;
        }
        uint64_t v82 = &v49[16 * v51];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v62 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v62) {
          goto LABEL_125;
        }
        if (v85 < v73) {
          goto LABEL_15;
        }
LABEL_90:
        unint64_t v90 = v51 - 1;
        if (v51 - 1 >= v14)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v12) {
          goto LABEL_140;
        }
        uint64_t v91 = v49;
        uint64_t v92 = &v49[16 * v90];
        uint64_t v93 = *(void *)v92;
        unint64_t v94 = v51;
        char v95 = &v91[16 * v51];
        uint64_t v96 = *((void *)v95 + 1);
        uint64_t v127 = (void **)(v12 + 8 * *(void *)v92);
        unint64_t v122 = v12 + 8 * v96;
        uint64_t v124 = (id *)(v12 + 8 * *(void *)v95);
        id v97 = v119;
        sub_100063B28(v127, v124, v122, v118, v97);
        if (v3)
        {
LABEL_98:
          swift_bridgeObjectRelease();

          *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          specialized Array._endMutation()();

          goto LABEL_112;
        }

        if (v96 < v93) {
          goto LABEL_115;
        }
        if (v94 > *((void *)v10 + 2)) {
          goto LABEL_116;
        }
        unint64_t v98 = v94;
        *(void *)uint64_t v92 = v93;
        id v49 = v10 + 32;
        *(void *)&v10[16 * v90 + 40] = v96;
        unint64_t v99 = *((void *)v10 + 2);
        if (v98 >= v99) {
          goto LABEL_117;
        }
        unint64_t v14 = v99 - 1;
        memmove(v95, v95 + 16, 16 * (v99 - 1 - v98));
        *((void *)v10 + 2) = v99 - 1;
        uint64_t v12 = v129;
        if (v99 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_15:
    Swift::Int v11 = v114;
    Swift::Int v13 = v115;
    if (v114 >= v115) {
      goto LABEL_100;
    }
  }
  if (__OFADD__(v15, v113)) {
    goto LABEL_137;
  }
  if (v15 + v113 >= v13) {
    Swift::Int v35 = v13;
  }
  else {
    Swift::Int v35 = v15 + v113;
  }
  if (v35 >= v15)
  {
    if (v16 != v35)
    {
      uint64_t v121 = v10;
      Swift::Int v123 = v35;
      uint64_t v117 = v3;
      uint64_t v36 = v111 + 8 * v16;
      do
      {
        Swift::Int v37 = v16;
        id v38 = *(void **)(v12 + 8 * v16);
        Swift::Int v39 = v15;
        uint64_t v40 = v36;
        while (1)
        {
          uint64_t v41 = *(void **)v40;
          id v42 = v38;
          id v43 = v41;
          uint64_t v44 = sub_100063758(v42);
          uint64_t v45 = sub_100063758(v43);

          if (v45 >= v44) {
            break;
          }
          uint64_t v12 = v129;
          if (!v129) {
            goto LABEL_139;
          }
          Swift::Int v46 = *(void **)v40;
          id v38 = *(void **)(v40 + 8);
          *(void *)uint64_t v40 = v38;
          *(void *)(v40 + 8) = v46;
          v40 -= 8;
          if (v37 == ++v39) {
            goto LABEL_44;
          }
        }
        uint64_t v12 = v129;
LABEL_44:
        Swift::Int v16 = v37 + 1;
        v36 += 8;
        Swift::Int v15 = v126;
      }
      while (v37 + 1 != v123);
      Swift::Int v16 = v123;
      uint64_t v3 = v117;
      uint64_t v10 = v121;
    }
    goto LABEL_51;
  }
LABEL_138:
  __break(1u);
LABEL_139:

  __break(1u);
LABEL_140:

  __break(1u);
LABEL_141:

  __break(1u);
LABEL_142:

  __break(1u);
LABEL_143:

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100064790(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_100081430(v3);
    *a1 = v3;
  }
  uint64_t v6 = *(void *)(v3 + 16);
  v8[0] = v3 + 32;
  v8[1] = v6;
  id v7 = v4;
  sub_100063F0C(v8, v7);

  specialized ContiguousArray._endMutation()();
}

uint64_t sub_100064830(void *a1)
{
  id v2 = [a1 actionSets];
  sub_10000AE6C(0, &qword_1000DE630);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    unint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t)sub_10007D31C(v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = v4;
  sub_10005F11C(&v12);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v12;
    if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      if (v10) {
        goto LABEL_8;
      }
    }
    else if (*(void *)(v12 + 16))
    {
LABEL_8:
      if ((v5 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_11;
      }
      if (*(void *)(v5 + 16))
      {
        id v6 = *(id *)(v5 + 32);
LABEL_11:
        id v7 = v6;
        swift_release();
        return (uint64_t)v7;
      }
      __break(1u);
      goto LABEL_17;
    }
    swift_release();
    sub_100064C18();
    swift_allocError();
    *(void *)uint64_t v11 = 0x65536E6F69746361;
    *(void *)(v11 + 8) = 0xE900000000000074;
    *(unsigned char *)(v11 + 48) = 2;
    return swift_willThrow();
  }
LABEL_17:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1000649C0(void *a1)
{
  id v3 = [v1 _selectAndFinishFirstReadForTabWithIdentifier:HFHomeAppTabIdentifierHome];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(unsigned char *)(v5 + 24) = 0;
    *(void *)(v5 + 32) = v1;
    uint64_t v18 = sub_100064BF0;
    uint64_t v19 = v5;
    unint64_t v14 = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    Swift::Int v16 = sub_100053B10;
    id v17 = &unk_1000C4BB0;
    id v6 = _Block_copy(&v14);
    id v7 = a1;
    id v8 = v1;
    swift_release();
    id v9 = [v4 addSuccessBlock:v6];
    _Block_release(v6);

    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v7;
    *(unsigned char *)(v10 + 24) = 0;
    uint64_t v18 = (void (*)(void *))sub_10006AACC;
    uint64_t v19 = v10;
    unint64_t v14 = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    Swift::Int v16 = sub_100053B18;
    id v17 = &unk_1000C4C00;
    uint64_t v11 = _Block_copy(&v14);
    id v12 = v7;
    swift_release();
    id v13 = [v9 addFailureBlock:v11];
    _Block_release(v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100064BB0()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100064BF0(void *a1)
{
  sub_100055D64(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100064C00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100064C10()
{
  return swift_release();
}

unint64_t sub_100064C18()
{
  unint64_t result = qword_1000DD720;
  if (!qword_1000DD720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DD720);
  }
  return result;
}

void sub_100064C70(void *a1)
{
  sub_100056194(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_100064C80()
{
  sub_100054138(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

id sub_100064CA4(int a1, void *a2, void *a3)
{
  return sub_100054488(a1, a2, a3, *(void **)(v3 + 16), *(void (**)(id))(v3 + 24));
}

id sub_100064CC8(void *a1)
{
  return sub_10005F198(a1, *(id *)(v1 + 16), *(uint64_t (**)(void *, void *, id))(v1 + 24));
}

void sub_100064CE8(uint64_t a1)
{
  sub_10005EFE8(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_100064D08(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AE6C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100064D60()
{
  id v1 = [self futureWithResult:*(void *)(v0 + 16)];

  return v1;
}

void sub_100064DBC(void *a1)
{
  sub_1000543C4(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100064DE0()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100064E1C()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

id sub_100064E64(void *a1)
{
  return sub_100053FAC(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32));
}

id sub_100064E8C(int a1, void *a2, uint64_t a3)
{
  return sub_100064EF4(a1, a2, a3);
}

uint64_t sub_100064EB4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

id sub_100064EF4(int a1, id a2, uint64_t a3)
{
  id v6 = *(void (**)(void))(v3 + 16);
  if (v6) {
    v6();
  }
  return [a2 showSpeakersAndTVsSectionWithTitle:0 forHome:a3 animated:1];
}

id sub_100064F64(int a1, void *a2, uint64_t a3)
{
  return sub_100064FD4(a1, a2, a3);
}

uint64_t sub_100064F8C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

id sub_100064FD4(int a1, id a2, uint64_t a3)
{
  id v6 = *(void (**)(void))(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 32);
  if (v6) {
    v6();
  }
  return [a2 showAccessoryTypeGroup:v7 forHome:a3 animated:1];
}

uint64_t sub_10006504C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100065084(void *a1)
{
  return sub_100054BDC(a1);
}

uint64_t sub_1000650A0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000650D8(void *a1)
{
  return sub_1000556C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1000650E4(void *a1)
{
  sub_100054CBC(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1000650F4()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10006513C(void *a1)
{
  return sub_1000559A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_100065148()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100065198()
{
  sub_100055AFC(*(uint64_t (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1000651A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000651E8(int a1, uint64_t a2)
{
  return sub_100055C9C(a1, a2, *(id *)(v2 + 16), *(void *)(v2 + 24));
}

id sub_1000651F0(void *a1)
{
  return sub_1000551B8(a1);
}

uint64_t sub_100065210()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100065258(void *a1)
{
  sub_100055260(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_100065268(void *a1)
{
  uint64_t v2 = v1;
  static os_log_type_t.default.getter();
  sub_10000AE6C(0, (unint64_t *)&qword_1000DD840);
  uint64_t v4 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();

  id v5 = [v2 baseViewController];
  if (v5)
  {
    id v6 = v5;
    id v7 = [v2 firstReadCompleteFuture];
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    Swift::Int v31 = sub_1000656B8;
    uint64_t v32 = v8;
    id v27 = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    uint64_t v29 = sub_100053D50;
    BOOL v30 = &unk_1000C5C68;
    id v9 = _Block_copy(&v27);
    id v10 = v6;
    swift_release();
    id v11 = [v7 flatMap:v9];
    _Block_release(v9);

    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(unsigned char *)(v12 + 24) = 16;
    *(void *)(v12 + 32) = v10;
    Swift::Int v31 = sub_1000656C0;
    uint64_t v32 = v12;
    id v27 = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    uint64_t v29 = sub_10007A1D0;
    BOOL v30 = &unk_1000C5CB8;
    id v13 = _Block_copy(&v27);
    id v14 = v10;
    id v15 = a1;
    swift_release();
    id v16 = [v11 flatMap:v13];
    _Block_release(v13);

    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    *(unsigned char *)(v17 + 24) = 16;
    Swift::Int v31 = sub_1000656D0;
    uint64_t v32 = v17;
    id v27 = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    uint64_t v29 = sub_100053D54;
    BOOL v30 = &unk_1000C5D08;
    uint64_t v18 = _Block_copy(&v27);
    id v19 = v15;
    swift_release();
    id v20 = [v16 addSuccessBlock:v18];
    _Block_release(v18);

    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    *(unsigned char *)(v21 + 24) = 16;
    Swift::Int v31 = sub_1000656F0;
    uint64_t v32 = v21;
    id v27 = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    uint64_t v29 = sub_100053B18;
    BOOL v30 = &unk_1000C5D58;
    uint64_t v22 = _Block_copy(&v27);
    id v23 = v19;
    swift_release();
    id v24 = [v20 addFailureBlock:v22];
    _Block_release(v22);
  }
  else
  {
    sub_100064C18();
    uint64_t v25 = swift_allocError();
    *(void *)uint64_t v26 = 1;
    *(_OWORD *)(v26 + 8) = 0u;
    *(_OWORD *)(v26 + 24) = 0u;
    *(void *)(v26 + 40) = 0;
    *(unsigned char *)(v26 + 48) = 5;
    sub_100075F28(16, v25);
    swift_errorRelease();
  }
}

id sub_1000656B8(int a1)
{
  return sub_1000562E4(a1, *(id *)(v1 + 16));
}

id sub_1000656C0(uint64_t a1)
{
  return sub_1000563B0(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_1000656D0(uint64_t a1)
{
  sub_1000569D0(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_1000656F0(uint64_t a1)
{
  sub_100075F28(*(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_100065720(void *a1)
{
  return sub_1000564EC(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100065730()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100065778()
{
  sub_10005662C(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100065788()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000657C0(uint64_t a1, void *a2)
{
  sub_1000567E0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1000657C8(uint64_t a1, uint64_t a2)
{
  return sub_10005694C(a1, a2, *(void (**)(long long *, uint64_t))(v2 + 16));
}

void *sub_1000657D0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void sub_100065814(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000D858(&qword_1000DD868);
    sub_1000678B8(&qword_1000DD870, &qword_1000DD868);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v17;
    uint64_t v16 = v18;
    uint64_t v2 = v19;
    uint64_t v3 = v20;
    unint64_t v4 = v21;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
      uint64_t v11 = v3;
      goto LABEL_29;
    }
    int64_t v13 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v16 + 8 * v13);
    uint64_t v11 = v3 + 1;
    if (!v14)
    {
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v16 + 8 * v11);
      if (!v14)
      {
        uint64_t v11 = v3 + 3;
        if (v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v16 + 8 * v11);
        if (!v14)
        {
          uint64_t v11 = v3 + 4;
          if (v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = *(void *)(v16 + 8 * v11);
          if (!v14)
          {
            uint64_t v11 = v3 + 5;
            if (v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = *(void *)(v16 + 8 * v11);
            if (!v14)
            {
              uint64_t v15 = v3 + 6;
              while (v8 != v15)
              {
                unint64_t v14 = *(void *)(v16 + 8 * v15++);
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10000EE28();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      HFActionSetBuilder.add(actionBuilder:)();

      uint64_t v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        swift_unknownObjectRetain();
        sub_10000D858(&qword_1000DD868);
        swift_dynamicCast();
        id v12 = v22;
        swift_unknownObjectRelease();
        uint64_t v11 = v3;
        uint64_t v9 = v4;
        if (v22) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_100065AD4(void *a1)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = __chkstk_darwin(v4);
  int64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    sub_100064C18();
    swift_allocError();
    *(void *)uint64_t v17 = 1701670760;
    *(void *)(v17 + 8) = 0xE400000000000000;
    *(unsigned char *)(v17 + 48) = 2;
    swift_willThrow();
    return (uint64_t)i;
  }
  uint64_t v46 = v5;
  uint64_t v47 = v1;
  uint64_t v44 = v8;
  uint64_t v45 = v6;
  id v9 = objc_allocWithZone((Class)HRERecommendationEngine);
  id v10 = a1;
  id v11 = [v9 init];
  id v12 = [v11 generateRecommendationsForHome:v10 options:113];

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = _swiftEmptyArrayStorage;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v13;
  aBlock[4] = sub_10006AAB4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100057B88;
  aBlock[3] = &unk_1000C60C8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id i = [v12 addCompletionBlock:v16];
  _Block_release(v16);

  swift_beginAccess();
  if (*(void *)(v14 + 16))
  {
    swift_errorRetain();
    swift_willThrow();

    swift_release();
LABEL_37:
    swift_release();
    return (uint64_t)i;
  }
  unint64_t v48 = (void *)v14;
  uint64_t v49 = v13;
  swift_beginAccess();
  unint64_t v18 = *(void *)(v13 + 16);
  unint64_t v51 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v18 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    id v42 = v12;
    id v43 = v10;
    if (v19) {
      goto LABEL_7;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    unint64_t v24 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_21:
    swift_bridgeObjectRelease();
    if (v24 >> 62) {
      goto LABEL_35;
    }
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (id i = v48; v25; id i = v48)
    {
      uint64_t v26 = 4;
      while (1)
      {
        id v28 = (v24 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v24 + 8 * v26);
        uint64_t v29 = v28;
        uint64_t v30 = v26 - 3;
        if (__OFADD__(v26 - 4, 1)) {
          break;
        }
        id v31 = [v28 sourceTemplate];
        if (v31)
        {
          id v27 = v31;
          self;
          if (swift_dynamicCastObjCClass())
          {
            swift_bridgeObjectRelease_n();

            id v32 = objc_allocWithZone((Class)HFActionSetBuilder);
            id v33 = v29;
            id v34 = v43;
            id v35 = [v32 initWithHome:v43];
            uint64_t v36 = v44;
            UUID.init()();
            UUID.uuidString.getter();
            (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v46);
            NSString v37 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v35 setName:v37];

            id v38 = [v33 actions];
            sub_10000D858(&qword_1000DD868);
            sub_1000678B8(&qword_1000DD870, &qword_1000DD868);
            uint64_t v39 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

            id i = v35;
            sub_100065814(v39);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();

            return (uint64_t)i;
          }
        }
        else
        {
          id v27 = v29;
        }

        ++v26;
        id i = v48;
        if (v30 == v25) {
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_35:
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_36:
    swift_bridgeObjectRelease_n();
    sub_100064C18();
    swift_allocError();
    *(void *)uint64_t v40 = 0xD000000000000031;
    *(void *)(v40 + 8) = 0x800000010009C300;
    *(unsigned char *)(v40 + 48) = 4;
    swift_willThrow();

    swift_release();
    goto LABEL_37;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v19 = result;
  id v42 = v12;
  id v43 = v10;
  if (!result) {
    goto LABEL_20;
  }
LABEL_7:
  if (v19 >= 1)
  {
    for (uint64_t j = 0; j != v19; ++j)
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v22 = *(id *)(v18 + 8 * j + 32);
      }
      id v23 = v22;
      self;
      if (swift_dynamicCastObjCClass())
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v24 = v51;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100066194(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  id v5 = [self sharedDispatcher];
  id v6 = [v5 home];

  uint64_t v7 = sub_100065AD4(v6);
  *(void *)(v4 + 16) = v7;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(unsigned char *)(v8 + 24) = 21;
  *(void *)(v8 + 32) = v4;
  id v9 = a1;
  swift_retain();
  sub_100056A44((uint64_t)sub_1000662F4, v8, v2, v9, 21, v4);
  swift_release();

  return swift_release();
}

void sub_1000662F4(void *a1)
{
  sub_10005776C(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_1000C5FE8, (uint64_t)sub_1000663C4, (uint64_t)&unk_1000C6000);
}

uint64_t sub_10006633C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100066384(void *a1)
{
  sub_100056B98(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100066398()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000663C4(uint64_t a1)
{
  return sub_100067274(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100056EDC);
}

void *sub_1000663DC()
{
  return sub_100057B20(v0, (SEL *)&selRef_deleteActionSet);
}

_OWORD *sub_100066400(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100066410()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100066448()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100066484(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void sub_1000664CC(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000D858(&qword_1000DD868);
    sub_1000678B8(&qword_1000DD870, &qword_1000DD868);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v20;
    uint64_t v19 = v21;
    uint64_t v4 = v22;
    uint64_t v5 = v23;
    unint64_t v6 = v24;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v19 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v18 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v10 = (v6 - 1) & v6;
      unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v12 = v5;
      goto LABEL_29;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v19 + 8 * v14);
    uint64_t v12 = v5 + 1;
    if (!v15)
    {
      uint64_t v12 = v5 + 2;
      if (v5 + 2 >= v18) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v5 + 3;
        if (v5 + 3 >= v18) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v19 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v5 + 4;
          if (v5 + 4 >= v18) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v19 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v5 + 5;
            if (v5 + 5 >= v18) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v19 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v5 + 6;
              while (v18 != v16)
              {
                unint64_t v15 = *(void *)(v19 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10000EE28();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      id v17 = [a2 triggerActionSets];
      [v17 addAnonymousActionBuilder:v13];

      uint64_t v5 = v12;
      unint64_t v6 = v10;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        swift_unknownObjectRetain();
        sub_10000D858(&qword_1000DD868);
        swift_dynamicCast();
        id v13 = v25;
        swift_unknownObjectRelease();
        uint64_t v12 = v5;
        uint64_t v10 = v6;
        if (v25) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_1000667C4(void *a1)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  if (!a1)
  {
    sub_100064C18();
    swift_allocError();
    *(void *)uint64_t v18 = 1701670760;
    *(void *)(v18 + 8) = 0xE400000000000000;
    *(unsigned char *)(v18 + 48) = 2;
    swift_willThrow();
    return (uint64_t)v2;
  }
  uint64_t v54 = v1;
  uint64_t v55 = v9;
  id v56 = (char *)&v49 - v7;
  uint64_t v57 = v8;
  uint64_t v58 = v6;
  id v10 = objc_allocWithZone((Class)HRERecommendationEngine);
  id v11 = a1;
  id v12 = [v10 init];
  id v13 = [v12 generateRecommendationsForHome:v11 options:114];

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = _swiftEmptyArrayStorage;
  unint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = 0;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v14;
  aBlock[4] = sub_1000672F8;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100057B88;
  aBlock[3] = &unk_1000C62D0;
  id v2 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v17 = [v13 addCompletionBlock:v2];
  _Block_release(v2);

  swift_beginAccess();
  if (v15[2])
  {
    swift_errorRetain();
    swift_willThrow();

LABEL_38:
    swift_release();
    swift_release();
    return (uint64_t)v2;
  }
  id v59 = v11;
  swift_beginAccess();
  unint64_t v19 = *(void *)(v14 + 16);
  unint64_t v62 = (unint64_t)_swiftEmptyArrayStorage;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v20 = result;
    uint64_t v52 = v14;
    id v53 = v13;
    if (result) {
      goto LABEL_7;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  uint64_t v52 = v14;
  id v53 = v13;
  if (!v20) {
    goto LABEL_20;
  }
LABEL_7:
  unint64_t v51 = v15;
  if (v20 < 1)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v20; ++i)
  {
    if ((v19 & 0xC000000000000001) != 0) {
      id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v23 = *(id *)(v19 + 8 * i + 32);
    }
    unint64_t v24 = v23;
    self;
    if (swift_dynamicCastObjCClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v25 = v62;
  unint64_t v15 = v51;
LABEL_21:
  swift_bridgeObjectRelease();
  id v2 = v59;
  if (v25 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    if (v26) {
      goto LABEL_23;
    }
LABEL_37:
    swift_bridgeObjectRelease_n();
    sub_100064C18();
    swift_allocError();
    *(void *)uint64_t v48 = 0xD000000000000031;
    *(void *)(v48 + 8) = 0x800000010009C300;
    *(unsigned char *)(v48 + 48) = 4;
    swift_willThrow();

    goto LABEL_38;
  }
  uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v26) {
    goto LABEL_37;
  }
LABEL_23:
  uint64_t v27 = 4;
  while (1)
  {
    if ((v25 & 0xC000000000000001) != 0) {
      id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v29 = *(id *)(v25 + 8 * v27);
    }
    id v2 = v29;
    uint64_t v30 = v27 - 3;
    if (__OFADD__(v27 - 4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    id v31 = v15;
    id v32 = [v29 sourceTemplate];
    if (v32) {
      break;
    }
    id v28 = v2;
LABEL_25:

    ++v27;
    unint64_t v15 = v31;
    id v2 = v59;
    if (v30 == v26) {
      goto LABEL_37;
    }
  }
  id v28 = v32;
  self;
  if (!swift_dynamicCastObjCClass())
  {

    goto LABEL_25;
  }
  swift_bridgeObjectRelease_n();

  unint64_t v51 = v2;
  id v33 = [v51 actions];
  sub_10000D858(&qword_1000DD868);
  sub_1000678B8(&qword_1000DD870, &qword_1000DD868);
  uint64_t v50 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v34 = objc_allocWithZone((Class)HUTriggerBuilderContext);
  id v35 = v59;
  id v36 = [v34 init];
  id v37 = [objc_allocWithZone((Class)HFEventTriggerBuilder) initWithHome:v35 context:v36];

  id v38 = [objc_allocWithZone((Class)HFCalendarEventBuilder) init];
  uint64_t v39 = v55;
  Date.init()();
  uint64_t v40 = v56;
  Date.addingTimeInterval(_:)();
  uint64_t v41 = v58;
  id v42 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v42(v39, v58);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  v42((uint64_t)v40, v41);
  [v38 setFireDate:isa];

  id v44 = [v37 timeInterface];
  uint64_t v60 = &OBJC_PROTOCOL___HFTimeEventBuilder;
  id v45 = v38;
  uint64_t v46 = (void *)swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  sub_10000D858(&qword_1000DD8E0);
  uint64_t result = swift_dynamicCastMetatype();
  if (!result) {
    goto LABEL_41;
  }
  [v44 setEventBuilder:v46];

  id v2 = v37;
  sub_1000664CC(v50, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  id v47 = v51;
  return (uint64_t)v2;
}

uint64_t sub_100066FA0(void *a1)
{
  id v2 = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  id v5 = [self sharedDispatcher];
  id v6 = [v5 home];

  uint64_t v7 = sub_1000667C4(v6);
  *(void *)(v4 + 16) = v7;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(unsigned char *)(v8 + 24) = 22;
  *(void *)(v8 + 32) = v4;
  id v9 = a1;
  swift_retain();
  sub_100057354((uint64_t)sub_100067100, v8, v2, v4, v9, 22);
  swift_release();

  return swift_release();
}

void sub_100067100(void *a1)
{
  sub_10005776C(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_1000C6240, (uint64_t)sub_10006725C, (uint64_t)&unk_1000C6258);
}

uint64_t sub_100067148()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

void sub_100067190(void *a1)
{
  sub_1000574A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(unsigned char *)(v1 + 48));
}

uint64_t sub_1000671A0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000671E0()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_100067214()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10006725C(uint64_t a1)
{
  return sub_100067274(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100057924);
}

uint64_t sub_100067274(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(unsigned __int8 *)(v2 + 33), *(void *)(v2 + 40));
}

void *sub_100067290()
{
  return sub_100057B20(v0, (SEL *)&selRef_deleteTrigger);
}

uint64_t sub_1000672B8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000672F8(uint64_t a1, uint64_t a2)
{
  return sub_100057C14(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100067314(uint64_t a1)
{
  return a1;
}

uint64_t sub_100067368()
{
  uint64_t v1 = *(void *)(sub_10000D858((uint64_t *)&unk_1000DD8F0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 25) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_10000D858(&qword_1000DD8E8) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + v6 + 9) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);

  uint64_t v9 = v0 + v3;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }

  uint64_t v12 = type metadata accessor for DispatchTimeInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v7, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v7, v12);
  }

  return _swift_deallocObject(v0, v7 + v8, v2 | v6 | 7);
}

id sub_100067584(void *a1)
{
  uint64_t v3 = *(void *)(sub_10000D858((uint64_t *)&unk_1000DD8F0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_10000D858(&qword_1000DD8E8) - 8);
  uint64_t v7 = *(void **)(v1 + 16);
  uint64_t v8 = *(void **)(v1 + v5);
  uint64_t v9 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  int v10 = *(unsigned __int8 *)(v1 + v5 + 8);
  unsigned __int8 v11 = *(unsigned char *)(v1 + 24);

  return sub_10005C64C(a1, v7, v11, v1 + v4, v8, v10, v9);
}

uint64_t sub_100067680()
{
  return _swift_deallocObject(v0, 17, 7);
}

BOOL sub_100067690(void *a1)
{
  return sub_10005D538(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_100067698()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000676A8()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1000676D4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000676E4()
{
  return _swift_deallocObject(v0, 33, 7);
}

id sub_100067724(int a1)
{
  return sub_10005DDC0(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

id sub_100067734(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DispatchTimeInterval() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10005D828(a1, v4);
}

uint64_t sub_1000677A8()
{
  uint64_t v1 = type metadata accessor for DispatchTimeInterval();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100067838(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DispatchTimeInterval() - 8);
  uint64_t v4 = (void (*)(char *, uint64_t))(v1
                                            + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_10005D9F8(a1, v4);
}

id sub_1000678A8()
{
  return [*(id *)(v0 + 16) finishWithNoResult];
}

uint64_t sub_1000678B8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100066484(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000678FC(void *a1)
{
  return sub_10005E058(a1);
}

id sub_100067904(char a1, uint64_t a2, uint64_t a3, CGFloat a4, double a5, CGFloat a6, double a7)
{
  CGFloat v12 = a5 + 5.0;
  CGFloat v13 = a7 + -10.0;
  CGRect.center.getter();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  v36.origin.x = a4;
  v36.origin.y = v12;
  v36.size.width = a6;
  v36.size.height = v13;
  CGFloat MinY = CGRectGetMinY(v36);
  v37.origin.x = a4;
  v37.origin.y = v12;
  v37.size.width = a6;
  v37.size.height = v13;
  CGFloat MaxY = CGRectGetMaxY(v37);
  sub_10007609C(a1);
  sub_10000D858((uint64_t *)&unk_1000DDDB0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100094FC0;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v15;
  *(void *)(v21 + 24) = v17;
  *(void *)(v21 + 32) = v15;
  *(CGFloat *)(v21 + 40) = MinY;
  *(void *)(v21 + 48) = v15;
  *(CGFloat *)(v21 + 56) = MaxY;
  *(CGFloat *)(v21 + 64) = a4;
  *(CGFloat *)(v21 + 72) = v12;
  *(CGFloat *)(v21 + 80) = a6;
  *(CGFloat *)(v21 + 88) = v13;
  id v22 = objc_allocWithZone((Class)RPTBlockInteraction);
  id v34 = sub_10006894C;
  uint64_t v35 = v21;
  uint64_t v30 = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  id v32 = sub_100053D54;
  id v33 = &unk_1000C6668;
  id v23 = _Block_copy(&v30);
  id v24 = [v22 initWithActions:v23];
  _Block_release(v23);
  swift_release();
  *(void *)(v20 + 32) = v24;
  uint64_t v30 = (void **)v20;
  specialized Array._endMutation()();
  sub_100068984(a2);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10000D858(&qword_1000DD9C0);
  v26.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (a2)
  {
    id v34 = (uint64_t (*)(void *))a2;
    uint64_t v35 = a3;
    uint64_t v30 = _NSConcreteStackBlock;
    uint64_t v31 = 1107296256;
    id v32 = sub_10007A124;
    id v33 = &unk_1000C6690;
    uint64_t v27 = _Block_copy(&v30);
    swift_release();
  }
  else
  {
    uint64_t v27 = 0;
  }
  id v28 = [objc_allocWithZone((Class)RPTInteractionTestParameters) initWithTestName:v25 interactions:v26.super.isa completionHandler:v27];
  _Block_release(v27);

  return v28;
}

uint64_t sub_100067BC4(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = type metadata accessor for Device.Control.Kind.Primitive();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[17] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[18] = v5;
  v2[19] = v4;
  return _swift_task_switch(sub_100067CB8, v5, v4);
}

uint64_t sub_100067CB8()
{
  uint64_t v1 = self;
  *(void *)(v0 + 160) = v1;
  if ([v1 isRecapAvailable])
  {
    id v2 = [*(id *)(v0 + 104) appNavigator];
    *(void *)(v0 + 168) = v2;
    if (v2)
    {
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_100067E4C;
      return sub_100058A3C();
    }
    swift_release();
    sub_100064C18();
    swift_allocError();
    uint64_t v6 = 1;
  }
  else
  {
    swift_release();
    sub_100064C18();
    swift_allocError();
    uint64_t v6 = 3;
  }
  *(void *)uint64_t v5 = v6;
  *(void *)(v5 + 40) = 0;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 8) = 0u;
  *(unsigned char *)(v5 + 48) = 5;
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100067E4C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 184) = a1;
  *(void *)(v4 + 192) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 152);
  uint64_t v6 = *(void *)(v3 + 144);
  if (v1) {
    uint64_t v7 = sub_100068740;
  }
  else {
    uint64_t v7 = sub_100067F90;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100067F90()
{
  uint64_t v1 = sub_100059320(*(void *)(v0 + 96), *(void **)(v0 + 184), (uint64_t)sub_100058F10, 0);
  *(void *)(v0 + 200) = v1;
  if (v1)
  {
    id v2 = (void *)v1;
    uint64_t v3 = *(void **)(v0 + 168);
    sub_10000D858(&qword_1000DD920);
    id v4 = v2;
    static AccessoryControlViewController.test_prepareForPerformanceTesting()();
    id v5 = [v3 showAccessory:v4 secondaryDestination:0];
    *(void *)(v0 + 208) = v5;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1000681B4;
    return static NAFutureHelper.continuation<A>(_:)(v5, (char *)&type metadata for Swift.AnyObject + 8);
  }
  else
  {
    uint64_t v7 = *(void **)(v0 + 184);
    uint64_t v8 = *(void **)(v0 + 168);
    swift_release();
    sub_100064C18();
    swift_allocError();
    uint64_t v10 = v9;
    _StringGuts.grow(_:)(69);
    v11._countAndFlagsBits = 0xD000000000000043;
    v11._object = (void *)0x800000010009C4A0;
    String.append(_:)(v11);
    v12._object = (void *)0x800000010009BD80;
    v12._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v12);
    *(void *)uint64_t v10 = 0;
    *(void *)(v10 + 8) = 0xE000000000000000;
    *(unsigned char *)(v10 + 48) = 4;
    swift_willThrow();

    swift_task_dealloc();
    CGFloat v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_1000681B4()
{
  id v2 = (void *)*v1;
  v2[28] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[18];
    uint64_t v4 = v2[19];
    return _swift_task_switch(sub_1000687B4, v3, v4);
  }
  else
  {
    id v5 = (void *)v2[26];
    swift_unknownObjectRelease();

    uint64_t v6 = (void *)swift_task_alloc();
    v2[29] = v6;
    *uint64_t v6 = v2;
    v6[1] = sub_100068344;
    return static Task<>.sleep(nanoseconds:)(1000000000);
  }
}

uint64_t sub_100068344()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    id v5 = sub_100068848;
  }
  else {
    id v5 = sub_100068480;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100068480()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();
  id v2 = [v1 presentedViewController];
  if (!v2) {
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  type metadata accessor for DataModelAccessoryControlViewController();
  if (!swift_dynamicCastClass())
  {

LABEL_6:
    uint64_t v7 = *(void **)(v0 + 200);
    uint64_t v8 = *(void **)(v0 + 184);
    uint64_t v9 = *(void **)(v0 + 168);
    sub_100064C18();
    swift_allocError();
    uint64_t v14 = v13;
    id v15 = [v8 presentedViewController];
    *(void *)uint64_t v14 = 0xD00000000000001ELL;
    *(void *)(v14 + 8) = 0x800000010009C4F0;
    *(void *)(v14 + 16) = v15;
    *(unsigned char *)(v14 + 48) = 0;
    swift_willThrow();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 112);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for Device.Control.Kind.Primitive.incremental(_:), v6);
  AccessoryControlViewController.test_firstControlFrame(for:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_1000688D8(v0 + 56, v0 + 16, (uint64_t *)&unk_1000DD950);
  uint64_t v7 = *(void **)(v0 + 200);
  uint64_t v8 = *(void **)(v0 + 184);
  uint64_t v9 = *(void **)(v0 + 168);
  if (*(unsigned char *)(v0 + 48))
  {
    sub_100064C18();
    swift_allocError();
    uint64_t v11 = v10;
    id v12 = [v8 presentedViewController];
    *(void *)uint64_t v11 = 0xD000000000000036;
    *(void *)(v11 + 8) = 0x800000010009C510;
    *(void *)(v11 + 16) = v12;
    *(unsigned char *)(v11 + 48) = 0;
    swift_willThrow();

LABEL_7:
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  [*(id *)(v0 + 160) runTestWithParameters:sub_100067904(29, (uint64_t)sub_100059778, 0, *(CGFloat *)(v0 + 16), *(double *)(v0 + 24), *(CGFloat *)(v0 + 32), *(double *)(v0 + 40))];
  swift_unknownObjectRelease();

  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
  return v16();
}

uint64_t sub_100068740()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_release();

  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000687B4()
{
  uint64_t v1 = (void *)v0[25];
  id v2 = (void *)v0[26];
  uint64_t v3 = (void *)v0[23];
  uint64_t v4 = (void *)v0[21];
  swift_release();

  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100068848()
{
  uint64_t v1 = (void *)v0[25];
  id v2 = (void *)v0[23];
  uint64_t v3 = (void *)v0[21];
  swift_release();

  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1000688D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000D858(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006893C()
{
  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10006894C(void *a1)
{
  return sub_10005A884(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11]);
}

uint64_t sub_100068984(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100068994()
{
  uint64_t v1 = *(void *)(sub_10000D858((uint64_t *)&unk_1000DD8F0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100068AC0(void *a1)
{
  uint64_t v3 = *(void *)(sub_10000D858((uint64_t *)&unk_1000DD8F0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(uint64_t (**)(uint64_t))v6;
  uint64_t v8 = *(void *)(v6 + 8);

  return sub_100059ED8(a1, v5, v7, v8);
}

uint64_t sub_100068B64()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100068B74()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_100068C04(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  type metadata accessor for MainActor();
  v2[14] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[15] = v4;
  v2[16] = v3;
  return _swift_task_switch(sub_100068C9C, v4, v3);
}

uint64_t sub_100068C9C()
{
  uint64_t v1 = self;
  *(void *)(v0 + 136) = v1;
  if ([v1 isRecapAvailable])
  {
    id v2 = [*(id *)(v0 + 104) appNavigator];
    *(void *)(v0 + 144) = v2;
    if (v2)
    {
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_100068E28;
      return sub_100058A3C();
    }
    swift_release();
    sub_100064C18();
    swift_allocError();
    uint64_t v6 = 1;
  }
  else
  {
    swift_release();
    sub_100064C18();
    swift_allocError();
    uint64_t v6 = 3;
  }
  *(void *)uint64_t v5 = v6;
  *(void *)(v5 + 40) = 0;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 8) = 0u;
  *(unsigned char *)(v5 + 48) = 5;
  swift_willThrow();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100068E28(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 160) = a1;
  *(void *)(v4 + 168) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 128);
  uint64_t v6 = *(void *)(v3 + 120);
  if (v1) {
    uint64_t v7 = sub_1000696F4;
  }
  else {
    uint64_t v7 = sub_100068F6C;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100068F6C()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = v0[12];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = sub_1000597A8;
  *(void *)(v3 + 24) = 0;
  uint64_t v4 = (void *)sub_100059320(v2, v1, (uint64_t)sub_1000699DC, v3);
  v0[22] = v4;
  swift_task_dealloc();
  if (v4)
  {
    uint64_t v5 = (void *)v0[18];
    sub_10000D858(&qword_1000DD920);
    id v6 = v4;
    static AccessoryControlViewController.test_prepareForPerformanceTesting()();
    id v7 = [v5 showAccessory:v6 secondaryDestination:0];
    v0[23] = v7;
    uint64_t v8 = (void *)swift_task_alloc();
    v0[24] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1000691B8;
    return static NAFutureHelper.continuation<A>(_:)(v7, (char *)&type metadata for Swift.AnyObject + 8);
  }
  else
  {
    uint64_t v9 = (void *)v0[20];
    uint64_t v10 = (void *)v0[18];
    swift_release();
    sub_100064C18();
    swift_allocError();
    uint64_t v12 = v11;
    _StringGuts.grow(_:)(64);
    v13._countAndFlagsBits = 0xD00000000000003ELL;
    v13._object = (void *)0x800000010009C650;
    String.append(_:)(v13);
    v14._object = (void *)0x800000010009BDA0;
    v14._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v14);
    *(void *)uint64_t v12 = 0;
    *(void *)(v12 + 8) = 0xE000000000000000;
    *(unsigned char *)(v12 + 48) = 4;
    swift_willThrow();

    id v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_1000691B8()
{
  uint64_t v2 = (void *)*v1;
  v2[25] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[15];
    uint64_t v4 = v2[16];
    return _swift_task_switch(sub_100069760, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)v2[23];
    swift_unknownObjectRelease();

    id v6 = (void *)swift_task_alloc();
    v2[26] = v6;
    *id v6 = v2;
    v6[1] = sub_100069348;
    return static Task<>.sleep(nanoseconds:)(1000000000);
  }
}

uint64_t sub_100069348()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_1000697EC;
  }
  else {
    uint64_t v5 = sub_100069484;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100069484()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_release();
  id v2 = [v1 presentedViewController];
  if (!v2) {
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  type metadata accessor for DataModelAccessoryControlViewController();
  if (!swift_dynamicCastClass())
  {

LABEL_6:
    uint64_t v4 = *(void **)(v0 + 176);
    uint64_t v5 = *(void **)(v0 + 160);
    id v6 = *(void **)(v0 + 144);
    sub_100064C18();
    swift_allocError();
    uint64_t v11 = v10;
    id v12 = [v5 presentedViewController];
    *(void *)uint64_t v11 = 0xD00000000000001ELL;
    *(void *)(v11 + 8) = 0x800000010009C4F0;
    *(void *)(v11 + 16) = v12;
    *(unsigned char *)(v11 + 48) = 0;
    swift_willThrow();
    goto LABEL_7;
  }
  AccessoryControlViewController.test_firstControlFrame(_:)();
  sub_1000688D8(v0 + 56, v0 + 16, (uint64_t *)&unk_1000DD950);
  uint64_t v4 = *(void **)(v0 + 176);
  uint64_t v5 = *(void **)(v0 + 160);
  id v6 = *(void **)(v0 + 144);
  if (*(unsigned char *)(v0 + 48))
  {
    sub_100064C18();
    swift_allocError();
    uint64_t v8 = v7;
    id v9 = [v5 presentedViewController];
    *(void *)uint64_t v8 = 0xD000000000000036;
    *(void *)(v8 + 8) = 0x800000010009C510;
    *(void *)(v8 + 16) = v9;
    *(unsigned char *)(v8 + 48) = 0;
    swift_willThrow();

LABEL_7:
    Swift::String v13 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  [*(id *)(v0 + 136) runTestWithParameters:sub_100067904(30, (uint64_t)sub_10006A93C, 0, *(CGFloat *)(v0 + 16), *(double *)(v0 + 24), *(CGFloat *)(v0 + 32), *(double *)(v0 + 40))];
  swift_unknownObjectRelease();

  Swift::String v13 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
  return v13();
}

uint64_t sub_1000696F4()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_release();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100069760()
{
  uint64_t v1 = (void *)v0[22];
  id v2 = (void *)v0[23];
  uint64_t v3 = (void *)v0[20];
  uint64_t v4 = (void *)v0[18];
  swift_release();

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1000697EC()
{
  uint64_t v1 = (void *)v0[22];
  id v2 = (void *)v0[20];
  uint64_t v3 = (void *)v0[18];
  swift_release();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100069874(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for UUID() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000699D0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000699DC(uint64_t a1)
{
  return sub_100059DF0(a1, *(uint64_t (**)(unint64_t))(v1 + 16));
}

uint64_t sub_1000699E4(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  Swift::String v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  unint64_t v19 = (char *)&v39 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v39 - v20;
  if (sub_10007609C(a1) == 0xD00000000000001ELL && v22 == 0x800000010009BE00)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_5:
    sub_1000038EC(a4, (uint64_t)v21, (uint64_t *)&unk_1000DD8F0);
    uint64_t v24 = type metadata accessor for UUID();
    uint64_t v25 = *(void *)(v24 - 8);
    Class isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v24) != 1)
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v24);
    }
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = a5;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_10006A000;
    *(void *)(v28 + 24) = v27;
    id v45 = sub_10006AAE0;
    uint64_t v46 = v28;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v42 = 1107296256;
    id v43 = sub_10005A840;
    id v44 = &unk_1000C67D0;
    id v29 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    id v30 = [a3 findAccessoryWithItemManager:a2 accessoryID:isa testBlock:v29];

    _Block_release(v29);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (uint64_t)v30;
    }
    goto LABEL_19;
  }
  sub_1000038EC(a4, (uint64_t)v19, (uint64_t *)&unk_1000DD8F0);
  uint64_t v33 = type metadata accessor for UUID();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  Class v35 = 0;
  if (v40(v19, 1, v33) != 1)
  {
    Class v35 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v33);
  }
  uint64_t v39 = v34;
  id v45 = sub_10005A834;
  uint64_t v46 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v42 = 1107296256;
  id v43 = sub_10005A840;
  id v44 = &unk_1000C6730;
  CGRect v36 = _Block_copy(&aBlock);
  swift_release();
  id v30 = [a3 findAccessoryWithItemManager:a2 accessoryID:v35 testBlock:v36];

  _Block_release(v36);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    goto LABEL_20;
  }
  sub_1000038EC(a4, (uint64_t)v16, (uint64_t *)&unk_1000DD8F0);
  if (v30)
  {
    sub_100003950((uint64_t)v16, (uint64_t *)&unk_1000DD8F0);
    return (uint64_t)v30;
  }
  sub_1000038EC((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_1000DD8F0);
  if (v40(v13, 1, v33) == 1)
  {
    Class v37 = 0;
  }
  else
  {
    Class v37 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v33);
  }
  id v45 = sub_10005A838;
  uint64_t v46 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v42 = 1107296256;
  id v43 = sub_10005A840;
  id v44 = &unk_1000C6758;
  id v38 = _Block_copy(&aBlock);
  swift_release();
  id v30 = [a3 findAccessoryWithItemManager:a2 accessoryID:v37 testBlock:v38];

  _Block_release(v38);
  sub_100003950((uint64_t)v16, (uint64_t *)&unk_1000DD8F0);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0) {
    return (uint64_t)v30;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_10006A000(void *a1)
{
  return sub_10005C3E8(a1, *(void *)(v1 + 16));
}

uint64_t sub_10006A008()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006A01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006A228(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void))sub_10005E67C);
}

unint64_t sub_10006A04C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000C46E0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

id sub_10006A098(int a1)
{
  return sub_10005EF8C(a1, *(id *)(v1 + 16));
}

uint64_t sub_10006A0B8()
{
  uint64_t v1 = *(void *)(sub_10000D858((uint64_t *)&unk_1000DD8F0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 9;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10006A1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10006A228(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void))sub_10005ED3C);
}

uint64_t sub_10006A228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void))
{
  uint64_t v9 = *(void *)(sub_10000D858((uint64_t *)&unk_1000DD8F0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a4(a1, a2, a3, *(void *)(v4 + 16), v11, *(void *)v12, *(unsigned __int8 *)(v12 + 8));
}

uint64_t sub_10006A2FC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void type metadata accessor for HFMediaAccessoryItemType(uint64_t a1)
{
}

__n128 sub_10006A350(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t _s20PerformanceTestErrorOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_10006A3A8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_10006A3B4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10006A3D4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

unsigned char *_s25AccessoryControlsTestTypeOwCP(unsigned char *result, unsigned char *a2)
{
  void *result = *a2;
  return result;
}

uint64_t _s25AccessoryControlsTestTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s25AccessoryControlsTestTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006A57CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_10006A5A4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10006A5B0(unsigned char *result, char a2)
{
  void *result = a2;
  return result;
}

ValueMetadata *_s25AccessoryControlsTestTypeOMa()
{
  return &_s25AccessoryControlsTestTypeON;
}

unint64_t sub_10006A5CC()
{
  unint64_t result = qword_1000DDA58;
  if (!qword_1000DDA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DDA58);
  }
  return result;
}

uint64_t sub_10006A620(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10006A640(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_10006A67C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

id sub_10006A6C4(int a1, void *a2, void *a3)
{
  return sub_100064CA4(a1, a2, a3);
}

uint64_t sub_10006AAE4(char a1)
{
  *(void *)(v2 + 80) = v1;
  *(unsigned char *)(v2 + 144) = a1;
  *(void *)(v2 + 88) = type metadata accessor for MainActor();
  *(void *)(v2 + 96) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 104) = v4;
  *(void *)(v2 + 112) = v3;
  return _swift_task_switch(sub_10006AB84, v4, v3);
}

uint64_t sub_10006AB84()
{
  char v1 = *(unsigned char *)(v0 + 144);
  uint64_t v2 = static MainActor.shared.getter();
  *(void *)(v0 + 120) = v2;
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 128) = v3;
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 136) = v4;
  *(void *)(v4 + 16) = v3;
  *(unsigned char *)(v4 + 24) = v1;
  if (v2)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  return _swift_task_switch(sub_10006AC64, v5, v7);
}

uint64_t sub_10006AC64()
{
  uint64_t v1 = v0[17];
  v0[2] = v0;
  v0[3] = sub_10006AD00;
  uint64_t v2 = swift_continuation_init();
  sub_10006AEC0(v2, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10006AD00()
{
  uint64_t v1 = *v0;
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_10006AE60, v3, v2);
}

uint64_t sub_10006AE60()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10006AEC0(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    aBlock[4] = sub_1000744D0;
    aBlock[5] = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10007A124;
    aBlock[3] = &unk_1000C6E20;
    int v8 = _Block_copy(aBlock);
    swift_release();
    [v6 dismissViewControllerAnimated:a3 & 1 completion:v8];
    _Block_release(v8);
  }
}

uint64_t static AdaptiveTabBarController.isAdaptiveTabBarEnabled.getter()
{
  uint64_t v0 = type metadata accessor for HomeAppFeatures();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIKitFeatures();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UIKitFeatures.floatingTabBar(_:), v4);
  sub_10000EFEC(&qword_1000DDD28, (void (*)(uint64_t))&type metadata accessor for UIKitFeatures);
  char v8 = FeatureFlagsKey.isEnabled.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for HomeAppFeatures.adaptiveNavigation(_:), v0);
    sub_10000EFEC(&qword_1000DDD30, (void (*)(uint64_t))&type metadata accessor for HomeAppFeatures);
    char v9 = FeatureFlagsKey.isEnabled.getter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t property wrapper backing initializer of AdaptiveTabBarController.viewIsVisible()
{
  return Published.init(initialValue:)();
}

uint64_t sub_10006B508()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id AdaptiveTabBarController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

uint64_t sub_10006B5B0(void *a1)
{
  id v21 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_10000D858(&qword_1000DDD40);
  uint64_t v15 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController;
  *(void *)&v1[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController] = 0;
  uint64_t v7 = OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator;
  *(void *)&v1[OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___navigator] = 0;
  uint64_t v17 = OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext;
  *(void *)&v1[OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext] = 0;
  uint64_t v18 = OBJC_IVAR___HOAdaptiveTabBarController_roomsElements;
  *(void *)&v1[OBJC_IVAR___HOAdaptiveTabBarController_roomsElements] = 0;
  uint64_t v19 = OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements;
  *(void *)&v1[OBJC_IVAR___HOAdaptiveTabBarController_categoriesElements] = 0;
  uint64_t v20 = OBJC_IVAR___HOAdaptiveTabBarController_homeElements;
  *(void *)&v1[OBJC_IVAR___HOAdaptiveTabBarController_homeElements] = 0;
  v1[OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop] = 0;
  char v8 = &v1[OBJC_IVAR___HOAdaptiveTabBarController__viewIsVisible];
  uint64_t v16 = &v1[OBJC_IVAR___HOAdaptiveTabBarController__viewIsVisible];
  char v23 = 0;
  char v9 = v1;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  *(void *)&v9[OBJC_IVAR___HOAdaptiveTabBarController_controllers] = &_swiftEmptyDictionarySingleton;
  *(void *)&v9[OBJC_IVAR___HOAdaptiveTabBarController_initialLoadSignPost] = 0;
  uint64_t v10 = OBJC_IVAR___HOAdaptiveTabBarController_localeAvailability;
  id v11 = [self getAvailabilityDictionary];
  uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&v9[v10] = v12;
  v9[OBJC_IVAR___HOAdaptiveTabBarController_hideCategories] = 0;
  v9[OBJC_IVAR___HOAdaptiveTabBarController_hideRooms] = 0;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v15);
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return 0;
}

id AdaptiveTabBarController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR___HOAdaptiveTabBarController_controllers];
  swift_beginAccess();
  *(void *)uint64_t v2 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return [super dealloc];
}

Swift::Void __swiftcall AdaptiveTabBarController.viewDidAppear(_:)(Swift::Bool a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1];
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v1;
  static Published.subscript.setter();
  id v4 = AdaptiveTabBarController.baseController.getter();
  [v4 reloadInitialSetup];
}

Swift::Void __swiftcall AdaptiveTabBarController.viewDidDisappear(_:)(Swift::Bool a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_getKeyPath();
  swift_getKeyPath();
  char v6 = 0;
  id v4 = v1;
  static Published.subscript.setter();
  v5.receiver = v4;
  v5.super_class = ObjectType;
  [super viewDidDisappear:a1];
}

UINavigationController_optional __swiftcall AdaptiveTabBarController.selectCurrentTab()()
{
  id v1 = [v0 navigationController];

  uint64_t v2 = (objc_class *)v1;
  result.value.super.super.super.Class isa = v2;
  result.is_nil = v3;
  return result;
}

void _s7HomeApp24AdaptiveTabBarControllerC4home_9didUpdate3forySo6HMHomeC_So6HMRoomCSo11HMAccessoryCtF_0()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = type metadata accessor for StateSnapshot();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  objc_super v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000D858(&qword_1000DE250);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = self;
  id v10 = [v9 sharedDispatcher];
  v20[0] = [v10 home];

  if (v20[0])
  {
    id v11 = [v9 sharedDispatcher];
    id v12 = [v11 homeManager];

    if (v12)
    {
      if ([self isAnIPhone])
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
        uint64_t v13 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)();
        __chkstk_darwin(v13);
        v20[-4] = v1;
        v20[-3] = v8;
        v20[-2] = v20[0];
        unint64_t v14 = (unint64_t)sub_10000567C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1000057F4, (uint64_t)&v20[-6], v13);
        swift_bridgeObjectRelease();
        sub_100003950((uint64_t)v8, &qword_1000DE250);
        if (v14 >> 62)
        {
          sub_10000AE6C(0, &qword_1000DD750);
          swift_bridgeObjectRetain();
          _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          sub_10000AE6C(0, &qword_1000DD750);
        }
        swift_bridgeObjectRelease();
        sub_10000AE6C(0, &qword_1000DD750);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v1 setViewControllers:isa animated:0];
      }
      else
      {
        sub_10006C264(v20[0], v12, (uint64_t)v5);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
        uint64_t v17 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)();
        __chkstk_darwin(v17);
        v20[-4] = v1;
        v20[-3] = v8;
        v20[-2] = v20[0];
        unint64_t v18 = (unint64_t)sub_10000567C((void (*)(uint64_t *__return_ptr, uint64_t))sub_10000580C, (uint64_t)&v20[-6], v17);
        swift_bridgeObjectRelease();
        sub_100003950((uint64_t)v8, &qword_1000DE250);
        if (v18 >> 62)
        {
          sub_10000AE6C(0, &qword_1000DD750);
          swift_bridgeObjectRetain();
          _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          sub_10000AE6C(0, &qword_1000DD750);
        }
        swift_bridgeObjectRelease();
        sub_10000AE6C(0, &qword_1000DD750);
        Class v19 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v1 setViewControllers:v19 animated:0];

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
    }
    else
    {
      uint64_t v16 = v20[0];
    }
  }
}

uint64_t sub_10006C264@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v62 = a1;
  id v63 = a2;
  uint64_t v64 = a3;
  uint64_t v3 = type metadata accessor for OSSignpostError();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  __chkstk_darwin(v3);
  id v53 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000D858(&qword_1000DE250);
  __chkstk_darwin(v5 - 8);
  uint64_t v61 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType();
  uint64_t v7 = *(void *)(updated - 8);
  __chkstk_darwin(updated);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for OSSignpostID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v67 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v52 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v52 - v16;
  if (qword_1000DD598 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for OSSignposter();
  uint64_t v19 = sub_10000D89C(v18, (uint64_t)qword_1000DF960);
  static OSSignpostID.exclusive.getter();
  uint64_t v59 = v19;
  uint64_t v20 = OSSignposter.logHandle.getter();
  os_signpost_type_t v21 = static os_signpost_type_t.begin.getter();
  char v22 = OS_os_log.signpostsEnabled.getter();
  uint64_t v66 = v15;
  if (v22)
  {
    char v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v23(v15, v17, v9);
    uint64_t v24 = v10;
    uint64_t v25 = v9;
    NSArray v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSArray v26 = 0;
    os_signpost_id_t v27 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v20, v21, v27, "AdaptiveTabBarFollowUpBuildSnapshot", "", v26, 2u);
    uint64_t v9 = v25;
    uint64_t v10 = v24;
    uint64_t v15 = v66;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {

    char v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  }
  uint64_t v52 = v23;
  v23(v15, v17, v9);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v56 = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v65 = v10 + 8;
  uint64_t v57 = v28;
  v28(v17, v9);
  id v29 = v62;
  id v30 = v60;
  *uint64_t v60 = v62;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v30, enum case for StateSnapshot.UpdateType.all(_:), updated);
  uint64_t v31 = type metadata accessor for StateSnapshot();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v61, 1, 1, v31);
  sub_10000D858(&qword_1000DE268);
  uint64_t v32 = type metadata accessor for StateSnapshot.Coverage();
  uint64_t v33 = v9;
  uint64_t v34 = *(void *)(v32 - 8);
  unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_100094FB0;
  (*(void (**)(unint64_t, void, uint64_t))(v34 + 104))(v36 + v35, enum case for StateSnapshot.Coverage.everythingElse(_:), v32);
  id v37 = v29;
  id v38 = v63;
  sub_100072FCC(v36);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)();
  uint64_t v39 = OSSignposter.logHandle.getter();
  uint64_t v40 = v67;
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v41 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v42 = v57;
    swift_retain();
    id v43 = v53;
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v45 = v54;
    uint64_t v44 = v55;
    if ((*(unsigned int (**)(char *, uint64_t))(v54 + 88))(v43, v55) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v46 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v44);
      uint64_t v46 = "";
    }
    uint64_t v48 = v66;
    uint64_t v49 = v67;
    v52(v66, v67, v33);
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v50 = 0;
    os_signpost_id_t v51 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v39, v41, v51, "AdaptiveTabBarFollowUpBuildSnapshot", v46, v50, 2u);
    swift_slowDealloc();

    v42(v49, v33);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v42)(v48, v33);
  }
  else
  {

    v57(v40, v33);
    return swift_release();
  }
}

Swift::Void __swiftcall AdaptiveTabBarController.switchTo(room:)(HMRoom room)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000DD590 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10000D89C(v5, (uint64_t)qword_1000DDD10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  uint64_t v10 = room.super.isa;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v22 = v13;
    uint64_t v15 = v14;
    os_signpost_type_t v21 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v16;
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v24 = v2;
    uint64_t v25 = v16;
    uint64_t v26 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v17 = String.init<A>(describing:)();
    uint64_t v26 = sub_10000C3F8(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v26 = sub_10000C3F8(0x6F54686374697773, 0xEF293A6D6F6F7228, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2112;
    uint64_t v26 = (uint64_t)v10;
    uint64_t v19 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_signpost_type_t v21 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v22, "<%s: %s> show room: %@", (uint8_t *)v15, 0x20u);
    sub_10000D858(&qword_1000DD730);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v20 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();
}

void AdaptiveTabBarController.switchTo(accessoryTypeGroup:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000DD590 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10000D89C(v5, (uint64_t)qword_1000DDD10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  id v10 = a1;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = v2;
    uint64_t v15 = v14;
    uint64_t v24 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v27 = v25;
    uint64_t v28 = ObjectType;
    *(_DWORD *)uint64_t v15 = 136315650;
    HIDWORD(v23) = v13;
    swift_getMetatypeMetadata();
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v28 = sub_10000C3F8(v16, v17, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v28 = sub_10000C3F8(0xD00000000000001DLL, 0x800000010009C7B0, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2112;
    uint64_t v28 = (uint64_t)v10;
    id v18 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v24 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, BYTE4(v23), "<%s: %s> show accessory type group: %@", (uint8_t *)v15, 0x20u);
    sub_10000D858(&qword_1000DD730);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v19 = [self sharedDispatcher];
  id v20 = [v19 home];

  if (v20)
  {
    id v21 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();
    id v22 = [v21 showAccessoryTypeGroup:v10 forHome:v20 animated:1];
  }
}

Swift::Void __swiftcall AdaptiveTabBarController.switchTo(home:)(HMHome home)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000DD590 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10000D89C(v5, (uint64_t)qword_1000DDD10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  id v10 = home.super.isa;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v22 = v13;
    uint64_t v15 = v14;
    id v21 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v16;
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v24 = v2;
    uint64_t v25 = v16;
    uint64_t v26 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v17 = String.init<A>(describing:)();
    uint64_t v26 = sub_10000C3F8(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v26 = sub_10000C3F8(0x6F54686374697773, 0xEF293A656D6F6828, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2112;
    uint64_t v26 = (uint64_t)v10;
    id v19 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v21 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v22, "<%s: %s> Switching to home %@", (uint8_t *)v15, 0x20u);
    sub_10000D858(&qword_1000DD730);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v20 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();
}

void sub_10006D510()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v69 - v8;
  __chkstk_darwin(v7);
  uint64_t v80 = (char *)&v69 - v10;
  uint64_t v11 = sub_10000D858(&qword_1000DE220);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v69 - v16;
  __chkstk_darwin(v15);
  uint64_t v81 = ((char *)&v69 - v18);
  unint64_t v19 = (unint64_t)[v1 selectedIndex];
  id v20 = [self sharedDispatcher];
  id v21 = [v20 home];

  if (v21)
  {
    if (v19 == NSNotFound.getter())
    {
      if (qword_1000DD590 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_10000D89C(v2, (uint64_t)qword_1000DDD10);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v22, v2);
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 134217984;
        uint64_t v83 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "UITabBarController doesn't have a selected tab: %ld", v25, 0xCu);
        swift_slowDealloc();
        uint64_t v26 = v21;
      }
      else
      {
        uint64_t v26 = v23;
        uint64_t v23 = v21;
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      return;
    }
    uint64_t v31 = static SidebarTabElementBuilder.DefaultTabs.getter();
    if ((v19 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v19 < *(void *)(v31 + 16))
    {
      id v32 = *(id *)(v31 + 8 * v19 + 32);
      swift_bridgeObjectRelease();
      id v33 = v32;
      uint64_t v34 = v21;
      id v21 = v81;
      uint64_t v77 = v34;
      id v78 = v33;
      SidebarTabElementBuilder.init(from:home:)();
      sub_1000038EC((uint64_t)v21, (uint64_t)v17, &qword_1000DE220);
      uint64_t v6 = (char *)type metadata accessor for SidebarTabElementBuilder();
      uint64_t v35 = *((void *)v6 - 1);
      char v74 = *(uint64_t (**)(char *, uint64_t, char *))(v35 + 48);
      uint64_t v75 = v35 + 48;
      int v36 = v74(v17, 1, v6);
      uint64_t v76 = v35;
      if (v36 == 1)
      {
        sub_100003950((uint64_t)v17, &qword_1000DE220);
        id v37 = HFHomeAppTabIdentifierHome;
      }
      else
      {
        id v37 = (id)SidebarTabElementBuilder.homeAppTabIdentifier.getter();
        (*(void (**)(char *, char *))(v35 + 8))(v17, v6);
      }
      unint64_t v19 = self;
      id v38 = [(id)v19 sharedInstance];
      [v38 setSelectedHomeAppTabIdentifier:v37];

      if (qword_1000DD590 == -1)
      {
LABEL_20:
        uint64_t v39 = sub_10000D89C(v2, (uint64_t)qword_1000DDD10);
        uint64_t v40 = v80;
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v80, v39, v2);
        id v41 = v1;
        uint64_t v42 = Logger.logObject.getter();
        int v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, (os_log_type_t)v43))
        {
          int v71 = v43;
          id v72 = v41;
          uint64_t v73 = v6;
          uint64_t v44 = swift_slowAlloc();
          uint64_t v70 = swift_slowAlloc();
          uint64_t v82 = v70;
          *(_DWORD *)uint64_t v44 = 136315650;
          uint64_t v83 = ObjectType;
          swift_getMetatypeMetadata();
          uint64_t v45 = String.init<A>(describing:)();
          uint64_t v83 = sub_10000C3F8(v45, v46, &v82);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v44 + 12) = 2080;
          uint64_t v83 = sub_10000C3F8(0xD000000000000018, 0x800000010009CC50, &v82);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v44 + 22) = 2080;
          id v47 = [(id)v19 sharedInstance];
          id v48 = [v47 selectedHomeAppTabIdentifier];

          if (!v48) {
            id v48 = HFHomeAppTabIdentifierHome;
          }
          uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v51 = v50;

          uint64_t v83 = sub_10000C3F8(v49, v51, &v82);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          id v52 = v72;

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v71, "<%s: %s> Persisting last selected tab %s", (uint8_t *)v44, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v3 + 8))(v80, v2);
          id v21 = v81;
          uint64_t v6 = v73;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v3 + 8))(v40, v2);
        }
        sub_1000038EC((uint64_t)v21, (uint64_t)v14, &qword_1000DE220);
        int v53 = v74(v14, 1, v6);
        uint64_t v54 = v76;
        if (v53 == 1)
        {
          sub_100003950((uint64_t)v14, &qword_1000DE220);
LABEL_32:
          sub_100003950((uint64_t)v21, &qword_1000DE220);

          return;
        }
        uint64_t v55 = (void *)SidebarTabElementBuilder.homeAppTabIdentifier.getter();
        (*(void (**)(char *, char *))(v54 + 8))(v14, v6);
        uint64_t v56 = (void *)HFHomeAppTabIdentifierDiscover;
        uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v59 = v58;
        if (v57 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v59 == v60)
        {
          id v61 = v56;

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
          id v63 = v56;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v62 & 1) == 0) {
            goto LABEL_32;
          }
        }
        uint64_t v64 = self;
        sub_10000D858(&qword_1000DE228);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100094FB0;
        *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(inited + 40) = v66;
        id v67 = [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
        *(void *)(inited + 72) = sub_10000AE6C(0, &qword_1000DE230);
        *(void *)(inited + 48) = v67;
        sub_10005721C(inited);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v64 sendEvent:10 withData:isa];

        sub_100003950((uint64_t)v21, &qword_1000DE220);
        return;
      }
LABEL_35:
      swift_once();
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_35;
  }
  if (qword_1000DD590 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_10000D89C(v2, (uint64_t)qword_1000DDD10);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v27, v2);
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    id v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Adapative Tabbar don't have a current Home", v30, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

id AdaptiveTabBarController.__allocating_init(tabs:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_10000AE6C(0, (unint64_t *)&unk_1000DDDC0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithTabs:isa];

  return v3;
}

void AdaptiveTabBarController.init(tabs:)()
{
}

id AdaptiveTabBarController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

void AdaptiveTabBarController.init(nibName:bundle:)()
{
}

uint64_t sub_10006E138@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

UIViewController_optional __swiftcall AdaptiveTabBarController.currentViewController()()
{
  uint64_t v2 = (char *)[v0 viewControllers];
  if (!v2) {
    goto LABEL_11;
  }
  sub_10000AE6C(0, &qword_1000DD750);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = (char *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_10;
    }
LABEL_4:
    uint64_t v4 = (objc_class *)(v2 - 1);
    if (__OFSUB__(v2, 1))
    {
      __break(1u);
    }
    else if ((v3 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)v4 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v4 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v5 = (char *)*(id *)(v3 + 8 * (void)v4 + 32);
LABEL_9:
        uint64_t v2 = v5;
        goto LABEL_10;
      }
      __break(1u);
      goto LABEL_18;
    }
    uint64_t v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  uint64_t v2 = *(char **)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2) {
    goto LABEL_4;
  }
LABEL_10:
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v4 = (objc_class *)v2;
LABEL_18:
  result.value.super.super.Class isa = v4;
  result.is_nil = v1;
  return result;
}

Swift::Void __swiftcall AdaptiveTabBarController.setLoading(_:)(UIViewController a1)
{
  sub_10000D858((uint64_t *)&unk_1000DDDB0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100094FC0;
  *(UIViewController *)(v3 + 32) = a1;
  specialized Array._endMutation()();
  sub_10000AE6C(0, &qword_1000DD750);
  uint64_t v4 = a1.super.super.isa;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setViewControllers:isa];
}

uint64_t sub_10006E470(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  sub_10000D858(&qword_1000DE220);
  v2[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SidebarTabElementBuilder();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[22] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[23] = v5;
  v2[24] = v4;
  return _swift_task_switch(sub_10006E5A4, v5, v4);
}

uint64_t sub_10006E5A4()
{
  id v1 = [self sharedDispatcher];
  id v2 = [v1 home];
  *(void *)(v0 + 200) = v2;

  if (!v2)
  {
    swift_release();
    [self hf_errorWithCode:59];
    swift_willThrow();
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v43 = *(uint64_t (**)(void))(v0 + 8);
    return v43();
  }
  uint64_t v3 = static SidebarTabElementBuilder.createBaseLevelTabs(with:)();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 152);
    uint64_t v7 = *(void (**)(void, unint64_t, void))(v5 + 16);
    uint64_t v6 = v5 + 16;
    id v48 = v7;
    unint64_t v8 = v3 + ((*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64));
    uint64_t v9 = *(void *)(v6 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v48(*(void *)(v0 + 160), v8, *(void *)(v0 + 144));
      uint64_t v10 = (void *)SidebarTabElementBuilder.homeAppTabIdentifier.getter();
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;
      if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14) {
        break;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v16) {
        goto LABEL_14;
      }
      (*(void (**)(void, void))(v6 - 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
      v8 += v9;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = 1;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v18 = *(void *)(v0 + 152);
    uint64_t v19 = *(void *)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 144);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21, v19, v20);
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = 1;
  }
LABEL_15:
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v22 = *(void *)(v0 + 152);
  uint64_t v24 = *(void *)(v0 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v24, v17, 1, v23);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v23) == 1)
  {
    uint64_t v25 = *(void *)(v0 + 136);
    swift_release();
    sub_100003950(v25, &qword_1000DE220);
    [self hf_errorWithCode:30];
    swift_willThrow();

    goto LABEL_24;
  }
  uint64_t v26 = *(void *)(v0 + 128);
  (*(void (**)(void, void, void))(*(void *)(v0 + 152) + 32))(*(void *)(v0 + 168), *(void *)(v0 + 136), *(void *)(v0 + 144));
  uint64_t v27 = SidebarTabElementBuilder.id.getter();
  uint64_t v29 = v28;
  id v30 = (uint64_t *)(v26 + OBJC_IVAR___HOAdaptiveTabBarController_controllers);
  swift_beginAccess();
  uint64_t v31 = *v30;
  if (!*(void *)(v31 + 16) || (unint64_t v32 = sub_10000CC18(v27, v29), (v33 & 1) == 0))
  {
    uint64_t v40 = *(void *)(v0 + 168);
    uint64_t v42 = *(void *)(v0 + 144);
    uint64_t v41 = *(void *)(v0 + 152);
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    [self hf_errorWithCode:30];
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    goto LABEL_24;
  }
  uint64_t v34 = *(void **)(v0 + 128);
  uint64_t v35 = *(void **)(*(void *)(v31 + 56) + 8 * v32);
  *(void *)(v0 + 208) = v35;
  swift_endAccess();
  id v36 = v35;
  swift_bridgeObjectRelease();
  id v37 = [v34 presentedViewController];
  *(void *)(v0 + 216) = v37;
  if (v37)
  {
    id v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v38;
    *id v38 = v0;
    v38[1] = sub_10006EB28;
    return sub_10006AAE4(1);
  }
  else
  {
    id v44 = [*(id *)(v0 + 208) hu_preloadContent];
    *(void *)(v0 + 232) = v44;
    if (v44)
    {
      id v46 = v44;
      id v47 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v47;
      uint64_t v45 = sub_10000AE6C(0, &qword_1000DE240);
      *id v47 = v0;
      v47[1] = sub_10006ED2C;
      id v44 = v46;
    }
    else
    {
      __break(1u);
    }
    return static NAFutureHelper.continuation<A>(_:)(v44, v45);
  }
}

uint64_t sub_10006EB28()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_10006EC48, v3, v2);
}

uint64_t sub_10006EC48()
{
  id v1 = [*(id *)(v0 + 208) hu_preloadContent];
  *(void *)(v0 + 232) = v1;
  if (v1)
  {
    id v3 = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v4;
    uint64_t v2 = sub_10000AE6C(0, &qword_1000DE240);
    void *v4 = v0;
    v4[1] = sub_10006ED2C;
    id v1 = v3;
  }
  else
  {
    __break(1u);
  }
  return static NAFutureHelper.continuation<A>(_:)(v1, v2);
}

uint64_t sub_10006ED2C(void *a1)
{
  uint64_t v4 = (void *)*v2;
  v4[31] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void *)v4[29];
  if (v1)
  {

    uint64_t v6 = v4[23];
    uint64_t v7 = v4[24];
    unint64_t v8 = sub_10006F2B8;
  }
  else
  {

    uint64_t v6 = v4[23];
    uint64_t v7 = v4[24];
    unint64_t v8 = sub_10006EE74;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_10006EE74()
{
  swift_release();
  uint64_t v1 = self;
  id v2 = [v1 sharedInstance];
  id v3 = [v2 selectedHomeAppTabIdentifier];

  if (!v3) {
    id v3 = HFHomeAppTabIdentifierHome;
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_14;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v9)
  {
LABEL_14:
    uint64_t v22 = *(void **)(v0 + 200);
    (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 144));

    goto LABEL_15;
  }
  uint64_t v10 = *(void **)(v0 + 128);
  id v11 = *(id *)(v0 + 120);
  id v12 = [v1 sharedInstance];
  [v12 setSelectedHomeAppTabIdentifier:v11];

  id v13 = [v10 viewControllers];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)(v0 + 208);
    char v16 = *(void **)(v0 + 128);
    sub_10000AE6C(0, &qword_1000DD750);
    unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10005A6AC(v15, v17);
    swift_bridgeObjectRelease();
    [v16 setSelectedViewController:v15];
  }
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;
  if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
LABEL_19:
    sub_10000A2A8();
    goto LABEL_20;
  }
  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_19;
  }
LABEL_20:
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;
  if (v27 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v29 != v30)
  {
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_24;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRelease_n();
LABEL_24:
  unint64_t v32 = *(void **)(v0 + 200);
  uint64_t v33 = *(void *)(v0 + 168);
  uint64_t v34 = *(void *)(v0 + 144);
  uint64_t v35 = *(void *)(v0 + 152);
  id v36 = self;
  sub_10000D858(&qword_1000DE228);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100094FB0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v38;
  id v39 = [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
  *(void *)(inited + 72) = sub_10000AE6C(0, &qword_1000DE230);
  *(void *)(inited + 48) = v39;
  sub_10005721C(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v36 sendEvent:10 withData:isa];

  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v24 = *(void *)(v0 + 208);
  return v23(v24);
}

uint64_t sub_10006F2B8()
{
  id v2 = (void *)v0[25];
  uint64_t v1 = (void *)v0[26];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[19];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10006F370()
{
  return String.init<A>(describing:)();
}

uint64_t AdaptiveTabBarController.selectTab(withIdentifier:)(void *a1)
{
  uint64_t v2 = sub_10000D858(&qword_1000DE4D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = a1;
  sub_10000AE6C(0, &qword_1000DDDE0);
  id v8 = a1;
  uint64_t v9 = static NAFutureHelper.futureOnMainActor<A>(priority:descriptor:with:)();
  swift_release();
  sub_100003950((uint64_t)v4, &qword_1000DE4D0);
  return v9;
}

uint64_t sub_10006F50C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  type metadata accessor for MainActor();
  v2[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[8] = v4;
  v2[9] = v3;
  return _swift_task_switch(sub_10006F5A4, v4, v3);
}

uint64_t sub_10006F5A4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[10] = Strong;
  if (!Strong)
  {
LABEL_4:
    swift_release();
    [self hf_errorWithCode:37];
    swift_willThrow();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  uint64_t v2 = (void *)Strong;
  if (static Task<>.isCancelled.getter())
  {

    goto LABEL_4;
  }
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10006F6E8;
  uint64_t v6 = v0[6];
  return sub_10006E470(v6);
}

uint64_t sub_10006F6E8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[8];
    uint64_t v6 = v4[9];
    uint64_t v7 = sub_10006F884;
  }
  else
  {
    v4[13] = a1;
    uint64_t v5 = v4[8];
    uint64_t v6 = v4[9];
    uint64_t v7 = sub_10006F810;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10006F810()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 104);
  return v1(v2);
}

uint64_t sub_10006F884()
{
  uint64_t v1 = *(void **)(v0 + 80);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void *AdaptiveTabBarController.adaptiveViewController.getter()
{
  id v1 = v0;
  return v0;
}

id AdaptiveTabBarController.wantsAccessoryControlsCard.getter()
{
  id result = [v0 view];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result traitCollection];

    if ([v3 userInterfaceIdiom])
    {
      id v4 = [v3 horizontalSizeClass];

      return (id)(v4 != (id)1);
    }
    else
    {

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void AdaptiveTabBarController._tabElementGroup(_:didSelect:)(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v194 = sub_10000D858(&qword_1000DDDE8);
  uint64_t v5 = __chkstk_darwin(v194);
  v190 = &v178[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v189 = &v178[-v7];
  uint64_t v8 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  v186 = &v178[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v9);
  v187 = &v178[-v12];
  uint64_t v13 = __chkstk_darwin(v11);
  v188 = &v178[-v14];
  uint64_t v15 = __chkstk_darwin(v13);
  v198 = &v178[-v16];
  uint64_t v17 = __chkstk_darwin(v15);
  v185 = &v178[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  v192 = &v178[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  v193 = &v178[-v22];
  __chkstk_darwin(v21);
  v197 = &v178[-v23];
  uint64_t v204 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v204 - 8);
  uint64_t v25 = __chkstk_darwin(v204);
  v196 = &v178[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = __chkstk_darwin(v25);
  v184 = &v178[-v28];
  __chkstk_darwin(v27);
  v195 = &v178[-v29];
  uint64_t v30 = type metadata accessor for Logger();
  char v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  v202.super.Class isa = (Class)&v178[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v34 = __chkstk_darwin(v32);
  v200 = &v178[-v35];
  uint64_t v36 = __chkstk_darwin(v34);
  v199 = (objc_class *)&v178[-v37];
  uint64_t v38 = __chkstk_darwin(v36);
  v191 = (objc_class *)&v178[-v39];
  __chkstk_darwin(v38);
  uint64_t v41 = (void (*)(uint64_t, uint64_t))&v178[-v40];
  if (qword_1000DD590 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_10000D89C(v30, (uint64_t)qword_1000DDD10);
  int v43 = (void (*)(objc_class *, uint64_t, uint64_t))*((void *)v31 + 2);
  uint64_t v206 = v42;
  v207 = v43;
  v208 = (void *)((char *)v31 + 16);
  ((void (*)(void (*)(uint64_t, uint64_t)))v43)(v41);
  id v44 = a1;
  id v45 = a2;
  id v46 = v44;
  id v47 = (objc_class *)v45;
  v209 = v41;
  id v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.default.getter();
  int v50 = v49;
  BOOL v51 = os_log_type_enabled(v48, v49);
  id v52 = &selRef_titleText;
  uint64_t v201 = ObjectType;
  if (v51)
  {
    uint64_t v53 = swift_slowAlloc();
    os_log_t v181 = v48;
    uint64_t v54 = v53;
    v180 = (void *)swift_slowAlloc();
    uint64_t v182 = swift_slowAlloc();
    uint64_t v210 = v182;
    uint64_t v211 = ObjectType;
    *(_DWORD *)uint64_t v54 = 136315906;
    uint64_t v183 = v24;
    swift_getMetatypeMetadata();
    uint64_t v55 = String.init<A>(describing:)();
    int v179 = v50;
    uint64_t v56 = v46;
    uint64_t v57 = v47;
    uint64_t v211 = sub_10000C3F8(v55, v58, &v210);
    v205 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2080;
    uint64_t v211 = sub_10000C3F8(0xD00000000000001ELL, 0x800000010009C820, &v210);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v54 + 22) = 2080;
    id v59 = [v56 _identifier];
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v61 = v30;
    unint64_t v63 = v62;

    uint64_t v211 = sub_10000C3F8(v60, v63, &v210);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v30 = v61;
    id v52 = &selRef_titleText;
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 32) = 2112;
    uint64_t v211 = (uint64_t)v57;
    uint64_t v64 = v57;
    char v31 = v205;
    uint64_t v24 = v183;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v180 = v57;

    id v47 = v57;
    id v46 = v56;
    os_log_t v65 = v181;
    _os_log_impl((void *)&_mh_execute_header, v181, (os_log_type_t)v179, "<%s: %s> group = %s | element = %@", (uint8_t *)v54, 0x2Au);
    sub_10000D858(&qword_1000DD730);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v66 = v209;
  v209 = (void (*)(uint64_t, uint64_t))*((void *)v31 + 1);
  v209((uint64_t)v66, v30);
  id v67 = [v46 v52[205]];
  uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v70 = v69;

  switch(sub_100078EB4(v68, v70))
  {
    case 1u:
      id v76 = [(objc_class *)v47 _identifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v77 = (uint64_t)v197;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      id v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
      uint64_t v79 = v204;
      if (v78(v77, 1, v204) == 1)
      {
        sub_100003950(v77, (uint64_t *)&unk_1000DD8F0);
LABEL_41:
        Swift::Int v130 = v199;
        v207(v199, v206, v30);
        uint64_t v131 = v47;
        Swift::Int v132 = Logger.logObject.getter();
        os_log_type_t v152 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v132, v152)) {
          goto LABEL_46;
        }
        uint64_t v153 = swift_slowAlloc();
        uint64_t v154 = (void *)swift_slowAlloc();
        uint64_t v210 = swift_slowAlloc();
        *(_DWORD *)uint64_t v153 = 136315650;
        uint64_t v211 = v201;
        swift_getMetatypeMetadata();
        v205 = v31;
        uint64_t v155 = String.init<A>(describing:)();
        v208 = (void *)v30;
        uint64_t v211 = sub_10000C3F8(v155, v156, &v210);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v153 + 12) = 2080;
        uint64_t v211 = sub_10000C3F8(0xD00000000000001ELL, 0x800000010009C820, &v210);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v153 + 22) = 2112;
        uint64_t v211 = (uint64_t)v131;
        id v157 = v131;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v154 = v131;

        _os_log_impl((void *)&_mh_execute_header, v132, v152, "<%s: %s> element = %@ | HFAccessoryTypeGroup = nil", (uint8_t *)v153, 0x20u);
        sub_10000D858(&qword_1000DD730);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        Class v93 = v199;
        uint64_t v94 = (uint64_t)v208;
        goto LABEL_48;
      }
      uint64_t v104 = *(unsigned char **)(v24 + 32);
      uint64_t v105 = v195;
      v202.super.Class isa = (Class)(v24 + 32);
      v200 = v104;
      ((void (*)(unsigned char *, uint64_t, uint64_t))v104)(v195, v77, v79);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      id v107 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))[self accessoryTypeGroupWithIdentifier:isa];

      v205 = v107;
      if (!v107)
      {
        (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v105, v79);
        goto LABEL_41;
      }
      uint64_t v108 = *(void **)(v203 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext);
      if (v108
        && (id v109 = v108,
            uint64_t v110 = (void *)dispatch thunk of DashboardContext.accessoryTypeGroup.getter(),
            v109,
            v110))
      {
        id v111 = [v110 uniqueIdentifier];

        uint64_t v112 = v193;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v113 = v24;
        Swift::Int v114 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
        Swift::Int v115 = v112;
        uint64_t v116 = 0;
      }
      else
      {
        uint64_t v113 = v24;
        Swift::Int v114 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
        uint64_t v112 = v193;
        Swift::Int v115 = v193;
        uint64_t v116 = 1;
      }
      uint64_t v139 = v204;
      v114(v115, v116, 1, v204);
      uint64_t v140 = (uint64_t)v189;
      v141 = *(void (**)(unsigned char *))(v113 + 16);
      id v142 = v192;
      uint64_t v143 = v195;
      v141(v192);
      v114(v142, 0, 1, v139);
      uint64_t v144 = v140 + *(int *)(v194 + 48);
      sub_1000038EC((uint64_t)v112, v140, (uint64_t *)&unk_1000DD8F0);
      sub_1000038EC((uint64_t)v142, v144, (uint64_t *)&unk_1000DD8F0);
      if (v78(v140, 1, v139) == 1)
      {
        sub_100003950((uint64_t)v142, (uint64_t *)&unk_1000DD8F0);
        sub_100003950((uint64_t)v112, (uint64_t *)&unk_1000DD8F0);
        if (v78(v144, 1, v139) == 1)
        {
          sub_100003950(v140, (uint64_t *)&unk_1000DD8F0);
          (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v143, v139);
LABEL_63:

          return;
        }
      }
      else
      {
        v164 = v185;
        sub_1000038EC(v140, (uint64_t)v185, (uint64_t *)&unk_1000DD8F0);
        if (v78(v144, 1, v139) != 1)
        {
          v171 = v184;
          ((void (*)(unsigned char *, uint64_t, uint64_t))v200)(v184, v144, v139);
          sub_10000EFEC(&qword_1000DD9D0, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v172 = dispatch thunk of static Equatable.== infix(_:_:)();
          v173 = *(void (**)(unsigned char *, uint64_t))(v24 + 8);
          v174 = v171;
          v165 = v195;
          v173(v174, v139);
          sub_100003950((uint64_t)v192, (uint64_t *)&unk_1000DD8F0);
          sub_100003950((uint64_t)v193, (uint64_t *)&unk_1000DD8F0);
          v173(v164, v139);
          sub_100003950(v140, (uint64_t *)&unk_1000DD8F0);
          if (v172)
          {
            v173(v165, v139);
            goto LABEL_63;
          }
LABEL_53:
          v166 = v205;
          AdaptiveTabBarController.switchTo(accessoryTypeGroup:)(v205);

          (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v165, v139);
          return;
        }
        sub_100003950((uint64_t)v192, (uint64_t *)&unk_1000DD8F0);
        sub_100003950((uint64_t)v193, (uint64_t *)&unk_1000DD8F0);
        (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v164, v139);
      }
      sub_100003950(v140, &qword_1000DDDE8);
      v165 = v143;
      goto LABEL_53;
    case 2u:
      id v80 = [(objc_class *)v47 _identifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v81 = (uint64_t)v198;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      uint64_t v82 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
      uint64_t v83 = v204;
      if (v82(v81, 1, v204) == 1)
      {
        sub_100003950(v81, (uint64_t *)&unk_1000DD8F0);
        goto LABEL_44;
      }
      v205 = v82;
      v199 = v47;
      uint64_t v117 = v196;
      v198 = *(unsigned char **)(v24 + 32);
      ((void (*)(unsigned char *, uint64_t, uint64_t))v198)(v196, v81, v83);
      type metadata accessor for DataModel();
      uint64_t v118 = (void *)static DataModel.shared.getter();
      Class v119 = UUID._bridgeToObjectiveC()().super.isa;
      uint64_t v120 = (objc_class *)[v118 roomFor:v119];

      v202.super.Class isa = v120;
      if (v120)
      {
        v209 = (void (*)(uint64_t, uint64_t))(v24 + 32);
        uint64_t v121 = *(void **)(v203 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext);
        if (v121 && (id v122 = v121, v123 = (void *)DashboardContext.room.getter(), v122, v123))
        {
          id v124 = [v123 uniqueIdentifier];

          uint64_t v125 = (uint64_t)v188;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v126 = v24;
          uint64_t v127 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v128 = (unsigned char *)v125;
          uint64_t v129 = 0;
        }
        else
        {
          uint64_t v126 = v24;
          uint64_t v127 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          uint64_t v125 = (uint64_t)v188;
          v128 = v188;
          uint64_t v129 = 1;
        }
        uint64_t v145 = v204;
        v127(v128, v129, 1, v204);
        uint64_t v146 = (uint64_t)v190;
        uint64_t v147 = (uint64_t)v187;
        v148 = v205;
        v149 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v126 + 16);
        v150 = v196;
        v149(v187, v196, v145);
        v127((unsigned char *)v147, 0, 1, v145);
        uint64_t v151 = v146 + *(int *)(v194 + 48);
        sub_1000038EC(v125, v146, (uint64_t *)&unk_1000DD8F0);
        sub_1000038EC(v147, v151, (uint64_t *)&unk_1000DD8F0);
        if (v148(v146, 1, v145) == 1)
        {
          sub_100003950(v147, (uint64_t *)&unk_1000DD8F0);
          sub_100003950(v125, (uint64_t *)&unk_1000DD8F0);
          if (v148(v151, 1, v145) == 1)
          {
            sub_100003950(v146, (uint64_t *)&unk_1000DD8F0);
            (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v150, v145);
LABEL_66:

            return;
          }
        }
        else
        {
          v167 = v186;
          sub_1000038EC(v146, (uint64_t)v186, (uint64_t *)&unk_1000DD8F0);
          if (v148(v151, 1, v145) != 1)
          {
            v175 = v184;
            ((void (*)(unsigned char *, uint64_t, uint64_t))v198)(v184, v151, v145);
            sub_10000EFEC(&qword_1000DD9D0, (void (*)(uint64_t))&type metadata accessor for UUID);
            LODWORD(v209) = dispatch thunk of static Equatable.== infix(_:_:)();
            v176 = *(void (**)(unsigned char *, uint64_t))(v24 + 8);
            v177 = v175;
            v150 = v196;
            v176(v177, v145);
            sub_100003950(v147, (uint64_t *)&unk_1000DD8F0);
            sub_100003950(v125, (uint64_t *)&unk_1000DD8F0);
            v176(v167, v145);
            sub_100003950(v146, (uint64_t *)&unk_1000DD8F0);
            if (v209)
            {
              v176(v150, v145);
              goto LABEL_66;
            }
LABEL_57:
            Class v168 = v202.super.isa;
            AdaptiveTabBarController.switchTo(room:)(v202);

            (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v150, v145);
            return;
          }
          sub_100003950(v147, (uint64_t *)&unk_1000DD8F0);
          sub_100003950(v125, (uint64_t *)&unk_1000DD8F0);
          (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v167, v145);
        }
        sub_100003950(v146, &qword_1000DDDE8);
        goto LABEL_57;
      }
      (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v117, v83);
      id v47 = v199;
LABEL_44:
      Swift::Int v130 = (objc_class *)v200;
      v207((objc_class *)v200, v206, v30);
      uint64_t v131 = v47;
      Swift::Int v132 = Logger.logObject.getter();
      os_log_type_t v158 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v132, v158)) {
        goto LABEL_46;
      }
      uint64_t v159 = swift_slowAlloc();
      v160 = (void *)swift_slowAlloc();
      uint64_t v210 = swift_slowAlloc();
      *(_DWORD *)uint64_t v159 = 136315650;
      uint64_t v211 = v201;
      swift_getMetatypeMetadata();
      v205 = v31;
      uint64_t v161 = String.init<A>(describing:)();
      v208 = (void *)v30;
      uint64_t v211 = sub_10000C3F8(v161, v162, &v210);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v159 + 12) = 2080;
      uint64_t v211 = sub_10000C3F8(0xD00000000000001ELL, 0x800000010009C820, &v210);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v159 + 22) = 2112;
      uint64_t v211 = (uint64_t)v131;
      v163 = v131;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v160 = v131;

      _os_log_impl((void *)&_mh_execute_header, v132, v158, "<%s: %s> element = %@ | HMRoom = nil", (uint8_t *)v159, 0x20u);
      sub_10000D858(&qword_1000DD730);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      Class v93 = (Class)v200;
      uint64_t v94 = (uint64_t)v208;
LABEL_48:
      v209((uint64_t)v93, v94);
      return;
    case 3u:
      Class v84 = v202.super.isa;
      v207(v202.super.isa, v206, v30);
      uint64_t v85 = v47;
      uint64_t v86 = Logger.logObject.getter();
      os_log_type_t v87 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v86, v87))
      {
        uint64_t v88 = swift_slowAlloc();
        uint64_t v89 = (void *)swift_slowAlloc();
        uint64_t v210 = swift_slowAlloc();
        *(_DWORD *)uint64_t v88 = 136315650;
        uint64_t v211 = v201;
        swift_getMetatypeMetadata();
        v205 = v31;
        uint64_t v90 = String.init<A>(describing:)();
        v208 = (void *)v30;
        uint64_t v211 = sub_10000C3F8(v90, v91, &v210);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v88 + 12) = 2080;
        uint64_t v211 = sub_10000C3F8(0xD00000000000001ELL, 0x800000010009C820, &v210);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v88 + 22) = 2112;
        uint64_t v211 = (uint64_t)v85;
        uint64_t v92 = v85;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v89 = v85;

        _os_log_impl((void *)&_mh_execute_header, v86, v87, "<%s: %s> is other: %@", (uint8_t *)v88, 0x20u);
        sub_10000D858(&qword_1000DD730);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        Class v93 = v202.super.isa;
        uint64_t v94 = (uint64_t)v208;
        goto LABEL_48;
      }

      Class v93 = v84;
      goto LABEL_47;
    default:
      id v71 = [(objc_class *)v47 _identifier];
      uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v74 = v73;

      if (v72 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v74 == v75)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v95 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v95 & 1) == 0) {
          return;
        }
      }
      uint64_t v96 = OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext;
      uint64_t v97 = v203;
      unint64_t v98 = *(void **)(v203 + OBJC_IVAR___HOAdaptiveTabBarController_dashboardContext);
      if (v98)
      {
        id v99 = v98;
        BOOL v100 = (void *)DashboardContext.home.getter();

        uint64_t v101 = *(void **)(v97 + v96);
        if (v101
          && ((id v102 = v101, v103 = (void *)DashboardContext.room.getter(), v102, v103)
           || (v169 = *(void **)(v97 + v96)) != 0
           && (id v170 = v169,
               uint64_t v103 = (void *)dispatch thunk of DashboardContext.accessoryTypeGroup.getter(),
               v170,
               v103)))
        {

          AdaptiveTabBarController.switchTo(home:)((HMHome)v100);
        }
        else
        {
        }
        return;
      }
      Swift::Int v130 = v191;
      v207(v191, v206, v30);
      uint64_t v131 = v47;
      Swift::Int v132 = Logger.logObject.getter();
      os_log_type_t v133 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v132, v133))
      {
        uint64_t v134 = swift_slowAlloc();
        uint64_t v135 = (void *)swift_slowAlloc();
        uint64_t v210 = swift_slowAlloc();
        *(_DWORD *)uint64_t v134 = 136315650;
        uint64_t v211 = v201;
        swift_getMetatypeMetadata();
        v205 = v31;
        uint64_t v136 = String.init<A>(describing:)();
        v208 = (void *)v30;
        uint64_t v211 = sub_10000C3F8(v136, v137, &v210);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v134 + 12) = 2080;
        uint64_t v211 = sub_10000C3F8(0xD00000000000001ELL, 0x800000010009C820, &v210);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v134 + 22) = 2112;
        uint64_t v211 = (uint64_t)v131;
        Swift::Int v138 = v131;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v135 = v131;

        _os_log_impl((void *)&_mh_execute_header, v132, v133, "<%s: %s> element = %@ | dashboardContext.home = nil", (uint8_t *)v134, 0x20u);
        sub_10000D858(&qword_1000DD730);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        Class v93 = v191;
        uint64_t v94 = (uint64_t)v208;
      }
      else
      {
LABEL_46:

        Class v93 = v130;
LABEL_47:
        uint64_t v94 = v30;
      }
      goto LABEL_48;
  }
}

void AdaptiveTabBarController._tabElementGroup(_:didCustomizeDisplayOrder:)(uint64_t a1, uint64_t a2)
{
}

id AdaptiveTabBarController.finishPresentation(_:animated:)(uint64_t a1, char a2)
{
  debug_assert(_:_:file:line:)();
  if (HUIsPhoneIdiom())
  {
    id v4 = [self currentDevice];
    [v4 setOrientation:1 animated:0];
  }
  [v2 hu_dismissViewControllerAnimated:a2 & 1];

  return v5;
}

id sub_100071964(void *a1, id a2)
{
  id v3 = [a2 presentedViewController];
  id v4 = [a1 naui_isDescendantOfViewController:v3];

  return v4;
}

uint64_t sub_1000719C4(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(85);
  v3._object = (void *)0x800000010009CC70;
  v3._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v3);
  swift_getObjectType();
  swift_getWitnessTable();
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v4._countAndFlagsBits = 0xD000000000000036;
  v4._object = (void *)0x800000010009CC90;
  String.append(_:)(v4);
  id v5 = [a2 description];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 33;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return 0;
}

Swift::Bool __swiftcall AdaptiveTabBarController.tabBarController(_:shouldSelect:)(UITabBarController _, UIViewController shouldSelect)
{
  return sub_1000735F8(shouldSelect.super.super.isa);
}

Swift::Void __swiftcall AdaptiveTabBarController.tabBarController(_:didSelect:)(UITabBarController _, UIViewController didSelect)
{
}

id AdaptiveTabBarController.tabBarController(_:animationControllerForTransitionFrom:to:)()
{
  id v0 = objc_allocWithZone((Class)HUPreloadedTransitionController);

  return [v0 init];
}

void AdaptiveTabBarController._uip_tabBarController(_:tab:operationForAcceptingItemsFrom:)(uint64_t a1, void *a2, void *a3)
{
}

void AdaptiveTabBarController._uip_tabBarController(_:tab:acceptItemsFrom:)(int a1, void *a2, id a3)
{
}

uint64_t sub_100071EF4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100071F74(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_100071FE4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10007207C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10007225C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10007225C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10007207C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000721F4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000721F4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000D858(&qword_1000DE288);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10007225C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000D858(&qword_1000DE288);
    Swift::String v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    Swift::String v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000723B4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000723F0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100074510;
  return sub_10006F50C(v2, v3);
}

id sub_100072488()
{
  uint64_t v1 = v0;
  sub_10000D858(&qword_1000DE260);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10007263C(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v28 = a2;
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  unint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      unint64_t v26 = a1 & 0xC000000000000001;
      v24[1] = v3;
      uint64_t v25 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v9 = 4;
      do
      {
        uint64_t v3 = v9 - 4;
        if (v26)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v11 = v9 - 3;
          if (__OFADD__(v3, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v10 = *(id *)(a1 + 8 * v9);
          uint64_t v11 = v9 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v5 = v8;
        id v29 = v10;
        id v12 = [v10 _identifier];
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        id v16 = [v28 uniqueIdentifier];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v17 = UUID.uuidString.getter();
        uint64_t v19 = v18;
        (*v25)(v7, v27);
        if (v13 == v17 && v15 == v19)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          id v22 = v29;
          swift_bridgeObjectRelease();
          return v22;
        }
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_17;
        }

        ++v9;
        uint64_t v8 = v5;
      }
      while (v11 != v5);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000728B8(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v6 = *(id *)(a1 + 8 * i);
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v20 = v6;
        id v8 = [v6 _identifier];
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;

        id v12 = [a2 _identifier];
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        if (v9 == v13 && v11 == v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v3 = (uint64_t)v20;
          swift_bridgeObjectRelease();
          return v3;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_17;
        }

        if (v7 == v3)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v3;
}

id sub_100072A7C(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v28 = a2;
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v23 = v3;
      unint64_t v24 = a1;
      uint64_t v25 = (void (**)(char *, uint64_t))(v5 + 8);
      unint64_t v26 = a1 & 0xC000000000000001;
      uint64_t v9 = 4;
      do
      {
        uint64_t v3 = v9 - 4;
        if (v26)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v5 = v9 - 3;
          if (__OFADD__(v3, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v10 = *(id *)(a1 + 8 * v9);
          uint64_t v5 = v9 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        id v29 = v10;
        id v11 = [v10 uniqueIdentifier:v23];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v12 = UUID.uuidString.getter();
        uint64_t v14 = v13;
        (*v25)(v7, v27);
        id v15 = [v28 _identifier];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        if (v12 == v16 && v14 == v18)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          id v21 = v29;
          swift_bridgeObjectRelease();
          return v21;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_17;
        }

        ++v9;
        a1 = v24;
      }
      while (v5 != v8);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100072CF4(uint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000AE6C(0, &qword_1000DD928);
    sub_100074458();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v19;
    uint64_t v18 = v20;
    uint64_t v4 = v21;
    uint64_t v5 = v22;
    unint64_t v6 = v23;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v18 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v10 = (v6 - 1) & v6;
      unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v12 = v5;
      goto LABEL_29;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v14 >= v17) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    uint64_t v12 = v5 + 1;
    if (!v15)
    {
      uint64_t v12 = v5 + 2;
      if (v5 + 2 >= v17) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v5 + 3;
        if (v5 + 3 >= v17) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v5 + 4;
          if (v5 + 4 >= v17) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v5 + 5;
            if (v5 + 5 >= v17) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v5 + 6;
              while (v17 != v16)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10000EE28();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      [a2 addAccessory:v13];

      uint64_t v5 = v12;
      unint64_t v6 = v10;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_10000AE6C(0, &qword_1000DD928);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v24;
        swift_unknownObjectRelease();
        uint64_t v12 = v5;
        uint64_t v10 = v6;
        if (v24) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void *sub_100072FCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StateSnapshot.Coverage();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10000D858(&qword_1000DE270);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    char v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_10000EFEC(&qword_1000DE278, (void (*)(uint64_t))&type metadata accessor for StateSnapshot.Coverage);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_10000EFEC(&qword_1000DE280, (void (*)(uint64_t))&type metadata accessor for StateSnapshot.Coverage);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          unint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        id result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_1000732E4(uint64_t a1)
{
  uint64_t v2 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v26 = (char *)&v22 - v9;
  id v10 = [self sharedDispatcher];
  id v11 = [v10 home];

  if (v11)
  {
    uint64_t v12 = *(void *)(a1 + 16);
    if (v12)
    {
      id v23 = v11;
      uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      uint64_t v14 = (void (**)(char *, char *, uint64_t))(v27 + 32);
      swift_bridgeObjectRetain();
      uint64_t v24 = a1;
      uint64_t v15 = a1 + 40;
      uint64_t v16 = _swiftEmptyArrayStorage;
      uint64_t v25 = v8;
      do
      {
        swift_bridgeObjectRetain();
        UUID.init(uuidString:)();
        swift_bridgeObjectRelease();
        if ((*v13)(v4, 1, v5) == 1)
        {
          sub_100003950((uint64_t)v4, (uint64_t *)&unk_1000DD8F0);
        }
        else
        {
          uint64_t v17 = *v14;
          unint64_t v18 = v26;
          (*v14)(v26, v4, v5);
          v17(v8, v18, v5);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = (void *)sub_10005FCA8(0, v16[2] + 1, 1, (unint64_t)v16);
          }
          unint64_t v20 = v16[2];
          unint64_t v19 = v16[3];
          if (v20 >= v19 >> 1) {
            uint64_t v16 = (void *)sub_10005FCA8(v19 > 1, v20 + 1, 1, (unint64_t)v16);
          }
          void v16[2] = v20 + 1;
          unint64_t v21 = (unint64_t)v16
              + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
              + *(void *)(v27 + 72) * v20;
          uint64_t v8 = v25;
          v17((char *)v21, v25, v5);
        }
        v15 += 16;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      id v11 = v23;
    }
    HMHome.sidebarRoomsSortOrder.setter();
  }
}

id sub_1000735E8()
{
  return sub_100071964(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1000735F0()
{
  return sub_1000719C4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000735F8(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 selectedViewController];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_10000AE6C(0, &qword_1000DD750);
    id v6 = a1;
    char v7 = static NSObject.== infix(_:_:)();
  }
  else
  {
    char v7 = 0;
  }
  uint64_t v8 = OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop;
  v2[OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop] = v7 & 1;
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    id v10 = (void *)v9;
    id v11 = a1;
    id v12 = [v10 viewControllers];
    sub_10000AE6C(0, &qword_1000DD750);
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v14 == 1 && (id v15 = [v2 selectedViewController]) != 0)
    {
      id v16 = v15;
      id v17 = v11;
      char v18 = static NSObject.== infix(_:_:)();

      id v11 = v16;
    }
    else
    {
      char v18 = 0;
    }

    v2[v8] = v18 & 1;
  }
  return 1;
}

void sub_1000737C4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000DD590 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10000D89C(v5, (uint64_t)qword_1000DDD10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  id v10 = a1;
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v2;
    uint64_t v15 = v14;
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v25 = v23;
    uint64_t v26 = ObjectType;
    *(_DWORD *)uint64_t v15 = 136315650;
    swift_getMetatypeMetadata();
    HIDWORD(v21) = v13;
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v26 = sub_10000C3F8(v16, v17, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v26 = sub_10000C3F8(0xD00000000000001ELL, 0x800000010009CC30, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2112;
    uint64_t v26 = (uint64_t)v10;
    id v18 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v22 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, BYTE4(v21), "<%s: %s> %@", (uint8_t *)v15, 0x20u);
    sub_10000D858(&qword_1000DD730);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v24;
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10006D510();
  uint64_t v19 = OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop;
  if (*(unsigned char *)(v2 + OBJC_IVAR___HOAdaptiveTabBarController_scrollToTop) == 1)
  {
    id v20 = _s7HomeApp24AdaptiveTabBarControllerC18dashboardNavigatorSo011HUDashboardH0_pSgvg_0();
    [v20 scrollToDefaultPositionInCurrentContextAnimated:1];
  }
  *(unsigned char *)(v2 + v19) = 0;
}

void sub_100073B38(void *a1, void *a2)
{
  id v4 = *(void **)(v2 + OBJC_IVAR___HOAdaptiveTabBarController_roomsElements);
  if (!v4) {
    return;
  }
  id v6 = [v4 _children];
  sub_10000AE6C(0, (unint64_t *)&qword_1000DE218);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v8 = a1;
  uint64_t v9 = (void *)sub_1000728B8(v7, v8);
  swift_bridgeObjectRelease();

  if (!v9) {
    return;
  }

  id v10 = [a2 items];
  sub_10000AE6C(0, &qword_1000DE1F8);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v11 >> 62))
  {
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    long long v19 = 0u;
    long long v20 = 0u;
LABEL_17:
    sub_100003950((uint64_t)&v19, &qword_1000DE200);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v12 = *(id *)(v11 + 32);
  }
  int v13 = v12;
  swift_bridgeObjectRelease();
  id v14 = [v13 localObject];

  if (v14)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_1000743F0((uint64_t)v18, (uint64_t)&v19);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_17;
  }
  sub_10000D858(&qword_1000DE208);
  if (swift_dynamicCast())
  {
    swift_unknownObjectRelease();
    id v15 = [self sharedDispatcher];
    id v16 = [v15 home];

    if (v16)
    {
      [v16 hf_currentUserIsAdministrator];
    }
  }
}

void sub_100073DD8(void *a1, id a2)
{
  id v3 = [a2 items];
  sub_10000AE6C(0, &qword_1000DE1F8);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    long long v25 = 0u;
    long long v26 = 0u;
LABEL_18:
    sub_100003950((uint64_t)&v25, &qword_1000DE200);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v23) {
    goto LABEL_17;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v5 = *(id *)(v4 + 32);
  }
  id v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = [v6 localObject];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  sub_1000743F0((uint64_t)v24, (uint64_t)&v25);
  if (!*((void *)&v26 + 1)) {
    goto LABEL_18;
  }
  sub_10000D858(&qword_1000DE208);
  if (swift_dynamicCast())
  {
    id v8 = *(void **)&v24[0];
    id v9 = [self sharedDispatcher];
    id v10 = [v9 home];

    if (v10)
    {
      id v11 = [v10 rooms];
      sub_10000AE6C(0, &qword_1000DE210);
      unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v13 = a1;
      id v14 = sub_100072A7C(v12, v13);
      swift_bridgeObjectRelease();

      if (v14)
      {
        id v15 = [objc_allocWithZone((Class)HFRoomItem) initWithHome:v10 room:v14];
        id v16 = [v15 room];
        id v17 = [v15 home];
        id v18 = [objc_allocWithZone((Class)HFRoomBuilder) initWithExistingObject:v16 inHome:v17];

        id v19 = [v8 accessories];
        sub_10000AE6C(0, &qword_1000DD928);
        sub_100074458();
        uint64_t v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        id v21 = v18;
        sub_100072CF4(v20, v21);
        swift_bridgeObjectRelease();

        id v22 = [v21 commitItem];
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void *sub_100074190()
{
  return &protocol witness table for ObservableObjectPublisher;
}

id sub_10007419C@<X0>(void *a1@<X8>)
{
  id result = AdaptiveTabBarController.baseController.getter();
  *a1 = result;
  return result;
}

void sub_1000741C8(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController);
  *(void *)(*a2 + OBJC_IVAR___HOAdaptiveTabBarController____lazy_storage___baseController) = *a1;
  id v3 = v2;
}

uint64_t sub_10007421C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007425C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_1000742F4;
  return sub_10006F50C(v2, v3);
}

uint64_t sub_1000742F4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1000743F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D858(&qword_1000DE200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100074458()
{
  unint64_t result = qword_1000DD930;
  if (!qword_1000DD930)
  {
    sub_10000AE6C(255, &qword_1000DD928);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000DD930);
  }
  return result;
}

uint64_t sub_1000744C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000744D0()
{
  return _swift_continuation_throwingResume(*(void *)(v0 + 16));
}

uint64_t sub_1000744D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000744E8()
{
  return swift_release();
}

uint64_t _UITab.id.getter()
{
  id v1 = [v0 _identifier];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

void *sub_10007456C()
{
  return &protocol witness table for String;
}

void sub_100074578(uint64_t *a1@<X8>)
{
  id v3 = [*v1 _identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

id sub_1000745D0@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

uint64_t sub_100074600(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_100074618()
{
  unint64_t result = qword_1000DE218;
  if (!qword_1000DE218)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000DE218);
  }
  return result;
}

id sub_100074658(uint64_t a1)
{
  long long v2 = v1;
  id v3 = [objc_allocWithZone((Class)HUSceneActionEditorViewController) initWithActionSetBuilder:a1 mode:2];
  id v4 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v3];
  id result = [v2 hu_presentPreloadableViewController:v4 animated:1];
  if (result)
  {
    uint64_t v6 = result;
    id v7 = self;
    id v8 = v6;
    id v9 = [v7 futureWithResult:v3];
    id v10 = [v9 asGeneric];

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100074764(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_100074A74(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, id))
{
  if (a3)
  {
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  type metadata accessor for DashboardContext();
  id v15 = a4;
  id v16 = a5;
  id v17 = a1;
  id v18 = (void *)a7(v12, v14, v15);
  sub_1000750E0(v18, v16, 0, a6);

  return swift_bridgeObjectRelease();
}

Swift::String_optional __swiftcall HOAppNavigator.dashboardContextTypeDescriptionForAnalytics()()
{
  id v1 = [v0 currentViewController];
  self;
  long long v2 = (void *)swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = [v2 context];
    uint64_t v4 = dispatch thunk of DashboardContext.typeDescriptionForAnalytics.getter();
    id v6 = v5;
  }
  else
  {

    uint64_t v4 = 0;
    id v6 = 0;
  }
  uint64_t v7 = v4;
  id v8 = v6;
  result.value._object = v8;
  result.value._countAndFlagsBits = v7;
  return result;
}

void sub_100074D64(int a1, int a2, id a3, uint64_t a4, char a5)
{
  id v6 = [a3 hu_pushPreloadableViewController:a4 animated:a5 & 1 waitForPreload:1];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a3;
    void v12[4] = sub_100075CF0;
    void v12[5] = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100057B88;
    uint64_t v12[3] = &unk_1000C6EC0;
    id v9 = _Block_copy(v12);
    id v10 = a3;
    swift_release();
    id v11 = [v7 addCompletionBlock:v9];
    _Block_release(v9);
  }
  else
  {
    __break(1u);
  }
}

void sub_100074E84(void *a1, int a2, id a3)
{
  id v5 = [a3 viewControllers];
  sub_10000AE6C(0, &qword_1000DD750);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v7 < 3) {
    return;
  }
  id v8 = [a3 viewControllers];
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_6;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_17;
  }
LABEL_6:
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v10 = (objc_class *)*(id *)(v9 + 32);
  }
  Class isa = v10;
  swift_bridgeObjectRelease();
  if (a1)
  {
    sub_10000D858((uint64_t *)&unk_1000DDDB0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100095480;
    *(void *)(v11 + 32) = isa;
    *(void *)(v11 + 40) = a1;
    specialized Array._endMutation()();
    id v12 = a1;
    uint64_t v13 = isa;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a3 setViewControllers:isa];
  }
}

void sub_1000750E0(void *a1, id a2, char a3, char a4)
{
  id v8 = [a2 viewControllers];
  sub_10000AE6C(0, &qword_1000DD750);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v28)
    {
LABEL_3:
      if ((v9 & 0xC000000000000001) != 0)
      {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v10 = *(id *)(v9 + 32);
      }
      id v29 = v10;
      swift_bridgeObjectRelease();
      self;
      uint64_t v11 = swift_dynamicCastObjCClass();
      if (!v11) {
        goto LABEL_14;
      }
      id v12 = (void *)v11;
      id v13 = [a2 topViewController];
      if (v13)
      {
        uint64_t v14 = v13;
        self;
        uint64_t v15 = swift_dynamicCastObjCClass();
        if (v15)
        {
          id v16 = (void *)v15;
          sub_10000AE6C(0, &qword_1000DE420);
          id v17 = [v16 context];
          LOBYTE(v16) = static NSObject.== infix(_:_:)();

          if (v16)
          {
LABEL_14:

            return;
          }
        }
        else
        {
        }
      }
      id v18 = (void *)DashboardContext.home.getter();
      unsigned int v19 = [v18 hf_currentUserIsRestrictedGuest];

      if (!v19 || (dispatch thunk of DashboardContext.shouldHideForGuests.getter() & 1) == 0)
      {
        id v20 = a1;
        id v21 = [objc_allocWithZone((Class)HUDashboardViewController) initWithContext:v20 asOverlay:a3 & 1 delegate:[v12 delegate]];

        swift_unknownObjectRelease();
        id v22 = [v12 viewFirstTimeFullyVisibleFuture];
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = a2;
        *(void *)(v23 + 24) = v21;
        *(unsigned char *)(v23 + 32) = a4 & 1;
        aBlock[4] = sub_100075C94;
        aBlock[5] = v23;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100074764;
        aBlock[3] = &unk_1000C6E70;
        uint64_t v24 = _Block_copy(aBlock);
        id v25 = a2;
        id v26 = v21;
        swift_release();
        id v27 = [v22 addCompletionBlock:v24];
        _Block_release(v24);

        return;
      }
      goto LABEL_14;
    }
  }
  else if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }

  swift_bridgeObjectRelease();
}

void sub_100075490(void *a1, void *a2, void *a3, char a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - v13;
  id v15 = [a1 uniqueIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = [self energyAccessoryTypeGroup];
  id v17 = [v16 uniqueIdentifier];

  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  LOBYTE(v16) = static UUID.== infix(_:_:)();
  id v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  v18(v14, v8);
  if ((v16 & 1) == 0 || objc_msgSend(a2, "hf_isHomeEnergyVisible"))
  {
    type metadata accessor for DashboardContext();
    unsigned int v19 = (void *)dispatch thunk of static DashboardContext.categoryDashboard(for:in:room:)();
    id v20 = [a3 viewControllers];
    sub_10000AE6C(0, &qword_1000DD750);
    unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v22 >= 2)
    {
      id v23 = [a3 topViewController];
      if (v23)
      {
        uint64_t v24 = v23;
        self;
        id v25 = (void *)swift_dynamicCastObjCClass();
        if (v25)
        {
          if (([v25 isOverlay] & 1) == 0) {

          }
          a4 = 0;
        }
      }
    }
    sub_1000750E0(v19, a3, 1, a4 & 1);
  }
}

void sub_100075784(void *a1, void *a2, char a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a1 home];
  if (v10)
  {
    uint64_t v11 = v10;
    type metadata accessor for DashboardContext();
    id v23 = (void *)dispatch thunk of static DashboardContext.roomDashboard(for:in:)();
    sub_1000750E0(v23, a2, 0, a3 & 1);

    id v12 = v23;
  }
  else
  {
    if (qword_1000DD5A8 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1000DF990;
    Logger.init(_:)();
    id v14 = a1;
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      unint64_t v21 = (void *)swift_slowAlloc();
      id v23 = (void *)swift_slowAlloc();
      id v25 = v23;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v24 = sub_10000C3F8(0xD00000000000003ELL, 0x800000010009D000, (uint64_t *)&v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 12) = 2112;
      uint64_t v24 = (uint64_t)v14;
      id v18 = v14;
      uint64_t v22 = v7;
      id v19 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v21 = v14;

      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s nil home for room %@", (uint8_t *)v17, 0x16u);
      sub_10000D858(&qword_1000DD730);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

void _sSo14HOAppNavigatorC7HomeAppE25configureDashboardContext4with20navigationController8animatedy0C2UI0fG0CSg_So012UINavigationJ0CSbtF_0(void *a1, void *a2, char a3)
{
  if (!a1) {
    return;
  }
  id v16 = a1;
  if ((dispatch thunk of DashboardContext.allowsHomeNavigation.getter() & 1) == 0)
  {
    char v8 = a3 & 1;
    uint64_t v9 = v16;
    id v10 = a2;
    char v11 = 1;
    goto LABEL_8;
  }
  id v5 = (void *)DashboardContext.room.getter();

  if (v5
    || (dispatch thunk of DashboardContext.overrideDashboardTitle.getter(), uint64_t v7 = v6, swift_bridgeObjectRelease(), v7))
  {
    char v8 = a3 & 1;
    uint64_t v9 = v16;
    id v10 = a2;
    char v11 = 0;
LABEL_8:
    sub_1000750E0(v9, v10, v11, v8);
    goto LABEL_9;
  }
  id v13 = [a2 viewControllers];
  sub_10000AE6C(0, &qword_1000DD750);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v12 = v16;
  if (v15 < 2) {
    goto LABEL_10;
  }

LABEL_9:
  id v12 = v16;
LABEL_10:
}

uint64_t sub_100075C54()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_100075C94(int a1, int a2)
{
  sub_100074D64(a1, a2, *(id *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
}

uint64_t sub_100075CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100075CB0()
{
  return swift_release();
}

uint64_t sub_100075CB8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100075CF0(void *a1, int a2)
{
  sub_100074E84(a1, a2, *(id *)(v2 + 16));
}

id HOWidgetUpdater.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HOWidgetUpdater();
  return [super init];
}

uint64_t type metadata accessor for HOWidgetUpdater()
{
  return self;
}

id HOWidgetUpdater.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HOWidgetUpdater();
  return [super dealloc];
}

void sub_100075F28(char a1, uint64_t a2)
{
  id v3 = v2;
  sub_10007609C(a1);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_errorRetain();
    sub_10000D858(&qword_1000DE4B8);
    sub_10000D858((uint64_t *)&unk_1000DE4C0);
    if (swift_dynamicCast())
    {
      if (*((void *)&v8 + 1))
      {
        sub_1000657D0(&v7, *((uint64_t *)&v8 + 1));
        dispatch thunk of CustomStringConvertible.description.getter();
        sub_10000C4CC((uint64_t)&v7);
LABEL_8:
        NSString v6 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v9 = 0;
      long long v7 = 0u;
      long long v8 = 0u;
    }
    sub_100003950((uint64_t)&v7, &qword_1000DE4B0);
    swift_getErrorValue();
    Error.localizedDescription.getter();
    goto LABEL_8;
  }
  uint64_t v9 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  sub_100003950((uint64_t)&v7, &qword_1000DE4B0);
  NSString v6 = 0;
LABEL_9:
  [v3 failedTest:v5 withFailure:v6];
}

uint64_t sub_10007609C(char a1)
{
  uint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6F486C6C6F726373;
      break;
    case 2:
    case 5:
    case 16:
      return result;
    case 3:
      uint64_t result = 0x6D6F6F526E65706FLL;
      break;
    case 4:
      uint64_t result = 0xD000000000000015;
      break;
    case 6:
      uint64_t result = 0xD000000000000011;
      break;
    case 7:
      uint64_t result = 0x6964654D6E65706FLL;
      break;
    case 8:
      uint64_t result = 0xD000000000000011;
      break;
    case 9:
      uint64_t result = 0xD000000000000012;
      break;
    case 10:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 12:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 13:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 14:
    case 29:
    case 30:
    case 32:
      uint64_t result = 0xD000000000000017;
      break;
    case 15:
      uint64_t result = 0xD000000000000015;
      break;
    case 17:
      uint64_t result = 0x6D6F6F52646461;
      break;
    case 18:
      uint64_t result = 0x6F526574656C6564;
      break;
    case 19:
      uint64_t result = 0x694C656C67676F74;
      break;
    case 20:
      uint64_t v3 = 0x656C67676F74;
      goto LABEL_20;
    case 21:
      uint64_t v3 = 0x657461657263;
LABEL_20:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6353000000000000;
      break;
    case 22:
      uint64_t result = 0xD000000000000014;
      break;
    case 23:
      uint64_t result = 0xD000000000000013;
      break;
    case 24:
      uint64_t result = 0xD000000000000016;
      break;
    case 25:
      uint64_t result = 0xD000000000000018;
      break;
    case 26:
      uint64_t result = 0xD000000000000025;
      break;
    case 27:
      uint64_t result = 0xD000000000000024;
      break;
    case 28:
      uint64_t result = 0xD000000000000018;
      break;
    case 31:
      uint64_t result = 0xD000000000000018;
      break;
    case 33:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 34:
      uint64_t result = 0xD000000000000013;
      break;
    case 35:
      uint64_t result = 0xD000000000000015;
      break;
    case 36:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      uint64_t result = 0x706D6F4364616572;
      break;
  }
  return result;
}

uint64_t sub_100076434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100003950(a1, &qword_1000DE4D0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

Swift::Bool __swiftcall HOAppDelegate.application(_:runTest:options:)(UIApplication_optional _, Swift::String_optional runTest, Swift::OpaquePointer_optional options)
{
  Class isa = _.value.super.super.isa;
  LOBYTE(_.value.super.super.isa) = UIApp;
  if (!UIApp)
  {
    __break(1u);
    goto LABEL_11;
  }
  object = runTest.value._object;
  countAndFlagsBits = (void *)runTest.value._countAndFlagsBits;
  uint64_t v6 = *(void *)&_.is_nil;
  LOBYTE(_.value.super.super.isa) = [UIApp rotateIfNeeded:1 runTest.value._object:options.value._rawValue:options.is_nil];
  if (!countAndFlagsBits)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  LOBYTE(_.value.super.super.isa) = sub_1000770F0();
  char v7 = (char)_.value.super.super.isa;
  if (LOBYTE(_.value.super.super.isa) == 37)
  {
    if (isa)
    {
      NSString v8 = String._bridgeToObjectiveC()();
      strcpy((char *)v12, "Unknown test ");
      HIWORD(v12[1]) = -4864;
      swift_bridgeObjectRetain();
      v9._countAndFlagsBits = v6;
      v9._object = countAndFlagsBits;
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      -[objc_class failedTest:withFailure:](isa, "failedTest:withFailure:", v8, v10, v12[0], v12[1]);

      goto LABEL_9;
    }
LABEL_14:
    __break(1u);
    return (Swift::Bool)_.value.super.super.isa;
  }
  if (!isa) {
    goto LABEL_12;
  }
  _.value.super.super.Class isa = (Class)sub_100077144((char)_.value.super.super.isa);
  if (!object)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  ((void (*)(Class, void *))_.value.super.super.isa)(isa, object);
  swift_release();
LABEL_9:
  LOBYTE(_.value.super.super.isa) = v7 != 37;
  return (Swift::Bool)_.value.super.super.isa;
}

void sub_100076820(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  if (a2) {
    v7.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  }
  else {
    v7.super.Class isa = 0;
  }
  Class isa = v7.super.isa;
  [a3 *a4:a1];
}

uint64_t sub_1000768B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9 = sub_10000D858(&qword_1000DD8E8);
  __chkstk_darwin(v9 - 8);
  char v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *char v11 = 1;
  uint64_t v12 = enum case for DispatchTimeInterval.seconds(_:);
  uint64_t v13 = type metadata accessor for DispatchTimeInterval();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v14 + 104))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  sub_100057CEC(a4, a5, a1, a2, (uint64_t)v11);
  return sub_100003950((uint64_t)v11, &qword_1000DD8E8);
}

uint64_t sub_100076A08(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_10000D858(&qword_1000DE4D0);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  type metadata accessor for MainActor();
  id v13 = a3;
  id v14 = a1;
  swift_bridgeObjectRetain();
  uint64_t v15 = static MainActor.shared.getter();
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v15;
  v16[3] = &protocol witness table for MainActor;
  v16[4] = v13;
  v16[5] = v14;
  void v16[6] = a2;
  sub_100076434((uint64_t)v11, a5, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_100076B44(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_10000D858(&qword_1000DE4D0);
  __chkstk_darwin(v6 - 8);
  NSString v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor();
  id v10 = a3;
  id v11 = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  *(void *)(v13 + 32) = v10;
  *(unsigned char *)(v13 + 40) = 31;
  *(void *)(v13 + 48) = v11;
  *(void *)(v13 + 56) = a2;
  sub_100076434((uint64_t)v8, (uint64_t)&unk_1000DE4F8, v13);
  return swift_release();
}

uint64_t sub_100076C8C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_10000D858(&qword_1000DE4D0);
  __chkstk_darwin(v6 - 8);
  NSString v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor();
  id v10 = a3;
  id v11 = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  *(void *)(v13 + 32) = v10;
  *(unsigned char *)(v13 + 40) = 32;
  *(void *)(v13 + 48) = v11;
  *(void *)(v13 + 56) = a2;
  sub_100076434((uint64_t)v8, (uint64_t)&unk_1000DE500, v13);
  return swift_release();
}

uint64_t sub_100076DD4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_10000D858(&qword_1000DE4D0);
  __chkstk_darwin(v6 - 8);
  NSString v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor();
  id v10 = a3;
  id v11 = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  *(void *)(v13 + 32) = v10;
  *(unsigned char *)(v13 + 40) = 33;
  *(void *)(v13 + 48) = v11;
  *(void *)(v13 + 56) = a2;
  sub_100076434((uint64_t)v8, (uint64_t)&unk_1000DE508, v13);
  return swift_release();
}

uint64_t sub_100076F1C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_100076FF8;
  return v6(a1);
}

uint64_t sub_100076FF8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000770F0()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x25) {
    return 37;
  }
  else {
    return v0;
  }
}

void *sub_100077144(char a1)
{
  switch(a1)
  {
    case 1:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100078000;
      break;
    case 2:
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = v1;
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = sub_100077FA4;
      *(void *)(v4 + 24) = v3;
      uint64_t v2 = sub_1000786C0;
      break;
    case 3:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077F80;
      break;
    case 4:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077F5C;
      break;
    case 5:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077F38;
      break;
    case 6:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077F14;
      break;
    case 7:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077EF0;
      break;
    case 8:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077ECC;
      break;
    case 9:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077EA8;
      break;
    case 10:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077E84;
      break;
    case 11:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077E60;
      break;
    case 12:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077E3C;
      break;
    case 13:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077E18;
      break;
    case 14:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077DF4;
      break;
    case 15:
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v1;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = sub_100077DD0;
      *(void *)(v6 + 24) = v5;
      uint64_t v2 = sub_1000786C0;
      break;
    case 16:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077DAC;
      break;
    case 17:
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v1;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = sub_100077D88;
      *(void *)(v8 + 24) = v7;
      uint64_t v2 = sub_1000786C0;
      break;
    case 18:
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v1;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_100077D64;
      *(void *)(v10 + 24) = v9;
      uint64_t v2 = sub_1000786C0;
      break;
    case 19:
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v1;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = sub_100077D40;
      *(void *)(v12 + 24) = v11;
      uint64_t v2 = sub_1000786C0;
      break;
    case 20:
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v1;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_100077D1C;
      *(void *)(v14 + 24) = v13;
      uint64_t v2 = sub_1000786C0;
      break;
    case 21:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077CF8;
      break;
    case 22:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077CD4;
      break;
    case 23:
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v1;
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_100077CB0;
      *(void *)(v16 + 24) = v15;
      uint64_t v2 = sub_1000786C0;
      break;
    case 24:
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v1;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_100077C8C;
      *(void *)(v18 + 24) = v17;
      uint64_t v2 = sub_1000786C0;
      break;
    case 25:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077C1C;
      break;
    case 26:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077BF8;
      break;
    case 27:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077BD4;
      break;
    case 28:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077BB0;
      break;
    case 29:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077B78;
      break;
    case 30:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077B40;
      break;
    case 31:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077B38;
      break;
    case 32:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077B30;
      break;
    case 33:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077B28;
      break;
    case 34:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077B04;
      break;
    case 35:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100077AE0;
      break;
    case 36:
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v1;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_100077C40;
      *(void *)(v20 + 24) = v19;
      uint64_t v2 = sub_100077C64;
      break;
    default:
      *(void *)(swift_allocObject() + 16) = v1;
      uint64_t v2 = sub_100078024;
      break;
  }
  unint64_t v21 = v2;
  id v22 = v1;
  return v21;
}

uint64_t sub_100077AA8()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100077AE0(void *a1, uint64_t a2)
{
  return sub_10005E8D0(a1, a2);
}

id sub_100077B04(void *a1, uint64_t a2)
{
  return sub_10005E0D8(a1, a2);
}

uint64_t sub_100077B28(void *a1, uint64_t a2)
{
  return sub_100076DD4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100077B30(void *a1, uint64_t a2)
{
  return sub_100076C8C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100077B38(void *a1, uint64_t a2)
{
  return sub_100076B44(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100077B40(void *a1, uint64_t a2)
{
  return sub_100076A08(a1, a2, *(void **)(v2 + 16), (uint64_t)&unk_1000C7678, (uint64_t)&unk_1000DE4F0);
}

uint64_t sub_100077B78(void *a1, uint64_t a2)
{
  return sub_100076A08(a1, a2, *(void **)(v2 + 16), (uint64_t)&unk_1000C7628, (uint64_t)&unk_1000DE4D8);
}

uint64_t sub_100077BB0(void *a1, uint64_t a2)
{
  return sub_1000768B8(a1, a2, *(void *)(v2 + 16), 3, 28);
}

uint64_t sub_100077BD4(void *a1, uint64_t a2)
{
  return sub_1000768B8(a1, a2, *(void *)(v2 + 16), 2, 27);
}

uint64_t sub_100077BF8(void *a1, uint64_t a2)
{
  return sub_1000768B8(a1, a2, *(void *)(v2 + 16), 1, 26);
}

uint64_t sub_100077C1C(void *a1, uint64_t a2)
{
  return sub_1000768B8(a1, a2, *(void *)(v2 + 16), 0, 25);
}

void sub_100077C40(uint64_t a1, uint64_t a2)
{
  sub_100076820(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runScrollCameraClipsInPlayerTestWithApplication_options_);
}

uint64_t sub_100077C64()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_100077C8C(uint64_t a1, uint64_t a2)
{
  sub_100076820(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runPresentNetworkSettingsTestWithApplication_options_);
}

void sub_100077CB0(uint64_t a1, uint64_t a2)
{
  sub_100076820(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runPresentHomeSettingsTestWithApplication_options_);
}

uint64_t sub_100077CD4(void *a1)
{
  return sub_100066FA0(a1);
}

uint64_t sub_100077CF8(void *a1)
{
  return sub_100066194(a1);
}

void sub_100077D1C(uint64_t a1, uint64_t a2)
{
  sub_100076820(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runToggleSceneTestWithApplication_options_);
}

void sub_100077D40(uint64_t a1, uint64_t a2)
{
  sub_100076820(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runToggleLightTestWithApplication_options_);
}

void sub_100077D64(uint64_t a1, uint64_t a2)
{
  sub_100076820(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runDeleteRoomTestWithApplication_options_);
}

void sub_100077D88(uint64_t a1, uint64_t a2)
{
  sub_100076820(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runAddRoomTestWithApplication_options_);
}

void sub_100077DAC(void *a1)
{
}

void sub_100077DD0(uint64_t a1, uint64_t a2)
{
  sub_100076820(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runTabSwitchToAutomationTestWithApplication_options_);
}

void sub_100077DF4(void *a1, uint64_t a2)
{
}

void sub_100077E18(void *a1, uint64_t a2)
{
}

void sub_100077E3C(void *a1)
{
}

void sub_100077E60(void *a1, uint64_t a2)
{
}

void sub_100077E84(void *a1)
{
}

void sub_100077EA8(void *a1)
{
}

void sub_100077ECC(void *a1, uint64_t a2)
{
}

void sub_100077EF0(void *a1)
{
}

void sub_100077F14(void *a1)
{
}

void sub_100077F38(void *a1, uint64_t a2)
{
}

void sub_100077F5C(void *a1)
{
}

void sub_100077F80(void *a1)
{
}

void sub_100077FA4(uint64_t a1, uint64_t a2)
{
  sub_100076820(a1, a2, *(void **)(v2 + 16), (SEL *)&selRef__runScrollAutomationTestWithApplication_options_);
}

uint64_t sub_100077FC8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100078000(void *a1, uint64_t a2)
{
}

void sub_100078024(void *a1)
{
}

uint64_t sub_10007804C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100078778;
  return sub_100058464(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100078114(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000781CC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000DE4E0 + dword_1000DE4E0);
  return v6(a1, v4);
}

uint64_t sub_1000781CC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000782C4()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100078314(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100078778;
  return sub_100058780(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1000783E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100078778;
  return sub_10005AE40(a1, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_1000784BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100078778;
  return sub_10005AE40(a1, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_100078598()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000785E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000781CC;
  return sub_10005C0FC(a1, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_10007877C(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000016;
  unint64_t v4 = 0x800000010009BA50;
  switch(a1)
  {
    case 1:
      break;
    case 2:
      unint64_t v4 = 0x800000010009BA70;
      unint64_t v3 = 0xD000000000000015;
      break;
    case 3:
      unint64_t v4 = 0xE90000000000006CLL;
      unint64_t v3 = 0x617373696D736964;
      break;
    default:
      unint64_t v4 = 0xEC00000079726F73;
      unint64_t v3 = 0x7365636341796E61;
      break;
  }
  unint64_t v5 = 0xD000000000000016;
  unint64_t v6 = 0x800000010009BA50;
  switch(a2)
  {
    case 1:
      goto LABEL_9;
    case 2:
      unint64_t v6 = 0x800000010009BA70;
      unint64_t v5 = 0xD000000000000015;
LABEL_9:
      if (v3 != v5) {
        goto LABEL_14;
      }
      goto LABEL_12;
    case 3:
      unint64_t v6 = 0xE90000000000006CLL;
      if (v3 == 0x617373696D736964) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
      unint64_t v6 = 0xEC00000079726F73;
      if (v3 != 0x7365636341796E61) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100078928(char a1, char a2)
{
  if (*(void *)&aHomeGrocategor[8 * a1] == *(void *)&aHomeGrocategor[8 * a2]
    && *(void *)&aUp[8 * a1] == *(void *)&aUp[8 * a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

Swift::Int sub_1000789B0()
{
  return Hasher._finalize()();
}

Swift::Int sub_100078AA4()
{
  return Hasher._finalize()();
}

uint64_t sub_100078B10()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100078BF0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100078C44()
{
  return Hasher._finalize()();
}

Swift::Int sub_100078CAC()
{
  return Hasher._finalize()();
}

uint64_t AdaptiveTabBarSection.rawValue.getter(char a1)
{
  return *(void *)&aHomeGrocategor[8 * a1];
}

uint64_t sub_100078DC0(char *a1, char *a2)
{
  return sub_100078928(*a1, *a2);
}

Swift::Int sub_100078DCC()
{
  return sub_100078AA4();
}

uint64_t sub_100078DD4()
{
  return sub_100078BF0();
}

Swift::Int sub_100078DDC()
{
  return sub_100078C44();
}

unint64_t sub_100078DE4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s7HomeApp21AdaptiveTabBarSectionO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100078E14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AdaptiveTabBarSection.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100078E40()
{
  AdaptiveTabBarSectionIdentifier._countAndFlagsBits = 0x6F72672E656D6F68;
  AdaptiveTabBarSectionIdentifier._object = (void *)0xEA00000000007075;
}

Swift::String *AdaptiveTabBarSectionIdentifier.unsafeMutableAddressor()
{
  if (qword_1000DD5A0 != -1) {
    swift_once();
  }
  return &AdaptiveTabBarSectionIdentifier;
}

uint64_t sub_100078EB4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6F72672E656D6F68 && a2 == 0xEA00000000007075;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    goto LABEL_6;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a1 && v6 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (a1 == 0x69726F6765746163 && a2 == 0xEA00000000007365
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736D6F6F72 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v9) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t _s7HomeApp21AdaptiveTabBarSectionO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000C4AF8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_1000790A8()
{
  unint64_t result = qword_1000DE570;
  if (!qword_1000DE570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE570);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AdaptiveTabBarSection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AdaptiveTabBarSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100079258);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdaptiveTabBarSection()
{
  return &type metadata for AdaptiveTabBarSection;
}

uint64_t sub_100079290()
{
  sub_1000792F4();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_1000DF990 = result;
  return result;
}

unint64_t sub_1000792F4()
{
  unint64_t result = qword_1000DD840;
  if (!qword_1000DD840)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000DD840);
  }
  return result;
}

void *HUSideBarItemManager.roomItems.getter()
{
  return sub_100079480((SEL *)&selRef_roomItems, &qword_1000DE580);
}

void *sub_100079350(uint64_t a1, unint64_t *a2)
{
  int v8 = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v4) {
    return v8;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_10000CA4C(i, (uint64_t)v7);
    sub_10000AE6C(0, a2);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v4) {
      return v8;
    }
  }
  swift_release();

  return 0;
}

void *HUSideBarItemManager.categoryItems.getter()
{
  return sub_100079480((SEL *)&selRef_categoryItems, &qword_1000DE578);
}

void *sub_100079480(SEL *a1, unint64_t *a2)
{
  id v4 = [v2 *a1];
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unsigned int v6 = sub_100079350(v5, a2);
  swift_bridgeObjectRelease();
  if (v6) {
    return v6;
  }
  else {
    return _swiftEmptyArrayStorage;
  }
}

unint64_t sub_10007950C()
{
  unint64_t result = qword_1000DE588;
  if (!qword_1000DE588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE588);
  }
  return result;
}

unint64_t sub_100079564()
{
  unint64_t result = qword_1000DE590;
  if (!qword_1000DE590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE590);
  }
  return result;
}

uint64_t sub_1000795B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000795D4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100079624()
{
  unint64_t result = qword_1000DE598;
  if (!qword_1000DE598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE598);
  }
  return result;
}

uint64_t sub_100079678()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10000EC18(v0, qword_1000DF998);
  sub_10000D89C(v0, (uint64_t)qword_1000DF998);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1000796DC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000DD5B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10000D89C(v2, (uint64_t)qword_1000DF998);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100079794(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10007982C, v3, v2);
}

uint64_t sub_10007982C()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100079898(uint64_t a1)
{
  unint64_t v2 = sub_100079624();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for ShowRoomIntent()
{
  return &type metadata for ShowRoomIntent;
}

unint64_t sub_1000798E8()
{
  unint64_t result = qword_1000DE5A8;
  if (!qword_1000DE5A8)
  {
    sub_100066484(&qword_1000DE5B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE5A8);
  }
  return result;
}

id sub_100079944(void *a1, char a2, uint64_t a3)
{
  return sub_10007A99C(a1, a2, a3, (SEL *)&selRef_collectionView);
}

uint64_t sub_100079964(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = __CocoaSet.startIndex.getter();
    uint64_t v5 = v4;
    __CocoaSet.endIndex.getter();
    char v6 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1000699D0(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_10007EFF4(v3, v5, v2 != 0, a1, &qword_1000DD928);
    uint64_t v7 = v11;
    sub_1000699D0(v3, v5, v2 != 0);
    return v7;
  }
  uint64_t result = sub_10007F268(a1);
  if ((v10 & 1) == 0)
  {
    uint64_t v5 = v9;
    if (*(_DWORD *)(a1 + 36) == v9)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100079A84(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t ObjectType = swift_getObjectType();
  if (a5)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    [a5 disableExternalUpdatesWithReason:v8];
  }
  id v9 = [objc_allocWithZone((Class)NAFuture) init];
  char v10 = self;
  if (![v10 isRecapAvailable])
  {
    uint64_t v51 = 0x6F69746172657469;
    unint64_t v52 = 0xEA0000000000736ELL;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a4 + 16) && (unint64_t v29 = sub_10007E63C((uint64_t)&aBlock), (v30 & 1) != 0))
    {
      sub_10000CA4C(*(void *)(a4 + 56) + 32 * v29, (uint64_t)&v53);
    }
    else
    {
      long long v53 = 0u;
      long long v54 = 0u;
    }
    sub_100067314((uint64_t)&aBlock);
    if (*((void *)&v54 + 1))
    {
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_21;
      }
      uint64_t v43 = v51;
      uint64_t v51 = 0x74736566666FLL;
      unint64_t v52 = 0xE600000000000000;
      AnyHashable.init<A>(_:)();
      if (*(void *)(a4 + 16) && (unint64_t v31 = sub_10007E63C((uint64_t)&aBlock), (v32 & 1) != 0))
      {
        sub_10000CA4C(*(void *)(a4 + 56) + 32 * v31, (uint64_t)&v53);
      }
      else
      {
        long long v53 = 0u;
        long long v54 = 0u;
      }
      sub_100067314((uint64_t)&aBlock);
      if (*((void *)&v54 + 1))
      {
        if (swift_dynamicCast())
        {
          double v33 = *(double *)&v51;
          id v34 = [objc_allocWithZone((Class)UIScrollTestParameters) init];
          NSString v35 = String._bridgeToObjectiveC()();
          [v34 setTestName:v35];

          [v34 setIterations:v43];
          [v34 setDelta:v33];
          uint64_t v36 = swift_allocObject();
          *(void *)(v36 + 16) = v9;
          os_log_type_t v49 = sub_1000678A8;
          uint64_t v50 = v36;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v46 = 1107296256;
          id v47 = sub_10007C43C;
          id v48 = &unk_1000C77E0;
          uint64_t v37 = _Block_copy(&aBlock);
          id v38 = v9;
          id v39 = v34;
          swift_release();
          [a3 _performScrollTestWithParameters:v39 completionBlock:v37];
          _Block_release(v37);

          if (a5) {
            goto LABEL_5;
          }
          return v9;
        }
LABEL_21:
        sub_100064C18();
        swift_allocError();
        uint64_t v41 = v40;
        sub_10000D858(&qword_1000DE600);
        uint64_t v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_1000956A0;
        *(void *)(v42 + 32) = 0x6F69746172657469;
        *(void *)(v42 + 40) = 0xEA0000000000736ELL;
        *(void *)(v42 + 48) = 0x74657366666FLL;
        *(void *)(v42 + 56) = 0xE600000000000000;
        *(void *)uint64_t v41 = a4;
        *(void *)(v41 + 8) = v42;
        *(unsigned char *)(v41 + 48) = 1;
        swift_bridgeObjectRetain();
        swift_willThrow();

        return v9;
      }
    }
    sub_100003950((uint64_t)&v53, &qword_1000DE200);
    goto LABEL_21;
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  id v12 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  id v13 = a3;
  id v14 = v9;
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  os_log_type_t v49 = sub_1000678A8;
  uint64_t v50 = v11;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v46 = 1107296256;
  id v47 = sub_10007A124;
  id v48 = &unk_1000C78D0;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_release();
  id v17 = [v12 initWithTestName:v15 scrollView:v13 completionHandler:v16];

  _Block_release(v16);
  [v10 runTestWithParameters:v17];

  if (a5)
  {
LABEL_5:
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a5;
    *(void *)(v18 + 24) = ObjectType;
    os_log_type_t v49 = sub_100080B10;
    uint64_t v50 = v18;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v46 = 1107296256;
    id v47 = sub_10007A1D0;
    id v48 = &unk_1000C7830;
    uint64_t v19 = _Block_copy(&aBlock);
    id v20 = a5;
    id v21 = v9;
    id v22 = v20;
    swift_release();
    id v23 = [v21 flatMap:v19];
    _Block_release(v19);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = ObjectType;
    os_log_type_t v49 = sub_100080B18;
    uint64_t v50 = v24;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v46 = 1107296256;
    id v47 = sub_10007CAC0;
    id v48 = &unk_1000C7880;
    id v25 = _Block_copy(&aBlock);
    id v26 = v22;
    swift_release();
    id v27 = [v23 recover:v25];

    _Block_release(v25);
    return v27;
  }
  return v9;
}

uint64_t sub_10007A124(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_10007A168(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_10007A1D0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_unknownObjectRelease();

  return v3;
}

void *sub_10007A23C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7);
      id v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_10007A364(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v38 = a1;
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  id v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    id v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v37 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    id v34 = v8;
    NSString v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v31 = v16;
    char v32 = (void (**)(char *))(v13 + 16);
    double v33 = (void (**)(char *, uint64_t))(v13 - 8);
    v29[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v29[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v17 = v39;
      uint64_t v18 = v13;
      v37(v11, v15, v39);
      uint64_t v19 = *v36;
      (*v36)(v11, 0, 1, v17);
      int v20 = (*v35)(v11, 1, v17);
      BOOL v21 = v20 != 1;
      if (v20 == 1) {
        break;
      }
      char v30 = v19;
      id v22 = v11;
      id v23 = v34;
      uint64_t v24 = v22;
      (*v32)(v34);
      char v25 = v38(v23);
      if (v4)
      {
        (*v33)(v23, v17);
        swift_bridgeObjectRelease();
        return v21;
      }
      char v26 = v25;
      (*v33)(v23, v17);
      if (v26) {
        break;
      }
      v15 += v31;
      --v12;
      uint64_t v4 = 0;
      uint64_t v13 = v18;
      char v11 = v24;
      if (!v12)
      {
        v30(v24, 1, 1, v39);
        goto LABEL_9;
      }
    }
  }
  else
  {
    id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v27(v11, 1, 1, v39);
LABEL_9:
    BOOL v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

void sub_10007A644(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000AE6C(0, &qword_1000DD928);
    sub_100064D08(&qword_1000DD930, &qword_1000DD928);
    Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v24;
    uint64_t v23 = v25;
    uint64_t v7 = v26;
    int64_t v8 = v27;
    unint64_t v9 = v28;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v23 = a3 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (__CocoaSet.Iterator.next()())
  {
    sub_10000AE6C(0, &qword_1000DD928);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v29;
    swift_unknownObjectRelease();
    int64_t v15 = v8;
    uint64_t v16 = v9;
    while (v14)
    {
      id v29 = v14;
      char v20 = a1(&v29);

      if (v4 || (v20 & 1) != 0) {
        break;
      }
      int64_t v8 = v15;
      unint64_t v9 = v16;
      if (v5 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v9)
      {
        uint64_t v16 = (v9 - 1) & v9;
        unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
        int64_t v15 = v8;
      }
      else
      {
        int64_t v15 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        if (v15 >= v22) {
          break;
        }
        unint64_t v18 = *(void *)(v23 + 8 * v15);
        if (!v18)
        {
          int64_t v19 = v8 + 2;
          if (v8 + 2 >= v22) {
            break;
          }
          unint64_t v18 = *(void *)(v23 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v8 + 3;
          if (v8 + 3 >= v22) {
            break;
          }
          unint64_t v18 = *(void *)(v23 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v8 + 4;
          if (v8 + 4 >= v22) {
            break;
          }
          unint64_t v18 = *(void *)(v23 + 8 * v19);
          if (v18)
          {
LABEL_22:
            int64_t v15 = v19;
          }
          else
          {
            int64_t v15 = v8 + 5;
            if (v8 + 5 >= v22) {
              break;
            }
            unint64_t v18 = *(void *)(v23 + 8 * v15);
            if (!v18)
            {
              int64_t v21 = v8 + 6;
              while (v22 != v21)
              {
                unint64_t v18 = *(void *)(v23 + 8 * v21++);
                if (v18)
                {
                  int64_t v15 = v21 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v16 = (v18 - 1) & v18;
        unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
      }
      id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    }
  }
  sub_10000EE28();
}

id sub_10007A97C(void *a1, char a2, uint64_t a3)
{
  return sub_10007A99C(a1, a2, a3, (SEL *)&selRef_tableView);
}

id sub_10007A99C(void *a1, char a2, uint64_t a3, SEL *a4)
{
  id v9 = [a1 *a4];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_10007609C(a2);
    uint64_t v13 = v12;
    id v14 = [a1 itemManager];
    id v15 = sub_100079A84(v11, v13, v10, a3, v14);
    if (!v5) {
      id v4 = v15;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100064C18();
    swift_allocError();
    strcpy(v16, "collectionView");
    v16[15] = -18;
    *((void *)v16 + 2) = a1;
    v16[48] = 0;
    id v17 = a1;
    swift_willThrow();
  }
  return v4;
}

void sub_10007AB18(void *a1)
{
  id v1 = [a1 hf_characteristicValueManager];
  id v2 = [v1 firstReadCompleteFuture];

  if (!v2) {
    __break(1u);
  }
}

id sub_10007AB74(uint64_t a1, void *a2)
{
  return sub_10007CAC8(a1, a2);
}

id sub_10007AB7C()
{
  id v0 = [self futureWithNoResult];
  id v1 = [v0 asGeneric];

  return v1;
}

id HOAppDelegate.baseViewController.getter()
{
  id result = [v0 window];
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v2 = result;
  id v3 = [result rootViewController];

  if (v3)
  {
    id result = (id)swift_dynamicCastObjCProtocolConditional();
    if (result) {
      return result;
    }
  }
  return 0;
}

id HOAppDelegate.appNavigator.getter()
{
  id result = [v0 window];
  if (result)
  {
    id v2 = result;
    id v3 = [result rootViewController];

    if (v3)
    {
      id v4 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v4 && [v4 dashboardNavigator])
      {
        self;
        id v5 = (id)swift_dynamicCastObjCClass();
        if (v5)
        {
LABEL_9:
          id v7 = v5;

          return v7;
        }
        swift_unknownObjectRelease();
      }
      self;
      uint64_t v6 = (void *)swift_dynamicCastObjCClass();
      if (v6)
      {
        id v5 = [v6 appNavigator];
        goto LABEL_9;
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t HOAppDelegate.findPreferredAccessory(itemManager:accessoryID:with:)(void *a1, uint64_t a2, uint64_t (*a3)(id, id), uint64_t a4)
{
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v6 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  __chkstk_darwin(v6 - 8);
  int64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50[0] = (unint64_t)_swiftEmptyArrayStorage;
  id v9 = [a1 allDisplayedItems];
  uint64_t v10 = sub_10000AE6C(0, &qword_1000DE5B8);
  sub_100064D08((unint64_t *)&unk_1000DE5C0, &qword_1000DE5B8);
  uint64_t v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v43 = v10;
  if ((v11 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v11 = v50[1];
    unint64_t v46 = v50[2];
    unint64_t v12 = v50[3];
    unint64_t v13 = v50[4];
    unint64_t v14 = v50[5];
  }
  else
  {
    unint64_t v13 = 0;
    uint64_t v15 = -1 << *(unsigned char *)(v11 + 32);
    uint64_t v16 = *(void *)(v11 + 56);
    unint64_t v46 = v11 + 56;
    unint64_t v17 = ~v15;
    uint64_t v18 = -v15;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v14 = v19 & v16;
    unint64_t v12 = v17;
  }
  unint64_t v39 = v12;
  uint64_t v44 = v11 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v45 = (v12 + 64) >> 6;
  uint64_t v42 = (char *)&type metadata for Swift.AnyObject + 8;
  while (v11 < 0)
  {
    uint64_t v24 = __CocoaSet.Iterator.next()();
    if (!v24) {
      goto LABEL_36;
    }
    uint64_t v48 = v24;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v20 = v49;
    swift_unknownObjectRelease();
    unint64_t v23 = v13;
    uint64_t v21 = v14;
    if (!v20) {
      goto LABEL_36;
    }
LABEL_31:
    sub_100080564(a2, (uint64_t)v8);
    uint64_t v28 = type metadata accessor for UUID();
    uint64_t v29 = *(void *)(v28 - 8);
    Class isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v28) != 1)
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v28);
    }
    id v31 = [v47 serviceLikeItemWithItem:v20 itemManager:a1 withID:isa v39 v40 v41 v42 v43 v44];

    if (v31)
    {
      id v32 = v31;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v50[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      id v20 = v32;
    }

    unint64_t v13 = v23;
    unint64_t v14 = v21;
  }
  if (v14)
  {
    uint64_t v21 = (v14 - 1) & v14;
    unint64_t v22 = __clz(__rbit64(v14)) | (v13 << 6);
    unint64_t v23 = v13;
    goto LABEL_30;
  }
  int64_t v25 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v25 >= v45) {
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v46 + 8 * v25);
  unint64_t v23 = v13 + 1;
  if (v26) {
    goto LABEL_29;
  }
  unint64_t v23 = v13 + 2;
  if ((uint64_t)(v13 + 2) >= v45) {
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v46 + 8 * v23);
  if (v26) {
    goto LABEL_29;
  }
  unint64_t v23 = v13 + 3;
  if ((uint64_t)(v13 + 3) >= v45) {
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v46 + 8 * v23);
  if (v26) {
    goto LABEL_29;
  }
  unint64_t v23 = v13 + 4;
  if ((uint64_t)(v13 + 4) >= v45) {
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v46 + 8 * v23);
  if (v26)
  {
LABEL_29:
    uint64_t v21 = (v26 - 1) & v26;
    unint64_t v22 = __clz(__rbit64(v26)) + (v23 << 6);
LABEL_30:
    id v20 = *(id *)(*(void *)(v11 + 48) + 8 * v22);
    if (!v20) {
      goto LABEL_36;
    }
    goto LABEL_31;
  }
  unint64_t v27 = v13 + 5;
  while (v45 != v27)
  {
    unint64_t v26 = *(void *)(v46 + 8 * v27++);
    if (v26)
    {
      unint64_t v23 = v27 - 1;
      goto LABEL_29;
    }
  }
LABEL_36:
  sub_10000EE28();
  uint64_t result = sub_1000804C4(v50, v40);
  unint64_t v14 = v50[0];
  if (!(v50[0] >> 62))
  {
    uint64_t v34 = *(void *)((v50[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v34) {
      goto LABEL_38;
    }
LABEL_42:
    swift_bridgeObjectRelease();
    return v34;
  }
LABEL_44:
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v34) {
    goto LABEL_42;
  }
LABEL_38:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_41;
  }
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v35 = *(id *)(v14 + 32);
LABEL_41:
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    id v37 = [v36 accessories:v39];

    sub_10000AE6C(0, &qword_1000DD928);
    sub_100064D08(&qword_1000DD930, &qword_1000DD928);
    uint64_t v38 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v34 = sub_100079964(v38);
    goto LABEL_42;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007B564(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_10007EFCC(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10007D43C(v6);
  return specialized ContiguousArray._endMutation()();
}

void HOAppDelegate.findAccessory(itemManager:accessoryID:testBlock:)(void *a1, uint64_t a2, uint64_t (*a3)(id), uint64_t a4)
{
  uint64_t v41 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v5 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a1;
  id v8 = [a1 allDisplayedItems];
  uint64_t v9 = sub_10000AE6C(0, &qword_1000DE5B8);
  sub_100064D08((unint64_t *)&unk_1000DE5C0, &qword_1000DE5B8);
  uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v34 = v9;
  if ((v10 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v10 = v45;
    uint64_t v37 = v46;
    uint64_t v11 = v47;
    uint64_t v12 = v48;
    unint64_t v13 = v49;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = -1 << *(unsigned char *)(v10 + 32);
    uint64_t v15 = *(void *)(v10 + 56);
    uint64_t v37 = v10 + 56;
    uint64_t v11 = ~v14;
    uint64_t v16 = -v14;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v13 = v17 & v15;
  }
  uint64_t v32 = v11;
  uint64_t v35 = v10 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v36 = (unint64_t)(v11 + 64) >> 6;
  double v33 = (char *)&type metadata for Swift.AnyObject + 8;
  while (v10 < 0)
  {
    uint64_t v21 = __CocoaSet.Iterator.next()();
    if (!v21) {
      goto LABEL_36;
    }
    uint64_t v43 = v21;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v22 = v44;
    swift_unknownObjectRelease();
    uint64_t v20 = v12;
    uint64_t v18 = v13;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_30:
    sub_100080564(v41, (uint64_t)v7);
    uint64_t v26 = type metadata accessor for UUID();
    uint64_t v27 = *(void *)(v26 - 8);
    Class isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26) != 1)
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
    }
    id v29 = [v42 serviceLikeItemWithItem:v22 itemManager:v40 withID:isa v32 v33 v34 v35];

    if (v29)
    {
      if (v38(v29))
      {
        id v30 = [v29 accessories];
        sub_10000AE6C(0, &qword_1000DD928);
        sub_100064D08(&qword_1000DD930, &qword_1000DD928);
        uint64_t v31 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100079964(v31);
        swift_bridgeObjectRelease();

LABEL_36:
        sub_10000EE28();
        return;
      }
    }
    uint64_t v12 = v20;
    unint64_t v13 = v18;
  }
  if (v13)
  {
    uint64_t v18 = (v13 - 1) & v13;
    unint64_t v19 = __clz(__rbit64(v13)) | (v12 << 6);
    uint64_t v20 = v12;
LABEL_29:
    id v22 = *(id *)(*(void *)(v10 + 48) + 8 * v19);
    if (!v22) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  int64_t v23 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v23 >= v36) {
      goto LABEL_36;
    }
    unint64_t v24 = *(void *)(v37 + 8 * v23);
    uint64_t v20 = v12 + 1;
    if (!v24)
    {
      uint64_t v20 = v12 + 2;
      if (v12 + 2 >= v36) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v20);
      if (!v24)
      {
        uint64_t v20 = v12 + 3;
        if (v12 + 3 >= v36) {
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v20);
        if (!v24)
        {
          uint64_t v20 = v12 + 4;
          if (v12 + 4 >= v36) {
            goto LABEL_36;
          }
          unint64_t v24 = *(void *)(v37 + 8 * v20);
          if (!v24)
          {
            uint64_t v25 = v12 + 5;
            while (v36 != v25)
            {
              unint64_t v24 = *(void *)(v37 + 8 * v25++);
              if (v24)
              {
                uint64_t v20 = v25 - 1;
                goto LABEL_28;
              }
            }
            goto LABEL_36;
          }
        }
      }
    }
LABEL_28:
    uint64_t v18 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

uint64_t HOAppDelegate.homeKitObjectID(from:userDefaultsEnabled:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_10007E63C((uint64_t)v11), (v5 & 1) != 0))
  {
    sub_10000CA4C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_100067314((uint64_t)v11);
  if (*((void *)&v13 + 1))
  {
    if (swift_dynamicCast())
    {
      UUID.init(uuidString:)();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_100003950((uint64_t)&v12, &qword_1000DE200);
  }
  id v7 = [self standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 stringForKey:v8];

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = type metadata accessor for UUID();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 1, 1, v10);
  }
}

id HOAppDelegate._runScrollTest(testName:scrollView:options:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100079A84(a1, a2, a3, a4, 0);
}

uint64_t HOAppDelegate._cameraProfileForTesting(in:with:)(void *a1, uint64_t a2)
{
  return sub_10007F36C(a1, a2);
}

uint64_t sub_10007C43C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  v2(v3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_10007C4CC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = a2;
  v6[3] = a1;
  void v6[4] = a3;
  id v7 = self;
  id v8 = a2;
  swift_unknownObjectRetain();
  id v9 = [v7 globalAsyncScheduler];
  void v13[4] = sub_100080BD0;
  void v13[5] = v6;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10007A168;
  v13[3] = &unk_1000C79C0;
  uint64_t v10 = _Block_copy(v13);
  id v11 = [self futureWithBlock:v10 scheduler:v9];
  swift_unknownObjectRelease();
  _Block_release(v10);
  swift_release();
  return v11;
}

uint64_t sub_10007C608(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8 = [self mainThreadScheduler];
  id v9 = (void *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a1;
  void v9[4] = a3;
  void v9[5] = a4;
  void v14[4] = sub_100080C4C;
  v14[5] = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  void v14[2] = sub_10007A124;
  v14[3] = &unk_1000C7A10;
  uint64_t v10 = _Block_copy(v14);
  id v11 = a2;
  id v12 = a1;
  swift_unknownObjectRetain();
  swift_release();
  [v8 performBlock:v10];
  _Block_release(v10);
  return swift_unknownObjectRelease();
}

id sub_10007C730(void *a1, void *a2, uint64_t a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  [a1 endDisableExternalUpdatesWithReason:v6];

  return [a2 finishWithResult:a3];
}

id sub_10007C7B8(uint64_t a1, void *a2, uint64_t a3)
{
  NSString v6 = (void *)swift_allocObject();
  uint64_t v6[2] = a2;
  v6[3] = a1;
  void v6[4] = a3;
  id v7 = self;
  id v8 = a2;
  swift_errorRetain();
  id v9 = [v7 globalAsyncScheduler];
  void v13[4] = sub_100080B38;
  void v13[5] = v6;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10007A168;
  v13[3] = &unk_1000C7920;
  uint64_t v10 = _Block_copy(v13);
  id v11 = [self futureWithBlock:v10 scheduler:v9];
  swift_unknownObjectRelease();
  _Block_release(v10);
  swift_release();
  return v11;
}

uint64_t sub_10007C8F4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8 = [self mainThreadScheduler];
  id v9 = (void *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a1;
  void v9[4] = a3;
  void v9[5] = a4;
  void v14[4] = sub_100080B5C;
  v14[5] = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  void v14[2] = sub_10007A124;
  v14[3] = &unk_1000C7970;
  uint64_t v10 = _Block_copy(v14);
  id v11 = a2;
  id v12 = a1;
  swift_errorRetain();
  swift_release();
  [v8 performBlock:v10];
  _Block_release(v10);
  return swift_unknownObjectRelease();
}

void sub_10007CA1C(void *a1, void *a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a1 endDisableExternalUpdatesWithReason:v4];

  id v5 = (id)_convertErrorToNSError(_:)();
  [a2 finishWithError:v5];
}

id sub_10007CAC0(uint64_t a1, void *a2)
{
  return sub_10007CAC8(a1, a2);
}

id sub_10007CAC8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  id v5 = (void *)v3();
  swift_release();

  return v5;
}

id sub_10007CB3C(void *a1)
{
  id v1 = [a1 topViewController];
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v2 = v1;
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (!v3)
  {

LABEL_5:
    NSString v6 = self;
    NSString v7 = String._bridgeToObjectiveC()();
    id v4 = [v6 hf_errorWithCode:30 description:v7];

    uint64_t v2 = (void *)_convertErrorToNSError(_:)();
    id v5 = [self futureWithError:v2];
    goto LABEL_6;
  }
  id v4 = [self futureWithResult:v3];
  id v5 = [v4 asGeneric];
LABEL_6:
  id v8 = v5;

  return v8;
}

uint64_t sub_10007CC74(id *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [*a1 uniqueIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  char v7 = static UUID.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

uint64_t sub_10007CD80(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  id v4 = [*a1 accessory];
  if (!v4) {
    goto LABEL_9;
  }
  id v5 = v4;
  id v6 = [v3 accessory];
  if (!v6)
  {

LABEL_9:
    sub_100064C18();
    swift_allocError();
    uint64_t v20 = v19;
    uint64_t v21 = sub_10000AE6C(0, (unint64_t *)&unk_1000DE5D0);
    *(void *)uint64_t v20 = v2;
    *(void *)(v20 + 24) = v21;
    *(void *)(v20 + 32) = 0x726F737365636361;
    *(void *)(v20 + 40) = 0xE900000000000079;
    *(unsigned char *)(v20 + 48) = 3;
    id v22 = v2;
    swift_willThrow();
    return 0;
  }
  char v7 = v6;
  id v8 = [v5 name];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  id v12 = [v7 name];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  if (v13 != v9 || v15 != v11)
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v17 & 1;
  }
  swift_bridgeObjectRelease_n();

  return 0;
}

unint64_t sub_10007CF30()
{
  sub_1000813B0(v0, (uint64_t)&v22);
  uint64_t v1 = v22;
  switch(v27)
  {
    case 1:
      *(void *)&v21[0] = 0;
      *((void *)&v21[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(59);
      v8._countAndFlagsBits = 0xD000000000000025;
      v8._object = (void *)0x800000010009D430;
      String.append(_:)(v8);
      v9._countAndFlagsBits = Array.description.getter();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10._object = (void *)0x800000010009D460;
      v10._countAndFlagsBits = 0xD000000000000012;
      String.append(_:)(v10);
      v11._countAndFlagsBits = Dictionary.description.getter();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2:
      id v12 = (void *)*((void *)&v22 + 1);
      _StringGuts.grow(_:)(32);
      swift_bridgeObjectRelease();
      *(void *)&v21[0] = 0xD00000000000001ELL;
      *((void *)&v21[0] + 1) = 0x800000010009D3E0;
      v13._countAndFlagsBits = v1;
      v13._object = v12;
      String.append(_:)(v13);
      goto LABEL_5;
    case 3:
      uint64_t v15 = v25;
      uint64_t v14 = (void *)v26;
      sub_100066400(&v22, v21);
      _StringGuts.grow(_:)(41);
      v16._countAndFlagsBits = 0xD000000000000024;
      v16._object = (void *)0x800000010009D3B0;
      String.append(_:)(v16);
      _print_unlocked<A, B>(_:_:)();
      v17._countAndFlagsBits = 46;
      v17._object = (void *)0xE100000000000000;
      String.append(_:)(v17);
      v18._countAndFlagsBits = v15;
      v18._object = v14;
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      uint64_t v1 = 0;
      sub_10000C4CC((uint64_t)v21);
      return v1;
    case 4:
      return v1;
    case 5:
      if (!(v25 | v26 | (unint64_t)v22 | v24 | v23 | *((void *)&v22 + 1))) {
        return 0xD000000000000016;
      }
      unint64_t v19 = v25 | v26 | v24 | v23 | *((void *)&v22 + 1);
      if ((void)v22 == 1 && !v19) {
        return 0xD00000000000002FLL;
      }
      if ((void)v22 == 2 && v19 == 0) {
        return 0xD000000000000012;
      }
      return 0xD000000000000032;
    default:
      id v2 = (void *)*((void *)&v22 + 1);
      uint64_t v3 = (void *)v23;
      _StringGuts.grow(_:)(46);
      swift_bridgeObjectRelease();
      *(void *)&v21[0] = 0xD000000000000015;
      *((void *)&v21[0] + 1) = 0x800000010009D480;
      v4._countAndFlagsBits = v1;
      v4._object = v2;
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      v5._object = (void *)0x800000010009D4A0;
      v5._countAndFlagsBits = 0xD000000000000015;
      String.append(_:)(v5);
      id v6 = v3;
      sub_10000D858((uint64_t *)&unk_1000DE650);
      v7._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v7);

LABEL_5:
      swift_bridgeObjectRelease();
      return *(void *)&v21[0];
  }
}

void *sub_10007D304(unint64_t a1)
{
  return sub_10007D334(a1, (void (*)(void *, uint64_t, unint64_t))sub_10007E748);
}

void *sub_10007D31C(unint64_t a1)
{
  return sub_10007D334(a1, (void (*)(void *, uint64_t, unint64_t))sub_10007E968);
}

void *sub_10007D334(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      Swift::String v5 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10000D858((uint64_t *)&unk_1000DDDB0);
      Swift::String v5 = (void *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      id v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v5;
}

void sub_10007D43C(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_144;
    }
    if (v4) {
      sub_10007DCFC(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_153;
  }
  Swift::Int v7 = v5;
  uint64_t v121 = a1;
  if (v4 < 2)
  {
    Swift::String v10 = (char *)_swiftEmptyArrayStorage;
    uint64_t v134 = (uint64_t)_swiftEmptyArrayStorage;
    Swift::Int v130 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v35 = _swiftEmptyArrayStorage[2];
      goto LABEL_106;
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    sub_10000AE6C(0, (unint64_t *)&unk_1000DE5D0);
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    Swift::Int v130 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v134 = v9;
  }
  Swift::Int v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v122 = *a1 + 16;
  Swift::Int v123 = v7;
  uint64_t v120 = *a1 - 8;
  Swift::String v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v13 = v4;
  Swift::Int v124 = v4;
  uint64_t v131 = *a1;
  do
  {
    Swift::Int v14 = v11;
    Swift::Int v15 = v11 + 1;
    Swift::Int v125 = v11;
    if (v11 + 1 < v13)
    {
      Swift::String v16 = *(void **)(v12 + 8 * v15);
      Swift::Int v132 = *(void **)(v12 + 8 * v11);
      Swift::String v17 = v132;
      v133[0] = v16;
      id v18 = v16;
      id v19 = v17;
      int v20 = sub_10007CD80(v133, &v132);
      if (v2)
      {
        swift_bridgeObjectRelease();

LABEL_121:
        goto LABEL_122;
      }
      int v21 = v20;

      Swift::Int v15 = v14 + 2;
      if (v14 + 2 < v13)
      {
        long long v22 = (void **)(v122 + 8 * v14);
        while (1)
        {
          unint64_t v23 = *v22;
          Swift::Int v132 = *(v22 - 1);
          uint64_t v24 = v132;
          v133[0] = v23;
          id v25 = v23;
          id v26 = v24;
          LODWORD(v24) = sub_10007CD80(v133, &v132);

          if ((v21 ^ v24)) {
            break;
          }
          ++v15;
          ++v22;
          if (v13 == v15)
          {
            Swift::Int v15 = v13;
            break;
          }
        }
        Swift::Int v14 = v125;
      }
      uint64_t v12 = v131;
      if (v21)
      {
        if (v15 < v14) {
          goto LABEL_148;
        }
        if (v14 < v15)
        {
          char v27 = (uint64_t *)(v120 + 8 * v15);
          Swift::Int v28 = v15;
          Swift::Int v29 = v14;
          id v30 = (uint64_t *)(v131 + 8 * v14);
          do
          {
            if (v29 != --v28)
            {
              if (!v131) {
                goto LABEL_150;
              }
              uint64_t v31 = *v30;
              *id v30 = *v27;
              uint64_t *v27 = v31;
            }
            ++v29;
            --v27;
            ++v30;
          }
          while (v29 < v28);
        }
      }
    }
    if (v15 >= v13) {
      goto LABEL_38;
    }
    if (__OFSUB__(v15, v14)) {
      goto LABEL_145;
    }
    if (v15 - v14 >= v123)
    {
LABEL_38:
      if (v15 < v14) {
        goto LABEL_143;
      }
      goto LABEL_39;
    }
    if (__OFADD__(v14, v123)) {
      goto LABEL_146;
    }
    if (v14 + v123 >= v13) {
      Swift::Int v32 = v13;
    }
    else {
      Swift::Int v32 = v14 + v123;
    }
    if (v32 < v14)
    {
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return;
    }
    if (v15 == v32) {
      goto LABEL_38;
    }
    uint64_t v116 = v2;
    uint64_t v117 = v10;
    uint64_t v83 = v120 + 8 * v15;
    Swift::Int v118 = v32;
    do
    {
      Class v84 = *(void **)(v12 + 8 * v15);
      Swift::Int v85 = v14;
      uint64_t v119 = v83;
      Swift::Int v129 = v15;
      while (1)
      {
        uint64_t v86 = *(void **)v83;
        id v87 = v84;
        id v19 = v86;
        id v88 = [v87 accessory];
        if (!v88) {
          goto LABEL_120;
        }
        uint64_t v89 = v88;
        id v90 = [v19 accessory];
        if (!v90)
        {

LABEL_120:
          sub_100064C18();
          swift_allocError();
          uint64_t v113 = v112;
          uint64_t v114 = sub_10000AE6C(0, (unint64_t *)&unk_1000DE5D0);
          *(void *)uint64_t v113 = v87;
          *(void *)(v113 + 24) = v114;
          *(void *)(v113 + 32) = 0x726F737365636361;
          *(void *)(v113 + 40) = 0xE900000000000079;
          *(unsigned char *)(v113 + 48) = 3;
          id v115 = v87;
          swift_willThrow();
          swift_bridgeObjectRelease();

          goto LABEL_121;
        }
        unint64_t v91 = v90;
        uint64_t v92 = v87;
        Swift::Int v126 = v85;
        uint64_t v127 = v19;
        id v93 = [v89 name];
        uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v96 = v95;

        id v97 = [v91 name];
        uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v100 = v99;

        if (v98 == v94 && v100 == v96)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v12 = v131;
          Swift::Int v103 = v129;
          goto LABEL_102;
        }
        char v102 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        Swift::Int v103 = v129;
        if ((v102 & 1) == 0) {
          break;
        }
        uint64_t v12 = v131;
        if (!v131) {
          goto LABEL_151;
        }
        uint64_t v104 = *(void **)v83;
        Class v84 = *(void **)(v83 + 8);
        *(void *)uint64_t v83 = v84;
        *(void *)(v83 + 8) = v104;
        v83 -= 8;
        Swift::Int v85 = v126 + 1;
        if (v129 == v126 + 1) {
          goto LABEL_102;
        }
      }
      uint64_t v12 = v131;
LABEL_102:
      Swift::Int v15 = v103 + 1;
      uint64_t v83 = v119 + 8;
      Swift::Int v14 = v125;
    }
    while (v15 != v118);
    Swift::Int v15 = v118;
    uint64_t v2 = v116;
    Swift::String v10 = v117;
    if (v118 < v125) {
      goto LABEL_143;
    }
LABEL_39:
    Swift::Int v128 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v10 = sub_10007E46C(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v34 = *((void *)v10 + 2);
    unint64_t v33 = *((void *)v10 + 3);
    unint64_t v35 = v34 + 1;
    uint64_t v12 = v131;
    if (v34 >= v33 >> 1)
    {
      uint64_t v105 = sub_10007E46C((char *)(v33 > 1), v34 + 1, 1, v10);
      uint64_t v12 = v131;
      Swift::String v10 = v105;
    }
    *((void *)v10 + 2) = v35;
    int64_t v36 = v10 + 32;
    uint64_t v37 = &v10[16 * v34 + 32];
    *(void *)uint64_t v37 = v125;
    *((void *)v37 + 1) = v128;
    if (v34)
    {
      while (2)
      {
        unint64_t v38 = v35 - 1;
        if (v35 >= 4)
        {
          uint64_t v43 = &v36[16 * v35];
          uint64_t v44 = *((void *)v43 - 8);
          uint64_t v45 = *((void *)v43 - 7);
          BOOL v49 = __OFSUB__(v45, v44);
          uint64_t v46 = v45 - v44;
          if (v49) {
            goto LABEL_128;
          }
          uint64_t v48 = *((void *)v43 - 6);
          uint64_t v47 = *((void *)v43 - 5);
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v41 = v47 - v48;
          char v42 = v49;
          if (v49) {
            goto LABEL_129;
          }
          unint64_t v50 = v35 - 2;
          uint64_t v51 = &v36[16 * v35 - 32];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          BOOL v49 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          if (v49) {
            goto LABEL_131;
          }
          BOOL v49 = __OFADD__(v41, v54);
          uint64_t v55 = v41 + v54;
          if (v49) {
            goto LABEL_134;
          }
          if (v55 >= v46)
          {
            uint64_t v73 = &v36[16 * v38];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v49 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v49) {
              goto LABEL_138;
            }
            BOOL v66 = v41 < v76;
          }
          else
          {
LABEL_57:
            if (v42) {
              goto LABEL_130;
            }
            unint64_t v50 = v35 - 2;
            uint64_t v56 = &v36[16 * v35 - 32];
            uint64_t v58 = *(void *)v56;
            uint64_t v57 = *((void *)v56 + 1);
            BOOL v59 = __OFSUB__(v57, v58);
            uint64_t v60 = v57 - v58;
            char v61 = v59;
            if (v59) {
              goto LABEL_133;
            }
            unint64_t v62 = &v36[16 * v38];
            uint64_t v64 = *(void *)v62;
            uint64_t v63 = *((void *)v62 + 1);
            BOOL v49 = __OFSUB__(v63, v64);
            uint64_t v65 = v63 - v64;
            if (v49) {
              goto LABEL_136;
            }
            if (__OFADD__(v60, v65)) {
              goto LABEL_137;
            }
            if (v60 + v65 < v41) {
              goto LABEL_69;
            }
            BOOL v66 = v41 < v65;
          }
          if (v66) {
            unint64_t v38 = v50;
          }
        }
        else
        {
          if (v35 == 3)
          {
            uint64_t v40 = *((void *)v10 + 4);
            uint64_t v39 = *((void *)v10 + 5);
            BOOL v49 = __OFSUB__(v39, v40);
            uint64_t v41 = v39 - v40;
            char v42 = v49;
            goto LABEL_57;
          }
          uint64_t v67 = *((void *)v10 + 4);
          uint64_t v68 = *((void *)v10 + 5);
          BOOL v49 = __OFSUB__(v68, v67);
          uint64_t v60 = v68 - v67;
          char v61 = v49;
LABEL_69:
          if (v61) {
            goto LABEL_132;
          }
          uint64_t v69 = &v36[16 * v38];
          uint64_t v71 = *(void *)v69;
          uint64_t v70 = *((void *)v69 + 1);
          BOOL v49 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          if (v49) {
            goto LABEL_135;
          }
          if (v72 < v60) {
            goto LABEL_86;
          }
        }
        unint64_t v77 = v38 - 1;
        if (v38 - 1 >= v35)
        {
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        if (!v12) {
          goto LABEL_149;
        }
        id v78 = &v36[16 * v77];
        uint64_t v79 = *(void *)v78;
        id v80 = &v36[16 * v38];
        uint64_t v81 = *((void *)v80 + 1);
        sub_10007DDEC((void **)(v12 + 8 * *(void *)v78), (void **)(v12 + 8 * *(void *)v80), v12 + 8 * v81, v130);
        if (v2) {
          goto LABEL_117;
        }
        if (v81 < v79) {
          goto LABEL_125;
        }
        if (v38 > *((void *)v10 + 2)) {
          goto LABEL_126;
        }
        *(void *)id v78 = v79;
        *(void *)&v36[16 * v77 + 8] = v81;
        unint64_t v82 = *((void *)v10 + 2);
        if (v38 >= v82) {
          goto LABEL_127;
        }
        unint64_t v35 = v82 - 1;
        memmove(&v36[16 * v38], v80 + 16, 16 * (v82 - 1 - v38));
        *((void *)v10 + 2) = v82 - 1;
        uint64_t v12 = v131;
        if (v82 <= 2) {
          goto LABEL_86;
        }
        continue;
      }
    }
    unint64_t v35 = 1;
LABEL_86:
    Swift::Int v13 = v124;
    Swift::Int v11 = v128;
  }
  while (v128 < v124);
LABEL_106:
  if (v35 >= 2)
  {
    uint64_t v106 = *v121;
    do
    {
      unint64_t v107 = v35 - 2;
      if (v35 < 2) {
        goto LABEL_139;
      }
      if (!v106) {
        goto LABEL_152;
      }
      uint64_t v108 = *(void *)&v10[16 * v107 + 32];
      uint64_t v109 = *(void *)&v10[16 * v35 + 24];
      sub_10007DDEC((void **)(v106 + 8 * v108), (void **)(v106 + 8 * *(void *)&v10[16 * v35 + 16]), v106 + 8 * v109, v130);
      if (v2) {
        break;
      }
      if (v109 < v108) {
        goto LABEL_140;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v10 = sub_10007E628((uint64_t)v10);
      }
      if (v107 >= *((void *)v10 + 2)) {
        goto LABEL_141;
      }
      uint64_t v110 = &v10[16 * v107 + 32];
      *(void *)uint64_t v110 = v108;
      *((void *)v110 + 1) = v109;
      unint64_t v111 = *((void *)v10 + 2);
      if (v35 > v111) {
        goto LABEL_142;
      }
      memmove(&v10[16 * v35 + 16], &v10[16 * v35 + 32], 16 * (v111 - v35));
      *((void *)v10 + 2) = v111 - 1;
      unint64_t v35 = v111 - 1;
    }
    while (v111 > 2);
  }
LABEL_117:
  swift_bridgeObjectRelease();
LABEL_122:
  *(void *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();
}

void sub_10007DCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = a1;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
LABEL_4:
    uint64_t v9 = *(void **)(v7 + 8 * v5);
    uint64_t v10 = v8;
    while (1)
    {
      id v19 = v9;
      id v18 = *(void **)v10;
      Swift::Int v11 = v18;
      id v12 = v9;
      id v13 = v11;
      char v14 = sub_10007CD80(&v19, &v18);

      if (v4) {
        break;
      }
      if (v14)
      {
        if (!v7)
        {
          __break(1u);
          return;
        }
        Swift::Int v15 = *(void **)v10;
        uint64_t v9 = *(void **)(v10 + 8);
        *(void *)uint64_t v10 = v9;
        *(void *)(v10 + 8) = v15;
        v10 -= 8;
        if (v5 != ++v6) {
          continue;
        }
      }
      ++v5;
      v8 += 8;
      uint64_t v6 = a1;
      if (v5 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

uint64_t sub_10007DDEC(void **__src, void **a2, unint64_t a3, void **__dst)
{
  unint64_t v35 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v41 = __src;
  uint64_t v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      int v21 = &__dst[v12];
      uint64_t v39 = v21;
      uint64_t v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        long long v22 = (id *)(a3 - 8);
        unint64_t v23 = v5;
        unint64_t v34 = v6;
        while (1)
        {
          uint64_t v24 = v21;
          id v25 = *--v21;
          id v38 = v25;
          id v26 = *--v23;
          uint64_t v37 = v26;
          id v27 = v38;
          id v28 = v26;
          char v29 = sub_10007CD80(&v38, &v37);
          if (v36) {
            break;
          }
          char v30 = v29;
          uint64_t v36 = 0;
          uint64_t v31 = v22 + 1;

          if (v30)
          {
            Swift::Int v32 = v35;
            if (v31 != v5 || v22 >= v5) {
              *long long v22 = *v23;
            }
            uint64_t v41 = v23;
            int v21 = v24;
          }
          else
          {
            uint64_t v39 = v21;
            Swift::Int v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24) {
              *long long v22 = *v21;
            }
            unint64_t v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            uint64_t v5 = v23;
            if (v21 > v32) {
              continue;
            }
          }
          goto LABEL_48;
        }
      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    id v13 = &__dst[v9];
    uint64_t v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        id v38 = *v5;
        char v14 = __dst;
        uint64_t v37 = *__dst;
        Swift::Int v15 = v37;
        id v16 = v38;
        id v17 = v15;
        char v18 = sub_10007CD80(&v38, &v37);
        if (v36) {
          break;
        }
        char v19 = v18;

        if (v19)
        {
          int v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5) {
            *uint64_t v6 = *v5;
          }
          __dst = v14;
        }
        else
        {
          if (v6 != v14) {
            *uint64_t v6 = *v14;
          }
          __dst = v14 + 1;
          uint64_t v40 = v14 + 1;
          int v20 = v5;
        }
        uint64_t v36 = 0;
        uint64_t v41 = ++v6;
        if (__dst < v13)
        {
          uint64_t v5 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_10007E56C((void **)&v41, (const void **)&v40, &v39);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10007E124(id *__src, id *a2, unint64_t a3, void **a4, uint64_t (*a5)(id, id))
{
  uint64_t v6 = v5;
  int64_t v7 = a2;
  int64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v44 = __src;
  uint64_t v43 = a4;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (a4 != a2 || &a2[v14] <= a4) {
        memmove(a4, a2, 8 * v14);
      }
      id v26 = (char *)&a4[v14];
      char v42 = v26;
      uint64_t v44 = v7;
      if (v8 >= v7 || v12 < 8) {
        goto LABEL_46;
      }
      id v27 = (id *)(a3 - 8);
      id v28 = v7;
      uint64_t v37 = v8;
      while (1)
      {
        uint64_t v40 = v7;
        unint64_t v29 = (unint64_t)v26;
        char v30 = v26 - 8;
        uint64_t v31 = *--v28;
        id v20 = *((id *)v26 - 1);
        id v21 = v31;
        char v32 = a5(v20, v21);
        if (v6) {
          goto LABEL_45;
        }
        char v33 = v32;
        unint64_t v34 = v27 + 1;

        if (v33)
        {
          unint64_t v35 = (unint64_t)v37;
          id v26 = (char *)v29;
          if (v34 != v40 || v27 >= v40) {
            id *v27 = *v28;
          }
          uint64_t v44 = v28;
        }
        else
        {
          char v42 = v30;
          unint64_t v35 = (unint64_t)v37;
          id v28 = v40;
          if ((unint64_t)v34 < v29 || (unint64_t)v27 >= v29 || v34 != (id *)v29) {
            id *v27 = *(id *)v30;
          }
          id v26 = v30;
        }
        uint64_t v6 = 0;
        if ((unint64_t)v28 > v35)
        {
          --v27;
          int64_t v7 = v28;
          if (v26 > (char *)a4) {
            continue;
          }
        }
        goto LABEL_46;
      }
    }
  }
  else if (v9 >= -7)
  {
    Swift::Int v15 = a4;
    if (a4 != __src || &__src[v11] <= a4) {
      memmove(a4, __src, 8 * v11);
    }
    id v16 = (char *)&a4[v11];
    char v42 = v16;
    if ((unint64_t)v7 >= a3 || v9 < 8) {
      goto LABEL_46;
    }
    while (1)
    {
      id v17 = v8;
      char v18 = v7;
      char v19 = *v15;
      id v20 = *v7;
      id v21 = v19;
      char v22 = a5(v20, v21);
      if (v5) {
        break;
      }
      char v23 = v22;

      if (v23)
      {
        uint64_t v24 = v18 + 1;
        id v25 = v17;
        if (v17 < v18 || v17 >= v24 || v17 != v18) {
          *id v17 = *v18;
        }
      }
      else
      {
        id v25 = v17;
        if (v17 != v15) {
          *id v17 = *v15;
        }
        uint64_t v43 = ++v15;
        uint64_t v24 = v18;
      }
      int64_t v8 = v25 + 1;
      uint64_t v44 = v8;
      if (v15 < (void **)v16)
      {
        int64_t v7 = v24;
        if ((unint64_t)v24 < a3) {
          continue;
        }
      }
      goto LABEL_46;
    }
LABEL_45:

LABEL_46:
    sub_10007E56C((void **)&v44, (const void **)&v43, &v42);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10007E46C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000D858(&qword_1000DE5F8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10007E56C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_10007E628(uint64_t a1)
{
  return sub_10007E46C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_10007E63C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10007E680(a1, v4);
}

unint64_t sub_10007E680(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100080C58(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_100067314((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10007E748(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100080CD4(&qword_1000DE628, &qword_1000DE620);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000D858(&qword_1000DE620);
          uint64_t v12 = sub_10007EDA8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000AE6C(0, &qword_1000DE210);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10007E968(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100080CD4((unint64_t *)&unk_1000DE640, &qword_1000DE638);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000D858(&qword_1000DE638);
          uint64_t v12 = sub_10007EE14(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000AE6C(0, &qword_1000DE630);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10007EB88(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100080CD4((unint64_t *)&unk_1000DE5E8, &qword_1000DE5E0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000D858(&qword_1000DE5E0);
          uint64_t v12 = sub_10007EDA8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000AE6C(0, (unint64_t *)&unk_1000DE5D0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t (*sub_10007EDA8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10007EEC4(v6, a2, a3);
  return sub_10007EE10;
}

uint64_t (*sub_10007EE14(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10007EF44(v6, a2, a3);
  return sub_10007EE10;
}

void sub_10007EE7C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_10007EEC4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_100081458;
  }
  __break(1u);
  return result;
}

void (*sub_10007EF44(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_10007EFC4;
  }
  __break(1u);
  return result;
}

void sub_10007EFC4(id *a1)
{
}

uint64_t sub_10007EFCC(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

void sub_10007EFE0(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_10007EFF4(uint64_t a1, int a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_10000AE6C(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_10000AE6C(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v17;
  swift_unknownObjectRelease();
  Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v7 = (v7 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_23;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v14 = static NSObject.== infix(_:_:)();
    }
    while ((v14 & 1) == 0);
  }

LABEL_17:
  Swift::Int v15 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v16 = v15;
}

uint64_t sub_10007F268(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10007F2F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_10007F36C(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080564(a2, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    id v15 = [a1 hf_allCameraProfiles];
    sub_10000AE6C(0, (unint64_t *)&unk_1000DE5D0);
    unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    __chkstk_darwin(v17);
    *(&v23 - 2) = (uint64_t)v11;
    a1 = sub_10007A23C(sub_1000813E8, (uint64_t)(&v23 - 4), v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (uint64_t)a1;
  }
  sub_100003950((uint64_t)v7, (uint64_t *)&unk_1000DD8F0);
  id v12 = [a1 hf_allCameraProfiles];
  sub_10000AE6C(0, (unint64_t *)&unk_1000DE5D0);
  uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 < 0 || (v13 & 0x4000000000000000) != 0)
  {
    unint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v14 = (uint64_t)sub_10007D334(v21, (void (*)(void *, uint64_t, unint64_t))sub_10007EB88);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v24 = v14;
  sub_10007B564(&v24);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)a1;
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v19 = v24;
  if ((v24 & 0x8000000000000000) == 0 && (v24 & 0x4000000000000000) == 0)
  {
    if (*(void *)(v24 + 16)) {
      goto LABEL_12;
    }
LABEL_18:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_release();
  if (!v22) {
    goto LABEL_18;
  }
LABEL_12:
  if ((v19 & 0xC000000000000001) != 0)
  {
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_15;
  }
  if (*(void *)(v19 + 16))
  {
    id v20 = *(id *)(v19 + 32);
LABEL_15:
    a1 = v20;
    swift_release();
    return (uint64_t)a1;
  }
  __break(1u);
  return result;
}

id _sSo13HOAppDelegateC7HomeAppE23firstReadCompleteFutureSo8NAFutureCySo6NSNullCGyF_0()
{
  id v0 = [self sharedDispatcher];
  id v1 = [v0 homeFuture];

  if (v1)
  {
    id v12 = sub_10007AB18;
    uint64_t v13 = 0;
    uint64_t v8 = _NSConcreteStackBlock;
    uint64_t v9 = 1107296256;
    uint64_t v10 = sub_10007AB74;
    char v11 = &unk_1000C7A38;
    uint64_t v2 = _Block_copy(&v8);
    id v3 = [v1 flatMap:v2];
    _Block_release(v2);
    id v12 = sub_10007AB7C;
    uint64_t v13 = 0;
    uint64_t v8 = _NSConcreteStackBlock;
    uint64_t v9 = 1107296256;
    uint64_t v10 = sub_10007A1D0;
    char v11 = &unk_1000C7A60;
    id v4 = _Block_copy(&v8);
    id v5 = [v3 flatMap:v4];

    _Block_release(v4);
    return v5;
  }
  else
  {
    id v7 = [self futureWithNoResult];
    return v7;
  }
}

void *_sSo13HOAppDelegateC7HomeAppE15serviceLikeItem4item0H7Manager6withIDSo09HFServicefG0_So6HFItemCXcSgAJ_So0mI0C10Foundation4UUIDVSgtF_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = &OBJC_PROTOCOL___HFServiceLikeItem;
  uint64_t v13 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (v13)
  {
    uint64_t v26 = a3;
    sub_10000AE6C(0, (unint64_t *)&unk_1000DE610);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v15 = a1;
    id v16 = [a2 childItemsForItem:v13 ofClass:ObjCClassFromMetadata];
    sub_10000AE6C(0, &qword_1000DE5B8);
    sub_100064D08((unint64_t *)&unk_1000DE5C0, &qword_1000DE5B8);
    uint64_t v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v17 & 0xC000000000000001) != 0) {
      uint64_t v18 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    swift_bridgeObjectRelease();
    if (v18 >= 1)
    {
      sub_100080564(v26, (uint64_t)v8);
      uint64_t v19 = v10;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_100003950((uint64_t)v8, (uint64_t *)&unk_1000DD8F0);
        return v13;
      }
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      id v20 = [v13 accessories];
      sub_10000AE6C(0, &qword_1000DD928);
      sub_100064D08(&qword_1000DD930, &qword_1000DD928);
      uint64_t v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      __chkstk_darwin(v22);
      *(&v25 - 2) = (uint64_t)v12;
      sub_10007A644(sub_100080CB4, (uint64_t)(&v25 - 4), v21);
      LOBYTE(v20) = v23;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v9);
      if (v20) {
        return v13;
      }
    }

    return 0;
  }
  return v13;
}

void sub_10007FC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(id, id))
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a1;
    uint64_t v8 = *a4;
    uint64_t v9 = *a4 + 8 * a3 - 8;
LABEL_4:
    uint64_t v10 = *(void **)(v8 + 8 * v6);
    uint64_t v18 = v9;
    while (1)
    {
      uint64_t v11 = *(void **)v9;
      id v12 = v10;
      id v13 = v11;
      char v14 = a5(v12, v13);

      if (v5) {
        break;
      }
      if (v14)
      {
        if (!v8)
        {
          __break(1u);
          return;
        }
        id v15 = *(void **)v9;
        uint64_t v10 = *(void **)(v9 + 8);
        *(void *)uint64_t v9 = v10;
        *(void *)(v9 + 8) = v15;
        v9 -= 8;
        if (v6 != ++v7) {
          continue;
        }
      }
      ++v6;
      uint64_t v9 = v18 + 8;
      uint64_t v7 = a1;
      if (v6 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

void sub_10007FD0C(uint64_t *a1, uint64_t (*a2)(id, id))
{
  Swift::Int v4 = a1[1];
  Swift::Int v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_144;
    }
    if (v4) {
      sub_10007FC14(0, v4, 1, a1, a2);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_153;
  }
  Swift::Int v111 = v5;
  unint64_t v107 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    uint64_t v118 = (uint64_t)_swiftEmptyArrayStorage;
    id v115 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v33 = _swiftEmptyArrayStorage[2];
LABEL_105:
      if (v33 >= 2)
      {
        uint64_t v96 = *v107;
        do
        {
          unint64_t v97 = v33 - 2;
          if (v33 < 2) {
            goto LABEL_139;
          }
          if (!v96) {
            goto LABEL_152;
          }
          uint64_t v98 = (uint64_t)v9;
          uint64_t v99 = *(void *)&v9[16 * v97 + 32];
          uint64_t v100 = *(void *)&v9[16 * v33 + 24];
          sub_10007E124((id *)(v96 + 8 * v99), (id *)(v96 + 8 * *(void *)&v9[16 * v33 + 16]), v96 + 8 * v100, v115, a2);
          if (v2) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_140;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v101 = (char *)v98;
          }
          else {
            uint64_t v101 = sub_10007E628(v98);
          }
          if (v97 >= *((void *)v101 + 2)) {
            goto LABEL_141;
          }
          char v102 = &v101[16 * v97 + 32];
          *(void *)char v102 = v99;
          *((void *)v102 + 1) = v100;
          unint64_t v103 = *((void *)v101 + 2);
          if (v33 > v103) {
            goto LABEL_142;
          }
          uint64_t v104 = v101;
          memmove(&v101[16 * v33 + 16], &v101[16 * v33 + 32], 16 * (v103 - v33));
          uint64_t v9 = v104;
          *((void *)v104 + 2) = v103 - 1;
          unint64_t v33 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_121:
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    sub_10000D858(&qword_1000DE608);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    id v115 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v118 = v8;
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v108 = *a1 + 16;
  uint64_t v106 = *a1 - 8;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v112 = v4;
  uint64_t v116 = *a1;
LABEL_13:
  Swift::Int v12 = v10++;
  if (v10 < v4)
  {
    id v13 = v9;
    char v14 = *(void **)(v11 + 8 * v12);
    id v15 = *(id *)(v11 + 8 * v10);
    id v16 = v14;
    int v17 = a2(v15, v16);
    if (v2)
    {
      swift_bridgeObjectRelease();

      goto LABEL_122;
    }
    int v18 = v17;

    Swift::Int v10 = v12 + 2;
    if (v12 + 2 < v4)
    {
      Swift::Int v109 = v12;
      uint64_t v19 = (id *)(v108 + 8 * v12);
      while (1)
      {
        id v20 = *(v19 - 1);
        id v21 = *v19;
        id v22 = v20;
        int v23 = a2(v21, v22);

        if ((v18 ^ v23)) {
          break;
        }
        ++v10;
        ++v19;
        Swift::Int v4 = v112;
        if (v112 == v10)
        {
          Swift::Int v10 = v112;
          goto LABEL_21;
        }
      }
      Swift::Int v4 = v112;
LABEL_21:
      Swift::Int v12 = v109;
    }
    uint64_t v9 = v13;
    uint64_t v11 = v116;
    if (v18)
    {
      if (v10 < v12) {
        goto LABEL_148;
      }
      if (v12 < v10)
      {
        uint64_t v24 = (uint64_t *)(v106 + 8 * v10);
        Swift::Int v25 = v10;
        Swift::Int v26 = v12;
        id v27 = (uint64_t *)(v116 + 8 * v12);
        do
        {
          if (v26 != --v25)
          {
            if (!v116) {
              goto LABEL_151;
            }
            uint64_t v28 = *v27;
            uint64_t *v27 = *v24;
            *uint64_t v24 = v28;
          }
          ++v26;
          --v24;
          ++v27;
        }
        while (v26 < v25);
      }
    }
  }
  if (v10 >= v4) {
    goto LABEL_40;
  }
  if (__OFSUB__(v10, v12)) {
    goto LABEL_145;
  }
  if (v10 - v12 >= v111)
  {
LABEL_40:
    if (v10 < v12) {
      goto LABEL_143;
    }
    goto LABEL_41;
  }
  if (__OFADD__(v12, v111)) {
    goto LABEL_146;
  }
  if (v12 + v111 >= v4) {
    Swift::Int v29 = v4;
  }
  else {
    Swift::Int v29 = v12 + v111;
  }
  if (v29 >= v12)
  {
    if (v10 == v29) {
      goto LABEL_40;
    }
    uint64_t v105 = v9;
    uint64_t v84 = v106 + 8 * v10;
    Swift::Int v110 = v12;
    Swift::Int v114 = v29;
    while (1)
    {
      Swift::Int v85 = *(void **)(v11 + 8 * v10);
      Swift::Int v86 = v12;
      uint64_t v87 = v84;
      uint64_t v88 = v84;
      while (1)
      {
        uint64_t v89 = *(void **)v88;
        id v90 = v85;
        id v91 = v89;
        char v92 = a2(v90, v91);
        if (v2)
        {
          swift_bridgeObjectRelease();

LABEL_122:
          *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          specialized Array._endMutation()();
          swift_bridgeObjectRelease();
          return;
        }
        char v93 = v92;

        if ((v93 & 1) == 0) {
          break;
        }
        uint64_t v11 = v116;
        if (!v116) {
          goto LABEL_150;
        }
        uint64_t v94 = *(void **)v88;
        Swift::Int v85 = *(void **)(v88 + 8);
        *(void *)uint64_t v88 = v85;
        *(void *)(v88 + 8) = v94;
        v88 -= 8;
        if (v10 == ++v86) {
          goto LABEL_99;
        }
      }
      uint64_t v11 = v116;
LABEL_99:
      ++v10;
      uint64_t v84 = v87 + 8;
      Swift::Int v12 = v110;
      if (v10 == v114)
      {
        Swift::Int v10 = v114;
        uint64_t v9 = v105;
        if (v114 < v110) {
          goto LABEL_143;
        }
LABEL_41:
        char v30 = v9;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v9 = v30;
        }
        else {
          uint64_t v9 = sub_10007E46C(0, *((void *)v30 + 2) + 1, 1, v30);
        }
        unint64_t v32 = *((void *)v9 + 2);
        unint64_t v31 = *((void *)v9 + 3);
        unint64_t v33 = v32 + 1;
        uint64_t v11 = v116;
        if (v32 >= v31 >> 1)
        {
          uint64_t v95 = sub_10007E46C((char *)(v31 > 1), v32 + 1, 1, v9);
          uint64_t v11 = v116;
          uint64_t v9 = v95;
        }
        *((void *)v9 + 2) = v33;
        unint64_t v34 = v9 + 32;
        unint64_t v35 = &v9[16 * v32 + 32];
        *(void *)unint64_t v35 = v12;
        *((void *)v35 + 1) = v10;
        if (v32)
        {
          Swift::Int v113 = v10;
          while (1)
          {
            unint64_t v36 = v33 - 1;
            if (v33 >= 4)
            {
              uint64_t v41 = &v34[16 * v33];
              uint64_t v42 = *((void *)v41 - 8);
              uint64_t v43 = *((void *)v41 - 7);
              BOOL v47 = __OFSUB__(v43, v42);
              uint64_t v44 = v43 - v42;
              if (v47) {
                goto LABEL_128;
              }
              uint64_t v46 = *((void *)v41 - 6);
              uint64_t v45 = *((void *)v41 - 5);
              BOOL v47 = __OFSUB__(v45, v46);
              uint64_t v39 = v45 - v46;
              char v40 = v47;
              if (v47) {
                goto LABEL_129;
              }
              unint64_t v48 = v33 - 2;
              BOOL v49 = &v34[16 * v33 - 32];
              uint64_t v51 = *(void *)v49;
              uint64_t v50 = *((void *)v49 + 1);
              BOOL v47 = __OFSUB__(v50, v51);
              uint64_t v52 = v50 - v51;
              if (v47) {
                goto LABEL_131;
              }
              BOOL v47 = __OFADD__(v39, v52);
              uint64_t v53 = v39 + v52;
              if (v47) {
                goto LABEL_134;
              }
              if (v53 >= v44)
              {
                uint64_t v71 = &v34[16 * v36];
                uint64_t v73 = *(void *)v71;
                uint64_t v72 = *((void *)v71 + 1);
                BOOL v47 = __OFSUB__(v72, v73);
                uint64_t v74 = v72 - v73;
                if (v47) {
                  goto LABEL_138;
                }
                BOOL v64 = v39 < v74;
                goto LABEL_78;
              }
            }
            else
            {
              if (v33 != 3)
              {
                uint64_t v65 = *((void *)v9 + 4);
                uint64_t v66 = *((void *)v9 + 5);
                BOOL v47 = __OFSUB__(v66, v65);
                uint64_t v58 = v66 - v65;
                char v59 = v47;
                goto LABEL_72;
              }
              uint64_t v38 = *((void *)v9 + 4);
              uint64_t v37 = *((void *)v9 + 5);
              BOOL v47 = __OFSUB__(v37, v38);
              uint64_t v39 = v37 - v38;
              char v40 = v47;
            }
            if (v40) {
              goto LABEL_130;
            }
            unint64_t v48 = v33 - 2;
            uint64_t v54 = &v34[16 * v33 - 32];
            uint64_t v56 = *(void *)v54;
            uint64_t v55 = *((void *)v54 + 1);
            BOOL v57 = __OFSUB__(v55, v56);
            uint64_t v58 = v55 - v56;
            char v59 = v57;
            if (v57) {
              goto LABEL_133;
            }
            uint64_t v60 = &v34[16 * v36];
            uint64_t v62 = *(void *)v60;
            uint64_t v61 = *((void *)v60 + 1);
            BOOL v47 = __OFSUB__(v61, v62);
            uint64_t v63 = v61 - v62;
            if (v47) {
              goto LABEL_136;
            }
            if (__OFADD__(v58, v63)) {
              goto LABEL_137;
            }
            if (v58 + v63 >= v39)
            {
              BOOL v64 = v39 < v63;
LABEL_78:
              if (v64) {
                unint64_t v36 = v48;
              }
              goto LABEL_80;
            }
LABEL_72:
            if (v59) {
              goto LABEL_132;
            }
            uint64_t v67 = &v34[16 * v36];
            uint64_t v69 = *(void *)v67;
            uint64_t v68 = *((void *)v67 + 1);
            BOOL v47 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            if (v47) {
              goto LABEL_135;
            }
            if (v70 < v58) {
              goto LABEL_89;
            }
LABEL_80:
            unint64_t v75 = v36 - 1;
            if (v36 - 1 >= v33)
            {
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              goto LABEL_147;
            }
            if (!v11) {
              goto LABEL_149;
            }
            uint64_t v76 = v9;
            unint64_t v77 = &v34[16 * v75];
            uint64_t v78 = *(void *)v77;
            uint64_t v79 = v34;
            unint64_t v80 = v36;
            uint64_t v81 = &v34[16 * v36];
            uint64_t v82 = *((void *)v81 + 1);
            sub_10007E124((id *)(v11 + 8 * *(void *)v77), (id *)(v11 + 8 * *(void *)v81), v11 + 8 * v82, v115, a2);
            if (v2) {
              goto LABEL_121;
            }
            if (v82 < v78) {
              goto LABEL_125;
            }
            if (v80 > *((void *)v76 + 2)) {
              goto LABEL_126;
            }
            *(void *)unint64_t v77 = v78;
            *(void *)&v79[16 * v75 + 8] = v82;
            unint64_t v83 = *((void *)v76 + 2);
            if (v80 >= v83) {
              goto LABEL_127;
            }
            unint64_t v33 = v83 - 1;
            memmove(v81, v81 + 16, 16 * (v83 - 1 - v80));
            unint64_t v34 = v79;
            uint64_t v9 = v76;
            *((void *)v76 + 2) = v83 - 1;
            uint64_t v11 = v116;
            Swift::Int v10 = v113;
            if (v83 <= 2) {
              goto LABEL_89;
            }
          }
        }
        unint64_t v33 = 1;
LABEL_89:
        Swift::Int v4 = v112;
        if (v10 >= v112) {
          goto LABEL_105;
        }
        goto LABEL_13;
      }
    }
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000804C4(unint64_t *a1, uint64_t (*a2)(id, id))
{
  unint64_t v4 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v4;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v4 & 0x8000000000000000) != 0
    || (v4 & 0x4000000000000000) != 0)
  {
    unint64_t v4 = sub_10007F2F0(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8[0] = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  v8[1] = v6;
  sub_10007FD0C(v8, a2);
  return specialized Array._endMutation()();
}

uint64_t sub_100080564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000805CC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v39 = a4;
  uint64_t v42 = a2;
  id v43 = a3;
  uint64_t v5 = sub_10000D858((uint64_t *)&unk_1000DD8F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a1;
  id v8 = [a1 allDisplayedItems];
  uint64_t v9 = sub_10000AE6C(0, &qword_1000DE5B8);
  sub_100064D08((unint64_t *)&unk_1000DE5C0, &qword_1000DE5B8);
  uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v34 = v9;
  if ((v10 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v10 = v46;
    uint64_t v37 = v47;
    uint64_t v11 = v48;
    uint64_t v12 = v49;
    unint64_t v13 = v50;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = -1 << *(unsigned char *)(v10 + 32);
    uint64_t v15 = *(void *)(v10 + 56);
    uint64_t v37 = v10 + 56;
    uint64_t v11 = ~v14;
    uint64_t v16 = -v14;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v13 = v17 & v15;
  }
  uint64_t v32 = v11;
  uint64_t v35 = v10 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v36 = (unint64_t)(v11 + 64) >> 6;
  uint64_t v38 = v39 + 16;
  unint64_t v33 = (char *)&type metadata for Swift.AnyObject + 8;
  while (v10 < 0)
  {
    uint64_t v21 = __CocoaSet.Iterator.next()();
    if (!v21) {
      goto LABEL_36;
    }
    uint64_t v44 = v21;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v22 = v45;
    swift_unknownObjectRelease();
    uint64_t v20 = v12;
    uint64_t v18 = v13;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_30:
    uint64_t v40 = v12;
    sub_100080564(v42, (uint64_t)v7);
    uint64_t v26 = type metadata accessor for UUID();
    uint64_t v27 = *(void *)(v26 - 8);
    Class isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26) != 1)
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
    }
    id v29 = [v43 serviceLikeItemWithItem:v22 itemManager:v41 withID:isa v32 v33 v34 v35];

    if (v29)
    {
      if ((*(uint64_t (**)(uint64_t, id))(v39 + 16))(v39, v29))
      {
        id v30 = [v29 accessories];
        sub_10000AE6C(0, &qword_1000DD928);
        sub_100064D08(&qword_1000DD930, &qword_1000DD928);
        uint64_t v31 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100079964(v31);
        swift_bridgeObjectRelease();

LABEL_36:
        sub_10000EE28();
        return;
      }
    }
    uint64_t v12 = v20;
    unint64_t v13 = v18;
  }
  if (v13)
  {
    uint64_t v18 = (v13 - 1) & v13;
    unint64_t v19 = __clz(__rbit64(v13)) | (v12 << 6);
    uint64_t v20 = v12;
LABEL_29:
    id v22 = *(id *)(*(void *)(v10 + 48) + 8 * v19);
    if (!v22) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  int64_t v23 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v23 >= v36) {
      goto LABEL_36;
    }
    unint64_t v24 = *(void *)(v37 + 8 * v23);
    uint64_t v20 = v12 + 1;
    if (!v24)
    {
      uint64_t v20 = v12 + 2;
      if (v12 + 2 >= v36) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v20);
      if (!v24)
      {
        uint64_t v20 = v12 + 3;
        if (v12 + 3 >= v36) {
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v20);
        if (!v24)
        {
          uint64_t v20 = v12 + 4;
          if (v12 + 4 >= v36) {
            goto LABEL_36;
          }
          unint64_t v24 = *(void *)(v37 + 8 * v20);
          if (!v24)
          {
            uint64_t v25 = v12 + 5;
            while (v36 != v25)
            {
              unint64_t v24 = *(void *)(v37 + 8 * v25++);
              if (v24)
              {
                uint64_t v20 = v25 - 1;
                goto LABEL_28;
              }
            }
            goto LABEL_36;
          }
        }
      }
    }
LABEL_28:
    uint64_t v18 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

uint64_t sub_100080A5C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_100080A88()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100080AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100080AD0()
{
  return swift_release();
}

uint64_t sub_100080AD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100080B10(uint64_t a1)
{
  return sub_10007C4CC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

id sub_100080B18(uint64_t a1)
{
  return sub_10007C7B8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100080B20()
{
  return sub_100080B80((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_100080B38(void *a1)
{
  return sub_10007C8F4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100080B44()
{
  return sub_100080BF4((void (*)(void))&_swift_errorRelease);
}

void sub_100080B5C()
{
  sub_10007CA1C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100080B68()
{
  return sub_100080B80((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100080B80(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));

  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_100080BD0(void *a1)
{
  return sub_10007C608(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100080BDC()
{
  return sub_100080BF4((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100080BF4(void (*a1)(void))
{
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 48, 7);
}

id sub_100080C4C()
{
  return sub_10007C730(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100080C58(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100080CB4(id *a1)
{
  return sub_10007CC74(a1) & 1;
}

uint64_t sub_100080CD4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100066484(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void _s20PerformanceTestErrorOwxx(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 >= 5) {
    unsigned int v2 = *(_DWORD *)a1 + 5;
  }
  switch(v2)
  {
    case 0u:
      swift_bridgeObjectRelease();
      id v3 = *(void **)(a1 + 16);

      return;
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 2u:
    case 4u:
      goto LABEL_9;
    case 3u:
      sub_10000C4CC(a1);
LABEL_9:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t _s20PerformanceTestErrorOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 5) {
    unsigned int v4 = *(_DWORD *)a2 + 5;
  }
  switch(v4)
  {
    case 0u:
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      uint64_t v6 = *(void **)(a2 + 16);
      *(void *)(a1 + 16) = v6;
      *(unsigned char *)(a1 + 48) = 0;
      swift_bridgeObjectRetain();
      id v7 = v6;
      return a1;
    case 1u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      *(unsigned char *)(a1 + 48) = 1;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 2u:
      uint64_t v10 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v10;
      char v11 = 2;
      goto LABEL_10;
    case 3u:
      uint64_t v12 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v12;
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1, a2);
      uint64_t v13 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v13;
      char v11 = 3;
      goto LABEL_10;
    case 4u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      char v11 = 4;
LABEL_10:
      *(unsigned char *)(a1 + 48) = v11;
LABEL_11:
      swift_bridgeObjectRetain();
      break;
    default:
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      break;
  }
  return a1;
}

uint64_t _s20PerformanceTestErrorOwca(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease();

        break;
      case 1u:
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 2u:
      case 4u:
        goto LABEL_8;
      case 3u:
        sub_10000C4CC(a1);
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 48);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        uint64_t v6 = (void *)*((void *)a2 + 2);
        *(void *)(a1 + 16) = v6;
        *(unsigned char *)(a1 + 48) = 0;
        swift_bridgeObjectRetain();
        id v7 = v6;
        return a1;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(unsigned char *)(a1 + 48) = 1;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v11 = 2;
        goto LABEL_18;
      case 3u:
        uint64_t v12 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v12;
        (**(void (***)(uint64_t, long long *))(v12 - 8))(a1, a2);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        char v11 = 3;
        goto LABEL_18;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v11 = 4;
LABEL_18:
        *(unsigned char *)(a1 + 48) = v11;
LABEL_19:
        swift_bridgeObjectRetain();
        break;
      default:
        long long v8 = *a2;
        long long v9 = a2[1];
        long long v10 = a2[2];
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(_OWORD *)(a1 + 16) = v9;
        *(_OWORD *)(a1 + 32) = v10;
        *(_OWORD *)a1 = v8;
        break;
    }
  }
  return a1;
}

__n128 _s20PerformanceTestErrorOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s20PerformanceTestErrorOwta(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease();

        break;
      case 1u:
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 2u:
      case 4u:
        goto LABEL_8;
      case 3u:
        sub_10000C4CC(a1);
LABEL_8:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 48) = 0;
        return a1;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v7 = 1;
        goto LABEL_18;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v7 = 2;
        goto LABEL_18;
      case 3u:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v7 = 3;
        goto LABEL_18;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v7 = 4;
        goto LABEL_18;
      default:
        long long v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        char v7 = *(unsigned char *)(a2 + 48);
LABEL_18:
        *(unsigned char *)(a1 + 48) = v7;
        break;
    }
  }
  return a1;
}

uint64_t _s20PerformanceTestErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 6) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t _s20PerformanceTestErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10008135C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 5) {
    return (*(_DWORD *)a1 + 5);
  }
  return result;
}

uint64_t sub_100081378(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *_s20PerformanceTestErrorOMa()
{
  return &_s20PerformanceTestErrorON;
}

uint64_t sub_1000813B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000813E8(id *a1)
{
  return sub_100080CB4(a1) & 1;
}

unint64_t sub_100081460()
{
  unint64_t result = qword_1000DE660;
  if (!qword_1000DE660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE660);
  }
  return result;
}

unint64_t sub_1000814B8()
{
  unint64_t result = qword_1000DE668;
  if (!qword_1000DE668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE668);
  }
  return result;
}

uint64_t sub_10008150C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100081528()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100081578()
{
  unint64_t result = qword_1000DE670;
  if (!qword_1000DE670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE670);
  }
  return result;
}

uint64_t sub_1000815CC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10000EC18(v0, qword_1000DF9B0);
  sub_10000D89C(v0, (uint64_t)qword_1000DF9B0);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100081630()
{
  uint64_t v0 = sub_10000D858(&qword_1000DE748);
  sub_10000EC18(v0, qword_1000DF9C8);
  uint64_t v1 = sub_10000D89C(v0, (uint64_t)qword_1000DF9C8);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  unsigned int v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1000816E8(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = type metadata accessor for URL();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_100081804, 0, 0);
}

uint64_t sub_100081804()
{
  uint64_t v45 = v0;
  if (qword_1000DD5C8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_10000D89C(v3, (uint64_t)qword_1000DF9E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_retain_n();
  unsigned int v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = v0[10];
  uint64_t v8 = v0[11];
  uint64_t v10 = v0[9];
  if (v7)
  {
    uint64_t v43 = v0[11];
    os_log_type_t type = v6;
    uint64_t v12 = v0[7];
    uint64_t v11 = v0[8];
    uint64_t v13 = v0[6];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    v0[2] = sub_10000C3F8(0x286D726F66726570, 0xE900000000000029, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2080;
    IntentParameter.wrappedValue.getter();
    sub_100082280();
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v42 = v10;
    unint64_t v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v0[3] = sub_10000C3F8(v15, v17, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v5, type, "OpenURLInHomeIntent %s - url is %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v43, v42);
  }
  else
  {
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v19 = v0[7];
  uint64_t v18 = v0[8];
  uint64_t v20 = v0[6];
  IntentParameter.wrappedValue.getter();
  uint64_t v21 = URL.scheme.getter();
  uint64_t v23 = v22;
  unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v24(v18, v20);
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v23)
  {
    if (v21 == v25 && v23 == v26) {
      goto LABEL_9;
    }
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_14;
    }
    if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v39)
    {
LABEL_9:
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
LABEL_15:
      uint64_t v31 = v0[8];
      uint64_t v32 = v0[6];
      id v33 = [self sharedInstance];
      IntentParameter.wrappedValue.getter();
      URL._bridgeToObjectiveC()(v34);
      uint64_t v27 = v35;
      v24(v31, v32);
      id v36 = [v33 openURL:v27];

      goto LABEL_16;
    }
    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v40) {
      goto LABEL_15;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    id v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "OpenURLInHomeIntent - URL does not appear to be a Home app URL", v29, 2u);
    swift_slowDealloc();
  }
LABEL_16:

  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_100081D08@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000DD5B8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10000D89C(v2, (uint64_t)qword_1000DF9B0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100081DB0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000DD5C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000D858(&qword_1000DE748);
  uint64_t v3 = sub_10000D89C(v2, (uint64_t)qword_1000DF9C8);

  return sub_1000822D8(v3, a1);
}

uint64_t sub_100081E2C(uint64_t a1)
{
  uint64_t v4 = *v1;
  unsigned int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unsigned int v5 = v2;
  v5[1] = sub_1000781CC;
  return sub_1000816E8(a1, v4);
}

uint64_t sub_100081ECC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100081F68();
  *a1 = result;
  return result;
}

uint64_t sub_100081EF4(uint64_t a1)
{
  unint64_t v2 = sub_100081578();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t type metadata accessor for OpenURLInHomeIntentFailSafe()
{
  return self;
}

ValueMetadata *type metadata accessor for OpenURLInHomeIntent()
{
  return &type metadata for OpenURLInHomeIntent;
}

uint64_t sub_100081F68()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000D858(&qword_1000DE718);
  __chkstk_darwin(v4 - 8);
  os_log_type_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D858(&qword_1000DE720);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000D858(&qword_1000DE728);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LocalizedStringResource();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_10000D858(&qword_1000DE730);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  uint64_t v15 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  uint64_t v16 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  return IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
}

unint64_t sub_100082280()
{
  unint64_t result = qword_1000DE740;
  if (!qword_1000DE740)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE740);
  }
  return result;
}

uint64_t sub_1000822D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D858(&qword_1000DE748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100082340()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000EC18(v0, qword_1000DF9E0);
  sub_10000D89C(v0, (uint64_t)qword_1000DF9E0);
  return Logger.init(subsystem:category:)();
}

unint64_t sub_1000823C8()
{
  unint64_t result = qword_1000DE750;
  if (!qword_1000DE750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE750);
  }
  return result;
}

unint64_t sub_100082420()
{
  unint64_t result = qword_1000DE758;
  if (!qword_1000DE758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE758);
  }
  return result;
}

uint64_t sub_100082474()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100082490()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000824E0()
{
  unint64_t result = qword_1000DE760;
  if (!qword_1000DE760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE760);
  }
  return result;
}

uint64_t sub_100082534()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10000EC18(v0, qword_1000DF9F8);
  sub_10000D89C(v0, (uint64_t)qword_1000DF9F8);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1000825A0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000DD5D0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10000D89C(v2, (uint64_t)qword_1000DF9F8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100082648(uint64_t a1)
{
  unint64_t v2 = sub_1000824E0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for ShowCategoryIntent()
{
  return &type metadata for ShowCategoryIntent;
}

unint64_t sub_100082698()
{
  unint64_t result = qword_1000DE770;
  if (!qword_1000DE770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE770);
  }
  return result;
}

unint64_t sub_1000826F0()
{
  unint64_t result = qword_1000DE778;
  if (!qword_1000DE778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE778);
  }
  return result;
}

uint64_t sub_100082744()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100082760()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000827B0()
{
  unint64_t result = qword_1000DE780;
  if (!qword_1000DE780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DE780);
  }
  return result;
}

uint64_t sub_100082804()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10000EC18(v0, qword_1000DFA10);
  sub_10000D89C(v0, (uint64_t)qword_1000DFA10);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100082868@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000DD5D8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10000D89C(v2, (uint64_t)qword_1000DFA10);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100082910(uint64_t a1)
{
  unint64_t v2 = sub_1000827B0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for ShowHomeIntent()
{
  return &type metadata for ShowHomeIntent;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_100082980(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 topViewController];
  uint64_t v5 = [a1 onboardingViewControllers];
  os_log_type_t v6 = [a1 onboardingStates];
  uint64_t v7 = +[HOOnboardingRootNavigationController stringForOnboardingStates:v6];
  int v8 = 136315906;
  uint64_t v9 = "-[HOOnboardingRootNavigationController activeOnboardingState]";
  __int16 v10 = 2112;
  uint64_t v11 = v4;
  __int16 v12 = 2112;
  uint64_t v13 = v5;
  __int16 v14 = 2112;
  uint64_t v15 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "(%s) Unable to find state index for topViewController %@ among onboardingViewControllers %@ | onboardingStates = %@", (uint8_t *)&v8, 0x2Au);
}

void sub_100082A98(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[HODiscoverWebKitContentController parseURLForThemeType:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "(%s) error = %@", (uint8_t *)&v2, 0x16u);
}

void sub_100082B24()
{
  sub_100016364();
  sub_10001637C((void *)&_mh_execute_header, v0, v1, "Home not found for action set shortcut item: %@. Home identifier: %@");
}

void sub_100082B94()
{
  sub_100016364();
  sub_10001637C((void *)&_mh_execute_header, v0, v1, "Action set not found for action set shortcut item: %@. Action set identifier: %@");
}

void sub_100082C04()
{
  sub_100022DB8();
  sub_100022D9C((void *)&_mh_execute_header, v0, v1, "itemID is null for notification %@", v2, v3, v4, v5, v6);
}

void sub_100082C6C()
{
  sub_100022DB8();
  sub_100022D9C((void *)&_mh_execute_header, v0, v1, "itemID is null for notification %@ ", v2, v3, v4, v5, v6);
}

void sub_100082CD4()
{
  sub_100022DB8();
  sub_100022D9C((void *)&_mh_execute_header, v0, v1, "taskID not for found for itemID %@", v2, v3, v4, v5, v6);
}

void sub_100082D3C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to open URL: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100082DB4(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to open URL: %@", (uint8_t *)&v3, 0xCu);
}

void sub_100082E30()
{
  sub_10002F040();
  sub_10002F024((void *)&_mh_execute_header, v0, v1, "PPT failed - Switch to automation tab", v2, v3, v4, v5, v6);
}

void sub_100082E64()
{
  sub_10002F040();
  sub_10002F024((void *)&_mh_execute_header, v0, v1, "PPT failed - Scrolling Rooms tab", v2, v3, v4, v5, v6);
}

void sub_100082E98()
{
  sub_10002F040();
  sub_10002F024((void *)&_mh_execute_header, v0, v1, "PPT Failed - Add a room", v2, v3, v4, v5, v6);
}

void sub_100082ECC()
{
  sub_10002F040();
  sub_10002F024((void *)&_mh_execute_header, v0, v1, "PPT Failed - delete a room", v2, v3, v4, v5, v6);
}

void sub_100082F00()
{
  sub_10002F040();
  sub_10002F024((void *)&_mh_execute_header, v0, v1, "PPT Failed - present network configuration settings", v2, v3, v4, v5, v6);
}

void sub_100082F34()
{
  sub_10002F040();
  sub_10002F024((void *)&_mh_execute_header, v0, v1, "PPT - No room to delete after adding a room", v2, v3, v4, v5, v6);
}

void sub_100082F68(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "PPT - Cannot find created room %@", (uint8_t *)&v2, 0xCu);
}

void sub_100082FE0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "PPT - Error cleaning up after creating a room: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100083058()
{
  sub_100022DB8();
  sub_100022D9C((void *)&_mh_execute_header, v0, v1, "%@", v2, v3, v4, v5, v6);
}

void sub_1000830C0()
{
  v1[0] = 136315394;
  sub_100039348();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "(%s) error = %@", (uint8_t *)v1, 0x16u);
}

void sub_100083140()
{
  sub_100039334();
  uint64_t v5 = v0;
  __int16 v6 = v1;
  uint64_t v7 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "addAccessoryWithURL: %@ failed with payload string \"%@\" error %@", v4, 0x20u);
}

void sub_1000831C8()
{
  sub_100022DB8();
  sub_10001637C((void *)&_mh_execute_header, v0, v1, "home manager %@, error %@");
}

void sub_10008323C(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = +[HFHomeKitDispatcher sharedDispatcher];
  uint64_t v5 = [v4 homeManager];
  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = 136315650;
  int v8 = "-[HOAppNavigator showHH2OnboardingFlowForHome:]_block_invoke_2";
  __int16 v9 = 2112;
  __int16 v10 = v5;
  __int16 v11 = 2112;
  uint64_t v12 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s Failed to fetch owner devices for homeManager: %@ and home: %@", (uint8_t *)&v7, 0x20u);
}

void sub_100083318()
{
  v1[0] = 136315394;
  sub_100039348();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "(%s) error = %@", (uint8_t *)v1, 0x16u);
}

void sub_100083398(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unable to show feedback flow because clip identifier is missing.", v1, 2u);
}

void sub_1000833DC()
{
  sub_100022DB8();
  sub_10001637C((void *)&_mh_execute_header, v0, v1, "Unable to submit feedback for clip that contains a person <%@ %@>.");
}

void sub_100083454(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000834CC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10008353C()
{
  sub_100022DB8();
  sub_100022D9C((void *)&_mh_execute_header, v0, v1, "Invalid room settings delegate: %@", v2, v3, v4, v5, v6);
}

void sub_1000835A4()
{
  sub_100039334();
  sub_10001637C((void *)&_mh_execute_header, v0, v1, "%@ Failed to find content scroll view for view controller: %@");
}

void sub_100083614()
{
  sub_10003C2CC();
  sub_10001637C((void *)&_mh_execute_header, v0, v1, "Trigger name lookup failed for trigger with identifier %@ received error: %@");
}

void sub_100083680()
{
  sub_10003C2CC();
  sub_10001637C((void *)&_mh_execute_header, v0, v1, "User confirmation of trigger with identifier %@ received error: %@");
}

void sub_1000836EC(void *a1, uint64_t a2, NSObject *a3)
{
  v6[0] = 67109376;
  v6[1] = [a1 userHasValidHMSettings];
  __int16 v7 = 1024;
  unsigned int v8 = [a1 _areHMSettingsValidForHome:a2];
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "Got settings update - but not a settings validity transition - ignoring: userHasValidHMSettings = %{BOOL}d _areHMSettingsValidForHome] = %{BOOL}d ", (uint8_t *)v6, 0xEu);
}

void sub_1000837A4(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "+[HOManagedConfigurationUtilities popProfileDataFromHeadOfInstallationQueue]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "(%s) popped profile data is nil", (uint8_t *)&v1, 0xCu);
}

void sub_100083828(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100083894(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100083904(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100083970(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v2, 0xCu);
}

void sub_1000839E8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Enabling iCloud: error %@", (uint8_t *)&v2, 0xCu);
}

void sub_100083A60(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 description];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Error erasing Home data: %@", (uint8_t *)&v4, 0xCu);
}

void sub_100083AF8()
{
  sub_10004ECF4();
  sub_10001637C((void *)&_mh_execute_header, v0, v1, "CDPUIDeviceToDeviceEncryption encountered error: %@ primaryAccountAltDSID: %@");
}

void sub_100083B64()
{
  sub_10004ECF4();
  sub_10001637C((void *)&_mh_execute_header, v0, v1, "CDPUIDeviceToDeviceEncryption repair failed. Error: %@ primaryAccountAltDSID: %@");
}

void sub_100083BD0(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[HOProfileInstaller openSenderURL]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "(%s) senderURLStr is empty string", (uint8_t *)&v1, 0xCu);
}

void sub_100083C54()
{
  v1[0] = 136315394;
  sub_100039348();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "failure: (%s) could not open sensitive url %@", (uint8_t *)v1, 0x16u);
}

void sub_100083CD4()
{
  int v2 = 136315650;
  sub_10004FA68();
  sub_10004FA84((void *)&_mh_execute_header, v0, v1, "(%s) error occurred opening sensitive url %@: %@", v2);
}

void sub_100083D48()
{
  int v2 = 136315650;
  sub_10004FA68();
  sub_10004FA84((void *)&_mh_execute_header, v0, v1, "(%s) error occurred opening url %@ : %@", v2);
}

void sub_100083DBC(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) senderURLString];
  v4[0] = 136315394;
  sub_100039348();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "(%s) url %@ could not be opened", (uint8_t *)v4, 0x16u);
}

void sub_100083E60()
{
  int v2 = 136315394;
  uint64_t v3 = "-[HOHomePodProfileInstaller deviceProfileCompletedNotification:]";
  sub_100051D10();
  sub_100051D20((void *)&_mh_execute_header, v0, v1, "(%s) error occurred when created MCProfile object with NSData: %@", (uint8_t *)&v2);
}

void sub_100083EDC(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[HOHomePodProfileInstaller deviceProfileCompletedNotification:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "(%s) profile installation failed", (uint8_t *)&v1, 0xCu);
}

void sub_100083F60(uint64_t a1, uint64_t *a2, NSObject *a3)
{
  uint64_t v5 = [*(id *)(a1 + 40) hf_prettyDescription];
  uint64_t v6 = *a2;
  int v8 = 138412546;
  __int16 v9 = v5;
  __int16 v10 = 2112;
  uint64_t v11 = v6;
  sub_100051D20((void *)&_mh_execute_header, a3, v7, "Profile failed to install on HomePod: %@ with error: %@", (uint8_t *)&v8);
}

void sub_100084010(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = [*(id *)(a1 + 48) home];
  int v4 = [v3 hf_prettyDescription];
  int v5 = 138412290;
  uint64_t v6 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Profile failed to install on all HomePods in home: %@", (uint8_t *)&v5, 0xCu);
}

void sub_1000840C4(id *a1, NSObject *a2)
{
  id v4 = [*a1 count];
  int v5 = [*a1 hf_prettyDescription];
  int v7 = 134218242;
  id v8 = v4;
  sub_100051D10();
  sub_100051D20((void *)&_mh_execute_header, a2, v6, "Profile failed to install on %lu HomePods: %@", (uint8_t *)&v7);
}

void sub_100084174()
{
  int v2 = 136315394;
  uint64_t v3 = "-[HOHomePodProfileInstaller _presentManagedConfigurationProfileInstallation]_block_invoke";
  sub_100051D10();
  sub_100051D20((void *)&_mh_execute_header, v0, v1, "(%s) error occurred: %@", (uint8_t *)&v2);
}

uint64_t static AppIntent.description.getter()
{
  return static AppIntent.description.getter();
}

uint64_t static AppIntent.isDiscoverable.getter()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t static AppIntent.parameterSummary.getter()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t static AppIntent.authenticationPolicy.getter()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t type metadata accessor for IntentDialog()
{
  return type metadata accessor for IntentDialog();
}

uint64_t static IntentResult.result<>()()
{
  return static IntentResult.result<>()();
}

uint64_t IntentParameter.wrappedValue.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t IntentDescription.init(stringLiteral:)()
{
  return IntentDescription.init(stringLiteral:)();
}

uint64_t type metadata accessor for IntentDescription()
{
  return type metadata accessor for IntentDescription();
}

uint64_t type metadata accessor for InputConnectionBehavior()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t LocalizedStringResource.init(stringLiteral:)()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.scheme.getter()
{
  return URL.scheme.getter();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return Date.addingTimeInterval(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t FeatureFlagsKey.isEnabled.getter()
{
  return FeatureFlagsKey.isEnabled.getter();
}

uint64_t type metadata accessor for HomeAppFeatures()
{
  return type metadata accessor for HomeAppFeatures();
}

uint64_t static DataModel.modelLogger.getter()
{
  return static DataModel.modelLogger.getter();
}

uint64_t static DataModel.shared.getter()
{
  return static DataModel.shared.getter();
}

uint64_t type metadata accessor for DataModel()
{
  return type metadata accessor for DataModel();
}

uint64_t type metadata accessor for StateSnapshot.UpdateType()
{
  return type metadata accessor for StateSnapshot.UpdateType();
}

uint64_t StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)()
{
  return StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)();
}

uint64_t type metadata accessor for StateSnapshot.Coverage()
{
  return type metadata accessor for StateSnapshot.Coverage();
}

uint64_t type metadata accessor for StateSnapshot()
{
  return type metadata accessor for StateSnapshot();
}

uint64_t type metadata accessor for UIKitFeatures()
{
  return type metadata accessor for UIKitFeatures();
}

uint64_t type metadata accessor for ControlViewType()
{
  return type metadata accessor for ControlViewType();
}

uint64_t AccessoryControlViewController.test_firstControlFrame(for:)()
{
  return AccessoryControlViewController.test_firstControlFrame(for:)();
}

uint64_t AccessoryControlViewController.test_firstControlFrame(_:)()
{
  return AccessoryControlViewController.test_firstControlFrame(_:)();
}

uint64_t dispatch thunk of AccessoryControlViewController.dismissControlView(animated:completion:)()
{
  return dispatch thunk of AccessoryControlViewController.dismissControlView(animated:completion:)();
}

uint64_t static AccessoryControlViewController.test_performanceTestingEnded()()
{
  return static AccessoryControlViewController.test_performanceTestingEnded()();
}

uint64_t static AccessoryControlViewController.test_prepareForPerformanceTesting()()
{
  return static AccessoryControlViewController.test_prepareForPerformanceTesting()();
}

uint64_t Device.Control.sizeConstraint.getter()
{
  return Device.Control.sizeConstraint.getter();
}

uint64_t Device.Control.preferredViewType.getter()
{
  return Device.Control.preferredViewType.getter();
}

uint64_t Device.Control.ViewSizeConstraint.allows(size:)()
{
  return Device.Control.ViewSizeConstraint.allows(size:)();
}

uint64_t type metadata accessor for Device.Control.ViewSizeConstraint()
{
  return type metadata accessor for Device.Control.ViewSizeConstraint();
}

uint64_t type metadata accessor for Device.Control.Kind.Primitive()
{
  return type metadata accessor for Device.Control.Kind.Primitive();
}

uint64_t Device.Control.Kind.primitive.getter()
{
  return Device.Control.Kind.primitive.getter();
}

uint64_t type metadata accessor for Device.Control.Kind()
{
  return type metadata accessor for Device.Control.Kind();
}

uint64_t Device.Control.kind.getter()
{
  return Device.Control.kind.getter();
}

uint64_t type metadata accessor for Device.Control.ViewSize()
{
  return type metadata accessor for Device.Control.ViewSize();
}

uint64_t type metadata accessor for Device.Control()
{
  return type metadata accessor for Device.Control();
}

uint64_t static Device.ControlModule.controls(in:)()
{
  return static Device.ControlModule.controls(in:)();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t OSSignpostID.rawValue.getter()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t static OSSignpostID.exclusive.getter()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t OSSignposter.init(logger:)()
{
  return OSSignposter.init(logger:)();
}

uint64_t OSSignposter.logHandle.getter()
{
  return OSSignposter.logHandle.getter();
}

uint64_t type metadata accessor for OSSignposter()
{
  return type metadata accessor for OSSignposter();
}

uint64_t type metadata accessor for OSSignpostError()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t OSSignpostIntervalState.signpostID.getter()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OSSignpostIntervalState.init(id:isOpen:)()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t type metadata accessor for OSSignpostIntervalState()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t checkForErrorAndConsumeState(state:)()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Logger.init(_:)()
{
  return Logger.init(_:)();
}

uint64_t debug_assert(_:_:file:line:)()
{
  return debug_assert(_:_:file:line:)();
}

uint64_t static NAFutureHelper.futureOnMainActor<A>(priority:descriptor:with:)()
{
  return static NAFutureHelper.futureOnMainActor<A>(priority:descriptor:with:)();
}

uint64_t dispatch thunk of static DashboardContext.homeDashboard(for:)()
{
  return dispatch thunk of static DashboardContext.homeDashboard(for:)();
}

uint64_t dispatch thunk of static DashboardContext.roomDashboard(for:in:)()
{
  return dispatch thunk of static DashboardContext.roomDashboard(for:in:)();
}

uint64_t dispatch thunk of DashboardContext.allowsHomeNavigation.getter()
{
  return dispatch thunk of DashboardContext.allowsHomeNavigation.getter();
}

uint64_t dispatch thunk of static DashboardContext.categoryDashboard(for:in:room:)()
{
  return dispatch thunk of static DashboardContext.categoryDashboard(for:in:room:)();
}

uint64_t dispatch thunk of DashboardContext.overrideDashboardTitle.getter()
{
  return dispatch thunk of DashboardContext.overrideDashboardTitle.getter();
}

uint64_t dispatch thunk of DashboardContext.accessoryTypeGroup.getter()
{
  return dispatch thunk of DashboardContext.accessoryTypeGroup.getter();
}

uint64_t dispatch thunk of DashboardContext.shouldHideForGuests.getter()
{
  return dispatch thunk of DashboardContext.shouldHideForGuests.getter();
}

uint64_t dispatch thunk of DashboardContext.typeDescriptionForAnalytics.getter()
{
  return dispatch thunk of DashboardContext.typeDescriptionForAnalytics.getter();
}

uint64_t DashboardContext.home.getter()
{
  return DashboardContext.home.getter();
}

uint64_t DashboardContext.room.getter()
{
  return DashboardContext.room.getter();
}

uint64_t dispatch thunk of DashboardContext.accessoryRepresentableHasStandardTileRepresentation(_:)()
{
  return dispatch thunk of DashboardContext.accessoryRepresentableHasStandardTileRepresentation(_:)();
}

uint64_t type metadata accessor for DashboardContext()
{
  return type metadata accessor for DashboardContext();
}

uint64_t static AccessoryControlsHelper.controlModules(for:)()
{
  return static AccessoryControlsHelper.controlModules(for:)();
}

uint64_t type metadata accessor for AccessoryControlsHelper()
{
  return type metadata accessor for AccessoryControlsHelper();
}

uint64_t SidebarTabElementBuilder.shouldUseCustomTabBarAppearance.getter()
{
  return SidebarTabElementBuilder.shouldUseCustomTabBarAppearance.getter();
}

uint64_t SidebarTabElementBuilder.homeAppTabIdentifier.getter()
{
  return SidebarTabElementBuilder.homeAppTabIdentifier.getter();
}

uint64_t static SidebarTabElementBuilder.DefaultTabs.getter()
{
  return static SidebarTabElementBuilder.DefaultTabs.getter();
}

uint64_t static SidebarTabElementBuilder.createRooms(with:)()
{
  return static SidebarTabElementBuilder.createRooms(with:)();
}

uint64_t SidebarTabElementBuilder.allowsReordering.getter()
{
  return SidebarTabElementBuilder.allowsReordering.getter();
}

uint64_t static SidebarTabElementBuilder.createCategories(with:home:)()
{
  return static SidebarTabElementBuilder.createCategories(with:home:)();
}

uint64_t SidebarTabElementBuilder.navigationBarClass.getter()
{
  return SidebarTabElementBuilder.navigationBarClass.getter();
}

uint64_t static SidebarTabElementBuilder.createBaseLevelTabs(with:)()
{
  return static SidebarTabElementBuilder.createBaseLevelTabs(with:)();
}

uint64_t SidebarTabElementBuilder.accessibilityIdentifier.getter()
{
  return SidebarTabElementBuilder.accessibilityIdentifier.getter();
}

uint64_t SidebarTabElementBuilder.id.getter()
{
  return SidebarTabElementBuilder.id.getter();
}

uint64_t type metadata accessor for SidebarTabElementBuilder.Kind()
{
  return type metadata accessor for SidebarTabElementBuilder.Kind();
}

uint64_t SidebarTabElementBuilder.init(from:home:)()
{
  return SidebarTabElementBuilder.init(from:home:)();
}

uint64_t SidebarTabElementBuilder.kind.getter()
{
  return SidebarTabElementBuilder.kind.getter();
}

uint64_t SidebarTabElementBuilder.title.getter()
{
  return SidebarTabElementBuilder.title.getter();
}

uint64_t SidebarTabElementBuilder.tabIcon.getter()
{
  return SidebarTabElementBuilder.tabIcon.getter();
}

uint64_t type metadata accessor for SidebarTabElementBuilder()
{
  return type metadata accessor for SidebarTabElementBuilder();
}

uint64_t static DashboardPresentationManager.shared.getter()
{
  return static DashboardPresentationManager.shared.getter();
}

uint64_t dispatch thunk of DashboardPresentationManager.delegate.setter()
{
  return dispatch thunk of DashboardPresentationManager.delegate.setter();
}

uint64_t type metadata accessor for DashboardPresentationManager()
{
  return type metadata accessor for DashboardPresentationManager();
}

uint64_t ActionSetAccessoryPickerViewController.init(actionSetBuilder:delegate:)()
{
  return ActionSetAccessoryPickerViewController.init(actionSetBuilder:delegate:)();
}

uint64_t type metadata accessor for ActionSetAccessoryPickerViewController()
{
  return type metadata accessor for ActionSetAccessoryPickerViewController();
}

uint64_t type metadata accessor for DataModelAccessoryControlViewController()
{
  return type metadata accessor for DataModelAccessoryControlViewController();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t DispatchTime.advanced(by:)()
{
  return DispatchTime.advanced(by:)();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)()
{
  return dispatch thunk of WidgetCenter.reloadTimelines(ofKind:)();
}

uint64_t static WidgetCenter.shared.getter()
{
  return static WidgetCenter.shared.getter();
}

uint64_t type metadata accessor for WidgetCenter()
{
  return type metadata accessor for WidgetCenter();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t Sequence.compactMap<A>(_:)()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.Index._asCocoa.modify()
{
  return Set.Index._asCocoa.modify();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t HFActionSetBuilder.add(actionBuilder:)()
{
  return HFActionSetBuilder.add(actionBuilder:)();
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t HFAccessoryRepresentable.containedServices.getter()
{
  return HFAccessoryRepresentable.containedServices.getter();
}

uint64_t CGRect.center.getter()
{
  return CGRect.center.getter();
}

uint64_t HMHome.sidebarRoomsSortOrder.setter()
{
  return HMHome.sidebarRoomsSortOrder.setter();
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t OS_os_log.signpostsEnabled.getter()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t static OS_os_log.default.getter()
{
  return static OS_os_log.default.getter();
}

uint64_t OS_os_log.init(subsystem:category:)()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _diagnoseUnexpectedEnumCase<A>(type:)()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t _findStringSwitchCaseWithCache(cases:string:cache:)()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

CFAllocatorRef CFAllocatorGetDefault(void)
{
  return _CFAllocatorGetDefault();
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

void CFRelease(CFTypeRef cf)
{
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

uint64_t HFCheckAndClearResetAccessCodePreference()
{
  return _HFCheckAndClearResetAccessCodePreference();
}

uint64_t HFCheckAndClearResetAccessoryFirmwareUpdatePreference()
{
  return _HFCheckAndClearResetAccessoryFirmwareUpdatePreference();
}

uint64_t HFCheckAndClearResetAnnouncePreference()
{
  return _HFCheckAndClearResetAnnouncePreference();
}

uint64_t HFCheckAndClearResetCameraRecordingPreference()
{
  return _HFCheckAndClearResetCameraRecordingPreference();
}

uint64_t HFCheckAndClearResetHomeTheaterPreference()
{
  return _HFCheckAndClearResetHomeTheaterPreference();
}

uint64_t HFCheckAndClearResetIdentifyVoicePreference()
{
  return _HFCheckAndClearResetIdentifyVoicePreference();
}

uint64_t HFCheckAndClearResetNaturalLightingPreference()
{
  return _HFCheckAndClearResetNaturalLightingPreference();
}

uint64_t HFCheckAndClearResetRedesignMigrationPreference()
{
  return _HFCheckAndClearResetRedesignMigrationPreference();
}

uint64_t HFCheckAndClearResetTVViewingProfilesPreference()
{
  return _HFCheckAndClearResetTVViewingProfilesPreference();
}

uint64_t HFCheckAndClearResetUtilityPreference()
{
  return _HFCheckAndClearResetUtilityPreference();
}

uint64_t HFCheckAndClearResetWalletKeyExpressModePreference()
{
  return _HFCheckAndClearResetWalletKeyExpressModePreference();
}

uint64_t HFForceAllowAutomationCreation()
{
  return _HFForceAllowAutomationCreation();
}

uint64_t HFForceFirstTimeOnboarding()
{
  return _HFForceFirstTimeOnboarding();
}

uint64_t HFForceNewFeaturesOnboarding()
{
  return _HFForceNewFeaturesOnboarding();
}

uint64_t HFForceStoreToUseStagingURL()
{
  return _HFForceStoreToUseStagingURL();
}

uint64_t HFLocalizedString()
{
  return _HFLocalizedString();
}

uint64_t HFLogForCategory()
{
  return _HFLogForCategory();
}

uint64_t HFStoreStagingURLString()
{
  return _HFStoreStagingURLString();
}

uint64_t HMHomeManagerStatusToString()
{
  return _HMHomeManagerStatusToString();
}

uint64_t HM_FEATURE_RVC_DEFAULTS_ENABLED()
{
  return _HM_FEATURE_RVC_DEFAULTS_ENABLED();
}

uint64_t HUImageNamed()
{
  return _HUImageNamed();
}

uint64_t HUIsPhoneIdiom()
{
  return _HUIsPhoneIdiom();
}

uint64_t HULocalizedString()
{
  return _HULocalizedString();
}

uint64_t HUStringFromIncomingInvitationResponseControllerState()
{
  return _HUStringFromIncomingInvitationResponseControllerState();
}

uint64_t HUViewSizeSubclassForViewSize()
{
  return _HUViewSizeSubclassForViewSize();
}

void NSLog(NSString *format, ...)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t NSStringFromHMHomeManagerDataSyncState()
{
  return _NSStringFromHMHomeManagerDataSyncState();
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return _NSStringFromProtocol(proto);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithName(CFAllocatorRef allocator, const char *nodename)
{
  return _SCNetworkReachabilityCreateWithName(allocator, nodename);
}

Boolean SCNetworkReachabilitySetCallback(SCNetworkReachabilityRef target, SCNetworkReachabilityCallBack callout, SCNetworkReachabilityContext *context)
{
  return _SCNetworkReachabilitySetCallback(target, callout, context);
}

Boolean SCNetworkReachabilitySetDispatchQueue(SCNetworkReachabilityRef target, dispatch_queue_t queue)
{
  return _SCNetworkReachabilitySetDispatchQueue(target, queue);
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

void UIImageWriteToSavedPhotosAlbum(UIImage *image, id completionTarget, SEL completionSelector, void *contextInfo)
{
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

nw_path_status_t nw_path_get_status(nw_path_t path)
{
  return _nw_path_get_status(path);
}

nw_path_monitor_t nw_path_monitor_create(void)
{
  return _nw_path_monitor_create();
}

void nw_path_monitor_set_queue(nw_path_monitor_t monitor, dispatch_queue_t queue)
{
}

void nw_path_monitor_set_update_handler(nw_path_monitor_t monitor, nw_path_monitor_update_handler_t update_handler)
{
}

void nw_path_monitor_start(nw_path_monitor_t monitor)
{
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

unsigned int sleep(unsigned int a1)
{
  return _sleep(a1);
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return _swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

int uname(utsname *a1)
{
  return _uname(a1);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _[a1 CGPath];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLHandler(void *a1, const char *a2, ...)
{
  return _[a1 URLHandler];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__acceptInvitation(void *a1, const char *a2, ...)
{
  return _[a1 _acceptInvitation];
}

id objc_msgSend__addButtonConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _addButtonConstraints];
}

id objc_msgSend__addConnectionIssueOverlayViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _addConnectionIssueOverlayViewConstraints];
}

id objc_msgSend__addContentViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _addContentViewConstraints];
}

id objc_msgSend__addWebViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _addWebViewConstraints];
}

id objc_msgSend__allowingMutationsInDelegateCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowingMutationsInDelegateCallback:");
}

id objc_msgSend__areHMSettingsValidForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_areHMSettingsValidForHome:");
}

id objc_msgSend__bottomPaddingConstraintForLowestView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bottomPaddingConstraintForLowestView:");
}

id objc_msgSend__buildPocketViewControllerWithOptions_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildPocketViewControllerWithOptions:target:action:");
}

id objc_msgSend__cameraProfileForTestingInHome_withUUID_(void *a1, const char *a2, ...)
{
  return [a1 _cameraProfileForTestingInHome:withUUID:];
}

id objc_msgSend__cameraProfileWithName_home_room_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cameraProfileWithName:home:room:");
}

id objc_msgSend__cameraTopic(void *a1, const char *a2, ...)
{
  return _[a1 _cameraTopic];
}

id objc_msgSend__cancelAction(void *a1, const char *a2, ...)
{
  return _[a1 _cancelAction];
}

id objc_msgSend__cancelTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelTimer];
}

id objc_msgSend__checkAndRunFeatureOnboardingWithHomeSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndRunFeatureOnboardingWithHomeSwitch:");
}

id objc_msgSend__checkForAppOnboardingWillFinish(void *a1, const char *a2, ...)
{
  return _[a1 _checkForAppOnboardingWillFinish];
}

id objc_msgSend__clearCachedWalletKeyDeviceStateForCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 _clearCachedWalletKeyDeviceStateForCurrentDevice];
}

id objc_msgSend__commonInitializer_(void *a1, const char *a2, ...)
{
  return [a1 _commonInitializer:];
}

id objc_msgSend__configureButtons(void *a1, const char *a2, ...)
{
  return _[a1 _configureButtons];
}

id objc_msgSend__configureCameraDashboardContextWithTitle_home_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCameraDashboardContextWithTitle:home:navigationController:animated:");
}

id objc_msgSend__configureDashboardContextWithAccessoryTypeGroup_home_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureDashboardContextWithAccessoryTypeGroup:home:navigationController:animated:");
}

id objc_msgSend__configureDashboardContextWithHome_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureDashboardContextWithHome:navigationController:animated:");
}

id objc_msgSend__configureDashboardContextWithRoom_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureDashboardContextWithRoom:navigationController:animated:");
}

id objc_msgSend__configureScenesDashboardContextWithTitle_home_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureScenesDashboardContextWithTitle:home:navigationController:animated:");
}

id objc_msgSend__configureSpeakersAndTVsDashboardContextWithTitle_home_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureSpeakersAndTVsDashboardContextWithTitle:home:navigationController:animated:");
}

id objc_msgSend__configureTabBarWithImageNamed_forViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureTabBarWithImageNamed:forViewController:");
}

id objc_msgSend__continue(void *a1, const char *a2, ...)
{
  return _[a1 _continue];
}

id objc_msgSend__createActionSetWithName_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createActionSetWithName:home:");
}

id objc_msgSend__createAndAddResetLabelsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createAndAddResetLabelsIfNeeded];
}

id objc_msgSend__createButtonWithString_(void *a1, const char *a2, ...)
{
  return [a1 _createButtonWithString:];
}

id objc_msgSend__createConstraintForTextView(void *a1, const char *a2, ...)
{
  return _[a1 _createConstraintForTextView];
}

id objc_msgSend__createConstraintsForButton_includeBottomConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConstraintsForButton:includeBottomConstraint:");
}

id objc_msgSend__createConstraintsForFirstItem_secondItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConstraintsForFirstItem:secondItem:");
}

id objc_msgSend__createHomeWithName_(void *a1, const char *a2, ...)
{
  return [a1 _createHomeWithName:];
}

id objc_msgSend__createResetSectionConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _createResetSectionConstraints];
}

id objc_msgSend__createRoomWithName_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRoomWithName:home:");
}

id objc_msgSend__currentSectionIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _currentSectionIdentifiers];
}

id objc_msgSend__debug_totalNumberOfIssuedBatchReadRequests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_totalNumberOfIssuedBatchReadRequests");
}

id objc_msgSend__debug_viewHasEverAppeared(void *a1, const char *a2, ...)
{
  return [a1 _debug_viewHasEverAppeared];
}

id objc_msgSend__didHomeGetAdded(void *a1, const char *a2, ...)
{
  return _[a1 _didHomeGetAdded];
}

id objc_msgSend__dismissPresentedViewControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _dismissPresentedViewControllerIfNeeded];
}

id objc_msgSend__displayNextViewController(void *a1, const char *a2, ...)
{
  return _[a1 _displayNextViewController];
}

id objc_msgSend__editActionSet_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editActionSet:home:");
}

id objc_msgSend__effectWithInfiniteRadiusScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectWithInfiniteRadiusScale:");
}

id objc_msgSend__endBackgroundTaskWithItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _endBackgroundTaskWithItemIdentifier:];
}

id objc_msgSend__endBackgroundTaskWithTaskIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _endBackgroundTaskWithTaskIdentifier:];
}

id objc_msgSend__executeActionSetForShortcutItem_navigator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeActionSetForShortcutItem:navigator:");
}

id objc_msgSend__finishedOnboarding(void *a1, const char *a2, ...)
{
  return _[a1 _finishedOnboarding];
}

id objc_msgSend__firstReadCompleteFuture(void *a1, const char *a2, ...)
{
  return _[a1 _firstReadCompleteFuture];
}

id objc_msgSend__generateShortcutItemForActionSetItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateShortcutItemForActionSetItem:");
}

id objc_msgSend__getStatusBarHeight(void *a1, const char *a2, ...)
{
  return _[a1 _getStatusBarHeight];
}

id objc_msgSend__handleProfileInstallationForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleProfileInstallationForHome:");
}

id objc_msgSend__hideSpinner(void *a1, const char *a2, ...)
{
  return _[a1 _hideSpinner];
}

id objc_msgSend__identifierForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForSection:");
}

id objc_msgSend__ignoreInvitation_(void *a1, const char *a2, ...)
{
  return [a1 _ignoreInvitation:];
}

id objc_msgSend__imageThatSuppressesAccessibilityHairlineThickening(void *a1, const char *a2, ...)
{
  return _[a1 _imageThatSuppressesAccessibilityHairlineThickening];
}

id objc_msgSend__indexOfSectionWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexOfSectionWithIdentifier:");
}

id objc_msgSend__indexPathForPendingInvitation_(void *a1, const char *a2, ...)
{
  return [a1 _indexPathForPendingInvitation];
}

id objc_msgSend__initialLoad(void *a1, const char *a2, ...)
{
  return _[a1 _initialLoad];
}

id objc_msgSend__invitationJoinedHomeViewController(void *a1, const char *a2, ...)
{
  return _[a1 _invitationJoinedHomeViewController];
}

id objc_msgSend__invitationJoiningHomeViewController(void *a1, const char *a2, ...)
{
  return _[a1 _invitationJoiningHomeViewController];
}

id objc_msgSend__invitationRestrictedGuestAccessViewController(void *a1, const char *a2, ...)
{
  return _[a1 _invitationRestrictedGuestAccessViewController];
}

id objc_msgSend__isCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 _isCollapsed];
}

id objc_msgSend__itemForMainTabIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemForMainTabIdentifier:");
}

id objc_msgSend__loadNavigationViewControllerForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadNavigationViewControllerForIdentifier:");
}

id objc_msgSend__loadWallpaperWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWallpaperWithAnimation:");
}

id objc_msgSend__logAccessoryCountMetricsWithHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAccessoryCountMetricsWithHomes:");
}

id objc_msgSend__logNonConfiguredAccessoryMetricsWithHomes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logNonConfiguredAccessoryMetricsWithHomes:");
}

id objc_msgSend__logSupportedSensitiveFeatures(void *a1, const char *a2, ...)
{
  return _[a1 _logSupportedSensitiveFeatures];
}

id objc_msgSend__logUserAutomationNamingTypeProportions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logUserAutomationNamingTypeProportions:");
}

id objc_msgSend__logUserMetrics(void *a1, const char *a2, ...)
{
  return _[a1 _logUserMetrics];
}

id objc_msgSend__moveToNextViewController(void *a1, const char *a2, ...)
{
  return _[a1 _moveToNextViewController];
}

id objc_msgSend__navigationControllerForInitialSelection(void *a1, const char *a2, ...)
{
  return _[a1 _navigationControllerForInitialSelection];
}

id objc_msgSend__navigationControllerForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationControllerForItem:");
}

id objc_msgSend__navigationControllerForMainTabIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationControllerForMainTabIdentifier:");
}

id objc_msgSend__networkConfigurationProfileForTestingInHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_networkConfigurationProfileForTestingInHome:");
}

id objc_msgSend__networkRouterForTestingInHome_(void *a1, const char *a2, ...)
{
  return [a1 _networkRouterForTestingInHome:];
}

id objc_msgSend__numberOfPocketButtons(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfPocketButtons];
}

id objc_msgSend__onboardingViewControllersForStates_(void *a1, const char *a2, ...)
{
  return [_onboardingViewControllersForStates:];
}

id objc_msgSend__openURLComponents_(void *a1, const char *a2, ...)
{
  return [a1 _openURLComponents:];
}

id objc_msgSend__overridingTabIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _overridingTabIdentifier];
}

id objc_msgSend__pendingInvitationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _pendingInvitationIdentifiers];
}

id objc_msgSend__performScrollTest_iterations_delta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTest:iterations:delta:");
}

id objc_msgSend__performTapActionForItem_tappedArea_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performTapActionForItem:tappedArea:");
}

id objc_msgSend__performTranslationScrollTest_duration_iterations_scrollAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performTranslationScrollTest:duration:iterations:scrollAxis:");
}

id objc_msgSend__performWithoutDeferringTransitions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWithoutDeferringTransitions:");
}

id objc_msgSend__persistLastSelectedTab(void *a1, const char *a2, ...)
{
  return _[a1 _persistLastSelectedTab];
}

id objc_msgSend__populateWallpaperForLoadingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateWallpaperForLoadingViewController:");
}

id objc_msgSend__presentCompletionAlert(void *a1, const char *a2, ...)
{
  return _[a1 _presentCompletionAlert];
}

id objc_msgSend__presentDataSyncingControllerWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDataSyncingControllerWithState:");
}

id objc_msgSend__presentErrorAlert(void *a1, const char *a2, ...)
{
  return _[a1 _presentErrorAlert];
}

id objc_msgSend__presentHomePodSelectionAlertWithHomePods_(void *a1, const char *a2, ...)
{
  return [a1 _presentHomePodSelectionAlertWithHomePods:];
}

id objc_msgSend__presentHomeSelectionAlertWithHomes_(void *a1, const char *a2, ...)
{
  return [a1 _presentHomeSelectionAlertWithHomes:];
}

id objc_msgSend__presentLocationAlertForTriggerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentLocationAlertForTriggerWithIdentifier:");
}

id objc_msgSend__presentLocationTriggerAlertsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _presentLocationTriggerAlertsIfNeeded];
}

id objc_msgSend__presentManagedConfigurationProfileInstallation(void *a1, const char *a2, ...)
{
  return _[a1 _presentManagedConfigurationProfileInstallation];
}

id objc_msgSend__presentNextViewControllerWithCurrentViewController_skipRelated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentNextViewControllerWithCurrentViewController:skipRelated:");
}

id objc_msgSend__presentOnboardingWithStates_(void *a1, const char *a2, ...)
{
  return [a1 _presentOnboardingWithStates:];
}

id objc_msgSend__presentPartialErrorAlertForHomePods_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPartialErrorAlertForHomePods:");
}

id objc_msgSend__presentedViewControllerForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentedViewControllerForState:");
}

id objc_msgSend__presentiCloudDisabledControllerWithState_andStatus_(void *a1, const char *a2, ...)
{
  return [a1 _presentiCloudDisabledControllerWithState:andStatus:];
}

id objc_msgSend__reallyAcceptInvitation(void *a1, const char *a2, ...)
{
  return _[a1 _reallyAcceptInvitation];
}

id objc_msgSend__reloadSectionHeaderFooters_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadSectionHeaderFooters:withRowAnimation:");
}

id objc_msgSend__reloadStateWithInvitation_home_(void *a1, const char *a2, ...)
{
  return [a1 _reloadStateWithInvitation:home:];
}

id objc_msgSend__removeLowerSectionControlsAndLabels(void *a1, const char *a2, ...)
{
  return _[a1 _removeLowerSectionControlsAndLabels];
}

id objc_msgSend__reportJunk(void *a1, const char *a2, ...)
{
  return _[a1 _reportJunk];
}

id objc_msgSend__reportJunk_(void *a1, const char *a2, ...)
{
  return [a1 _reportJunk:];
}

id objc_msgSend__scrollToTopIfPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToTopIfPossible:");
}

id objc_msgSend__selectAndFinishFirstReadForTabWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectAndFinishFirstReadForTabWithIdentifier:");
}

id objc_msgSend__selectCurrentTabAnimated_(void *a1, const char *a2, ...)
{
  return [a1 _selectCurrentTabAnimated:];
}

id objc_msgSend__selectHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectHome:");
}

id objc_msgSend__selectTabWithIdentifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectTabWithIdentifier:animated:");
}

id objc_msgSend__serviceTypeFromFilter_(void *a1, const char *a2, ...)
{
  return [a1 _serviceTypeFromFilter:];
}

id objc_msgSend__serviceWithName_type_home_room_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serviceWithName:type:home:room:");
}

id objc_msgSend__setBackgroundOpacity_(void *a1, const char *a2, ...)
{
  return [a1 _setBackgroundOpacity:];
}

id objc_msgSend__setCanShowWhileLocked_(void *a1, const char *a2, ...)
{
  return [a1 _setCanShowWhileLocked:];
}

id objc_msgSend__setHidesShadow_(void *a1, const char *a2, ...)
{
  return [_a1 _setHidesShadow:];
}

id objc_msgSend__setNavigationBarVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setNavigationBarVisibility:");
}

id objc_msgSend__setPresentedViewController_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPresentedViewController:forState:");
}

id objc_msgSend__setRelatedWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRelatedWebView:");
}

id objc_msgSend__setSectionContentInsetFollowsLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 _setSectionContentInsetFollowsLayoutMargins:];
}

id objc_msgSend__setSelectedViewController_persistSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSelectedViewController:persistSelection:");
}

id objc_msgSend__setTitleOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTitleOpacity:");
}

id objc_msgSend__setUpWallpaper(void *a1, const char *a2, ...)
{
  return _[a1 _setUpWallpaper];
}

id objc_msgSend__setupCommonViewAppearance(void *a1, const char *a2, ...)
{
  return _[a1 _setupCommonViewAppearance];
}

id objc_msgSend__shouldHandleMostRecentCameraClipForFilter_timeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldHandleMostRecentCameraClipForFilter:timeRange:");
}

id objc_msgSend__shouldShowOnboardingWelcomeOrLoadingView(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowOnboardingWelcomeOrLoadingView];
}

id objc_msgSend__shouldShowTriggerAboutPageForHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowTriggerAboutPageForHome:");
}

id objc_msgSend__shouldShowTriggerListForHome_(void *a1, const char *a2, ...)
{
  return [a1 _shouldShowTriggerListForHome];
}

id objc_msgSend__showCreateOrEditActionSetViewControllerWithActionSetName_home_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showCreateOrEditActionSetViewControllerWithActionSetName:home:");
}

id objc_msgSend__showDashboardForRoomContainedObject_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDashboardForRoomContainedObject:animated:");
}

id objc_msgSend__showHomeTabForHome_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showHomeTabForHome:animated:");
}

id objc_msgSend__showLocationListWithHome_customizationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showLocationListWithHome:customizationBlock:");
}

id objc_msgSend__showRoom_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showRoom:animated:");
}

id objc_msgSend__showRoomContainedCamera_forCameraClip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showRoomContainedCamera:forCameraClip:");
}

id objc_msgSend__showRoomContainedObject_secondaryDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showRoomContainedObject:secondaryDestination:");
}

id objc_msgSend__showSpinner(void *a1, const char *a2, ...)
{
  return _[a1 _showSpinner];
}

id objc_msgSend__showSpinnerForInvitationWithResponseControllerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showSpinnerForInvitationWithResponseControllerState:");
}

id objc_msgSend__showUser_customizationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showUser:customizationBlock:");
}

id objc_msgSend__simulateScrollWithTranslation_duration_willBeginDragging_didEndDragging_willBeginDecelerating_didEndDecelerating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_simulateScrollWithTranslation:duration:willBeginDragging:didEndDragging:willBeginDecelerating:didEndDecelerating:");
}

id objc_msgSend__simulateScrollWithTranslation_numIterations_duration_reversed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_simulateScrollWithTranslation:numIterations:duration:reversed:");
}

id objc_msgSend__startAddHomeTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _startAddHomeTimeout];
}

id objc_msgSend__startBackgroundTaskWithItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startBackgroundTaskWithItemIdentifier:");
}

id objc_msgSend__startDateForURLComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startDateForURLComponents:");
}

id objc_msgSend__startWebViewActivityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 _startWebViewActivityIndicator];
}

id objc_msgSend__stopWebViewActivityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 _stopWebViewActivityIndicator];
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:");
}

id objc_msgSend__updateImageConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _updateImageConstraints];
}

id objc_msgSend__updateNavigationBarAppearenceFromOffset(void *a1, const char *a2, ...)
{
  return _[a1 _updateNavigationBarAppearenceFromOffset];
}

id objc_msgSend__updateNetworkConnectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNetworkConnectionState:");
}

id objc_msgSend__updateOnboardingCompleteFutureForNewPresentationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateOnboardingCompleteFutureForNewPresentationState:");
}

id objc_msgSend__vibrantEffectWithCAColorMatrix_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_vibrantEffectWithCAColorMatrix:alpha:");
}

id objc_msgSend__viewControllerForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerForState:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_acceptInvitationError(void *a1, const char *a2, ...)
{
  return _[a1 acceptInvitationError];
}

id objc_msgSend_acceptedInvitationPendingForNewHome_(void *a1, const char *a2, ...)
{
  return [a1 acceptedInvitationPendingForNewHome:];
}

id objc_msgSend_acceptedPendingAddHomeTimeoutCancellationToken(void *a1, const char *a2, ...)
{
  return _[a1 acceptedPendingAddHomeTimeoutCancellationToken];
}

id objc_msgSend_accessories(void *a1, const char *a2, ...)
{
  return _[a1 accessories];
}

id objc_msgSend_accessory(void *a1, const char *a2, ...)
{
  return _[a1 accessory];
}

id objc_msgSend_accessoryRepresentableObject(void *a1, const char *a2, ...)
{
  return _[a1 accessoryRepresentableObject];
}

id objc_msgSend_accessorySetupCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 accessorySetupCoordinator];
}

id objc_msgSend_actionSet(void *a1, const char *a2, ...)
{
  return _[a1 actionSet];
}

id objc_msgSend_actionSets(void *a1, const char *a2, ...)
{
  return _[a1 actionSets];
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:style:handler:];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activeConstraints(void *a1, const char *a2, ...)
{
  return _[a1 activeConstraints];
}

id objc_msgSend_activeOnboardingState(void *a1, const char *a2, ...)
{
  return _[a1 activeOnboardingState];
}

id objc_msgSend_addAccessoryWithURL_(void *a1, const char *a2, ...)
{
  return [a1 addAccessoryWithURL:];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return [a1 addAction:];
}

id objc_msgSend_addAndSetupAccessoriesWithPayload_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 addAndSetupAccessoriesWithPayload:completionHandler:];
}

id objc_msgSend_addAndSetupNewAccessoriesForHome_room_(void *a1, const char *a2, ...)
{
  return [a1 addAndSetupNewAccessoriesForHome:room:];
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return [a1 addArrangedSubview:];
}

id objc_msgSend_addBulletedListItemWithTitle_description_image_(void *a1, const char *a2, ...)
{
  return [a1 addBulletedListItemWithTitle:description:image:];
}

id objc_msgSend_addButton_(void *a1, const char *a2, ...)
{
  return [a1 addButton:];
}

id objc_msgSend_addCaptionText_(void *a1, const char *a2, ...)
{
  return [a1 addCaptionText:];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 addCompletionBlock:];
}

id objc_msgSend_addFailureBlock_(void *a1, const char *a2, ...)
{
  return [a1 addFailureBlock:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addHomeKitSettingsObserver_(void *a1, const char *a2, ...)
{
  return [a1 addHomeKitSettingsObserver];
}

id objc_msgSend_addHomeManagerObserver_(void *a1, const char *a2, ...)
{
  return [a1 addHomeManagerObserver:];
}

id objc_msgSend_addHomeObserver_(void *a1, const char *a2, ...)
{
  return [a1 addHomeObserver:];
}

id objc_msgSend_addLocationViewController_didFinishWithHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLocationViewController:didFinishWithHome:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 addObserverForName:object:queue:usingBlock:];
}

id objc_msgSend_addScriptMessageHandler_name_(void *a1, const char *a2, ...)
{
  return [a1 addScriptMessageHandler:name:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addSuccessBlock_(void *a1, const char *a2, ...)
{
  return [a1 addSuccessBlock:];
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forControlEvents:];
}

id objc_msgSend_addTarget_action_forEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forEvents:];
}

id objc_msgSend_addValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return [a1 addValue:forHTTPHeaderField:];
}

id objc_msgSend_addViewControllersToRegistry(void *a1, const char *a2, ...)
{
  return _[a1 addViewControllersToRegistry];
}

id objc_msgSend_addedItems(void *a1, const char *a2, ...)
{
  return _[a1 addedItems];
}

id objc_msgSend_afterDelay_performBlock_(void *a1, const char *a2, ...)
{
  return [a1 afterDelay:performBlock:];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerWithTitle:message:preferredStyle:];
}

id objc_msgSend_allDisplayedItems(void *a1, const char *a2, ...)
{
  return _[a1 allDisplayedItems];
}

id objc_msgSend_allHomesFuture(void *a1, const char *a2, ...)
{
  return _[a1 allHomesFuture];
}

id objc_msgSend_allNamedWallpaperThumbnailsForWallpaperCollectionType_(void *a1, const char *a2, ...)
{
  return [a1 allNamedWallpaperThumbnailsForWallpaperCollectionType:];
}

id objc_msgSend_allNamedWallpapersForWallpaperCollectionType_(void *a1, const char *a2, ...)
{
  return [a1 allNamedWallpapersForWallpaperCollectionType:];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allowForcedCacheReload(void *a1, const char *a2, ...)
{
  return _[a1 allowForcedCacheReload];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:];
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:delay:options:animations:completion:];
}

id objc_msgSend_appNavigator(void *a1, const char *a2, ...)
{
  return _[a1 appNavigator];
}

id objc_msgSend_appOnboardingWillFinishForStateController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appOnboardingWillFinishForStateController:");
}

id objc_msgSend_appendItemsWithIdentifiers_intoSectionWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 appendItemsWithIdentifiers:intoSectionWithIdentifier:];
}

id objc_msgSend_appendSectionsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 appendSectionsWithIdentifiers:];
}

id objc_msgSend_application(void *a1, const char *a2, ...)
{
  return _[a1 application];
}

id objc_msgSend_applicationActiveFuture(void *a1, const char *a2, ...)
{
  return _[a1 applicationActiveFuture];
}

id objc_msgSend_applicationBackgroundedDate(void *a1, const char *a2, ...)
{
  return _[a1 applicationBackgroundedDate];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applySnapshot_animatingDifferences_(void *a1, const char *a2, ...)
{
  return [a1 applySnapshot:animatingDifferences:];
}

id objc_msgSend_applySnapshotUsingReloadData_(void *a1, const char *a2, ...)
{
  return [a1 applySnapshotUsingReloadData:];
}

id objc_msgSend_applySnapshotWithAnimation_(void *a1, const char *a2, ...)
{
  return [a1 applySnapshotWithAnimation:];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObjectsFromArray:];
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObject:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_attemptRotationToDeviceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 attemptRotationToDeviceOrientation];
}

id objc_msgSend_autoupdatingCurrentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentCalendar];
}

id objc_msgSend_backgroundURLSessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 backgroundURLSessionIdentifier];
}

id objc_msgSend_baseController(void *a1, const char *a2, ...)
{
  return _[a1 baseController];
}

id objc_msgSend_baseViewController(void *a1, const char *a2, ...)
{
  return _[a1 baseViewController];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_beginBackgroundTaskWithName_expirationHandler_(void *a1, const char *a2, ...)
{
  return [a1 beginBackgroundTaskWithName:expirationHandler:];
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginUpdates];
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithRect:];
}

id objc_msgSend_blurView(void *a1, const char *a2, ...)
{
  return _[a1 blurView];
}

id objc_msgSend_body(void *a1, const char *a2, ...)
{
  return _[a1 body];
}

id objc_msgSend_bodyLabel(void *a1, const char *a2, ...)
{
  return _[a1 bodyLabel];
}

id objc_msgSend_bodyWidthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 bodyWidthConstraint];
}

id objc_msgSend_boldButton(void *a1, const char *a2, ...)
{
  return _[a1 boldButton];
}

id objc_msgSend_boldFontForStyle_(void *a1, const char *a2, ...)
{
  return [a1 boldFontForStyle:];
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 boldSystemFontOfSize:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_bottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 bottomPadding];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_buttonLayoutConstraints(void *a1, const char *a2, ...)
{
  return _[a1 buttonLayoutConstraints];
}

id objc_msgSend_buttonPaddingToViewBottomForViewSizeSubclass_(void *a1, const char *a2, ...)
{
  return [a1 buttonPaddingToViewBottomForViewSizeSubclass:];
}

id objc_msgSend_buttonTray(void *a1, const char *a2, ...)
{
  return _[a1 buttonTray];
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return [a1 buttonWithType:];
}

id objc_msgSend_cacheRefreshTimeInterval(void *a1, const char *a2, ...)
{
  return _[a1 cacheRefreshTimeInterval];
}

id objc_msgSend_cameraFeedbackQueryString(void *a1, const char *a2, ...)
{
  return _[a1 cameraFeedbackQueryString];
}

id objc_msgSend_canAskForUserFeedback(void *a1, const char *a2, ...)
{
  return _[a1 canAskForUserFeedback];
}

id objc_msgSend_canOpenURL_(void *a1, const char *a2, ...)
{
  return [a1 canOpenURL:];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelButton(void *a1, const char *a2, ...)
{
  return _[a1 cancelButton];
}

id objc_msgSend_cancelInFlightReadRequests(void *a1, const char *a2, ...)
{
  return _[a1 cancelInFlightReadRequests];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return [a1 caseInsensitiveCompare:];
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 cellForRowAtIndexPath:];
}

id objc_msgSend_centerListConstraints(void *a1, const char *a2, ...)
{
  return _[a1 centerListConstraints];
}

id objc_msgSend_centerVC(void *a1, const char *a2, ...)
{
  return _[a1 centerVC];
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerXAnchor];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerYAnchor];
}

id objc_msgSend_changingSelectedViewControllerProgrammatically(void *a1, const char *a2, ...)
{
  return _[a1 changingSelectedViewControllerProgrammatically];
}

id objc_msgSend_characteristicsWithPendingReads(void *a1, const char *a2, ...)
{
  return _[a1 characteristicsWithPendingReads];
}

id objc_msgSend_childViewControllerDidFinish_(void *a1, const char *a2, ...)
{
  return [a1 childViewControllerDidFinish:];
}

id objc_msgSend_childViewControllerDidFinish_shouldSkipRelatedChildren_(void *a1, const char *a2, ...)
{
  return [a1 childViewControllerDidFinish:shouldSkipRelatedChildren:];
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllers];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_climateAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _[a1 climateAccessoryTypeGroup];
}

id objc_msgSend_clipManager(void *a1, const char *a2, ...)
{
  return _[a1 clipManager];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_colorEffectLuminanceMap_blendingAmount_(void *a1, const char *a2, ...)
{
  return [a1 colorEffectLuminanceMap:blendingAmount:];
}

id objc_msgSend_colorEffectMatrix_(void *a1, const char *a2, ...)
{
  return [a1 colorEffectMatrix:];
}

id objc_msgSend_colorNamed_(void *a1, const char *a2, ...)
{
  return [a1 colorNamed:];
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithRed:green:blue:alpha:];
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithWhite:alpha:];
}

id objc_msgSend_combineAllFutures_(void *a1, const char *a2, ...)
{
  return [a1 combineAllFutures];
}

id objc_msgSend_combineAllFutures_ignoringErrors_scheduler_(void *a1, const char *a2, ...)
{
  return [a1 combineAllFutures:ignoringErrors:scheduler:];
}

id objc_msgSend_commitItem(void *a1, const char *a2, ...)
{
  return _[a1 commitItem];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return [a1 compare:];
}

id objc_msgSend_completionHandlerAdapter(void *a1, const char *a2, ...)
{
  return _[a1 completionHandlerAdapter];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsJoinedByString:];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithPointSize:];
}

id objc_msgSend_configurationWithPointSize_weight_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithPointSize:weight:];
}

id objc_msgSend_configureDashboardContextWithDashboardContext_navigationController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureDashboardContextWithDashboardContext:navigationController:animated:");
}

id objc_msgSend_configuredName(void *a1, const char *a2, ...)
{
  return _[a1 configuredName];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return [a1 conformsToProtocol:];
}

id objc_msgSend_connectionIssueOverlayRetryButtonPressed(void *a1, const char *a2, ...)
{
  return _[a1 connectionIssueOverlayRetryButtonPressed];
}

id objc_msgSend_connectionIssueOverlayView(void *a1, const char *a2, ...)
{
  return _[a1 connectionIssueOverlayView];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToConstant:];
}

id objc_msgSend_constraintEqualToSystemSpacingBelowAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToSystemSpacingBelowAnchor:multiplier:];
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToAnchor:];
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToAnchor:constant:];
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToConstant:];
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToAnchor];
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToAnchor:constant:];
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _[a1 containerView];
}

id objc_msgSend_containsDate_(void *a1, const char *a2, ...)
{
  return [a1 containsDate:];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return [a1 containsString:];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _[a1 contentOffset];
}

id objc_msgSend_contentScrollViewForEdge_(void *a1, const char *a2, ...)
{
  return [a1 contentScrollViewForEdge:];
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _[a1 contentSize];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_contentViewed_(void *a1, const char *a2, ...)
{
  return [a1 contentViewed:];
}

id objc_msgSend_continueButton(void *a1, const char *a2, ...)
{
  return _[a1 continueButton];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createOrEditActionSetWithName_home_switchToHomeTab_(void *a1, const char *a2, ...)
{
  return [a1 createOrEditActionSetWithName:home:switchToHomeTab:];
}

id objc_msgSend_createOrShowHomeWithName_home_(void *a1, const char *a2, ...)
{
  return [a1 createOrShowHomeWithName:home:];
}

id objc_msgSend_createOrShowRoomWithName_home_(void *a1, const char *a2, ...)
{
  return [a1 createOrShowRoomWithName:home:];
}

id objc_msgSend_createSetupAccessoryPayloadWithSetupPayloadURLString_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 createSetupAccessoryPayloadWithSetupPayloadURLString:completionHandler:];
}

id objc_msgSend_createWebViewForURL_dependentWebViewURLString_(void *a1, const char *a2, ...)
{
  return [a1 createWebViewForURL:dependentWebViewURLString:];
}

id objc_msgSend_currentConnectionIssueState(void *a1, const char *a2, ...)
{
  return _[a1 currentConnectionIssueState];
}

id objc_msgSend_currentContext(void *a1, const char *a2, ...)
{
  return _[a1 currentContext];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentHome(void *a1, const char *a2, ...)
{
  return _[a1 currentHome];
}

id objc_msgSend_currentNotificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 currentNotificationCenter];
}

id objc_msgSend_currentTabIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 currentTabIdentifier];
}

id objc_msgSend_currentTitle(void *a1, const char *a2, ...)
{
  return _[a1 currentTitle];
}

id objc_msgSend_currentUser(void *a1, const char *a2, ...)
{
  return _[a1 currentUser];
}

id objc_msgSend_currentViewController(void *a1, const char *a2, ...)
{
  return _[a1 currentViewController];
}

id objc_msgSend_currentlyPresentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 currentlyPresentedViewController];
}

id objc_msgSend_customWallpaperWithAssetIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 customWallpaperWithAssetIdentifier:];
}

id objc_msgSend_dashboarHomeKitObject(void *a1, const char *a2, ...)
{
  return _[a1 dashboarHomeKitObject];
}

id objc_msgSend_dashboardContextTypeDescriptionForAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 dashboardContextTypeDescriptionForAnalytics];
}

id objc_msgSend_dashboardNavigator(void *a1, const char *a2, ...)
{
  return _[a1 dashboardNavigator];
}

id objc_msgSend_dataSyncState(void *a1, const char *a2, ...)
{
  return _[a1 dataSyncState];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 dateFormatter];
}

id objc_msgSend_dateFromComponents_(void *a1, const char *a2, ...)
{
  return [a1 dateFromComponents:];
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 deactivateConstraints:];
}

id objc_msgSend_declineOrIgnoreInvitationButton(void *a1, const char *a2, ...)
{
  return _[a1 declineOrIgnoreInvitationButton];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultItemComparator(void *a1, const char *a2, ...)
{
  return _[a1 defaultItemComparator];
}

id objc_msgSend_defaultScheduler(void *a1, const char *a2, ...)
{
  return _[a1 defaultScheduler];
}

id objc_msgSend_defaultWallpaperForCollectionType_(void *a1, const char *a2, ...)
{
  return [a1 defaultWallpaperForCollectionType:];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 deleteRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_deleteSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 deleteSections:withRowAnimation:];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithIdentifier:forIndexPath:];
}

id objc_msgSend_dequeueReusableHeaderFooterViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableHeaderFooterViewWithIdentifier];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptionLabel(void *a1, const char *a2, ...)
{
  return _[a1 descriptionLabel];
}

id objc_msgSend_descriptorWithTitle_style_target_action_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 descriptorWithTitle:style:target:action:userInfo:];
}

id objc_msgSend_descriptors(void *a1, const char *a2, ...)
{
  return _[a1 descriptors];
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 deselectRowAtIndexPath:animated:];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _[a1 destination];
}

id objc_msgSend_detailText(void *a1, const char *a2, ...)
{
  return _[a1 detailText];
}

id objc_msgSend_deviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 deviceIdentifier];
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _[a1 deviceType];
}

id objc_msgSend_devicesLabel(void *a1, const char *a2, ...)
{
  return _[a1 devicesLabel];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didAcceptInvitation_viewController_(void *a1, const char *a2, ...)
{
  return [a1 didAcceptInvitation:viewController:];
}

id objc_msgSend_didDecideLaterForInvitation_viewController_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDecideLaterForInvitation:viewController:error:");
}

id objc_msgSend_didLoadHome_(void *a1, const char *a2, ...)
{
  return [a1 didLoadHome:];
}

id objc_msgSend_didLoadLoadingViewController(void *a1, const char *a2, ...)
{
  return _[a1 didLoadLoadingViewController];
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 didMoveToParentViewController:];
}

id objc_msgSend_didPushNextViewController(void *a1, const char *a2, ...)
{
  return _[a1 didPushNextViewController];
}

id objc_msgSend_didUserTriggerOnboardingDismissal(void *a1, const char *a2, ...)
{
  return _[a1 didUserTriggerOnboardingDismissal];
}

id objc_msgSend_diffableDataSource(void *a1, const char *a2, ...)
{
  return _[a1 diffableDataSource];
}

id objc_msgSend_disableNotificationsForSelectedHomeWithReason_(void *a1, const char *a2, ...)
{
  return [a1 disableNotificationsForSelectedHomeWithReason:];
}

id objc_msgSend_dismissButton(void *a1, const char *a2, ...)
{
  return _[a1 dismissButton];
}

id objc_msgSend_dismissButtonEffectView(void *a1, const char *a2, ...)
{
  return _[a1 dismissButtonEffectView];
}

id objc_msgSend_dismissButtonForegroundView(void *a1, const char *a2, ...)
{
  return _[a1 dismissButtonForegroundView];
}

id objc_msgSend_dismissInstallProfileViewControllerWithAnimation_(void *a1, const char *a2, ...)
{
  return [a1 dismissInstallProfileViewControllerWithAnimation:];
}

id objc_msgSend_dismissInstallProfileViewControllerWithAnimation_shouldOpenSenderURL_(void *a1, const char *a2, ...)
{
  return [a1 dismissInstallProfileViewControllerWithAnimation:YES shouldOpenSenderURL:YES];
}

id objc_msgSend_dismissPresentedViewControllersAnimated_(void *a1, const char *a2, ...)
{
  return [a1 dismissPresentedViewControllersAnimated:];
}

id objc_msgSend_dismissViewController(void *a1, const char *a2, ...)
{
  return _[a1 dismissViewController];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dismissalPanTranslationChanged_(void *a1, const char *a2, ...)
{
  return [a1 dismissalPanTranslationChanged:];
}

id objc_msgSend_dismissalPanTranslationEnded(void *a1, const char *a2, ...)
{
  return _[a1 dismissalPanTranslationEnded];
}

id objc_msgSend_dispatcher(void *a1, const char *a2, ...)
{
  return _[a1 dispatcher];
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return _[a1 displayMode];
}

id objc_msgSend_displayedItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 displayedItemAtIndexPath:];
}

id objc_msgSend_displayedItemsInSection_(void *a1, const char *a2, ...)
{
  return [a1 displayedItemsInSection:];
}

id objc_msgSend_doesURLContainPath_urlResponseString_(void *a1, const char *a2, ...)
{
  return [a1 doesURLContainPath:urlResponseString:];
}

id objc_msgSend_donateAppLaunchEvent(void *a1, const char *a2, ...)
{
  return _[a1 donateAppLaunchEvent];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_editedName(void *a1, const char *a2, ...)
{
  return _[a1 editedName];
}

id objc_msgSend_effectMappingColors_whitePoint_(void *a1, const char *a2, ...)
{
  return [a1 effectMappingColors:whitePoint:];
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 effectWithStyle:];
}

id objc_msgSend_enableButton(void *a1, const char *a2, ...)
{
  return _[a1 enableButton];
}

id objc_msgSend_enableNotificationsForSelectedHomeWithReason_(void *a1, const char *a2, ...)
{
  return [a1 enableNotificationsForSelectedHomeWithReason:];
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return [a1 endBackgroundTask:];
}

id objc_msgSend_endDateComponents(void *a1, const char *a2, ...)
{
  return _[a1 endDateComponents];
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return [a1 endEditing:];
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _[a1 endUpdates];
}

id objc_msgSend_energyAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _[a1 energyAccessoryTypeGroup];
}

id objc_msgSend_entities(void *a1, const char *a2, ...)
{
  return _[a1 entities];
}

id objc_msgSend_entityName(void *a1, const char *a2, ...)
{
  return _[a1 entityName];
}

id objc_msgSend_entityOfType_inEntities_(void *a1, const char *a2, ...)
{
  return [a1 entityOfType:inEntities:];
}

id objc_msgSend_entityType(void *a1, const char *a2, ...)
{
  return _[a1 entityType];
}

id objc_msgSend_eraseHomeDataWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 eraseHomeDataWithCompletionHandler:];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorOnlyCompletionHandlerAdapter(void *a1, const char *a2, ...)
{
  return _[a1 errorOnlyCompletionHandlerAdapter];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_executeActionSet_(void *a1, const char *a2, ...)
{
  return [a1 executeActionSet:];
}

id objc_msgSend_executionEnvironmentDidBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 executionEnvironmentDidBecomeActive];
}

id objc_msgSend_executionEnvironmentDidEnterBackground(void *a1, const char *a2, ...)
{
  return _[a1 executionEnvironmentDidEnterBackground];
}

id objc_msgSend_executionEnvironmentWillEnterForeground(void *a1, const char *a2, ...)
{
  return _[a1 executionEnvironmentWillEnterForeground];
}

id objc_msgSend_executionEnvironmentWillResignActive(void *a1, const char *a2, ...)
{
  return _[a1 executionEnvironmentWillResignActive];
}

id objc_msgSend_exitToAppleStoreAppOrSafariWithURL_(void *a1, const char *a2, ...)
{
  return [a1 exitToAppleStoreAppOrSafariWithURL:];
}

id objc_msgSend_failedTest_(void *a1, const char *a2, ...)
{
  return [a1 failedTest:];
}

id objc_msgSend_failedTest_withFailure_(void *a1, const char *a2, ...)
{
  return [a1 failedTest:withFailure:];
}

id objc_msgSend_fetchClipWithUUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchClipWithUUID:completion:");
}

id objc_msgSend_fetchDevicesWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 fetchDevicesWithCompletionHandler:];
}

id objc_msgSend_fetchTriggerNameForTriggerIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 fetchTriggerNameForTriggerIdentifier:completionHandler:];
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return [a1 filteredArrayUsingPredicate:];
}

id objc_msgSend_filters(void *a1, const char *a2, ...)
{
  return _[a1 filters];
}

id objc_msgSend_finishWithError_(void *a1, const char *a2, ...)
{
  return [a1 finishWithError:];
}

id objc_msgSend_finishWithNoResult(void *a1, const char *a2, ...)
{
  return _[a1 finishWithNoResult];
}

id objc_msgSend_finishWithResult_(void *a1, const char *a2, ...)
{
  return [a1 finishWithResult:];
}

id objc_msgSend_finishedTest_(void *a1, const char *a2, ...)
{
  return [a1 finishedTest:];
}

id objc_msgSend_firstFastUpdateFuture(void *a1, const char *a2, ...)
{
  return _[a1 firstFastUpdateFuture];
}

id objc_msgSend_firstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return [a1 firstMatchInString:options:range:];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstReadCompleteFuture(void *a1, const char *a2, ...)
{
  return _[a1 firstReadCompleteFuture];
}

id objc_msgSend_flatMap_(void *a1, const char *a2, ...)
{
  return [a1 flatMap:];
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return [a1 fontWithDescriptor:];
}

id objc_msgSend_formattedString(void *a1, const char *a2, ...)
{
  return _[a1 formattedString];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_frameOfPresentedViewInContainerView(void *a1, const char *a2, ...)
{
  return _[a1 frameOfPresentedViewInContainerView];
}

id objc_msgSend_futureWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 futureWithBlock:];
}

id objc_msgSend_futureWithError_(void *a1, const char *a2, ...)
{
  return [a1 futureWithError:];
}

id objc_msgSend_futureWithNoResult(void *a1, const char *a2, ...)
{
  return _[a1 futureWithNoResult];
}

id objc_msgSend_futureWithResult_(void *a1, const char *a2, ...)
{
  return [a1 futureWithResult:];
}

id objc_msgSend_getAvailabilityDictionary(void *a1, const char *a2, ...)
{
  return _[a1 getAvailabilityDictionary];
}

id objc_msgSend_getDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 getDeviceName];
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 getRed:green:blue:alpha:];
}

id objc_msgSend_getURLRequestForURL_(void *a1, const char *a2, ...)
{
  return [a1 getURLRequestForURL:];
}

id objc_msgSend_getURLStringFromLocaleDictionary_(void *a1, const char *a2, ...)
{
  return [a1 getURLStringFromLocaleDictionary:];
}

id objc_msgSend_getUserAgent(void *a1, const char *a2, ...)
{
  return _[a1 getUserAgent];
}

id objc_msgSend_getWebViewNavigationStateForWebView_(void *a1, const char *a2, ...)
{
  return [a1 getWebViewNavigationStateForWebView];
}

id objc_msgSend_getWebViewURLKeyFromCache_(void *a1, const char *a2, ...)
{
  return [a1 getWebViewURLKeyFromCache];
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_globalAsyncScheduler(void *a1, const char *a2, ...)
{
  return _[a1 globalAsyncScheduler];
}

id objc_msgSend_groupedFooterConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 groupedFooterConfiguration];
}

id objc_msgSend_groupedHeaderConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 groupedHeaderConfiguration];
}

id objc_msgSend_handleConfigureIntent_(void *a1, const char *a2, ...)
{
  return [a1 handleConfigureIntent:];
}

id objc_msgSend_handleError_(void *a1, const char *a2, ...)
{
  return [a1 handleError:];
}

id objc_msgSend_handleError_operationType_options_retryBlock_cancelBlock_(void *a1, const char *a2, ...)
{
  return [a1 handleError:operationType:options:retryBlock:cancelBlock:];
}

id objc_msgSend_handleError_retryBlock_cancelBlock_(void *a1, const char *a2, ...)
{
  return [a1 handleError:retryBlock:cancelBlock:];
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return [a1 handleFailureInFunction:file:lineNumber:description:];
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleIntent_withNavigator_(void *a1, const char *a2, ...)
{
  return [a1 handleIntent:withNavigator:];
}

id objc_msgSend_handleShowHomeIntent_(void *a1, const char *a2, ...)
{
  return [a1 handleShowHomeIntent:];
}

id objc_msgSend_handleShowSingleAccessoryQuickControlsIntent_(void *a1, const char *a2, ...)
{
  return [a1 handleShowSingleAccessoryQuickControlsIntent:];
}

id objc_msgSend_hasConnectedToNetwork(void *a1, const char *a2, ...)
{
  return _[a1 hasConnectedToNetwork];
}

id objc_msgSend_hasLoadedHomes(void *a1, const char *a2, ...)
{
  return _[a1 hasLoadedHomes];
}

id objc_msgSend_hasNextStepInRestrictedGuestIncomingInvitationFlow(void *a1, const char *a2, ...)
{
  return _[a1 hasNextStepInRestrictedGuestIncomingInvitationFlow];
}

id objc_msgSend_hasOptedToHH2(void *a1, const char *a2, ...)
{
  return _[a1 hasOptedToHH2];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return [a1 hasSuffix:];
}

id objc_msgSend_headerView(void *a1, const char *a2, ...)
{
  return _[a1 headerView];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_hf_accessoryWithDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 hf_accessoryWithDeviceIdentifier:];
}

id objc_msgSend_hf_accessoryWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 hf_accessoryWithIdentifier:];
}

id objc_msgSend_hf_allCameraProfiles(void *a1, const char *a2, ...)
{
  return [a1 hf_allCameraProfiles];
}

id objc_msgSend_hf_allHomePodsSupportRemoteProfileInstallation(void *a1, const char *a2, ...)
{
  return [a1 hf_allHomePodsSupportRemoteProfileInstallation];
}

id objc_msgSend_hf_allNetworkConfigurationProfiles(void *a1, const char *a2, ...)
{
  return [a1 hf_allNetworkConfigurationProfiles];
}

id objc_msgSend_hf_allNetworkRouterAccessories(void *a1, const char *a2, ...)
{
  return [a1 hf_allNetworkRouterAccessories];
}

id objc_msgSend_hf_allRooms(void *a1, const char *a2, ...)
{
  return [a1 hf_allRooms];
}

id objc_msgSend_hf_allServices(void *a1, const char *a2, ...)
{
  return [a1 hf_allServices];
}

id objc_msgSend_hf_allVisibleServices(void *a1, const char *a2, ...)
{
  return [a1 hf_allVisibleServices];
}

id objc_msgSend_hf_cameraProfileWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 hf_cameraProfileWithIdentifier:];
}

id objc_msgSend_hf_canAddAccessCode(void *a1, const char *a2, ...)
{
  return [a1 hf_canAddAccessCode];
}

id objc_msgSend_hf_canAddHomeMember(void *a1, const char *a2, ...)
{
  return [a1 hf_canAddHomeMember];
}

id objc_msgSend_hf_characteristicValueManager(void *a1, const char *a2, ...)
{
  return [a1 hf_characteristicValueManager];
}

id objc_msgSend_hf_clearCachedWalletKeyDeviceStateForCurrentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hf_clearCachedWalletKeyDeviceStateForCurrentDevice");
}

id objc_msgSend_hf_containedServices(void *a1, const char *a2, ...)
{
  return [a1 hf_containedServices];
}

id objc_msgSend_hf_currentUserIsOwner(void *a1, const char *a2, ...)
{
  return [a1 hf_currentUserIsOwner];
}

id objc_msgSend_hf_currentUserIsRestrictedGuest(void *a1, const char *a2, ...)
{
  return [a1 hf_currentUserIsRestrictedGuest];
}

id objc_msgSend_hf_dateByAddingDays_toDate_(void *a1, const char *a2, ...)
{
  return [a1 hf_dateByAddingDays:toDate:];
}

id objc_msgSend_hf_displayName(void *a1, const char *a2, ...)
{
  return [a1 hf_displayName];
}

id objc_msgSend_hf_effectiveIsFavorite(void *a1, const char *a2, ...)
{
  return [a1 hf_effectiveIsFavorite];
}

id objc_msgSend_hf_effectiveShowInHomeDashboard(void *a1, const char *a2, ...)
{
  return [a1 hf_effectiveShowInHomeDashboard];
}

id objc_msgSend_hf_enableEventLogOnboardingFlag(void *a1, const char *a2, ...)
{
  return [a1 hf_enableEventLogOnboardingFlag];
}

id objc_msgSend_hf_errorWithCode_(void *a1, const char *a2, ...)
{
  return [a1 hf_errorWithCode:];
}

id objc_msgSend_hf_errorWithCode_description_(void *a1, const char *a2, ...)
{
  return [a1 hf_errorWithCode:description:];
}

id objc_msgSend_hf_hasAnyVisibleTriggers(void *a1, const char *a2, ...)
{
  return [a1 hf_hasAnyVisibleTriggers];
}

id objc_msgSend_hf_hasHomePods(void *a1, const char *a2, ...)
{
  return [a1 hf_hasHomePods];
}

id objc_msgSend_hf_hasSeenOnboardingWelcomeView(void *a1, const char *a2, ...)
{
  return [a1 hf_hasSeenOnboardingWelcomeView];
}

id objc_msgSend_hf_homeForName_(void *a1, const char *a2, ...)
{
  return [a1 hf_homeForName:];
}

id objc_msgSend_hf_homeForURL_(void *a1, const char *a2, ...)
{
  return [a1 hf_homeForURL:];
}

id objc_msgSend_hf_homeFutureForName_(void *a1, const char *a2, ...)
{
  return [a1 hf_homeFutureForName:];
}

id objc_msgSend_hf_homeHasMigratedIntoHomeApp(void *a1, const char *a2, ...)
{
  return [a1 hf_homeHasMigratedIntoHomeApp];
}

id objc_msgSend_hf_homePods(void *a1, const char *a2, ...)
{
  return [a1 hf_homePods];
}

id objc_msgSend_hf_homeWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 hf_homeWithIdentifier:];
}

id objc_msgSend_hf_isBridge(void *a1, const char *a2, ...)
{
  return [a1 hf_isBridge];
}

id objc_msgSend_hf_isCamera(void *a1, const char *a2, ...)
{
  return [a1 hf_isCamera];
}

id objc_msgSend_hf_isCurrentLocationHome(void *a1, const char *a2, ...)
{
  return [a1 hf_isCurrentLocationHome];
}

id objc_msgSend_hf_isHomeEnergyHomeEmpty(void *a1, const char *a2, ...)
{
  return [a1 hf_isHomeEnergyHomeEmpty];
}

id objc_msgSend_hf_isLegacyService(void *a1, const char *a2, ...)
{
  return [a1 hf_isLegacyService];
}

id objc_msgSend_hf_isOnForContextType_(void *a1, const char *a2, ...)
{
  return [a1 hf_isOnForContextType:];
}

id objc_msgSend_hf_keyColor(void *a1, const char *a2, ...)
{
  return [a1 hf_keyColor];
}

id objc_msgSend_hf_lastNewFeaturesViewVersionSeen(void *a1, const char *a2, ...)
{
  return [a1 hf_lastNewFeaturesViewVersionSeen];
}

id objc_msgSend_hf_locationFromURL_(void *a1, const char *a2, ...)
{
  return [a1 hf_locationFromURL:];
}

id objc_msgSend_hf_minimumDescription(void *a1, const char *a2, ...)
{
  return [a1 hf_minimumDescription];
}

id objc_msgSend_hf_minimumDescriptionsOfHomes_(void *a1, const char *a2, ...)
{
  return [a1 hf_minimumDescriptionsOfHomes];
}

id objc_msgSend_hf_openiCloudKeychainPreferences(void *a1, const char *a2, ...)
{
  return [a1 hf_openiCloudKeychainPreferences];
}

id objc_msgSend_hf_openiCloudPreferencesURL(void *a1, const char *a2, ...)
{
  return [a1 hf_openiCloudPreferencesURL];
}

id objc_msgSend_hf_orderedHomes(void *a1, const char *a2, ...)
{
  return [a1 hf_orderedHomes];
}

id objc_msgSend_hf_owningBridgeAccessory(void *a1, const char *a2, ...)
{
  return [a1 hf_owningBridgeAccessory];
}

id objc_msgSend_hf_parentRoom(void *a1, const char *a2, ...)
{
  return [a1 hf_parentRoom];
}

id objc_msgSend_hf_personManagerWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 hf_personManagerWithIdentifier:];
}

id objc_msgSend_hf_prettyDescription(void *a1, const char *a2, ...)
{
  return [a1 hf_prettyDescription];
}

id objc_msgSend_hf_roomWithName_(void *a1, const char *a2, ...)
{
  return [a1 hf_roomWithName:];
}

id objc_msgSend_hf_setHasSeenOnboardingWelcomeView_(void *a1, const char *a2, ...)
{
  return [a1 hf_setHasSeenOnboardingWelcomeView:];
}

id objc_msgSend_hf_setHomeHasMigratedForRedesign_(void *a1, const char *a2, ...)
{
  return [a1 hf_setHomeHasMigratedForRedesign:];
}

id objc_msgSend_hf_setHomeHasMigratedServicesToAccessories_(void *a1, const char *a2, ...)
{
  return [a1 hf_setHomeHasMigratedServicesToAccessories:];
}

id objc_msgSend_hf_setHomeHasOnboardedApplicationData_(void *a1, const char *a2, ...)
{
  return [a1 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:];
}

id objc_msgSend_hf_setOrderedHomes_(void *a1, const char *a2, ...)
{
  return [a1 hf_setOrderedHomes:];
}

id objc_msgSend_hf_setSeenNewFeaturesViewVersion_(void *a1, const char *a2, ...)
{
  return [a1 hf_setSeenNewFeaturesViewVersion:];
}

id objc_msgSend_hf_setSelectedRoom_(void *a1, const char *a2, ...)
{
  return [a1 hf_setSelectedRoom:];
}

id objc_msgSend_hf_setTemporaryEnergyLocation_(void *a1, const char *a2, ...)
{
  return [a1 hf_setTemporaryEnergyLocation:];
}

id objc_msgSend_hf_sharedCalendar(void *a1, const char *a2, ...)
{
  return [a1 hf_sharedCalendar];
}

id objc_msgSend_hf_shouldBlockCurrentUserFromHome(void *a1, const char *a2, ...)
{
  return [a1 hf_shouldBlockCurrentUserFromHome];
}

id objc_msgSend_hf_shouldBlockCurrentUserFromHomeForRoarUpgrade(void *a1, const char *a2, ...)
{
  return [a1 hf_shouldBlockCurrentUserFromHomeForRoarUpgrade];
}

id objc_msgSend_hf_unitaryCameraProfile(void *a1, const char *a2, ...)
{
  return [a1 hf_unitaryCameraProfile];
}

id objc_msgSend_hf_userCanCreateTrigger(void *a1, const char *a2, ...)
{
  return [a1 hf_userCanCreateTrigger];
}

id objc_msgSend_hf_userIsAllowedToCreateTrigger(void *a1, const char *a2, ...)
{
  return [a1 hf_userIsAllowedToCreateTrigger];
}

id objc_msgSend_hh2MigrationFailedError(void *a1, const char *a2, ...)
{
  return _[a1 hh2MigrationFailedError];
}

id objc_msgSend_hmf_isEqualToUUID_(void *a1, const char *a2, ...)
{
  return [a1 hmf_isEqualToUUID:];
}

id objc_msgSend_home(void *a1, const char *a2, ...)
{
  return _[a1 home];
}

id objc_msgSend_home_onboardAllFeaturesFromPresentingViewController_usageOptions_(void *a1, const char *a2, ...)
{
  return [a1 home:onboardAllFeaturesFromPresentingViewController:usageOptions:];
}

id objc_msgSend_home_onboardHomeHub2FromPresentingViewController_devices_usageOptions_(void *a1, const char *a2, ...)
{
  return [a1 home:onboardHomeHub2FromPresentingViewController:devices:usageOptions:];
}

id objc_msgSend_home_onboardIdentifyVoiceFromPresentingViewController_usageOptions_(void *a1, const char *a2, ...)
{
  return [a1 home:onboardIdentifyVoiceFromPresentingViewController:usageOptions:];
}

id objc_msgSend_home_onboardPersonalRequestsFromPresentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 home:onboardPersonalRequestsFromPresentingViewController:];
}

id objc_msgSend_homeBuilder(void *a1, const char *a2, ...)
{
  return _[a1 homeBuilder];
}

id objc_msgSend_homeFuture(void *a1, const char *a2, ...)
{
  return _[a1 homeFuture];
}

id objc_msgSend_homeFutureWithUser_(void *a1, const char *a2, ...)
{
  return [a1 homeFutureWithUser:];
}

id objc_msgSend_homeInvitationTitle(void *a1, const char *a2, ...)
{
  return _[a1 homeInvitationTitle];
}

id objc_msgSend_homeKitObjectFuture(void *a1, const char *a2, ...)
{
  return _[a1 homeKitObjectFuture];
}

id objc_msgSend_homeManager(void *a1, const char *a2, ...)
{
  return _[a1 homeManager];
}

id objc_msgSend_homeName(void *a1, const char *a2, ...)
{
  return _[a1 homeName];
}

id objc_msgSend_homeNeedsMigration_(void *a1, const char *a2, ...)
{
  return [a1 homeNeedsMigration:];
}

id objc_msgSend_homePodProfileInstaller(void *a1, const char *a2, ...)
{
  return _[a1 homePodProfileInstaller];
}

id objc_msgSend_homeScreenQuickActionController(void *a1, const char *a2, ...)
{
  return _[a1 homeScreenQuickActionController];
}

id objc_msgSend_homeUUID(void *a1, const char *a2, ...)
{
  return _[a1 homeUUID];
}

id objc_msgSend_homes(void *a1, const char *a2, ...)
{
  return _[a1 homes];
}

id objc_msgSend_homesAwaitingPendingInvitations(void *a1, const char *a2, ...)
{
  return _[a1 homesAwaitingPendingInvitations];
}

id objc_msgSend_horizontalConstraints(void *a1, const char *a2, ...)
{
  return _[a1 horizontalConstraints];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_hu_dismissViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 hu_dismissViewControllerAnimated:];
}

id objc_msgSend_hu_locationArrowTemplate(void *a1, const char *a2, ...)
{
  return [a1 hu_locationArrowTemplate];
}

id objc_msgSend_hu_performanceTestReadyFuture(void *a1, const char *a2, ...)
{
  return [a1 hu_performanceTestReadyFuture];
}

id objc_msgSend_hu_preloadContent(void *a1, const char *a2, ...)
{
  return [a1 hu_preloadContent];
}

id objc_msgSend_hu_presentPreloadableViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hu_presentPreloadableViewController:animated:");
}

id objc_msgSend_hu_pushPreloadableViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hu_pushPreloadableViewController:animated:");
}

id objc_msgSend_iCloudURLIsReachable(void *a1, const char *a2, ...)
{
  return _[a1 iCloudURLIsReachable];
}

id objc_msgSend_iconWithType_(void *a1, const char *a2, ...)
{
  return [a1 iconWithType:];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return [a1 imageWithRenderingMode:];
}

id objc_msgSend_imageWithTintColor_(void *a1, const char *a2, ...)
{
  return [a1 imageWithTintColor:];
}

id objc_msgSend_incomingHomeInvitations(void *a1, const char *a2, ...)
{
  return _[a1 incomingHomeInvitations];
}

id objc_msgSend_incomingInvitationDelegate(void *a1, const char *a2, ...)
{
  return _[a1 incomingInvitationDelegate];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObjectPassingTest:];
}

id objc_msgSend_indexPathForItem_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForItem:inSection:];
}

id objc_msgSend_indexPathForItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForItemIdentifier:];
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRow:inSection:];
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return [a1 indexSetWithIndex:];
}

id objc_msgSend_indexSetWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return [a1 indexSetWithIndexesInRange:];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_initWithActionSetBuilder_mode_(void *a1, const char *a2, ...)
{
  return [a1 initWithActionSetBuilder:mode:];
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityIndicatorStyle:];
}

id objc_msgSend_initWithAltDSID_(void *a1, const char *a2, ...)
{
  return [a1 initWithAltDSID:];
}

id objc_msgSend_initWithApplication_(void *a1, const char *a2, ...)
{
  return [a1 initWithApplication:];
}

id objc_msgSend_initWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return [a1 initWithArrangedSubviews:];
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithBarButtonSystemItem:target:action:];
}

id objc_msgSend_initWithButtonDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 initWithButtonDescriptors:];
}

id objc_msgSend_initWithCollectionType_namedSectionTitle_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithCollectionType:namedSectionTitle:delegate:];
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return [a1 initWithContext:];
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return [a1 initWithCustomView:];
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:];
}

id objc_msgSend_initWithDelegate_forHome_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:forHome:];
}

id objc_msgSend_initWithDelegate_invitation_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:invitation:];
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 initWithDictionary:];
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return [a1 initWithEffect:];
}

id objc_msgSend_initWithExecutionEnvironment_dispatcher_(void *a1, const char *a2, ...)
{
  return [a1 initWithExecutionEnvironment:dispatcher:];
}

id objc_msgSend_initWithExistingObject_inHome_(void *a1, const char *a2, ...)
{
  return [a1 initWithExistingObject:inHome:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithFrame_configuration_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:configuration:];
}

id objc_msgSend_initWithFrame_contentMode_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:contentMode:];
}

id objc_msgSend_initWithFrame_withDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:withDelegate:];
}

id objc_msgSend_initWithGuestAccessSchedule_tintColor_shouldDisplayAlwaysAllowedSchedule_scheduleBackgroundColor_listRowBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 initWithGuestAccessSchedule:tintColor:shouldDisplayAlwaysAllowedSchedule:scheduleBackgroundColor:listRowBackgroundColor:];
}

id objc_msgSend_initWithHome_(void *a1, const char *a2, ...)
{
  return [a1 initWithHome:];
}

id objc_msgSend_initWithHome_actionSetItemStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithHome:actionSetItemStyle:];
}

id objc_msgSend_initWithHome_serviceTypes_(void *a1, const char *a2, ...)
{
  return [a1 initWithHome:serviceTypes:];
}

id objc_msgSend_initWithHome_user_nameStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithHome:user:nameStyle:];
}

id objc_msgSend_initWithHomeBuilder_presentationDelegate_addLocationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithHomeBuilder:presentationDelegate:addLocationDelegate:];
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier];
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:];
}

id objc_msgSend_initWithImageData_dataType_isTemplate_(void *a1, const char *a2, ...)
{
  return [a1 initWithImageData:dataType:isTemplate:];
}

id objc_msgSend_initWithIncomingInvitation_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithIncomingInvitation:delegate:];
}

id objc_msgSend_initWithIncomingInvitation_invitationHelper_incomingInvitationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithIncomingInvitation:invitationHelper:incomingInvitationDelegate:];
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return [a1 initWithItems:];
}

id objc_msgSend_initWithLocalizationDictionary_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocalizationDictionary:];
}

id objc_msgSend_initWithMACAddressString_(void *a1, const char *a2, ...)
{
  return [a1 initWithMACAddressString:];
}

id objc_msgSend_initWithMode_(void *a1, const char *a2, ...)
{
  return [a1 initWithMode:];
}

id objc_msgSend_initWithName_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:delegate:];
}

id objc_msgSend_initWithNavigationBarClass_toolbarClass_(void *a1, const char *a2, ...)
{
  return [a1 initWithNavigationBarClass:toolbarClass:];
}

id objc_msgSend_initWithNavigator_(void *a1, const char *a2, ...)
{
  return [a1 initWithNavigator:];
}

id objc_msgSend_initWithOnboardingStates_(void *a1, const char *a2, ...)
{
  return [a1 initWithOnboardingStates:];
}

id objc_msgSend_initWithPinCodeManager_home_(void *a1, const char *a2, ...)
{
  return [a1 initWithPinCodeManager:home:];
}

id objc_msgSend_initWithPresentedViewController_presentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithPresentedViewController:presentingViewController:];
}

id objc_msgSend_initWithProfileDataFromSettingsJump_(void *a1, const char *a2, ...)
{
  return [a1 initWithProfileDataFromSettingsJump:];
}

id objc_msgSend_initWithResultsBlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithResultsBlock:];
}

id objc_msgSend_initWithRoomBuilder_presentationDelegate_addRoomDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithRoomBuilder:presentationDelegate:addRoomDelegate:];
}

id objc_msgSend_initWithRootController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootController:];
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootViewController:];
}

id objc_msgSend_initWithSBSApplicationShortcutIcon_(void *a1, const char *a2, ...)
{
  return [a1 initWithSBSApplicationShortcutIcon:];
}

id objc_msgSend_initWithServiceType_home_accessory_presentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithServiceType:home:accessory:presentingViewController:];
}

id objc_msgSend_initWithSideBarViewController_sideBarItemManager_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithSideBarViewController:sideBarItemManager:delegate:];
}

id objc_msgSend_initWithStartDate_endDate_(void *a1, const char *a2, ...)
{
  return [a1 initWithStartDate:endDate:];
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:];
}

id objc_msgSend_initWithStyle_title_description_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:title:description:];
}

id objc_msgSend_initWithSystemImageNamed_configuration_(void *a1, const char *a2, ...)
{
  return [a1 initWithSystemImageNamed:configuration:];
}

id objc_msgSend_initWithTableView_cellProvider_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithTableView:cellProvider:delegate:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithType_assetIdentifier_cropInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:assetIdentifier:cropInfo:];
}

id objc_msgSend_initWithType_localizedTitle_localizedSubtitle_icon_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:localizedTitle:localizedSubtitle:icon:userInfo:];
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:];
}

id objc_msgSend_initWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:resolvingAgainstBaseURL:];
}

id objc_msgSend_initWithURLString_(void *a1, const char *a2, ...)
{
  return [a1 initWithURLString:];
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return [a1 initWithUUIDString:];
}

id objc_msgSend_initWithWallpaper_image_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithWallpaper:image:delegate:];
}

id objc_msgSend_initialLoadCompleted(void *a1, const char *a2, ...)
{
  return _[a1 initialLoadCompleted];
}

id objc_msgSend_initialSetupStateController(void *a1, const char *a2, ...)
{
  return _[a1 initialSetupStateController];
}

id objc_msgSend_initialViewControllerForAddingSceneWithPresentationDelegate_home_(void *a1, const char *a2, ...)
{
  return [a1 initialViewControllerForAddingSceneWithPresentationDelegate:home:];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertObject:atIndex:];
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 insertRowsAtIndexPaths:withRowAnimation:];
}

id objc_msgSend_insertSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSections:withRowAnimation:");
}

id objc_msgSend_insetSize(void *a1, const char *a2, ...)
{
  return _[a1 insetSize];
}

id objc_msgSend_installManagedConfigurationProfileWithData_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 installManagedConfigurationProfileWithData:completionHandler:];
}

id objc_msgSend_installProfileVCCompletionBlock(void *a1, const char *a2, ...)
{
  return _[a1 installProfileVCCompletionBlock];
}

id objc_msgSend_installProfileViewController(void *a1, const char *a2, ...)
{
  return _[a1 installProfileViewController];
}

id objc_msgSend_instancesRespondToSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instancesRespondToSelector:");
}

id objc_msgSend_instructionsItem(void *a1, const char *a2, ...)
{
  return _[a1 instructionsItem];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_intent(void *a1, const char *a2, ...)
{
  return _[a1 intent];
}

id objc_msgSend_intentHandlerWithNavigator_(void *a1, const char *a2, ...)
{
  return [a1 intentHandlerWithNavigator:];
}

id objc_msgSend_interaction(void *a1, const char *a2, ...)
{
  return _[a1 interaction];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invitation(void *a1, const char *a2, ...)
{
  return _[a1 invitation];
}

id objc_msgSend_invitationHelper(void *a1, const char *a2, ...)
{
  return _[a1 invitationHelper];
}

id objc_msgSend_invitationResponseControllersByHomeUUID(void *a1, const char *a2, ...)
{
  return _[a1 invitationResponseControllersByHomeUUID];
}

id objc_msgSend_invitationState(void *a1, const char *a2, ...)
{
  return _[a1 invitationState];
}

id objc_msgSend_invitationViewController(void *a1, const char *a2, ...)
{
  return _[a1 invitationViewController];
}

id objc_msgSend_invitationViewControllerDidAcceptInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidAcceptInvitation:");
}

id objc_msgSend_invitationViewControllerDidDecideLaterInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidDecideLaterInvitation:");
}

id objc_msgSend_invitationViewControllerDidDecideLaterInvitation_error_(void *a1, const char *a2, ...)
{
  return [a1 invitationViewControllerDidDecideLaterInvitation:error:];
}

id objc_msgSend_invitationViewControllerDidDeclineInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidDeclineInvitation:");
}

id objc_msgSend_invitationViewControllerDidIgnoreInvitation_(void *a1, const char *a2, ...)
{
  return [a1 invitationViewControllerDidIgnoreInvitation:];
}

id objc_msgSend_invitationViewControllerDidReportJunkInvitation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invitationViewControllerDidReportJunkInvitation:");
}

id objc_msgSend_inviterContact(void *a1, const char *a2, ...)
{
  return _[a1 inviterContact];
}

id objc_msgSend_isAMac(void *a1, const char *a2, ...)
{
  return _[a1 isAMac];
}

id objc_msgSend_isAVisionPro(void *a1, const char *a2, ...)
{
  return _[a1 isAVisionPro];
}

id objc_msgSend_isAnIPad(void *a1, const char *a2, ...)
{
  return _[a1 isAnIPad];
}

id objc_msgSend_isBeingPresented(void *a1, const char *a2, ...)
{
  return _[a1 isBeingPresented];
}

id objc_msgSend_isBridged(void *a1, const char *a2, ...)
{
  return _[a1 isBridged];
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 isCollapsed];
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return [a1 isDescendantOfView:];
}

id objc_msgSend_isDisplayingRestrictedGuestIncomingInvitationFlow(void *a1, const char *a2, ...)
{
  return _[a1 isDisplayingRestrictedGuestIncomingInvitationFlow];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _[a1 isFinished];
}

id objc_msgSend_isHomeManagerStatusReady_(void *a1, const char *a2, ...)
{
  return [a1 isHomeManagerStatusReady:];
}

id objc_msgSend_isInstallNavigationControllerPresented(void *a1, const char *a2, ...)
{
  return _[a1 isInstallNavigationControllerPresented];
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return _[a1 isInternalInstall];
}

id objc_msgSend_isInternalTest(void *a1, const char *a2, ...)
{
  return _[a1 isInternalTest];
}

id objc_msgSend_isInviteeRestrictedGuest(void *a1, const char *a2, ...)
{
  return _[a1 isInviteeRestrictedGuest];
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return _[a1 isLoading];
}

id objc_msgSend_isPressDemoModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isPressDemoModeEnabled];
}

id objc_msgSend_isProfileInstallationUIAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isProfileInstallationUIAllowed];
}

id objc_msgSend_isProfileUIInstallationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isProfileUIInstallationAllowed];
}

id objc_msgSend_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 isRunningInStoreDemoMode];
}

id objc_msgSend_isSetupPayloadURL_(void *a1, const char *a2, ...)
{
  return [a1 isSetupPayloadURL];
}

id objc_msgSend_isSourceTypeAvailable_(void *a1, const char *a2, ...)
{
  return [a1 isSourceTypeAvailable:];
}

id objc_msgSend_isUnknownContact(void *a1, const char *a2, ...)
{
  return _[a1 isUnknownContact];
}

id objc_msgSend_isViewVisible(void *a1, const char *a2, ...)
{
  return _[a1 isViewVisible];
}

id objc_msgSend_itemIdentifierForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 itemIdentifierForIndexPath:];
}

id objc_msgSend_itemIdentifierToBackgroundTaskIdentifierMap(void *a1, const char *a2, ...)
{
  return _[a1 itemIdentifierToBackgroundTaskIdentifierMap];
}

id objc_msgSend_itemManager(void *a1, const char *a2, ...)
{
  return _[a1 itemManager];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_joinedHomeVC(void *a1, const char *a2, ...)
{
  return _[a1 joinedHomeVC];
}

id objc_msgSend_joiningHomeLabel(void *a1, const char *a2, ...)
{
  return _[a1 joiningHomeLabel];
}

id objc_msgSend_joiningHomeVC(void *a1, const char *a2, ...)
{
  return _[a1 joiningHomeVC];
}

id objc_msgSend_knownContactImageConstraints(void *a1, const char *a2, ...)
{
  return _[a1 knownContactImageConstraints];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_latestResults(void *a1, const char *a2, ...)
{
  return _[a1 latestResults];
}

id objc_msgSend_launchHomeUIServiceToResumeSetupWithUserInfo_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 launchHomeUIServiceToResumeSetupWithUserInfo:completionHandler:];
}

id objc_msgSend_launchServiceWithContext_(void *a1, const char *a2, ...)
{
  return [a1 launchServiceWithContext:];
}

id objc_msgSend_launchedToTest(void *a1, const char *a2, ...)
{
  return _[a1 launchedToTest];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layoutConstraints(void *a1, const char *a2, ...)
{
  return _[a1 layoutConstraints];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _[a1 layoutMarginsGuide];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_leftBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 leftBarButtonItem];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lightAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _[a1 lightAccessoryTypeGroup];
}

id objc_msgSend_linkButton(void *a1, const char *a2, ...)
{
  return _[a1 linkButton];
}

id objc_msgSend_loadLoadingViewController(void *a1, const char *a2, ...)
{
  return _[a1 loadLoadingViewController];
}

id objc_msgSend_loadRequest_(void *a1, const char *a2, ...)
{
  return [a1 loadRequest:];
}

id objc_msgSend_loadSideBarWithDisplayModeChangeAllowed_(void *a1, const char *a2, ...)
{
  return [a1 loadSideBarWithDisplayModeChangeAllowed:];
}

id objc_msgSend_loadTabsFuture(void *a1, const char *a2, ...)
{
  return _[a1 loadTabsFuture];
}

id objc_msgSend_loadViewIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadViewIfNeeded];
}

id objc_msgSend_localizedCaseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return [a1 localizedCaseInsensitiveCompare:];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_locationIcon(void *a1, const char *a2, ...)
{
  return _[a1 locationIcon];
}

id objc_msgSend_locationListViewControllerDidFinish_(void *a1, const char *a2, ...)
{
  return [a1 locationListViewControllerDidFinish:];
}

id objc_msgSend_locationSensingAvailable(void *a1, const char *a2, ...)
{
  return _[a1 locationSensingAvailable];
}

id objc_msgSend_locationSensingAvailableFuture(void *a1, const char *a2, ...)
{
  return _[a1 locationSensingAvailableFuture];
}

id objc_msgSend_lockOnboardingTypeForString_(void *a1, const char *a2, ...)
{
  return [a1 lockOnboardingTypeForString:];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_mainActionButton(void *a1, const char *a2, ...)
{
  return _[a1 mainActionButton];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainScheduler(void *a1, const char *a2, ...)
{
  return _[a1 mainScheduler];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mainTabBarController(void *a1, const char *a2, ...)
{
  return _[a1 mainTabBarController];
}

id objc_msgSend_mainThreadScheduler(void *a1, const char *a2, ...)
{
  return _[a1 mainThreadScheduler];
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyAndVisible];
}

id objc_msgSend_mediaAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _[a1 mediaAccessoryTypeGroup];
}

id objc_msgSend_migrateServicesToAccessory(void *a1, const char *a2, ...)
{
  return _[a1 migrateServicesToAccessory];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_na_any_(void *a1, const char *a2, ...)
{
  return [a1 na_any:];
}

id objc_msgSend_na_each_(void *a1, const char *a2, ...)
{
  return [a1 na_each:];
}

id objc_msgSend_na_filter_(void *a1, const char *a2, ...)
{
  return [a1 na_filter:];
}

id objc_msgSend_na_firstKeyPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 na_firstKeyPassingTest:];
}

id objc_msgSend_na_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 na_firstObjectPassingTest:];
}

id objc_msgSend_na_flatMap_(void *a1, const char *a2, ...)
{
  return [a1 na_flatMap:];
}

id objc_msgSend_na_genericError(void *a1, const char *a2, ...)
{
  return [a1 na_genericError];
}

id objc_msgSend_na_map_(void *a1, const char *a2, ...)
{
  return [a1 na_map:];
}

id objc_msgSend_na_safeAddObject_(void *a1, const char *a2, ...)
{
  return [a1 na_safeAddObject:];
}

id objc_msgSend_na_safeAddObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 na_safeAddObjectsFromArray:];
}

id objc_msgSend_na_safeSetObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 na_safeSetObject:forKey:];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameCell(void *a1, const char *a2, ...)
{
  return _[a1 nameCell];
}

id objc_msgSend_naui_isDescendantOfViewController_(void *a1, const char *a2, ...)
{
  return [a1 naui_isDescendantOfViewController:];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _[a1 navigationBar];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationControllerFromMapWithClass_(void *a1, const char *a2, ...)
{
  return [a1 navigationControllerFromMapWithClass];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_navigationState(void *a1, const char *a2, ...)
{
  return _[a1 navigationState];
}

id objc_msgSend_navigator(void *a1, const char *a2, ...)
{
  return _[a1 navigator];
}

id objc_msgSend_navigatorWithRootViewController_baseController_(void *a1, const char *a2, ...)
{
  return [a1 navigatorWithRootViewController:baseController:];
}

id objc_msgSend_needsReboot(void *a1, const char *a2, ...)
{
  return _[a1 needsReboot];
}

id objc_msgSend_networkIconView(void *a1, const char *a2, ...)
{
  return _[a1 networkIconView];
}

id objc_msgSend_networkPathMonitor(void *a1, const char *a2, ...)
{
  return _[a1 networkPathMonitor];
}

id objc_msgSend_networkPathMonitorDispatchQueue(void *a1, const char *a2, ...)
{
  return _[a1 networkPathMonitorDispatchQueue];
}

id objc_msgSend_newFeaturesOnboardingVersion(void *a1, const char *a2, ...)
{
  return _[a1 newFeaturesOnboardingVersion];
}

id objc_msgSend_nextViewController(void *a1, const char *a2, ...)
{
  return _[a1 nextViewController];
}

id objc_msgSend_numberFromString_(void *a1, const char *a2, ...)
{
  return [a1 numberFromString:];
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return [a1 numberOfRowsInSection:];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return [a1 numberWithFloat:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndex:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_onboardingCompleteFuture(void *a1, const char *a2, ...)
{
  return _[a1 onboardingCompleteFuture];
}

id objc_msgSend_onboardingDelegate(void *a1, const char *a2, ...)
{
  return _[a1 onboardingDelegate];
}

id objc_msgSend_onboardingFlowClass(void *a1, const char *a2, ...)
{
  return _[a1 onboardingFlowClass];
}

id objc_msgSend_onboardingNavigationController_acceptedInvitationAndWaitingForHomeToLand_(void *a1, const char *a2, ...)
{
  return [a1 onboardingNavigationController:acceptedInvitationAndWaitingForHomeToLand:];
}

id objc_msgSend_onboardingNavigationController_didAcceptInvitation_(void *a1, const char *a2, ...)
{
  return [a1 onboardingNavigationController:didAcceptInvitation:];
}

id objc_msgSend_onboardingNavigationController_didDecideLaterInvitation_error_(void *a1, const char *a2, ...)
{
  return [a1 onboardingNavigationController:didDecideLaterInvitation:error:];
}

id objc_msgSend_onboardingNavigationController_didDeclineInvitation_(void *a1, const char *a2, ...)
{
  return [a1 onboardingNavigationController:didDeclineInvitation:];
}

id objc_msgSend_onboardingNavigationController_didIgnoreInvitation_(void *a1, const char *a2, ...)
{
  return [a1 onboardingNavigationController:didIgnoreInvitation:];
}

id objc_msgSend_onboardingNavigationController_didReportJunkInvitation_(void *a1, const char *a2, ...)
{
  return [a1 onboardingNavigationController:didReportJunkInvitation:];
}

id objc_msgSend_onboardingNavigationControllerDidFinish_(void *a1, const char *a2, ...)
{
  return [a1 onboardingNavigationControllerDidFinish:];
}

id objc_msgSend_onboardingStates(void *a1, const char *a2, ...)
{
  return _[a1 onboardingStates];
}

id objc_msgSend_onboardingStatesForHome_(void *a1, const char *a2, ...)
{
  return [a1 onboardingStatesForHome:];
}

id objc_msgSend_onboardingStatesForHome_pendingHomeIDsFromInvitations_(void *a1, const char *a2, ...)
{
  return [a1 onboardingStatesForHome:pendingHomeIDsFromInvitations:];
}

id objc_msgSend_onboardingStatesForRestrictedGuestInvitation_(void *a1, const char *a2, ...)
{
  return [a1 onboardingStatesForRestrictedGuestInvitation];
}

id objc_msgSend_onboardingViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 onboardingViewControllers];
}

id objc_msgSend_openLink_(void *a1, const char *a2, ...)
{
  return [a1 openLink:];
}

id objc_msgSend_openSenderURL(void *a1, const char *a2, ...)
{
  return _[a1 openSenderURL];
}

id objc_msgSend_openSensitiveURL_withOptions_error_(void *a1, const char *a2, ...)
{
  return [a1 openSensitiveURL:withOptions:error:];
}

id objc_msgSend_openURL_(void *a1, const char *a2, ...)
{
  return [a1 openURL:];
}

id objc_msgSend_openURL_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 openURL:withCompletionHandler:];
}

id objc_msgSend_openURL_withOptions_error_(void *a1, const char *a2, ...)
{
  return [a1 openURL:withOptions:error:];
}

id objc_msgSend_operatingSystemVersion(void *a1, const char *a2, ...)
{
  return _[a1 operatingSystemVersion];
}

id objc_msgSend_orderedTabItems(void *a1, const char *a2, ...)
{
  return _[a1 orderedTabItems];
}

id objc_msgSend_originalImage(void *a1, const char *a2, ...)
{
  return _[a1 originalImage];
}

id objc_msgSend_outcomeWithResults_(void *a1, const char *a2, ...)
{
  return [a1 outcomeWithResults:];
}

id objc_msgSend_panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 panGestureRecognizer];
}

id objc_msgSend_parseURLForThemeType_(void *a1, const char *a2, ...)
{
  return [a1 parseURLForThemeType:];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _[a1 pathComponents];
}

id objc_msgSend_pendingConfigurationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 pendingConfigurationIdentifier];
}

id objc_msgSend_pendingHomeIDsFromInvitations(void *a1, const char *a2, ...)
{
  return _[a1 pendingHomeIDsFromInvitations];
}

id objc_msgSend_pendingInvitations(void *a1, const char *a2, ...)
{
  return _[a1 pendingInvitations];
}

id objc_msgSend_performActionForShortcutItem_navigator_(void *a1, const char *a2, ...)
{
  return [a1 performActionForShortcutItem:navigator:];
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return [a1 performBlock:];
}

id objc_msgSend_performDeviceToDeviceEncryptionStateRepairWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 performDeviceToDeviceEncryptionStateRepairWithCompletion:];
}

id objc_msgSend_performMigrationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 performMigrationIfNeeded];
}

id objc_msgSend_performMigrationSuccessTasks(void *a1, const char *a2, ...)
{
  return _[a1 performMigrationSuccessTasks];
}

id objc_msgSend_performWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 performWithOptions:];
}

id objc_msgSend_performWithQualityOfService_block_(void *a1, const char *a2, ...)
{
  return [a1 performWithQualityOfService:];
}

id objc_msgSend_personManager(void *a1, const char *a2, ...)
{
  return _[a1 personManager];
}

id objc_msgSend_pinCodeManagerForHome_(void *a1, const char *a2, ...)
{
  return [a1 pinCodeManagerForHome:];
}

id objc_msgSend_pinchGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 pinchGestureRecognizer];
}

id objc_msgSend_pocketOptions(void *a1, const char *a2, ...)
{
  return _[a1 pocketOptions];
}

id objc_msgSend_pocketViewController(void *a1, const char *a2, ...)
{
  return _[a1 pocketViewController];
}

id objc_msgSend_popProfileDataFromHeadOfInstallationQueue(void *a1, const char *a2, ...)
{
  return _[a1 popProfileDataFromHeadOfInstallationQueue];
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popToRootViewControllerAnimated:];
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 popToViewController:animated:];
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_populateWallpaper_withAnimation_onlyIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 populateWallpaper:withAnimation:onlyIfNeeded:];
}

id objc_msgSend_ppt_cameraController(void *a1, const char *a2, ...)
{
  return [a1 ppt_cameraController];
}

id objc_msgSend_ppt_clipCollectionView(void *a1, const char *a2, ...)
{
  return [a1 ppt_clipCollectionView];
}

id objc_msgSend_ppt_clipsLoadedFuture(void *a1, const char *a2, ...)
{
  return [a1 ppt_clipsLoadedFuture];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithFormat:];
}

id objc_msgSend_preferencesButton(void *a1, const char *a2, ...)
{
  return _[a1 preferencesButton];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_addingSymbolicTraits_options_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredFontForTextStyle_traits_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preheatCache(void *a1, const char *a2, ...)
{
  return _[a1 preheatCache];
}

id objc_msgSend_preload_(void *a1, const char *a2, ...)
{
  return [a1 preload:];
}

id objc_msgSend_preloadTabIcons(void *a1, const char *a2, ...)
{
  return _[a1 preloadTabIcons];
}

id objc_msgSend_presentBridgeDetailViewForAccessory_withHome_(void *a1, const char *a2, ...)
{
  return [a1 presentBridgeDetailViewForAccessory:withHome:];
}

id objc_msgSend_presentBridgeSettings_(void *a1, const char *a2, ...)
{
  return [a1 presentBridgeSettings:];
}

id objc_msgSend_presentCameraProfile_forCameraClip_animated_(void *a1, const char *a2, ...)
{
  return [a1 presentCameraProfile:forCameraClip:animated:];
}

id objc_msgSend_presentCameraProfile_startDate_endDate_animated_(void *a1, const char *a2, ...)
{
  return [a1 presentCameraProfile:startDate:endDate:animated:];
}

id objc_msgSend_presentConfirmationAlertForExecutingTriggerWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 presentConfirmationAlertForExecutingTriggerWithIdentifier:];
}

id objc_msgSend_presentDefaultMediaServiceSettings_(void *a1, const char *a2, ...)
{
  return [a1 presentDefaultMediaServiceSettings:];
}

id objc_msgSend_presentFeedbackFlowForCameraClip_fromProfile_(void *a1, const char *a2, ...)
{
  return [a1 presentFeedbackFlowForCameraClip:fromProfile:];
}

id objc_msgSend_presentItemWithUUID_destination_secondaryDestination_animated_(void *a1, const char *a2, ...)
{
  return [a1 presentItemWithUUID:destination:secondaryDestination:animated:];
}

id objc_msgSend_presentModalDiscoverWebViewControllerWithURLString_(void *a1, const char *a2, ...)
{
  return [a1 presentModalDiscoverWebViewControllerWithURLString:];
}

id objc_msgSend_presentNetworkSettings_(void *a1, const char *a2, ...)
{
  return [a1 presentNetworkSettings:];
}

id objc_msgSend_presentNotificationSettingsForTopic_animated_(void *a1, const char *a2, ...)
{
  return [a1 presentNotificationSettingsForTopic:animated:];
}

id objc_msgSend_presentPersonalRequestsSettings_(void *a1, const char *a2, ...)
{
  return [a1 presentPersonalRequestsSettings:];
}

id objc_msgSend_presentRoomSettingsForRoom_(void *a1, const char *a2, ...)
{
  return [a1 presentRoomSettingsForRoom:];
}

id objc_msgSend_presentSoftwareUpdate_(void *a1, const char *a2, ...)
{
  return [a1 presentSoftwareUpdate];
}

id objc_msgSend_presentStatusDetailsForStatusItemClass_animated_(void *a1, const char *a2, ...)
{
  return [a1 presentStatusDetailsForStatusItemClass:animated:];
}

id objc_msgSend_presentUserLockSettings_(void *a1, const char *a2, ...)
{
  return [a1 presentUserLockSettings:];
}

id objc_msgSend_presentUserViewController_(void *a1, const char *a2, ...)
{
  return [a1 presentUserViewController:];
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentWallpaperEditingViewControllerWithImage_wallpaper_(void *a1, const char *a2, ...)
{
  return [a1 presentWallpaperEditingViewControllerWithImage:wallpaper:];
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _[a1 presentationController];
}

id objc_msgSend_presentationState(void *a1, const char *a2, ...)
{
  return _[a1 presentationState];
}

id objc_msgSend_presentedDataSyncingController(void *a1, const char *a2, ...)
{
  return _[a1 presentedDataSyncingController];
}

id objc_msgSend_presentedOnboardingController(void *a1, const char *a2, ...)
{
  return _[a1 presentedOnboardingController];
}

id objc_msgSend_presentedView(void *a1, const char *a2, ...)
{
  return _[a1 presentedView];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presentediCloudWarningController(void *a1, const char *a2, ...)
{
  return _[a1 presentediCloudWarningController];
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingViewController];
}

id objc_msgSend_primaryAccountAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 primaryAccountAltDSID];
}

id objc_msgSend_primaryNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 primaryNavigationController];
}

id objc_msgSend_privateSettings(void *a1, const char *a2, ...)
{
  return _[a1 privateSettings];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processOriginalImageFromWallpaper_originalImage_(void *a1, const char *a2, ...)
{
  return [a1 processOriginalImageFromWallpaper:originalImage:];
}

id objc_msgSend_processPool(void *a1, const char *a2, ...)
{
  return _[a1 processPool];
}

id objc_msgSend_processedImage(void *a1, const char *a2, ...)
{
  return _[a1 processedImage];
}

id objc_msgSend_profileData(void *a1, const char *a2, ...)
{
  return _[a1 profileData];
}

id objc_msgSend_profileWithData_outError_(void *a1, const char *a2, ...)
{
  return [a1 profileWithData:outError:];
}

id objc_msgSend_pushNewDiscoverWebViewControllerWithURLString_(void *a1, const char *a2, ...)
{
  return [a1 pushNewDiscoverWebViewControllerWithURLString:];
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushViewController:animated:];
}

id objc_msgSend_queryItems(void *a1, const char *a2, ...)
{
  return _[a1 queryItems];
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return _[a1 range];
}

id objc_msgSend_reachability(void *a1, const char *a2, ...)
{
  return _[a1 reachability];
}

id objc_msgSend_recover_(void *a1, const char *a2, ...)
{
  return [a1 recover:];
}

id objc_msgSend_refreshAfterSidebarTabbarSwitchWithDashboardContext_(void *a1, const char *a2, ...)
{
  return [a1 refreshAfterSidebarTabbarSwitchWithDashboardContext:];
}

id objc_msgSend_refreshWallpaperForHomeKitObject_withAnimation_(void *a1, const char *a2, ...)
{
  return [a1 refreshWallpaperForHomeKitObject:withAnimation:];
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forCellReuseIdentifier:];
}

id objc_msgSend_registerClass_forHeaderFooterViewReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forHeaderFooterViewReuseIdentifier:];
}

id objc_msgSend_registerViewControllerClass_forIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerViewControllerClass:forIdentifier:];
}

id objc_msgSend_registerWallpaperSource_processedSource_(void *a1, const char *a2, ...)
{
  return [a1 registerWallpaperSource:processedSource:];
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return [a1 regularExpressionWithPattern:options:error:];
}

id objc_msgSend_reloadAndUpdateAllItemsFromSenderSelector_(void *a1, const char *a2, ...)
{
  return [a1 reloadAndUpdateAllItemsFromSenderSelector:];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _[a1 reloadData];
}

id objc_msgSend_reloadInitialSetup(void *a1, const char *a2, ...)
{
  return _[a1 reloadInitialSetup];
}

id objc_msgSend_reloadItems(void *a1, const char *a2, ...)
{
  return _[a1 reloadItems];
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_reloadState(void *a1, const char *a2, ...)
{
  return _[a1 reloadState];
}

id objc_msgSend_reloadWebViews(void *a1, const char *a2, ...)
{
  return _[a1 reloadWebViews];
}

id objc_msgSend_removeAllButtons(void *a1, const char *a2, ...)
{
  return _[a1 removeAllButtons];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeHomeManagerObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeHomeManagerObserver:];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectAtIndex:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:];
}

id objc_msgSend_removeRoom_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 removeRoom:completionHandler:];
}

id objc_msgSend_removeScriptMessageHandlerForName_(void *a1, const char *a2, ...)
{
  return [a1 removeScriptMessageHandlerForName:];
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 removeTarget:action:forControlEvents:];
}

id objc_msgSend_requestAuthorizationWithOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestAuthorizationWithOptions:completionHandler:];
}

id objc_msgSend_requestWithURL_cachePolicy_timeoutInterval_(void *a1, const char *a2, ...)
{
  return [a1 requestWithURL:cachePolicy:timeoutInterval:];
}

id objc_msgSend_reschedule_(void *a1, const char *a2, ...)
{
  return [a1 reschedule:];
}

id objc_msgSend_resetNukeButton(void *a1, const char *a2, ...)
{
  return _[a1 resetNukeButton];
}

id objc_msgSend_resetSectionConstraints(void *a1, const char *a2, ...)
{
  return _[a1 resetSectionConstraints];
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponder];
}

id objc_msgSend_respondToInvitationWithResponse_(void *a1, const char *a2, ...)
{
  return [a1 respondToInvitationWithResponse:];
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _[a1 response];
}

id objc_msgSend_responseController(void *a1, const char *a2, ...)
{
  return _[a1 responseController];
}

id objc_msgSend_restrictedGuestNextViewController(void *a1, const char *a2, ...)
{
  return _[a1 restrictedGuestNextViewController];
}

id objc_msgSend_restrictedGuestSchedule(void *a1, const char *a2, ...)
{
  return _[a1 restrictedGuestSchedule];
}

id objc_msgSend_resumeServiceForURLSessionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 resumeServiceForURLSessionIdentifier:];
}

id objc_msgSend_retryButton(void *a1, const char *a2, ...)
{
  return _[a1 retryButton];
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 rightBarButtonItem];
}

id objc_msgSend_room(void *a1, const char *a2, ...)
{
  return _[a1 room];
}

id objc_msgSend_roomItemProvider(void *a1, const char *a2, ...)
{
  return _[a1 roomItemProvider];
}

id objc_msgSend_rooms(void *a1, const char *a2, ...)
{
  return _[a1 rooms];
}

id objc_msgSend_rootGroup(void *a1, const char *a2, ...)
{
  return _[a1 rootGroup];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaLayoutGuide];
}

id objc_msgSend_sanitizeUserEnteredHomeKitName_(void *a1, const char *a2, ...)
{
  return [a1 sanitizeUserEnteredHomeKitName:];
}

id objc_msgSend_saveViewAccessedFromURLEvent_deepLinkFrom_(void *a1, const char *a2, ...)
{
  return [a1 saveViewAccessedFromURLEvent:deepLinkFrom:];
}

id objc_msgSend_savedButtonBarItem(void *a1, const char *a2, ...)
{
  return _[a1 savedButtonBarItem];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return [a1 scheduledTimerWithTimeInterval:repeats:block:];
}

id objc_msgSend_schedulerWithDispatchQueue_(void *a1, const char *a2, ...)
{
  return [a1 schedulerWithDispatchQueue:];
}

id objc_msgSend_scrollToDefaultPositionInCurrentContextAnimated_(void *a1, const char *a2, ...)
{
  return [a1 scrollToDefaultPositionInCurrentContextAnimated:];
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _[a1 scrollView];
}

id objc_msgSend_secondaryDestination(void *a1, const char *a2, ...)
{
  return _[a1 secondaryDestination];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _[a1 section];
}

id objc_msgSend_sectionIdentifierForIndex_(void *a1, const char *a2, ...)
{
  return [a1 sectionIdentifierForIndex:];
}

id objc_msgSend_securityAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _[a1 securityAccessoryTypeGroup];
}

id objc_msgSend_segmentIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 segmentIdentifier];
}

id objc_msgSend_selectCurrentTab(void *a1, const char *a2, ...)
{
  return _[a1 selectCurrentTab];
}

id objc_msgSend_selectTabWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 selectTabWithIdentifier:];
}

id objc_msgSend_selectedHomeAppTabIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 selectedHomeAppTabIdentifier];
}

id objc_msgSend_selectedHomeFollowsLocation(void *a1, const char *a2, ...)
{
  return _[a1 selectedHomeFollowsLocation];
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _[a1 selectedIndex];
}

id objc_msgSend_selectedViewController(void *a1, const char *a2, ...)
{
  return _[a1 selectedViewController];
}

id objc_msgSend_sendEvent_withData_(void *a1, const char *a2, ...)
{
  return [a1 sendEvent:withData:];
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return [a1 sendSubviewToBack:];
}

id objc_msgSend_senderURLString(void *a1, const char *a2, ...)
{
  return _[a1 senderURLString];
}

id objc_msgSend_serviceType(void *a1, const char *a2, ...)
{
  return _[a1 serviceType];
}

id objc_msgSend_services(void *a1, const char *a2, ...)
{
  return _[a1 services];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAcceptInvitationError_(void *a1, const char *a2, ...)
{
  return [a1 setAcceptInvitationError:];
}

id objc_msgSend_setAcceptedPendingAddHomeTimeoutCancellationToken_(void *a1, const char *a2, ...)
{
  return [a1 setAcceptedPendingAddHomeTimeoutCancellationToken:];
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityIdentifier:];
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return [a1 setAccessoryType:];
}

id objc_msgSend_setAccessoryView_(void *a1, const char *a2, ...)
{
  return [a1 setAccessoryView:];
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return [a1 setActive:];
}

id objc_msgSend_setActiveConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setActiveConstraints:];
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontForContentSizeCategory:];
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontSizeToFitWidth:];
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setAlignment:];
}

id objc_msgSend_setAllowForcedCacheReload_(void *a1, const char *a2, ...)
{
  return [a1 setAllowForcedCacheReload:];
}

id objc_msgSend_setAllowsInlineMediaPlayback_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsInlineMediaPlayback:];
}

id objc_msgSend_setAllowsLinkPreview_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsLinkPreview:];
}

id objc_msgSend_setAppNavigator_(void *a1, const char *a2, ...)
{
  return [a1 setAppNavigator:];
}

id objc_msgSend_setApplicationActiveFuture_(void *a1, const char *a2, ...)
{
  return [a1 setApplicationActiveFuture];
}

id objc_msgSend_setApplicationBackgroundedDate_(void *a1, const char *a2, ...)
{
  return [a1 setApplicationBackgroundedDate:];
}

id objc_msgSend_setApplicationURLHandler_(void *a1, const char *a2, ...)
{
  return [a1 setApplicationURLHandler];
}

id objc_msgSend_setAutocapitalizationType_(void *a1, const char *a2, ...)
{
  return [a1 setAutocapitalizationType:];
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return [a1 setAutoresizingMask:];
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return [a1 setAxis:];
}

id objc_msgSend_setBackButtonTitle_(void *a1, const char *a2, ...)
{
  return [a1 setBackButtonTitle:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setBackgroundEffects_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundEffects:];
}

id objc_msgSend_setBackgroundUrlSessionCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundUrlSessionCompletionHandler:];
}

id objc_msgSend_setBarStyle_(void *a1, const char *a2, ...)
{
  return [a1 setBarStyle:];
}

id objc_msgSend_setBarTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setBarTintColor:];
}

id objc_msgSend_setBaseController_(void *a1, const char *a2, ...)
{
  return [a1 setBaseController:];
}

id objc_msgSend_setBaseViewController_(void *a1, const char *a2, ...)
{
  return [a1 setBaseViewController:];
}

id objc_msgSend_setBlurView_(void *a1, const char *a2, ...)
{
  return [a1 setBlurView:];
}

id objc_msgSend_setBodyWidthConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setBodyWidthConstraint:];
}

id objc_msgSend_setBounces_(void *a1, const char *a2, ...)
{
  return [a1 setBounces:];
}

id objc_msgSend_setButtonLayoutConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setButtonLayoutConstraints:];
}

id objc_msgSend_setCacheRefreshTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 setCacheRefreshTimeInterval:];
}

id objc_msgSend_setCancelButton_(void *a1, const char *a2, ...)
{
  return [a1 setCancelButton:];
}

id objc_msgSend_setCenterListConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setCenterListConstraints:];
}

id objc_msgSend_setChangingSelectedViewControllerProgrammatically_(void *a1, const char *a2, ...)
{
  return [a1 setChangingSelectedViewControllerProgrammatically:];
}

id objc_msgSend_setClearButtonMode_(void *a1, const char *a2, ...)
{
  return [a1 setClearButtonMode:];
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setClipsToBounds:];
}

id objc_msgSend_setConnectionIssueOverlayView_(void *a1, const char *a2, ...)
{
  return [a1 setConnectionIssueOverlayView:];
}

id objc_msgSend_setConnectionIssueType_(void *a1, const char *a2, ...)
{
  return [a1 setConnectionIssueType:];
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return [a1 setConstant:];
}

id objc_msgSend_setContentConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setContentConfiguration:];
}

id objc_msgSend_setContentEffects_(void *a1, const char *a2, ...)
{
  return [a1 setContentEffects:];
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return [a1 setContentInset:];
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return [a1 setContentInsets:];
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return [a1 setContentMode:];
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:];
}

id objc_msgSend_setContentView_(void *a1, const char *a2, ...)
{
  return [a1 setContentView:];
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 setCornerRadius:];
}

id objc_msgSend_setCurrentTabIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTabIdentifier:];
}

id objc_msgSend_setCustomUserAgent_(void *a1, const char *a2, ...)
{
  return [a1 setCustomUserAgent:];
}

id objc_msgSend_setCustomWallpaper_image_(void *a1, const char *a2, ...)
{
  return [a1 setCustomWallpaper:image:];
}

id objc_msgSend_setDataSyncState_(void *a1, const char *a2, ...)
{
  return [a1 setDataSyncState:];
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDateStyle:];
}

id objc_msgSend_setDeclineOrIgnoreInvitationButton_(void *a1, const char *a2, ...)
{
  return [a1 setDeclineOrIgnoreInvitationButton:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDetailText_(void *a1, const char *a2, ...)
{
  return [a1 setDetailText:];
}

id objc_msgSend_setDetailTextAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDetailTextAccessibilityIdentifier:];
}

id objc_msgSend_setDeviceToDeviceEncryptionUpgradeType_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceToDeviceEncryptionUpgradeType:];
}

id objc_msgSend_setDeviceToDeviceEncryptionUpgradeUIStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceToDeviceEncryptionUpgradeUIStyle:];
}

id objc_msgSend_setDevicesLabel_(void *a1, const char *a2, ...)
{
  return [a1 setDevicesLabel:];
}

id objc_msgSend_setDidPushNextViewController_(void *a1, const char *a2, ...)
{
  return [a1 setDidPushNextViewController:];
}

id objc_msgSend_setDidUserTriggerOnboardingDismissal_(void *a1, const char *a2, ...)
{
  return [a1 setDidUserTriggerOnboardingDismissal:];
}

id objc_msgSend_setDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setDisabled:];
}

id objc_msgSend_setDismissAccessCodeOnboarding_(void *a1, const char *a2, ...)
{
  return [a1 setDismissAccessCodeOnboarding:];
}

id objc_msgSend_setDismissAccessoryFirmwareUpdateOnboarding_(void *a1, const char *a2, ...)
{
  return [a1 setDismissAccessoryFirmwareUpdateOnboarding:];
}

id objc_msgSend_setDismissAnnounceOnboarding_(void *a1, const char *a2, ...)
{
  return [a1 setDismissAnnounceOnboarding:];
}

id objc_msgSend_setDismissCameraRecordingOnboarding_(void *a1, const char *a2, ...)
{
  return [a1 setDismissCameraRecordingOnboarding:];
}

id objc_msgSend_setDismissCameraRecordingReminderBanner_(void *a1, const char *a2, ...)
{
  return [a1 setDismissCameraRecordingReminderBanner:];
}

id objc_msgSend_setDismissHomeTheaterOnboarding_(void *a1, const char *a2, ...)
{
  return [a1 setDismissHomeTheaterOnboarding:];
}

id objc_msgSend_setDismissIdentifyVoiceOnboarding_(void *a1, const char *a2, ...)
{
  return [a1 setDismissIdentifyVoiceOnboarding:];
}

id objc_msgSend_setDismissIdentifyVoiceReminderBanner_(void *a1, const char *a2, ...)
{
  return [a1 setDismissIdentifyVoiceReminderBanner:];
}

id objc_msgSend_setDismissNaturalLightingOnboarding_(void *a1, const char *a2, ...)
{
  return [a1 setDismissNaturalLightingOnboarding:];
}

id objc_msgSend_setDismissTVViewingProfilesOnboarding_(void *a1, const char *a2, ...)
{
  return [a1 setDismissTVViewingProfilesOnboarding:];
}

id objc_msgSend_setDismissTVViewingProfilesReminderBanner_(void *a1, const char *a2, ...)
{
  return [a1 setDismissTVViewingProfilesReminderBanner:];
}

id objc_msgSend_setDismissUtilityOnboarding_(void *a1, const char *a2, ...)
{
  return [a1 setDismissUtilityOnboarding:];
}

id objc_msgSend_setDismissWalletKeyExpressModeOnboarding_forWalletKeyUUID_(void *a1, const char *a2, ...)
{
  return [a1 setDismissWalletKeyExpressModeOnboarding:forWalletKeyUUID:];
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return [a1 setDistribution:];
}

id objc_msgSend_setDoesRelativeDateFormatting_(void *a1, const char *a2, ...)
{
  return [a1 setDoesRelativeDateFormatting:];
}

id objc_msgSend_setEditedName_(void *a1, const char *a2, ...)
{
  return [a1 setEditedName:];
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return [a1 setEditing:];
}

id objc_msgSend_setEffect_(void *a1, const char *a2, ...)
{
  return [a1 setEffect:];
}

id objc_msgSend_setEnableButton_(void *a1, const char *a2, ...)
{
  return [a1 setEnableButton:];
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:];
}

id objc_msgSend_setEstimatedRowHeight_(void *a1, const char *a2, ...)
{
  return [a1 setEstimatedRowHeight:];
}

id objc_msgSend_setFeatureName_(void *a1, const char *a2, ...)
{
  return [a1 setFeatureName:];
}

id objc_msgSend_setFilter_(void *a1, const char *a2, ...)
{
  return [a1 setFilter:];
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return [a1 setFont:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setHasConnectedToNetwork_(void *a1, const char *a2, ...)
{
  return [a1 setHasConnectedToNetwork:];
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return [a1 setHidden:];
}

id objc_msgSend_setHideIcon_(void *a1, const char *a2, ...)
{
  return [a1 setHideIcon:];
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return [a1 setHidesBackButton:];
}

id objc_msgSend_setHidesWhenStopped_(void *a1, const char *a2, ...)
{
  return [a1 setHidesWhenStopped:];
}

id objc_msgSend_setHomeScreenQuickActionController_(void *a1, const char *a2, ...)
{
  return [a1 setHomeScreenQuickActionController:];
}

id objc_msgSend_setHomes_(void *a1, const char *a2, ...)
{
  return [a1 setHomes:];
}

id objc_msgSend_setHorizontalConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setHorizontalConstraints:];
}

id objc_msgSend_setIconAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setIconAccessibilityIdentifier:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setImageSize_(void *a1, const char *a2, ...)
{
  return [a1 setImageSize:];
}

id objc_msgSend_setImageSizeToFitWidth_forNumberOfWallpapers_(void *a1, const char *a2, ...)
{
  return [a1 setImageSizeToFitWidth:forNumberOfWallpapers:];
}

id objc_msgSend_setInitialLoadCompleted_(void *a1, const char *a2, ...)
{
  return [a1 setInitialLoadCompleted:];
}

id objc_msgSend_setInstallProfileVCCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setInstallProfileVCCompletionBlock:];
}

id objc_msgSend_setInstallProfileViewController_(void *a1, const char *a2, ...)
{
  return [a1 setInstallProfileViewController:];
}

id objc_msgSend_setInstructionsItem_(void *a1, const char *a2, ...)
{
  return [a1 setInstructionsItem:];
}

id objc_msgSend_setInvitation_(void *a1, const char *a2, ...)
{
  return [a1 setInvitation:];
}

id objc_msgSend_setItemIdentifierToBackgroundTaskIdentifierMap_(void *a1, const char *a2, ...)
{
  return [a1 setItemIdentifierToBackgroundTaskIdentifierMap:];
}

id objc_msgSend_setItems_filteringToDisplayedItems_(void *a1, const char *a2, ...)
{
  return [a1 setItems:filteringToDisplayedItems:];
}

id objc_msgSend_setJoiningHomeLabel_(void *a1, const char *a2, ...)
{
  return [a1 setJoiningHomeLabel:];
}

id objc_msgSend_setKnownContactImageConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setKnownContactImageConstraints:];
}

id objc_msgSend_setLastEnteredForegroundDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastEnteredForegroundDate:];
}

id objc_msgSend_setLayoutConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setLayoutConstraints:];
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setLeftBarButtonItem:];
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return [a1 setLineBreakMode:];
}

id objc_msgSend_setLoadingViewController_(void *a1, const char *a2, ...)
{
  return [a1 setLoadingViewController:];
}

id objc_msgSend_setLocationIcon_(void *a1, const char *a2, ...)
{
  return [a1 setLocationIcon:];
}

id objc_msgSend_setLocationSensingAvailable_(void *a1, const char *a2, ...)
{
  return [a1 setLocationSensingAvailable:];
}

id objc_msgSend_setMainActionButton_(void *a1, const char *a2, ...)
{
  return [a1 setMainActionButton:];
}

id objc_msgSend_setMaskedCorners_(void *a1, const char *a2, ...)
{
  return [a1 setMaskedCorners:];
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setMasksToBounds:];
}

id objc_msgSend_setMaximumNumberOfItems_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumNumberOfItems:];
}

id objc_msgSend_setMediaTypesRequiringUserActionForPlayback_(void *a1, const char *a2, ...)
{
  return [a1 setMediaTypesRequiringUserActionForPlayback:];
}

id objc_msgSend_setModalInPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setModalInPresentation];
}

id objc_msgSend_setModalPresentationCapturesStatusBarAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationCapturesStatusBarAppearance:];
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationStyle:];
}

id objc_msgSend_setModalTransitionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalTransitionStyle:];
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return [a1 setMode:];
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return [a1 setName:];
}

id objc_msgSend_setNameCell_(void *a1, const char *a2, ...)
{
  return [a1 setNameCell:];
}

id objc_msgSend_setNamedWallpaperThumbnails_(void *a1, const char *a2, ...)
{
  return [a1 setNamedWallpaperThumbnails:];
}

id objc_msgSend_setNamedWallpapers_(void *a1, const char *a2, ...)
{
  return [a1 setNamedWallpapers:];
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:];
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:animated:];
}

id objc_msgSend_setNavigationBarVisibility(void *a1, const char *a2, ...)
{
  return _[a1 setNavigationBarVisibility];
}

id objc_msgSend_setNavigationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationDelegate:];
}

id objc_msgSend_setNavigationState_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationState:];
}

id objc_msgSend_setNavigator_(void *a1, const char *a2, ...)
{
  return [a1 setNavigator:];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateConstraints];
}

id objc_msgSend_setNetworkPathMonitor_(void *a1, const char *a2, ...)
{
  return [a1 setNetworkPathMonitor:];
}

id objc_msgSend_setNetworkPathMonitorDispatchQueue_(void *a1, const char *a2, ...)
{
  return [a1 setNetworkPathMonitorDispatchQueue:];
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfLines:];
}

id objc_msgSend_setNumberStyle_(void *a1, const char *a2, ...)
{
  return [a1 setNumberStyle:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setOn_(void *a1, const char *a2, ...)
{
  return [a1 setOn:];
}

id objc_msgSend_setOnboardingCompleteFuture_(void *a1, const char *a2, ...)
{
  return [a1 setOnboardingCompleteFuture:];
}

id objc_msgSend_setOnboardingDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setOnboardingDelegate:];
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setOpaque:];
}

id objc_msgSend_setOrientation_animated_(void *a1, const char *a2, ...)
{
  return [a1 setOrientation:animated:];
}

id objc_msgSend_setOriginalCustomImage_(void *a1, const char *a2, ...)
{
  return [a1 setOriginalCustomImage:];
}

id objc_msgSend_setPanGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 setPanGestureRecognizer:];
}

id objc_msgSend_setPinCodeManager_(void *a1, const char *a2, ...)
{
  return [a1 setPinCodeManager:];
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholder:];
}

id objc_msgSend_setPocketViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPocketViewController:];
}

id objc_msgSend_setPreferredDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredDisplayMode:];
}

id objc_msgSend_setPrefersLargeTitles_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersLargeTitles:];
}

id objc_msgSend_setPresentationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationDelegate:];
}

id objc_msgSend_setPresentationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationHandler:];
}

id objc_msgSend_setPresentationState_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationState:];
}

id objc_msgSend_setPresentedDataSyncingController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedDataSyncingController:];
}

id objc_msgSend_setPresentedOnboardingController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedOnboardingController:];
}

id objc_msgSend_setPresentediCloudWarningController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentediCloudWarningController:];
}

id objc_msgSend_setPresentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentingViewController:];
}

id objc_msgSend_setPresentsWithGesture_(void *a1, const char *a2, ...)
{
  return [a1 setPresentsWithGesture:];
}

id objc_msgSend_setPrimaryBackgroundStyle_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryBackgroundStyle:];
}

id objc_msgSend_setPrimaryNavigationController_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryNavigationController:];
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return [a1 setPriority:];
}

id objc_msgSend_setProcessPool_(void *a1, const char *a2, ...)
{
  return [a1 setProcessPool:];
}

id objc_msgSend_setProfileData_(void *a1, const char *a2, ...)
{
  return [a1 setProfileData:];
}

id objc_msgSend_setRasterizationScale_(void *a1, const char *a2, ...)
{
  return [a1 setRasterizationScale:];
}

id objc_msgSend_setResetNukeButton_(void *a1, const char *a2, ...)
{
  return [a1 setResetNukeButton:];
}

id objc_msgSend_setResetSectionConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setResetSectionConstraints:];
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItem:];
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 setRootViewController:];
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return [a1 setRowHeight:];
}

id objc_msgSend_setRunningState_(void *a1, const char *a2, ...)
{
  return [a1 setRunningState:];
}

id objc_msgSend_setSavedButtonBarItem_(void *a1, const char *a2, ...)
{
  return [a1 setSavedButtonBarItem:];
}

id objc_msgSend_setSecurityUpgradeContext_(void *a1, const char *a2, ...)
{
  return [a1 setSecurityUpgradeContext:];
}

id objc_msgSend_setSelectedHome_userInitiated_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedHome:userInitiated:];
}

id objc_msgSend_setSelectedHomeAppTabIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedHomeAppTabIdentifier:];
}

id objc_msgSend_setSelectedHomeFollowsLocation_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedHomeFollowsLocation:];
}

id objc_msgSend_setSelectedViewController_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedViewController:];
}

id objc_msgSend_setSelectedWallpaper_animated_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedWallpaper:animated:];
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionStyle:];
}

id objc_msgSend_setSenderURLString_(void *a1, const char *a2, ...)
{
  return [a1 setSenderURLString:];
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return [a1 setShadowColor:];
}

id objc_msgSend_setShadowOffset_(void *a1, const char *a2, ...)
{
  return [a1 setShadowOffset:];
}

id objc_msgSend_setShadowOpacity_(void *a1, const char *a2, ...)
{
  return [a1 setShadowOpacity:];
}

id objc_msgSend_setShadowPath_(void *a1, const char *a2, ...)
{
  return [a1 setShadowPath:];
}

id objc_msgSend_setShadowRadius_(void *a1, const char *a2, ...)
{
  return [a1 setShadowRadius:];
}

id objc_msgSend_setShortcutItems_(void *a1, const char *a2, ...)
{
  return [a1 setShortcutItems:];
}

id objc_msgSend_setShouldRasterize_(void *a1, const char *a2, ...)
{
  return [a1 setShouldRasterize:];
}

id objc_msgSend_setShouldScrollToDefaultPosition_(void *a1, const char *a2, ...)
{
  return [a1 setShouldScrollToDefaultPosition:];
}

id objc_msgSend_setShowLocationIcon_(void *a1, const char *a2, ...)
{
  return [a1 setShowLocationIcon:];
}

id objc_msgSend_setShowSpinner_(void *a1, const char *a2, ...)
{
  return [a1 setShowSpinner:];
}

id objc_msgSend_setShowsReorderControl_(void *a1, const char *a2, ...)
{
  return [a1 setShowsReorderControl:];
}

id objc_msgSend_setSideBarViewController_(void *a1, const char *a2, ...)
{
  return [a1 setSideBarViewController:];
}

id objc_msgSend_setSourceItem_(void *a1, const char *a2, ...)
{
  return [a1 setSourceItem:];
}

id objc_msgSend_setSourceType_(void *a1, const char *a2, ...)
{
  return [a1 setSourceType:];
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return [a1 setSourceView:];
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setSpacing:];
}

id objc_msgSend_setSpinner_(void *a1, const char *a2, ...)
{
  return [a1 setSpinner:];
}

id objc_msgSend_setSpinnerLayoutConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setSpinnerLayoutConstraints:];
}

id objc_msgSend_setSplitViewController_(void *a1, const char *a2, ...)
{
  return [a1 setSplitViewController:];
}

id objc_msgSend_setStatus_(void *a1, const char *a2, ...)
{
  return [a1 setStatus:];
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return [a1 setStyle:];
}

id objc_msgSend_setTabBarController_(void *a1, const char *a2, ...)
{
  return [a1 setTabBarController:];
}

id objc_msgSend_setTabItemProvider_(void *a1, const char *a2, ...)
{
  return [a1 setTabItemProvider:];
}

id objc_msgSend_setTableViewReady_(void *a1, const char *a2, ...)
{
  return [a1 setTableViewReady:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setTextAlignment:];
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setTextColor:];
}

id objc_msgSend_setTextView_(void *a1, const char *a2, ...)
{
  return [a1 setTextView:];
}

id objc_msgSend_setTextViewConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTextViewConstraints:];
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return [a1 setTimeStyle:];
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setTintColor:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:forState:];
}

id objc_msgSend_setTitleAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setTitleAccessibilityIdentifier:];
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitleColor:forState:];
}

id objc_msgSend_setTitleText_(void *a1, const char *a2, ...)
{
  return [a1 setTitleText:];
}

id objc_msgSend_setTitleTextAttributes_(void *a1, const char *a2, ...)
{
  return [a1 setTitleTextAttributes:];
}

id objc_msgSend_setTransitioningDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setTransitioningDelegate:];
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTranslatesAutoresizingMaskIntoConstraints:];
}

id objc_msgSend_setUIDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setUIDelegate:];
}

id objc_msgSend_setURLHandler_(void *a1, const char *a2, ...)
{
  return [a1 setURLHandler:];
}

id objc_msgSend_setUrlString_(void *a1, const char *a2, ...)
{
  return [a1 setUrlString:];
}

id objc_msgSend_setUserActivity_(void *a1, const char *a2, ...)
{
  return [a1 setUserActivity:];
}

id objc_msgSend_setUserAgent_(void *a1, const char *a2, ...)
{
  return [a1 setUserAgent:];
}

id objc_msgSend_setUserHasValidHMSettings_(void *a1, const char *a2, ...)
{
  return [a1 setUserHasValidHMSettings:];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractionEnabled:];
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return [a1 setView:];
}

id objc_msgSend_setViewController_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:];
}

id objc_msgSend_setViewController_forColumn_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:forColumn:];
}

id objc_msgSend_setViewControllers_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllers:];
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllers:animated:];
}

id objc_msgSend_setViewVisible_(void *a1, const char *a2, ...)
{
  return [a1 setViewVisible:];
}

id objc_msgSend_setWallpaper_image_(void *a1, const char *a2, ...)
{
  return [a1 setWallpaper:image:];
}

id objc_msgSend_setWallpaperPickerViewController_(void *a1, const char *a2, ...)
{
  return [a1 setWallpaperPickerViewController:];
}

id objc_msgSend_setWebView_(void *a1, const char *a2, ...)
{
  return [a1 setWebView:];
}

id objc_msgSend_setWebViewActivityIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setWebViewActivityIndicator:];
}

id objc_msgSend_setWebViewActivityIndicatorDelayTimer_(void *a1, const char *a2, ...)
{
  return [a1 setWebViewActivityIndicatorDelayTimer:];
}

id objc_msgSend_setWebViewCache_(void *a1, const char *a2, ...)
{
  return [a1 setWebViewCache];
}

id objc_msgSend_setWifiExecutionEnvironmentObserver_(void *a1, const char *a2, ...)
{
  return [a1 setWifiExecutionEnvironmentObserver:];
}

id objc_msgSend_setWindow_(void *a1, const char *a2, ...)
{
  return [a1 setWindow:];
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return [a1 setWithArray:];
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return [a1 setWithObject:];
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 setWithObjects:];
}

id objc_msgSend_set_debug_viewHasEverAppeared_(void *a1, const char *a2, ...)
{
  return [a1 set_debug_viewHasEverAppeared:];
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _[a1 settings];
}

id objc_msgSend_setupGridForecastSnapshotsFor_(void *a1, const char *a2, ...)
{
  return [a1 setupGridForecastSnapshotsFor:];
}

id objc_msgSend_setupWebViewAndActivityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 setupWebViewAndActivityIndicator];
}

id objc_msgSend_shadowView(void *a1, const char *a2, ...)
{
  return _[a1 shadowView];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedDispatcher(void *a1, const char *a2, ...)
{
  return _[a1 sharedDispatcher];
}

id objc_msgSend_sharedHandler(void *a1, const char *a2, ...)
{
  return _[a1 sharedHandler];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_shouldAllowViewTranslation(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowViewTranslation];
}

id objc_msgSend_shouldScrollToDefaultPosition(void *a1, const char *a2, ...)
{
  return _[a1 shouldScrollToDefaultPosition];
}

id objc_msgSend_shouldShowFullWallpaperSection(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowFullWallpaperSection];
}

id objc_msgSend_showAboutResidentDeviceView(void *a1, const char *a2, ...)
{
  return _[a1 showAboutResidentDeviceView];
}

id objc_msgSend_showAccessory_secondaryDestination_(void *a1, const char *a2, ...)
{
  return [a1 showAccessory:secondaryDestination:];
}

id objc_msgSend_showAccessoryTypeGroup_forHome_animated_(void *a1, const char *a2, ...)
{
  return [a1 showAccessoryTypeGroup:forHome:animated:];
}

id objc_msgSend_showAddAutomationFlow(void *a1, const char *a2, ...)
{
  return _[a1 showAddAutomationFlow];
}

id objc_msgSend_showAddLocationButton(void *a1, const char *a2, ...)
{
  return _[a1 showAddLocationButton];
}

id objc_msgSend_showAddSceneFlowOnCurrentTab(void *a1, const char *a2, ...)
{
  return _[a1 showAddSceneFlowOnCurrentTab];
}

id objc_msgSend_showAddTriggerView(void *a1, const char *a2, ...)
{
  return _[a1 showAddTriggerView];
}

id objc_msgSend_showAutomationTab(void *a1, const char *a2, ...)
{
  return _[a1 showAutomationTab];
}

id objc_msgSend_showBridgeSettingsForAccessory_(void *a1, const char *a2, ...)
{
  return [a1 showBridgeSettingsForAccessory:];
}

id objc_msgSend_showCameraProfile_clipID_(void *a1, const char *a2, ...)
{
  return [a1 showCameraProfile:clipID:];
}

id objc_msgSend_showCameraWithName_homeName_startDate_endDate_roomName_(void *a1, const char *a2, ...)
{
  return [a1 showCameraWithName:homeName:startDate:endDate:roomName:];
}

id objc_msgSend_showCardForHomeKitIdentifier_destination_secondaryDestination_inHome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showCardForHomeKitIdentifier:destination:secondaryDestination:inHome:");
}

id objc_msgSend_showDefaultAccountForHome_(void *a1, const char *a2, ...)
{
  return [a1 showDefaultAccountForHome:];
}

id objc_msgSend_showDetailViewController_sender_(void *a1, const char *a2, ...)
{
  return [a1 showDetailViewController:sender:];
}

id objc_msgSend_showDevicePickerWithInfo_completion_(void *a1, const char *a2, ...)
{
  return [a1 showDevicePickerWithInfo:completion:];
}

id objc_msgSend_showDiscoverTab(void *a1, const char *a2, ...)
{
  return _[a1 showDiscoverTab];
}

id objc_msgSend_showDropInUI_home_(void *a1, const char *a2, ...)
{
  return [a1 showDropInUI:home:];
}

id objc_msgSend_showFaceRecognitionSettingsForHome_(void *a1, const char *a2, ...)
{
  return [a1 showFaceRecognitionSettingsForHome:];
}

id objc_msgSend_showFaceRecognitionSettingsForPerson_personManager_inHome_(void *a1, const char *a2, ...)
{
  return [a1 showFaceRecognitionSettingsForPerson:personManager:inHome:];
}

id objc_msgSend_showFaceRecognitionSettingsForUnknownPersonEvent_inHome_(void *a1, const char *a2, ...)
{
  return [a1 showFaceRecognitionSettingsForUnknownPersonEvent:inHome:];
}

id objc_msgSend_showFeedbackFlowForCameraClipID_cameraProfile_(void *a1, const char *a2, ...)
{
  return [a1 showFeedbackFlowForCameraClipID:cameraProfile:];
}

id objc_msgSend_showHH2OnboardingFlowForHome_(void *a1, const char *a2, ...)
{
  return [a1 showHH2OnboardingFlowForHome:];
}

id objc_msgSend_showHome_(void *a1, const char *a2, ...)
{
  return [a1 showHome:];
}

id objc_msgSend_showHome_animated_(void *a1, const char *a2, ...)
{
  return [a1 showHome:animated:];
}

id objc_msgSend_showHomeDashboardCellForActionSet_executeActionSetFuture_(void *a1, const char *a2, ...)
{
  return [a1 showHomeDashboardCellForActionSet:executeActionSetFuture:];
}

id objc_msgSend_showHomeForFilter_withTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 showHomeForFilter:withTimeRange:];
}

id objc_msgSend_showHomeForName_(void *a1, const char *a2, ...)
{
  return [a1 showHomeForName:];
}

id objc_msgSend_showHomeInvitation_(void *a1, const char *a2, ...)
{
  return [a1 showHomeInvitation:];
}

id objc_msgSend_showHomePodProfileInstallationFlowWithSender_(void *a1, const char *a2, ...)
{
  return [a1 showHomePodProfileInstallationFlowWithSender:];
}

id objc_msgSend_showHomeSettingsForHome_(void *a1, const char *a2, ...)
{
  return [a1 showHomeSettingsForHome:];
}

id objc_msgSend_showHomeTab(void *a1, const char *a2, ...)
{
  return _[a1 showHomeTab];
}

id objc_msgSend_showHomeWithFuture_(void *a1, const char *a2, ...)
{
  return [a1 showHomeWithFuture:];
}

id objc_msgSend_showLocksFirmwareSetupForHome_(void *a1, const char *a2, ...)
{
  return [a1 showLocksFirmwareSetupForHome:];
}

id objc_msgSend_showLocksOnboardingForHome_onboardingType_(void *a1, const char *a2, ...)
{
  return [a1 showLocksOnboardingForHome:onboardingType:];
}

id objc_msgSend_showMediaSystem_secondaryDestination_(void *a1, const char *a2, ...)
{
  return [a1 showMediaSystem:secondaryDestination:];
}

id objc_msgSend_showNetworkSettingsForAccessory_home_(void *a1, const char *a2, ...)
{
  return [a1 showNetworkSettingsForAccessory:home:];
}

id objc_msgSend_showNetworkSettingsForHome_(void *a1, const char *a2, ...)
{
  return [a1 showNetworkSettingsForHome:];
}

id objc_msgSend_showNetworkSettingsForNetworkConfigurationProfile_home_(void *a1, const char *a2, ...)
{
  return [a1 showNetworkSettingsForNetworkConfigurationProfile:home:];
}

id objc_msgSend_showNotificationSettingsForHome_(void *a1, const char *a2, ...)
{
  return [a1 showNotificationSettingsForHome:];
}

id objc_msgSend_showNotificationSettingsForHomeKitObject_animated_(void *a1, const char *a2, ...)
{
  return [a1 showNotificationSettingsForHomeKitObject:animated:];
}

id objc_msgSend_showNotificationSettingsForHomeKitObject_inHome_(void *a1, const char *a2, ...)
{
  return [a1 showNotificationSettingsForHomeKitObject:inHome:];
}

id objc_msgSend_showOnboardingIfNeededForHomeInvitation_(void *a1, const char *a2, ...)
{
  return [a1 showOnboardingIfNeededForHomeInvitation:];
}

id objc_msgSend_showProfileInstallationAlertViewWithTitle_message_shouldGoBackToSenderURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showProfileInstallationAlertViewWithTitle:message:shouldGoBackToSenderURL:");
}

id objc_msgSend_showProfileInstallationFlowFromViewController_withSenderURLString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showProfileInstallationFlowFromViewController:withSenderURLString:");
}

id objc_msgSend_showRecognizeMyVoiceSettingsForHome_showEnablementSheet_(void *a1, const char *a2, ...)
{
  return [a1 showRecognizeMyVoiceSettingsForHome:showEnablementSheet:];
}

id objc_msgSend_showRoom_(void *a1, const char *a2, ...)
{
  return [a1 showRoom:];
}

id objc_msgSend_showRoom_animated_(void *a1, const char *a2, ...)
{
  return [a1 showRoom:animated:];
}

id objc_msgSend_showRoomContainedCamera_startDate_endDate_(void *a1, const char *a2, ...)
{
  return [a1 showRoomContainedCamera:startDate:endDate:];
}

id objc_msgSend_showRoomForFilter_withTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 showRoomForFilter:withTimeRange:];
}

id objc_msgSend_showRoomSettingsForRoom_(void *a1, const char *a2, ...)
{
  return [a1 showRoomSettingsForRoom:];
}

id objc_msgSend_showRoomWithName_(void *a1, const char *a2, ...)
{
  return [a1 showRoomWithName:];
}

id objc_msgSend_showService_secondaryDestination_(void *a1, const char *a2, ...)
{
  return [a1 showService:secondaryDestination:];
}

id objc_msgSend_showServiceForFilter_withTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 showServiceForFilter:withTimeRange:];
}

id objc_msgSend_showServiceWithName_serviceType_homeName_roomName_(void *a1, const char *a2, ...)
{
  return [a1 showServiceWithName:serviceType:homeName:roomName:];
}

id objc_msgSend_showSettingsForCameraProfile_(void *a1, const char *a2, ...)
{
  return [a1 showSettingsForCameraProfile:];
}

id objc_msgSend_showSiriPersonalRequestsSettingsForHome_showEnablementSheet_(void *a1, const char *a2, ...)
{
  return [a1 showSiriPersonalRequestsSettingsForHome:showEnablementSheet:];
}

id objc_msgSend_showSoftwareUpdateForHome_(void *a1, const char *a2, ...)
{
  return [a1 showSoftwareUpdateForHome:];
}

id objc_msgSend_showUserDetails_(void *a1, const char *a2, ...)
{
  return [a1 showUserDetails:];
}

id objc_msgSend_showUserLockSettingsForHome_(void *a1, const char *a2, ...)
{
  return [a1 showUserLockSettingsForHome:];
}

id objc_msgSend_sideBarViewController(void *a1, const char *a2, ...)
{
  return _[a1 sideBarViewController];
}

id objc_msgSend_sizeForChildContentContainer_withParentContainerSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeForChildContentContainer:withParentContainerSize:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_snapshot(void *a1, const char *a2, ...)
{
  return _[a1 snapshot];
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingComparator:];
}

id objc_msgSend_sortedHomeKitItemComparator(void *a1, const char *a2, ...)
{
  return _[a1 sortedHomeKitItemComparator];
}

id objc_msgSend_sourceItem(void *a1, const char *a2, ...)
{
  return _[a1 sourceItem];
}

id objc_msgSend_spinner(void *a1, const char *a2, ...)
{
  return _[a1 spinner];
}

id objc_msgSend_spinnerLayoutConstraints(void *a1, const char *a2, ...)
{
  return _[a1 spinnerLayoutConstraints];
}

id objc_msgSend_splitViewController(void *a1, const char *a2, ...)
{
  return _[a1 splitViewController];
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _[a1 startAnimating];
}

id objc_msgSend_startCDPRepair(void *a1, const char *a2, ...)
{
  return _[a1 startCDPRepair];
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startDateComponents(void *a1, const char *a2, ...)
{
  return _[a1 startDateComponents];
}

id objc_msgSend_startOfDayForDate_(void *a1, const char *a2, ...)
{
  return [a1 startOfDayForDate:];
}

id objc_msgSend_startedTest_(void *a1, const char *a2, ...)
{
  return [a1 startedTest:];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateController_dismissViewController_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateController:dismissViewController:forState:");
}

id objc_msgSend_stateController_presentViewController_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateController:presentViewController:forState:");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_statusBarFrame(void *a1, const char *a2, ...)
{
  return _[a1 statusBarFrame];
}

id objc_msgSend_statusBarManager(void *a1, const char *a2, ...)
{
  return _[a1 statusBarManager];
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return _[a1 statusCode];
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _[a1 stopAnimating];
}

id objc_msgSend_stringForOnboardingState_(void *a1, const char *a2, ...)
{
  return [a1 stringForOnboardingState:];
}

id objc_msgSend_stringForOnboardingStates_(void *a1, const char *a2, ...)
{
  return [a1 stringForOnboardingStates:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:];
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return [a1 stringWithCString:encoding:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}

id objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return [a1 stringWithValidatedFormat:validFormatSpecifiers:error:];
}

id objc_msgSend_strongToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 strongToStrongObjectsMapTable];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringFromIndex:];
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return [a1 substringWithRange:];
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _[a1 subviews];
}

id objc_msgSend_supportsAccessorySetup(void *a1, const char *a2, ...)
{
  return _[a1 supportsAccessorySetup];
}

id objc_msgSend_switchToSelectedHome_(void *a1, const char *a2, ...)
{
  return [a1 switchToSelectedHome:];
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemBlackColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlackColor];
}

id objc_msgSend_systemGray4Color(void *a1, const char *a2, ...)
{
  return _[a1 systemGray4Color];
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGrayColor];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:];
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:withConfiguration:];
}

id objc_msgSend_systemLightGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemLightGrayColor];
}

id objc_msgSend_systemName(void *a1, const char *a2, ...)
{
  return _[a1 systemName];
}

id objc_msgSend_systemOrangeColor(void *a1, const char *a2, ...)
{
  return _[a1 systemOrangeColor];
}

id objc_msgSend_systemVersion(void *a1, const char *a2, ...)
{
  return _[a1 systemVersion];
}

id objc_msgSend_tabBar(void *a1, const char *a2, ...)
{
  return _[a1 tabBar];
}

id objc_msgSend_tabBarItem(void *a1, const char *a2, ...)
{
  return _[a1 tabBarItem];
}

id objc_msgSend_tabClassToNavigationControllerMap(void *a1, const char *a2, ...)
{
  return _[a1 tabClassToNavigationControllerMap];
}

id objc_msgSend_tabItemProvider(void *a1, const char *a2, ...)
{
  return _[a1 tabItemProvider];
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _[a1 tableView];
}

id objc_msgSend_tableViewReady(void *a1, const char *a2, ...)
{
  return _[a1 tableViewReady];
}

id objc_msgSend_terminateWithSuccess(void *a1, const char *a2, ...)
{
  return _[a1 terminateWithSuccess];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textField(void *a1, const char *a2, ...)
{
  return _[a1 textField];
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _[a1 textLabel];
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return _[a1 textView];
}

id objc_msgSend_textViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 textViewConstraints];
}

id objc_msgSend_time(void *a1, const char *a2, ...)
{
  return _[a1 time];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleDescriptionView(void *a1, const char *a2, ...)
{
  return _[a1 titleDescriptionView];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _[a1 topViewController];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 transitionCoordinator];
}

id objc_msgSend_translationInView_(void *a1, const char *a2, ...)
{
  return [a1 translationInView:];
}

id objc_msgSend_triggersPendingExecutionConfirmation(void *a1, const char *a2, ...)
{
  return _[a1 triggersPendingExecutionConfirmation];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_updateCell_forIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCell:forIndexPath:animated:");
}

id objc_msgSend_updateHomeSensingState(void *a1, const char *a2, ...)
{
  return _[a1 updateHomeSensingState];
}

id objc_msgSend_updateLabels(void *a1, const char *a2, ...)
{
  return _[a1 updateLabels];
}

id objc_msgSend_updateLocationSensingAvailability(void *a1, const char *a2, ...)
{
  return _[a1 updateLocationSensingAvailability];
}

id objc_msgSend_updateWallpaper_image_(void *a1, const char *a2, ...)
{
  return [a1 updateWallpaper:image:];
}

id objc_msgSend_updateWebViewRefreshIntervalFromServerResponse_(void *a1, const char *a2, ...)
{
  return [a1 updateWebViewRefreshIntervalFromServerResponse:];
}

id objc_msgSend_updateWithIconDescriptor_displayStyle_animated_(void *a1, const char *a2, ...)
{
  return [a1 updateWithIconDescriptor:displayStyle:animated:];
}

id objc_msgSend_updateWithSideBarViewController_sideBarItemManager_(void *a1, const char *a2, ...)
{
  return [a1 updateWithSideBarViewController:sideBarItemManager:];
}

id objc_msgSend_updateiCloudSwitchState_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateiCloudSwitchState:completionHandler:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_urlString(void *a1, const char *a2, ...)
{
  return _[a1 urlString];
}

id objc_msgSend_useWLANInsteadOfWiFi(void *a1, const char *a2, ...)
{
  return _[a1 useWLANInsteadOfWiFi];
}

id objc_msgSend_useWallpaperPickerCell(void *a1, const char *a2, ...)
{
  return _[a1 useWallpaperPickerCell];
}

id objc_msgSend_userAgent(void *a1, const char *a2, ...)
{
  return _[a1 userAgent];
}

id objc_msgSend_userContentController(void *a1, const char *a2, ...)
{
  return _[a1 userContentController];
}

id objc_msgSend_userDidConfirmExecution_ofTriggerWithIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 userDidConfirmExecution:ofTriggerWithIdentifier:completionHandler:];
}

id objc_msgSend_userFutureWithUniqueIdentifierStr_(void *a1, const char *a2, ...)
{
  return [a1 userFutureWithUniqueIdentifierStr];
}

id objc_msgSend_userHasValidHMSettings(void *a1, const char *a2, ...)
{
  return _[a1 userHasValidHMSettings];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInfoForLockAccessFirmwareUpgradeSetupInHome_(void *a1, const char *a2, ...)
{
  return [a1 userInfoForLockAccessFirmwareUpgradeSetupInHome:];
}

id objc_msgSend_userInfoForLockAccessPinCodeSetupInHome_(void *a1, const char *a2, ...)
{
  return [a1 userInfoForLockAccessPinCodeSetupInHome];
}

id objc_msgSend_userInfoForLockAccessWalletKeySetupInHome_(void *a1, const char *a2, ...)
{
  return [a1 userInfoForLockAccessWalletKeySetupInHome:];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userSettingsForHome_(void *a1, const char *a2, ...)
{
  return [a1 userSettingsForHome:];
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _[a1 uuid];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return [a1 valueForHTTPHeaderField:];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:];
}

id objc_msgSend_valueForParameter_(void *a1, const char *a2, ...)
{
  return [a1 valueForParameter:];
}

id objc_msgSend_valueWithWebView_(void *a1, const char *a2, ...)
{
  return [a1 valueWithWebView:];
}

id objc_msgSend_vibrancyEffectMappingColorsToColors_blackPointOut_whitePointIn_whitePointOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vibrancyEffectMappingColorsToColors:blackPointOut:whitePointIn:whitePointOut:");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewControllerForColumn_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForColumn:];
}

id objc_msgSend_viewControllerForPresentingLocationEditorForHome_delegate_customizationBlock_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForPresentingLocationEditorForHome:delegate:customizationBlock:];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_viewMarginInsetForViewSizeSubclass_withViewWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewMarginInsetForViewSizeSubclass:withViewWidth:");
}

id objc_msgSend_viewVisibleFutures(void *a1, const char *a2, ...)
{
  return _[a1 viewVisibleFutures];
}

id objc_msgSend_visibleViewController(void *a1, const char *a2, ...)
{
  return _[a1 visibleViewController];
}

id objc_msgSend_wallpaper(void *a1, const char *a2, ...)
{
  return _[a1 wallpaper];
}

id objc_msgSend_wallpaperBuilder(void *a1, const char *a2, ...)
{
  return _[a1 wallpaperBuilder];
}

id objc_msgSend_wallpaperEditCollectionFuture(void *a1, const char *a2, ...)
{
  return _[a1 wallpaperEditCollectionFuture];
}

id objc_msgSend_wallpaperPickerViewController(void *a1, const char *a2, ...)
{
  return _[a1 wallpaperPickerViewController];
}

id objc_msgSend_wallpaperView(void *a1, const char *a2, ...)
{
  return _[a1 wallpaperView];
}

id objc_msgSend_warmUp(void *a1, const char *a2, ...)
{
  return _[a1 warmUp];
}

id objc_msgSend_warmUpStaticPreferences(void *a1, const char *a2, ...)
{
  return _[a1 warmUpStaticPreferences];
}

id objc_msgSend_warmup(void *a1, const char *a2, ...)
{
  return _[a1 warmup];
}

id objc_msgSend_waterAccessoryTypeGroup(void *a1, const char *a2, ...)
{
  return _[a1 waterAccessoryTypeGroup];
}

id objc_msgSend_webView(void *a1, const char *a2, ...)
{
  return _[a1 webView];
}

id objc_msgSend_webViewActivityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 webViewActivityIndicator];
}

id objc_msgSend_webViewActivityIndicatorDelayTimer(void *a1, const char *a2, ...)
{
  return _[a1 webViewActivityIndicatorDelayTimer];
}

id objc_msgSend_webViewCache(void *a1, const char *a2, ...)
{
  return _[a1 webViewCache];
}

id objc_msgSend_webViewForURLString_(void *a1, const char *a2, ...)
{
  return [a1 webViewForURLString:];
}

id objc_msgSend_webViewForURLString_dependentWebViewURLString_(void *a1, const char *a2, ...)
{
  return [a1 webViewForURLString:dependentWebViewURLString:];
}

id objc_msgSend_webViewNavigationStateUpdated_navigationState_(void *a1, const char *a2, ...)
{
  return [a1 webViewNavigationStateUpdated:navigationState:];
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _[a1 widthAnchor];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _[a1 windowScene];
}

id objc_msgSend_windows(void *a1, const char *a2, ...)
{
  return _[a1 windows];
}