uint64_t sub_1000B60E8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  BOOL v5;
  BOOL v6;

  v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    v6 = *(void *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B614C()
{
  uint64_t v0 = type metadata accessor for OSLogger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = sub_100032844();
  id v5 = [v4 latestVersionForPersonalizedAdsConsent];

  id v6 = sub_100032844();
  [v6 setAcknowledgedVersionForPersonalizedAds:v5];

  if (qword_10097DF30 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100087728(v0, (uint64_t)qword_100981AE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v7, v0);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BF1D0;
  LogMessage.init(stringLiteral:)();
  id v8 = sub_100032844();
  id v9 = [v8 acknowledgedVersionForPersonalizedAds];

  v11[3] = &type metadata for Int;
  v11[0] = v9;
  static LogMessage.safe(_:)();
  sub_100089384((uint64_t)v11);
  Logger.info(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t getEnumTagSinglePayload for AdPrivacyOnboardingStep.ButtonsStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AdPrivacyOnboardingStep.ButtonsStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B6518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1000B6540(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1000B6548(unsigned char *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AdPrivacyOnboardingStep.ButtonsStyle()
{
  return &type metadata for AdPrivacyOnboardingStep.ButtonsStyle;
}

unint64_t sub_1000B6568()
{
  unint64_t result = qword_100981BA8;
  if (!qword_100981BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100981BA8);
  }
  return result;
}

unint64_t sub_1000B65BC()
{
  unint64_t result = qword_1009932C0;
  if (!qword_1009932C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1009932C0);
  }
  return result;
}

uint64_t sub_1000B65FC()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1000B6634()
{
  uint64_t v0 = type metadata accessor for LegacyAppState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  dispatch thunk of AppStateMachine.currentState.getter();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for LegacyAppState.updatable(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 20;
  }
  else if (v4 == enum case for LegacyAppState.downloadable(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 30;
  }
  else if (v4 == enum case for LegacyAppState.downloading(_:) || v4 == enum case for LegacyAppState.installing(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    uint64_t v6 = type metadata accessor for LegacyAppState.AppInstallationDetails();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
    return 5;
  }
  else if (v4 == enum case for LegacyAppState.openable(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);

    uint64_t v7 = type metadata accessor for OpenableDestination();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
    return 40;
  }
  else if (v4 == enum case for LegacyAppState.buyable(_:) || v4 == enum case for LegacyAppState.unknown(_:))
  {
    return 12;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
}

uint64_t sub_1000B68C8()
{
  uint64_t v0 = type metadata accessor for LegacyAppState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  dispatch thunk of AppStateMachine.currentState.getter();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for LegacyAppState.updatable(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 20;
  }
  else if (v4 == enum case for LegacyAppState.downloadable(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 30;
  }
  else if (v4 == enum case for LegacyAppState.downloading(_:) || v4 == enum case for LegacyAppState.installing(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    uint64_t v6 = type metadata accessor for LegacyAppState.AppInstallationDetails();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
    return 5;
  }
  else if (v4 == enum case for LegacyAppState.openable(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);

    uint64_t v7 = type metadata accessor for OpenableDestination();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
    return 40;
  }
  else if (v4 == enum case for LegacyAppState.buyable(_:) || v4 == enum case for LegacyAppState.unknown(_:))
  {
    return 10;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
}

uint64_t sub_1000B6B5C(uint64_t a1)
{
  return sub_1000B6B7C(a1, qword_100981C50);
}

uint64_t sub_1000B6B6C(uint64_t a1)
{
  return sub_1000B6B7C(a1, qword_100981C68);
}

uint64_t sub_1000B6B7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for FontSource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticDimension();
  sub_100042444(v7, a2);
  sub_100087728(v7, (uint64_t)a2);
  if (qword_10097F180 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for FontUseCase();
  uint64_t v9 = sub_100087728(v8, (uint64_t)qword_1009E3EF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v9, v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for FontSource.useCase(_:), v3);
  v13[3] = v3;
  v13[4] = (uint64_t)&protocol witness table for FontSource;
  v10 = sub_1000808B8(v13);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v10, v6, v3);
  StaticDimension.init(_:scaledLike:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1000B6D58()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    swift_getObjectType();
    char v2 = dispatch thunk of AppStateMachine.hasCurrentBetaState.getter();
    int v3 = v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_isBetaApp];
    v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_isBetaApp] = v2 & 1;
    if ((v2 & 1) != v3) {
      sub_100072D50();
    }
  }
}

id sub_1000B6E14()
{
  if (*(void *)&v0[OBJC_IVAR____TtC8AppStore14BaseLockupView_stateMachine])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v1 = v0;
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)();

    swift_unknownObjectRelease();
  }
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for BaseLockupView();
  return [super dealloc];
}

id sub_1000B6FC8()
{
  uint64_t v1 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  id v6 = sub_100038400(0xD000000000000014, 0x8000000100803080, 0);
  if (qword_10097DF80 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for StaticDimension();
  sub_100087728(v7, (uint64_t)qword_100981C50);
  static Dimensions.defaultRoundingRule.getter();
  AnyDimension.value(in:rounded:)();
  double v9 = v8;
  v28 = *(void (**)(char *, uint64_t))(v2 + 8);
  v28(v4, v1);
  sub_100084CF0(0, (unint64_t *)&qword_100984D10);
  if (qword_10097F180 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for FontUseCase();
  sub_100087728(v10, (uint64_t)qword_1009E3EF0);
  id v11 = [v0 traitCollection];
  v12 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)();

  id v29 = v12;
  [v12 capHeight];
  double v14 = floor((v13 - v9) * 0.5);
  id v15 = [objc_allocWithZone((Class)NSTextAttachment) init];
  id v16 = [self systemYellowColor];
  id v17 = [v6 imageWithTintColor:v16];
  id v27 = v6;
  id v18 = v17;

  [v15 setImage:v18];
  [v15 setBounds:0.0, v14, v9, v9];
  sub_100084CF0(0, &qword_100981D10);
  id v19 = [(id)swift_getObjCClassFromMetadata() attributedStringWithAttachment:v15];
  [v5 appendAttributedString:v19];
  if (qword_10097DF88 != -1) {
    swift_once();
  }
  sub_100087728(v7, (uint64_t)qword_100981C68);
  static Dimensions.defaultRoundingRule.getter();
  AnyDimension.value(in:rounded:)();
  double v21 = v20;
  v28(v4, v1);
  id v22 = [objc_allocWithZone((Class)NSTextAttachment) init];
  [v22 setBounds:0.0, 0.0, v21, 0.0];
  id v23 = [objc_allocWithZone((Class)UIImage) init];
  [v22 setImage:v23];

  id v24 = [self attributedStringWithAttachment:v22];
  [v5 appendAttributedString:v24];

  return v5;
}

id sub_1000B7444(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v10 - 8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel;
  id result = *(id *)&v3[OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel];
  if (a1)
  {
    if (result) {
      goto LABEL_10;
    }
    if (qword_10097F178 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for FontUseCase();
    uint64_t v16 = sub_100087728(v15, (uint64_t)qword_1009E3ED8);
    uint64_t v17 = *(void *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v12, v16, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v15);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DirectionalTextAlignment.none(_:), v6);
    id v18 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
    id v19 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
    double v20 = *(void **)&v3[v13];
    *(void *)&v3[v13] = v19;
    id v21 = v19;
    if (v20) {
      [v20 removeFromSuperview];
    }
    if (*(void *)&v3[v13]) {
      [v3 addSubview:];
    }

    id result = *(id *)&v3[v13];
    if (result)
    {
LABEL_10:
      [result setTextColor:a2];
      id result = *(id *)&v3[v13];
      if (result) {
        return [result setHidden:0];
      }
    }
  }
  else if (result)
  {
    [result setHidden:1];
    id result = *(id *)&v3[v13];
    if (result)
    {
      return [result setText:0];
    }
  }
  return result;
}

void sub_1000B7744()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel;
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel];
  if (v10) {
    goto LABEL_9;
  }
  if (qword_10097F1C8 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for FontUseCase();
  uint64_t v12 = sub_100087728(v11, (uint64_t)qword_1009E3FC8);
  uint64_t v13 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, v12, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v11);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  id v14 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
  uint64_t v15 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  uint64_t v16 = *(void **)&v1[v9];
  *(void *)&v1[v9] = v15;
  id v17 = v15;
  if (v16) {
    [v16 removeFromSuperview];
  }
  if (*(void *)&v1[v9]) {
    [v1 addSubview:];
  }

  uint64_t v10 = *(void **)&v1[v9];
  if (v10)
  {
LABEL_9:
    id v18 = v10;
    dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter();

    id v19 = *(void **)&v1[v9];
    if (v19)
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      id v20 = v19;
      id v21 = (void *)static UIColor.tertiaryText.getter();
      [v20 setTextColor:v21];

      uint64_t v22 = *(void **)&v1[v9];
      if (v22) {
        [v22 setHidden:0];
      }
    }
  }
}

uint64_t sub_1000B7A98()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B7AD0()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000B7B10()
{
}

void sub_1000B7B1C()
{
  uint64_t v49 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v1 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
  type metadata accessor for ArtworkView();
  *(void *)&v0[v7] = static ArtworkView.iconArtworkView.getter();
  uint64_t v8 = OBJC_IVAR____TtC8AppStore14BaseLockupView_ordinalLabel;
  if (qword_10097F1E0 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for FontUseCase();
  uint64_t v10 = sub_100087728(v9, (uint64_t)qword_1009E4010);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = v11 + 16;
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v50(v6, v10, v9);
  uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
  uint64_t v13 = v11 + 56;
  id v14 = v15;
  v15(v6, 0, 1, v9);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  unsigned int v46 = enum case for DirectionalTextAlignment.none(_:);
  uint64_t v47 = v1 + 104;
  v45 = v16;
  ((void (*)(char *))v16)(v3);
  Class v48 = (Class)type metadata accessor for DynamicTypeLabel();
  id v17 = objc_allocWithZone(v48);
  *(void *)&v0[v8] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  *(void *)&v0[OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel] = 0;
  uint64_t v18 = OBJC_IVAR____TtC8AppStore14BaseLockupView_titleLabel;
  if (qword_10097F180 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100087728(v9, (uint64_t)qword_1009E3EF0);
  uint64_t v20 = v12;
  v50(v6, v19, v9);
  v44 = v14;
  v14(v6, 0, 1, v9);
  v45(v3, v46, v49);
  id v21 = objc_allocWithZone(v48);
  uint64_t v22 = v3;
  *(void *)&v0[v18] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  uint64_t v42 = OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel;
  v43 = v0;
  if (qword_10097F1A0 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_100087728(v9, (uint64_t)qword_1009E3F50);
  uint64_t v41 = v20;
  v50(v6, v40, v9);
  uint64_t v23 = v44;
  v44(v6, 0, 1, v9);
  id v24 = v3;
  uint64_t v25 = v46;
  uint64_t v39 = v13;
  uint64_t v26 = v49;
  id v27 = v45;
  v45(v24, v46, v49);
  id v28 = objc_allocWithZone(v48);
  uint64_t v29 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  v30 = v43;
  *(void *)&v43[v42] = v29;
  *(void *)&v30[OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel] = 0;
  uint64_t v31 = v26;
  uint64_t v32 = OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabel;
  v50(v6, v40, v9);
  v23(v6, 0, 1, v9);
  v27(v22, v25, v31);
  id v33 = objc_allocWithZone(v48);
  *(void *)&v30[v32] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  uint64_t v34 = OBJC_IVAR____TtC8AppStore14BaseLockupView_offerButton;
  *(void *)&v30[v34] = [objc_allocWithZone((Class)type metadata accessor for OfferButton()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v35 = &v30[OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabelPresenter];
  _OWORD *v35 = 0u;
  v35[1] = 0u;
  v36 = &v30[OBJC_IVAR____TtC8AppStore14BaseLockupView_title];
  void *v36 = 0;
  v36[1] = 0;
  uint64_t v37 = OBJC_IVAR____TtC8AppStore14BaseLockupView_titleTextColor;
  sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  *(void *)&v30[v37] = static UIColor.primaryText.getter();
  v38 = &v30[OBJC_IVAR____TtC8AppStore14BaseLockupView_stateMachine];
  void *v38 = 0;
  v38[1] = 0;
  v30[OBJC_IVAR____TtC8AppStore14BaseLockupView_isBetaApp] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1000B8148()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for PresentationContextViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [self clearColor];
    [v2 setBackgroundColor:v3];

    id v4 = [v0 view];
    if (v4)
    {
      uint64_t v5 = v4;
      [v4 setUserInteractionEnabled:0];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1000B8304(char a1)
{
  v34.receiver = v1;
  v34.super_class = (Class)type metadata accessor for PresentationContextViewController();
  [super viewDidAppear:a1 & 1];
  id v3 = *(void **)&v1[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_contextViewController];
  if (v3)
  {
    uint64_t v4 = OBJC_IVAR____TtC8AppStore33PresentationContextViewController_hasPresentedViewController;
    if ((v1[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_hasPresentedViewController] & 1) == 0)
    {
      id v5 = v3;
      id v6 = [v5 popoverPresentationController];
      if (v6)
      {
        uint64_t v7 = v6;
        id v8 = [v6 sourceView];
        if (v8)
        {
          uint64_t v9 = v8;
          id v10 = [v8 window];
          if (v10)
          {
            id v11 = v10;
            id v12 = [v9 superview];
            if (v12)
            {
              uint64_t v13 = v12;
              [v9 frame];
              [v13 convertRect:v11 toCoordinateSpace:];
              CGFloat v15 = v14;
              CGFloat v17 = v16;
              CGFloat v19 = v18;
              CGFloat v21 = v20;
            }
            else
            {
              CGFloat v19 = 0.0;
              CGFloat v21 = 0.0;
              CGFloat v15 = 0.0;
              CGFloat v17 = 0.0;
            }
            id v22 = [v1 view];
            [v7 setSourceView:v22];

            [v7 sourceRect];
            CGFloat v24 = v23;
            CGFloat v26 = v25;
            CGFloat v28 = v27;
            CGFloat v30 = v29;
            v35.origin.x = v15;
            v35.origin.y = v17;
            v35.size.width = v19;
            v35.size.height = v21;
            CGFloat MinX = CGRectGetMinX(v35);
            v36.size.width = v19;
            CGFloat v32 = MinX;
            v36.origin.x = v15;
            v36.origin.y = v17;
            v36.size.height = v21;
            CGFloat MinY = CGRectGetMinY(v36);
            v37.origin.x = v24;
            v37.origin.y = v26;
            v37.size.width = v28;
            v37.size.height = v30;
            CGRect v38 = CGRectOffset(v37, v32, MinY);
            [v7 setSourceRect:v38.origin.x, v38.origin.y, v38.size.width, v38.size.height];

            uint64_t v7 = v9;
          }
          else
          {
            id v11 = v9;
          }

          uint64_t v7 = v11;
        }
      }
      [v1 presentViewController:v5 animated:v1[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_animatedContext] completion:0];

      v1[v4] = 1;
    }
  }
}

void sub_1000B85B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)&v3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_contextViewController];
  *(void *)&v3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_contextViewController] = 0;

  v3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_hasPresentedViewController] = 0;
  id v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v3;
  aBlock[4] = sub_1000B8A40;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000162D4;
  aBlock[3] = &unk_1008BBAE0;
  uint64_t v9 = _Block_copy(aBlock);
  sub_100060050(a2);
  id v10 = v3;
  swift_release();
  v11.receiver = v10;
  v11.super_class = (Class)type metadata accessor for PresentationContextViewController();
  [super dismissViewControllerWithTransition:a1 completion:v9];
  _Block_release(v9);
}

void sub_1000B86DC(void (*a1)(uint64_t), int a2, char *a3)
{
  if (a1)
  {
    uint64_t v5 = swift_retain();
    a1(v5);
    sub_10006012C((uint64_t)a1);
  }
  id v6 = [a3 presentedViewController];

  if (!v6
    && (a3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_isPresentingActivityViewController] & 1) == 0)
  {
    uint64_t v7 = *(void (**)(uint64_t))&a3[OBJC_IVAR____TtC8AppStore33PresentationContextViewController_dismissOverride];
    if (v7)
    {
      uint64_t v8 = swift_retain();
      v7(v8);
      sub_10006012C((uint64_t)v7);
    }
    else
    {
      id v9 = [a3 presentingViewController];
      if (v9)
      {
        id v10 = v9;
        [v9 dismissViewControllerAnimated:0 completion:0];
      }
    }
  }
}

id sub_1000B8908()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PresentationContextViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for PresentationContextViewController()
{
  return self;
}

uint64_t sub_1000B89B0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B89E8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1000B89F8()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000B8A40()
{
  sub_1000B86DC(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32));
}

id sub_1000B8AAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SnapshotPageTraitEnvironment();
  return [super dealloc];
}

void UIViewController.pageContainerSize.getter()
{
  id v1 = [v0 view];
  if (v1)
  {
    objc_super v2 = v1;
    [v1 bounds];
  }
  else
  {
    __break(1u);
  }
}

double UIViewController.pageMarginInsets.getter()
{
  return 0.0;
}

id UIViewController.snapshotPageTraitEnvironment.getter()
{
  [v0 pageContainerSize];
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  id v5 = [v0 traitCollection];
  id v6 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)uint64_t v8 = v2;
  *((void *)v8 + 1) = v4;
  *(void *)&v7[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v5;
  v10.receiver = v7;
  v10.super_class = v6;
  return [super init];
}

uint64_t type metadata accessor for SnapshotPageTraitEnvironment()
{
  return self;
}

double sub_1000B8D04()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  double v2 = 0.0;
  double MaxY = 0.0;
  if (Strong)
  {
    uint64_t v4 = Strong;
    id v5 = [Strong navigationController];

    if (v5)
    {
      id v6 = [v5 navigationBar];

      [v6 frame];
      CGFloat v8 = v7;
      CGFloat v10 = v9;
      CGFloat v12 = v11;
      CGFloat v14 = v13;

      v20.origin.x = v8;
      v20.origin.y = v10;
      v20.size.width = v12;
      v20.size.height = v14;
      double MaxY = CGRectGetMaxY(v20);
    }
  }
  CGFloat v15 = *(void **)(v0 + 32);
  if (v15)
  {
    double v16 = (void *)swift_unknownObjectWeakLoadStrong();
    id v17 = v15;
    sub_100174BF8(v16);
    double v2 = v18;
  }
  return fmax(v2 - MaxY, 16.0);
}

void sub_1000B8E14()
{
  uint64_t v1 = v0;
  double v2 = *(void (**)(uint64_t, double, double))(v0 + 40);
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3, 1.0, 0.0);
    sub_10006012C((uint64_t)v2);
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    id v6 = [Strong navigationController];

    if (v6)
    {
      id v7 = [v6 navigationBar];

      [v7 _setTitleOpacity:1.0];
    }
  }
  *(unsigned char *)(v1 + 88) = 0;
}

void sub_1000B8ED8(void *a1, void *a2)
{
  uint64_t v31 = a2;
  uint64_t v4 = type metadata accessor for Uber.Style();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v29 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100082C28(&qword_100981E78);
  __chkstk_darwin(v7);
  double v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100082C28(&qword_100981E80);
  __chkstk_darwin(v10 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  CGFloat v14 = (char *)&v29 - v13;
  __chkstk_darwin(v15);
  id v17 = (char *)&v29 - v16;
  double v18 = *(void **)(v2 + 32);
  uint64_t v32 = v2;
  *(void *)(v2 + 32) = a1;
  a1;

  if (a1)
  {
    Uber.style.getter();
    CGFloat v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v19(v17, 0, 1, v4);
  }
  else
  {
    CGFloat v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v19(v17, 1, 1, v4);
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v14, enum case for Uber.Style.inline(_:), v4);
  v19(v14, 0, 1, v4);
  uint64_t v20 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1000BA8B0((uint64_t)v17, (uint64_t)v9);
  sub_1000BA8B0((uint64_t)v14, v20);
  CGFloat v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v9, 1, v4) == 1)
  {
    sub_100082BCC((uint64_t)v14, &qword_100981E80);
    sub_100082BCC((uint64_t)v17, &qword_100981E80);
    if (v21(v20, 1, v4) == 1)
    {
      sub_100082BCC((uint64_t)v9, &qword_100981E80);
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v22 = v30;
    sub_1000BA8B0((uint64_t)v9, v30);
    if (v21(v20, 1, v4) != 1)
    {
      double v23 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v20, v4);
      sub_1000BA918();
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      double v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v23, v4);
      sub_100082BCC((uint64_t)v14, &qword_100981E80);
      sub_100082BCC((uint64_t)v17, &qword_100981E80);
      v25((char *)v22, v4);
      sub_100082BCC((uint64_t)v9, &qword_100981E80);
      if (v24) {
        goto LABEL_13;
      }
      goto LABEL_11;
    }
    sub_100082BCC((uint64_t)v14, &qword_100981E80);
    sub_100082BCC((uint64_t)v17, &qword_100981E80);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v22, v4);
  }
  sub_100082BCC((uint64_t)v9, &qword_100981E78);
LABEL_11:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v27 = (void *)Strong;
    double v28 = sub_1000B8D04();
    (*(void (**)(void, void))((swift_isaMask & *v27) + 0x1C8))(*(void *)&v28, 0);
  }
LABEL_13:
  sub_1000B9368(v31);
}

void sub_1000B9368(void *a1)
{
  uint64_t v3 = type metadata accessor for Uber.Style();
  uint64_t v74 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082C28(&qword_100981E78);
  __chkstk_darwin(v6);
  uint64_t v73 = (uint64_t)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28(&qword_100981E80);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v68 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v68 - v15;
  if (!*(void *)(v1 + 32)) {
    return;
  }
  uint64_t v72 = v1 + 16;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  double v18 = Strong;
  id v19 = [Strong collectionView];

  if (!v19) {
    return;
  }
  sub_1000BA870();
  id v20 = a1;
  uint64_t v71 = v6;
  CGFloat v21 = v13;
  uint64_t v22 = v1;
  double v23 = v16;
  char v24 = v10;
  double v25 = v5;
  uint64_t v26 = v3;
  id v27 = v20;
  char v28 = static NSObject.== infix(_:_:)();

  v70 = v27;
  uint64_t v29 = v26;
  uint64_t v30 = v25;
  uint64_t v31 = (uint64_t)v24;
  uint64_t v32 = (uint64_t)v23;
  uint64_t v33 = v22;
  uint64_t v34 = (uint64_t)v21;
  uint64_t v35 = v71;

  if ((v28 & 1) == 0 || *(unsigned char *)(v33 + 88) != 1) {
    return;
  }
  CGRect v36 = v70;
  [v70 _systemContentInset];
  [v36 contentOffset];
  double v38 = v37;
  uint64_t v39 = *(void **)(v33 + 32);
  double v40 = 0.0;
  if (v39)
  {
    uint64_t v41 = (void *)swift_unknownObjectWeakLoadStrong();
    id v42 = v39;
    sub_100174BF8(v41);
    double v40 = v43;
  }
  double v44 = fmin(v38 / v40, 1.0);
  if (v44 < 0.0) {
    double v45 = 0.0;
  }
  else {
    double v45 = v44;
  }
  unsigned int v46 = *(void (**)(uint64_t, double, double))(v33 + 40);
  if (v46)
  {
    uint64_t v47 = swift_retain();
    v46(v47, v45, 0.0);
    sub_10006012C((uint64_t)v46);
  }
  uint64_t v48 = *(void *)(v33 + 72);
  uint64_t v49 = v74;
  if (!v48) {
    goto LABEL_31;
  }
  uint64_t v50 = *(void *)(v33 + 32);
  v68[1] = *(void *)(v33 + 80);
  v69 = (void (*)(uint64_t, __n128, double))v48;
  if (v50)
  {
    sub_100060050(v48);
    swift_retain();
    Uber.style.getter();
    swift_release();
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
    v51(v32, 0, 1, v29);
  }
  else
  {
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56);
    v68[0] = v31;
    v51(v32, 1, 1, v29);
    uint64_t v31 = v68[0];
    swift_retain();
  }
  (*(void (**)(uint64_t, void, uint64_t))(v49 + 104))(v34, enum case for Uber.Style.inline(_:), v29);
  v51(v34, 0, 1, v29);
  uint64_t v52 = *(int *)(v35 + 48);
  uint64_t v53 = v73;
  uint64_t v54 = v73 + v52;
  sub_1000BA8B0(v32, v73);
  sub_1000BA8B0(v34, v54);
  v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v55(v53, 1, v29) == 1)
  {
    sub_100082BCC(v34, &qword_100981E80);
    uint64_t v53 = v73;
    sub_100082BCC(v32, &qword_100981E80);
    int v56 = v55(v54, 1, v29);
    v57 = v69;
    if (v56 == 1)
    {
      uint64_t v58 = sub_100082BCC(v53, &qword_100981E80);
LABEL_24:
      if (v45 >= 0.5) {
        double v63 = 0.35;
      }
      else {
        double v63 = 0.2;
      }
      v59.n128_u64[0] = 1.0;
      if (v45 < 0.5) {
        v59.n128_f64[0] = 0.0;
      }
      v57(v58, v59, v63);
      sub_1000B9EC4(v70, *(uint64_t *)&v63, 0, v45);
      sub_10006012C((uint64_t)v57);
      goto LABEL_32;
    }
  }
  else
  {
    sub_1000BA8B0(v53, v31);
    if (v55(v54, 1, v29) != 1)
    {
      uint64_t v60 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v30, v54, v29);
      sub_1000BA918();
      char v61 = dispatch thunk of static Equatable.== infix(_:_:)();
      v62 = *(void (**)(char *, uint64_t))(v60 + 8);
      v62(v30, v29);
      sub_100082BCC(v34, &qword_100981E80);
      sub_100082BCC(v32, &qword_100981E80);
      v62((char *)v31, v29);
      uint64_t v58 = sub_100082BCC(v53, &qword_100981E80);
      v57 = v69;
      if (v61) {
        goto LABEL_24;
      }
      goto LABEL_30;
    }
    sub_100082BCC(v34, &qword_100981E80);
    sub_100082BCC(v32, &qword_100981E80);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v31, v29);
    v57 = v69;
  }
  sub_100082BCC(v53, &qword_100981E78);
LABEL_30:
  sub_10006012C((uint64_t)v57);
LABEL_31:
  sub_1000B9EC4(v70, 0, 1, v45);
LABEL_32:
  sub_1000BA350(v45);
  v64 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v64)
  {
    v65 = v64;
    id v66 = [v64 navigationController];

    if (v66)
    {
      id v67 = [v66 navigationBar];

      [v67 _setTitleOpacity:v45];
    }
  }
}

uint64_t sub_1000B9A34(double a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v10 = type metadata accessor for Uber.Style();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100082C28(&qword_100981E78);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100082C28(&qword_100981E80);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v36 - v21;
  __chkstk_darwin(v23);
  double v25 = (char *)v36 - v24;
  if (a4 > a2) {
    goto LABEL_2;
  }
  if (fabs(a6) <= 0.4)
  {
    v36[1] = v6;
    if (*(void *)(v6 + 32))
    {
      swift_retain();
      Uber.style.getter();
      swift_release();
      id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v27(v25, 0, 1, v10);
    }
    else
    {
      id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v27((char *)v36 - v24, 1, 1, v10);
    }
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v22, enum case for Uber.Style.inline(_:), v10);
    v27(v22, 0, 1, v10);
    uint64_t v28 = (uint64_t)&v16[*(int *)(v14 + 48)];
    sub_1000BA8B0((uint64_t)v25, (uint64_t)v16);
    sub_1000BA8B0((uint64_t)v22, v28);
    uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (v29((uint64_t)v16, 1, v10) == 1)
    {
      sub_100082BCC((uint64_t)v22, &qword_100981E80);
      sub_100082BCC((uint64_t)v25, &qword_100981E80);
      if (v29(v28, 1, v10) == 1)
      {
        sub_100082BCC((uint64_t)v16, &qword_100981E80);
        char v26 = 0;
        return v26 & 1;
      }
      goto LABEL_12;
    }
    sub_1000BA8B0((uint64_t)v16, (uint64_t)v19);
    if (v29(v28, 1, v10) == 1)
    {
      sub_100082BCC((uint64_t)v22, &qword_100981E80);
      sub_100082BCC((uint64_t)v25, &qword_100981E80);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
LABEL_12:
      sub_100082BCC((uint64_t)v16, &qword_100981E78);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v28, v10);
    sub_1000BA918();
    char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v11 + 8);
    v31(v13, v10);
    sub_100082BCC((uint64_t)v22, &qword_100981E80);
    sub_100082BCC((uint64_t)v25, &qword_100981E80);
    v31(v19, v10);
    sub_100082BCC((uint64_t)v16, &qword_100981E80);
    if (v30)
    {
LABEL_2:
      char v26 = 0;
      return v26 & 1;
    }
  }
LABEL_14:
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v33 = Strong;
    id v34 = [Strong traitCollection];

    LOBYTE(v33) = UITraitCollection.prefersAccessibilityLayouts.getter();
    char v26 = v33 ^ 1;
  }
  else
  {
    char v26 = 1;
  }
  return v26 & 1;
}

uint64_t sub_1000B9EC4(void *a1, uint64_t a2, char a3, double a4)
{
  uint64_t v8 = type metadata accessor for Uber.Style();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v37 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28(&qword_100981E78);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100082C28(&qword_100981E80);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v19 = (char *)&v37 - v18;
  *(void *)&double v21 = __chkstk_darwin(v20).n128_u64[0];
  uint64_t v23 = (char *)&v37 - v22;
  if (a3)
  {
    [a1 _verticalVelocity:v21];
    double v24 = v25;
  }
  else
  {
    double v24 = *(double *)&a2;
  }
  if (*(void *)(v38 + 32))
  {
    swift_retain();
    Uber.style.getter();
    swift_release();
    char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v26(v23, 0, 1, v8);
  }
  else
  {
    char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v26(v23, 1, 1, v8);
  }
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v19, enum case for Uber.Style.inline(_:), v8);
  v26(v19, 0, 1, v8);
  uint64_t v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1000BA8B0((uint64_t)v23, (uint64_t)v13);
  sub_1000BA8B0((uint64_t)v19, v27);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v28((uint64_t)v13, 1, v8) == 1)
  {
    sub_100082BCC((uint64_t)v19, &qword_100981E80);
    sub_100082BCC((uint64_t)v23, &qword_100981E80);
    int v29 = v28(v27, 1, v8);
    uint64_t v30 = v38;
    if (v29 == 1)
    {
      uint64_t result = sub_100082BCC((uint64_t)v13, &qword_100981E80);
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  sub_1000BA8B0((uint64_t)v13, (uint64_t)v16);
  if (v28(v27, 1, v8) == 1)
  {
    sub_100082BCC((uint64_t)v19, &qword_100981E80);
    sub_100082BCC((uint64_t)v23, &qword_100981E80);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
    uint64_t v30 = v38;
LABEL_12:
    uint64_t result = sub_100082BCC((uint64_t)v13, &qword_100981E78);
    goto LABEL_16;
  }
  uint64_t v32 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v37, v27, v8);
  sub_1000BA918();
  char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v34 = *(void (**)(char *, uint64_t))(v9 + 8);
  v34(v32, v8);
  sub_100082BCC((uint64_t)v19, &qword_100981E80);
  sub_100082BCC((uint64_t)v23, &qword_100981E80);
  v34(v16, v8);
  uint64_t result = sub_100082BCC((uint64_t)v13, &qword_100981E80);
  uint64_t v30 = v38;
  if ((v33 & 1) == 0)
  {
LABEL_16:
    uint64_t v35 = *(void (**)(uint64_t, double, double))(v30 + 40);
    if (!v35) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v35 = *(void (**)(uint64_t, double, double))(v30 + 56);
  if (!v35) {
    return result;
  }
LABEL_17:
  uint64_t v36 = swift_retain();
  v35(v36, a4, v24);
  return sub_10006012C((uint64_t)v35);
}

void sub_1000BA350(double a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    id v4 = [Strong navigationItem];

    id v8 = [v4 titleView];
    if (v8)
    {
      type metadata accessor for UberNavigationBarTitleView();
      uint64_t v5 = swift_dynamicCastClass();
      if (v5)
      {
        uint64_t v6 = v5;
        if (*(unsigned char *)(v5 + OBJC_IVAR____TtC8AppStore26UberNavigationBarTitleView_hasBackButton) == 1)
        {
          uint64_t v7 = OBJC_IVAR____TtC8AppStore26UberNavigationBarTitleView_backButtonStyle;
          if (a1 < 0.5 != *(unsigned char *)(v5 + OBJC_IVAR____TtC8AppStore26UberNavigationBarTitleView_backButtonStyle)
            && *(unsigned char *)(v5 + OBJC_IVAR____TtC8AppStore26UberNavigationBarTitleView_canSetBackButtonStyle) == 1)
          {
            sub_1005A186C(a1 < 0.5, 1);
            *(unsigned char *)(v6 + v7) = a1 < 0.5;
          }
        }
      }
    }
  }
}

void sub_1000BA48C(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5 = v4;
  if (*(void *)(v4 + 32))
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v11 = Strong;
      id v12 = [Strong collectionView];

      if (v12)
      {
        sub_1000BA870();
        id v13 = a1;
        char v14 = static NSObject.== infix(_:_:)();

        if (v14)
        {
          [v13 contentSize];
          double v16 = v15;
          double v18 = v17;
          [v13 frame];
          if ((sub_1000B9A34(v16, v18, v19, v20, a3, a4) & 1) != 0 && *(double *)(a2 + 8) > 0.0)
          {
            [v13 contentInset];
            double v22 = v21;
            [v13 _systemContentInset];
            double v24 = v23;
            double v25 = (void *)swift_unknownObjectWeakLoadStrong();
            double v26 = 0.0;
            double MaxY = 0.0;
            if (v25)
            {
              uint64_t v28 = v25;
              id v29 = [v25 navigationController];

              if (v29)
              {
                id v30 = [v29 navigationBar];

                [v30 frame];
                CGFloat v32 = v31;
                CGFloat v34 = v33;
                CGFloat v36 = v35;
                CGFloat v38 = v37;

                v50.origin.x = v32;
                v50.origin.y = v34;
                v50.size.width = v36;
                v50.size.height = v38;
                double MaxY = CGRectGetMaxY(v50);
              }
            }
            uint64_t v39 = *(void **)(v5 + 32);
            if (v39)
            {
              double v40 = (void *)swift_unknownObjectWeakLoadStrong();
              id v41 = v39;
              sub_100174BF8(v40);
              double v43 = v42;

              uint64_t v44 = *(void *)(v5 + 32);
              if (v44) {
                double v26 = *(double *)(v44 + OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset);
              }
            }
            else
            {
              double v43 = 0.0;
            }
            double v45 = v43 + v26 - v24;
            if (v45 < 0.0) {
              double v45 = 0.0;
            }
            double v46 = *(double *)(a2 + 8);
            if (v46 <= v45)
            {
              double v47 = 0.07;
              if (a4 < 0.0) {
                double v47 = 0.5;
              }
              double v48 = v47 * v45;
              double v49 = v45 - MaxY;
              if (v46 <= v48) {
                double v49 = -(v22 + v24);
              }
              *(double *)(a2 + 8) = v49;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1000BA710()
{
  sub_100092F18(v0 + 16);

  sub_10006012C(*(void *)(v0 + 40));
  sub_10006012C(*(void *)(v0 + 56));
  sub_10006012C(*(void *)(v0 + 72));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UberedPageScrollObserver()
{
  return self;
}

void sub_1000BA78C(UIScrollView in)
{
}

void sub_1000BA7B8(UIScrollView in)
{
}

void sub_1000BA7E8(UIScrollView in, Swift::Bool willDecelerate)
{
}

void sub_1000BA814(UIScrollView in)
{
}

uint64_t sub_1000BA844()
{
  return ScrollObserver.didScroll(visibleItems:layoutEnvironment:contentOffset:)();
}

unint64_t sub_1000BA870()
{
  unint64_t result = qword_100981E70;
  if (!qword_100981E70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100981E70);
  }
  return result;
}

uint64_t sub_1000BA8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100981E80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000BA918()
{
  unint64_t result = qword_100981E88;
  if (!qword_100981E88)
  {
    type metadata accessor for Uber.Style();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100981E88);
  }
  return result;
}

uint64_t sub_1000BA970(uint64_t a1, uint64_t a2)
{
  return sub_1000BA9A0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SearchBarObservingPresenter.searchBarCancelAction.getter);
}

uint64_t sub_1000BA988(uint64_t a1, uint64_t a2)
{
  return sub_1000BA9A0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SearchBarObservingPresenter.searchFieldClearAction.getter);
}

uint64_t sub_1000BA9A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  (*(void (**)(void *__return_ptr))(a2 + 8))(v8);
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  sub_100081D90(v8, v9);
  uint64_t v6 = a3(v4, v5);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v8);
  return v6;
}

uint64_t sub_1000BAA1C(void *a1)
{
  if (*(unsigned char *)(v1 + 24))
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  else
  {
    double v3 = *(double *)(v1 + 16);
    [a1 _verticalVelocity];
    uint64_t v5 = v4;
    [a1 _systemContentInset];
    double v7 = v6;
    [a1 contentInset];
    double v9 = v7 + v8;
    [a1 contentOffset];
    *(void *)(v1 + 48) = v9 + v10 >= v3;
    *(void *)(v1 + 56) = v5;
  }
  uint64_t v11 = ProductNavigationBarMode.rawValue.getter();
  uint64_t result = ProductNavigationBarMode.rawValue.getter();
  if (v11 != result)
  {
    id v13 = *(uint64_t (**)(void, uint64_t, double))(v1 + 32);
    if (v13) {
      return v13(*(void *)(v1 + 48), 1, *(double *)(v1 + 56));
    }
  }
  return result;
}

uint64_t sub_1000BAB1C()
{
  sub_10006012C(*(void *)(v0 + 32));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ProductScrollObserver()
{
  return self;
}

double sub_1000BAB94()
{
  uint64_t v0 = type metadata accessor for TimingCurve();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  double v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100082C28(&qword_100981F78);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = 0.3;
  uint64_t v9 = 0x3FA999999999999ALL;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for TimingCurve.linear(_:), v0);
  Interpolator.init(fromValue:toValue:curve:)();
  Interpolator.value(forInput:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t sub_1000BAD74()
{
  return sub_1000BAE7C(&qword_100981F80, (void (*)(uint64_t))type metadata accessor for RoundedButtonCollectionViewCell);
}

double sub_1000BADBC()
{
  type metadata accessor for RoundedButton();
  sub_1000BAE7C(&qword_100981F88, (void (*)(uint64_t))&type metadata accessor for RoundedButton);
  ItemLayoutContext.typedModel<A>(as:)();
  if (!v2) {
    return 0.0;
  }
  sub_1000F3FC0();
  double v0 = sub_100756C48();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1000BAE7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

UIContentSizeCategory sub_1000BAEC4()
{
  qword_100981F90 = (uint64_t)UIContentSizeCategoryAccessibilityExtraLarge;
  return UIContentSizeCategoryAccessibilityExtraLarge;
}

id sub_1000BAEDC(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews] = _swiftEmptyArrayStorage;
  double v10 = v4;
  static SearchTagsRibbonViewLayout.Metrics.standard.getter();
  *(void *)&v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels] = 0;
  v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_shouldEvenlyDistribute] = 2;
  v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_isInsideSearchAd] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsCalculator] = 0;
  uint64_t v11 = &v10[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;

  v22.receiver = v10;
  v22.super_class = ObjectType;
  id v12 = [super initWithFrame:a1, a2, a3, a4];
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v16 = v12;
  [v16 setLayoutMargins:UIEdgeInsetsZero.top, left, bottom, right];
  uint64_t v17 = qword_10097DF90;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  [v18 setMaximumContentSizeCategory:qword_100981F90];

  sub_100082C28(&qword_100985E10);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1007BEDF0;
  *(void *)(v19 + 32) = type metadata accessor for UITraitLegibilityWeight();
  *(void *)(v19 + 40) = &protocol witness table for UITraitLegibilityWeight;
  id v20 = v18;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v20;
}

id sub_1000BB128()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews];
  swift_bridgeObjectRetain();
  uint64_t v2 = SearchTagsRibbonViewLayout.Metrics.maximumNumberOfItems.getter();
  id result = (id)sub_1004C8780(v2, v1);
  unint64_t v7 = (v6 >> 1) - v5;
  if (v6 >> 1 != v5)
  {
    if ((uint64_t)(v6 >> 1) <= v5)
    {
      __break(1u);
      return result;
    }
    double v8 = (uint64_t *)(v4 + 16 * v5);
    do
    {
      uint64_t v9 = *v8;
      v8 += 2;
      [v0 addSubview:v9];
      --v7;
    }
    while (v7);
  }
  swift_unknownObjectRelease();

  return [v0 setNeedsLayout];
}

uint64_t sub_1000BB1E0()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v20 = type metadata accessor for LayoutRect();
  uint64_t v3 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for SearchTagsRibbonViewLayout();
  uint64_t v19 = *(void *)(v21 - 8);
  *(void *)&double v10 = __chkstk_darwin(v21).n128_u64[0];
  id v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.receiver = v1;
  v22.super_class = ObjectType;
  [super layoutSubviews];
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1000BB4E0(v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v1[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metrics], v6);
  SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)();
  LayoutMarginsAware<>.layoutFrame.getter();
  SearchTagsRibbonViewLayout.placeChildren(relativeTo:in:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  char v14 = &v1[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock];
  swift_beginAccess();
  double v15 = *(void (**)(uint64_t))v14;
  if (*(void *)v14)
  {
    swift_endAccess();
    uint64_t v16 = swift_retain();
    v15(v16);
    sub_10006012C((uint64_t)v15);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v12, v21);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v21);
    return swift_endAccess();
  }
}

void *sub_1000BB4E0(uint64_t a1)
{
  uint64_t v3 = sub_100082C28(&qword_100981FF8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100082C28(&qword_1009815E0);
  __chkstk_darwin(v23);
  uint64_t v22 = (uint64_t)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v10 = (char *)v20 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return _swiftEmptyArrayStorage;
  }
  v20[1] = v1;
  uint64_t v21 = v8;
  id v12 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  v20[0] = a1;
  uint64_t v13 = a1 + 40;
  char v14 = _swiftEmptyArrayStorage;
  do
  {
    double v15 = *(void **)(v13 - 8);
    swift_getObjectType();
    id v16 = v15;
    dispatch thunk of MetadataRibbonItemView.searchLayoutContext.getter();

    if ((*v12)(v5, 1, v23) == 1)
    {
      sub_100082BCC((uint64_t)v5, &qword_100981FF8);
    }
    else
    {
      sub_100082CD0((uint64_t)v5, (uint64_t)v10, &qword_1009815E0);
      sub_100082CD0((uint64_t)v10, v22, &qword_1009815E0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v14 = (void *)sub_1000ABA18(0, v14[2] + 1, 1, (unint64_t)v14);
      }
      unint64_t v18 = v14[2];
      unint64_t v17 = v14[3];
      if (v18 >= v17 >> 1) {
        char v14 = (void *)sub_1000ABA18(v17 > 1, v18 + 1, 1, (unint64_t)v14);
      }
      v14[2] = v18 + 1;
      sub_100082CD0(v22, (uint64_t)v14+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v18, &qword_1009815E0);
    }
    v13 += 16;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  return v14;
}

double sub_1000BB7C8()
{
  uint64_t v1 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for SearchTagsRibbonViewLayout();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1000BB4E0(v9);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metrics, v1);
  SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)();
  SearchTagsRibbonViewLayout.measurements(fitting:in:)();
  double v11 = v10;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

id sub_1000BBA54(unint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v34 = type metadata accessor for MetadataRibbonItemViewType();
  uint64_t v9 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  double v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_shouldEvenlyDistribute] = a2;
  double v42 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v12 = (uint64_t)result;
    uint64_t v14 = v34;
    if (result) {
      goto LABEL_3;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    double v24 = _swiftEmptyArrayStorage;
    goto LABEL_33;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  uint64_t v14 = v34;
  if (!v12) {
    goto LABEL_32;
  }
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v31 = ObjectType;
  CGFloat v32 = v4;
  uint64_t v33 = a3;
  uint64_t v15 = 0;
  unint64_t v41 = a1 & 0xC000000000000001;
  int v39 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
  int v40 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
  int v37 = enum case for MetadataRibbonItemViewType.starRating(_:);
  int v38 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
  int v35 = enum case for MetadataRibbonItemViewType.divider(_:);
  int v36 = enum case for MetadataRibbonItemViewType.textLabel(_:);
  int v16 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
  do
  {
    if (v41) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    MetadataRibbonItem.viewContainerType.getter();
    int v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v14);
    if (v17 == v40 || v17 == v39 || v17 == v38 || v17 == v37 || v17 == v36 || v17 == v35 || v17 == v16)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      uint64_t v14 = v34;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v14);
      swift_release();
    }
    ++v15;
  }
  while (v12 != v15);
  swift_bridgeObjectRelease();
  double v24 = v42;
  uint64_t v4 = v32;
  a3 = v33;
LABEL_33:
  *(void *)&v4[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels] = v24;
  swift_bridgeObjectRelease();
  swift_retain();
  double v25 = v4;
  double v26 = sub_1000BE504(a1, a3, v25);

  swift_release();
  uint64_t v27 = OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews;
  uint64_t v28 = *(void *)&v25[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews];
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = 32;
    do
    {
      [*(id *)(v28 + v30) removeFromSuperview];
      v30 += 16;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  *(void *)&v25[v27] = v26;
  swift_bridgeObjectRelease();
  sub_1000BB128();
  return [v25 setNeedsLayout];
}

uint64_t sub_1000BBDE8@<X0>(void **a1@<X0>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for LabelPlaceholder();
  uint64_t v71 = *(void *)(v6 - 8);
  uint64_t v72 = v6;
  __chkstk_darwin(v6);
  v70 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for DynamicTextAppearance();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  v65 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v66 = (char *)&v56 - v10;
  __chkstk_darwin(v11);
  v68 = (char *)&v56 - v12;
  uint64_t v13 = sub_100082C28(&qword_100981568);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *a1;
  uint64_t result = sub_100328794();
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v20 = v18;
    id v21 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:0.0, 0.0, 0.0, 0.0];
    dispatch thunk of MetadataRibbonItemView.apply(_:asPartOf:)();
    MetadataRibbonItem.id.getter();
    dispatch thunk of MetadataRibbonItemView.id.setter();
    MetadataRibbonItem.itemType.getter();
    uint64_t v22 = type metadata accessor for MetadataRibbonItemType();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 0, 1, v22);
    dispatch thunk of MetadataRibbonItemView.itemType.setter();
    Swift::Int v59 = dispatch thunk of MetadataRibbonItem.maxCharacterCount.getter();
    char v24 = v23;
    int v60 = v23 & 1;
    double v25 = &stru_100950000;
    id v26 = [a2 traitCollection];
    uint64_t v27 = &qword_100980000;
    uint64_t v63 = v20;
    v64 = a3;
    id v61 = v21;
    uint64_t v62 = v19;
    if (v24)
    {
    }
    else
    {
      id v56 = v26;
      v57 = a2;
      id v58 = v16;
      uint64_t v28 = v65;
      DynamicTextAppearance.init()();
      static CustomTextStyle<>.metadataRibbon.getter();
      if (qword_1009805E0 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for MetadataRibbonTextStyle();
      uint64_t v30 = sub_100087728(v29, (uint64_t)qword_1009E72A8);
      uint64_t v74 = v29;
      uint64_t v75 = sub_1000BE3F4((unint64_t *)&qword_100981570, (void (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle);
      uint64_t v31 = sub_1000808B8(v73);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v31, v30, v29);
      CGFloat v32 = v66;
      DynamicTextAppearance.withCustomTextStyle(_:)();
      uint64_t v33 = v67;
      uint64_t v34 = *(void (**)(char *, uint64_t))(v67 + 8);
      uint64_t v35 = v69;
      v34(v28, v69);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v73);
      int v36 = v68;
      DynamicTextAppearance.withNumberOfLines(_:)();
      v34(v32, v35);
      v37._countAndFlagsBits = 77;
      v37._object = (void *)0xE100000000000000;
      String.init(repeating:count:)(v37, v59);
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v32, v36, v35);
      LabelPlaceholder.Options.init(rawValue:)();
      int v38 = v70;
      LabelPlaceholder.init(_:with:where:)();
      int v39 = v56;
      LabelPlaceholder.measure(toFit:with:)();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v38, v72);
      v34(v36, v35);

      uint64_t v20 = v63;
      a3 = v64;
      id v21 = v61;
      a2 = v57;
      uint64_t v27 = &qword_100980000;
      double v25 = &stru_100950000;
    }
    dispatch thunk of MetadataRibbonItemView.labelMaxWidth.setter();
    Swift::Int v59 = dispatch thunk of MetadataRibbonItem.truncationLegibilityCharacterCountThreshold.getter();
    char v41 = v40;
    int v60 = v40 & 1;
    id v42 = [a2 v25[196].name];
    if (v41)
    {
    }
    else
    {
      id v58 = v42;
      double v43 = v65;
      DynamicTextAppearance.init()();
      static CustomTextStyle<>.metadataRibbon.getter();
      if (v27[188] != -1) {
        swift_once();
      }
      uint64_t v44 = type metadata accessor for MetadataRibbonTextStyle();
      uint64_t v45 = sub_100087728(v44, (uint64_t)qword_1009E72A8);
      uint64_t v74 = v44;
      uint64_t v75 = sub_1000BE3F4((unint64_t *)&qword_100981570, (void (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle);
      double v46 = sub_1000808B8(v73);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v46, v45, v44);
      double v47 = v66;
      DynamicTextAppearance.withCustomTextStyle(_:)();
      uint64_t v48 = v67;
      double v49 = *(void (**)(char *, uint64_t))(v67 + 8);
      CGRect v50 = v43;
      uint64_t v51 = v69;
      v49(v50, v69);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v73);
      uint64_t v52 = v68;
      DynamicTextAppearance.withNumberOfLines(_:)();
      v49(v47, v51);
      v53._countAndFlagsBits = 77;
      v53._object = (void *)0xE100000000000000;
      String.init(repeating:count:)(v53, v59);
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, v52, v51);
      LabelPlaceholder.Options.init(rawValue:)();
      uint64_t v54 = v70;
      LabelPlaceholder.init(_:with:where:)();
      v55 = v58;
      LabelPlaceholder.measure(toFit:with:)();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v54, v72);
      v49(v52, v51);

      uint64_t v20 = v63;
      a3 = v64;
      id v21 = v61;
    }
    dispatch thunk of MetadataRibbonItemView.truncationLegibilityThreshold.setter();
    dispatch thunk of MetadataRibbonItem.allowsTruncation.getter();
    uint64_t result = dispatch thunk of MetadataRibbonItemView.allowsTruncation.setter();
    *a3 = v21;
    a3[1] = v20;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

uint64_t sub_1000BC5F8()
{
  swift_getObjectType();
  unint64_t v0 = swift_bridgeObjectRetain();
  char v1 = sub_1004AAD44(v0, 0);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

id sub_1000BC664()
{
  *(void *)(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v1 = OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 32;
    do
    {
      [*(id *)(v2 + v4) removeFromSuperview];
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + v1) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();

  return sub_1000BB128();
}

void sub_1000BC718()
{
  uint64_t v0 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ImpressionMetrics();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (char *)Strong;
    swift_beginAccess();
    uint64_t v9 = swift_weakLoadStrong();
    if (v9)
    {
      uint64_t v10 = (unsigned int (**)(void, void, void))v9;
      unint64_t v11 = *(void *)&v8[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels];
      if (v11
        && (uint64_t v12 = *(void *)&v8[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews],
            (uint64_t v13 = *(void *)(v12 + 16)) != 0))
      {
        id v14 = *(id *)(v12 + 32);
        Swift::String v37 = *(char **)&v8[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews];
        unint64_t v41 = v11;
        uint64_t v33 = v11 & 0xFFFFFFFFFFFFFF8;
        if (v11 >> 62) {
          goto LABEL_27;
        }
        uint64_t v15 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        for (i = v14; v15; uint64_t v15 = _CocoaArrayWrapper.endIndex.getter())
        {
          CGFloat v32 = v10;
          unint64_t v17 = 0;
          unint64_t v18 = v41;
          uint64_t v10 = (unsigned int (**)(void, void, void))(v4 + 48);
          uint64_t v35 = (void (**)(char *, char *, uint64_t))(v4 + 32);
          int v36 = v6;
          uint64_t v34 = (void (**)(char *, uint64_t))(v4 + 8);
          uint64_t v38 = v15 - 1;
          uint64_t v39 = v13 - 1;
          unint64_t v40 = v41 & 0xC000000000000001;
          uint64_t v13 = 48;
          uint64_t v6 = v37;
          if ((v41 & 0xC000000000000001) != 0)
          {
LABEL_8:
            uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_11;
          }
          while (v17 < *(void *)(v33 + 16))
          {
            uint64_t v19 = *(void *)(v18 + 8 * v17 + 32);
            swift_retain();
LABEL_11:
            uint64_t v4 = v19;
            dispatch thunk of MetadataRibbonItem.impressionMetrics.getter();
            if ((*v10)(v2, 1, v3) == 1)
            {
              swift_release();

              sub_100082BCC((uint64_t)v2, &qword_100985970);
            }
            else
            {
              uint64_t v20 = v36;
              (*v35)(v36, v2, v3);
              if ([v14 isHidden])
              {
                (*v34)(v20, v3);
                swift_release();
              }
              else
              {
                [v14 frame];
                double v22 = v21;
                double v24 = v23;
                double v26 = v25;
                double v28 = v27;
                id v29 = [v8 superview];
                [v8 convertRect:v29 toView:v22];

                uint64_t v4 = (uint64_t)v32;
                ImpressionsCalculator.addElement(_:at:)();

                swift_release();
                (*v34)(v20, v3);
              }
              uint64_t v6 = v37;
            }
            if (v39 == v17)
            {
LABEL_24:

              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
            if (v17 + 1 >= *((void *)v6 + 2))
            {
              __break(1u);
              break;
            }
            if (v38 == v17) {
              goto LABEL_24;
            }
            id v14 = *(id *)&v6[v13];
            ++v17;
            v13 += 16;
            unint64_t v18 = v41;
            if (v40) {
              goto LABEL_8;
            }
          }
          __break(1u);
LABEL_27:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v30 = v14;
        }

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_release();
      }
    }
    else
    {
    }
  }
}

uint64_t sub_1000BCC44()
{
  return type metadata accessor for SearchTagsRibbonView();
}

uint64_t type metadata accessor for SearchTagsRibbonView()
{
  uint64_t result = qword_100981FC8;
  if (!qword_100981FC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000BCC98()
{
  uint64_t result = type metadata accessor for SearchTagsRibbonViewLayout.Metrics();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000BCD60()
{
  return swift_retain();
}

uint64_t sub_1000BCDAC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsCalculator);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1000BCE00())()
{
  return j__swift_endAccess;
}

uint64_t sub_1000BCE5C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_100060050(*v1);
  return v2;
}

uint64_t sub_1000BCEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_10006012C(v6);
}

uint64_t (*sub_1000BCF18())()
{
  return j_j__swift_endAccess;
}

void (*sub_1000BCF74())()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  *(void *)(v2 + 24) = v1;
  return sub_1000BD114;
}

uint64_t sub_1000BD014()
{
  swift_getObjectType();

  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)();
}

uint64_t sub_1000BD064()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000BD09C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000BD0D4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000BD114()
{
}

id sub_1000BD11C(void *a1)
{
  return [a1 setNeedsLayout];
}

uint64_t sub_1000BD128(void *a1)
{
  sub_100081D90(a1, a1[3]);
  uint64_t v2 = UIMutableTraits.preferredContentSizeCategory.getter();
  if (qword_10097DF90 != -1) {
    swift_once();
  }
  id v3 = (id)qword_100981F90;
  if (static UIContentSizeCategory.< infix(_:_:)()) {
    uint64_t v4 = (void *)v2;
  }
  else {
    uint64_t v4 = v3;
  }

  sub_100071F4C((uint64_t)a1, a1[3]);
  return UIMutableTraits.preferredContentSizeCategory.setter();
}

uint64_t sub_1000BD1F4(unint64_t a1, int a2)
{
  int v98 = a2;
  uint64_t v3 = type metadata accessor for SearchTagsRibbonViewLayout.Metrics();
  __chkstk_darwin(v3 - 8);
  v97 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for SearchTagsRibbonViewLayout();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for LabelPlaceholder();
  uint64_t v6 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  v121 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for DynamicTextAppearance();
  uint64_t v8 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  v119 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v118 = (char *)&v93 - v11;
  __chkstk_darwin(v12);
  v117 = (char *)&v93 - v13;
  v137 = (int *)sub_100082C28(&qword_1009815E0);
  uint64_t v116 = *((void *)v137 - 1);
  __chkstk_darwin(v137);
  v135 = (_OWORD *)((char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v125 = (uint64_t)&v93 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v93 - v18;
  uint64_t v124 = type metadata accessor for MetadataRibbonItemViewType();
  uint64_t v20 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  v123 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MetadataRibbonItem();
  unint64_t v126 = a1;
  uint64_t result = Array.isNotEmpty.getter();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v115 = UITraitCollection.modifyingTraits(_:)();
  if (v126 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v23 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    static SearchTagsRibbonViewLayout.Metrics.standard.getter();
    v88 = v99;
    SearchTagsRibbonViewLayout.init(searchTagsRibbonItemLayoutContexts:metrics:shouldEvenlyDistribute:)();
    type metadata accessor for TraitEnvironmentPlaceholder();
    sub_100082C28(&qword_100982B50);
    uint64_t v89 = swift_allocObject();
    *(_OWORD *)(v89 + 16) = xmmword_1007BEA80;
    v90 = (void *)v115;
    *(void *)(v89 + 32) = v115;
    uint64_t v138 = v89;
    specialized Array._endMutation()();
    id v91 = v90;
    v92 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)();
    SearchTagsRibbonViewLayout.measurements(fitting:in:)();

    return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v88, v101);
  }
  uint64_t v23 = *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_41;
  }
LABEL_4:
  if (v23 >= 1)
  {
    uint64_t v24 = 0;
    unint64_t v114 = v126 & 0xC000000000000001;
    v113 = (uint64_t (**)(char *, uint64_t))(v20 + 88);
    v93 = (void (**)(char *, uint64_t))(v20 + 8);
    v111 = v19 + 40;
    int v112 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    int v104 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    int v103 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    int v102 = enum case for MetadataRibbonItemViewType.starRating(_:);
    int v96 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    int v95 = enum case for MetadataRibbonItemViewType.divider(_:);
    v110 = (void (**)(char *, uint64_t))(v8 + 8);
    v109 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    v108 = (void (**)(char *, uint64_t))(v6 + 8);
    v107 = (long long *)(v125 + 40);
    uint64_t v106 = (uint64_t)v135 + 40;
    int v94 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    double v25 = _swiftEmptyArrayStorage;
    v134 = v19;
    uint64_t v105 = v23;
    while (1)
    {
      if (v114)
      {
        uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v26 = *(void *)(v126 + 8 * v24 + 32);
        swift_retain();
      }
      double v27 = v123;
      MetadataRibbonItem.viewContainerType.getter();
      int v28 = (*v113)(v27, v124);
      uint64_t v132 = v24;
      v133 = v25;
      if (v28 == v112) {
        break;
      }
      if (v28 == v104)
      {
        uint64_t v29 = type metadata accessor for MetadataRibbonEditorsChoiceView();
        id v30 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonEditorsChoiceView;
        uint64_t v31 = (unint64_t *)&unk_100984AE0;
        goto LABEL_23;
      }
      if (v28 == v103)
      {
        uint64_t v29 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        id v30 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonIconWithLabelView;
        uint64_t v31 = (unint64_t *)&unk_100981FE8;
        goto LABEL_23;
      }
      if (v28 == v102)
      {
        uint64_t v29 = type metadata accessor for MetadataRibbonStarRatingView();
        id v30 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonStarRatingView;
        uint64_t v31 = (unint64_t *)&unk_100984AF0;
        goto LABEL_23;
      }
      if (v28 == v96)
      {
        uint64_t v29 = type metadata accessor for MetadataRibbonTagView();
        id v30 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonTagView;
        uint64_t v31 = (unint64_t *)&unk_100981FE0;
        goto LABEL_23;
      }
      if (v28 == v95)
      {
        uint64_t v29 = type metadata accessor for MetadataRibbonBarView();
        id v30 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonBarView;
        uint64_t v31 = (unint64_t *)&unk_100984AD0;
        goto LABEL_23;
      }
      if (v28 == v94)
      {
        uint64_t v29 = type metadata accessor for MetadataRibbonHighlightedTextView();
        id v30 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonHighlightedTextView;
        uint64_t v31 = (unint64_t *)&unk_100981FD8;
        goto LABEL_23;
      }
      (*v93)(v123, v124);
      swift_release();
LABEL_36:
      if (v23 == ++v24) {
        goto LABEL_41;
      }
    }
    uint64_t v29 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView();
    id v30 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
    uint64_t v31 = (unint64_t *)&unk_100981FF0;
LABEL_23:
    uint64_t v32 = sub_1000BE3F4(v31, v30);
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = v29;
    v33[3] = v32;
    v33[4] = v26;
    uint64_t v34 = type metadata accessor for LayoutViewPlaceholder();
    swift_allocObject();
    swift_retain();
    uint64_t v35 = LayoutViewPlaceholder.init(measureWith:)();
    uint64_t v36 = (uint64_t)&v19[v137[24]];
    MetadataRibbonItem.id.getter();
    *((void *)v19 + 8) = v34;
    *((void *)v19 + 9) = &protocol witness table for LayoutViewPlaceholder;
    *((void *)v19 + 5) = v35;
    uint64_t v127 = v35;
    swift_retain();
    v19[80] = dispatch thunk of static MetadataRibbonItemView.isBaselineAligned.getter() & 1;
    v19[81] = dispatch thunk of static MetadataRibbonItemView.shouldForceIntrinsicSizeDuringLayout.getter() & 1;
    MetadataRibbonItem.itemType.getter();
    uint64_t v37 = type metadata accessor for MetadataRibbonItemType();
    uint64_t v38 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
    uint64_t v131 = v36;
    v38(v36, 0, 1, v37);
    uint64_t v39 = dispatch thunk of MetadataRibbonItem.maxCharacterCount.getter();
    char v41 = v40;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v136 = v26;
    if ((v40 & 1) == 0)
    {
      Swift::Int v44 = v39;
      uint64_t v45 = v119;
      DynamicTextAppearance.init()();
      static CustomTextStyle<>.metadataRibbon.getter();
      if (qword_1009805E0 != -1) {
        swift_once();
      }
      uint64_t v46 = type metadata accessor for MetadataRibbonTextStyle();
      uint64_t v47 = sub_100087728(v46, (uint64_t)qword_1009E72A8);
      uint64_t v139 = v46;
      uint64_t v140 = sub_1000BE3F4((unint64_t *)&qword_100981570, (void (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle);
      uint64_t v48 = sub_1000808B8(&v138);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v48, v47, v46);
      double v49 = v118;
      DynamicTextAppearance.withCustomTextStyle(_:)();
      CGRect v50 = *v110;
      uint64_t v51 = v120;
      (*v110)(v45, v120);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v138);
      uint64_t v52 = v117;
      DynamicTextAppearance.withNumberOfLines(_:)();
      v50(v49, v51);
      v53._countAndFlagsBits = 77;
      v53._object = (void *)0xE100000000000000;
      String.init(repeating:count:)(v53, v44);
      (*v109)(v49, v52, v51);
      LabelPlaceholder.Options.init(rawValue:)();
      uint64_t v54 = v121;
      LabelPlaceholder.init(_:with:where:)();
      LabelPlaceholder.measure(toFit:with:)();
      uint64_t v43 = v55;
      (*v108)(v54, v122);
      v50(v52, v51);
      uint64_t v19 = v134;
    }
    id v56 = &v19[v137[28]];
    *(void *)id v56 = v43;
    v56[8] = v41 & 1;
    uint64_t v57 = dispatch thunk of MetadataRibbonItem.truncationLegibilityCharacterCountThreshold.getter();
    char v59 = v58;
    if ((v58 & 1) == 0)
    {
      Swift::Int v60 = v57;
      v130 = v56;
      id v61 = v119;
      DynamicTextAppearance.init()();
      static CustomTextStyle<>.metadataRibbon.getter();
      if (qword_1009805E0 != -1) {
        swift_once();
      }
      uint64_t v62 = type metadata accessor for MetadataRibbonTextStyle();
      uint64_t v63 = sub_100087728(v62, (uint64_t)qword_1009E72A8);
      uint64_t v139 = v62;
      uint64_t v140 = sub_1000BE3F4((unint64_t *)&qword_100981570, (void (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle);
      v64 = sub_1000808B8(&v138);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v64, v63, v62);
      v65 = v118;
      DynamicTextAppearance.withCustomTextStyle(_:)();
      id v66 = *v110;
      uint64_t v67 = v120;
      (*v110)(v61, v120);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v138);
      v68 = v117;
      DynamicTextAppearance.withNumberOfLines(_:)();
      v66(v65, v67);
      v69._countAndFlagsBits = 77;
      v69._object = (void *)0xE100000000000000;
      String.init(repeating:count:)(v69, v60);
      (*v109)(v65, v68, v67);
      LabelPlaceholder.Options.init(rawValue:)();
      v70 = v121;
      LabelPlaceholder.init(_:with:where:)();
      LabelPlaceholder.measure(toFit:with:)();
      uint64_t v42 = v71;
      (*v108)(v70, v122);
      v66(v68, v67);
      uint64_t v19 = v134;
      id v56 = v130;
    }
    uint64_t v72 = v137;
    uint64_t v73 = &v19[v137[32]];
    uint64_t v74 = v137[36];
    *(void *)uint64_t v73 = v42;
    LODWORD(v130) = v59 & 1;
    v73[8] = v59 & 1;
    char v75 = dispatch thunk of MetadataRibbonItem.allowsTruncation.getter();
    v19[v74] = v75;
    uint64_t v76 = v125;
    uint64_t v77 = v125 + v72[24];
    sub_10008A8F4((uint64_t)v19, v125);
    v78 = v107;
    sub_100082C6C((uint64_t)v111, (uint64_t)v107);
    int v128 = v19[80];
    char v79 = v19[81];
    sub_1000BE38C(v131, v77);
    uint64_t v131 = *(void *)v56;
    int v129 = v56[8];
    v80 = v135;
    uint64_t v81 = (uint64_t)v135 + v72[24];
    v82 = (char *)v135 + v72[28];
    v83 = (char *)v135 + v72[32];
    uint64_t v84 = v72[36];
    long long v85 = *(_OWORD *)(v76 + 16);
    _OWORD *v135 = *(_OWORD *)v76;
    v80[1] = v85;
    *((void *)v80 + 4) = *(void *)(v76 + 32);
    sub_100081DD4(v78, v106);
    *((unsigned char *)v80 + 80) = v128;
    *((unsigned char *)v80 + 81) = v79;
    sub_100082CD0(v77, v81, &qword_100981568);
    *(void *)v82 = v131;
    v82[8] = v129;
    *(void *)v83 = v42;
    v83[8] = (char)v130;
    *((unsigned char *)v80 + v84) = v75;
    double v25 = v133;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v25 = (void *)sub_1000ABA18(0, v25[2] + 1, 1, (unint64_t)v25);
    }
    uint64_t v23 = v105;
    uint64_t v24 = v132;
    unint64_t v87 = v25[2];
    unint64_t v86 = v25[3];
    uint64_t v19 = v134;
    if (v87 >= v86 >> 1) {
      double v25 = (void *)sub_1000ABA18(v86 > 1, v87 + 1, 1, (unint64_t)v25);
    }
    v25[2] = v87 + 1;
    sub_100082CD0((uint64_t)v135, (uint64_t)v25+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(void *)(v116 + 72) * v87, &qword_1009815E0);
    swift_release();
    swift_release();
    sub_100082BCC((uint64_t)v19, &qword_1009815E0);
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000BE324()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000BE35C()
{
  return dispatch thunk of static MetadataRibbonItemView.measurements(for:fitting:in:)();
}

uint64_t sub_1000BE38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100981568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BE3F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000BE43C()
{
  *(void *)&v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemViews] = _swiftEmptyArrayStorage;
  static SearchTagsRibbonViewLayout.Metrics.standard.getter();
  *(void *)&v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels] = 0;
  v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_shouldEvenlyDistribute] = 2;
  v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_isInsideSearchAd] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsCalculator] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_impressionsUpdateBlock];
  *uint64_t v1 = 0;
  v1[1] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_1000BE504(unint64_t a1, uint64_t a2, void *a3)
{
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = _swiftEmptyArrayStorage;
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v8 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = i - 3;
          if (v10) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v9 = *(void **)(a1 + 8 * i);
          swift_retain();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = i - 3;
          if (v10)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v20 = v9;
        sub_1000BBDE8(&v20, a3, &v19);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return v6;
        }
        swift_release();
        if ((void)v19)
        {
          long long v18 = v19;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1000AC3D4(0, v6[2] + 1, 1, v6);
          }
          unint64_t v13 = v6[2];
          unint64_t v12 = v6[3];
          long long v14 = v18;
          if (v13 >= v12 >> 1)
          {
            uint64_t v15 = sub_1000AC3D4((void *)(v12 > 1), v13 + 1, 1, v6);
            long long v14 = v18;
            uint64_t v6 = v15;
          }
          v6[2] = v13 + 1;
          *(_OWORD *)&v6[2 * v13 + 4] = v14;
        }
        if (v11 == v5)
        {
          swift_bridgeObjectRelease();
          return v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1000BE6E0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ShareSheetData.Metadata();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v67 = (unint64_t)_swiftEmptyArrayStorage;
  ShareSheetData.metadata.getter();
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for ShareSheetData.Metadata.article(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    id v8 = objc_allocWithZone((Class)type metadata accessor for URLActivityItemProvider());
    swift_retain();
    swift_retain();
    id v9 = sub_100711C40(v1, a1, (uint64_t)&_swiftEmptySetSingleton);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v10 = ShareSheetArticleMetadata.text.getter();
    uint64_t v12 = v11;
    unint64_t v13 = (objc_class *)type metadata accessor for TextActivityItemProvider();
    long long v14 = (char *)objc_allocWithZone(v13);
    uint64_t v15 = (uint64_t *)&v14[OBJC_IVAR____TtC8AppStore24TextActivityItemProvider_text];
    *uint64_t v15 = v10;
    v15[1] = v12;
    uint64_t v16 = qword_10097E3C0;
    uint64_t v17 = v14;
    swift_bridgeObjectRetain();
    if (v16 != -1) {
      swift_once();
    }
    long long v18 = (void *)qword_100988460;
    swift_bridgeObjectRetain();
    sub_1000BEFCC((uint64_t)&_swiftEmptySetSingleton, v18);
    *(void *)&v17[OBJC_IVAR____TtC8AppStore24TextActivityItemProvider_excludedActivityTypes] = v19;

    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v64.receiver = v17;
    v64.super_class = v13;
    id v21 = [super initWithPlaceholderItem:v20];

    id v22 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v23 = ShareSheetArticleMetadata.artwork.getter();
    if (!v23) {
      goto LABEL_29;
    }
    goto LABEL_9;
  }
  if (v7 == enum case for ShareSheetData.Metadata.product(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    sub_100082C28((uint64_t *)&unk_1009A71E0);
    uint64_t inited = swift_initStackObject();
    long long v63 = xmmword_1007BEDF0;
    *(_OWORD *)(inited + 16) = xmmword_1007BEDF0;
    uint64_t v32 = (void *)UIActivityTypeSaveToNotes;
    *(void *)(inited + 32) = UIActivityTypeSaveToNotes;
    swift_retain();
    swift_retain();
    id v33 = v32;
    uint64_t v34 = sub_1000FBCDC(inited);
    swift_setDeallocating();
    type metadata accessor for ActivityType(0);
    swift_arrayDestroy();
    id v35 = objc_allocWithZone((Class)type metadata accessor for URLActivityItemProvider());
    id v9 = sub_100711C40(v1, a1, (uint64_t)v34);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v36 = ShareSheetProductMetadata.icon.getter();
    uint64_t v37 = swift_initStackObject();
    *(_OWORD *)(v37 + 16) = v63;
    *(void *)(v37 + 32) = v33;
    swift_retain();
    id v38 = v33;
    uint64_t v39 = sub_1000FBCDC(v37);
    swift_setDeallocating();
    swift_arrayDestroy();
    id v40 = objc_allocWithZone((Class)type metadata accessor for ArtworkActivityItemProvider());
    char v41 = sub_1004A6EF4(v36, a1, (uint64_t)v39);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v42 = ShareSheetProductMetadata.notesMetadata.getter();
    if (v42)
    {
      uint64_t v43 = v42;
      Swift::Int v44 = (objc_class *)type metadata accessor for NotesMetadataActivityItemProvider();
      uint64_t v45 = (char *)objc_allocWithZone(v44);
      *(_OWORD *)&v45[OBJC_IVAR____TtC8AppStore33NotesMetadataActivityItemProvider____lazy_storage___notesMetadata] = xmmword_1007BF700;
      *(void *)&v45[OBJC_IVAR____TtC8AppStore33NotesMetadataActivityItemProvider_metadata] = v43;
      swift_retain();
      NSString v46 = String._bridgeToObjectiveC()();
      v65.receiver = v45;
      v65.super_class = v44;
      id v47 = [super initWithPlaceholderItem:v46];

      id v48 = v47;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
    }
    swift_release();

    goto LABEL_32;
  }
  if (v7 == enum case for ShareSheetData.Metadata.appEvent(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    id v49 = objc_allocWithZone((Class)type metadata accessor for URLActivityItemProvider());
    swift_retain();
    swift_retain();
    id v9 = sub_100711C40(v1, a1, (uint64_t)&_swiftEmptySetSingleton);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v50 = ShareSheetAppEventMetadata.text.getter();
    uint64_t v52 = v51;
    Swift::String v53 = (objc_class *)type metadata accessor for TextActivityItemProvider();
    uint64_t v54 = (char *)objc_allocWithZone(v53);
    uint64_t v55 = (uint64_t *)&v54[OBJC_IVAR____TtC8AppStore24TextActivityItemProvider_text];
    uint64_t *v55 = v50;
    v55[1] = v52;
    uint64_t v56 = qword_10097E3C0;
    uint64_t v57 = v54;
    swift_bridgeObjectRetain();
    if (v56 != -1) {
      swift_once();
    }
    char v58 = (void *)qword_100988460;
    swift_bridgeObjectRetain();
    sub_1000BEFCC((uint64_t)&_swiftEmptySetSingleton, v58);
    *(void *)&v57[OBJC_IVAR____TtC8AppStore24TextActivityItemProvider_excludedActivityTypes] = v59;

    NSString v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v66.receiver = v57;
    v66.super_class = v53;
    id v61 = [super initWithPlaceholderItem:v60];

    id v22 = v61;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v23 = ShareSheetAppEventMetadata.artwork.getter();
    if (!v23) {
      goto LABEL_29;
    }
LABEL_9:
    uint64_t v24 = v23;
    sub_100082C28((uint64_t *)&unk_1009A71E0);
    uint64_t v25 = swift_initStackObject();
    *(_OWORD *)(v25 + 16) = xmmword_1007BEDF0;
    uint64_t v26 = (void *)UIActivityTypeSaveToNotes;
    *(void *)(v25 + 32) = UIActivityTypeSaveToNotes;
    swift_retain();
    swift_retain();
    id v27 = v26;
    int v28 = sub_1000FBCDC(v25);
    swift_setDeallocating();
    type metadata accessor for ActivityType(0);
    swift_arrayDestroy();
    id v29 = objc_allocWithZone((Class)type metadata accessor for ArtworkActivityItemProvider());
    id v30 = sub_1004A6EF4(v24, a1, (uint64_t)v28);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();

LABEL_29:
    swift_release();

LABEL_32:
    return v67;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v67;
}

void sub_1000BEFCC(uint64_t a1, void *a2)
{
  int64_t v3 = 0;
  v14[1] = a2;
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    sub_10026B5A8(v14, *(id *)(*(void *)(a1 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

void sub_1000BF138()
{
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 collectionView];
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for SeparatorSupplementaryView();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v4 = String._bridgeToObjectiveC()();
    static UICollectionReusableView.defaultReuseIdentifier.getter();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 registerClass:ObjCClassFromMetadata forSupplementaryViewOfKind:v4 withReuseIdentifier:v5];
  }
}

void sub_1000BF21C(void *a1)
{
  id v1 = a1;
  sub_1000BF138();
}

double sub_1000BF264()
{
  id v1 = [v0 traitCollection];
  static Separator.thickness(compatibleWith:)();
  double v3 = v2;

  return v3;
}

void sub_1000BF2B4(uint64_t a1)
{
  uint64_t v3 = sub_100082C28(&qword_100982778);
  __chkstk_darwin(v3 - 8);
  NSString v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Uber.Style();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (dispatch thunk of BaseGenericPagePresenter.uber.getter())
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Uber.Style.above(_:), v6);
    uint64_t v10 = type metadata accessor for Uber.AssetType();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
    type metadata accessor for Uber();
    swift_allocObject();
    swift_retain_n();
    uint64_t v11 = Uber.init(style:assetType:artwork:compactArtwork:video:compactVideo:iconArtwork:title:)();
    uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_uber];
    *(void *)&v1[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_uber] = v11;
    swift_retain();
    sub_1001F4A8C(v12);
    swift_release();
    swift_release();
    swift_release();
  }
  id v13 = [v1 collectionView];
  sub_1004752F4(a1, v13);

  sub_1000C0C78((void (*)(void))sub_1000BFF0C);
}

double sub_1000BF50C(void *a1)
{
  id v1 = a1;
  sub_1000BF568();
  double v3 = v2;

  return v3;
}

void sub_1000BF568()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  [v0 pageContainerSize];
  double v4 = v3;
  id v5 = [v0 traitCollection];
  char v6 = UITraitCollection.isRegularPad.getter();

  if ((v6 & 1) != 0 && v4 > 672.0)
  {
    sub_1000B8A74();
  }
  else
  {
    v7.receiver = v1;
    v7.super_class = ObjectType;
    [super pageMarginInsets];
  }
}

id sub_1000BF648(void *a1, uint64_t a2, uint64_t a3)
{
  double v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2 == 0xD000000000000039 && a3 == 0x80000001008036D0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    type metadata accessor for SeparatorSupplementaryView();
    static UICollectionReusableView.defaultReuseIdentifier.getter();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v11.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v12 = [a1 dequeueReusableSupplementaryViewOfKind:v9 withReuseIdentifier:v10 forIndexPath:v11.super.isa];
  }
  else
  {
    NSString v13 = String._bridgeToObjectiveC()();
    v11.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v15.receiver = v4;
    v15.super_class = ObjectType;
    [super collectionView:a1 viewForSupplementaryElementOfKind:v13 atIndexPath:v11];
  }
  return v12;
}

id sub_1000BF7B8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  id v14 = sub_1000BF648(v12, v9, v11);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v14;
}

void sub_1000BF8F8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v35 = a5;
  id v36 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = type metadata accessor for ComponentSeparator.Position();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v37 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ComponentSeparator();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v34 = (char *)&v34 - v18;
  if ((a3 == 0xD000000000000039 && a4 == 0x80000001008036D0
     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    && (type metadata accessor for SeparatorSupplementaryView(), (uint64_t v19 = swift_dynamicCastClass()) != 0))
  {
    NSString v20 = (char *)v19;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v37, enum case for ComponentSeparator.Position.top(_:), v10);
    id v36 = a2;
    [v6 pageContainerSize];
    double v22 = v21;
    id v23 = [v6 traitCollection];
    char v24 = UITraitCollection.isRegularPad.getter();

    if ((v24 & 1) != 0 && v22 > 672.0)
    {
      sub_1000B8A74();
    }
    else
    {
      v40.receiver = v6;
      v40.super_class = ObjectType;
      [super pageMarginInsets:v34, v35];
    }
    [v6 pageContainerSize:v34];
    double v28 = v27;
    id v29 = [v6 traitCollection];
    char v30 = UITraitCollection.isRegularPad.getter();

    if ((v30 & 1) != 0 && v28 > 672.0)
    {
      sub_1000B8A74();
    }
    else
    {
      v39.receiver = v6;
      v39.super_class = ObjectType;
      [super pageMarginInsets];
    }
    uint64_t v31 = v34;
    ComponentSeparator.init(position:leadingInset:trailingInset:)();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v31, v13);
    uint64_t v32 = &v20[OBJC_IVAR____TtC8AppStore26SeparatorSupplementaryView_separator];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v32, v16, v13);
    swift_endAccess();
    [v20 setNeedsLayout];
    id v33 = *(void (**)(char *, uint64_t))(v14 + 8);
    v33(v16, v13);

    v33(v31, v13);
  }
  else
  {
    NSString v25 = String._bridgeToObjectiveC()();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v41.receiver = v6;
    v41.super_class = ObjectType;
    [super collectionView:v36 willDisplaySupplementaryView:a2 forElementKind:v25 atIndexPath:isa];
  }
}

uint64_t sub_1000BFD44(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = a3;
  id v15 = a4;
  id v16 = a1;
  sub_1000BF8F8(v14, v15, v11, v13, (uint64_t)v10);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t type metadata accessor for VersionHistoryViewController()
{
  uint64_t result = qword_100982028;
  if (!qword_100982028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000BFED4()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1000BFF0C()
{
  uint64_t v1 = type metadata accessor for ShelfBackground();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (id *)((char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v6 = __chkstk_darwin(v5);
  uint64_t v8 = (id *)((char *)&v33 - v7);
  unint64_t v34 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v9 = *(void *)((char *)v0 + qword_100984410);
  double v10 = (*(double (**)(__n128))((swift_isaMask & *v0) + 0x500))(v6);
  id v11 = sub_1000CC750(v10);
  if (v11)
  {
    id v12 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  id v13 = sub_1000CC284(v0, v9);
  if (v13)
  {
    id v14 = v13;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  type metadata accessor for GenericPagePresenter();
  sub_1000CD370(&qword_100982658, (void (*)(uint64_t))&type metadata accessor for GenericPagePresenter);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter() < 1) {
    goto LABEL_14;
  }
  dispatch thunk of ShelfPresenter.background(for:)();
  if ((*(unsigned int (**)(id *, uint64_t))(v2 + 88))(v8, v1) != enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(id *, uint64_t))(v2 + 8))(v8, v1);
    goto LABEL_14;
  }
  (*(void (**)(id *, uint64_t))(v2 + 96))(v8, v1);

  id v15 = (char *)v8 + *(int *)(sub_100082C28(&qword_100984570) + 48);
  uint64_t v16 = type metadata accessor for ShelfBackgroundStyle();
  (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = self;
  id v18 = [v17 fractionalWidthDimension:1.0];
  id v19 = [v17 absoluteDimension:2000.0];
  id v20 = [self sizeWithWidthDimension:v18 heightDimension:v19];

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [self boundarySupplementaryItemWithLayoutSize:v20 elementKind:v21 alignment:1 absoluteOffset:-2000.0];

  [v22 setExtendsBoundary:0];
  uint64_t v8 = (id *)v22;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_23;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

LABEL_14:
    if (dispatch thunk of ShelfPresenter.sectionCount.getter() < 1) {
      break;
    }
    if (!__OFSUB__(dispatch thunk of ShelfPresenter.sectionCount.getter(), 1))
    {
      dispatch thunk of ShelfPresenter.background(for:)();
      if ((*(unsigned int (**)(id *, uint64_t))(v2 + 88))(v4, v1) == enum case for ShelfBackground.color(_:))
      {
        (*(void (**)(id *, uint64_t))(v2 + 96))(v4, v1);

        id v23 = (char *)v4 + *(int *)(sub_100082C28(&qword_100984570) + 48);
        uint64_t v24 = type metadata accessor for ShelfBackgroundStyle();
        (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        NSString v25 = self;
        id v26 = [v25 fractionalWidthDimension:1.0];
        id v27 = [v25 absoluteDimension:2000.0];
        id v28 = [self sizeWithWidthDimension:v26 heightDimension:v27];

        NSString v29 = String._bridgeToObjectiveC()();
        id v30 = [self boundarySupplementaryItemWithLayoutSize:v28 elementKind:v29 alignment:5 absoluteOffset:0.0];

        [v30 setExtendsBoundary:0];
        id v31 = v30;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        (*(void (**)(id *, uint64_t))(v2 + 8))(v4, v1);
      }
      return v34;
    }
    __break(1u);
LABEL_23:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  return v34;
}

unint64_t sub_1000C05FC()
{
  uint64_t v1 = type metadata accessor for ShelfBackground();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (id *)((char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v7 = (id *)((char *)&v28 - v6);
  unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
  id v8 = sub_1000CC284(v0, *(void *)&v0[qword_100984410]);
  if (v8)
  {
    id v9 = v8;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  type metadata accessor for ReviewsPagePresenter();
  sub_1000CD370(&qword_1009826D8, (void (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter() < 1) {
    goto LABEL_10;
  }
  dispatch thunk of ShelfPresenter.background(for:)();
  if ((*(unsigned int (**)(id *, uint64_t))(v2 + 88))(v7, v1) != enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(id *, uint64_t))(v2 + 8))(v7, v1);
    goto LABEL_10;
  }
  (*(void (**)(id *, uint64_t))(v2 + 96))(v7, v1);

  double v10 = (char *)v7 + *(int *)(sub_100082C28(&qword_100984570) + 48);
  uint64_t v11 = type metadata accessor for ShelfBackgroundStyle();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  id v12 = self;
  id v13 = [v12 fractionalWidthDimension:1.0];
  id v14 = [v12 absoluteDimension:2000.0];
  id v15 = [self sizeWithWidthDimension:v13 heightDimension:v14];

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [self boundarySupplementaryItemWithLayoutSize:v15 elementKind:v16 alignment:1 absoluteOffset:-2000.0];

  [v17 setExtendsBoundary:0];
  uint64_t v7 = (id *)v17;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_19;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

LABEL_10:
    if (dispatch thunk of ShelfPresenter.sectionCount.getter() < 1) {
      break;
    }
    if (!__OFSUB__(dispatch thunk of ShelfPresenter.sectionCount.getter(), 1))
    {
      dispatch thunk of ShelfPresenter.background(for:)();
      if ((*(unsigned int (**)(id *, uint64_t))(v2 + 88))(v4, v1) == enum case for ShelfBackground.color(_:))
      {
        (*(void (**)(id *, uint64_t))(v2 + 96))(v4, v1);

        id v18 = (char *)v4 + *(int *)(sub_100082C28(&qword_100984570) + 48);
        uint64_t v19 = type metadata accessor for ShelfBackgroundStyle();
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        id v20 = self;
        id v21 = [v20 fractionalWidthDimension:1.0];
        id v22 = [v20 absoluteDimension:2000.0];
        id v23 = [self sizeWithWidthDimension:v21 heightDimension:v22];

        NSString v24 = String._bridgeToObjectiveC()();
        id v25 = [self boundarySupplementaryItemWithLayoutSize:v23 elementKind:v24 alignment:5 absoluteOffset:0.0];

        [v25 setExtendsBoundary:0];
        id v26 = v25;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        (*(void (**)(id *, uint64_t))(v2 + 8))(v4, v1);
      }
      return v29;
    }
    __break(1u);
LABEL_19:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  return v29;
}

void sub_1000C0C48()
{
}

void sub_1000C0C60()
{
}

void sub_1000C0C78(void (*a1)(void))
{
  id v3 = [v1 collectionView];
  if (v3)
  {
    double v4 = v3;
    id v11 = [v3 collectionViewLayout];

    if (v11)
    {
      type metadata accessor for BaseCollectionCompositionalLayout();
      uint64_t v5 = (void *)swift_dynamicCastClass();
      if (v5)
      {
        uint64_t v6 = v5;
        id v7 = [v5 configuration];
        sub_100084CF0(0, &qword_100982668);
        id v8 = NSCopying.makeCopy()();

        a1();
        sub_100084CF0(0, &qword_100983970);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v8 setBoundarySupplementaryItems:isa];

        [v6 setConfiguration:v8];
        double v10 = v8;
      }
      else
      {
        double v10 = v11;
      }
    }
  }
}

void sub_1000C0DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v4 = v3;
  uint64_t v58 = a1;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for IndexSet();
  uint64_t v10 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v57 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_100984550);
  *(void *)&double v13 = __chkstk_darwin(v12 - 8).n128_u64[0];
  uint64_t v54 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [v3 collectionView:v13];
  if (v15)
  {
    NSString v16 = v15;
    id v17 = [v15 collectionViewLayout];

    [v17 invalidateLayout];
  }
  uint64_t v18 = *(void *)&v4[qword_100984410];
  id v19 = [v4 collectionView];
  uint64_t v55 = v10;
  uint64_t v53 = v18;
  if (v19)
  {
    id v20 = v19;
    id v21 = [v19 collectionViewLayout];

    uint64_t v22 = v58;
    uint64_t v23 = a3;
    id v19 = 0;
    if (v21)
    {
      type metadata accessor for BaseCollectionCompositionalLayout();
      id v19 = (id)swift_dynamicCastClass();
      NSString v24 = v57;
      if (!v19)
      {

        id v19 = 0;
      }
    }
    else
    {
      NSString v24 = v57;
    }
  }
  else
  {
    uint64_t v23 = a3;
    NSString v24 = v57;
    uint64_t v22 = v58;
  }
  id v52 = v19;
  int64_t v25 = *(void *)(v22 + 16);
  id v26 = _swiftEmptyArrayStorage;
  if (v25)
  {
    uint64_t v49 = a2;
    uint64_t v50 = v23;
    uint64_t v51 = v4;
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001297CC(0, v25, 0);
    uint64_t v27 = v60 + 16;
    uint64_t v28 = *(void *)(v60 + 16);
    uint64_t v29 = v22 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
    uint64_t v59 = *(void *)(v60 + 72);
    uint64_t v60 = v28;
    id v30 = (void (**)(char *, uint64_t))(v27 - 8);
    do
    {
      uint64_t v31 = v61;
      ((void (*)(char *, uint64_t, uint64_t))v60)(v9, v29, v61);
      uint64_t v32 = IndexPath.section.getter();
      (*v30)(v9, v31);
      id v26 = (void *)aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001297CC(0, v26[2] + 1, 1);
        id v26 = (void *)aBlock[0];
      }
      unint64_t v34 = v26[2];
      unint64_t v33 = v26[3];
      if (v34 >= v33 >> 1)
      {
        sub_1001297CC(v33 > 1, v34 + 1, 1);
        id v26 = (void *)aBlock[0];
      }
      v26[2] = v34 + 1;
      v26[v34 + 4] = v32;
      v29 += v59;
      --v25;
    }
    while (v25);
    uint64_t v23 = v50;
    double v4 = v51;
    a2 = v49;
    NSString v24 = v57;
  }
  sub_1000CD370(&qword_1009844D0, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  uint64_t v35 = v56;
  dispatch thunk of SetAlgebra.init()();
  uint64_t v36 = v26[2];
  if (v36)
  {
    uint64_t v37 = v26 + 4;
    do
    {
      uint64_t v38 = *v37++;
      void aBlock[6] = v38;
      dispatch thunk of SetAlgebra.insert(_:)();
      --v36;
    }
    while (v36);
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t)v54;
  uint64_t v39 = v55;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v24, v35);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v35);
  sub_1000CC86C(v40);

  sub_100082BCC(v40, (uint64_t *)&unk_100984550);
  id v41 = [v4 collectionView];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = (void *)swift_allocObject();
    v43[2] = a2;
    v43[3] = v23;
    uint64_t v44 = v58;
    v43[4] = v4;
    v43[5] = v44;
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_1000CCC70;
    *(void *)(v45 + 24) = v43;
    aBlock[4] = sub_10003EBFC;
    aBlock[5] = v45;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003EBD4;
    aBlock[3] = &unk_1008BBC00;
    NSString v46 = _Block_copy(aBlock);
    id v47 = v4;
    swift_bridgeObjectRetain();
    swift_release();
    [v42 performBatchUpdates:v46 completion:0];
    _Block_release(v46);
    swift_release();
  }
}

void sub_1000C1394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v4 = v3;
  uint64_t v58 = a1;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for IndexSet();
  uint64_t v10 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v57 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_100984550);
  *(void *)&double v13 = __chkstk_darwin(v12 - 8).n128_u64[0];
  uint64_t v54 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [v3 collectionView];
  if (v15)
  {
    NSString v16 = v15;
    id v17 = [v15 collectionViewLayout];

    [v17 invalidateLayout];
  }
  uint64_t v18 = *(void *)&v4[qword_100984410];
  id v19 = [v4 collectionView];
  uint64_t v55 = v10;
  uint64_t v53 = v18;
  if (v19)
  {
    id v20 = v19;
    id v21 = [v19 collectionViewLayout];

    uint64_t v22 = v58;
    uint64_t v23 = a3;
    id v19 = 0;
    if (v21)
    {
      type metadata accessor for BaseCollectionCompositionalLayout();
      id v19 = (id)swift_dynamicCastClass();
      NSString v24 = v57;
      if (!v19)
      {

        id v19 = 0;
      }
    }
    else
    {
      NSString v24 = v57;
    }
  }
  else
  {
    uint64_t v23 = a3;
    NSString v24 = v57;
    uint64_t v22 = v58;
  }
  id v52 = v19;
  int64_t v25 = *(void *)(v22 + 16);
  id v26 = _swiftEmptyArrayStorage;
  if (v25)
  {
    uint64_t v49 = a2;
    uint64_t v50 = v23;
    uint64_t v51 = v4;
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001297CC(0, v25, 0);
    uint64_t v27 = v60 + 16;
    uint64_t v28 = *(void *)(v60 + 16);
    uint64_t v29 = v22 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
    uint64_t v59 = *(void *)(v60 + 72);
    uint64_t v60 = v28;
    id v30 = (void (**)(char *, uint64_t))(v27 - 8);
    do
    {
      uint64_t v31 = v61;
      ((void (*)(char *, uint64_t, uint64_t))v60)(v9, v29, v61);
      uint64_t v32 = IndexPath.section.getter();
      (*v30)(v9, v31);
      id v26 = (void *)aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001297CC(0, v26[2] + 1, 1);
        id v26 = (void *)aBlock[0];
      }
      unint64_t v34 = v26[2];
      unint64_t v33 = v26[3];
      if (v34 >= v33 >> 1)
      {
        sub_1001297CC(v33 > 1, v34 + 1, 1);
        id v26 = (void *)aBlock[0];
      }
      v26[2] = v34 + 1;
      v26[v34 + 4] = v32;
      v29 += v59;
      --v25;
    }
    while (v25);
    uint64_t v23 = v50;
    double v4 = v51;
    a2 = v49;
    NSString v24 = v57;
  }
  sub_1000CD370(&qword_1009844D0, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  uint64_t v35 = v56;
  dispatch thunk of SetAlgebra.init()();
  uint64_t v36 = v26[2];
  if (v36)
  {
    uint64_t v37 = v26 + 4;
    do
    {
      uint64_t v38 = *v37++;
      void aBlock[6] = v38;
      dispatch thunk of SetAlgebra.insert(_:)();
      --v36;
    }
    while (v36);
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t)v54;
  uint64_t v39 = v55;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v24, v35);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v35);
  sub_1000CCDB4(v40);

  sub_100082BCC(v40, (uint64_t *)&unk_100984550);
  id v41 = [v4 collectionView];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = (void *)swift_allocObject();
    v43[2] = a2;
    v43[3] = v23;
    uint64_t v44 = v58;
    v43[4] = v4;
    v43[5] = v44;
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_1000CD3BC;
    *(void *)(v45 + 24) = v43;
    aBlock[4] = sub_1000CD3B8;
    aBlock[5] = v45;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10003EBD4;
    aBlock[3] = &unk_1008BBCF0;
    NSString v46 = _Block_copy(aBlock);
    id v47 = v4;
    swift_bridgeObjectRetain();
    swift_release();
    [v42 performBatchUpdates:v46 completion:0];
    _Block_release(v46);
    swift_release();
  }
}

uint64_t sub_1000C1930(uint64_t a1)
{
  return sub_1000C1948(a1, &qword_100982660);
}

uint64_t sub_1000C193C(uint64_t a1)
{
  return sub_1000C1948(a1, &qword_1009826E0);
}

uint64_t sub_1000C1948(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for OSLogger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097E348 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100087728(v4, (uint64_t)qword_1009E1828);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BF710;
  uint64_t v17 = sub_100082C28(a2);
  v16[0] = (uint64_t)v2;
  id v9 = v2;
  static LogMessage.safe(_:)();
  sub_100082BCC((uint64_t)v16, (uint64_t *)&unk_100982B40);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  uint64_t v17 = v15;
  uint64_t v12 = sub_1000808B8(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v12, v10, v11);
  static LogMessage.sensitive(_:)();
  sub_100082BCC((uint64_t)v16, (uint64_t *)&unk_100982B40);
  Logger.error(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000C1BF4()
{
  return type metadata accessor for VersionHistoryViewController();
}

void sub_1000C1C00()
{
  uint64_t v1 = *(void *)&v0[qword_100984410];
  id v2 = [v0 collectionView];
  *(unsigned char *)(v1 + 80) = 1;

  sub_1000C0C78((void (*)(void))sub_1000BFF0C);
}

void sub_1000C1C68()
{
  id v1 = [v0 collectionView];
  sub_1000C1E90(v1);

  sub_1000C0C78((void (*)(void))sub_1000BFF0C);
}

uint64_t sub_1000C1CE0(uint64_t a1)
{
  return sub_1000C1948(a1, &qword_100982660);
}

uint64_t sub_1000C1D00()
{
  return sub_1000CD370(&qword_100982620, (void (*)(uint64_t))type metadata accessor for VersionHistoryViewController);
}

uint64_t sub_1000C1D48()
{
  return sub_1000CD370(&qword_100982628, (void (*)(uint64_t))type metadata accessor for VersionHistoryViewController);
}

uint64_t sub_1000C1D90()
{
  return sub_1000CD370(&qword_100982630, (void (*)(uint64_t))type metadata accessor for VersionHistoryViewController);
}

void sub_1000C1DD8(void (*a1)(void), uint64_t a2, void *a3)
{
  a1();
  id v4 = [a3 collectionView];
  if (v4)
  {
    uint64_t v5 = v4;
    type metadata accessor for IndexPath();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v5 deleteItemsAtIndexPaths:isa];
  }
}

void sub_1000C1E90(void *a1)
{
  uint64_t v3 = type metadata accessor for IndexSet();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v9 = (char *)&v26 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - v11;
  *(unsigned char *)(v1 + 80) = 0;
  if (a1)
  {
    id v28 = a1;
    double v13 = (char *)[v28 numberOfSections];
    type metadata accessor for GenericPagePresenter();
    sub_1000CD370(&qword_100982658, (void (*)(uint64_t))&type metadata accessor for GenericPagePresenter);
    uint64_t v14 = dispatch thunk of ShelfPresenter.sectionCount.getter();
    if ((uint64_t)v13 < v14)
    {
      uint64_t v15 = (char *)v14;
      if (__OFSUB__(v14, v13))
      {
        __break(1u);
        goto LABEL_13;
      }
      if (v14 - (uint64_t)v13 >= 1)
      {
        uint64_t v27 = v4;
        sub_1000CD370(&qword_1009844D0, (void (*)(uint64_t))&type metadata accessor for IndexSet);
        dispatch thunk of SetAlgebra.init()();
        do
        {
          void aBlock[6] = v13;
          dispatch thunk of SetAlgebra.insert(_:)();
          ++v13;
        }
        while (v15 != v13);
        uint64_t v16 = v27;
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
        v17(v12, v9, v3);
        uint64_t v18 = self;
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v6, v12, v3);
        unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v28;
        v17((char *)(v20 + v19), v6, v3);
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = sub_1000CCDA0;
        *(void *)(v21 + 24) = v20;
        aBlock[4] = sub_1000CD3B8;
        aBlock[5] = v21;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003EBD4;
        aBlock[3] = &unk_1008BBC78;
        uint64_t v22 = _Block_copy(aBlock);
        id v23 = v28;
        swift_retain();
        swift_release();
        [v18 performWithoutAnimation:v22];
        _Block_release(v22);

        (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v3);
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0) {
          return;
        }
LABEL_13:
        __break(1u);
        return;
      }
    }
    id v25 = v28;
  }
}

void sub_1000C228C(void *a1)
{
  uint64_t v3 = type metadata accessor for IndexSet();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v9 = (char *)&v26 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - v11;
  *(unsigned char *)(v1 + 80) = 0;
  if (a1)
  {
    id v28 = a1;
    double v13 = (char *)[v28 numberOfSections];
    type metadata accessor for ReviewsPagePresenter();
    sub_1000CD370(&qword_1009826D8, (void (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter);
    uint64_t v14 = dispatch thunk of ShelfPresenter.sectionCount.getter();
    if ((uint64_t)v13 < v14)
    {
      uint64_t v15 = (char *)v14;
      if (__OFSUB__(v14, v13))
      {
        __break(1u);
        goto LABEL_13;
      }
      if (v14 - (uint64_t)v13 >= 1)
      {
        uint64_t v27 = v4;
        sub_1000CD370(&qword_1009844D0, (void (*)(uint64_t))&type metadata accessor for IndexSet);
        dispatch thunk of SetAlgebra.init()();
        do
        {
          void aBlock[6] = v13;
          dispatch thunk of SetAlgebra.insert(_:)();
          ++v13;
        }
        while (v15 != v13);
        uint64_t v16 = v27;
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
        v17(v12, v9, v3);
        uint64_t v18 = self;
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v6, v12, v3);
        unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v28;
        v17((char *)(v20 + v19), v6, v3);
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = sub_1000CCDA0;
        *(void *)(v21 + 24) = v20;
        aBlock[4] = sub_1000CD3B8;
        aBlock[5] = v21;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10003EBD4;
        aBlock[3] = &unk_1008BBD68;
        uint64_t v22 = _Block_copy(aBlock);
        id v23 = v28;
        swift_retain();
        swift_release();
        [v18 performWithoutAnimation:v22];
        _Block_release(v22);

        (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v3);
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0) {
          return;
        }
LABEL_13:
        __break(1u);
        return;
      }
    }
    id v25 = v28;
  }
}

uint64_t sub_1000C2688(uint64_t (*a1)(void, __n128), unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v7 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ImpressionMetrics();
  uint64_t v49 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = *(void *)(v3 + 16);
  uint64_t v18 = a1(0, v14);
  uint64_t v53 = sub_1000CD370(a2, a3);
  uint64_t result = dispatch thunk of ShelfPresenter.sectionCount.getter();
  if ((result & 0x8000000000000000) == 0)
  {
    if (!result) {
      return result;
    }
    uint64_t v20 = 0;
    uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    uint64_t v50 = (void (**)(char *, char *, uint64_t))(v49 + 32);
    uint64_t v51 = (void *)(v3 + 56);
    id v47 = v9;
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v49 + 16);
    uint64_t v42 = v49 + 40;
    uint64_t v43 = (void (**)(char *, uint64_t))(v49 + 8);
    uint64_t v45 = v18;
    uint64_t v46 = v17;
    uint64_t v52 = result;
    uint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    while (result != v20)
    {
      dispatch thunk of ShelfPresenter.shelf(for:)();
      Shelf.impressionMetrics.getter();
      if ((*v21)(v9, 1, v10) == 1)
      {
        swift_release();
        sub_100082BCC((uint64_t)v9, &qword_100985970);
      }
      else
      {
        uint64_t v22 = *v50;
        (*v50)(v16, v9, v10);
        id v23 = v51;
        swift_beginAccess();
        NSString v24 = v12;
        id v25 = v16;
        uint64_t v26 = v16;
        uint64_t v27 = v10;
        (*v48)(v12, v26, v10);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v54 = (void *)*v23;
        uint64_t v29 = v54;
        *id v23 = 0x8000000000000000;
        unint64_t v31 = sub_10006EE24(v20);
        uint64_t v32 = v29[2];
        BOOL v33 = (v30 & 1) == 0;
        uint64_t v34 = v32 + v33;
        if (__OFADD__(v32, v33)) {
          goto LABEL_21;
        }
        char v35 = v30;
        if (v29[3] >= v34)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1000C97FC();
          }
        }
        else
        {
          sub_1000C444C(v34, isUniquelyReferenced_nonNull_native);
          unint64_t v36 = sub_10006EE24(v20);
          if ((v35 & 1) != (v37 & 1)) {
            goto LABEL_24;
          }
          unint64_t v31 = v36;
        }
        uint64_t v12 = v24;
        uint64_t v38 = v54;
        if (v35)
        {
          uint64_t v10 = v27;
          (*(void (**)(unint64_t, char *, uint64_t))(v49 + 40))(v54[7] + *(void *)(v49 + 72) * v31, v24, v27);
        }
        else
        {
          v54[(v31 >> 6) + 8] |= 1 << v31;
          *(void *)(v38[6] + 8 * v31) = v20;
          uint64_t v10 = v27;
          v22((char *)(v38[7] + *(void *)(v49 + 72) * v31), v24, v27);
          uint64_t v39 = v38[2];
          BOOL v40 = __OFADD__(v39, 1);
          uint64_t v41 = v39 + 1;
          if (v40) {
            goto LABEL_22;
          }
          v38[2] = v41;
        }
        *uint64_t v51 = v54;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
        uint64_t v16 = v25;
        (*v43)(v25, v10);
        id v9 = v47;
        uint64_t v21 = v44;
      }
      ++v20;
      uint64_t result = v52;
      if (v52 == v20) {
        return result;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
LABEL_24:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000C2AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = sub_100082C28((uint64_t *)&unk_100992100);
  uint64_t v3 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  unint64_t v67 = &v52[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v5 - 8);
  objc_super v66 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v64 = type metadata accessor for ImpressionMetrics();
  uint64_t v7 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v56 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v55 = &v52[-v10];
  uint64_t v72 = type metadata accessor for IndexSet();
  uint64_t v11 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  objc_super v65 = &v52[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v71 = type metadata accessor for IndexSet.Index();
  uint64_t v13 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v74 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v77 = &v52[-v16];
  uint64_t v17 = sub_100082C28(&qword_100982638);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = &v52[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  IndexSet.makeIterator()();
  uint64_t v21 = *(int *)(v18 + 44);
  uint64_t v73 = v20;
  uint64_t v22 = &v20[v21];
  uint64_t v76 = a2;
  long long v63 = (uint64_t *)(a2 + 56);
  swift_beginAccess();
  id v23 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16);
  uint64_t v75 = v13 + 16;
  Swift::String v69 = (void (**)(unsigned char *, uint64_t))(v13 + 8);
  v70 = v23;
  uint64_t v62 = (void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v61 = (void (**)(unsigned char *, uint64_t))(v11 + 8);
  uint64_t v54 = v7 + 16;
  uint64_t v57 = v7 + 32;
  uint64_t v53 = (void (**)(unsigned char *, uint64_t))(v7 + 8);
  uint64_t v58 = v7;
  uint64_t v60 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v59 = (void (**)(unsigned char *, uint64_t))(v3 + 8);
  uint64_t v24 = v71;
  uint64_t v25 = (uint64_t)v73;
  v23(v77, v22, v71);
  while (1)
  {
    sub_1000CD370(&qword_100982640, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    uint64_t v29 = v74;
    uint64_t v30 = v72;
    dispatch thunk of Collection.endIndex.getter();
    sub_1000CD370(&qword_100982648, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v32 = *v69;
    (*v69)(v29, v24);
    v32(v77, v24);
    if (v31) {
      break;
    }
    BOOL v33 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v35 = *v34;
    v33(v78, 0);
    unint64_t v36 = v65;
    (*v62)(v65, v25, v30);
    dispatch thunk of Collection.formIndex(after:)();
    (*v61)(v36, v30);
    char v37 = v63;
    uint64_t v38 = *v63;
    uint64_t v39 = v64;
    if (*(void *)(*v63 + 16))
    {
      unint64_t v40 = sub_10006EE24(v35);
      if (v41)
      {
        uint64_t v42 = *(void *)(v38 + 56);
        uint64_t v43 = v58;
        (*(void (**)(unsigned char *, unint64_t, uint64_t))(v58 + 16))(v56, v42 + *(void *)(v58 + 72) * v40, v39);
        uint64_t v44 = v55;
        (*(void (**)(void))(v43 + 32))();
        if (*(void *)(v76 + 112))
        {
          swift_retain();
          ImpressionsCalculator.removeElement(_:)();
          swift_release();
        }
        (*v53)(v44, v39);
      }
    }
    swift_beginAccess();
    unint64_t v45 = sub_10006EE24(v35);
    if (v46)
    {
      unint64_t v47 = v45;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = *v37;
      uint64_t v79 = *v37;
      *char v37 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000C97FC();
        uint64_t v49 = v79;
      }
      uint64_t v50 = v66;
      (*(void (**)(unsigned char *, unint64_t, uint64_t))(v58 + 32))(v66, *(void *)(v49 + 56) + *(void *)(v58 + 72) * v47, v39);
      sub_1000C82A8(v47, v49);
      *char v37 = v49;
      swift_bridgeObjectRelease();
      uint64_t v27 = (uint64_t)v50;
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = 1;
      uint64_t v27 = (uint64_t)v66;
    }
    (*v60)(v27, v26, 1, v39);
    sub_100082BCC(v27, &qword_100985970);
    swift_endAccess();
    uint64_t v79 = v35;
    AnyHashable.init<A>(_:)();
    id v28 = v67;
    StatePath.init(component:)();
    TransientStateStore.removeState(at:recursively:)();
    (*v59)(v28, v68);
    v70(v77, v22, v24);
  }
  return sub_100082BCC(v25, &qword_100982638);
}

uint64_t sub_1000C3278(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v35 = sub_100082C28((uint64_t *)&unk_100992100);
  uint64_t v2 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v34 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IndexSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexSet.Index();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v38 = (char *)&v29 - v11;
  uint64_t v12 = sub_100082C28(&qword_100982638);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexSet.makeIterator()();
  uint64_t v16 = &v15[*(int *)(v13 + 44)];
  char v37 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v40 = v8 + 16;
  char v41 = v15;
  uint64_t v17 = (void (**)(char *, uint64_t))(v8 + 8);
  char v31 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v32 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v30 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v18 = v38;
  while (1)
  {
    v37(v18, v16, v7);
    sub_1000CD370(&qword_100982640, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    uint64_t v19 = v39;
    dispatch thunk of Collection.endIndex.getter();
    sub_1000CD370(&qword_100982648, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v21 = *v17;
    (*v17)(v19, v7);
    v21(v18, v7);
    if (v20) {
      break;
    }
    uint64_t v22 = (uint64_t)v41;
    id v23 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v25 = *v24;
    v23(v42, 0);
    uint64_t v26 = v33;
    (*v32)(v33, v22, v4);
    dispatch thunk of Collection.formIndex(after:)();
    (*v31)(v26, v4);
    uint64_t v43 = v25;
    AnyHashable.init<A>(_:)();
    uint64_t v27 = v34;
    StatePath.init(component:)();
    TransientStateStore.removeState(at:recursively:)();
    (*v30)(v27, v35);
  }
  return sub_100082BCC((uint64_t)v41, &qword_100982638);
}

uint64_t sub_1000C36E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_100982770);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v37 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v38 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v38) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v38) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v38)
            {
LABEL_31:
              if (v37)
              {
                if (v36 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v38);
                }
                else {
                  *uint64_t v9 = v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_39;
                }
                if (v8 >= v38) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 56) + 40 * v17;
      uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      char v23 = *(unsigned char *)(v21 + 32);
      uint64_t v25 = *(void *)(v21 + 16);
      uint64_t v24 = *(void *)(v21 + 24);
      uint64_t v27 = *(void *)v21;
      uint64_t v26 = *(void *)(v21 + 8);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v13 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v13 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v13 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v7 + 48) + 8 * v14) = v22;
      uint64_t v15 = *(void *)(v7 + 56) + 40 * v14;
      *(void *)uint64_t v15 = v27;
      *(void *)(v15 + 8) = v26;
      *(void *)(v15 + 16) = v25;
      *(void *)(v15 + 24) = v24;
      *(unsigned char *)(v15 + 32) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C39B4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_100982678);
  char v35 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    int64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    uint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_10008A888(v22, v36);
    }
    else
    {
      sub_10008A898((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v24 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_10008A888(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C3CF0(uint64_t a1, char a2)
{
  return sub_1000C4800(a1, a2, &qword_100982718);
}

uint64_t sub_1000C3CFC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for AdamId();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100082C28(&qword_100982698);
  int v42 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    char v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      char v28 = *(unsigned char *)(*(void *)(v9 + 56) + v21);
      sub_1000CD370(&qword_10098B850, (void (*)(uint64_t))&type metadata accessor for AdamId);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(unsigned char *)(*(void *)(v11 + 56) + v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_1000C4120(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_100982670);
  char v35 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v8 << 6);
      }
      else
      {
        int64_t v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v22 >= v33) {
          goto LABEL_36;
        }
        unint64_t v23 = v34[v22];
        ++v8;
        if (!v23)
        {
          int64_t v8 = v22 + 1;
          if (v22 + 1 >= v33) {
            goto LABEL_36;
          }
          unint64_t v23 = v34[v8];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v33)
            {
LABEL_36:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_43;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v34 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v34[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v8 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_45;
                }
                if (v8 >= v33) {
                  goto LABEL_36;
                }
                unint64_t v23 = v34[v8];
                ++v24;
                if (v23) {
                  goto LABEL_33;
                }
              }
            }
            int64_t v8 = v24;
          }
        }
LABEL_33:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v8 << 6);
      }
      uint64_t v29 = *(void *)(v5 + 48) + 24 * v21;
      long long v36 = *(_OWORD *)v29;
      Swift::UInt64 v30 = *(void *)(v29 + 16);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
      if ((v35 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v36);
      Hasher._combine(_:)(*((Swift::UInt *)&v36 + 1));
      if ((v30 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v13 = v30;
      }
      else {
        Swift::UInt64 v13 = 0;
      }
      Hasher._combine(_:)(v13);
      uint64_t result = Hasher._finalize()();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        long long v18 = v36;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        long long v18 = v36;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v19 = *(void *)(v7 + 48) + 24 * v17;
      *(_OWORD *)uint64_t v19 = v18;
      *(void *)(v19 + 16) = v30;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_43:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C4440(uint64_t a1, char a2)
{
  return sub_1000C6F28(a1, a2, &qword_1009826F0);
}

uint64_t sub_1000C444C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = type metadata accessor for ImpressionMetrics();
  uint64_t v5 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100082C28(&qword_100982650);
  int v40 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    long long v36 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    int64_t v38 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v37 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v39 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    unint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v21 >= v37) {
          goto LABEL_34;
        }
        unint64_t v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_34;
          }
          unint64_t v22 = v38[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_41;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
              if (v35 >= 64) {
                bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v38 = -1 << v35;
              }
              uint64_t v3 = v36;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v37) {
                  goto LABEL_34;
                }
                unint64_t v22 = v38[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = v5;
      uint64_t v26 = *(void *)(v5 + 72);
      unint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
      if (v40) {
        (*v16)(v7, v27, v41);
      }
      else {
        (*v39)(v7, v27, v41);
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v17 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v17 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v10 + 48) + 8 * v18) = v24;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v16)(*(void *)(v10 + 56) + v26 * v18, v7, v41);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v25;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1000C47F4(uint64_t a1, char a2)
{
  return sub_1000C4800(a1, a2, &qword_100982758);
}

uint64_t sub_1000C4800(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_100082C28(a3);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v32 = -1 << v11;
    uint64_t v33 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v34 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if (a2)
              {
                if (v33 >= 64) {
                  bzero((void *)(v6 + 64), 8 * v34);
                }
                else {
                  uint64_t *v10 = v32;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v9 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1000C4AB4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = type metadata accessor for AdPlacementType();
  uint64_t v5 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_100082C28(&qword_100982688);
  int v45 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    int64_t v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    int v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    char v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v42 = v8;
    uint64_t v43 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = v40[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = v40[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v45)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v40, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int v40 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v40[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = v40[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      BOOL v27 = v43;
      uint64_t v28 = v44;
      if (v45)
      {
        (*v46)(v43, v26, v44);
        long long v47 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v20);
      }
      else
      {
        (*v41)(v43, v26, v44);
        long long v47 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v20);
        swift_retain();
        swift_retain();
      }
      sub_1000CD370(&qword_100982680, (void (*)(uint64_t))&type metadata accessor for AdPlacementType);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v46)(*(void *)(v10 + 48) + v25 * v18, v27, v28);
      *(_OWORD *)(*(void *)(v10 + 56) + 16 * v18) = v47;
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v42;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1000C4EEC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_100982768);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    BOOL v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C5198(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100082C28(&qword_100982760);
  int v47 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v43 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    int v45 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v44 = (unint64_t)(v12 + 63) >> 6;
    char v46 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v49 = v5;
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v22 = v21 | (v18 << 6);
      }
      else
      {
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v44) {
          goto LABEL_34;
        }
        unint64_t v24 = v45[v23];
        ++v18;
        if (!v24)
        {
          int64_t v18 = v23 + 1;
          if (v23 + 1 >= v44) {
            goto LABEL_34;
          }
          unint64_t v24 = v45[v18];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v44)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v43;
              if (v47)
              {
                uint64_t v41 = 1 << *(unsigned char *)(v9 + 32);
                if (v41 >= 64) {
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int v45 = -1 << v41;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v45[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v18 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v44) {
                  goto LABEL_34;
                }
                unint64_t v24 = v45[v18];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v25;
          }
        }
LABEL_21:
        unint64_t v15 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
      }
      uint64_t v26 = v9;
      uint64_t v27 = *(void *)(v9 + 48);
      uint64_t v28 = v6;
      uint64_t v29 = *(void *)(v6 + 72);
      uint64_t v30 = v27 + v29 * v22;
      if (v47) {
        (*v48)(v8, v30, v49);
      }
      else {
        (*v46)(v8, v30, v49);
      }
      uint64_t v31 = (uint64_t *)(*(void *)(v26 + 56) + 16 * v22);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      sub_1000CD370(&qword_100982700, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v34 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v35 = result & ~v34;
      unint64_t v36 = v35 >> 6;
      if (((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v37 = 0;
        unint64_t v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v39 = v36 == v38;
          if (v36 == v38) {
            unint64_t v36 = 0;
          }
          v37 |= v39;
          uint64_t v40 = *(void *)(v16 + 8 * v36);
        }
        while (v40 == -1);
        unint64_t v19 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v29 * v19, v8, v49);
      unint64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      ++*(void *)(v11 + 16);
      uint64_t v6 = v28;
      uint64_t v9 = v26;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_1000C55C8(uint64_t a1, char a2)
{
  return sub_1000C6F28(a1, a2, &qword_100982728);
}

uint64_t sub_1000C55D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_1009826A0);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_10008A888(v24, v35);
      }
      else
      {
        sub_10008A898((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_10008A888(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C58D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_1009826A8);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C5BEC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_100982708);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v37) {
      break;
    }
    int64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v38 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v37) {
              goto LABEL_34;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_21:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v5 + 48) + 40 * v19;
    if (a2)
    {
      long long v25 = *(_OWORD *)v24;
      long long v26 = *(_OWORD *)(v24 + 16);
      uint64_t v41 = *(void *)(v24 + 32);
      long long v39 = v25;
      long long v40 = v26;
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_10008A8F4(v24, (uint64_t)&v39);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      swift_retain();
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
    long long v16 = v39;
    long long v17 = v40;
    *(void *)(v15 + 32) = v41;
    *(_OWORD *)uint64_t v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v27;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v21 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v21 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C5F00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_1009826C0);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C620C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_100982788);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C6514(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_100982730);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = 8 * v20;
    uint64_t v30 = *(void *)(*(void *)(v5 + 48) + v29);
    uint64_t v31 = *(void **)(*(void *)(v5 + 56) + v29);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      id v32 = v31;
    }
    type metadata accessor for Artwork();
    sub_1000CD370((unint64_t *)&qword_100982738, (void (*)(uint64_t))&type metadata accessor for Artwork);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 8 * v17;
    *(void *)(*(void *)(v7 + 48) + v18) = v30;
    *(void *)(*(void *)(v7 + 56) + v18) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C6860(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for AdamId();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100082C28(&qword_100982780);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  long long v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_1000CD370(&qword_10098B850, (void (*)(uint64_t))&type metadata accessor for AdamId);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_1000C6C84(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_100982748);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    uint64_t v31 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v29 = -1 << v10;
    uint64_t v30 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_38;
              }
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v29;
              }
              uint64_t v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v17);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v15) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C6F28(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_100082C28(a3);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v33 = -1 << v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
    unint64_t v35 = v4;
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v35;
                goto LABEL_40;
              }
              if (v34 >= 64) {
                bzero((void *)(v6 + 64), 8 * v36);
              }
              else {
                uint64_t *v10 = v33;
              }
              uint64_t v4 = v35;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void **)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        id v32 = v31;
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1000C71D8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100082C28(&qword_1009826F8);
  int v45 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v39 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    int64_t v41 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v40 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v42 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    int v46 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    int v47 = v8;
    uint64_t v48 = v5;
    uint64_t v43 = v9;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v22 = v21 | (v18 << 6);
      }
      else
      {
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v40) {
          goto LABEL_34;
        }
        unint64_t v24 = v41[v23];
        ++v18;
        if (!v24)
        {
          int64_t v18 = v23 + 1;
          if (v23 + 1 >= v40) {
            goto LABEL_34;
          }
          unint64_t v24 = v41[v18];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v39;
              if (v45)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v9 + 32);
                if (v38 >= 64) {
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v41 = -1 << v38;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v18 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v40) {
                  goto LABEL_34;
                }
                unint64_t v24 = v41[v18];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v25;
          }
        }
LABEL_21:
        unint64_t v15 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
      }
      uint64_t v26 = *(void *)(v6 + 72);
      unint64_t v27 = *(void *)(v9 + 48) + v26 * v22;
      if (v45) {
        (*v46)(v47, v27, v48);
      }
      else {
        (*v42)(v47, v27, v48);
      }
      uint64_t v28 = (char *)(*(void *)(v9 + 56) + 2 * v22);
      char v29 = v28[1];
      char v30 = *v28;
      sub_1000CD370(&qword_100982700, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v31 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v16 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v19 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v46)(*(void *)(v11 + 48) + v26 * v19, v47, v48);
      unint64_t v20 = (unsigned char *)(*(void *)(v11 + 56) + 2 * v19);
      *unint64_t v20 = v30;
      v20[1] = v29;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v43;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_1000C75F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100082C28(&qword_100982710);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    char v34 = v3;
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      char v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000C78A4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = type metadata accessor for AdamId();
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_100082C28(&qword_100982790);
  int v47 = a2;
  uint64_t v8 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  int64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  int v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    int64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *unint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  int64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v9;
  return result;
}

uint64_t sub_1000C7C8C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for BadgeType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100082C28(&qword_1009826C8);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  int64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_1000CD370(&qword_1009826D0, (void (*)(uint64_t))&type metadata accessor for BadgeType);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

unint64_t sub_1000C80B0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        Hasher.init(_seed:)();
        id v11 = v10;
        String.hash(into:)();
        Swift::Int v12 = Hasher._finalize()();

        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (_OWORD *)(v17 + 32 * v3);
          unint64_t v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            *uint64_t v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *int64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000C82A8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for ImpressionMetrics() - 8) + 72);
        int64_t v17 = v16 * v3;
        uint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000C8478(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(a2 + 48);
        unint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1) {
              *uint64_t v15 = *v11;
            }
            uint64_t v16 = *(void *)(a2 + 56);
            int64_t v17 = (_OWORD *)(v16 + 32 * v3);
            int64_t v18 = (_OWORD *)(v16 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v17 >= v18 + 2))
            {
              long long v9 = v18[1];
              *int64_t v17 = *v18;
              v17[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000C8610(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000C87E8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1000C89C0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdPlacementType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = _HashTable.previousHole(before:)();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      unint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_1000CD370(&qword_100982680, (void (*)(uint64_t))&type metadata accessor for AdPlacementType);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (_OWORD *)(v21 + 16 * a1);
            BOOL v23 = (_OWORD *)(v21 + 16 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              *uint64_t v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1000C8CB8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *unint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          int64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *int64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000C8E90(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        Swift::Int v10 = (void *)(v9 + 8 * v6);
        uint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_1000C9028()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982770);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v27 = __clz(__rbit64(v25));
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = v27 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)(v19 + 32);
    long long v21 = *(_OWORD *)v19;
    long long v22 = *(_OWORD *)(v19 + 16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v23 = v21;
    *(_OWORD *)(v23 + 16) = v22;
    *(unsigned char *)(v23 + 32) = v20;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000C91D0()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982678);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_10008A898(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_10008A888(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000C9398()
{
  return sub_1000C9C5C(&qword_100982718);
}

void *sub_1000C93A4()
{
  uint64_t v1 = type metadata accessor for AdamId();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082C28(&qword_100982698);
  long long v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *long long v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    char v17 = *(unsigned char *)(*(void *)(v5 + 56) + v15);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(unsigned char *)(*(void *)(v7 + 56) + v15) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1000C9634()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982670);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v17;
    *(void *)(v21 + 16) = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000C97F0()
{
  return sub_1000CB6F4(&qword_1009826F0);
}

void *sub_1000C97FC()
{
  uint64_t v1 = type metadata accessor for ImpressionMetrics();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082C28(&qword_100982650);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1000C9A8C()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_1009826E8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_10008A898(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = sub_10008A888(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000C9C50()
{
  return sub_1000C9C5C(&qword_100982758);
}

void *sub_1000C9C5C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100082C28(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000C9DF8()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982750);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000C9FAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Accessory();
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082C28(&qword_100982720);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v24 = v1;
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_10007B6D4(*(void *)(v5 + 48) + v18, (uint64_t)v4);
    uint64_t v19 = 8 * v17;
    unint64_t v20 = *(void **)(*(void *)(v5 + 56) + v19);
    sub_1000CD30C((uint64_t)v4, *(void *)(v7 + 48) + v18);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    id result = v20;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000CA208()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982690);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CA3C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AdPlacementType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082C28(&qword_100982688);
  uint64_t v6 = *v0;
  uint64_t v7 = static _DictionaryStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v24 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v25 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 16 * v16;
    unint64_t v19 = *(void *)(v8 + 48) + v17;
    unint64_t v20 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    long long v28 = *(_OWORD *)(*(void *)(v6 + 56) + v18);
    v20(v19, v5, v2);
    *(_OWORD *)(*(void *)(v8 + 56) + v18) = v28;
    swift_retain();
    id result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000CA678()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982768);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CA808()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082C28(&qword_100982760);
  uint64_t v6 = *v0;
  uint64_t v7 = static _DictionaryStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v24 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v25 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 16 * v16;
    unint64_t v19 = *(void *)(v8 + 48) + v17;
    int64_t v20 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
    long long v28 = *(_OWORD *)(*(void *)(v6 + 56) + v18);
    id result = (void *)v20(v19, v5, v2);
    *(_OWORD *)(*(void *)(v8 + 56) + v18) = v28;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1000CAAA8()
{
  return sub_1000CB6F4(&qword_100982728);
}

void *sub_1000CAAB4()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_1009826A0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10008A898(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_10008A888(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000CAC9C()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_1009826A8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CAE54()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982708);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_10008A8F4(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v17 = *(void *)(v4 + 48) + 40 * v15;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CB030()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_1009826C0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    long long v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *long long v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CB1DC()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982788);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000CB38C()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982730);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    swift_retain();
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CB534()
{
  return sub_1000CBFEC((uint64_t (*)(void))&type metadata accessor for AdamId, &qword_100982780);
}

void *sub_1000CB554()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982748);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000CB6E8()
{
  return sub_1000CB6F4(&qword_100982740);
}

id sub_1000CB6F4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100082C28(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CB890()
{
  uint64_t v35 = type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  char v34 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082C28(&qword_1009826F8);
  uint64_t v29 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
    id result = (void *)swift_release();
    uint64_t v27 = v29;
LABEL_25:
    *uint64_t v27 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  uint64_t v37 = v5;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v7);
  }
  int64_t v8 = 0;
  *(void *)(v37 + 16) = *(void *)(v3 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v36 = v3;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v3 + 64);
  uint64_t v30 = v3 + 64;
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v32 = v1 + 32;
  uint64_t v33 = v1 + 16;
  unint64_t v13 = v34;
  uint64_t v12 = v35;
  uint64_t v14 = v37;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v8 << 6);
      uint64_t v17 = v36;
      goto LABEL_9;
    }
    int64_t v24 = v8 + 1;
    uint64_t v17 = v36;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v31) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v30 + 8 * v24);
    ++v8;
    if (!v25)
    {
      int64_t v8 = v24 + 1;
      if (v24 + 1 >= v31) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v30 + 8 * v8);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v8 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v13, *(void *)(v17 + 48) + v18, v12);
    uint64_t v19 = 2 * v16;
    unint64_t v20 = (char *)(*(void *)(v17 + 56) + v19);
    char v21 = *v20;
    char v22 = v20[1];
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v14 + 48) + v18, v13, v12);
    unint64_t v23 = (unsigned char *)(*(void *)(v14 + 56) + v19);
    *unint64_t v23 = v21;
    v23[1] = v22;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v31)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v27 = v29;
    uint64_t v5 = v37;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v30 + 8 * v26);
  if (v25)
  {
    int64_t v8 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v8 >= v31) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v30 + 8 * v8);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1000CBB64()
{
  uint64_t v1 = v0;
  sub_100082C28(&qword_100982710);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000CBD08()
{
  uint64_t v35 = type metadata accessor for AdamId();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082C28(&qword_100982790);
  uint64_t v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = static _DictionaryStorage.copy(original:)();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v36;
    uint64_t v27 = v30;
LABEL_25:
    *uint64_t v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    int64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    unint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    *unint64_t v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000CBFCC()
{
  return sub_1000CBFEC((uint64_t (*)(void))&type metadata accessor for BadgeType, &qword_1009826C8);
}

void *sub_1000CBFEC(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - v6;
  sub_100082C28(a2);
  uint64_t v27 = v2;
  uint64_t v8 = *v2;
  uint64_t v9 = static _DictionaryStorage.copy(original:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v27 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  uint64_t v28 = v8 + 64;
  int64_t v29 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v30 = v5 + 32;
  uint64_t v31 = v5 + 16;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v14);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v20, v4);
    uint64_t v21 = 8 * v19;
    uint64_t v22 = *(void *)(*(void *)(v8 + 56) + 8 * v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v20, v7, v4);
    *(void *)(*(void *)(v10 + 56) + v21) = v22;
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v29) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v14 >= v29) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v14);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000CC284(void *a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 80) != 1) {
    return 0;
  }
  id v2 = [a1 traitCollection];
  if (qword_10097FC30 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for StaticDimension();
  sub_100087728(v3, (uint64_t)qword_1009E5D90);
  type metadata accessor for TraitEnvironmentPlaceholder();
  sub_100082C28(&qword_100982B50);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1007BEA80;
  *(void *)(v4 + 32) = v2;
  id v5 = v2;
  uint64_t v6 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)();
  dispatch thunk of AnyDimension.rawValue(in:)();
  double v8 = v7;

  uint64_t v9 = self;
  id v10 = [v9 fractionalWidthDimension:1.0];
  id v11 = [v9 absoluteDimension:v8];
  id v12 = [self sizeWithWidthDimension:v10 heightDimension:v11];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [self boundarySupplementaryItemWithLayoutSize:v12 elementKind:v13 alignment:5];

  return v14;
}

void sub_1000CC47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutomationSemantics();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082C28(&qword_1009826B0);
  swift_allocObject();
  uint64_t v8 = swift_retain_n();
  uint64_t v9 = sub_1003F2CA8(v8);
  swift_retain();
  id v10 = sub_1003F03BC(a1, v9, a2);
  sub_1000CD370(&qword_1009826B8, (void (*)(uint64_t))type metadata accessor for VersionHistoryViewController);
  id v11 = v10;
  swift_retain();
  id v12 = v11;
  dispatch thunk of BaseGenericPagePresenter.view.setter();
  swift_release();
  swift_retain();
  NSString v13 = v12;
  dispatch thunk of BaseGenericPagePresenter.pageTitle.getter();
  uint64_t v15 = v14;
  swift_release();
  if (v15)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  [v13 setTitle:v16];

  v13[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_prefersLargeTitle] = 1;
  uint64_t v17 = *(void *)&v13[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_uber];
  unint64_t v18 = v13;
  id v19 = [v18 navigationItem];
  unint64_t v20 = v19;
  if (v17) {
    uint64_t v21 = 2;
  }
  else {
    uint64_t v21 = 3;
  }
  [v19 setLargeTitleDisplayMode:v21];

  id v22 = [v18 view];
  if (v22)
  {
    memset(v23, 0, sizeof(v23));
    static AutomationSemantics.page(name:id:)();
    sub_100082BCC((uint64_t)v23, (uint64_t *)&unk_100982B40);
    UIView.setAutomationSemantics(_:)();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    __break(1u);
  }
}

id sub_1000CC750(double a1)
{
  if (a1 <= 0.0) {
    return 0;
  }
  id v2 = self;
  id v3 = [v2 fractionalWidthDimension:1.0];
  id v4 = [v2 absoluteDimension:a1];
  id v5 = [self sizeWithWidthDimension:v3 heightDimension:v4];

  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [self boundarySupplementaryItemWithLayoutSize:v5 elementKind:v6 alignment:1];

  return v7;
}

uint64_t sub_1000CC86C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_100984550);
  __chkstk_darwin(v4 - 8);
  NSString v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - v8;
  uint64_t v10 = type metadata accessor for IndexSet();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  NSString v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  NSString v16 = (char *)v19 - v15;
  sub_1000CCCA0(a1, (uint64_t)v9);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v21(v9, 1, v10) == 1)
  {
    sub_100082BCC((uint64_t)v9, (uint64_t *)&unk_100984550);
    if (v2[14])
    {
      swift_retain();
      ImpressionsCalculator.removeAllElements()();
      swift_release();
    }
    swift_beginAccess();
    v2[7] = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    v19[2] = v19;
    uint64_t v23 = v2[3];
    __chkstk_darwin(v23);
    v19[1] = 0;
    unint64_t v20 = v13;
    v19[-2] = v16;
    v19[-1] = v2;
    swift_retain();
    sub_100082C28((uint64_t *)&unk_100986D40);
    sub_1000CCD24();
    NSString v13 = v20;
    StateStore.performTransaction<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  uint64_t v17 = v21;
  sub_1000C2688((uint64_t (*)(void, __n128))&type metadata accessor for GenericPagePresenter, &qword_100982658, (void (*)(uint64_t))&type metadata accessor for GenericPagePresenter);
  sub_1000CCCA0(a1, (uint64_t)v6);
  if (v17(v6, 1, v10) == 1) {
    return sub_100082BCC((uint64_t)v6, (uint64_t *)&unk_100984550);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v6, v10);
  uint64_t v22 = v2[3];
  __chkstk_darwin(v22);
  v19[-2] = v13;
  v19[-1] = v2;
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100986D40);
  sub_1000CCD24();
  StateStore.performTransaction<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_1000CCC70()
{
  sub_1000C1DD8(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1000CCC90()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CCCA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_100984550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CCD08()
{
  return sub_1000C3278(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1000CCD24()
{
  unint64_t result = qword_10098FE10;
  if (!qword_10098FE10)
  {
    sub_100078F30((uint64_t *)&unk_100986D40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10098FE10);
  }
  return result;
}

uint64_t sub_1000CCD80()
{
  return sub_1000C2AC0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000CCDA4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CCDB4(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_100984550);
  __chkstk_darwin(v4 - 8);
  NSString v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - v8;
  uint64_t v10 = type metadata accessor for IndexSet();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  NSString v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  NSString v16 = (char *)v19 - v15;
  sub_1000CCCA0(a1, (uint64_t)v9);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v21(v9, 1, v10) == 1)
  {
    sub_100082BCC((uint64_t)v9, (uint64_t *)&unk_100984550);
    if (v2[14])
    {
      swift_retain();
      ImpressionsCalculator.removeAllElements()();
      swift_release();
    }
    swift_beginAccess();
    v2[7] = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    v19[2] = v19;
    uint64_t v23 = v2[3];
    __chkstk_darwin(v23);
    v19[1] = 0;
    unint64_t v20 = v13;
    v19[-2] = v16;
    v19[-1] = v2;
    swift_retain();
    sub_100082C28((uint64_t *)&unk_100986D40);
    sub_1000CCD24();
    NSString v13 = v20;
    StateStore.performTransaction<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  uint64_t v17 = v21;
  sub_1000C2688((uint64_t (*)(void, __n128))&type metadata accessor for ReviewsPagePresenter, &qword_1009826D8, (void (*)(uint64_t))&type metadata accessor for ReviewsPagePresenter);
  sub_1000CCCA0(a1, (uint64_t)v6);
  if (v17(v6, 1, v10) == 1) {
    return sub_100082BCC((uint64_t)v6, (uint64_t *)&unk_100984550);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v6, v10);
  uint64_t v22 = v2[3];
  __chkstk_darwin(v22);
  v19[-2] = v13;
  v19[-1] = v2;
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100986D40);
  sub_1000CCD24();
  StateStore.performTransaction<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1000CD1B8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CD1CC()
{
  uint64_t v1 = type metadata accessor for IndexSet();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1000CD298()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexSet() - 8);
  uint64_t v2 = (NSIndexSet *)((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v3 = *(void **)(v0 + 16);

  sub_1005BA778(v3, v2);
}

uint64_t sub_1000CD2FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CD30C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Accessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CD370(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000CD3D8()
{
  return sub_1000CCD08();
}

uint64_t sub_1000CD3F0()
{
  return sub_1000CCD80();
}

uint64_t sub_1000CD408(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Dependency();
  uint64_t v41 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MetricsFieldsContext();
  uint64_t v38 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  NSString v13 = (char *)&v32 - v12;
  uint64_t v14 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v39 = *(void *)(v14 - 8);
  uint64_t v40 = v14;
  __chkstk_darwin(v14);
  NSString v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v21 = (void *)result;
    uint64_t v37 = v5;
    uint64_t v22 = (void *)(result + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_todayCards);
    uint64_t result = swift_beginAccess();
    if ((*v22 & 0xC000000000000001) == 0)
    {
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        swift_retain();
        goto LABEL_6;
      }
      __break(1u);
      return result;
    }
    specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_6:
    swift_endAccess();

    swift_retain();
    uint64_t v23 = TodayCard.clickAction.getter();
    swift_release();
    if (v23)
    {
      ObjectGraph.actionDispatcher.getter();
      uint64_t v24 = sub_100082C28((uint64_t *)&unk_100984530);
      uint64_t v36 = a3;
      uint64_t v25 = v24;
      uint64_t v26 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v19, 1, v24) == 1)
      {
        swift_release();
        swift_release();
        return sub_1000B59E0((uint64_t)v19);
      }
      else
      {
        v42[3] = type metadata accessor for Action();
        v42[4] = sub_10003D300((unint64_t *)&qword_1009875D0, (void (*)(uint64_t))&type metadata accessor for Action);
        v42[0] = v23;
        swift_retain_n();
        int64_t v32 = v13;
        uint64_t v33 = v16;
        uint64_t v34 = v25;
        sub_1005365D0();
        uint64_t v35 = v26;
        uint64_t v27 = v38;
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v10, v13, v8);
        Dependency.init<A>(satisfying:with:)();
        dispatch thunk of BaseObjectGraph.adding(dependency:)();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v37);
        uint64_t v28 = v33;
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v33, v32, v8);
        uint64_t v30 = v39;
        uint64_t v29 = v40;
        (*(void (**)(char *, void, uint64_t))(v39 + 104))(v28, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v40);
        uint64_t v31 = v34;
        ActionDispatcher.perform(_:withMetrics:asPartOf:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
        _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v42);
        swift_release_n();
        swift_release();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v31);
      }
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

double sub_1000CD928(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_1000CD9B0(a7, a1);
}

uint64_t sub_1000CD930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_1000CDB98(a1, a3, a4, a7);
}

uint64_t sub_1000CD940()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_todayCards);
  swift_beginAccess();
  unint64_t v2 = *v1;
  *uint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
  sub_100269688(v2);
  return swift_bridgeObjectRelease();
}

double sub_1000CD9B0(void *a1, double a2)
{
  uint64_t v4 = type metadata accessor for SmallStoryCardLayout.Metrics();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v8 = (objc_class *)[a1 traitCollection];
  sub_1001F5980(v8, (uint64_t)v7);

  PageTraitEnvironment.pageColumnWidth.getter();
  PageTraitEnvironment.pageColumnMargin.getter();
  id v9 = [a1 traitCollection];
  if (UITraitCollection.isRegularPad.getter()) {
    PageTraitEnvironment.pageColumnWidth.getter();
  }

  type metadata accessor for SmallStoryCardLayout();
  sub_10003D300(&qword_100982798, (void (*)(uint64_t))&type metadata accessor for SmallStoryCardLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a2;
}

uint64_t sub_1000CDB98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  *(void *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_objectGraph) = a3;
  swift_release();
  *(void *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_artworkLoader) = a2;
  swift_retain();
  swift_release();
  swift_retain();
  id v9 = [a4 snapshotPageTraitEnvironment];
  *(void *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_pageTraits) = v9;
  swift_unknownObjectRelease();
  uint64_t v10 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_flowLayout);
  [a4 pageMarginInsets];
  [v10 setSectionInset:];
  uint64_t v11 = Shelf.items.getter();
  uint64_t v12 = sub_10069BF64(v11);
  swift_bridgeObjectRelease();
  if (v12) {
    NSString v13 = v12;
  }
  else {
    NSString v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = (unint64_t *)(v4 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_todayCards);
  swift_beginAccess();
  unint64_t v15 = *v14;
  *uint64_t v14 = (unint64_t)v13;
  sub_100269688(v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = a3;
  uint64_t v18 = (uint64_t (**)(unint64_t))(v5
                                                  + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_didSelectHandler);
  uint64_t v19 = *(void *)(v5 + OBJC_IVAR____TtC8AppStore33TodayBrickShelfCollectionViewCell_didSelectHandler);
  *uint64_t v18 = sub_1000CDDE0;
  v18[1] = (uint64_t (*)(unint64_t))v17;
  swift_retain();
  return sub_10006012C(v19);
}

uint64_t sub_1000CDD68()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000CDDA0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CDDE0(unint64_t a1)
{
  return sub_1000CD408(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

double sub_1000CDDE8()
{
  uint64_t v1 = v0;
  id v2 = (id)ASKDeviceTypeGetCurrent();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {

    swift_bridgeObjectRelease_n();
LABEL_11:
    NSString v13 = (void *)(v0 + 56);
    return *(double *)v13;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8 & 1) != 0 || (UITraitCollection.prefersAccessibilityLayouts.getter()) {
    goto LABEL_11;
  }
  double v9 = *(double *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 88);
  if (*(void *)(v10 + 16))
  {
    unint64_t v11 = sub_10006EE24(*(void *)(*(void *)(v1 + 96) + 16));
    if (v12)
    {
      NSString v13 = (void *)(*(void *)(v10 + 56) + 32 * v11);
      return *(double *)v13;
    }
  }
  return v9;
}

uint64_t sub_1000CDF24@<X0>(char a1@<W0>, double *a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v110 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v13 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  v109 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = (void *)sub_10066FC54((uint64_t)_swiftEmptyArrayStorage);
  v120.origin.x = a3;
  v120.origin.y = a4;
  v120.size.width = a5;
  v120.size.height = a6;
  double Width = CGRectGetWidth(v120);
  uint64_t v17 = 0;
  double v18 = *(double *)v6;
  double v19 = *(double *)(v6 + 8);
  double v114 = *(double *)(v6 + 16);
  uint64_t v111 = *(void *)(v6 + 40);
  char v20 = *(unsigned char *)(v6 + 48);
  if (Width <= 0.0) {
    goto LABEL_12;
  }
  uint64_t v17 = 0;
  double v21 = 0.0;
  while (1)
  {
    if (v18 + v21 <= Width)
    {
      BOOL v22 = __OFADD__(v17++, 1);
      if (v22) {
        break;
      }
    }
    double v21 = v18 + *(double *)(v6 + 24) + v21;
    if (v21 >= Width) {
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_8:
  if (v111 < 2 || v17 <= 0)
  {
LABEL_12:
    sub_100082C28(&qword_1009827A0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1007BEDF0;
    *(void *)(v23 + 32) = *(void *)(v6 + 96);
    swift_bridgeObjectRetain();
    uint64_t v24 = 1;
  }
  else
  {
    sub_100082C28((uint64_t *)&unk_100984D30);
    uint64_t v23 = Array.chunked(by:)();
    uint64_t v24 = *(void *)(v23 + 16);
    if (!v24)
    {
      uint64_t result = swift_bridgeObjectRelease();
      double v26 = 0.0;
      double v27 = 0.0;
      double v28 = 0.0;
      double v29 = 0.0;
LABEL_70:
      *(void *)a2 = v15;
      a2[1] = v26;
      a2[2] = v27;
      a2[3] = v28;
      a2[4] = v29;
      return result;
    }
  }
  uint64_t v30 = *(void *)(v23 + 32);
  uint64_t v93 = v23 + 32;
  uint64_t v31 = *(void *)(v30 + 16);
  if (v17 < v31) {
    uint64_t v31 = v17;
  }
  double v32 = (double)v31 + -1.0;
  if (v32 < 0.0) {
    double v32 = 0.0;
  }
  double v101 = (double)v31;
  double v33 = v18 * (double)v31 + v114 * v32;
  CGFloat v108 = v33;
  CGFloat v113 = a6;
  CGFloat v112 = a3;
  CGFloat v34 = a3;
  if (v20)
  {
    CGFloat v41 = a4;
    CGFloat v42 = a5;
    CGFloat v43 = a6;
    CGFloat v44 = (CGRectGetWidth(*(CGRect *)&v34) - v33) * 0.5;
    v121.origin.x = a3;
    CGFloat v35 = a4;
    v121.origin.y = a4;
    CGFloat v37 = a5;
    v121.size.width = a5;
    v121.size.height = a6;
    double MinX = CGRectGetMinX(v121) + v44;
  }
  else
  {
    CGFloat v35 = a4;
    CGFloat v36 = a4;
    CGFloat v37 = a5;
    CGFloat v38 = a5;
    CGFloat v39 = a6;
    double MinX = CGRectGetMinX(*(CGRect *)&v34);
  }
  v90 = a2;
  double v45 = 0.0;
  if (a1) {
    double v46 = MinX;
  }
  else {
    double v46 = 0.0;
  }
  uint64_t v47 = v111;
  if (v111 >= v24) {
    uint64_t v47 = v24;
  }
  double v48 = v19 * (double)v47 + v114 * (double)(v24 - 1);
  if (a1)
  {
    CGFloat v49 = v112;
    v122.origin.x = v112;
    v122.origin.y = v35;
    v122.size.width = v37;
    CGFloat v50 = v113;
    v122.size.height = v113;
    CGFloat v107 = (CGRectGetHeight(v122) - v48) * 0.5;
    v123.origin.x = v49;
    v123.origin.y = v35;
    v123.size.width = v37;
    v123.size.height = v50;
    double v45 = CGRectGetMinY(v123) + v107;
  }
  uint64_t v91 = *(void *)(v23 + 16);
  if (!v91)
  {
    uint64_t result = swift_bridgeObjectRelease();
    double v26 = 0.0;
    double v27 = 0.0;
    double v28 = 0.0;
    double v29 = 0.0;
    a2 = v90;
    goto LABEL_70;
  }
  uint64_t v92 = v23;
  uint64_t v51 = 0;
  double v52 = 0.0;
  int v103 = (long long *)&v115;
  uint64_t v102 = (uint64_t)v116 + 8;
  LODWORD(v107) = enum case for FloatingPointRoundingRule.down(_:);
  uint64_t v53 = (void (**)(char *, void, uint64_t))(v13 + 104);
  uint64_t v54 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v96 = *(void *)&v101 & 0x7FF0000000000000;
  uint64_t v95 = (uint64_t)v101;
  uint64_t v106 = &v118;
  double v100 = 0.0;
  double v98 = 0.0;
  double v97 = 0.0;
  double v99 = 0.0;
  while (2)
  {
    if (*(void *)&v52 < *(void *)(v92 + 16))
    {
      uint64_t v55 = *(void *)(v93 + 8 * *(void *)&v52);
      *(void *)&double v94 = *(void *)&v52 + 1;
      double v56 = *(double *)(v55 + 16);
      uint64_t v104 = v55 + 32;
      uint64_t v105 = v55;
      swift_bridgeObjectRetain();
      double v57 = 0.0;
      CGFloat v112 = v52;
      CGFloat v113 = v56;
      if (v56 == 0.0)
      {
        while (1)
        {
          double v57 = v56;
          memset(v116, 0, sizeof(v116));
LABEL_35:
          sub_1000CF2B0((uint64_t)v116, (uint64_t)&v117);
          if (!v119) {
            break;
          }
          uint64_t v59 = v117;
          uint64_t v60 = v109;
          uint64_t v61 = v110;
          (*v53)(v109, LODWORD(v107), v110);
          CGPoint.rounded(_:)();
          CGFloat v63 = v62;
          CGFloat v65 = v64;
          (*v54)(v60, v61);
          v124.origin.x = v63;
          v124.origin.y = v65;
          v124.size.width = v18;
          v124.size.height = v19;
          v129.origin.x = v46;
          v129.origin.y = v45;
          v129.size.width = v108;
          v129.size.height = v48;
          if (!CGRectIntersectsRect(v124, v129) || *(void *)&v52 >= v111) {
            goto LABEL_54;
          }
          if (v96 == 0x7FF0000000000000) {
            goto LABEL_74;
          }
          if (v101 <= -9.22337204e18) {
            goto LABEL_75;
          }
          if (v101 >= 9.22337204e18) {
            goto LABEL_76;
          }
          if (v59 < v95)
          {
            v125.origin.x = v63;
            v125.origin.y = v65;
            v125.size.width = v18;
            v125.size.height = v19;
            double v67 = CGRectGetMinX(v125);
            double v68 = v99;
            if (v67 < v99) {
              double v68 = v67;
            }
            double v99 = v68;
            v126.origin.x = v63;
            v126.origin.y = v65;
            v126.size.width = v18;
            v126.size.height = v19;
            double MinY = CGRectGetMinY(v126);
            double v70 = v97;
            if (MinY < v97) {
              double v70 = MinY;
            }
            double v97 = v70;
            v127.origin.x = v63;
            v127.origin.y = v65;
            v127.size.width = v18;
            v127.size.height = v19;
            double MaxX = CGRectGetMaxX(v127);
            double v72 = v98;
            if (v98 <= MaxX) {
              double v72 = MaxX;
            }
            double v98 = v72;
            v128.origin.x = v63;
            v128.origin.y = v65;
            v128.size.width = v18;
            v128.size.height = v19;
            double MaxY = CGRectGetMaxY(v128);
            double v74 = v100;
            if (v100 <= MaxY) {
              double v74 = MaxY;
            }
            double v100 = v74;
            char v75 = 1;
          }
          else
          {
LABEL_54:
            char v75 = 0;
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v116[0] = v15;
          unint64_t v78 = sub_10006EE24(v51);
          uint64_t v79 = v15[2];
          BOOL v80 = (v77 & 1) == 0;
          uint64_t v81 = v79 + v80;
          if (__OFADD__(v79, v80))
          {
            __break(1u);
LABEL_72:
            __break(1u);
            goto LABEL_73;
          }
          char v82 = v77;
          if (v15[3] >= v81)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1000C9028();
            }
          }
          else
          {
            sub_1000C36E0(v81, isUniquelyReferenced_nonNull_native);
            unint64_t v83 = sub_10006EE24(v51);
            if ((v82 & 1) != (v84 & 1)) {
              goto LABEL_79;
            }
            unint64_t v78 = v83;
          }
          double v56 = v113;
          unint64_t v15 = *(void **)&v116[0];
          if (v82)
          {
            uint64_t v85 = *(void *)(*(void *)&v116[0] + 56) + 40 * v78;
            *(CGFloat *)uint64_t v85 = v63;
            *(CGFloat *)(v85 + 8) = v65;
            *(double *)(v85 + 16) = v18;
            *(double *)(v85 + 24) = v19;
            *(unsigned char *)(v85 + 32) = v75;
          }
          else
          {
            *(void *)(*(void *)&v116[0] + 8 * (v78 >> 6) + 64) |= 1 << v78;
            *(void *)(v15[6] + 8 * v78) = v51;
            uint64_t v86 = v15[7] + 40 * v78;
            *(CGFloat *)uint64_t v86 = v63;
            *(CGFloat *)(v86 + 8) = v65;
            *(double *)(v86 + 16) = v18;
            *(double *)(v86 + 24) = v19;
            *(unsigned char *)(v86 + 32) = v75;
            uint64_t v87 = v15[2];
            BOOL v22 = __OFADD__(v87, 1);
            uint64_t v88 = v87 + 1;
            if (v22) {
              goto LABEL_77;
            }
            v15[2] = v88;
          }
          swift_bridgeObjectRelease();
          double v52 = v112;
          if (__OFADD__(v51, 1)) {
            goto LABEL_72;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v106);
          ++v51;
          if (*(void *)&v57 != *(void *)&v56) {
            goto LABEL_32;
          }
        }
        swift_bridgeObjectRelease();
        double v52 = v94;
        if (*(void *)&v94 != v91) {
          continue;
        }
        uint64_t result = swift_bridgeObjectRelease();
        a2 = v90;
        double v29 = v100;
        double v26 = v99;
        double v28 = v98;
        double v27 = v97;
        goto LABEL_70;
      }
LABEL_32:
      if (*(void *)&v57 < *(void *)(v105 + 16))
      {
        uint64_t v58 = v103;
        sub_100082C6C(v104 + 40 * *(void *)&v57, (uint64_t)v103);
        *(double *)uint64_t v116 = v57;
        sub_100081DD4(v58, v102);
        ++*(void *)&v57;
        goto LABEL_35;
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
    }
    break;
  }
  __break(1u);
LABEL_79:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000CE804@<X0>(char a1@<W0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  char v12 = (void *)sub_10066FC54((uint64_t)_swiftEmptyArrayStorage);
  id v13 = (id)ASKDeviceTypeGetCurrent();
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17) {
    char v19 = 1;
  }
  else {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v67.origin.x = a3;
  v67.origin.y = a4;
  v67.size.width = a5;
  v67.size.height = a6;
  double Width = CGRectGetWidth(v67);
  double v21 = *(double *)(v6 + 16);
  double v22 = v21;
  if ((v19 & 1) == 0) {
    double v22 = *(double *)(v6 + 24);
  }
  double v23 = *(double *)v6;
  double v24 = *(double *)(v6 + 8);
  uint64_t v25 = 0;
  if (Width > 0.0)
  {
    double v26 = v23 + v22;
    double v27 = 0.0;
    while (1)
    {
      if (v23 + v27 <= Width)
      {
        BOOL v28 = __OFADD__(v25++, 1);
        if (v28) {
          break;
        }
      }
      double v27 = v26 + v27;
      if (v27 >= Width) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
LABEL_16:
  uint64_t v29 = *(void *)(v6 + 96);
  uint64_t v66 = v29;
  uint64_t v30 = *(void *)(v29 + 16);
  if (v30 >= v25) {
    uint64_t v31 = v25;
  }
  else {
    uint64_t v31 = *(void *)(v29 + 16);
  }
  uint64_t v32 = v31 - 1;
  if (__OFSUB__(v31, 1)) {
    goto LABEL_58;
  }
  double v33 = 0.0;
  double v34 = 0.0;
  if (v32 >= 1)
  {
    v68.origin.x = a3;
    v68.origin.y = a4;
    v68.size.width = a5;
    v68.size.height = a6;
    double v34 = (CGRectGetWidth(v68) - v23 * (double)v31) / (double)v32;
  }
  if (v19) {
    double v34 = v21;
  }
  double v61 = v34;
  v69.origin.x = a3;
  v69.origin.y = a4;
  v69.size.width = a5;
  v69.size.height = a6;
  double MinX = CGRectGetMinX(v69);
  if (a1)
  {
    v70.origin.x = a3;
    v70.origin.y = a4;
    v70.size.width = a5;
    v70.size.height = a6;
    double v33 = floor(CGRectGetMidY(v70) + v24 * -0.5);
  }
  swift_bridgeObjectRetain();
  unint64_t v36 = 0;
  double v37 = 0.0;
  double v38 = 0.0;
  double v39 = 0.0;
  double v40 = 0.0;
  while (1)
  {
    if (v36 == v30)
    {
      unint64_t v36 = v30;
      memset(v63, 0, sizeof(v63));
    }
    else
    {
      if (v36 >= v30) {
        goto LABEL_56;
      }
      sub_100082C6C(v29 + 32 + 40 * v36, (uint64_t)v62);
      *(void *)&v63[0] = v36;
      sub_100081DD4(v62, (uint64_t)v63 + 8);
      ++v36;
    }
    sub_1000CF2B0((uint64_t)v63, (uint64_t)&v64);
    if (!v65[3])
    {
      uint64_t result = sub_1000CF318((uint64_t)&v66);
      *(void *)a2 = v12;
      *(double *)(a2 + 8) = v40;
      *(double *)(a2 + 16) = v39;
      *(double *)(a2 + 24) = v38;
      *(double *)(a2 + 32) = v37;
      return result;
    }
    uint64_t v42 = v64;
    if (v64 < v25)
    {
      v72.origin.x = MinX;
      v72.origin.y = v33;
      v72.size.width = v23;
      v72.size.height = v24;
      double v43 = CGRectGetMinX(v72);
      if (v43 < v40) {
        double v40 = v43;
      }
      v73.origin.x = MinX;
      v73.origin.y = v33;
      v73.size.width = v23;
      v73.size.height = v24;
      double MinY = CGRectGetMinY(v73);
      if (MinY < v39) {
        double v39 = MinY;
      }
      v74.origin.x = MinX;
      v74.origin.y = v33;
      v74.size.width = v23;
      v74.size.height = v24;
      double MaxX = CGRectGetMaxX(v74);
      if (v38 <= MaxX) {
        double v38 = MaxX;
      }
      v75.origin.x = MinX;
      v75.origin.y = v33;
      v75.size.width = v23;
      v75.size.height = v24;
      double MaxY = CGRectGetMaxY(v75);
      if (v37 <= MaxY) {
        double v37 = MaxY;
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v63[0] = v12;
    unint64_t v49 = sub_10006EE24(v42);
    uint64_t v50 = v12[2];
    BOOL v51 = (v48 & 1) == 0;
    uint64_t v52 = v50 + v51;
    if (__OFADD__(v50, v51)) {
      break;
    }
    char v53 = v48;
    if (v12[3] >= v52)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        char v12 = *(void **)&v63[0];
        if (v48) {
          goto LABEL_27;
        }
      }
      else
      {
        sub_1000C9028();
        char v12 = *(void **)&v63[0];
        if (v53) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      sub_1000C36E0(v52, isUniquelyReferenced_nonNull_native);
      unint64_t v54 = sub_10006EE24(v42);
      if ((v53 & 1) != (v55 & 1)) {
        goto LABEL_59;
      }
      unint64_t v49 = v54;
      char v12 = *(void **)&v63[0];
      if (v53)
      {
LABEL_27:
        uint64_t v41 = v12[7] + 40 * v49;
        *(double *)uint64_t v41 = MinX;
        *(double *)(v41 + 8) = v33;
        *(double *)(v41 + 16) = v23;
        *(double *)(v41 + 24) = v24;
        *(unsigned char *)(v41 + 32) = v42 < v25;
        goto LABEL_28;
      }
    }
    v12[(v49 >> 6) + 8] |= 1 << v49;
    *(void *)(v12[6] + 8 * v49) = v42;
    uint64_t v56 = v12[7] + 40 * v49;
    *(double *)uint64_t v56 = MinX;
    *(double *)(v56 + 8) = v33;
    *(double *)(v56 + 16) = v23;
    *(double *)(v56 + 24) = v24;
    *(unsigned char *)(v56 + 32) = v42 < v25;
    uint64_t v57 = v12[2];
    BOOL v28 = __OFADD__(v57, 1);
    uint64_t v58 = v57 + 1;
    if (v28) {
      goto LABEL_57;
    }
    v12[2] = v58;
LABEL_28:
    swift_bridgeObjectRelease();
    v71.origin.x = MinX;
    v71.origin.y = v33;
    v71.size.width = v23;
    v71.size.height = v24;
    double MinX = v61 + CGRectGetMaxX(v71);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v65);
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000CECAC(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 traitCollection];
  sub_1000CDDE8();

  CGRect.subtracting(insets:)();
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  id v21 = a1;
  id v13 = [a1 traitCollection];
  LOBYTE(v4) = UITraitCollection.prefersAccessibilityLayouts.getter();

  if (v4) {
    sub_1000CDF24(1, v29, v6, v8, v10, v12);
  }
  else {
    sub_1000CE804(1, (uint64_t)v29, v6, v8, v10, v12);
  }
  double v14 = v29[0];
  uint64_t v30 = *(void *)(v2 + 96);
  unint64_t v15 = *(void *)(v30 + 16);
  uint64_t v20 = v30 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v17 = 0;
  while (1)
  {
    if (v17 == v15)
    {
      long long v24 = 0u;
      long long v25 = 0u;
      unint64_t v17 = v15;
      long long v23 = 0u;
      goto LABEL_10;
    }
    if (v17 >= v15) {
      break;
    }
    sub_100082C6C(v20 + 40 * v17, (uint64_t)v22);
    *(void *)&long long v23 = v17;
    sub_100081DD4(v22, (uint64_t)&v23 + 8);
    ++v17;
LABEL_10:
    sub_1000CF2B0((uint64_t)&v23, (uint64_t)&v26);
    if (!v28)
    {
      sub_1000CF318((uint64_t)&v30);
      swift_bridgeObjectRelease();
      CGRect.adding(outsets:)();
      return LayoutRect.init(representing:)();
    }
    uint64_t v18 = v26;
    sub_100081DD4(&v27, (uint64_t)&v23);
    sub_100081D90(&v23, *((uint64_t *)&v24 + 1));
    id v19 = [v21 traitCollection];
    if (*(void *)(*(void *)&v14 + 16)) {
      sub_10006EE24(v18);
    }
    CGRect.withLayoutDirection(using:relativeTo:)();

    dispatch thunk of LayoutView.frame.setter();
    sub_100081D90(&v23, *((uint64_t *)&v24 + 1));
    if (*(void *)(*(void *)&v14 + 16)) {
      sub_10006EE24(v18);
    }
    dispatch thunk of LayoutView.isHidden.setter();
    uint64_t result = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v23);
  }
  __break(1u);
  return result;
}

void sub_1000CF044(void *a1)
{
  long long v3 = v1[5];
  v6[4] = v1[4];
  v7[0] = v3;
  *(_OWORD *)((char *)v7 + 10) = *(_OWORD *)((char *)v1 + 90);
  long long v4 = v1[1];
  v6[0] = *v1;
  v6[1] = v4;
  long long v5 = v1[3];
  v6[2] = v1[2];
  v6[3] = v5;
  swift_getObjectType();
  sub_1000CF0B8(a1, (uint64_t)v6);
}

void sub_1000CF0B8(void *a1, uint64_t a2)
{
  id v4 = [a1 traitCollection];
  sub_1000CDDE8();

  CGSize.subtracting(insets:)();
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  id v9 = [a1 traitCollection];
  LOBYTE(v4) = UITraitCollection.prefersAccessibilityLayouts.getter();

  if (v4) {
    sub_1000CDF24(0, v12, 0.0, 0.0, v6, v8);
  }
  else {
    sub_1000CE804(0, (uint64_t)v12, 0.0, 0.0, v6, v8);
  }
  sub_1000CF318((uint64_t)v12);
  CGSize.adding(outsets:)();
  id v10 = [a1 traitCollection];
  double v11 = v10;
  if ((*(unsigned char *)(a2 + 105) & 1) == 0 && *(unsigned char *)(a2 + 104) == 6)
  {
    UITraitCollection.prefersAccessibilityLayouts.getter();
  }
  else
  {
  }
}

uint64_t sub_1000CF2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_1009827A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CF318(uint64_t a1)
{
  return a1;
}

id sub_1000CF344()
{
  type metadata accessor for IPadMediumAdLockupWithScreenshotsBackgroundView();
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v0 init];
}

double sub_1000CF380(int a1, int a2, int a3, uint64_t a4, id a5)
{
  if ([a5 horizontalSizeClass] == (id)1) {
    type metadata accessor for MediumAdLockupWithScreenshotsBackgroundView();
  }
  else {
    type metadata accessor for IPadMediumAdLockupWithScreenshotsBackgroundView();
  }
  sub_100220030(a4, a5);
  return v7;
}

id sub_1000CF45C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IPadMediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell();
  return [super dealloc];
}

uint64_t sub_1000CF494()
{
  return type metadata accessor for IPadMediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell();
}

uint64_t type metadata accessor for IPadMediumAdLockupWithScreenshotsBackgroundTodayCardCollectionViewCell()
{
  uint64_t result = qword_1009827D8;
  if (!qword_1009827D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000CF4E8()
{
  return swift_updateClassMetadata2();
}

UIColor sub_1000CF520()
{
  sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  id v0 = [self systemBlueColor];
  id v1 = [v0 colorWithAlphaComponent:0.1];

  result.super.Class isa = UIColor.init(light:dark:)((UIColor)v1, (UIColor)[objc_allocWithZone((Class)UIColor) initWithRed:0.168627451 green:0.188235294 blue:0.231372549 alpha:1.0]).super.isa;
  qword_1009E0D40 = (uint64_t)result.super.isa;
  return result;
}

char *sub_1000CF5F0(double a1, double a2, double a3, double a4)
{
  double v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  double v11 = &v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_itemLayoutContext];
  uint64_t v12 = type metadata accessor for ItemLayoutContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView] = 0;
  id v13 = &v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator];
  uint64_t v14 = type metadata accessor for Separator();
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v5[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_isPartOfSpotlightShelf] = 0;
  LOBYTE(ObjectType) = (*(uint64_t (**)(uint64_t))(ObjectType + 128))(v15) & 1;
  id v16 = objc_allocWithZone((Class)type metadata accessor for InAppPurchaseLockupView());
  unint64_t v17 = v5;
  *(void *)&v17[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView] = sub_1004C6D7C(ObjectType);

  v23.receiver = v17;
  v23.super_class = (Class)type metadata accessor for InAppPurchaseLockupCollectionViewCell();
  uint64_t v18 = (char *)[super initWithFrame:a1, a2, a3, a4];
  id v19 = [v18 contentView];
  [v19 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];

  id v20 = [v18 contentView];
  id v21 = *(id *)&v18[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView];
  [v20 addSubview:v21];

  return v18;
}

id sub_1000CF960()
{
  uint64_t v1 = sub_100082C28((uint64_t *)&unk_1009A3840);
  __chkstk_darwin(v1 - 8);
  long long v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Separator();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  id v10 = &v20[-v9];
  uint64_t v11 = v0 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator;
  swift_beginAccess();
  sub_1000D2380(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100082BCC((uint64_t)v3, (uint64_t *)&unk_1009A3840);
    return sub_1000D1DF8(0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v10, v3, v4);
    id v13 = *(char **)(v0 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v7, v10, v4);
    if (v13)
    {
      uint64_t v14 = &v13[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
      swift_beginAccess();
      uint64_t v15 = *(void (**)(char *, unsigned char *, uint64_t))(v5 + 24);
      id v16 = v13;
      v15(v14, v7, v4);
      swift_endAccess();
      [v16 setNeedsLayout];
      unint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
      v17(v7, v4);

      return (id)((uint64_t (*)(unsigned char *, uint64_t))v17)(v10, v4);
    }
    else
    {
      uint64_t v18 = [(char *)[objc_allocWithZone((Class)type metadata accessor for SeparatorView()) initWithFrame:0.0, 0.0, 0.0, 0.0]];
      id v19 = &v18[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
      swift_beginAccess();
      (*(void (**)(char *, unsigned char *, uint64_t))(v5 + 40))(v19, v7, v4);
      swift_endAccess();
      sub_1000D1DF8(v18);

      return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
}

uint64_t sub_1000CFC90(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for InAppPurchaseTheme();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = __chkstk_darwin(v7);
  id v10 = (char *)&v20 - v9;
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  uint64_t v22 = a1;
  v12((char *)&v20 - v9, a1, v3, v8);
  uint64_t v13 = v11 + OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_theme;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 24))(v13, v10, v3);
  swift_endAccess();
  sub_1004C68D8();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v10, v3);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v6, v13, v3);
  LODWORD(v11) = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  int v15 = enum case for InAppPurchaseTheme.spotlight(_:);
  v14(v6, v3);
  BOOL v16 = v11 == v15;
  unint64_t v17 = v21;
  if (v16 && !*(void *)&v21[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView])
  {
    id v18 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    sub_1000D1EB4(v18);
  }
  [v17 setNeedsLayout];
  return ((uint64_t (*)(uint64_t, uint64_t))v14)(v22, v3);
}

uint64_t sub_1000CFED8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28((uint64_t *)&unk_1009828F0);
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = __chkstk_darwin(v8).n128_u64[0];
  uint64_t v12 = (char *)&v22[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 traitCollection];
  char v14 = UITraitCollection.prefersAccessibilityLayouts.getter();

  if (v14)
  {
    if (qword_10097EA70 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Separator();
    uint64_t v16 = sub_100087728(v15, (uint64_t)qword_1009E2B98);
    unint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    return v17(a2, v16, v15);
  }
  else
  {
    if (qword_10097FA20 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for InAppPurchaseLockupViewLayout.Metrics();
    sub_100087728(v19, (uint64_t)qword_1009E57B8);
    InAppPurchaseLockupViewLayout.Metrics.iconSize.getter();
    v22[0] = a1;
    Conditional.evaluate(with:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    InAppPurchaseLockupViewLayout.Metrics.iconMargin.getter();
    sub_100081D90(v22, v22[3]);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
    AnyDimension.value(in:rounded:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v22);
    if (qword_10097EA70 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Separator();
    sub_100087728(v20, (uint64_t)qword_1009E2B98);
    return Separator.withLeadingInset(_:)();
  }
}

id sub_1000D0244()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for InAppPurchaseTheme();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v61 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v62 = (char *)&v58 - v6;
  __chkstk_darwin(v7);
  uint64_t v59 = (char *)&v58 - v8;
  uint64_t v9 = type metadata accessor for Separator();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (objc_class *)type metadata accessor for InAppPurchaseLockupCollectionViewCell();
  v68.receiver = v0;
  v68.super_class = v13;
  [super layoutSubviews];
  id v14 = [v0 contentView];
  sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
  LayoutMarginsAware<>.layoutFrame.getter();
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;

  v67.origin.CGFloat x = v16;
  v67.origin.CGFloat y = v18;
  v67.size.CGFloat width = v20;
  v67.size.CGFloat height = v22;
  objc_super v23 = *(char **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView];
  if (v23)
  {
    long long v24 = &v23[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
    swift_beginAccess();
    uint64_t v60 = v1;
    long long v25 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v25(v12, v24, v9);
    uint64_t v26 = v23;
    Separator.frame(forBoundingRect:in:)();
    double v28 = v27;
    double v30 = v29;
    double v32 = v31;
    double v34 = v33;
    uint64_t v58 = v3;
    CGFloat v35 = *(void (**)(char *, uint64_t))(v10 + 8);
    v35(v12, v9);
    [v26 setFrame:v28, v30, v32, v34];
    v25(v12, v24, v9);
    uint64_t v1 = v60;
    CGRect.inset(bySeparator:in:)();

    v35(v12, v9);
    uint64_t v3 = v58;
  }
  uint64_t v60 = *(char **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView];
  unint64_t v36 = &v60[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_theme];
  swift_beginAccess();
  double v37 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  double v38 = v59;
  v37(v59, v36, v2);
  int v39 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v38, v2);
  uint64_t v40 = enum case for InAppPurchaseTheme.spotlight(_:);
  uint64_t v59 = *(char **)(v3 + 8);
  ((void (*)(char *, uint64_t))v59)(v38, v2);
  if (v39 == v40)
  {
    CGFloat x = v67.origin.x;
    CGFloat y = v67.origin.y;
    CGFloat width = v67.size.width;
    CGFloat height = v67.size.height;
    CGRectGetMinX(v67);
    if (qword_10097DFA0 != -1) {
      swift_once();
    }
    v69.origin.CGFloat x = x;
    v69.origin.CGFloat y = y;
    v69.size.CGFloat width = width;
    v69.size.CGFloat height = height;
    CGRectGetMinY(v69);
    v70.origin.CGFloat x = x;
    v70.origin.CGFloat y = y;
    v70.size.CGFloat width = width;
    v70.size.CGFloat height = height;
    CGRectGetWidth(v70);
    v71.origin.CGFloat x = x;
    v71.origin.CGFloat y = y;
    v71.size.CGFloat width = width;
    v71.size.CGFloat height = height;
    v41.n128_f64[0] = CGRectGetHeight(v71);
  }
  double v46 = *(void **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView];
  if (v46)
  {
    uint64_t v47 = v3;
    id v48 = v46;
    CGRect.withLayoutDirection(in:relativeTo:)();
    [v48 setFrame:];

    uint64_t v3 = v47;
  }
  ((void (*)(char *, char *, uint64_t, __n128))v37)(v62, v36, v2, v41);
  unint64_t v49 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 104))(v61, v40, v2);
  sub_1000D23E8((unint64_t *)&unk_100982880, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseTheme);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v65 == v63 && v66 == v64)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v50 = (void (*)(char *, uint64_t))v59;
    ((void (*)(char *, uint64_t))v59)(v49, v2);
    v50(v62, v2);
  }
  else
  {
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = (void (*)(char *, uint64_t))v59;
    ((void (*)(char *, uint64_t))v59)(v49, v2);
    v52(v62, v2);
    if ((v51 & 1) == 0) {
      goto LABEL_15;
    }
  }
  if (qword_10097DFA0 != -1) {
    swift_once();
  }
LABEL_15:
  if (v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_isPartOfSpotlightShelf] == 1
    && qword_10097DFA0 != -1)
  {
    swift_once();
  }
  CGFloat v53 = v67.origin.x;
  CGFloat v54 = v67.origin.y;
  CGFloat v55 = v67.size.width;
  CGFloat v56 = v67.size.height;
  CGRectGetMinX(v67);
  v72.origin.CGFloat x = v53;
  v72.origin.CGFloat y = v54;
  v72.size.CGFloat width = v55;
  v72.size.CGFloat height = v56;
  CGRectGetMinY(v72);
  v73.origin.CGFloat x = v53;
  v73.origin.CGFloat y = v54;
  v73.size.CGFloat width = v55;
  v73.size.CGFloat height = v56;
  CGRectGetWidth(v73);
  v74.origin.CGFloat x = v53;
  v74.origin.CGFloat y = v54;
  v74.size.CGFloat width = v55;
  v74.size.CGFloat height = v56;
  CGRectGetHeight(v74);
  CGRect.withLayoutDirection(in:relativeTo:)();
  return [v60 setFrame:];
}

void sub_1000D0A1C()
{
  qword_1009E0D48 = 0x4024000000000000;
}

uint64_t sub_1000D0A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v97 = a4;
  uint64_t v99 = a2;
  uint64_t v114 = a1;
  uint64_t v7 = sub_100082C28((uint64_t *)&unk_100981A90);
  __chkstk_darwin(v7 - 8);
  CGFloat v112 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for OfferButtonPresenterViewAlignment();
  uint64_t v110 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v111 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100082C28((uint64_t *)&unk_100982860);
  __chkstk_darwin(v10 - 8);
  double v98 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_100985730);
  __chkstk_darwin(v12 - 8);
  uint64_t v104 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for OfferButtonSubtitlePosition();
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v102 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for OfferEnvironment();
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v88 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v91 = (char *)&v82 - v19;
  uint64_t v20 = sub_100082C28((uint64_t *)&unk_100981AC0);
  uint64_t v108 = *(void *)(v20 - 8);
  uint64_t v109 = v20;
  __chkstk_darwin(v20);
  uint64_t v115 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for InAppPurchaseTheme();
  __chkstk_darwin(v22 - 8);
  uint64_t v96 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v93 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  unint64_t v83 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100082C28((uint64_t *)&unk_1009A3840);
  __chkstk_darwin(v26 - 8);
  double v28 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for ComponentLayoutOptions();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  double v32 = (char *)&v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for Separator();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unint64_t v36 = (char *)&v82 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = a5;
  sub_1000CFED8(a5, (uint64_t)v36);
  static ComponentLayoutOptions.separatorHidden.getter();
  sub_1000D23E8((unint64_t *)&qword_100982870, (void (*)(uint64_t))&type metadata accessor for ComponentLayoutOptions);
  uint64_t v87 = a3;
  LOBYTE(a3) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  double v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  v37(v32, v29);
  uint64_t v106 = v34;
  uint64_t v107 = v33;
  CGFloat v113 = v36;
  if (a3)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v28, 1, 1, v33);
    double v38 = v100;
    uint64_t v39 = (uint64_t)&v100[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator];
    swift_beginAccess();
    sub_1000D2318((uint64_t)v28, v39);
    swift_endAccess();
    sub_1000CF960();
    sub_100082BCC((uint64_t)v28, (uint64_t *)&unk_1009A3840);
    static ComponentLayoutOptions.fixedHeightContainer.getter();
    char v40 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    v37(v32, v29);
    id v41 = [v38 contentView];
    uint64_t v42 = v41;
    double v43 = v38;
    if (v40)
    {
      [v41 layoutMargins];
      [v42 setLayoutMargins:];
    }
    else
    {
      Separator.verticalOutset.getter();
      sub_100081D90(v116, v116[3]);
      double v46 = v83;
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
      AnyDimension.value(in:rounded:)();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v46, v85);
      [v42 layoutMargins];
      [v42 setLayoutMargins:];

      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v116);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v28, v36, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v28, 0, 1, v33);
    double v43 = v100;
    uint64_t v44 = (uint64_t)&v100[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separator];
    swift_beginAccess();
    sub_1000D2318((uint64_t)v28, v44);
    swift_endAccess();
    sub_1000CF960();
    sub_100082BCC((uint64_t)v28, (uint64_t *)&unk_1009A3840);
    id v45 = [v43 contentView];
    [v45 layoutMargins];
    [v45 setLayoutMargins:];
  }
  uint64_t v47 = v99;
  uint64_t v48 = (uint64_t)v98;
  uint64_t v49 = (uint64_t)v96;
  uint64_t v50 = v95;
  uint64_t v51 = v94;
  uint64_t v52 = v93;
  static Shelf.PresentationHints.inProductPageSpotlight.getter();
  sub_1000D23E8((unint64_t *)&unk_100982850, (void (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints);
  char v53 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
  v43[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_isPartOfSpotlightShelf] = v53 & 1;
  InAppPurchaseLockup.theme.getter();
  sub_1000CFC90(v49);
  CGFloat v54 = *(unsigned char **)&v43[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView];
  id v55 = *(id *)&v54[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_titleLabel];
  Lockup.title.getter();
  if (v56)
  {
    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v57 = 0;
  }
  [v55 setText:v57];

  id v58 = *(id *)&v54[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_descriptionLabel];
  InAppPurchaseLockup.descriptionText.getter();
  if (v59)
  {
    NSString v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v60 = 0;
  }
  [v58 setText:v60];

  if (Lockup.offerDisplayProperties.getter())
  {
    uint64_t v61 = v47;
    double v62 = v88;
    OfferDisplayProperties.environment.getter();
    swift_release();
    uint64_t v63 = v90;
    uint64_t v64 = v91;
    uint64_t v65 = v92;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v91, v62, v92);
    uint64_t v66 = v89;
    (*(void (**)(char *, void, uint64_t))(v63 + 104))(v89, enum case for OfferEnvironment.widthConstrainedLockup(_:), v65);
    LOBYTE(v62) = static OfferEnvironment.== infix(_:_:)();
    CGRect v67 = *(void (**)(char *, uint64_t))(v63 + 8);
    v67(v66, v65);
    if (v62)
    {
      uint64_t v68 = v101;
      uint64_t v69 = v103;
      (*(void (**)(char *, void, uint64_t))(v101 + 104))(v102, enum case for OfferButtonSubtitlePosition.below(_:), v103);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v104, 1, 1, v69);
      sub_1000D23E8((unint64_t *)&qword_100985760, (void (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition);
      AccessibilityConditional.init(value:axValue:)();
      char v70 = v54[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_isHeightConstrained];
      v54[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_isHeightConstrained] = 1;
      if ((v70 & 1) == 0) {
        [v54 setNeedsLayout];
      }
      v67(v91, v92);
      uint64_t v71 = v105;
      uint64_t v47 = v61;
      goto LABEL_20;
    }
    v67(v64, v65);
    uint64_t v47 = v61;
  }
  uint64_t v72 = v101;
  uint64_t v73 = v103;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v102, enum case for OfferButtonSubtitlePosition.right(_:), v103);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v104, 1, 1, v73);
  sub_1000D23E8((unint64_t *)&qword_100985760, (void (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition);
  AccessibilityConditional.init(value:axValue:)();
  int v74 = v54[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_isHeightConstrained];
  v54[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_isHeightConstrained] = 0;
  uint64_t v71 = v105;
  if (v74 == 1) {
    [v54 setNeedsLayout];
  }
LABEL_20:
  id v75 = *(id *)&v54[OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_offerButton];
  uint64_t v76 = Lockup.offerDisplayProperties.getter();
  uint64_t v77 = Lockup.buttonAction.getter();
  uint64_t v78 = v110;
  (*(void (**)(char *, void, uint64_t))(v110 + 104))(v111, enum case for OfferButtonPresenterViewAlignment.left(_:), v71);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v112, 1, 1, v71);
  sub_1000D23E8((unint64_t *)&unk_100981AB0, (void (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment);
  AccessibilityConditional.init(value:axValue:)();
  uint64_t v79 = sub_100082C28((uint64_t *)&unk_10098AC20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v48, 0, 1, v79);
  uint64_t v80 = v115;
  sub_100070F60(v76, v77, 0, v48, v115, v47, 0, 0);

  swift_release();
  swift_release();
  sub_100082BCC(v48, (uint64_t *)&unk_100982860);
  [v43 setNeedsLayout];
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v80, v109);
  return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v113, v107);
}

id sub_1000D195C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InAppPurchaseLockupCollectionViewCell();
  return [super dealloc];
}

uint64_t sub_1000D1A14()
{
  return type metadata accessor for InAppPurchaseLockupCollectionViewCell();
}

uint64_t type metadata accessor for InAppPurchaseLockupCollectionViewCell()
{
  uint64_t result = qword_100982828;
  if (!qword_100982828) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000D1A68()
{
  sub_1000067EC(319, (unint64_t *)&qword_100984CD0, (void (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v0 <= 0x3F)
  {
    sub_1000067EC(319, (unint64_t *)&unk_100982840, (void (*)(uint64_t))&type metadata accessor for Separator);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

double sub_1000D1B88(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Separator();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1000CFED8(a1, (uint64_t)v11);
  type metadata accessor for InAppPurchaseLockupView();
  double v12 = sub_1004C822C(a1);
  if (a2)
  {
    Separator.verticalOutset.getter();
    sub_100081D90(v16, v16[3]);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
    AnyDimension.value(in:rounded:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v16);
  }
  else
  {
    CGSize.adding(separator:in:)();
    double v12 = v13;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v12;
}

id sub_1000D1DF8(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_separatorView];
  if (v4)
  {
    [v4 removeFromSuperview];
    uint64_t v5 = *(void **)&v1[v3];
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(void *)&v1[v3] = a1;
  id v6 = a1;

  uint64_t v7 = *(void **)&v1[v3];
  if (v7)
  {
    id v8 = v7;
    id v9 = [v1 contentView];
    [v9 addSubview:v8];
  }

  return [v1 setNeedsLayout];
}

id sub_1000D1EB4(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_spotlightView];
  if (v4)
  {
    [v4 removeFromSuperview];
    uint64_t v5 = *(void **)&v1[v3];
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(void *)&v1[v3] = a1;
  id v6 = a1;

  uint64_t v7 = *(void **)&v1[v3];
  if (v7)
  {
    id v8 = v7;
    [v8 _setCornerRadius:4.0];
    if (qword_10097DF98 != -1) {
      swift_once();
    }
    [v8 setBackgroundColor:qword_1009E0D40];
    id v9 = [v1 contentView];
    [v9 insertSubview:v8 atIndex:0];
  }

  return [v1 setNeedsLayout];
}

uint64_t sub_1000D1FCC(uint64_t a1, double a2, uint64_t a3, void *a4)
{
  v26[1] = a1;
  uint64_t v6 = type metadata accessor for Separator();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  PageTraitEnvironment.pageColumnWidth.getter();
  type metadata accessor for InAppPurchaseLockupView();
  sub_1004C822C(a4);
  static Shelf.PresentationHints.inProductPageSpotlight.getter();
  sub_1000D23E8((unint64_t *)&unk_100982850, (void (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints);
  char v14 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0 && qword_10097DFA0 != -1) {
    swift_once();
  }
  sub_1000CFED8(a4, (uint64_t)v9);
  Separator.height(in:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  [a4 pageMarginInsets];
  id v15 = [a4 traitCollection];
  char v16 = UITraitCollection.isSizeClassRegular.getter();

  if ((v16 & 1) != 0 || (JUScreenClassGetPortraitWidth(), v17 >= a2))
  {
    PageTraitEnvironment.pageColumnWidth.getter();
    double v21 = v22;
  }
  else
  {
    PageTraitEnvironment.pageColumnWidth.getter();
    double v19 = v18;
    PageTraitEnvironment.pageColumnMargin.getter();
    double v21 = v19 - (v20 + v20);
  }
  id v23 = [self absoluteDimension:v21];
  uint64_t v24 = static ComponentLayoutBuilder.columnGroup(separatedBy:itemHeight:groupWidth:rowCount:)();

  return v24;
}

uint64_t sub_1000D2318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_1009A3840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D2380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_1009A3840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D23E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D24A0()
{
  return type metadata accessor for InAppPurchaseNonTiledLockupCollectionViewCell();
}

uint64_t type metadata accessor for InAppPurchaseNonTiledLockupCollectionViewCell()
{
  uint64_t result = qword_1009828B8;
  if (!qword_1009828B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000D24F4()
{
  return swift_updateClassMetadata2();
}

id sub_1000D252C()
{
  return objc_retain(*(id *)(*(void *)(*(void *)(v0
                                                   + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView)
                                       + OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView)
                           + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView));
}

uint64_t sub_1000D2560()
{
  if (qword_10097FA28 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for InAppPurchaseIconLayout.Metrics();
  sub_100087728(v0, (uint64_t)qword_1009E57D0);
  return InAppPurchaseIconLayout.Metrics.mainIconDimension.getter();
}

void sub_1000D25D0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for Artwork.Crop();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    Artwork.crop.getter();
    uint64_t v8 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_10097FA28 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for InAppPurchaseIconLayout.Metrics();
    sub_100087728(v9, (uint64_t)qword_1009E57D0);
    InAppPurchaseIconLayout.Metrics.mainIconDimension.getter();
    Artwork.config(_:mode:prefersLayeredImage:)();
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView);
    uint64_t v11 = OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView;
    id v12 = objc_retain(*(id *)(*(void *)(v10 + OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView)
                            + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView));
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v12 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    double v13 = *(void **)(*(void *)(v10 + v11) + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView);
    [v13 setContentMode:v8];
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v14 = v13;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D28C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for AspectRatio();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Artwork.Crop();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v21[1] = a2;
    swift_retain();
    Artwork.crop.getter();
    v21[0] = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (qword_10097E1E8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_100087728(v7, (uint64_t)qword_1009E1528);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
    id v16 = [v3 contentView];
    sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
    LayoutMarginsAware<>.layoutFrame.getter();

    AspectRatio.height(fromWidth:)();
    id v17 = [v3 contentView];
    LayoutMarginsAware<>.layoutFrame.getter();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v18 = v21[0];
    Artwork.config(_:mode:prefersLayeredImage:)();
    id v19 = *(id *)&v3[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView];
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v19 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    [v19 setContentMode:v18];
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v20 = v19;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D2CBC(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v3 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for Artwork.Crop();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    Artwork.crop.getter();
    uint64_t v8 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (*(void *)(v1 + OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_pageTraits))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_100194B88();
      swift_unknownObjectRelease();
    }
    Artwork.config(_:mode:prefersLayeredImage:)();
    uint64_t v9 = OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_iconView;
    id v10 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore31SmallBreakoutCollectionViewCell_iconView);
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v10 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    [*(id *)(v1 + v9) setContentMode:v8];
    uint64_t v11 = *(void **)(v1 + v9);
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v12 = v11;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D2FA0(uint64_t a1, uint64_t a2)
{
}

void sub_1000D2FAC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for Artwork.Crop();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    Artwork.crop.getter();
    uint64_t v8 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore38TodayCardSmallLockupCollectionViewCell_lockupView);
    swift_beginAccess();
    Artwork.config(_:mode:prefersLayeredImage:)();
    uint64_t v10 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
    id v11 = *(id *)(v9 + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView);
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v11 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    id v12 = *(void **)(v9 + v10);
    [v12 setContentMode:v8];
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v13 = v12;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D3260(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for RibbonBarItemCellLayout.Metrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Artwork.Crop();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v22 = v7;
    uint64_t v24 = a2;
    swift_retain();
    Artwork.crop.getter();
    uint64_t v23 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    id v15 = [v3 traitCollection];
    id v16 = v3;
    if (UITraitCollection.prefersAccessibilityLayouts.getter()) {
      sub_1006F81B4((UITraitCollection)v15, (uint64_t)v10);
    }
    else {
      sub_1006F84EC();
    }
    uint64_t v17 = v22;
    uint64_t v18 = v23;

    RibbonBarItemCellLayout.Metrics.artworkSize.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
    Artwork.config(_:mode:prefersLayeredImage:)();
    id v19 = *(id *)&v16[OBJC_IVAR____TtC8AppStore31RibbonBarItemCollectionViewCell_artworkView];
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v19 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    [v19 setContentMode:v18];
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v20 = v19;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D3604(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for Artwork.Crop();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    Artwork.crop.getter();
    uint64_t v8 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    Artwork.config(_:mode:prefersLayeredImage:)();
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore23QuoteCollectionViewCell_quoteView);
    uint64_t v10 = OBJC_IVAR____TtC8AppStore9QuoteView_artworkView;
    id v11 = *(id *)(v9 + OBJC_IVAR____TtC8AppStore9QuoteView_artworkView);
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v11 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    [*(id *)(v9 + v10) setContentMode:v8];
    uint64_t v12 = *(void **)(v9 + v10);
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v13 = v12;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D38A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for Artwork.Crop();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v17 - v10;
  if (a1)
  {
    swift_retain();
    Artwork.crop.getter();
    static Artwork.Crop.boundingBox.getter();
    sub_10004AFD8((unint64_t *)&unk_10098D110, (void (*)(uint64_t))&type metadata accessor for Artwork.Crop);
    char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
    id v13 = *(void (**)(char *, uint64_t))(v6 + 8);
    v13(v8, v5);
    if (v12) {
      uint64_t v14 = 6;
    }
    else {
      uint64_t v14 = Artwork.Crop.preferredContentMode.getter();
    }
    v13(v11, v5);
    Artwork.config(_:mode:prefersLayeredImage:)();
    id v15 = *(id *)(v2 + OBJC_IVAR____TtC8AppStore29LargeLockupCollectionViewCell_artworkView);
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v15 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    [v15 setContentMode:v14];
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v16 = v15;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D3BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for SmallLockupLayout.Metrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Artwork.Crop();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v23 = a2;
    swift_retain();
    Artwork.crop.getter();
    uint64_t v15 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v16 = v15;
    uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC8AppStore29SmallLockupCollectionViewCell_lockupView);
    uint64_t v18 = v17 + OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v18, v7);
    SmallLockupLayout.Metrics.artworkSize.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    Artwork.config(_:mode:prefersLayeredImage:)();
    uint64_t v19 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
    id v20 = *(id *)(v17 + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView);
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v20 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    uint64_t v21 = *(void **)(v17 + v19);
    [v21 setContentMode:v16];
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v22 = v21;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D3F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for SmallLockupLayout.Metrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Artwork.Crop();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v22 = a2;
    swift_retain();
    Artwork.crop.getter();
    uint64_t v15 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v16 = v15;
    uint64_t v17 = OBJC_IVAR____TtC8AppStore35TodayCardMarketingLockupOverlayView_lockupView;
    uint64_t v18 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8AppStore35TodayCardMarketingLockupOverlayView_lockupView)
                    + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_lockupView)
        + OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v18, v7);
    SmallLockupLayout.Metrics.artworkSize.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    Artwork.config(_:mode:prefersLayeredImage:)();
    id v19 = *(id *)(*(void *)(v3 + v17) + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView);
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v19 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    [*(id *)(*(void *)(v3 + v17) + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView) setContentMode:v16];
    id v20 = *(void **)(*(void *)(v3 + v17) + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView);
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v21 = v20;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D42F4(uint64_t a1, uint64_t a2)
{
}

void sub_1000D4300(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for SmallLockupLayout.Metrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Artwork.Crop();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v24[1] = a2;
    swift_retain();
    Artwork.crop.getter();
    uint64_t v15 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v16 = *a3;
    uint64_t v17 = v15;
    uint64_t v18 = *(void *)(v24[2] + v16);
    uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_lockupView)
        + OBJC_IVAR____TtC8AppStore15SmallLockupView_metrics;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v19, v7);
    SmallLockupLayout.Metrics.artworkSize.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    Artwork.config(_:mode:prefersLayeredImage:)();
    uint64_t v20 = OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView;
    id v21 = *(id *)(v18 + OBJC_IVAR____TtC8AppStore19CrossLinkLockupView_artworkView);
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v21 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    uint64_t v22 = *(void **)(v18 + v20);
    [v22 setContentMode:v17];
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v23 = v22;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D4694(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v6 - 8);
  uint64_t v29 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28((uint64_t *)&unk_1009828F0);
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MediumLockupLayout.Metrics();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Artwork.Crop();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v26 = a2;
    swift_retain();
    Artwork.crop.getter();
    uint64_t v25 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v19 = v30;
    id v20 = [v30 traitCollection];
    sub_10065BA5C((uint64_t)v14);

    MediumLockupLayout.Metrics.artworkSize.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v21 = v25;
    uint64_t v31 = v19;
    Conditional.evaluate(with:)();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
    Artwork.config(_:mode:prefersLayeredImage:)();
    id v22 = *(id *)&v19[OBJC_IVAR____TtC8AppStore30MediumLockupCollectionViewCell_artworkView];
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v22 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    [v22 setContentMode:v21];
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v23 = v22;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D4AB0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for Artwork.Crop();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    Artwork.crop.getter();
    uint64_t v8 = Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    Artwork.config(_:mode:prefersLayeredImage:)();
    id v9 = *(id *)(v1 + qword_1009E3728);
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v9 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();

    [v9 setContentMode:v8];
    type metadata accessor for ArtworkView();
    sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v10 = v9;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
}

void sub_1000D4D38()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore37InAppPurchaseLockupCollectionViewCell_lockupView);
  uint64_t v2 = OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView;
  id v3 = objc_retain(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC8AppStore23InAppPurchaseLockupView_iconView)
                         + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView));
  ArtworkView.isImageHidden.setter();

  uint64_t v4 = *(void **)(*(void *)(v1 + v2) + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView);
  type metadata accessor for ArtworkView();
  sub_10004AFD8((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
  id v5 = v4;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)();
}

uint64_t sub_1000D4E38(uint64_t a1)
{
  uint64_t result = sub_10004AFD8(&qword_1009828C8, (void (*)(uint64_t))type metadata accessor for InAppPurchaseNonTiledLockupCollectionViewCell);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_1000D4E90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a1)
  {
    id v7 = a1;
    sub_1006C9A68(v7, a6);
  }
}

uint64_t sub_1000D4EE8()
{
  return sub_1000D61C8(&qword_100982900, (void (*)(uint64_t))type metadata accessor for ProductRatingsCollectionViewCell);
}

uint64_t sub_1000D4F30()
{
  return ShelfLayoutContext.shelfPresentationHints.getter();
}

double sub_1000D4F54(void *a1)
{
  uint64_t v2 = type metadata accessor for SystemImage();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 traitCollection];
  if (qword_100980568 != -1) {
    swift_once();
  }
  v29.is_nil = qword_1009E7158;
  v29.value._rawValue = 0;
  Class isa = UITraitCollection.clampingContentSizeCategory(min:max:)(v29, v7).super.isa;
  Class v27 = isa;

  UIFontTextStyle v28 = UIFontTextStyleHeadline;
  id v10 = self;
  id v11 = [v10 configurationWithTextStyle:UIFontTextStyleHeadline scale:2];
  uint64_t v12 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v12(v6, enum case for SystemImage.star(_:), v2);
  id v13 = [v11 configurationWithTraitCollection:isa];
  uint64_t v14 = (void *)static SystemImage.load(_:with:)();

  uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  [v14 contentInsets];
  double v17 = v16;
  [v14 contentInsets];
  double v19 = v17 + v18;
  [v14 size];
  double v21 = v20 - v19;
  [v14 contentInsets];
  [v14 contentInsets];
  [v14 size];

  id v22 = [v10 configurationWithTextStyle:v28 scale:2];
  v12(v6, enum case for SystemImage.starFill(_:), v2);
  Class v23 = v27;
  id v24 = [v22 configurationWithTraitCollection:v27];
  uint64_t v25 = (void *)static SystemImage.load(_:with:)();

  v15(v6, v2);
  UIImage.baselineOffsetFromBottom.getter();
  [v25 contentInsets];

  return v21 * 5.0 + 24.0;
}

id sub_1000D5298(void *a1)
{
  if (qword_100980560 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1009E7150;
  if (static UIContentSizeCategory.< infix(_:_:)()) {
    return v2;
  }
  id v4 = a1;

  return v4;
}

double sub_1000D531C(void *a1, double a2)
{
  id v3 = [a1 traitCollection];
  double v4 = sub_100480934(a2);

  return v4;
}

double sub_1000D5394(uint64_t a1, void *a2, int a3, uint64_t a4, char *a5)
{
  uint64_t v105 = a5;
  uint64_t v106 = a2;
  LODWORD(v90) = a3;
  uint64_t v6 = type metadata accessor for Adaptive();
  uint64_t v102 = *(void *)(v6 - 8);
  uint64_t v103 = v6;
  __chkstk_darwin(v6);
  uint64_t v101 = (uint64_t)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TextAppearance();
  double v98 = *(void **)(v8 - 8);
  uint64_t v99 = v8;
  __chkstk_darwin(v8);
  uint64_t v96 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v97 = (char *)v81 - v11;
  uint64_t v12 = type metadata accessor for FontSource();
  uint64_t v94 = *(void *)(v12 - 8);
  uint64_t v95 = v12;
  __chkstk_darwin(v12);
  uint64_t v93 = (char *)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FontUseCase();
  uint64_t v91 = *(void *)(v14 - 8);
  uint64_t v92 = v14;
  __chkstk_darwin(v14);
  uint64_t v88 = (char *)v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for DynamicTextAppearance();
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  double v17 = (char *)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  double v20 = (char *)v81 - v19;
  uint64_t v21 = type metadata accessor for LabelPlaceholder();
  uint64_t v100 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  Class v23 = (char *)v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v81 - v25;
  __chkstk_darwin(v27);
  __C::UIContentSizeCategory_optional v29 = (char *)v81 - v28;
  uint64_t v30 = Ratings.status.getter();
  if (v31)
  {
    uint64_t v32 = v30;
    uint64_t v33 = v31;
    type metadata accessor for ProductNoRatingsView();
    double v34 = sub_10028A244(v32, v33, v106);
    swift_bridgeObjectRelease();
  }
  else
  {
    v81[0] = v17;
    v81[1] = v20;
    uint64_t v104 = v26;
    uint64_t v105 = v29;
    Ratings.ratingAverage.getter();
    int v36 = v35;
    id v37 = objc_allocWithZone((Class)NSNumber);
    LODWORD(v38) = v36;
    v113.value.super.super.Class isa = (Class)[v37 initWithFloat:v38];
    Class isa = v113.value.super.super.isa;
    v113.is_nil = 1;
    object = localizedStringForDecimal(_:_:)(v113, v40).value._object;

    uint64_t v84 = a1;
    uint64_t v85 = v21;
    uint64_t v86 = v23;
    if (!object)
    {
      Ratings.ratingAverage.getter();
      Float.description.getter();
    }
    sub_100082C28((uint64_t *)&unk_100986D50);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007BEDF0;
    *(void *)(inited + 64) = &type metadata for CGFloat;
    *(void *)(inited + 32) = NSKernAttributeName;
    *(void *)(inited + 40) = 0xC010000000000000;
    double v43 = NSKernAttributeName;
    sub_10005A234(inited);
    id v44 = objc_allocWithZone((Class)NSAttributedString);
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1000D61C8((unint64_t *)&qword_100981180, type metadata accessor for Key);
    Class v46 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v47 = [v44 initWithString:v45 attributes:v46];

    id v83 = v47;
    uint64_t v48 = v81[0];
    DynamicTextAppearance.init()();
    uint64_t v49 = v95;
    if (qword_100980558 != -1) {
      swift_once();
    }
    int v82 = v90 & 1;
    uint64_t v50 = sub_100082C28((uint64_t *)&unk_100985790);
    sub_100087728(v50, (uint64_t)qword_1009E7138);
    v108[0] = [v106 snapshotPageTraitEnvironment];
    uint64_t v51 = v88;
    Conditional.evaluate(with:)();
    swift_unknownObjectRelease();
    DynamicTextAppearance.withFontUseCase(_:)();
    uint64_t v53 = v91;
    uint64_t v52 = v92;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v51, v92);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v48, v89);
    LabelPlaceholder.Options.init(rawValue:)();
    LabelPlaceholder.init(_:with:where:)();
    uint64_t v89 = type metadata accessor for LayoutViewPlaceholder();
    swift_allocObject();
    uint64_t v90 = LayoutViewPlaceholder.init(measureWith:)();
    CGFloat v54 = v98;
    id v55 = v96;
    if (qword_10097F3A8 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_100087728(v52, (uint64_t)qword_1009E4550);
    NSString v57 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v93, v56, v52);
    uint64_t v58 = v94;
    (*(void (**)(char *, void, uint64_t))(v94 + 104))(v57, enum case for FontSource.useCase(_:), v49);
    uint64_t v59 = (void *)FontSource.font(in:for:)();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v49);
    v60._object = (void *)0x80000001008038B0;
    v60._countAndFlagsBits = 0xD000000000000012;
    v61._countAndFlagsBits = 0;
    v61._object = (void *)0xE000000000000000;
    localizedStringWithCount(_:count:comment:)(v60, 5, v61);
    TextAppearance.init()();
    TextAppearance.withFont(_:)();
    double v62 = (void (*)(char *, uint64_t))v54[1];
    uint64_t v63 = v99;
    v62(v55, v99);
    LabelPlaceholder.Options.init(rawValue:)();
    LabelPlaceholder.init(_:with:where:)();
    Swift::Int v64 = Ratings.totalNumberOfRatings.getter();
    v65._countAndFlagsBits = 0xD000000000000013;
    v65._object = (void *)0x80000001008038D0;
    v66._countAndFlagsBits = 0;
    v66._object = (void *)0xE000000000000000;
    localizedStringWithCount(_:count:comment:)(v65, v64, v66);
    TextAppearance.init()();
    double v98 = v59;
    TextAppearance.withFont(_:)();
    v62(v55, v63);
    LabelPlaceholder.Options.init(rawValue:)();
    LabelPlaceholder.init(_:with:where:)();
    swift_allocObject();
    uint64_t v99 = LayoutViewPlaceholder.init(measureWith:)();
    CGRect v67 = v104;
    if (qword_100980550 != -1) {
      swift_once();
    }
    uint64_t v68 = v85;
    v109[3] = v85;
    v109[4] = (uint64_t)&protocol witness table for LabelPlaceholder;
    uint64_t v69 = sub_1000808B8(v109);
    uint64_t v70 = v100;
    uint64_t v71 = *(void (**)(uint64_t *, char *, uint64_t))(v100 + 16);
    v71(v69, v105, v68);
    uint64_t v107 = v90;
    Measurable.placeable.getter();
    v110[3] = v68;
    v110[4] = (uint64_t)&protocol witness table for LabelPlaceholder;
    uint64_t v72 = sub_1000808B8(v110);
    v71(v72, v67, v68);
    v111[3] = v68;
    v111[4] = (uint64_t)&protocol witness table for LabelPlaceholder;
    uint64_t v73 = sub_1000808B8(v111);
    int v74 = v86;
    v71(v73, v86, v68);
    uint64_t v107 = v99;
    Measurable.placeable.getter();
    sub_1000D6210((uint64_t)&xmmword_1009E7058, (uint64_t)v108);
    char v112 = v82;
    id v75 = [v106 traitCollection];
    uint64_t v76 = v101;
    sub_1006E48E0(v101);
    uint64_t v77 = v103;
    dispatch thunk of Placeable.measure(toFit:with:)();
    double v34 = v78;
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v76, v77);

    swift_release();
    swift_release();

    sub_1000D626C((uint64_t)v108);
    uint64_t v79 = *(void (**)(char *, uint64_t))(v70 + 8);
    v79(v74, v68);
    v79(v104, v68);
    v79(v105, v68);
  }
  return v34;
}

double sub_1000D5E8C()
{
  uint64_t v1 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v21 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = type metadata accessor for PageGrid();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Ratings();
  sub_1000D61C8(&qword_100983870, (void (*)(uint64_t))&type metadata accessor for Ratings);
  ItemLayoutContext.typedModel<A>(as:)();
  uint64_t v11 = v22;
  if (!v22) {
    return 0.0;
  }
  swift_getKeyPath();
  uint64_t v20 = v0;
  ItemLayoutContext.subscript.getter();
  swift_release();
  PageGrid.componentMeasuringSize(spanning:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v12 = sub_1000F3FC0();
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  static Shelf.PresentationHints.isSeeAllContext.getter();
  sub_1000D61C8((unint64_t *)&unk_100982850, (void (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints);
  char v13 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v21 + 8);
  v14(v3, v1);
  v14(v6, v1);
  uint64_t ObjectType = (char *)swift_getObjectType();
  sub_1000D5394(v11, v12, v13 & 1, v20, ObjectType);
  double v17 = v16;
  swift_unknownObjectRelease();
  swift_release();
  return v17;
}

uint64_t sub_1000D61A4()
{
  return ShelfLayoutContext.shelfPresentationHints.getter();
}

uint64_t sub_1000D61C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D6210(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000D626C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000D62C0(uint64_t a1)
{
  v27.i64[0] = a1;
  uint64_t v1 = sub_100082C28(&qword_100982908);
  __chkstk_darwin(v1 - 8);
  uint64_t v33 = type metadata accessor for PageGrid.HorizontalMargins();
  uint64_t v2 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v4 = (int64x2_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100082C28(&qword_100982910);
  __chkstk_darwin(v5 - 8);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  sub_100082C28(&qword_100982918);
  uint64_t v9 = *(void *)(type metadata accessor for PageGrid.Breakpoint() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v31 = *(void *)(v9 + 72);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1007BFA20;
  uint64_t v25 = v11;
  unint64_t v30 = v11 + v10;
  if (qword_10097DF38 != -1) {
    swift_once();
  }
  uint64_t v35 = 0x3FF0000000000000;
  sub_100075138();
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v34 = 0x4030000000000000;
  uint64_t v35 = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  uint64_t v35 = 0x4030000000000000;
  uint64_t v34 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  __asm { FMOV            V0.2D, #16.0 }
  *uint64_t v4 = _Q0;
  double v17 = *(void (**)(void))(v2 + 104);
  unsigned int v29 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  uint64_t v32 = v2 + 104;
  uint64_t v28 = (void (*)(int64x2_t *, void, uint64_t))v17;
  v17(v4);
  CGFloat left = UIEdgeInsetsZero.left;
  LOBYTE(v35) = 0;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v35 = 0;
  PageGrid.DirectionalValue.init(_:)();
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF40 != -1) {
    swift_once();
  }
  uint64_t v35 = 0x3FF0000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v34 = 0x4034000000000000;
  uint64_t v35 = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  uint64_t v34 = 0x4034000000000000;
  uint64_t v35 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  __asm { FMOV            V0.2D, #20.0 }
  *uint64_t v4 = _Q0;
  v28(v4, v29, v33);
  LOBYTE(v35) = 0;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v35 = 0;
  PageGrid.DirectionalValue.init(_:)();
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF48 != -1) {
    swift_once();
  }
  uint64_t v34 = 0x4000000000000000;
  uint64_t v35 = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  BOOL v26 = v27.i64[0] < 2;
  LOBYTE(v35) = v27.i64[0] < 2;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v35 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v34 = 0x4034000000000000;
  uint64_t v35 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  int64x2_t v22 = vdupq_n_s64(0x4041000000000000uLL);
  *uint64_t v4 = v22;
  v28(v4, v29, v33);
  uint64_t v35 = 0;
  PageGrid.DirectionalValue.init(_:)();
  CGFloat top = UIEdgeInsetsZero.top;
  CGFloat v23 = left;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF68 != -1) {
    swift_once();
  }
  uint64_t v35 = 0x4000000000000000;
  PageGrid.DirectionalValue.init(_:)();
  LOBYTE(v35) = v26;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v35 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v34 = 0x4034000000000000;
  uint64_t v35 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  *uint64_t v4 = v22;
  v28(v4, v29, v33);
  static UIEdgeInsets.horizontal(left:right:)();
  uint64_t v35 = 0;
  PageGrid.DirectionalValue.init(_:)();
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF70 != -1) {
    swift_once();
  }
  uint64_t v34 = 0x4000000000000000;
  uint64_t v35 = 0x4004000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  BOOL v20 = v27.i64[0] < 3;
  LOBYTE(v35) = v27.i64[0] < 3;
  LOBYTE(v34) = v26;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  uint64_t v35 = 0x4038000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v34 = 0x4034000000000000;
  uint64_t v35 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  int64x2_t v27 = vdupq_n_s64(0x404A000000000000uLL);
  *uint64_t v4 = v27;
  v28(v4, v29, v33);
  uint64_t v35 = 0;
  PageGrid.DirectionalValue.init(_:)();
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF78 != -1) {
    swift_once();
  }
  uint64_t v35 = 0x4008000000000000;
  PageGrid.DirectionalValue.init(_:)();
  LOBYTE(v35) = v20;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v35 = 0x4038000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v34 = 0x4034000000000000;
  uint64_t v35 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  *uint64_t v4 = v27;
  v28(v4, v29, v33);
  uint64_t v35 = 0;
  PageGrid.DirectionalValue.init(_:)();
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  return v25;
}

uint64_t sub_1000D6D28()
{
  return sub_1000D75A8(&qword_100982928, (void (*)(uint64_t))type metadata accessor for LinkableTextCollectionViewCell);
}

double sub_1000D6D74()
{
  uint64_t v0 = sub_100082C28(&qword_100982930);
  uint64_t v56 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PageGrid();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  __chkstk_darwin(v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for LinkableTextCollectionViewCellLayout.Metrics();
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  id v47 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LinkableTextCollectionViewCellLayout();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  __chkstk_darwin(v6);
  uint64_t v52 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for LabelPlaceholder();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  Swift::String v60 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DynamicTextAppearance();
  uint64_t v9 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v58 = (char *)&v39 - v13;
  uint64_t v14 = type metadata accessor for FontUseCase();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  double v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LinkableText();
  sub_1000D75A8((unint64_t *)&qword_100985A20, (void (*)(uint64_t))&type metadata accessor for LinkableText);
  ItemLayoutContext.typedModel<A>(as:)();
  if (!v61[0]) {
    return 0.0;
  }
  uint64_t v57 = v61[0];
  double v43 = v2;
  uint64_t v44 = v0;
  sub_10005A19C();
  if (qword_10097F678 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100087728(v14, (uint64_t)qword_1009E4DC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  uint64_t v19 = (void *)v61[0];
  BOOL v20 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)();

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  LinkableText.styledText.getter();
  id v42 = v20;
  uint64_t v21 = (void *)dispatch thunk of StyledText.asAttributedString(using:)();
  swift_release();
  DynamicTextAppearance.init()();
  int64x2_t v22 = v58;
  DynamicTextAppearance.withFontUseCase(_:)();
  uint64_t v23 = v59;
  id v41 = *(void (**)(char *, uint64_t))(v9 + 8);
  v41(v11, v59);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v22, v23);
  id v40 = v21;
  LabelPlaceholder.Options.init(rawValue:)();
  uint64_t v24 = v60;
  LabelPlaceholder.init(_:with:where:)();
  if (qword_100980460 != -1) {
    swift_once();
  }
  uint64_t v25 = v46;
  uint64_t v26 = sub_100087728(v46, (uint64_t)qword_1009E6EF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v47, v26, v25);
  uint64_t v27 = v53;
  v61[3] = v53;
  v61[4] = (uint64_t)&protocol witness table for LabelPlaceholder;
  uint64_t v28 = sub_1000808B8(v61);
  uint64_t v29 = v51;
  (*(void (**)(uint64_t *, char *, uint64_t))(v51 + 16))(v28, v24, v27);
  unint64_t v30 = v52;
  LinkableTextCollectionViewCellLayout.init(metrics:textLabel:)();
  swift_getKeyPath();
  uint64_t v31 = v48;
  ItemLayoutContext.subscript.getter();
  swift_release();
  PageGrid.componentMeasuringSize(spanning:)();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v50);
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  uint64_t v32 = (void *)v61[0];
  sub_1000D75A8(&qword_100982938, (void (*)(uint64_t))&type metadata accessor for LinkableTextCollectionViewCellLayout);
  uint64_t v33 = v43;
  uint64_t v34 = v55;
  dispatch thunk of CustomLayout.layout.getter();
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v44;
  dispatch thunk of Placeable.measure(toFit:with:)();
  double v37 = v36;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v35);

  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v34);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v60, v27);
  v41(v58, v59);
  return v37;
}

uint64_t sub_1000D75A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D75F4()
{
  unint64_t result = qword_100982940;
  if (!qword_100982940)
  {
    type metadata accessor for FootnoteCollectionViewCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100982940);
  }
  return result;
}

uint64_t sub_1000D764C()
{
  return ShelfLayoutContext.shelf.getter();
}

double sub_1000D7674(uint64_t a1, uint64_t a2)
{
  v21[1] = a2;
  uint64_t v26 = type metadata accessor for PageGrid();
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ComponentLayoutOptions();
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  v21[0] = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100082C28(&qword_100986CF0);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_100991050);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter();
  ReadOnlyLens.value.getter();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  ItemLayoutContext.state.getter();
  type metadata accessor for ObjectGraph();
  swift_dynamicCastClassUnconditional();
  uint64_t v16 = v21[0];
  ItemLayoutContext.componentLayoutOptions.getter();
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  PageGrid.componentMeasuringSize(spanning:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v26);
  id v17 = sub_1000F3FC0();
  sub_100701464((uint64_t)v28, (uint64_t)v7, v16, v17);
  double v19 = v18;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v16, v27);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v28);
  return v19;
}

uint64_t sub_1000D7ACC()
{
  return ShelfLayoutContext.shelf.getter();
}

uint64_t sub_1000D7AF8()
{
  return sub_1000D85C0(&qword_100982948, (void (*)(uint64_t))type metadata accessor for UberHeaderView);
}

id sub_1000D7B40()
{
  if (!*(void *)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView)
                              + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                  + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents))
    return 0;
  type metadata accessor for VideoView();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    id result = *(id *)(v1 + qword_10099B108);
  }
  else
  {
    self;
    id result = (id)swift_dynamicCastObjCClass();
    if (!result) {
      return result;
    }
  }
  return [result image];
}

void sub_1000D7BEC(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView);
  uint64_t v3 = OBJC_IVAR____TtC8AppStore9MediaView_contentContainer;
  uint64_t v4 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
  if (v4)
  {
    id v5 = [v4 layer];
    [v5 removeAllAnimations];

    uint64_t v6 = *(void **)(*(void *)(v2 + v3)
                  + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
    if (v6)
    {
      [v6 setAlpha:1.0];
      uint64_t v7 = *(void **)(*(void *)(v2 + v3)
                    + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
      if (v7)
      {
        type metadata accessor for VideoView();
        uint64_t v8 = swift_dynamicCastClass();
        if (v8)
        {
          uint64_t v9 = *(void **)(v8 + qword_10099B108);
        }
        else
        {
          self;
          uint64_t v10 = swift_dynamicCastObjCClass();
          if (!v10) {
            goto LABEL_9;
          }
          uint64_t v9 = (void *)v10;
        }
        id v11 = v7;
        [v9 setImage:a1];
      }
    }
  }
LABEL_9:
}

void (*sub_1000D7D24(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  if (*(void *)(*(void *)(*(void *)(v1 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView)
                             + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                 + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents))
  {
    type metadata accessor for VideoView();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      id v4 = *(id *)(v3 + qword_10099B108);
LABEL_6:
      id v4 = [v4 image];
      goto LABEL_7;
    }
    self;
    id v4 = (id)swift_dynamicCastObjCClass();
    if (v4) {
      goto LABEL_6;
    }
  }
  else
  {
    id v4 = 0;
  }
LABEL_7:
  *a1 = v4;
  return sub_1000D7DF8;
}

void sub_1000D7DF8(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    sub_1000D7BEC(v2);
  }
  else
  {
    sub_1000D7BEC(*a1);
  }
}

void sub_1000D7E60(void *a1, char a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView);
  uint64_t v5 = OBJC_IVAR____TtC8AppStore9MediaView_contentContainer;
  if (*(void *)(*(void *)(v4 + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                 + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents))
  {
    type metadata accessor for VideoView();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      id v8 = [*(id *)(v7 + qword_10099B108) image];
    }
    else
    {
      self;
      uint64_t v9 = (void *)swift_dynamicCastObjCClass();
      if (!v9) {
        goto LABEL_11;
      }
      id v8 = [v9 image];
    }
    id v10 = v8;

    if (v10 && (a2 & 1) == 0)
    {
      id v11 = a1;
      sub_1000D7BEC(a1);
      return;
    }
  }
LABEL_11:
  uint64_t v12 = *(void **)(*(void *)(v4 + v5)
                 + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents);
  if (v12)
  {
    type metadata accessor for VideoView();
    if (swift_dynamicCastClass())
    {
      id v20 = v12;
      sub_1006C81CC((uint64_t)a1, a1 == 0);
    }
    else
    {
      self;
      uint64_t v13 = swift_dynamicCastObjCClass();
      if (v13)
      {
        uint64_t v14 = (void *)v13;
        id v15 = v12;
        [v14 setAlpha:0.0];
        [v14 setImage:a1];
        sub_1000D81D0();
        uint64_t v16 = (void *)static UIViewPropertyAnimator.fadeInPropertyAnimator.getter();
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v14;
        aBlock[4] = sub_1000D8248;
        aBlock[5] = v17;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000162D4;
        aBlock[3] = &unk_1008BBE60;
        double v18 = _Block_copy(aBlock);
        id v19 = v15;
        swift_release();
        [v16 addAnimations:v18];
        _Block_release(v18);
        [v16 startAnimation];
      }
    }
  }
}

void (*sub_1000D812C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000D7D24(v2);
  return sub_1000D8184;
}

void sub_1000D8184(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

unint64_t sub_1000D81D0()
{
  unint64_t result = qword_100982950;
  if (!qword_100982950)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100982950);
  }
  return result;
}

uint64_t sub_1000D8210()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000D8248()
{
  return [*(id *)(v0 + 16) setAlpha:1.0];
}

uint64_t sub_1000D825C(double a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = type metadata accessor for AspectRatio();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for Uber.Style();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  id v19 = &v23[-v18];
  sub_100176F48(a5, a4, *(uint64_t *)&a2, *(uint64_t *)&a1, 0);
  LOBYTE(a5) = UITraitCollection.isSizeClassCompact.getter();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v19, a4, v13);
  if ((a5 & 1) == 0)
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v19, v13);
LABEL_6:
    Artwork.size.getter();
    AspectRatio.init(_:_:)();
    AspectRatio.width(fromHeight:)();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    return Artwork.config(_:mode:prefersLayeredImage:)();
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v14 + 104))(v16, enum case for Uber.Style.inline(_:), v13);
  sub_1000D85C0(&qword_1009857B0, (void (*)(uint64_t))&type metadata accessor for Uber.Style);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v27 != v25 || v28 != v26)
  {
    int v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
    v22(v16, v13);
    v22(v19, v13);
    if (v24) {
      return Artwork.config(_:mode:prefersLayeredImage:)();
    }
    goto LABEL_6;
  }
  swift_bridgeObjectRelease_n();
  id v20 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
  v20(v16, v13);
  v20(v19, v13);
  return Artwork.config(_:mode:prefersLayeredImage:)();
}

uint64_t sub_1000D85C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D8608()
{
  uint64_t v0 = sub_100082C28(&qword_100982908);
  __chkstk_darwin(v0 - 8);
  uint64_t v29 = type metadata accessor for PageGrid.HorizontalMargins();
  uint64_t v1 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v3 = (int64x2_t *)((char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_100082C28(&qword_100982910);
  __chkstk_darwin(v4 - 8);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  sub_100082C28(&qword_100982918);
  uint64_t v8 = *(void *)(type metadata accessor for PageGrid.Breakpoint() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v24 = *(void *)(v8 + 72);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1007BFA20;
  uint64_t v23 = v10;
  unint64_t v27 = v10 + v9;
  if (qword_10097DF38 != -1) {
    swift_once();
  }
  uint64_t v30 = 0x3FF0000000000000;
  uint64_t v31 = 0x3FF8000000000000;
  sub_100075138();
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  uint64_t v30 = 0x4030000000000000;
  uint64_t v31 = 0x4020000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  uint64_t v31 = 0x4030000000000000;
  uint64_t v30 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  __asm { FMOV            V0.2D, #16.0 }
  int64x2_t *v3 = _Q0;
  uint64_t v16 = *(void (**)(void))(v1 + 104);
  unsigned int v26 = enum case for PageGrid.HorizontalMargins.absolute(_:);
  uint64_t v28 = v1 + 104;
  uint64_t v25 = (void (*)(int64x2_t *, void, uint64_t))v16;
  v16(v3);
  CGFloat left = UIEdgeInsetsZero.left;
  LOBYTE(v31) = 0;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0;
  PageGrid.DirectionalValue.init(_:)();
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF40 != -1) {
    swift_once();
  }
  uint64_t v30 = 0x3FF0000000000000;
  uint64_t v31 = 0x3FF8000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  uint64_t v30 = 0x4034000000000000;
  uint64_t v31 = 0x4024000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  uint64_t v30 = 0x4034000000000000;
  uint64_t v31 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  __asm { FMOV            V0.2D, #20.0 }
  int64x2_t *v3 = _Q0;
  v25(v3, v26, v29);
  LOBYTE(v31) = 0;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0;
  PageGrid.DirectionalValue.init(_:)();
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF48 != -1) {
    swift_once();
  }
  uint64_t v31 = 0x4008000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v30 = 0x4034000000000000;
  uint64_t v31 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  int64x2_t v20 = vdupq_n_s64(0x4041000000000000uLL);
  int64x2_t *v3 = v20;
  v25(v3, v26, v29);
  LOBYTE(v31) = 0;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0;
  PageGrid.DirectionalValue.init(_:)();
  CGFloat v21 = left;
  CGFloat top = UIEdgeInsetsZero.top;
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF68 != -1) {
    swift_once();
  }
  uint64_t v31 = 0x4010000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0x4034000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v30 = 0x4034000000000000;
  uint64_t v31 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  int64x2_t *v3 = v20;
  v25(v3, v26, v29);
  static UIEdgeInsets.horizontal(left:right:)();
  LOBYTE(v31) = 0;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0;
  PageGrid.DirectionalValue.init(_:)();
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF70 != -1) {
    swift_once();
  }
  uint64_t v31 = 0x4014000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0x4038000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v30 = 0x4034000000000000;
  uint64_t v31 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  int64x2_t v20 = vdupq_n_s64(0x404A000000000000uLL);
  int64x2_t *v3 = v20;
  v25(v3, v26, v29);
  LOBYTE(v31) = 0;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0;
  PageGrid.DirectionalValue.init(_:)();
  PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  if (qword_10097DF78 != -1) {
    swift_once();
  }
  uint64_t v31 = 0x4018000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0x4038000000000000;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v30 = 0x4034000000000000;
  uint64_t v31 = 0x4030000000000000;
  PageGrid.DirectionalValue.init(horizontal:vertical:)();
  int64x2_t *v3 = v20;
  v25(v3, v26, v29);
  LOBYTE(v31) = 0;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t v31 = 0;
  PageGrid.DirectionalValue.init(_:)();
  uint64_t result = PageGrid.Breakpoint.init(range:columnCount:columnExtendsToFillWidth:minimumColumnWidth:interColumnSpace:interRowSpace:horizontalMargins:additionalSafeAreaHorizontalMargins:)();
  qword_100982958 = v23;
  return result;
}

void *CrossLinkPresenter.crossFadeAnimationDuration.unsafeMutableAddressor()
{
  return &static CrossLinkPresenter.crossFadeAnimationDuration;
}

double static SubscriptionLockupPresenter.crossFadeAnimationDuration.getter()
{
  return 0.33;
}

uint64_t CrossLinkPresenter.adamId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_adamId;
  uint64_t v4 = type metadata accessor for AdamId();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CrossLinkPresenter.isVisible.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1000D910C(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
  uint64_t result = swift_beginAccess();
  int v6 = *v4;
  *uint64_t v4 = a1;
  if (v6 != v3)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v8 = *(void *)(v7 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1 & 1, 1, ObjectType, v8);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t CrossLinkPresenter.view.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t CrossLinkPresenter.view.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v5 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
    swift_beginAccess();
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v5 + 32))(*v7, 1, ObjectType, v5);
    swift_unknownObjectRelease();
  }
  return swift_unknownObjectRelease();
}

void (*CrossLinkPresenter.view.modify(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_1000D9390;
}

void sub_1000D9390(uint64_t a1, char a2)
{
  int v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v4 = v3[5];
      uint64_t v5 = *(void *)(v4 + v3[6] + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = (unsigned __int8 *)(v4 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
      swift_beginAccess();
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v5 + 32))(*v7, 1, ObjectType, v5);
      swift_unknownObjectRelease();
    }
  }

  free(v3);
}

uint64_t CrossLinkPresenter.__allocating_init(adamId:title:subtitle:includeBetaApps:view:appStateController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = swift_allocObject();
  CrossLinkPresenter.init(adamId:title:subtitle:includeBetaApps:view:appStateController:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

void *CrossLinkPresenter.init(adamId:title:subtitle:includeBetaApps:view:appStateController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  LODWORD(v53) = a6;
  uint64_t v50 = a5;
  uint64_t v41 = a2;
  uint64_t v42 = a4;
  uint64_t v44 = a7;
  uint64_t v45 = a10;
  uint64_t v46 = *v10;
  uint64_t v47 = a3;
  uint64_t v14 = type metadata accessor for LegacyAppState();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  int64x2_t v20 = (char *)&v41 - v19;
  CGFloat v21 = (char *)v10 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
  *((void *)v21 + 1) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v22 = (char *)v11 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_adamId;
  uint64_t v23 = type metadata accessor for AdamId();
  uint64_t v48 = *(void *)(v23 - 8);
  uint64_t v49 = v23;
  (*(void (**)(char *, uint64_t))(v48 + 16))(v22, a1);
  swift_beginAccess();
  uint64_t v43 = a8;
  *((void *)v21 + 1) = a8;
  uint64_t v24 = v44;
  swift_unknownObjectWeakAssign();
  swift_getObjectType();
  uint64_t v51 = a9;
  uint64_t v52 = a1;
  uint64_t v25 = dispatch thunk of AppStateController.stateMachine(forApp:)();
  unsigned int v26 = (void *)((char *)v11 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_stateMachine);
  *unsigned int v26 = v25;
  v26[1] = v27;
  swift_getObjectType();
  swift_unknownObjectRetain();
  dispatch thunk of AppStateMachine.currentStateIncludingBeta(_:)();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v28 == enum case for LegacyAppState.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v29 = type metadata accessor for InstallationType();
LABEL_9:
    (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v17, v29);
    goto LABEL_10;
  }
  if (v28 == enum case for LegacyAppState.updatable(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_10:
    char v30 = 1;
    goto LABEL_11;
  }
  if (v28 == enum case for LegacyAppState.installing(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v29 = type metadata accessor for LegacyAppState.AppInstallationDetails();
    goto LABEL_9;
  }
  if (v28 == enum case for LegacyAppState.openable(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);

    uint64_t v29 = type metadata accessor for OpenableDestination();
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  char v30 = 0;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  uint64_t v31 = (unsigned __int8 *)v11 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible;
  *((unsigned char *)v11 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible) = v30;
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  *(unsigned char *)(v33 + 24) = v53 & 1;
  *(void *)(v33 + 32) = v46;
  swift_retain();
  swift_retain();
  dispatch thunk of AppStateMachine.addStateTransitionObserver(_:action:)();
  swift_release();
  swift_release();
  swift_release();
  if (v24)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v35 = v43;
    double v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 40);
    swift_unknownObjectRetain();
    uint64_t v53 = v25;
    v36(v41, v47, v42, v50, ObjectType, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v37 = swift_getObjectType();
    swift_beginAccess();
    uint64_t v38 = *v31;
    uint64_t v39 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 32);
    swift_unknownObjectRetain();
    v39(v38, 0, v37, v35);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v52, v49);
  return v11;
}

uint64_t sub_1000D9AEC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D9B24()
{
  uint64_t v0 = type metadata accessor for LegacyAppState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v6 = (char *)&v17 - v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v8 = result;
  swift_getObjectType();
  dispatch thunk of AppStateMachine.currentStateIncludingBeta(_:)();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v9 == enum case for LegacyAppState.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    uint64_t v10 = type metadata accessor for InstallationType();
LABEL_10:
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v3, v10);
    goto LABEL_11;
  }
  if (v9 != enum case for LegacyAppState.updatable(_:))
  {
    if (v9 == enum case for LegacyAppState.installing(_:))
    {
      (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
      uint64_t v10 = type metadata accessor for LegacyAppState.AppInstallationDetails();
    }
    else
    {
      if (v9 != enum case for LegacyAppState.openable(_:))
      {
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        uint64_t v11 = 0;
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);

      uint64_t v10 = type metadata accessor for OpenableDestination();
    }
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
LABEL_11:
  uint64_t v11 = 1;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  uint64_t v12 = (unsigned char *)(v8 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
  swift_beginAccess();
  int v13 = *v12;
  unsigned char *v12 = v11;
  if (v11 == v13) {
    return swift_release();
  }
  uint64_t v14 = v8 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view;
  swift_beginAccess();
  if (!swift_unknownObjectWeakLoadStrong()) {
    return swift_release();
  }
  uint64_t v15 = *(void *)(v14 + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 32))(v11, 1, ObjectType, v15);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1000D9EA0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000D9ED8()
{
  return sub_1000D9B24();
}

uint64_t CrossLinkPresenter.deinit()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_stateMachine))
  {
    swift_getObjectType();
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)();
  }
  uint64_t v2 = v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_adamId;
  uint64_t v3 = type metadata accessor for AdamId();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_100092F18(v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t CrossLinkPresenter.__deallocating_deinit()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_stateMachine))
  {
    swift_getObjectType();
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)();
  }
  uint64_t v2 = v0 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_adamId;
  uint64_t v3 = type metadata accessor for AdamId();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_100092F18(v1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_view);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1000DA094@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8AppStore18CrossLinkPresenter_isVisible);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1000DA0E8(char *a1)
{
  return sub_1000D910C(*a1);
}

uint64_t sub_1000DA110()
{
  return type metadata accessor for CrossLinkPresenter();
}

uint64_t type metadata accessor for CrossLinkPresenter()
{
  uint64_t result = qword_100982990;
  if (!qword_100982990) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000DA164()
{
  uint64_t result = type metadata accessor for AdamId();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SpacerTextAttachment()
{
  return self;
}

void sub_1000DA30C()
{
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for InsetCollectionViewControllerContentView();
    if (swift_dynamicCastClass())
    {

      return;
    }
  }
  __break(1u);
}

void sub_1000DA37C(char a1)
{
  id v4 = [v1 view];
  if (!v4) {
    goto LABEL_7;
  }
  type metadata accessor for InsetCollectionViewControllerContentView();
  uint64_t v3 = swift_dynamicCastClass();
  if (!v3)
  {

LABEL_7:
    __break(1u);
    return;
  }
  *(unsigned char *)(v3
           + OBJC_IVAR____TtC8AppStoreP33_F9B20E6387F6F627D5761E6B0A83FE5540InsetCollectionViewControllerContentView_insetLayoutMarginsFromTopSafeAreaInset) = a1 & 1;
}

id sub_1000DA40C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  id v10 = objc_allocWithZone((Class)UICollectionView);

  return [v10 initWithFrame:a1 collectionViewLayout:a2];
}

uint64_t sub_1000DA484()
{
  return sub_1000DB614((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:));
}

void sub_1000DA490()
{
  id v1 = [v0 navigationController];
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  id v3 = [v1 viewControllers];

  sub_1000DBCD4();
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v4 + 32);
LABEL_7:
    int v6 = v5;
    swift_bridgeObjectRelease();
    id v7 = v0;
    id v8 = v6;
    static NSObject.== infix(_:_:)();

    return;
  }
  __break(1u);
}

uint64_t sub_1000DA5CC(char a1)
{
  *((unsigned char *)v1 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_prefersLargeTitle) = a1;
  return (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1F8))();
}

void sub_1000DA614(uint64_t a1, char a2)
{
}

uint64_t sub_1000DA620()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarAppearanceProgress);
}

void sub_1000DA638(uint64_t a1, char a2)
{
}

void sub_1000DA644(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = v3 + *a3;
  *(void *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 8) = a2 & 1;
  sub_1000DA65C();
}

void sub_1000DA65C()
{
  if (v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarAppearanceProgress + 8])
  {
    if (v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarTransitionDistance + 8])
    {
      id v16 = [v0 navigationItem];
      [v16 _setManualScrollEdgeAppearanceEnabled:0];
    }
    else
    {
      double v8 = *(double *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarTransitionDistance];
      id v9 = [v0 navigationItem];
      unsigned int v10 = [v9 _isManualScrollEdgeAppearanceEnabled];

      if (v10)
      {
        id v11 = [v0 navigationItem];
        [v11 _autoScrollEdgeTransitionDistance];
        double v13 = v12;

        if (v13 == v8) {
          return;
        }
      }
      id v14 = [v0 navigationItem];
      [v14 _setManualScrollEdgeAppearanceEnabled:0];

      id v15 = [v0 navigationItem];
      [v15 _setAutoScrollEdgeTransitionDistance:v8];

      id v16 = [v0 navigationItem];
      [v16 _setManualScrollEdgeAppearanceEnabled:1];
    }
  }
  else
  {
    double v1 = *(double *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarAppearanceProgress];
    id v2 = [v0 navigationItem];
    unsigned int v3 = [v2 _isManualScrollEdgeAppearanceEnabled];

    if (v3)
    {
      id v4 = [v0 navigationItem];
      [v4 _manualScrollEdgeAppearanceProgress];
      double v6 = v5;

      if (v6 == v1) {
        return;
      }
    }
    id v7 = [v0 navigationItem];
    [v7 _setManualScrollEdgeAppearanceEnabled:1];

    id v16 = [v0 navigationItem];
    [v16 _setManualScrollEdgeAppearanceProgress:v1];
  }
}

uint64_t sub_1000DA8E4(char a1)
{
  return sub_10000BA78(a1, (SEL *)&selRef_viewWillAppear_, (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.willAppear(_:));
}

void sub_1000DA8F8(char a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for StoreViewControllerLifecycleEvent();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v8 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v29.receiver = v2;
  v29.super_class = v8;
  [super viewWillDisappear:a1 & 1];
  id v9 = [v2 navigationController];
  if (v9)
  {
    id v10 = v9;
    id v11 = [v2 parentViewController];
    if (!v11) {
      goto LABEL_5;
    }
    double v12 = v11;
    sub_1000DBCD4();
    id v10 = v10;
    id v13 = v12;
    char v14 = static NSObject.== infix(_:_:)();

    if ((v14 & 1) == 0) {
      goto LABEL_5;
    }
    id v15 = [v10 viewControllers];
    unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100480B58((uint64_t)v2, v16);
    LOBYTE(v15) = v17;
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v23 = (uint64_t)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
      swift_beginAccess();
      sub_100082B68(v23, (uint64_t)v27, (uint64_t *)&unk_100982B20);
      if (v28)
      {
        sub_100082C6C((uint64_t)v27, (uint64_t)v25);
        sub_100082BCC((uint64_t)v27, (uint64_t *)&unk_100982B20);
        sub_100081D90(v25, v26);
        (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, enum case for StoreViewControllerLifecycleEvent.dismissedByBackButton(_:), v4);
        dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)();

        (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
        _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v25);
      }
      else
      {

        sub_100082BCC((uint64_t)v27, (uint64_t *)&unk_100982B20);
      }
    }
    else
    {
LABEL_5:
    }
  }
  uint64_t v18 = (uint64_t)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess();
  sub_100082B68(v18, (uint64_t)v27, (uint64_t *)&unk_100982B20);
  if (v28)
  {
    sub_100082C6C((uint64_t)v27, (uint64_t)v25);
    sub_100082BCC((uint64_t)v27, (uint64_t *)&unk_100982B20);
    sub_100081D90(v25, v26);
    static ViewWillDisappearReason.inferred(for:)();
    (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, enum case for StoreViewControllerLifecycleEvent.willDisappear(_:), v4);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v25);
  }
  else
  {
    sub_100082BCC((uint64_t)v27, (uint64_t *)&unk_100982B20);
  }
  uint64_t v19 = self;
  id v20 = [v19 defaultCenter];
  [v20 removeObserver:v2 name:UIApplicationDidBecomeActiveNotification object:0];

  id v21 = [v19 defaultCenter];
  [v21 removeObserver:v2 name:UIApplicationDidEnterBackgroundNotification object:0];

  type metadata accessor for FloatingUnifiedMessageCoordinator();
  BaseObjectGraph.optional<A>(_:)();
  uint64_t v22 = (void *)v27[0];
  if (v27[0])
  {
    FloatingUnifiedMessageCoordinator.viewControllerDidDissappear(_:)((UIViewController)v2);
  }
}

id sub_1000DAD70()
{
  double v1 = v0;
  uint64_t v2 = type metadata accessor for StoreViewControllerLifecycleEvent();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100082C28((uint64_t *)&unk_10098ABB0);
  __chkstk_darwin(v10 - 8);
  double v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v47.receiver = v1;
  v47.super_class = v13;
  [super as_viewWillBecomeFullyVisible];
  uint64_t v43 = v1;
  id result = [v1 collectionView];
  if (result)
  {
    id v15 = result;
    id v16 = [result indexPathsForSelectedItems];

    if (v16)
    {
      uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v18 = (void *)v17;
    }
    else
    {
      uint64_t v18 = _swiftEmptyArrayStorage;
    }
    uint64_t v34 = v5;
    uint64_t v35 = v3;
    uint64_t v36 = v2;
    uint64_t v19 = v18[2];
    uint64_t v37 = v18;
    if (v19)
    {
      id v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      uint64_t v20 = v7 + 16;
      uint64_t v22 = (char *)v18 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
      uint64_t v23 = *(void *)(v20 + 56);
      uint64_t v24 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
      uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
      uint64_t v42 = v21;
      uint64_t v39 = v23;
      id v40 = (void (**)(char *, char *, uint64_t))(v20 + 16);
      uint64_t v38 = (void (**)(char *, uint64_t))(v20 - 8);
      v33[1] = (v20 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        v42(v12, v22, v6);
        uint64_t v25 = *v24;
        (*v24)(v12, 0, 1, v6);
        if ((*v41)(v12, 1, v6) == 1) {
          break;
        }
        uint64_t v26 = v20;
        (*v40)(v9, v12, v6);
        id result = [v43 collectionView];
        if (!result)
        {
          __break(1u);
          goto LABEL_17;
        }
        uint64_t v27 = result;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v27 deselectItemAtIndexPath:isa animated:1];

        (*v38)(v9, v6);
        v22 += v39;
        --v19;
        uint64_t v20 = v26;
        if (!v19) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
LABEL_12:
      v25(v12, 1, 1, v6);
    }
    swift_bridgeObjectRelease();
    objc_super v29 = &v43[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver];
    swift_beginAccess();
    sub_100082B68((uint64_t)v29, (uint64_t)v45, (uint64_t *)&unk_100982B20);
    if (v46)
    {
      sub_100082C6C((uint64_t)v45, (uint64_t)v44);
      sub_100082BCC((uint64_t)v45, (uint64_t *)&unk_100982B20);
      sub_100081D90(v44, v44[3]);
      uint64_t v30 = v35;
      uint64_t v31 = v34;
      uint64_t v32 = v36;
      (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for StoreViewControllerLifecycleEvent.willBecomeFullyVisible(_:), v36);
      dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
      return (id)_s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v44);
    }
    else
    {
      return (id)sub_100082BCC((uint64_t)v45, (uint64_t *)&unk_100982B20);
    }
  }
  else
  {
LABEL_17:
    __break(1u);
  }
  return result;
}

uint64_t sub_1000DB254()
{
  return sub_1000DB2D8((SEL *)&selRef_as_viewDidBecomeFullyVisible, &enum case for StoreViewControllerLifecycleEvent.didBecomeFullyVisible(_:));
}

uint64_t sub_1000DB2C4()
{
  return sub_1000DB2D8((SEL *)&selRef_as_viewWillBecomePartiallyVisible, &enum case for StoreViewControllerLifecycleEvent.willBecomePartiallyVisible(_:));
}

uint64_t sub_1000DB2D8(SEL *a1, unsigned int *a2)
{
  uint64_t v5 = type metadata accessor for StoreViewControllerLifecycleEvent();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (objc_class *)type metadata accessor for StoreCollectionViewController();
  v16.receiver = v2;
  v16.super_class = v9;
  [super a1];
  uint64_t v10 = (uint64_t)v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess();
  sub_100082B68(v10, (uint64_t)v14, (uint64_t *)&unk_100982B20);
  if (!v15) {
    return sub_100082BCC((uint64_t)v14, (uint64_t *)&unk_100982B20);
  }
  sub_100082C6C((uint64_t)v14, (uint64_t)v13);
  sub_100082BCC((uint64_t)v14, (uint64_t *)&unk_100982B20);
  sub_100081D90(v13, v13[3]);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *a2, v5);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v13);
}

uint64_t sub_1000DB4D4()
{
  return sub_1000DB2D8((SEL *)&selRef_as_viewDidBecomePartiallyVisible, &enum case for StoreViewControllerLifecycleEvent.didBecomePartiallyVisible(_:));
}

uint64_t sub_1000DB544(char a1)
{
  return sub_10000BA78(a1, (SEL *)&selRef_viewDidDisappear_, (unsigned int *)&enum case for StoreViewControllerLifecycleEvent.didDisappear(_:));
}

uint64_t sub_1000DB608()
{
  return sub_1000DB614((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:));
}

uint64_t sub_1000DB614(unsigned int *a1)
{
  uint64_t v3 = type metadata accessor for StoreViewControllerLifecycleEvent();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess();
  sub_100082B68(v7, (uint64_t)v11, (uint64_t *)&unk_100982B20);
  if (!v12) {
    return sub_100082BCC((uint64_t)v11, (uint64_t *)&unk_100982B20);
  }
  sub_100082C6C((uint64_t)v11, (uint64_t)v10);
  sub_100082BCC((uint64_t)v11, (uint64_t *)&unk_100982B20);
  sub_100081D90(v10, v10[3]);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *a1, v3);
  dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v10);
}

void sub_1000DB874(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  id v4 = *(id *)((char *)v1 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController);
  static ViewControllerContainment.remove(_:)();

  uint64_t v5 = *(void **)((char *)v1 + v3);
  *(void *)((char *)v1 + v3) = a1;
  id v6 = a1;

  uint64_t v7 = *(void **)((char *)v1 + v3);
  uint64_t v8 = *(void (**)(void))((swift_isaMask & *v1) + 0x198);
  id v9 = v7;
  v8();
  static ViewControllerContainment.add(_:to:frame:)();
}

id sub_1000DBA98()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StoreCollectionViewController();
  return [super dealloc];
}

void sub_1000DBCB0()
{
}

unint64_t sub_1000DBCD4()
{
  unint64_t result = qword_100982B30;
  if (!qword_100982B30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100982B30);
  }
  return result;
}

void sub_1000DBD14()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_automationSemanticPageId];
  *uint64_t v1 = 0;
  v1[1] = 0;
  objc_super v2 = &v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver];
  *(_OWORD *)objc_super v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_registeredForApplicationDidBecomeActive] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_statusBarBackgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController] = 0;
  v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_prefersLargeTitle] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarTransitionDistance];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  id v4 = &v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationBarAppearanceProgress];
  *(void *)id v4 = 0;
  v4[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_navigationAccessories] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDelegate] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_collectionViewDataSource] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000DBE24()
{
  return _swift_deallocObject(v0, 18, 7);
}

char *sub_1000DBE34(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  *(void *)&v2[qword_1009E0D88 + 8] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for AdvertRotationControllerProvider();
  type metadata accessor for ObjectGraph();
  uint64_t v5 = v2;
  inject<A, B>(_:from:)();
  *(void *)&v5[qword_100982B70] = v13;

  swift_retain();
  swift_retain();
  id v6 = sub_1003F0EDC(a1, a2);
  uint64_t v7 = *(void **)&v6[qword_1009E2BF0];
  uint64_t v8 = v6;
  id v9 = v7;
  swift_retain();
  CompoundScrollObserver.addChild(_:)();

  swift_release();
  sub_100082C28(&qword_100985E10);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1007BF1D0;
  *(void *)(v10 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v10 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(v10 + 48) = type metadata accessor for UITraitLayoutDirection();
  *(void *)(v10 + 56) = &protocol witness table for UITraitLayoutDirection;
  uint64_t v11 = v8;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v11;
}

void sub_1000DBFE8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AutomationSemantics();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27.receiver = v0;
  v27.super_class = ObjectType;
  [super viewDidLoad:v9];
  id v12 = [v0 collectionView];
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 setKeyboardDismissMode:1];
  }
  id v14 = [v1 collectionView];
  if (v14)
  {
    uint64_t v15 = v14;
    [v14 setAllowsSelection:1];
  }
  id v16 = [v1 collectionView];
  if (v16)
  {
    uint64_t v17 = v16;
    [v16 setContentInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  }
  id v18 = [v1 collectionView];
  if (v18)
  {
    uint64_t v19 = v18;
    memset(v26, 0, sizeof(v26));
    static AutomationSemantics.page(name:id:)();
    sub_100082BCC((uint64_t)v26, (uint64_t *)&unk_100982B40);
    UIView.setAutomationSemantics(_:)();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    sub_100082C28(&qword_100985E10);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1007BF1D0;
    *(void *)(v20 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
    *(void *)(v20 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    *(void *)(v20 + 48) = type metadata accessor for UITraitLegibilityWeight();
    *(void *)(v20 + 56) = &protocol witness table for UITraitLegibilityWeight;
    UIViewController.registerForTraitChanges<A>(_:handler:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_10097FC40 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for StaticDimension();
    sub_100087728(v21, (uint64_t)qword_1009E5DC0);
    static Dimensions.defaultRoundingRule.getter();
    AnyDimension.value(in:rounded:)();
    double v23 = v22;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    [v1 additionalSafeAreaInsets];
    [v1 setAdditionalSafeAreaInsets:v23];
    id v24 = [v1 view];
    if (v24)
    {
      uint64_t v25 = v24;
      [v24 setNeedsLayout];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1000DC3D4(void *a1)
{
  id v1 = a1;
  sub_1000DBFE8();
}

void sub_1000DC41C(void *a1, uint64_t a2)
{
}

void sub_1000DC43C(void *a1, uint64_t a2, uint64_t a3)
{
}

void sub_1000DC45C(void *a1, uint64_t a2)
{
}

void sub_1000DC47C(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  id v6 = *a3;
  id v7 = v9.receiver;
  [super v6];
  a4(v8);
}

void sub_1000DC4EC(void *a1, uint64_t a2, uint64_t a3)
{
}

void sub_1000DC50C(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(id))
{
  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType();
  id v8 = *a4;
  id v9 = v11.receiver;
  [super v8:a3];
  a5(v10);
}

uint64_t sub_1000DC584()
{
  return sub_1000DC634((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appEnteredWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appEnteredWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appDidForeground());
}

void sub_1000DC5B8(void *a1)
{
  id v1 = a1;
  sub_1000DC584();
}

uint64_t sub_1000DC600()
{
  return sub_1000DC634((unsigned int *)&enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), (uint64_t (*)(uint64_t))&dispatch thunk of DiffablePagePresenter.appExitedWhileAppeared(), (uint64_t (*)(uint64_t))&AdvertRotationControllerProvider.appWillBackground());
}

uint64_t sub_1000DC634(unsigned int *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v7 = type metadata accessor for StoreViewControllerLifecycleEvent();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v16[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v3 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess();
  sub_1000DD5EC(v11, (uint64_t)v17);
  if (v18)
  {
    sub_100082C6C((uint64_t)v17, (uint64_t)v16);
    sub_100082BCC((uint64_t)v17, (uint64_t *)&unk_100982B20);
    sub_100081D90(v16, v16[3]);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *a1, v7);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v12 = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v16);
  }
  else
  {
    uint64_t v12 = sub_100082BCC((uint64_t)v17, (uint64_t *)&unk_100982B20);
  }
  uint64_t v13 = a2(v12);
  return a3(v13);
}

void sub_1000DC7F8(void *a1)
{
  id v1 = a1;
  sub_1000DC600();
}

id sub_1000DC840()
{
  id v1 = v0;
  swift_getObjectType();
  sub_100082C28(&qword_1009910C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1007BF710;
  sub_100082C28(&qword_100983100);
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v3 = SearchAdsCollectionElementsObserver.init(presenter:advertControllerProvider:)();
  uint64_t v4 = sub_1000DD560(&qword_100983108, &qword_100983100);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  type metadata accessor for SearchAdBackgroundCollectionElementsObserver();
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 1;
  uint64_t v6 = sub_1000DD5A4(&qword_100983110, (void (*)(uint64_t))type metadata accessor for SearchAdBackgroundCollectionElementsObserver);
  *(void *)(v2 + 48) = v5;
  *(void *)(v2 + 56) = v6;
  sub_1000DD5A4(&qword_1009830D8, (void (*)(uint64_t))type metadata accessor for SearchFocusDiffablePageViewController);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter();
  TimedMetricsPagePresenter.impressionsCalculator.getter();
  swift_retain();
  swift_retain();
  id result = [v1 collectionView];
  if (result)
  {
    type metadata accessor for SearchImpressionsCollectionElementsObserver();
    swift_allocObject();
    *(void *)(v2 + 64) = SearchImpressionsCollectionElementsObserver.init(componentTypeMappingProvider:impressionsCalculator:advertRotationControllerProvider:objectGraph:collectionView:)();
    *(void *)(v2 + 72) = &protocol witness table for ImpressionsCollectionElementsObserver;
    type metadata accessor for CompoundCollectionElementsObserver();
    swift_allocObject();
    uint64_t v8 = CompoundCollectionElementsObserver.init(children:)();
    sub_100735A8C();
    if (swift_dynamicCastClass())
    {
      CompoundCollectionElementsObserver.removingChildren(where:)();
      CompoundCollectionElementsObserver.addChild(_:)();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return (id)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1000DCB04@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for SearchFocusPageShelfLayoutSpacingProvider;
  unint64_t result = sub_1000DD50C();
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1000DCB38()
{
  sub_100082C28(&qword_100981710);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1007BF1D0;
  type metadata accessor for SearchAdItemSupplementaryProvider();
  uint64_t v1 = swift_allocObject();
  *(unsigned char *)(v1 + 16) = 1;
  uint64_t v2 = sub_1000DD5A4(&qword_1009830E0, (void (*)(uint64_t))type metadata accessor for SearchAdItemSupplementaryProvider);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  sub_100082C28(&qword_1009830E8);
  sub_1000DD560(&qword_1009830F0, &qword_1009830E8);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter();
  type metadata accessor for GenericPageItemSupplementaryProvider();
  uint64_t v3 = swift_allocObject();
  sub_100082C6C((uint64_t)v7, v3 + 16);
  type metadata accessor for GenericPageSeparatorItemSupplementaryProvider();
  uint64_t v4 = swift_allocObject();
  sub_100081DD4(v7, v4 + 16);
  *(void *)(v3 + 56) = v4;
  uint64_t v5 = sub_1000DD5A4((unint64_t *)&unk_1009910E0, (void (*)(uint64_t))type metadata accessor for GenericPageItemSupplementaryProvider);
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v5;
  type metadata accessor for CompoundItemSupplementaryProvider();
  swift_allocObject();
  return CompoundItemSupplementaryProvider.init(children:)();
}

uint64_t sub_1000DCCD8@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  sub_1000DD5A4(&qword_1009830D8, (void (*)(uint64_t))type metadata accessor for SearchFocusDiffablePageViewController);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter();
  long long v18 = xmmword_1007BF1D0;
  uint64_t v2 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter();
  void v19[3] = swift_getObjectType();
  v19[0] = v2;
  uint64_t v3 = ShelfBasedCollectionViewController.collectionElementsObserver.getter();
  v20[3] = swift_getObjectType();
  v20[0] = v3;
  sub_10008A898((uint64_t)v19, (uint64_t)v17);
  sub_10008A898((uint64_t)v17, (uint64_t)v15);
  sub_100082C28((uint64_t *)&unk_1009910B0);
  sub_100082C28(&qword_1009816A0);
  if ((swift_dynamicCast() & 1) == 0) {
    long long v16 = 0uLL;
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v17);
  if ((void)v16)
  {
    long long v13 = v16;
    uint64_t v4 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_100031974(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    }
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      uint64_t v4 = sub_100031974((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    v4[2] = v6 + 1;
    *(_OWORD *)&v4[2 * v6 + 4] = v13;
  }
  else
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  sub_10008A898((uint64_t)v20, (uint64_t)v17);
  sub_10008A898((uint64_t)v17, (uint64_t)v15);
  sub_100082C28((uint64_t *)&unk_1009910B0);
  sub_100082C28(&qword_1009816A0);
  if ((swift_dynamicCast() & 1) == 0) {
    long long v16 = 0uLL;
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v17);
  if ((void)v16)
  {
    long long v14 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_100031974(0, v4[2] + 1, 1, v4);
    }
    unint64_t v8 = v4[2];
    unint64_t v7 = v4[3];
    long long v9 = v14;
    if (v8 >= v7 >> 1)
    {
      uint64_t v12 = sub_100031974((void *)(v7 > 1), v8 + 1, 1, v4);
      long long v9 = v14;
      uint64_t v4 = v12;
    }
    v4[2] = v8 + 1;
    *(_OWORD *)&v4[2 * v8 + 4] = v9;
  }
  swift_arrayDestroy();
  uint64_t v10 = type metadata accessor for SearchFocusLayoutSectionProvider();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1006CFFC0((uint64_t)v21);
  a1[3] = v10;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = result;
  return result;
}

unint64_t sub_1000DCFF8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PageGridCache();
  swift_allocObject();
  uint64_t v2 = PageGridCache.init()();
  swift_allocObject();
  uint64_t v3 = PageGridCache.init()();
  swift_allocObject();
  uint64_t v4 = PageGridCache.init()();
  a1[3] = (uint64_t)&type metadata for SearchFocusPageGridProvider;
  unint64_t result = sub_1000DD4B8();
  a1[4] = result;
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

void sub_1000DD0A0(void *a1, uint64_t a2, void *a3)
{
  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  id v4 = a3;
  unint64_t v5 = (char *)v9.receiver;
  [super scrollViewWillBeginDragging:v4];
  unint64_t v6 = &v5[qword_1009E0D88];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v7 = *((void *)v6 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_1000DD15C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SearchFocusShelfComponentTypeMappingProvider();
  uint64_t v3 = swift_allocObject();
  type metadata accessor for AppPromotionsShelfComponentTypeMappingProvider();
  *(void *)(v3 + 16) = swift_allocObject();
  a1[3] = v2;
  uint64_t result = sub_1000DD5A4(&qword_1009830C8, (void (*)(uint64_t))type metadata accessor for SearchFocusShelfComponentTypeMappingProvider);
  a1[4] = result;
  *a1 = v3;
  return result;
}

void sub_1000DD1F8(uint64_t a1)
{
  uint64_t v2 = sub_100082C28(&qword_1009830C0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007376DC(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for DiffablePagePresenter.UpdatePhase.initial<A>(_:)) {
    AdvertRotationControllerProvider.viewControllerWillBeReloaded()();
  }
  else {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1000DD32C()
{
  swift_release();
  uint64_t v1 = v0 + qword_1009E0D88;

  return sub_100092F18(v1);
}

uint64_t sub_1000DD36C(uint64_t a1)
{
  swift_release();
  uint64_t v2 = a1 + qword_1009E0D88;

  return sub_100092F18(v2);
}

uint64_t type metadata accessor for SearchFocusDiffablePageViewController()
{
  uint64_t result = qword_100982BA0;
  if (!qword_100982BA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000DD404()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000DD454()
{
  return type metadata accessor for SearchFocusDiffablePageViewController();
}

void sub_1000DD45C(void *a1)
{
  id v1 = [a1 collectionView];
  if (v1)
  {
    id v2 = v1;
    [v1 reloadData];
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1000DD4B8()
{
  unint64_t result = qword_1009830D0;
  if (!qword_1009830D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009830D0);
  }
  return result;
}

unint64_t sub_1000DD50C()
{
  unint64_t result = qword_1009830F8;
  if (!qword_1009830F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009830F8);
  }
  return result;
}

uint64_t sub_1000DD560(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100078F30(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000DD5A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000DD5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_100982B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000DD654(void *a1)
{
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097FC40 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for StaticDimension();
  sub_100087728(v6, (uint64_t)qword_1009E5DC0);
  static Dimensions.defaultRoundingRule.getter();
  AnyDimension.value(in:rounded:)();
  double v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  [a1 additionalSafeAreaInsets];
  [a1 setAdditionalSafeAreaInsets:v8];
  id v9 = [a1 view];
  if (v9)
  {
    uint64_t v10 = v9;
    [v9 setNeedsLayout];
  }
  else
  {
    __break(1u);
  }
}

uint64_t destroy for ProductRatingsRegularLayout(uint64_t a1)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 64);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 104);

  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 144);
}

uint64_t initializeWithCopy for ProductRatingsRegularLayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 64, a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 128) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 104, a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 168) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 144, a2 + 144);
  return a1;
}

uint64_t *assignWithCopy for ProductRatingsRegularLayout(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_100062A2C(a1 + 8, a2 + 8);
  sub_100062A2C(a1 + 13, a2 + 13);
  sub_100062A2C(a1 + 18, a2 + 18);
  return a1;
}

__n128 initializeWithTake for ProductRatingsRegularLayout(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for ProductRatingsRegularLayout(uint64_t a1, uint64_t a2)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 64);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 104);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 144);
  long long v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsRegularLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsRegularLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsRegularLayout()
{
  return &type metadata for ProductRatingsRegularLayout;
}

uint64_t initializeWithCopy for ProductRatingsRegularLayout.Metrics(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t *assignWithCopy for ProductRatingsRegularLayout.Metrics(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 initializeWithTake for ProductRatingsRegularLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ProductRatingsRegularLayout.Metrics(uint64_t a1, uint64_t a2)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRatingsRegularLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRatingsRegularLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRatingsRegularLayout.Metrics()
{
  return &type metadata for ProductRatingsRegularLayout.Metrics;
}

uint64_t sub_1000DDD50(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  sub_100081D90((void *)(v4 + 64), *(void *)(v4 + 88));
  dispatch thunk of Placeable.measure(toFit:with:)();
  CGFloat v10 = v9;
  double v12 = v11;
  CGFloat v14 = v13 + 4.0;
  v31.origin.CGFloat x = a1;
  v31.origin.CGFloat y = a2;
  v31.size.CGFloat width = a3;
  v31.size.CGFloat height = a4;
  CGFloat MinX = CGRectGetMinX(v31);
  sub_1000DE304(v4, (uint64_t)v29);
  sub_100081D90(v29, v30);
  AnyDimension.value(with:)();
  double v16 = v15;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v29);
  v32.origin.CGFloat y = v16 - v12;
  v32.origin.CGFloat x = MinX;
  v32.size.CGFloat width = v14;
  v32.size.CGFloat height = v10;
  CGFloat v17 = CGRectGetMaxX(v32) + *(double *)(v4 + 40);
  sub_100081D90((void *)(v4 + 104), *(void *)(v4 + 128));
  v33.origin.CGFloat x = a1;
  v33.origin.CGFloat y = a2;
  v33.size.CGFloat width = a3;
  v33.size.CGFloat height = a4;
  CGRectGetWidth(v33);
  v34.origin.CGFloat x = a1;
  v34.origin.CGFloat y = a2;
  v34.size.CGFloat width = a3;
  v34.size.CGFloat height = a4;
  CGRectGetHeight(v34);
  dispatch thunk of Placeable.measure(toFit:with:)();
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  double v23 = v22;
  sub_1000DE304(v4, (uint64_t)v29);
  sub_100081D90(v29, v30);
  AnyDimension.value(with:)();
  double v25 = v24;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v29);
  v35.origin.CGFloat x = v17;
  v35.origin.CGFloat y = v25 - v23;
  v35.size.CGFloat width = v19;
  v35.size.CGFloat height = v21;
  CGRectGetMaxX(v35);
  v36.origin.CGFloat x = a1;
  v36.origin.CGFloat y = a2;
  v36.size.CGFloat width = a3;
  v36.size.CGFloat height = a4;
  CGRectGetWidth(v36);
  v37.origin.CGFloat x = a1;
  v37.origin.CGFloat y = a2;
  v37.size.CGFloat width = a3;
  v37.size.CGFloat height = a4;
  CGRectGetWidth(v37);
  sub_100081D90((void *)(v4 + 144), *(void *)(v4 + 168));
  v38.origin.CGFloat x = a1;
  v38.origin.CGFloat y = a2;
  v38.size.CGFloat width = a3;
  v38.size.CGFloat height = a4;
  CGRectGetHeight(v38);
  dispatch thunk of Placeable.measure(toFit:with:)();
  sub_1000DE304(v4, (uint64_t)v29);
  sub_100081D90(v29, v30);
  AnyDimension.value(with:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v29);
  sub_100081D90((void *)(v4 + 64), *(void *)(v4 + 88));
  CGRect.withLayoutDirection(using:relativeTo:)();
  dispatch thunk of Placeable.place(at:with:)();
  sub_100081D90((void *)(v4 + 104), *(void *)(v4 + 128));
  CGRect.withLayoutDirection(using:relativeTo:)();
  dispatch thunk of Placeable.place(at:with:)();
  sub_100081D90((void *)(v4 + 144), *(void *)(v4 + 168));
  CGRect.withLayoutDirection(using:relativeTo:)();
  return dispatch thunk of Placeable.place(at:with:)();
}

uint64_t sub_1000DE110@<X0>(uint64_t a1@<X8>)
{
  return sub_1000DE2CC(v1, a1);
}

double sub_1000DE11C(double a1)
{
  sub_1000DE304(v1, (uint64_t)v4);
  sub_100081D90(v4, v4[3]);
  AnyDimension.value(with:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v4);
  return a1;
}

uint64_t sub_1000DE1AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000DE378();

  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, v4);
}

unint64_t sub_1000DE204()
{
  unint64_t result = qword_100983118;
  if (!qword_100983118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100983118);
  }
  return result;
}

unint64_t sub_1000DE25C()
{
  unint64_t result = qword_100983120;
  if (!qword_100983120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100983120);
  }
  return result;
}

uint64_t sub_1000DE2B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000DE2CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000DE304(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(void *)(a2 + 56) = *(void *)(a1 + 56);
  return a2;
}

unint64_t sub_1000DE378()
{
  unint64_t result = qword_100983128;
  if (!qword_100983128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100983128);
  }
  return result;
}

uint64_t sub_1000DE3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_objectGraph);
  *(void *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_objectGraph) = a3;
  swift_retain_n();
  sub_1005A24D4(v9);
  swift_release();
  swift_release();
  id v10 = [a6 snapshotPageTraitEnvironment];
  *(void *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_pageTraits) = v10;
  swift_unknownObjectRelease();
  double v11 = *(void **)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_flowLayout);
  [a6 pageMarginInsets];
  [v11 setSectionInset:];
  double v12 = *(void **)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_media);
  *(void *)(v6 + OBJC_IVAR____TtC8AppStore30ProductMediaCollectionViewCell_media) = a1;
  swift_retain_n();
  sub_1005A23E8(v12);
  swift_release();

  return swift_release();
}

double sub_1000DE4E8(void (***a1)(uint64_t, uint64_t, uint64_t), double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  return sub_1005A4534(*a1, 0, 0, a8, 0.0, 0.0, a2, a3, a2);
}

uint64_t sub_1000DE510(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_1000DE3D0(*a1, a2, a3, a4, a5, a6);
}

double sub_1000DE518()
{
  return 0.0;
}

uint64_t sub_1000DE524()
{
  return sub_1000DE5B4(&qword_100983130, (void (*)(uint64_t))&type metadata accessor for ProductMedia);
}

uint64_t sub_1000DE56C()
{
  return sub_1000DE5B4(&qword_1009A9C80, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_1000DE5B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1000DE754(void *a1)
{
  uint64_t v2 = v1;
  sub_100621728(0);
  long long v4 = &selRef_accessibilityShowsBadge;
  id v5 = [a1 viewForKey:UITransitionContextFromViewKey];
  uint64_t v6 = v5;
  if (v5)
  {
    [v5 frame];
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    double v12 = v11;
    double v14 = v13;
  }
  else
  {
    id v15 = [a1 containerView];
    [v15 bounds];
    CGFloat v8 = v16;
    CGFloat v10 = v17;
    double v12 = v18;
    double v14 = v19;
  }
  id v20 = [a1 viewControllerForKey:UITransitionContextToViewControllerKey];
  CGFloat v21 = v20;
  if (v20)
  {
    id v22 = [v20 traitCollection];

    id v23 = [v22 horizontalSizeClass];
  }
  else
  {
    id v23 = 0;
  }
  double v24 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCardView);
  if (!v24
    || (double v25 = (double *)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toBounds),
        (*(unsigned char *)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toBounds + 32) & 1) != 0)
    || (uint64_t v26 = (double *)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCenter),
        (*(unsigned char *)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCenter + 16) & 1) != 0))
  {
    BOOL v28 = v23 != (id)1 || v21 == 0;
    double v98 = 0.0;
    if (v28) {
      double v29 = 0.25;
    }
    else {
      double v29 = 0.0;
    }
    v105.origin.CGFloat x = v8;
    v105.origin.CGFloat y = v10;
    v105.size.double width = v12;
    v105.size.double height = v14;
    CGFloat v30 = v29 * CGRectGetWidth(v105);
    v106.origin.CGFloat x = v8;
    v106.origin.CGFloat y = v10;
    v106.size.double width = v12;
    v106.size.double height = v14;
    CGFloat v31 = CGRectGetHeight(v106) * 0.25;
    v107.origin.CGFloat x = v8;
    v107.origin.CGFloat y = v10;
    v107.size.double width = v12;
    v107.size.double height = v14;
    CGRect v108 = CGRectInset(v107, v30, v31);
    double width = v108.size.width;
    double height = v108.size.height;
    v108.origin.CGFloat x = v8;
    v108.origin.CGFloat y = v10;
    v108.size.double width = v12;
    v108.size.double height = v14;
    double MidX = CGRectGetMidX(v108);
    v109.origin.CGFloat x = v8;
    v109.origin.CGFloat y = v10;
    v109.size.double width = v12;
    v109.size.double height = v14;
    double MidY = CGRectGetMidY(v109);
    double v95 = 0.0;
  }
  else
  {
    double MidX = *v26;
    double MidY = v26[1];
    double width = v25[2];
    double height = v25[3];
    double v95 = v25[1];
    double v98 = *v25;
  }
  CGRect v32 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCollectionViewController);
  double v33 = 0.0;
  double v99 = MidX;
  if (v32)
  {
    id v34 = [v32 view];
    double v35 = 0.0;
    double v36 = MidY;
    if (v34)
    {
      CGRect v37 = v34;
      [v34 bounds];
      double v39 = v38;
      double v41 = v40;
      double v43 = v42;
      double v45 = v44;
      id v46 = [a1 containerView];
      [v37 convertRect:v46 toCoordinateSpace:v39, v41, v43, v45];
      double v35 = v47;
      double v33 = v48;

      double MidX = v99 + v35;
      double v36 = MidY + v33;
    }
  }
  else
  {
    double v35 = 0.0;
    double v36 = MidY;
  }
  uint64_t v49 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_detailPageViewController);
  if (!v49)
  {
LABEL_25:
    double v94 = v36;
    double v52 = MidX;
    v110.origin.CGFloat x = v8;
    v110.origin.CGFloat y = v10;
    v110.size.double width = v12;
    v110.size.double height = v14;
    double v53 = CGRectGetMidX(v110);
    v111.origin.CGFloat x = v8;
    v111.origin.CGFloat y = v10;
    v111.size.double width = v12;
    v111.size.double height = v14;
    double v54 = CGRectGetMidY(v111);
    sub_1000DF928(v24, (uint64_t)v6, a1, v53, v54, 0.0, 0.0, v12, v14, v35, v33);
    id v55 = [a1 viewForKey:UITransitionContextToViewKey];
    double v56 = *(double *)&v55;
    if (v55)
    {
      id v57 = v55;
      id v58 = [a1 containerView];
      [v58 bounds];
      double v60 = v59;
      double v62 = v61;
      double v64 = v63;
      double v66 = v65;

      [v57 setFrame:v60, v62, v64, v66];
      if (v24)
      {
        id v67 = v24;
        long long v4 = (char **)[a1 containerView];
        [v4 insertSubview:v57 below:v67];
      }
      else
      {
        long long v4 = (char **)[a1 containerView];
        [v4 insertSubview:v57 below:v6];
      }
    }
    unint64_t v104 = (unint64_t)_swiftEmptyArrayStorage;
    id v68 = sub_1000DF1D4(v24, v6, (uint64_t)a1, v98, v95, width, height, v99, MidY, v52, v94);
    if (v68)
    {
      long long v4 = (char **)v68;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (!v6) {
      goto LABEL_39;
    }
    long long v4 = v6;
    if (UIAccessibilityIsReduceMotionEnabled()) {
      goto LABEL_38;
    }
    double v94 = v56;
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = v4;
    id v70 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    *(void *)&long long v103 = sub_1000DFDEC;
    *((void *)&v103 + 1) = v69;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v102 = sub_1000162D4;
    *((void *)&v102 + 1) = &unk_1008BC240;
    uint64_t v71 = _Block_copy(&aBlock);
    uint64_t v72 = v4;
    swift_release();
    id v73 = [v70 initWithDuration:v71 controlPoint1:0.216 controlPoint2:0.33 animations:0.83];
    _Block_release(v71);
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = v72;
    *(void *)&long long v103 = sub_1000DFE00;
    *((void *)&v103 + 1) = v74;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v102 = sub_1000FA428;
    *((void *)&v102 + 1) = &unk_1008BC290;
    id v75 = _Block_copy(&aBlock);
    uint64_t v76 = v72;
    swift_release();
    [v73 addCompletion:v75];
    _Block_release(v75);

    long long v4 = (char **)v73;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_62;
    }
    while (1)
    {
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      double v56 = v94;
LABEL_38:

LABEL_39:
      id v77 = sub_1000DF550(v24, v6, (uint64_t)a1, v98, v95, width, height, v99, MidY);
      if (v77)
      {
        id v78 = v77;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        a1 = *(void **)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if ((unint64_t)a1 >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      unint64_t v79 = v104;
      if (v104 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v80 = _CocoaArrayWrapper.endIndex.getter();
        if (!v80) {
          goto LABEL_52;
        }
      }
      else
      {
        uint64_t v80 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v80) {
          goto LABEL_52;
        }
      }
      if (v80 >= 1) {
        break;
      }
      __break(1u);
LABEL_62:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    for (uint64_t i = 0; i != v80; ++i)
    {
      if ((v79 & 0xC000000000000001) != 0) {
        id v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v82 = *(id *)(v79 + 8 * i + 32);
      }
      id v83 = v82;
      [v82 startAnimation:v91, v92];
    }
LABEL_52:
    swift_bridgeObjectRelease_n();
    if (v24)
    {
      id v84 = v24;
      if (UIAccessibilityIsReduceMotionEnabled())
      {
      }
      else
      {
        uint64_t v85 = swift_allocObject();
        *(void *)(v85 + 16) = v84;
        id v86 = objc_allocWithZone((Class)UIViewPropertyAnimator);
        *(void *)&long long v103 = sub_1000D8248;
        *((void *)&v103 + 1) = v85;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v102 = sub_1000162D4;
        *((void *)&v102 + 1) = &unk_1008BC1F0;
        uint64_t v87 = _Block_copy(&aBlock);
        id v88 = v84;
        swift_release();
        id v89 = [v86 initWithDuration:v87 controlPoint1:0.13 controlPoint2:0.17 animations:0.67 1.0];
        _Block_release(v87);

        if (v89)
        {
          [v89 startAnimationAfterDelay:0.083];
          id v90 = v89;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          return (id)swift_bridgeObjectRelease();
        }
      }
    }

    return (id)swift_bridgeObjectRelease();
  }
  id result = [v49 view];
  if (result)
  {
    uint64_t v51 = result;
    [result transform];
    long long v92 = v102;
    long long v93 = aBlock;
    long long v91 = v103;

    long long aBlock = v93;
    long long v102 = v92;
    long long v103 = v91;
    [v24 setTransform:&aBlock];
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

id sub_1000DF1D4(void *a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  if (UIAccessibilityIsReduceMotionEnabled()) {
    return 0;
  }
  id v24 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:180.0 damping:22.0 initialVelocity:0.0];
  id v23 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v24 timingParameters:0.0];

  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v11;
  *(void *)(v25 + 24) = a1;
  *(double *)(v25 + 32) = a4;
  *(double *)(v25 + 40) = a5;
  *(double *)(v25 + 48) = a6;
  *(double *)(v25 + 56) = a7;
  *(double *)(v25 + 64) = a8;
  *(double *)(v25 + 72) = a9;
  *(void *)(v25 + 80) = a2;
  *(double *)(v25 + 88) = a10;
  *(double *)(v25 + 96) = a11;
  double v38 = sub_1000DFD14;
  uint64_t v39 = v25;
  id v34 = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  double v36 = sub_1000162D4;
  CGRect v37 = &unk_1008BC150;
  uint64_t v26 = _Block_copy(&v34);
  id v27 = a2;
  id v28 = v11;
  id v29 = a1;
  swift_release();
  [v23 addAnimations:v26];
  _Block_release(v26);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a3;
  *(void *)(v30 + 24) = v28;
  double v38 = sub_1000DFD70;
  uint64_t v39 = v30;
  id v34 = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  double v36 = sub_1000FA428;
  CGRect v37 = &unk_1008BC1A0;
  CGFloat v31 = _Block_copy(&v34);
  id v32 = v28;
  swift_unknownObjectRetain();
  swift_release();
  [v23 addCompletion:v31];
  _Block_release(v31);
  return v23;
}

id sub_1000DF440(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, void *a10, void *a11)
{
  sub_100621728(1);
  [a10 setBounds:a1, a2, a3, a4];
  [a10 setCenter:a5, a6];
  if (a10)
  {
    v22[0] = 0x3FF0000000000000;
    v22[1] = 0;
    long long v22[2] = 0;
    v22[3] = 0x3FF0000000000000;
    void v22[4] = 0;
    v22[5] = 0;
    [a10 setTransform:v22];
  }
  [a11 setBounds:a1, a2, a3, a4];
  return [a11 setCenter:a7, a8];
}

id sub_1000DF550(void *a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  if (!UIAccessibilityIsReduceMotionEnabled()) {
    return 0;
  }
  [a1 setBounds:a4, a5, a6, a7];
  [a1 setCenter:a8, a9];
  double v19 = (void *)swift_allocObject();
  v19[2] = v9;
  void v19[3] = a1;
  void v19[4] = a2;
  id v20 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  uint64_t v35 = sub_1000DFC6C;
  double v36 = v19;
  CGFloat v31 = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  double v33 = sub_1000162D4;
  id v34 = &unk_1008BC0B0;
  CGFloat v21 = _Block_copy(&v31);
  id v22 = a2;
  id v23 = v9;
  id v24 = a1;
  swift_release();
  id v25 = [v20 initWithDuration:0 curve:v21 animations:0.3];
  _Block_release(v21);
  uint64_t v26 = (void *)swift_allocObject();
  objc_super v26[2] = a2;
  v26[3] = a3;
  v26[4] = v23;
  uint64_t v35 = sub_1000DFCC0;
  double v36 = v26;
  CGFloat v31 = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  double v33 = sub_1000FA428;
  id v34 = &unk_1008BC100;
  id v27 = _Block_copy(&v31);
  id v28 = v23;
  id v29 = v22;
  swift_unknownObjectRetain();
  swift_release();
  [v25 addCompletion:v27];
  _Block_release(v27);
  return v25;
}

id sub_1000DF7AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC8AppStore27AnimatedTransitionWithTasks_tasks);
  id result = (id)swift_beginAccess();
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    double v9 = (unsigned char *)(v7 + 48);
    do
    {
      if (*v9 == 1)
      {
        CGFloat v10 = (void (*)(uint64_t, uint64_t))*((void *)v9 - 2);
        swift_retain();
        v10(1, 1);
        swift_release();
      }
      v9 += 24;
      --v8;
    }
    while (v8);
    id result = (id)swift_bridgeObjectRelease();
  }
  if (a2)
  {
    [a2 setAlpha:1.0];
    v11[0] = 0x3FF0000000000000;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = 0x3FF0000000000000;
    void v11[4] = 0;
    v11[5] = 0;
    id result = [a2 setTransform:v11];
  }
  if (a3) {
    return [a3 setAlpha:0.0];
  }
  return result;
}

uint64_t sub_1000DF8C4(uint64_t result, id a2, id a3)
{
  if (!result)
  {
    uint64_t v8 = v3;
    if (a2) {
      [a2 setHidden:1];
    }
    [a3 completeTransition:1 v4, v8, v5, v6];
    return sub_100621728(2);
  }
  return result;
}

void sub_1000DF928(void *a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  if (a1)
  {
    id v20 = *(void **)(v11 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_toCollectionViewController);
    if (v20)
    {
      id v21 = a1;
      id v22 = v20;
      id v23 = [v22 view];
      if (!v23)
      {
        __break(1u);
        return;
      }
      id v24 = v23;
      [v23 addSubview:v21];
    }
    else
    {
      id v27 = a1;
      id v24 = [a3 containerView];
      [v24 insertSubview:v27 below:a2];
    }

    [a1 setHidden:0];
    [a1 setBounds:a6, a7, a8, a9];
    [a1 setCenter:a4 - a10, a5 - a11];
    [a1 setNeedsLayout];
    [a1 layoutIfNeeded];
    [a1 setAlpha:0.0];
  }
}

void sub_1000DFB20()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore36AppPromotionDetailPageCloseAnimation_detailPageViewController);
}

id sub_1000DFB70()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppPromotionDetailPageCloseAnimation();
  [super dealloc];
}

uint64_t type metadata accessor for AppPromotionDetailPageCloseAnimation()
{
  return self;
}

uint64_t sub_1000DFC24()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_1000DFC6C()
{
  return sub_1000DF7AC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1000DFC78()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000DFCC0(uint64_t a1)
{
  return sub_1000DF8C4(a1, *(id *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_1000DFCCC()
{
  return _swift_deallocObject(v0, 104, 7);
}

id sub_1000DFD14()
{
  return sub_1000DF440(*(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72), *(double *)(v0 + 88), *(double *)(v0 + 96), *(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 80));
}

uint64_t sub_1000DFD30()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DFD70(uint64_t result)
{
  if (!result)
  {
    [*(id *)(v1 + 16) completeTransition:1];
    return sub_100621728(2);
  }
  return result;
}

uint64_t sub_1000DFDB4()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000DFDEC()
{
  return [*(id *)(v0 + 16) setAlpha:0.0];
}

id sub_1000DFE00(id result)
{
  if (!result) {
    return [*(id *)(v1 + 16) setHidden:1];
  }
  return result;
}

char *sub_1000DFE54(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v2 + qword_1009831D0) = 0;
  uint64_t v5 = qword_1009831D8;
  type metadata accessor for ProductReviewFlowPreviewingCollectionElementsObserver();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 0;
  *(void *)(v2 + v5) = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = sub_1003F0F58(a1, a2);
  id result = (char *)[v7 collectionView];
  if (result)
  {
    double v9 = result;
    sub_100082C28(&qword_100985E10);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1007BEDF0;
    *(void *)(v10 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
    *(void *)(v10 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    sub_100084CF0(0, (unint64_t *)&qword_100986090);
    UIView.registerForTraitChanges<A>(_:handler:)();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    if (ReviewsDiffablePagePresenter.trailingNavBarAction.getter())
    {
      id v11 = [v7 navigationItem];
      sub_100084CF0(0, (unint64_t *)&qword_100981A18);
      swift_retain();
      uint64_t v12 = Action.title.getter();
      double v14 = v13;
      swift_release();
      long long v22 = 0u;
      long long v23 = 0u;
      swift_retain();
      uint64_t v15 = swift_retain();
      v24.is_nil = sub_1000E28C4(v15, a1, 0, (uint64_t)&v22);
      v16.value._countAndFlagsBits = v12;
      v16.value._object = v14;
      v24.value.super.Class isa = 0;
      v25.value.super.super.Class isa = 0;
      Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v16, v24, v25, v26).super.super.isa;
      [v11 setRightBarButtonItem:isa, v22, v23];
      swift_release();
    }
    double v18 = v7;
    ReviewsDiffablePagePresenter.title.getter();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v18 setTitle:v19];

    v18[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_prefersLargeTitle] = 1;
    id v20 = v18;
    id v21 = [v20 navigationItem];
    [v21 setLargeTitleDisplayMode:3];

    swift_release();
    swift_release();

    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000E0110(void *a1)
{
  return [a1 reloadData];
}

uint64_t sub_1000E011C(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_100082C28(&qword_100983760);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ItemLayoutContext();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)&double v13 = __chkstk_darwin(v11).n128_u64[0];
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20.receiver = v1;
  v20.super_class = ObjectType;
  uint64_t result = [v20 viewWillAppear:a1 & 1 v13];
  uint64_t v17 = qword_1009831D0;
  if ((*((unsigned char *)v1 + qword_1009831D0) & 1) == 0)
  {
    sub_1000E03C4((uint64_t)v6);
    uint64_t v18 = sub_100082C28(&qword_100983768);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v6, 1, v18) == 1)
    {
      uint64_t result = sub_100082BCC((uint64_t)v6, &qword_100983760);
    }
    else
    {
      NSString v19 = &v6[*(int *)(v18 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v6, v11);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v19, v7);
      sub_1000E10DC((uint64_t)v15);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
  }
  *((unsigned char *)v1 + v17) = 1;
  return result;
}

uint64_t sub_1000E03C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v86 = type metadata accessor for ProductReview.ReviewSource();
  unint64_t i = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  id v70 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for ItemLayoutContext.Metadata();
  uint64_t v76 = *(void (***)(char *, uint64_t))(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v81 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for ItemLayoutContext();
  uint64_t v62 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v71 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for IndexPath();
  uint64_t v61 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  id v84 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100082C28((uint64_t *)&unk_100991050);
  uint64_t v69 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28(&qword_100983780);
  id v77 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v8 - 8);
  __chkstk_darwin(v8);
  id v68 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100082C28(&qword_100983788);
  __chkstk_darwin(v10 - 8);
  id v83 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v56 - v13;
  uint64_t v87 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v15 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100082C28(&qword_100991060);
  __chkstk_darwin(v18 - 8);
  objc_super v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ShelfLayoutContext();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  id v89 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReviewsDiffablePagePresenter.initialFocusedReviewId.getter();
  if (!*((void *)&v91 + 1))
  {
    UIImage_optional v24 = &qword_100981560;
    UIAction_optional v25 = (char *)&v90;
    goto LABEL_5;
  }
  v93[0] = v90;
  v93[1] = v91;
  uint64_t v94 = v92;
  sub_1000E21F4(v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_1000E2D1C((uint64_t)v93);
    UIImage_optional v24 = &qword_100991060;
    UIAction_optional v25 = v20;
LABEL_5:
    sub_100082BCC((uint64_t)v25, v24);
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v89, v20, v21);
  UIMenu_optional v26 = (id *)(v1 + qword_100990ED0);
  swift_beginAccess();
  if (*v26)
  {
    id v27 = *v26;
    ShelfLayoutContext.shelf.getter();
    uint64_t v28 = dispatch thunk of ModelMappedDiffableDataSource.itemModels(in:)();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v87);
    if (v28)
    {
      uint64_t v57 = v22;
      uint64_t v58 = v21;
      uint64_t v87 = (uint64_t)v7;
      unint64_t v30 = 0;
      uint64_t v64 = v28;
      unint64_t v31 = *(void *)(v28 + 16);
      uint64_t v63 = v69 + 16;
      uint64_t v85 = (void (**)(uint64_t, char *, uint64_t))(v69 + 32);
      id v78 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v77 + 7);
      v77 += 6;
      ++v76;
      double v66 = (uint64_t (**)(char *, uint64_t))(i + 88);
      int v65 = enum case for ProductReview.ReviewSource.user(_:);
      id v73 = (void (**)(char *, uint64_t))(v62 + 8);
      uint64_t v72 = (uint64_t (**)(char *, uint64_t))(v61 + 8);
      id v75 = (void (**)(uint64_t, uint64_t))(v69 + 8);
      double v60 = (uint64_t (**)(char *, uint64_t))(i + 8);
      double v59 = (void (**)(char *, uint64_t))(i + 96);
      uint64_t v32 = v71;
      double v33 = (unint64_t *)v83;
      id v34 = v84;
      uint64_t v36 = v88;
      uint64_t v35 = v89;
      for (i = v31; ; unint64_t v31 = i)
      {
        if (v30 == v31)
        {
          uint64_t v37 = 1;
          unint64_t v30 = v31;
        }
        else
        {
          if (v30 >= *(void *)(v64 + 16))
          {
            __break(1u);
            return result;
          }
          uint64_t v38 = v69;
          uint64_t v39 = &v68[*(int *)(v8 + 48)];
          (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v39, v64+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v30, v88);
          double v40 = (char *)v33 + *(int *)(v8 + 48);
          *double v33 = v30;
          double v41 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
          uint64_t v36 = v88;
          uint64_t v35 = v89;
          v41(v40, v39, v88);
          uint64_t v37 = 0;
          ++v30;
          id v34 = v84;
        }
        (*v78)(v33, v37, 1, v8);
        sub_100082CD0((uint64_t)v33, (uint64_t)v14, &qword_100983788);
        if ((*v77)(v14, 1, v8) == 1)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v58);
          sub_1000E2D1C((uint64_t)v93);
          uint64_t v50 = sub_100082C28(&qword_100983768);
          uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
          uint64_t v52 = v67;
          return v51(v52, 1, 1, v50);
        }
        uint64_t v42 = v87;
        (*v85)(v87, &v14[*(int *)(v8 + 48)], v36);
        ShelfLayoutContext.index.getter();
        IndexPath.init(item:section:)();
        double v43 = v81;
        ItemLayoutContext.Metadata.init()();
        ShelfLayoutContext.itemLayoutContext(for:at:metadata:)();
        (*v76)(v43, v82);
        type metadata accessor for ProductReview();
        sub_1000E2D74(&qword_100983790, (void (*)(uint64_t))&type metadata accessor for ProductReview);
        ItemLayoutContext.typedModel<A>(as:)();
        if ((void)v90)
        {
          double v44 = v70;
          ProductReview.source.getter();
          int v45 = (*v66)(v44, v86);
          if (v45 == v65)
          {
            (*v59)(v44, v86);
            Review.id.getter();
            char v46 = static AnyHashable.== infix(_:_:)();
            swift_release();
            swift_release();
            sub_1000E2D1C((uint64_t)&v90);
            uint64_t v36 = v88;
            (*v75)(v87, v88);
            if (v46)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v57 + 8))(v89, v58);
              sub_1000E2D1C((uint64_t)v93);
              uint64_t v53 = sub_100082C28(&qword_100983768);
              uint64_t v54 = v67;
              uint64_t v55 = v67 + *(int *)(v53 + 48);
              (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v67, v84, v79);
              (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v55, v71, v80);
              return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v54, 0, 1, v53);
            }
            uint64_t v32 = v71;
            (*v73)(v71, v80);
            id v34 = v84;
            uint64_t result = (*v72)(v84, v79);
          }
          else
          {
            swift_release();
            double v47 = v71;
            (*v73)(v71, v80);
            id v34 = v84;
            (*v72)(v84, v79);
            uint64_t v36 = v88;
            (*v75)(v87, v88);
            double v48 = v44;
            uint64_t v32 = v47;
            uint64_t result = (*v60)(v48, v86);
          }
        }
        else
        {
          (*v73)(v32, v80);
          (*v72)(v34, v79);
          uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))*v75)(v42, v36);
        }
        double v33 = (unint64_t *)v83;
        uint64_t v35 = v89;
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v89, v21);
  sub_1000E2D1C((uint64_t)v93);
LABEL_22:
  uint64_t v49 = v67;
  uint64_t v50 = sub_100082C28(&qword_100983768);
  uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
  uint64_t v52 = v49;
  return v51(v52, 1, 1, v50);
}

uint64_t sub_1000E10DC(uint64_t a1)
{
  v15[0] = a1;
  uint64_t v2 = sub_100082C28((uint64_t *)&unk_100991050);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082C28((uint64_t *)&unk_10098FE00);
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_100082C28(&qword_100983770);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.mutableState.getter();
  WritableStateLens.init(_:)();
  sub_1000E2CC8();
  WritableStateLens<A>.updateValue(_:)();
  ItemLayoutContext.item.getter();
  type metadata accessor for ReviewsDiffablePagePresenter();
  sub_1000E2D74(&qword_100983730, (void (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter);
  ReloadableItemPagePresenter.reloadItem(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v11 = [v1 collectionView:v15[0]];
  if (v11)
  {
    uint64_t v12 = v11;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v12 scrollToItemAtIndexPath:isa atScrollPosition:1 animated:0];
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1000E13AC(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1000E011C(a3);
}

uint64_t sub_1000E1400(uint64_t a1)
{
  uint64_t v2 = sub_100082C28(&qword_100983758);
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v6, v2) != enum case for DiffablePagePresenter.UpdatePhase.started<A>(_:)
    || (ReviewsDiffablePagePresenter.isUpdatingSortOption.getter() & 1) == 0)
  {
    sub_100737E74(a1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_1000E1540(void *a1, double a2, double a3)
{
  v17.receiver = v3;
  v17.super_class = (Class)swift_getObjectType();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2, a3];
  uint64_t v15 = (void (*)(int))static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
  uint64_t v16 = 0;
  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1006DEF0C;
  uint64_t v14 = &unk_1008BC308;
  uint64_t v7 = _Block_copy(&v11);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v3;
  uint64_t v15 = sub_1000E2CC0;
  uint64_t v16 = v8;
  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1006DEF0C;
  uint64_t v14 = &unk_1008BC358;
  uint64_t v9 = _Block_copy(&v11);
  id v10 = v3;
  swift_release();
  [a1 animateAlongsideTransition:v7 completion:v9];
  _Block_release(v9);
  _Block_release(v7);
}

void sub_1000E16B8(int a1, id a2)
{
  id v2 = [a2 collectionView];
  if (v2)
  {
    id v3 = v2;
    [v2 reloadData];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000E1718(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  swift_unknownObjectRetain();
  id v9 = a1;
  sub_1000E1540(a5, a2, a3);
  swift_unknownObjectRelease();
}

unint64_t sub_1000E1798@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + qword_1009E2BC0);
  type metadata accessor for PageGridCache();
  swift_allocObject();
  swift_retain();
  uint64_t v4 = PageGridCache.init()();
  swift_allocObject();
  uint64_t v5 = PageGridCache.init()();
  a1[3] = (uint64_t)&type metadata for ReviewsPageGridProvider;
  unint64_t result = sub_1000E2C34();
  a1[4] = result;
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v3;
  return result;
}

uint64_t sub_1000E183C@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  long long v19 = xmmword_1007BF1D0;
  sub_1000E2D74(&qword_100983728, (void (*)(uint64_t))type metadata accessor for ReviewsDiffablePageViewController);
  uint64_t v2 = ShelfBasedCollectionViewController.shelfSupplementaryProvider.getter();
  v20[3] = swift_getObjectType();
  v20[0] = v2;
  uint64_t v3 = ShelfBasedCollectionViewController.collectionElementsObserver.getter();
  v21[3] = swift_getObjectType();
  v21[0] = v3;
  sub_10008A898((uint64_t)v20, (uint64_t)v17);
  sub_10008A898((uint64_t)v17, (uint64_t)v16);
  sub_100082C28((uint64_t *)&unk_1009910B0);
  sub_100082C28(&qword_1009816A0);
  if ((swift_dynamicCast() & 1) == 0) {
    long long v18 = 0uLL;
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v17);
  if ((void)v18)
  {
    long long v14 = v18;
    uint64_t v4 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_100031974(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    }
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      uint64_t v4 = sub_100031974((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    v4[2] = v6 + 1;
    *(_OWORD *)&v4[2 * v6 + 4] = v14;
  }
  else
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  sub_10008A898((uint64_t)v21, (uint64_t)v17);
  sub_10008A898((uint64_t)v17, (uint64_t)v16);
  sub_100082C28((uint64_t *)&unk_1009910B0);
  sub_100082C28(&qword_1009816A0);
  if ((swift_dynamicCast() & 1) == 0) {
    long long v18 = 0uLL;
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v17);
  if ((void)v18)
  {
    long long v15 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_100031974(0, v4[2] + 1, 1, v4);
    }
    unint64_t v8 = v4[2];
    unint64_t v7 = v4[3];
    long long v9 = v15;
    if (v8 >= v7 >> 1)
    {
      uint64_t v13 = sub_100031974((void *)(v7 > 1), v8 + 1, 1, v4);
      long long v9 = v15;
      uint64_t v4 = v13;
    }
    v4[2] = v8 + 1;
    *(_OWORD *)&v4[2 * v8 + 4] = v9;
  }
  swift_arrayDestroy();
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter();
  uint64_t v10 = type metadata accessor for GenericPageLayoutSectionProvider();
  swift_allocObject();
  sub_100082C6C((uint64_t)v17, (uint64_t)v16);
  swift_retain();
  uint64_t v11 = BasePageLayoutSectionProvider.init(componentTypeMappingProvider:visibleItemsObserverProviders:componentHeightCache:useEstimatedLayoutSizing:)();
  uint64_t result = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v17);
  a1[3] = v10;
  a1[4] = (uint64_t)&protocol witness table for BasePageLayoutSectionProvider;
  *a1 = v11;
  return result;
}

uint64_t sub_1000E1B7C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph);
  type metadata accessor for ReviewsPageShelfSupplementaryProvider();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  uint64_t v3 = sub_1000E2D74(&qword_100983738, (void (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter);
  *(void *)(v2 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 32) = v3;
  swift_unknownObjectWeakAssign();
  *(void *)(v2 + 16) = v1;
  sub_1000E2D74(&qword_100983748, (void (*)(uint64_t))type metadata accessor for ReviewsPageShelfSupplementaryProvider);
  swift_retain();
  return v2;
}

uint64_t sub_1000E1C8C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  sub_100735F44();
  type metadata accessor for CompoundCollectionElementsObserver();
  if (swift_dynamicCastClass())
  {
    uint64_t v2 = CompoundCollectionElementsObserver.removingChildren(where:)();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_allocObject();
    uint64_t v2 = CompoundCollectionElementsObserver.init(children:)();
  }
  sub_100082C28(&qword_1009910C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1007BF1D0;
  sub_1000E2D74(&qword_100983728, (void (*)(uint64_t))type metadata accessor for ReviewsDiffablePageViewController);
  ShelfBasedCollectionViewController.shelfComponentTypeMappingProvider.getter();
  sub_1000E2D74(&qword_100983730, (void (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter);
  sub_1000E2D74(&qword_100983738, (void (*)(uint64_t))&type metadata accessor for ReviewsDiffablePagePresenter);
  type metadata accessor for ProductReviewSelectionHandlerCollectionElementsObserver();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v4 + qword_100985D20) = 0;
  swift_unknownObjectWeakAssign();
  sub_100082C6C((uint64_t)v9, v4 + qword_100985D18);
  swift_retain();
  swift_retain();
  uint64_t v5 = SelectionHandlerCollectionElementsObserver.init(presenter:componentHeightCache:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v9);
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = &protocol witness table for SelectionHandlerCollectionElementsObserver;
  uint64_t v6 = *(void *)(v1 + qword_1009831D8);
  uint64_t v7 = sub_1000E2D74(&qword_100983740, (void (*)(uint64_t))type metadata accessor for ProductReviewFlowPreviewingCollectionElementsObserver);
  *(void *)(v3 + 48) = v6;
  *(void *)(v3 + 56) = v7;
  swift_retain();
  CompoundCollectionElementsObserver.addChildren(_:)((Swift::OpaquePointer)v3);
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_1000E1F50()
{
  return swift_dynamicCastClass() != 0;
}

void sub_1000E1F8C()
{
  uint64_t v1 = v0;
  id v2 = [v0 traitCollection];
  uint64_t v3 = (void *)UITraitCollection.modifyingTraits(_:)();

  id v4 = [v1 view];
  if (v4)
  {
    uint64_t v5 = v4;
    if (qword_1009804D0 != -1) {
      swift_once();
    }
    id v6 = [(id)qword_1009E6FD0 resolvedColorWithTraitCollection:v3];
    [v5 setBackgroundColor:v6];

    *(unsigned char *)(*(void *)&v1[qword_1009831D8] + 16) = 1;
  }
  else
  {
    __break(1u);
  }
}

void sub_1000E20B4(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v4 = a2;
    id v3 = [v4 traitCollection];
    [v3 userInterfaceLevel];

    sub_100071F4C(a1, *(void *)(a1 + 24));
    UIMutableTraits.userInterfaceLevel.setter();
  }
}

void sub_1000E215C()
{
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    id v3 = [self systemBackgroundColor];
    [v2 setBackgroundColor:v3];

    *(unsigned char *)(*(void *)&v0[qword_1009831D8] + 16) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_1000E21F4(char *a1@<X8>)
{
  id v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = type metadata accessor for Shelf.ContentType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v47 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v46 = (char *)&v31 - v8;
  uint64_t v44 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v9 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  double v43 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28(&qword_100991060);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ShelfLayoutContext();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  int v45 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v17 = (id *)&v1[qword_100990ED0];
  swift_beginAccess();
  if (*v17)
  {
    id v18 = *v17;
    uint64_t v42 = v2;
    id v19 = [v2 collectionView];
    if (!v19)
    {
LABEL_22:
      __break(1u);
      return;
    }
    objc_super v20 = v19;
    uint64_t v21 = dispatch thunk of UICollectionViewDiffableDataSource.numberOfSections(in:)();

    if (v21 < 0)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    if (v21)
    {
      uint64_t v32 = a1;
      uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      double v41 = (void (**)(char *, char *, uint64_t))(v15 + 32);
      uint64_t v38 = (void (**)(char *, uint64_t))(v9 + 8);
      unsigned int v37 = enum case for Shelf.ContentType.productReview(_:);
      uint64_t v36 = (void (**)(char *, void, uint64_t))(v5 + 104);
      double v40 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v31 = v15;
      uint64_t v35 = (void (**)(char *, uint64_t))(v15 + 8);
      uint64_t v23 = sub_1000E2D74(&qword_100983728, (void (*)(uint64_t))type metadata accessor for ReviewsDiffablePageViewController);
      uint64_t v24 = 0;
      uint64_t v39 = v14;
      uint64_t v34 = v23;
      UIAction_optional v25 = v43;
      while (v21 != v24)
      {
        ShelfBasedCollectionViewController.shelfLayoutContext(for:)();
        if ((*v22)(v13, 1, v14) == 1)
        {
          sub_100082BCC((uint64_t)v13, &qword_100991060);
        }
        else
        {
          double v33 = *v41;
          v33(v45, v13, v14);
          ShelfLayoutContext.shelf.getter();
          swift_getKeyPath();
          uint64_t v26 = v44;
          ReadOnlyLens.subscript.getter();
          swift_release();
          (*v38)(v25, v26);
          (*v36)(v47, v37, v4);
          sub_1000E2D74((unint64_t *)&qword_100983798, (void (*)(uint64_t))&type metadata accessor for Shelf.ContentType);
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          if (v51 == v49 && v52 == v50)
          {
            swift_bridgeObjectRelease_n();
            unint64_t v30 = *v40;
            (*v40)(v47, v4);
            v30(v46, v4);
LABEL_17:
            a1 = v32;
            uint64_t v14 = v39;
            v33(v32, v45, v39);
            uint64_t v29 = 0;
LABEL_18:
            uint64_t v15 = v31;
            goto LABEL_19;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v28 = *v40;
          (*v40)(v47, v4);
          v28(v46, v4);
          if (v27) {
            goto LABEL_17;
          }
          uint64_t v14 = v39;
          (*v35)(v45, v39);
        }
        if (v21 == ++v24)
        {
          uint64_t v29 = 1;
          a1 = v32;
          goto LABEL_18;
        }
      }
      __break(1u);
      goto LABEL_21;
    }
  }
  uint64_t v29 = 1;
LABEL_19:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(a1, v29, 1, v14);
}

unsigned char *sub_1000E27F8(unsigned char *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_1000E2800()
{
  return swift_release();
}

uint64_t sub_1000E2810()
{
  return swift_release();
}

uint64_t type metadata accessor for ReviewsDiffablePageViewController()
{
  uint64_t result = qword_100983208;
  if (!qword_100983208) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E286C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000E28BC()
{
  return type metadata accessor for ReviewsDiffablePageViewController();
}

uint64_t sub_1000E28C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Action.title.getter();
  if (v7)
  {
    uint64_t v8 = Action.artwork.getter();
    if (v8)
    {
      uint64_t v9 = v8;
      if (dispatch thunk of Artwork.isSystemImage.getter())
      {
        static SystemImage.load(artwork:with:includePrivateImages:)();
      }
      else if (dispatch thunk of Artwork.isBundleImage.getter())
      {
        sub_100378E2C(v9, 0);
      }
      swift_release();
    }
    sub_100084CF0(0, (unint64_t *)&qword_10098F030);
    sub_1000897C0(a4, (uint64_t)v13);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a2;
    v11[3] = &protocol witness table for ReviewsDiffablePagePresenter;
    void v11[4] = a1;
    sub_100082CD0((uint64_t)v13, (uint64_t)(v11 + 5), (uint64_t *)&unk_100982B40);
    uint64_t v10 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v10 = 0;
  }
  sub_100082BCC(a4, (uint64_t *)&unk_100982B40);
  return v10;
}

uint64_t sub_1000E2A70()
{
  return sub_1003B89BC();
}

uint64_t sub_1000E2A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Action.title.getter();
  if (v7)
  {
    uint64_t v8 = Action.artwork.getter();
    if (v8)
    {
      uint64_t v9 = v8;
      if (dispatch thunk of Artwork.isSystemImage.getter())
      {
        static SystemImage.load(artwork:with:includePrivateImages:)();
      }
      else if (dispatch thunk of Artwork.isBundleImage.getter())
      {
        sub_100378E2C(v9, 0);
      }
      swift_release();
    }
    sub_100084CF0(0, (unint64_t *)&qword_10098F030);
    sub_1000897C0(a4, (uint64_t)v13);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a2;
    v11[3] = &protocol witness table for ReviewsPagePresenter;
    void v11[4] = a1;
    sub_100082CD0((uint64_t)v13, (uint64_t)(v11 + 5), (uint64_t *)&unk_100982B40);
    uint64_t v10 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v10 = 0;
  }
  sub_100082BCC(a4, (uint64_t *)&unk_100982B40);
  return v10;
}

void sub_1000E2C2C(uint64_t a1)
{
  sub_1000E20B4(a1, *(void **)(v1 + 16));
}

unint64_t sub_1000E2C34()
{
  unint64_t result = qword_100983750;
  if (!qword_100983750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100983750);
  }
  return result;
}

uint64_t sub_1000E2C88()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000E2CC0(int a1)
{
  sub_1000E16B8(a1, *(id *)(v1 + 16));
}

unint64_t sub_1000E2CC8()
{
  unint64_t result = qword_100983778;
  if (!qword_100983778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100983778);
  }
  return result;
}

uint64_t sub_1000E2D1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000E2D74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000E2DC8()
{
  uint64_t v1 = *(void **)(v0 + 32);
  [v1 _systemContentInset];
  double v3 = v2;
  [v1 contentOffset];
  double v5 = v4;
  [v1 contentInset];
  double v7 = v6;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_100174BF8(Strong);
  double v10 = v9;

  uint64_t v11 = *(void (**)(uint64_t, double, double))(v0 + 40);
  if (v11)
  {
    double v12 = fmin((v3 + v5 + v7) / (v10 - v3), 1.0);
    if (v12 < 0.0) {
      double v13 = 0.0;
    }
    else {
      double v13 = v12;
    }
    uint64_t v14 = swift_retain();
    v11(v14, v13, 0.0);
    sub_10006012C((uint64_t)v11);
  }

  sub_1000E2EC4(v1);
}

void sub_1000E2EC4(void *a1)
{
  double v2 = v1;
  [a1 _systemContentInset];
  double v5 = v4;
  [a1 contentOffset];
  double v7 = v6;
  [a1 contentInset];
  double v9 = v5 + v7 + v8;
  [a1 frame];
  double v11 = v10;
  double v12 = (char *)v2[3];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  double v14 = sub_100174E20(Strong, v11);
  double v16 = v15;

  if (v9 >= 0.0)
  {
    double v17 = -v9;
    if (-v16 - *(double *)&v12[OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset] > -v9) {
      double v17 = -v16 - *(double *)&v12[OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset];
    }
  }
  else
  {
    double v16 = fabs(v9) + v16;
    double v17 = 0.0;
  }
  [v12 setFrame:0.0, v17, v14, v16];
  double v18 = v9 * 0.28;
  if (v9 * 0.28 < 0.0) {
    double v18 = 0.0;
  }
  id v19 = *(char **)(*(void *)&v12[OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView]
                 + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer);
  double v20 = *(double *)&v19[OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_parallaxY];
  *(double *)&v19[OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_parallaxY] = v18;
  if (v18 != v20) {
    [v19 setNeedsLayout];
  }
  uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();
  sub_100174BF8(v21);
  double v23 = v22;

  double v24 = fmin(v9 / (v23 - v5), 1.0);
  if (v24 < 0.0) {
    double v25 = 0.0;
  }
  else {
    double v25 = v24;
  }
  uint64_t v26 = (void (*)(id, double, double))v2[5];
  if (v26)
  {
    char v27 = (void *)v2[4];
    swift_retain();
    id v28 = [v27 _verticalVelocity];
    v26(v28, v25, v29);
    sub_10006012C((uint64_t)v26);
  }
  sub_1000BA350(v25);
  unint64_t v30 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v30)
  {
    uint64_t v31 = v30;
    id v32 = [v30 navigationController];

    if (v32)
    {
      id v33 = [v32 navigationBar];

      [v33 _setTitleOpacity:v25];
    }
  }
}

CGFloat sub_1000E3164()
{
  uint64_t v1 = v0;
  double v2 = *(void **)(v0 + 32);
  [v2 _systemContentInset];
  double v4 = v3;
  [v2 contentOffset];
  double v6 = v5;
  [v2 contentInset];
  double v8 = v4 + v6 + v7;
  [v2 frame];
  double v10 = v9;
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  double v13 = sub_100174E20(Strong, v10);
  double v15 = v14;

  if (v8 >= 0.0)
  {
    double v16 = -v8;
    if (-v15 - *(double *)(v11 + OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset) > -v8) {
      double v16 = -v15 - *(double *)(v11 + OBJC_IVAR____TtC8AppStore14UberHeaderView_reflectionOutset);
    }
  }
  else
  {
    double v15 = fabs(v8) + v15;
    double v16 = 0.0;
  }
  uint64_t v17 = 0;
  double v18 = v13;
  double v19 = v15;
  return CGRectGetHeight(*(CGRect *)(&v16 - 1))
       - v4
       - *(double *)(v11 + OBJC_IVAR____TtC8AppStore14UberHeaderView_contentBottomInset);
}

uint64_t sub_1000E3288()
{
  swift_unknownObjectWeakDestroy();

  sub_10006012C(*(void *)(v0 + 40));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UberScrollObserver()
{
  return self;
}

uint64_t sub_1000E3300()
{
  return ScrollObserver.willEndDragging(in:with:targetContentOffset:)();
}

uint64_t sub_1000E332C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  double v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  double v3 = sub_1000AB8DC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[40 * v8 + 32];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  sub_100082C28(&qword_100984DE0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E3498(unint64_t a1)
{
  return sub_1000E3F6C(a1, (unint64_t *)&type metadata accessor for Artwork, (unint64_t *)&unk_1009838B0, &qword_1009838A8, (uint64_t *)sub_10056C928);
}

uint64_t sub_1000E34D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1000ABA2C(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for VerticalFlowLayout.Child() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E3678(unint64_t a1)
{
  return sub_1000E3D5C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E5064);
}

uint64_t sub_1000E3690(unint64_t a1)
{
  return sub_10008C644(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E5284);
}

uint64_t sub_1000E36A8(unint64_t a1)
{
  return sub_1000E3D5C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E54A4);
}

uint64_t sub_1000E36C0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  unint64_t v3 = sub_1000AC084(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E381C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_1000AC2A4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  sub_100082C28((uint64_t *)&unk_1009838D0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E3980(unint64_t a1)
{
  return sub_10008C644(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E56C4);
}

uint64_t sub_1000E3998(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  unint64_t v3 = sub_1000ACCB0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E3AF0(unint64_t a1)
{
  return sub_1000E3F6C(a1, (unint64_t *)&type metadata accessor for ArtworkLoaderConfig, &qword_1009838C8, &qword_1009838C0, (uint64_t *)sub_10056CA64);
}

uint64_t sub_1000E3B2C(unint64_t a1)
{
  return sub_10008C644(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E58E4);
}

uint64_t sub_1000E3B44(unint64_t a1)
{
  return sub_10008C644(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E5B04);
}

uint64_t sub_1000E3B5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_1000ACBA0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  sub_100082C28(&qword_100981720);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E3CC0(unint64_t a1)
{
  return sub_1000E3D5C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E5D24);
}

uint64_t sub_1000E3CD8(unint64_t a1)
{
  return sub_1000E3D5C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E6384);
}

uint64_t sub_1000E3CF0(unint64_t a1)
{
  return sub_1000E3F6C(a1, (unint64_t *)type metadata accessor for DebugSetting, &qword_100983910, &qword_100983908, (uint64_t *)sub_10056C928);
}

uint64_t sub_1000E3D2C(unint64_t a1)
{
  return sub_1000E3D5C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E67B8);
}

uint64_t sub_1000E3D44(unint64_t a1)
{
  return sub_1000E3D5C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000E69C8);
}

uint64_t sub_1000E3D5C(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1000E3F30(unint64_t a1)
{
  return sub_1000E3F6C(a1, (unint64_t *)type metadata accessor for DebugSection, &qword_100983948, &qword_100983940, (uint64_t *)sub_10056C928);
}

uint64_t sub_1000E3F6C(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_1000E4E40(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, (void (*)(void))a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1000E4190(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (char *)v2;
  v68[1] = a2;
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_100983860);
  __chkstk_darwin(v4 - 8);
  uint64_t v72 = (char *)v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for ComponentLayoutOptions();
  uint64_t v9 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v11 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_10098FE00);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  BOOL v15 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Ratings();
  sub_1000E7108(&qword_100983870, (void (*)(uint64_t))&type metadata accessor for Ratings);
  uint64_t result = ItemLayoutContext.typedModel<A>(as:)();
  uint64_t v17 = (uint64_t)v73;
  if (v73)
  {
    swift_retain();
    ItemLayoutContext.mutableState.getter();
    type metadata accessor for ObjectGraph();
    swift_dynamicCastClassUnconditional();
    ItemLayoutContext.componentLayoutOptions.getter();
    swift_getKeyPath();
    ItemLayoutContext.subscript.getter();
    swift_release();
    double v18 = sub_1000F3FC0();
    sub_1000E6D84(v17, (uint64_t)v15, (int)v11, (uint64_t)v8, v18, v2);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v8, v71);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v69);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
    swift_getKeyPath();
    uint64_t v19 = (uint64_t)v72;
    ItemLayoutContext.subscript.getter();
    swift_release();
    uint64_t v20 = type metadata accessor for PageGrid();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
    uint64_t v21 = v2 + OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_pageGrid;
    swift_beginAccess();
    sub_100051ADC(v19, v21);
    swift_endAccess();
    uint64_t v22 = (SEL *)&selRef_accessibilityShowsBadge;
    [v3 setNeedsLayout];
    sub_1000E6FD8(v19);
    uint64_t v72 = (char *)v17;
    uint64_t v23 = Ratings.status.getter();
    if (!v24)
    {
      unint64_t v36 = OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_hasRatings;
      v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_hasRatings] = 1;
      sub_100082C28(&qword_100982B50);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1007C0090;
      double v18 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_currentRatingLabel];
      *(void *)(inited + 32) = v18;
      double v25 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_outOfRatingLabel];
      *(void *)(inited + 40) = v25;
      uint64_t v34 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_ratingCountLabel];
      *(void *)(inited + 48) = v34;
      id v73 = (void *)inited;
      specialized Array._endMutation()();
      char v27 = v73;
      unint64_t v39 = *(void *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_starViews];
      if (!(v39 >> 62))
      {
        id v40 = v18;
        id v41 = v25;
        id v42 = v34;
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
        goto LABEL_11;
      }
LABEL_44:
      sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
      id v63 = v18;
      id v64 = v25;
      id v65 = v34;
      swift_bridgeObjectRetain();
      uint64_t v66 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      unint64_t v39 = v66;
LABEL_11:
      id v73 = v27;
      sub_10008C644(v39, (uint64_t (*)(uint64_t, void, unint64_t))sub_10008C818);
      double v43 = v73;
      unint64_t v44 = *(void *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_progressBarViews];
      if (v44 >> 62)
      {
        sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
        swift_bridgeObjectRetain();
        uint64_t v67 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
        unint64_t v44 = v67;
      }
      else
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
      }
      id v73 = v43;
      sub_10008C644(v44, (uint64_t (*)(uint64_t, void, unint64_t))sub_10008C818);
      int v45 = (id *)v73;
      if (v3[v36])
      {
        id v46 = 0;
      }
      else
      {
        type metadata accessor for ProductNoRatingsView();
        id v46 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      }
      sub_1005CF5D0(v46);
      if ((unint64_t)v45 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v51 = result;
        if (result) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v51 = *(void *)(((unint64_t)v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v51)
        {
LABEL_27:
          if (v51 < 1)
          {
            __break(1u);
            return result;
          }
          for (uint64_t i = 0; i != v51; ++i)
          {
            if (((unint64_t)v45 & 0xC000000000000001) != 0) {
              id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v53 = v45[i + 4];
            }
            uint64_t v54 = v53;
            [v53 setHidden:(v3[v36] & 1) == 0];
          }
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_48:
      [v3 v22[211]];
      return swift_release();
    }
    uint64_t v71 = v23;
    double v25 = (void *)OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_hasRatings;
    v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_hasRatings] = 0;
    sub_100082C28(&qword_100982B50);
    uint64_t v26 = swift_initStackObject();
    *(_OWORD *)(v26 + 16) = xmmword_1007C0090;
    char v27 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_currentRatingLabel];
    *(void *)(v26 + 32) = v27;
    id v28 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_outOfRatingLabel];
    *(void *)(v26 + 40) = v28;
    uint64_t v22 = *(SEL **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_ratingCountLabel];
    *(void *)(v26 + 48) = v22;
    id v73 = (void *)v26;
    specialized Array._endMutation()();
    double v29 = v73;
    int64_t v30 = *(void *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_starViews];
    if ((unint64_t)v30 >> 62)
    {
      if (v30 < 0) {
        double v18 = *(void **)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_starViews];
      }
      else {
        double v18 = (void *)(v30 & 0xFFFFFFFFFFFFFF8);
      }
      sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
      id v55 = v27;
      id v56 = v28;
      uint64_t v57 = v22;
      swift_bridgeObjectRetain();
      uint64_t v58 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      int64_t v30 = v58;
    }
    else
    {
      id v31 = v27;
      id v32 = v28;
      id v33 = v22;
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
    }
    id v73 = v29;
    sub_10008C644(v30, (uint64_t (*)(uint64_t, void, unint64_t))sub_10008C818);
    uint64_t v34 = v73;
    unint64_t v35 = *(void *)&v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_progressBarViews];
    if (v35 >> 62)
    {
      sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
      swift_bridgeObjectRetain();
      uint64_t v59 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      unint64_t v35 = v59;
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
    }
    id v73 = v34;
    sub_10008C644(v35, (uint64_t (*)(uint64_t, void, unint64_t))sub_10008C818);
    unint64_t v36 = (unint64_t)v73;
    if (*((unsigned char *)v25 + (void)v3))
    {
      id v37 = 0;
    }
    else
    {
      type metadata accessor for ProductNoRatingsView();
      id v37 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    }
    sub_1005CF5D0(v37);
    if (v36 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
      if (v47) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v47 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v47)
      {
LABEL_18:
        if (v47 >= 1)
        {
          for (uint64_t j = 0; j != v47; ++j)
          {
            if ((v36 & 0xC000000000000001) != 0) {
              id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v49 = *(id *)(v36 + 8 * j + 32);
            }
            uint64_t v50 = v49;
            [v49 setHidden:(*((unsigned char *)v25 + (void)v3) & 1) == 0];
          }
          goto LABEL_39;
        }
        __break(1u);
        goto LABEL_44;
      }
    }
LABEL_39:
    swift_bridgeObjectRelease_n();
    double v60 = &v3[OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_noRatingsView];
    swift_beginAccess();
    if (*(void *)v60)
    {
      id v61 = *(id *)(*(void *)v60 + OBJC_IVAR____TtC8AppStore20ProductNoRatingsView_statusLabel);
      NSString v62 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v61 setText:v62];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = (SEL *)&selRef_accessibilityShowsBadge;
    goto LABEL_48;
  }
  return result;
}

uint64_t sub_1000E4BFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  return sub_1000E70A0(v3, a1);
}

uint64_t sub_1000E4C54(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore38ProductRatingsLegacyCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  sub_1000E7038(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1000E4CB4())()
{
  return j__swift_endAccess;
}

id sub_1000E4D14()
{
  return [v0 prepareForReuse];
}

uint64_t sub_1000E4D28()
{
  return static ConfigurableCell.reuseIdentifier(in:)();
}

uint64_t sub_1000E4D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1000E7108(&qword_1009838A0, (void (*)(uint64_t))type metadata accessor for ProductRatingsLegacyCollectionViewCell);

  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_1000E4DC8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1000E4E40(a1, a2, a3, (void (*)(void))&type metadata accessor for Artwork, (unint64_t *)&unk_1009838B0, &qword_1009838A8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10056C928);
}

uint64_t sub_1000E4E04(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1000E4E40(a1, a2, a3, (void (*)(void))type metadata accessor for HeroCarouselScrollView.PageViewTracker, &qword_100983938, &qword_100983930, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10056C928);
}

uint64_t sub_1000E4E40(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1000E7150(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_100082C28(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E5064(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_100983968, &qword_100983958);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_100983958);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, &qword_100983960);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E5284(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_100983980, &qword_100983978);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_100983978);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, &qword_100983970);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E54A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_100983A18, &qword_100983A08);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_100983A08);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, &qword_100983A10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E56C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_1009838E8, &qword_1009838E0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_1009838E0);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E58E4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_100983A00, &qword_1009839F8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_1009839F8);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, (unint64_t *)&qword_1009839F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E5B04(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150((unint64_t *)&unk_100983A30, &qword_100983A28);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_100983A28);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, &qword_100983A20);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E5D24(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150((unint64_t *)&unk_1009839E0, (uint64_t *)&unk_1009839D0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28((uint64_t *)&unk_1009839D0);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, (unint64_t *)&qword_100989350);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E5F44(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_1009839C8, &qword_1009839C0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_1009839C0);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, (unint64_t *)&qword_1009839B8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E6164(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_100983928, &qword_100983920);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_100983920);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, &qword_100983918);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E6384(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_1009839B0, &qword_1009839A0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_1009839A0);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, &qword_1009839A8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E65A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_100983900, &qword_1009838F8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_1009838F8);
          uint64_t v12 = sub_10056CACC(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100082C28(&qword_1009838F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E67B8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_100983950, (uint64_t *)&unk_1009838D0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28((uint64_t *)&unk_1009838D0);
          uint64_t v12 = sub_10056C9FC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for CGColor(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E69C8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E7150(&qword_100983998, &qword_100983988);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100082C28(&qword_100983988);
          uint64_t v12 = sub_10056C994(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100084CF0(0, (unint64_t *)&qword_100983990);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_1000E6BEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = *v4;
  int64_t v8 = *((void *)*v4 + 2);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v9 > *((void *)v7 + 3) >> 1) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        int64_t v13 = v8 + v6;
      }
      else {
        int64_t v13 = v8;
      }
      uint64_t result = sub_1000AD184(result, v13, 1, v7);
      uint64_t v7 = result;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v14 = *((void *)v7 + 2);
  if ((*((void *)v7 + 3) >> 1) - v14 < v6) {
    goto LABEL_25;
  }
  if (v6 < 0) {
    goto LABEL_27;
  }
  uint64_t v15 = &v7[2 * v14 + 4];
  uint64_t v16 = (char *)(a2 + 16 * a3);
  if (v16 < (char *)&v15[2 * v6] && v15 < (double *)&v16[16 * v6]) {
    goto LABEL_27;
  }
  uint64_t result = (double *)memcpy(v15, v16, 16 * v6);
  if (!v6)
  {
LABEL_22:
    *uint64_t v4 = v7;
    return result;
  }
  uint64_t v18 = *((void *)v7 + 2);
  BOOL v19 = __OFADD__(v18, v6);
  uint64_t v20 = v18 + v6;
  if (!v19)
  {
    *((void *)v7 + 2) = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = (double *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E6D84(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void *a5, uint64_t a6)
{
  id v20 = a5;
  uint64_t v21 = a6;
  uint64_t v19 = a4;
  uint64_t v9 = sub_100082C28((uint64_t *)&unk_10098FE00);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100082C28(&qword_1009A6780);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v24[3] = type metadata accessor for Ratings();
  v24[4] = sub_1000E7108(&qword_100983870, (void (*)(uint64_t))&type metadata accessor for Ratings);
  v24[0] = a1;
  sub_100082C6C((uint64_t)v24, (uint64_t)v23);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  if (swift_dynamicCast())
  {
    int v17 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
    type metadata accessor for NilState();
    WritableStateLens.init(_:)();
    sub_1005D852C(v17, (int)v16, a3, v19, v20);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    swift_release();
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v24);
}

uint64_t sub_1000E6FD8(uint64_t a1)
{
  uint64_t v2 = sub_100082C28((uint64_t *)&unk_100983860);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000E7038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100984EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E70A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100984EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E7108(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E7150(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100078F30(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1000E71A0(uint64_t a1, NSString a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14 = v13;
  uint64_t v71 = a8;
  uint64_t v80 = a7;
  uint64_t v70 = a6;
  uint64_t v72 = a3;
  uint64_t v76 = type metadata accessor for OfferLabelStyle();
  uint64_t v75 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v74 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v73 = (char *)&v68 - v20;
  uint64_t v69 = type metadata accessor for AdamId();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  id v77 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100082C28((uint64_t *)&unk_100985730);
  __chkstk_darwin(v22 - 8);
  uint64_t v79 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for OfferButtonSubtitlePosition();
  uint64_t v24 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  id v83 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100082C28((uint64_t *)&unk_100981AC0);
  uint64_t v84 = *(void *)(v26 - 8);
  uint64_t v85 = v26;
  __chkstk_darwin(v26);
  id v28 = (char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100082C28((uint64_t *)&unk_100982860);
  __chkstk_darwin(v29 - 8);
  id v31 = (char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100082C28((uint64_t *)&unk_1009977E0);
  *(void *)&double v33 = __chkstk_darwin(v32 - 8).n128_u64[0];
  unint64_t v35 = (char *)&v68 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v36 = *(void **)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_titleLabel];
  uint64_t v81 = a5;
  if (a2) {
    a2 = String._bridgeToObjectiveC()();
  }
  uint64_t v86 = a13;
  uint64_t v82 = a12;
  [v36 setText:a2, v33];

  id v37 = *(void **)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_descriptionLabel];
  if (a4) {
    a4 = String._bridgeToObjectiveC()();
  }
  [v37 setText:a4];

  if (a11)
  {
    uint64_t v38 = enum case for Wordmark.arcade(_:);
    uint64_t v39 = type metadata accessor for Wordmark();
    uint64_t v40 = *(void *)(v39 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 104))(v35, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v39);
    sub_10008E8A0();
    id v41 = (void *)static UIColor.primaryText.getter();
    sub_1002F8FD8((uint64_t)v35, (uint64_t)v41);
  }
  else
  {
    uint64_t v42 = type metadata accessor for Wordmark();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v35, 1, 1, v42);
    sub_1002F8FD8((uint64_t)v35, 0);
  }
  uint64_t v44 = v80;
  uint64_t v43 = v81;
  uint64_t v46 = v78;
  int v45 = v79;
  sub_100082BCC((uint64_t)v35, (uint64_t *)&unk_1009977E0);
  uint64_t v47 = sub_100082C28((uint64_t *)&unk_10098AC20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v31, 1, 1, v47);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v83, enum case for OfferButtonSubtitlePosition.below(_:), v46);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v45, 1, 1, v46);
  sub_100070A94((unint64_t *)&qword_100985760, (void (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition);
  AccessibilityConditional.init(value:axValue:)();
  sub_100070F60(v43, v82, 0, (uint64_t)v31, (uint64_t)v28, v86, 0, 0);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v28, v85);
  sub_100082BCC((uint64_t)v31, (uint64_t *)&unk_100982860);
  if (v44 && a9)
  {
    uint64_t v48 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v77, a10, v69);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v49 = inject(_:from:)();
    uint64_t v51 = v50;
    type metadata accessor for CrossLinkPresenter();
    swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t v52 = CrossLinkPresenter.init(adamId:title:subtitle:includeBetaApps:view:appStateController:)(v48, v70, v44, v71, a9, 0, (uint64_t)v14, (uint64_t)&off_1008C5718, v49, v51);
    id v53 = &v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_crossLinkPresenter];
    swift_beginAccess();
    *(void *)id v53 = v52;
    swift_release();
  }
  else
  {
    uint64_t v54 = &v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_crossLinkPresenter];
    swift_beginAccess();
    *(void *)uint64_t v54 = 0;
    swift_release();
    sub_1002FE954(0, 0);
  }
  *(void *)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerDisplayProperties] = v43;
  swift_retain();
  swift_release();
  if (!v43) {
    goto LABEL_15;
  }
  swift_retain();
  id v55 = v73;
  OfferDisplayProperties.offerLabelStyle.getter();
  uint64_t v56 = v75;
  uint64_t v57 = v74;
  uint64_t v58 = v76;
  (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, enum case for OfferLabelStyle.none(_:), v76);
  sub_100070A94(&qword_100999FD0, (void (*)(uint64_t))&type metadata accessor for OfferLabelStyle);
  char v59 = dispatch thunk of static Equatable.== infix(_:_:)();
  double v60 = *(void (**)(char *, uint64_t))(v56 + 8);
  v60(v57, v58);
  v60(v55, v58);
  if (v59)
  {
    swift_release();
LABEL_15:
    long long v87 = 0u;
    long long v88 = 0u;
    uint64_t v61 = (uint64_t)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerLabelPresenter];
    swift_beginAccess();
    sub_100070BB4((uint64_t)&v87, v61);
    swift_endAccess();
    sub_1000E7C20(0, 0);
    return [v14 setNeedsLayout];
  }
  swift_retain();
  OfferDisplayProperties.adamId.getter();
  inject(_:from:)();
  type metadata accessor for ASKBagContract();
  inject(_:from:)();
  ASKBagContract.arePreordersCancellable.getter();
  swift_release();
  uint64_t v63 = type metadata accessor for OfferLabelPresenter();
  swift_allocObject();
  uint64_t v64 = OfferLabelPresenter.init(offerDisplayProperties:adamId:appStateController:arePreordersCancellable:)();
  *((void *)&v88 + 1) = v63;
  *(void *)&long long v87 = v64;
  uint64_t v65 = (uint64_t)&v14[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerLabelPresenter];
  swift_beginAccess();
  swift_retain();
  sub_100070BB4((uint64_t)&v87, v65);
  swift_endAccess();
  uint64_t v66 = self;
  id v67 = [v66 areAnimationsEnabled];
  [v66 setAnimationsEnabled:0];
  sub_100070A94(&qword_100983A40, (void (*)(uint64_t))type metadata accessor for AppShowcaseLockupView);
  swift_unknownObjectRetain();
  OfferLabelPresenter.view.setter();
  [v14 layoutIfNeeded];
  [v66 setAnimationsEnabled:v67];
  swift_release();
  return (id)swift_release();
}

id sub_1000E7C20(uint64_t a1, NSString a2)
{
  unint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC8AppStore21AppShowcaseLockupView_offerLabel];
  id result = [v5 text];
  if (!result)
  {
    if (!a2) {
      return result;
    }
    goto LABEL_10;
  }
  uint64_t v7 = result;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = v9;

  if (!a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v8 != a1 || v10 != a2)
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    id result = (id)swift_bridgeObjectRelease();
    if (v12) {
      return result;
    }
LABEL_10:
    a2 = String._bridgeToObjectiveC()();
LABEL_12:
    [v5 setText:a2];

    id v13 = [v5 text];
    if (v13)
    {
      uint64_t v14 = v13;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    char v15 = static String.isNilOrEmpty(_:)();
    swift_bridgeObjectRelease();
    [v5 setHidden:v15 & 1];
    return [v2 setNeedsLayout];
  }

  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_1000E7DD4()
{
  type metadata accessor for GuidedSearchTokenCollection();
  unint64_t v0 = sub_1000E7F90();
  uint64_t v1 = dispatch thunk of Collection.count.getter();
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (!v1)
  {
LABEL_6:
    sub_100581FD4((uint64_t)v2);
    return swift_bridgeObjectRelease();
  }
  uint64_t v3 = v1;
  uint64_t v19 = _swiftEmptyArrayStorage;
  sub_10012983C(0, v1 & ~(v1 >> 63), 0);
  uint64_t v2 = _swiftEmptyArrayStorage;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if ((v3 & 0x8000000000000000) == 0)
  {
    do
    {
      unint64_t v5 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
      swift_retain();
      v5(v18, 0);
      uint64_t v6 = GuidedSearchToken.leadingIconSymbolName.getter();
      uint64_t v16 = v7;
      uint64_t v17 = v6;
      uint64_t v8 = GuidedSearchToken.displayName.getter();
      uint64_t v15 = v9;
      char v10 = GuidedSearchToken.isSelected.getter();
      swift_release();
      uint64_t v19 = v2;
      unint64_t v11 = v0;
      unint64_t v13 = v2[2];
      unint64_t v12 = v2[3];
      if (v13 >= v12 >> 1)
      {
        sub_10012983C(v12 > 1, v13 + 1, 1);
        uint64_t v2 = v19;
      }
      v2[2] = v13 + 1;
      uint64_t v14 = &v2[5 * v13];
      v14[4] = v17;
      v14[5] = v16;
      v14[6] = v8;
      v14[7] = v15;
      *((unsigned char *)v14 + 64) = v10 & 1;
      dispatch thunk of Collection.formIndex(after:)();
      --v3;
      unint64_t v0 = v11;
    }
    while (v3);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000E7F90()
{
  unint64_t result = qword_100983A48;
  if (!qword_100983A48)
  {
    type metadata accessor for GuidedSearchTokenCollection();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100983A48);
  }
  return result;
}

uint64_t sub_1000E7FE8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + 56) = a1;
  *(void *)(v7 + 64) = a2;
  *(unsigned char *)(v7 + 72) = a3;
  *(void *)(v7 + 80) = a4;
  *(void *)(v7 + 88) = a5;
  *(unsigned char *)(v7 + 96) = a6;
  UUID.init()();
  uint64_t v18 = UUID.uuidString.getter();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v23[1] = v18;
  _OWORD v23[2] = v20;
  AnyHashable.init<A>(_:)();
  long long v21 = v25;
  *(_OWORD *)(v7 + 16) = v24;
  *(_OWORD *)(v7 + 32) = v21;
  *(void *)(v7 + 48) = v26;
  return v7;
}

uint64_t sub_1000E8138(void *a1)
{
  if (*(void *)v1 != *a1) {
    goto LABEL_10;
  }
  if ((static AnyHashable.== infix(_:_:)() & 1) == 0) {
    goto LABEL_10;
  }
  type metadata accessor for BoolUserDefaultsDebugSetting();
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2) {
    goto LABEL_10;
  }
  uint64_t v3 = v2;
  BOOL v4 = *(void *)(v2 + 56) == *(void *)(v1 + 56) && *(void *)(v2 + 64) == *(void *)(v1 + 64);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v5 & 1) != 0))
  {
    if (*(unsigned __int8 *)(v3 + 72) != *(unsigned __int8 *)(v1 + 72))
    {
LABEL_10:
      char v6 = 0;
      return v6 & 1;
    }
    if (*(void *)(v3 + 80) == *(void *)(v1 + 80) && *(void *)(v3 + 88) == *(void *)(v1 + 88)
      || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v8 & 1) != 0))
    {
      char v6 = *(unsigned char *)(v3 + 96) ^ *(unsigned char *)(v1 + 96) ^ 1;
    }
  }
  return v6 & 1;
}

void sub_1000E8250()
{
  AnyHashable.hash(into:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned char *)(v0 + 72));
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned char *)(v0 + 96));
}

uint64_t sub_1000E82E4()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E8314()
{
  sub_1000E2D1C(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BoolUserDefaultsDebugSetting()
{
  return self;
}

void sub_1000E83A8(char *a1)
{
  uint64_t v1 = *(void **)&a1[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel];
  if (v1)
  {
    id v3 = v1;
    [a1 bounds];
    [v3 setFrame:];
  }
}

id sub_1000E842C()
{
  id result = [v0 text];
  if (result)
  {
    uint64_t v2 = result;
    Class isa = (Class)[v0 font];
    if (isa)
    {
      sub_100082C28((uint64_t *)&unk_100986D50);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1007BEDF0;
      *(void *)(inited + 32) = NSFontAttributeName;
      *(void *)(inited + 64) = sub_10005A19C();
      *(void *)(inited + 40) = isa;
      char v5 = NSFontAttributeName;
      unint64_t v6 = sub_10005A234(inited);
      [v0 bounds];
      double v8 = v7;
      if (v6)
      {
        type metadata accessor for Key(0);
        sub_10005A1DC();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
      }
      else
      {
        Class isa = 0;
      }
    }
    else
    {
      [v0 bounds];
      double v8 = v9;
    }
    [v2 boundingRectWithSize:1 options:isa context:v8];
    double v11 = v10;

    [v0 bounds];
    return (id)(v12 < v11);
  }
  return result;
}

void sub_1000E85B0(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    BOOL v4 = (char *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isAnimatingSizeCategoryChange) = 1;
    char v5 = self;
    [v5 inheritedAnimationDuration];
    double v7 = v6 * 0.8;
    double v8 = *(double *)&v4[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeOutDelay];
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v4;
    long long v25 = sub_1000E964C;
    uint64_t v26 = v9;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_1000162D4;
    long long v24 = &unk_1008BC4A8;
    double v10 = _Block_copy(&aBlock);
    double v11 = v4;
    swift_release();
    [v5 animateWithDuration:131684 delay:v10 options:0 animations:v7 completion:v8];
    _Block_release(v10);
    [v5 inheritedAnimationDuration];
    double v13 = v12;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v11;
    long long v25 = sub_1000E966C;
    uint64_t v26 = v14;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_1000162D4;
    long long v24 = &unk_1008BC4F8;
    uint64_t v15 = _Block_copy(&aBlock);
    uint64_t v16 = v11;
    swift_release();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = a2;
    long long v25 = sub_1000E96D4;
    uint64_t v26 = v17;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_100526E54;
    long long v24 = &unk_1008BC548;
    uint64_t v18 = _Block_copy(&aBlock);
    uint64_t v19 = v16;
    id v20 = a2;
    swift_release();
    [v5 animateWithDuration:66148 delay:v15 options:v18 animations:v13 completion:0.0];
    _Block_release(v18);
    _Block_release(v15);
    sub_1000E888C();
  }
}

void sub_1000E888C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel];
  if (v1)
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label];
    id v40 = v1;
    [v2 bounds];
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    [v40 bounds];
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    v44.origin.CGFloat x = v4;
    v44.origin.CGFloat y = v6;
    v44.size.double width = v8;
    v44.size.double height = v10;
    if (CGRectIsEmpty(v44)
      || (v45.origin.CGFloat x = v12, v45.origin.y = v14, v45.size.width = v16, v45.size.height = v18, CGRectIsEmpty(v45)))
    {
    }
    else
    {
      v46.origin.CGFloat x = v12;
      v46.origin.CGFloat y = v14;
      v46.size.double width = v16;
      v46.size.double height = v18;
      double Height = CGRectGetHeight(v46);
      v47.origin.CGFloat x = v4;
      v47.origin.CGFloat y = v6;
      v47.size.double width = v8;
      v47.size.double height = v10;
      CGFloat v20 = Height / CGRectGetHeight(v47);
      [v40 transform];
      CGAffineTransformScale(&v41, &aBlock, 1.0 / v20, 1.0 / v20);
      long long v36 = *(_OWORD *)&v41.c;
      long long v38 = *(_OWORD *)&v41.a;
      tCGFloat x = v41.tx;
      tCGFloat y = v41.ty;
      uint64_t v23 = self;
      [v23 setAnimationsEnabled:0];
      *(_OWORD *)&aBlock.a = v38;
      *(_OWORD *)&aBlock.c = v36;
      aBlock.tCGFloat x = tx;
      aBlock.tCGFloat y = ty;
      [v40 setTransform:&aBlock];
      [v23 setAnimationsEnabled:1];
      [v2 transform];
      CGAffineTransformScale(&v41, &aBlock, v20, v20);
      long long v37 = *(_OWORD *)&v41.c;
      long long v39 = *(_OWORD *)&v41.a;
      CGFloat v24 = v41.tx;
      CGFloat v25 = v41.ty;
      [v23 inheritedAnimationDuration];
      double v27 = v26;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v0;
      *(_OWORD *)(v28 + 24) = v39;
      *(_OWORD *)(v28 + 40) = v37;
      *(CGFloat *)(v28 + 56) = v24;
      *(CGFloat *)(v28 + 64) = v25;
      *(void *)&aBlock.tCGFloat x = sub_1000E9350;
      *(void *)&aBlock.tCGFloat y = v28;
      *(void *)&aBlock.a = _NSConcreteStackBlock;
      *(void *)&aBlock.b = 1107296256;
      *(void *)&aBlock.c = sub_1000162D4;
      *(void *)&aBlock.d = &unk_1008BC3B8;
      uint64_t v29 = _Block_copy(&aBlock);
      uint64_t v30 = v0;
      swift_release();
      [v23 animateWithDuration:197220 delay:v29 options:0 animations:v27 completion:0.0];
      _Block_release(v29);
      [v23 inheritedAnimationDuration];
      double v32 = v31;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v30;
      *(void *)&aBlock.tCGFloat x = sub_1000E93D8;
      *(void *)&aBlock.tCGFloat y = v33;
      *(void *)&aBlock.a = _NSConcreteStackBlock;
      *(void *)&aBlock.b = 1107296256;
      *(void *)&aBlock.c = sub_1000162D4;
      *(void *)&aBlock.d = &unk_1008BC408;
      uint64_t v34 = _Block_copy(&aBlock);
      unint64_t v35 = v30;
      swift_release();
      [v23 animateWithDuration:197220 delay:v34 options:0 animations:v32 completion:0.0];

      _Block_release(v34);
    }
  }
}

void sub_1000E8C84(char a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    if (*(void *)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition + 8))
    {
      double v5 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
      swift_bridgeObjectRetain();
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 setText:v6];
    }
    double v7 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
    [v7 setFont:a3];
    [v7 setAlpha:1.0];
    [v7 setNumberOfLines:*(void *)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_numberOfLines)];
    v11[0] = 0x3FF0000000000000;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = 0x3FF0000000000000;
    void v11[4] = 0;
    v11[5] = 0;
    [v7 setTransform:v11];
    uint64_t v8 = OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel;
    double v9 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
    if (v9)
    {
      [v9 removeFromSuperview];
      CGFloat v10 = *(void **)(a2 + v8);
    }
    else
    {
      CGFloat v10 = 0;
    }
    *(void *)(a2 + v8) = 0;

    *(unsigned char *)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isAnimatingSizeCategoryChange) = 0;
  }
}

id sub_1000E8DD0(uint64_t a1)
{
  return [*(id *)(a1 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label) setAlpha:1.0];
}

uint64_t sub_1000E8DEC(uint64_t result, uint64_t a2)
{
  if (result) {
    *(unsigned char *)(a2 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_labelRequiresUnanimatedLayout) = 0;
  }
  return result;
}

uint64_t sub_1000E8E00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  NSString v5 = a2;
  if (a4)
  {
    uint64_t v8 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
    if (v8)
    {
      double v9 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
      if (a2)
      {
        swift_bridgeObjectRetain();
        id v10 = v8;
        NSString v5 = String._bridgeToObjectiveC()();
      }
      else
      {
        swift_bridgeObjectRetain();
        id v15 = v8;
      }
      [v9 setText:v5];

      NSString v16 = String._bridgeToObjectiveC()();
      [v8 setText:v16];

      double v17 = (void *)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition);
      *double v17 = a3;
      v17[1] = a4;

      goto LABEL_18;
    }
    double v13 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
    swift_bridgeObjectRetain();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v13 setText:v14];
  }
  else
  {
    double v11 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
    if (a2) {
      NSString v12 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v12 = 0;
    }
    [v11 setText:v12];

    CGFloat v18 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
    if (!v18) {
      goto LABEL_17;
    }
    id v19 = v18;
    if (v5) {
      NSString v14 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v14 = 0;
    }
    [v18 setText:v14];
  }
LABEL_17:
  CGFloat v20 = (void *)(v4 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition);
  *CGFloat v20 = 0;
  v20[1] = 0;
LABEL_18:

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E8FE0()
{
  uint64_t v1 = OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
  if (v2)
  {
    [v2 removeFromSuperview];
    double v3 = *(void **)(v0 + v1);
  }
  else
  {
    double v3 = 0;
  }
  *(void *)(v0 + v1) = 0;

  unsigned __int8 v4 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_sizeCategory);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_sizeCategory) = 7;
  sub_10005D9C4(v4, 7);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_originalSizeCategory) = 7;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isTransitioning) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_labelRequiresUnanimatedLayout) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isAnimatingSizeCategoryChange) = 0;
  NSString v5 = (void *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange);
  *NSString v5 = 0;
  v5[1] = 0;

  return sub_10006012C(v6);
}

id sub_1000E909C()
{
  uint64_t v1 = self;
  [v1 setAnimationsEnabled:0];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel];
  if (v2)
  {
    id v3 = v2;
    id v4 = [v0 traitCollection];
    char v5 = UITraitCollection.prefersRightToLeftLayouts.getter();

    double v6 = 0.0;
    if (v5) {
      double v6 = 1.0;
    }
    [v3 setAnchorPoint:v6, 0.0];
  }

  return [v1 setAnimationsEnabled:1];
}

id sub_1000E91E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TodayTransitioningLabelView();
  return [super dealloc];
}

void sub_1000E92AC()
{
  uint64_t v1 = *(void (**)(uint64_t))(*v0
                                      + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_10006012C((uint64_t)v1);
  }
}

uint64_t sub_1000E9318()
{
  return _swift_deallocObject(v0, 72, 7);
}

id sub_1000E9350()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label);
  long long v2 = *(_OWORD *)(v0 + 40);
  v4[0] = *(_OWORD *)(v0 + 24);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(v0 + 56);
  return [v1 setTransform:v4];
}

uint64_t sub_1000E93A0()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000E93D8()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
  if (result)
  {
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return [result setTransform:v2];
  }
  return result;
}

id sub_1000E9428(void *a1)
{
  uint64_t v2 = type metadata accessor for DirectionalTextAlignment();
  __chkstk_darwin(v2 - 8);
  type metadata accessor for DynamicTypeLabel();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v3 setNumberOfLines:[a1 numberOfLines]];
  id v4 = v3;
  [v4 setLineBreakMode:[a1 lineBreakMode]];

  id v5 = v4;
  [v5 setLineBreakStrategy:[a1 lineBreakStrategy]];

  id v6 = v5;
  [v6 setUserInteractionEnabled:[a1 isUserInteractionEnabled]];

  dispatch thunk of DynamicTypeLabel.directionalTextAlignment.getter();
  dispatch thunk of DynamicTypeLabel.directionalTextAlignment.setter();
  dispatch thunk of DynamicTypeLabel.contentSizeCategoryMapping.getter();
  dispatch thunk of DynamicTypeLabel.contentSizeCategoryMapping.setter();
  id v7 = [a1 text];
  [v6 setText:v7];

  return v6;
}

uint64_t sub_1000E95CC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E9604()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000E9644()
{
  sub_1000E85B0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_1000E964C()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label) setAlpha:0.0];
}

id sub_1000E966C()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel);
  if (result) {
    return [result setAlpha:1.0];
  }
  return result;
}

uint64_t sub_1000E9694()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000E96D4(char a1)
{
  sub_1000E8C84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1000E96DC()
{
  sub_1000E83A8(*(char **)(v0 + 16));
}

uint64_t sub_1000E96E4()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000E96F4()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_label];
  [v1 bounds];

  return [v2 setFrame:];
}

uint64_t sub_1000E9748()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000E9758()
{
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isTransitioning] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_sizeCategory] = 7;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_originalSizeCategory] = 7;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_disableAnimatedFontChange] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_numberOfLines] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInLabel] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_isAnimatingSizeCategoryChange] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_labelRequiresUnanimatedLayout] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_applyPendingFontChange];
  *uint64_t v1 = 0;
  v1[1] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_textAfterFontTransition];
  *uint64_t v2 = 0;
  v2[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeOutDelay] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore27TodayTransitioningLabelView_fadeInDelay] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double sub_1000E9898()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.storefront.getter();
  uint64_t v4 = Locale.baseWritingDirection.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1009E0D90 = 10329570;
  *(void *)algn_1009E0D98 = 0xA300000000000000;
  qword_1009E0DA0 = 10395106;
  unk_1009E0DA8 = 0xA300000000000000;
  qword_1009E0DB0 = v4;
  unk_1009E0DB8 = xmmword_1007C0230;
  unk_1009E0DC8 = xmmword_1007C0240;
  double result = 5.0;
  *(_OWORD *)&qword_1009E0DD8 = xmmword_1007C0250;
  return result;
}

double sub_1000E99A8()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.storefront.getter();
  uint64_t v4 = Locale.baseWritingDirection.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1009E0DE8 = 10395106;
  unk_1009E0DF0 = 0xA300000000000000;
  qword_1009E0DF8 = 10395106;
  unk_1009E0E00 = 0xA300000000000000;
  qword_1009E0E08 = v4;
  unk_1009E0E10 = xmmword_1007C0230;
  unk_1009E0E20 = xmmword_1007C0240;
  double result = 5.0;
  *(_OWORD *)&qword_1009E0E30 = xmmword_1007C0250;
  return result;
}

double sub_1000E9AB4()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.storefront.getter();
  uint64_t v4 = Locale.baseWritingDirection.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1009E0E40 = 10387682;
  *(void *)algn_1009E0E48 = 0xA300000000000000;
  qword_1009E0E50 = 10256610;
  unk_1009E0E58 = 0xA300000000000000;
  qword_1009E0E60 = v4;
  unk_1009E0E68 = xmmword_1007C0260;
  __asm { FMOV            V0.2D, #8.0 }
  unk_1009E0E78 = _Q0;
  double result = 7.0;
  *(_OWORD *)&qword_1009E0E88 = xmmword_1007C0270;
  return result;
}

double sub_1000E9BC0()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.storefront.getter();
  uint64_t v4 = Locale.baseWritingDirection.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1009E0E98 = 43970;
  unk_1009E0EA0 = 0xA200000000000000;
  qword_1009E0EA8 = 48066;
  unk_1009E0EB0 = 0xA200000000000000;
  qword_1009E0EB8 = v4;
  unk_1009E0EC0 = xmmword_1007C0280;
  unk_1009E0ED0 = xmmword_1007C0290;
  double result = 7.0;
  *(_OWORD *)&qword_1009E0EE0 = xmmword_1007C0270;
  return result;
}

double sub_1000E9CCC()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.storefront.getter();
  uint64_t v4 = Locale.baseWritingDirection.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1009E0EF0 = 9208035;
  *(void *)algn_1009E0EF8 = 0xA300000000000000;
  qword_1009E0F00 = 9273571;
  unk_1009E0F08 = 0xA300000000000000;
  qword_1009E0F10 = v4;
  unk_1009E0F18 = xmmword_1007C02A0;
  unk_1009E0F28 = xmmword_1007C02B0;
  double result = 9.0;
  *(_OWORD *)&qword_1009E0F38 = xmmword_1007C02C0;
  return result;
}

id sub_1000E9DDC(uint64_t a1)
{
  return sub_1000E9E04(45.0, a1, &qword_100983BD0);
}

id sub_1000E9DF4(uint64_t a1)
{
  return sub_1000E9E04(23.0, a1, &qword_100983BD8);
}

id sub_1000E9E04(double a1, uint64_t a2, void *a3)
{
  id result = [self systemFontOfSize:a1 weight:UIFontWeightBold];
  *a3 = result;
  return result;
}

id sub_1000E9E64()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.78 green:0.78 blue:0.8 alpha:1.0];
  qword_100983BE0 = (uint64_t)result;
  return result;
}

id sub_1000E9F70()
{
  return sub_1000EC2E4((uint64_t (*)(void))type metadata accessor for QuotesLabel);
}

uint64_t type metadata accessor for QuotesLabel()
{
  return self;
}

uint64_t sub_1000E9FAC(uint64_t a1)
{
  return sub_1000EA004(a1, qword_1009E0F48, &qword_10097F6D0, (uint64_t)qword_1009E4EC8);
}

uint64_t sub_1000E9FD8(uint64_t a1)
{
  return sub_1000EA004(a1, qword_1009E0F60, &qword_10097F6D8, (uint64_t)qword_1009E4EE0);
}

uint64_t sub_1000EA004(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for FontUseCase();
  sub_100042444(v7, a2);
  uint64_t v8 = sub_100087728(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100087728(v7, a4);
  id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v10(v8, v9, v7);
}

uint64_t sub_1000EA0CC(uint64_t a1)
{
  return sub_1000EA0EC(a1, qword_1009E0F78);
}

uint64_t sub_1000EA0DC(uint64_t a1)
{
  return sub_1000EA0EC(a1, qword_1009E0F90);
}

uint64_t sub_1000EA0EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for FontSource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticDimension();
  sub_100042444(v7, a2);
  sub_100087728(v7, (uint64_t)a2);
  if (qword_10097DFF0 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for FontUseCase();
  uint64_t v9 = sub_100087728(v8, (uint64_t)qword_1009E0F48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v9, v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for FontSource.useCase(_:), v3);
  v13[3] = v3;
  void v13[4] = (uint64_t)&protocol witness table for FontSource;
  id v10 = sub_1000808B8(v13);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v10, v6, v3);
  StaticDimension.init(_:scaledLike:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000EA2C8(uint64_t a1)
{
  return sub_1000EA2D8(a1, qword_1009E0FA8);
}

uint64_t sub_1000EA2D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for FontSource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticDimension();
  sub_100042444(v7, a2);
  sub_100087728(v7, (uint64_t)a2);
  if (qword_10097DFF8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for FontUseCase();
  uint64_t v9 = sub_100087728(v8, (uint64_t)qword_1009E0F60);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v9, v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for FontSource.useCase(_:), v3);
  v13[3] = v3;
  void v13[4] = (uint64_t)&protocol witness table for FontSource;
  id v10 = sub_1000808B8(v13);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v10, v6, v3);
  StaticDimension.init(_:scaledLike:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000EA4B4(uint64_t a1)
{
  return sub_1000EA2D8(a1, qword_1009E0FC0);
}

uint64_t sub_1000EA4C4()
{
  uint64_t v0 = type metadata accessor for FontSource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (UIFontTextStyle *)((char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for StaticDimension();
  sub_100042444(v4, qword_1009E0FD8);
  sub_100087728(v4, (uint64_t)qword_1009E0FD8);
  UIFontTextStyle *v3 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.textStyle(_:), v0);
  v9[3] = v0;
  v9[4] = (uint64_t)&protocol witness table for FontSource;
  uint64_t v5 = sub_1000808B8(v9);
  (*(void (**)(uint64_t *, UIFontTextStyle *, uint64_t))(v1 + 16))(v5, v3, v0);
  uint64_t v6 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)();
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1000EA630(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  type metadata accessor for LanguageAwareString();
  swift_bridgeObjectRetain();
  static LanguageAwareString.alwaysGenerateAttributedString.getter();
  static LanguageAwareString.keepStatisticsOnLanguageComponents.getter();
  uint64_t v6 = (void *)LanguageAwareString.__allocating_init(_:baseParagraphStyle:generateAttributedString:keepStatisticsOnLanguageComponents:)();
  if (v6)
  {
    uint64_t v7 = dispatch thunk of LanguageAwareString.thresholdBaseWritingDirection.getter();
    uint64_t v8 = v7;
    uint64_t v9 = &v2[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
    if (v7 != *(void *)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 32])
    {
      *((void *)v9 + 4) = v7;
      id v38 = *(id *)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote];
      uint64_t v39 = a1;
      swift_bridgeObjectRetain();
      sub_100082C28((uint64_t *)&unk_100986D50);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1007BF1D0;
      *(void *)(inited + 32) = NSFontAttributeName;
      uint64_t v11 = qword_10097DFD8;
      NSString v12 = NSFontAttributeName;
      if (v11 != -1) {
        swift_once();
      }
      double v13 = (void *)qword_100983BD0;
      uint64_t v14 = sub_100084CF0(0, (unint64_t *)&qword_100984D10);
      *(void *)(inited + 40) = v13;
      *(void *)(inited + 64) = v14;
      *(void *)(inited + 72) = NSForegroundColorAttributeName;
      uint64_t v15 = qword_10097DFE8;
      id v16 = v13;
      double v17 = NSForegroundColorAttributeName;
      if (v15 != -1) {
        swift_once();
      }
      CGFloat v18 = (void *)qword_100983BE0;
      *(void *)(inited + 104) = sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      *(void *)(inited + 80) = v18;
      id v19 = v18;
      sub_10005A234(inited);
      id v20 = objc_allocWithZone((Class)NSAttributedString);
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_10005A1DC();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v23 = [v20 initWithString:v21 attributes:isa];

      [v38 setAttributedText:v23];
      long long v24 = *((_OWORD *)v9 + 3);
      v40[2] = *((_OWORD *)v9 + 2);
      v40[3] = v24;
      v40[4] = *((_OWORD *)v9 + 4);
      uint64_t v41 = *((void *)v9 + 10);
      long long v25 = *((_OWORD *)v9 + 1);
      v40[0] = *(_OWORD *)v9;
      v40[1] = v25;
      id v26 = objc_allocWithZone((Class)type metadata accessor for QuotesLabel());
      sub_1000ED01C((uint64_t)v40);
      id v27 = [v26 initWithFrame:0.0, 0.0, 0.0, 0.0];
      uint64_t v28 = sub_1000EC9C8((uint64_t)v40);

      sub_1000ED054((uint64_t)v40);
      uint64_t v29 = *(void **)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote];
      *(void *)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote] = v28;

      a1 = v39;
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v30 = *(void **)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_quoteLabel];
  sub_100084CF0(0, (unint64_t *)&qword_100984D10);
  if (qword_10097DFF0 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for FontUseCase();
  sub_100087728(v31, (uint64_t)qword_1009E0F48);
  id v32 = [v3 traitCollection];
  uint64_t v33 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)();

  uint64_t v34 = *(void **)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote];
  double v35 = *(double *)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 72];
  id v36 = v34;
  id v37 = sub_1000ECCF0(v35, a1, a2, v33, v34, v8, v6 == 0);

  swift_bridgeObjectRelease();
  [v30 setAttributedText:v37];
}

id sub_1000EAA84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v35 = a1;
  uint64_t v5 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100082C28(&qword_100984B10);
  *(void *)&double v10 = __chkstk_darwin(v9 - 8).n128_u64[0];
  NSString v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC8AppStore9QuoteView_creditLabel;
  id result = *(id *)&v3[OBJC_IVAR____TtC8AppStore9QuoteView_creditLabel];
  if (!result || (id result = objc_msgSend(result, "text", v10)) == 0)
  {
    if (!a2) {
      return result;
    }
    goto LABEL_11;
  }
  uint64_t v15 = result;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  if (!a2)
  {
    swift_bridgeObjectRelease();
    NSString v21 = *(void **)&v3[v13];
    if (v21) {
      goto LABEL_19;
    }
LABEL_12:
    if (qword_10097DFF8 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for FontUseCase();
    uint64_t v23 = sub_100087728(v22, (uint64_t)qword_1009E0F60);
    uint64_t v24 = *(void *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v12, v23, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v22);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for DirectionalTextAlignment.none(_:), v5);
    id v25 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
    uint64_t v26 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
    id v27 = *(void **)&v3[v13];
    *(void *)&v3[v13] = v26;

    uint64_t v28 = *(void **)&v3[v13];
    if (!v28
      || (uint64_t v29 = self,
          id v30 = v28,
          id v31 = [v29 systemGrayColor],
          [v30 setTextColor:v31],
          v30,
          v31,
          !*(void *)&v3[v13]))
    {
      id result = (id)swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    [v3 addSubview:];
    NSString v21 = *(void **)&v3[v13];
    if (!v21)
    {
      swift_bridgeObjectRelease();
      return [v3 setNeedsLayout];
    }
LABEL_19:
    id v32 = v21;
    if (a2)
    {
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v33 = 0;
    }
    [v21 setText:v33];

    return [v3 setNeedsLayout];
  }
  if (v16 != v35 || v18 != a2)
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_26;
    }
LABEL_11:
    NSString v21 = *(void **)&v3[v13];
    if (v21) {
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
LABEL_26:

  return (id)swift_bridgeObjectRelease();
}

id sub_1000EAE6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CornerStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC8AppStore9QuoteView_artworkView];
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v6, enum case for CornerStyle.continuous(_:), v2, v4);
  id v8 = v7;
  ArtworkView.setCorner(radius:style:)();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return [v1 setNeedsLayout];
}

char *sub_1000EAFA4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  NSString v12 = (char *)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore9QuoteView_creditLabel] = 0;
  uint64_t v16 = &v4[OBJC_IVAR____TtC8AppStore9QuoteView_artworkAspectRatio];
  uint64_t v17 = type metadata accessor for AspectRatio();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v4[OBJC_IVAR____TtC8AppStore9QuoteView_isFullWidthArtwork] = 0;
  v4[OBJC_IVAR____TtC8AppStore9QuoteView_artworkHasRoundedCorners] = 0;
  id v18 = objc_allocWithZone((Class)UILabel);
  id v19 = v4;
  id v20 = [v18 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v19[OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote] = v20;
  if (qword_10097DFF0 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for FontUseCase();
  uint64_t v22 = sub_100087728(v21, (uint64_t)qword_1009E0F48);
  uint64_t v23 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v15, v22, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v15, 0, 1, v21);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  id v24 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
  *(void *)&v19[OBJC_IVAR____TtC8AppStore9QuoteView_quoteLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  *(void *)&v19[OBJC_IVAR____TtC8AppStore9QuoteView_artworkView] = [objc_allocWithZone((Class)type metadata accessor for ArtworkView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v25._object = (void *)0x8000000100804370;
  v25._countAndFlagsBits = 0xD000000000000010;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  Swift::String v27 = localizedString(_:comment:)(v25, v26);
  sub_1000EC7B8(v27._countAndFlagsBits, v27._object, (uint64_t)v72);
  swift_bridgeObjectRelease();
  uint64_t v28 = &v19[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
  long long v29 = v72[3];
  *((_OWORD *)v28 + 2) = v72[2];
  *((_OWORD *)v28 + 3) = v29;
  *((_OWORD *)v28 + 4) = v72[4];
  *((void *)v28 + 10) = v73;
  long long v30 = v72[1];
  *(_OWORD *)uint64_t v28 = v72[0];
  *((_OWORD *)v28 + 1) = v30;

  id v31 = (objc_class *)type metadata accessor for QuoteView();
  v71.receiver = v19;
  v71.super_class = v31;
  [super initWithFrame:a1, a2, a3, a4];
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v36 = (char *)v32;
  [v36 setLayoutMargins:UIEdgeInsetsZero.top, left, bottom, right];
  uint64_t v37 = OBJC_IVAR____TtC8AppStore9QuoteView_artworkView;
  id v38 = *(id *)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_artworkView];
  ArtworkView.roundedCorners.setter();

  id v39 = *(id *)&v36[v37];
  static ArtworkView.iconBorderWidth.getter();
  dispatch thunk of RoundedCornerView.borderWidth.setter();

  id v40 = *(id *)&v36[v37];
  static ArtworkView.iconBorderColor.getter();
  dispatch thunk of RoundedCornerView.borderColor.setter();

  [*(id *)&v36[v37] setHidden:1];
  uint64_t v70 = OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote;
  uint64_t v41 = *(void **)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote];
  [v41 setClipsToBounds:0];
  uint64_t v42 = &v36[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
  if (*(void *)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 32] == 1) {
    uint64_t v43 = v42 + 16;
  }
  else {
    uint64_t v43 = &v36[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
  }
  v69[1] = *(void *)v43;
  swift_bridgeObjectRetain();
  sub_100082C28((uint64_t *)&unk_100986D50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007BF1D0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v45 = qword_10097DFD8;
  id v46 = v41;
  CGRect v47 = NSFontAttributeName;
  if (v45 != -1) {
    swift_once();
  }
  uint64_t v48 = (void *)qword_100983BD0;
  uint64_t v49 = sub_100084CF0(0, (unint64_t *)&qword_100984D10);
  *(void *)(inited + 40) = v48;
  *(void *)(inited + 64) = v49;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  uint64_t v50 = qword_10097DFE8;
  id v51 = v48;
  uint64_t v52 = NSForegroundColorAttributeName;
  if (v50 != -1) {
    swift_once();
  }
  id v53 = (void *)qword_100983BE0;
  *(void *)(inited + 104) = sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  *(void *)(inited + 80) = v53;
  id v54 = v53;
  sub_10005A234(inited);
  id v55 = objc_allocWithZone((Class)NSAttributedString);
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10005A1DC();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v58 = [v55 initWithString:v56 attributes:isa];

  [v46 setAttributedText:v58];
  [v36 addSubview:*(void *)&v36[v70]];
  char v59 = *(void **)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_quoteLabel];
  [v59 setTextAlignment:4];
  [v36 addSubview:v59];
  [v36 addSubview:*(void *)&v36[v37]];
  long long v60 = *((_OWORD *)v42 + 1);
  v74[0] = *(_OWORD *)v42;
  v74[1] = v60;
  long long v61 = *((_OWORD *)v42 + 2);
  long long v62 = *((_OWORD *)v42 + 3);
  long long v63 = *((_OWORD *)v42 + 4);
  uint64_t v75 = *((void *)v42 + 10);
  v74[3] = v62;
  v74[4] = v63;
  v74[2] = v61;
  id v64 = objc_allocWithZone((Class)type metadata accessor for QuotesLabel());
  sub_1000ED01C((uint64_t)v74);
  id v65 = [v64 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v66 = sub_1000EC9C8((uint64_t)v74);

  sub_1000ED054((uint64_t)v74);
  id v67 = *(void **)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote];
  *(void *)&v36[OBJC_IVAR____TtC8AppStore9QuoteView_trailingQuote] = v66;

  return v36;
}

void sub_1000EB824()
{
  uint64_t v1 = v0;
  uint64_t v107 = type metadata accessor for AspectRatio();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  unint64_t v104 = (char *)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100082C28((uint64_t *)&unk_1009856C0);
  __chkstk_darwin(v3 - 8);
  CGRect v105 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticDimension();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  NSString v12 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (objc_class *)type metadata accessor for QuoteView();
  v119.receiver = v0;
  v119.super_class = v13;
  [super layoutSubviews];
  uint64_t v116 = *(char **)&v0[OBJC_IVAR____TtC8AppStore9QuoteView_leadingQuote];
  [v116 sizeToFit];
  LayoutMarginsAware<>.layoutFrame.getter();
  double MinY = CGRectGetMinY(v120);
  if (qword_10097E000 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100087728(v9, (uint64_t)qword_1009E0F78);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v108 = v10 + 16;
  NSNumber_optional v113 = v16;
  v16(v12, v15, v9);
  uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC8AppStore9QuoteView_quoteLabel];
  static Dimensions.defaultRoundingRule.getter();
  id v18 = v12;
  id v19 = [v17 traitCollection];
  StaticDimension.value(compatibleWith:rounded:)();
  double v21 = v20;

  [v17 firstBaselineFromTop];
  double v23 = v21 - v22;
  id v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  CGRect v110 = v8;
  uint64_t v111 = v5;
  uint64_t v117 = v24;
  uint64_t v118 = v6 + 8;
  v24(v8, v5);
  Swift::String v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v114 = v18;
  uint64_t v115 = v10 + 8;
  char v112 = v25;
  v25(v18, v9);
  double v26 = MinY + v23;
  [v116 frame];
  CGFloat Width = CGRectGetWidth(v121);
  uint64_t v28 = &v1[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs];
  double v29 = Width
      + *(double *)&v1[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 56]
      + *(double *)&v1[OBJC_IVAR____TtC8AppStore9QuoteView_quoteGlyphs + 40];
  LayoutMarginsAware<>.layoutFrame.getter();
  double v31 = v30 - v29;
  [v17 sizeThatFits:v30 - v29, 1.79769313e308];
  double v33 = v32;
  double v35 = v34;
  id v36 = v13;
  uint64_t v37 = *((void *)v28 + 4);
  LayoutMarginsAware<>.layoutFrame.getter();
  BOOL v42 = v37 == 1;
  uint64_t v43 = v1;
  uint64_t v44 = v9;
  CGRect v109 = v36;
  if (v42)
  {
    [v17 setFrame:CGRectGetMaxX(*(CGRect *)&v38) - v33 - v29, v26, v33, v35];
    LayoutMarginsAware<>.layoutFrame.getter();
    CGFloat v45 = CGRectGetMaxX(v122) - *((double *)v28 + 5);
    id v48 = v116;
    [v116 frame];
    double v47 = v45 - CGRectGetWidth(v123);
  }
  else
  {
    [v17 setFrame:v29 + CGRectGetMinX(*(CGRect *)&v38) v26, v33, v35];
    LayoutMarginsAware<>.layoutFrame.getter();
    double v47 = v46 + *((double *)v28 + 5);
    id v48 = v116;
  }
  [v17 frame];
  double v50 = v49 + *((double *)v28 + 6);
  [v48 frame];
  [v48 setFrame:v47, v50];
  [v17 frame];
  double MaxY = CGRectGetMaxY(v124);
  id v53 = v110;
  uint64_t v52 = v111;
  if (qword_10097E008 != -1) {
    swift_once();
  }
  uint64_t v54 = sub_100087728(v44, (uint64_t)qword_1009E0F90);
  id v55 = v114;
  v113(v114, v54, v44);
  static Dimensions.defaultRoundingRule.getter();
  id v56 = [v17 traitCollection];
  StaticDimension.value(compatibleWith:rounded:)();
  double v58 = v57;

  [v17 lastBaselineFromBottom];
  double v60 = v58 - v59;
  v117(v53, v52);
  v112(v55, v44);
  double v61 = MaxY + v60;
  long long v62 = *(void **)&v43[OBJC_IVAR____TtC8AppStore9QuoteView_creditLabel];
  if (v62)
  {
    uint64_t v116 = v43;
    id v63 = v62;
    [v63 sizeThatFits:v31];
    double v65 = v64;
    double v67 = v66;
    uint64_t v68 = *((void *)v28 + 4);
    [v17 frame];
    if (v68 == 1) {
      double MinX = CGRectGetMaxX(*(CGRect *)&v69) - v65;
    }
    else {
      double MinX = CGRectGetMinX(*(CGRect *)&v69);
    }
    uint64_t v74 = v113;
    if (qword_10097E010 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_100087728(v44, (uint64_t)qword_1009E0FA8);
    uint64_t v76 = v114;
    v74(v114, v75, v44);
    static Dimensions.defaultRoundingRule.getter();
    id v77 = [v63 traitCollection];
    StaticDimension.value(compatibleWith:rounded:)();
    double v79 = v78;

    [v63 firstBaselineFromTop];
    double v81 = v79 - v80;
    uint64_t v82 = v117;
    v117(v53, v52);
    id v83 = v112;
    v112(v76, v44);
    [v63 setFrame:MinX, v61 + v81, v65, v67];
    [v63 frame];
    CGRectGetMaxY(v125);
    if (qword_10097E018 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_100087728(v44, (uint64_t)qword_1009E0FC0);
    v74(v76, v84, v44);
    static Dimensions.defaultRoundingRule.getter();
    id v85 = [v63 traitCollection];
    StaticDimension.value(compatibleWith:rounded:)();

    [v63 lastBaselineFromBottom];
    v82(v53, v52);
    v83(v76, v44);
    uint64_t v43 = v116;
  }
  uint64_t v86 = OBJC_IVAR____TtC8AppStore9QuoteView_artworkView;
  if (([*(id *)&v43[OBJC_IVAR____TtC8AppStore9QuoteView_artworkView] isHidden] & 1) == 0)
  {
    uint64_t v87 = OBJC_IVAR____TtC8AppStore9QuoteView_isFullWidthArtwork;
    if (v43[OBJC_IVAR____TtC8AppStore9QuoteView_isFullWidthArtwork] == 1) {
      [v43 frame];
    }
    else {
      LayoutMarginsAware<>.layoutFrame.getter();
    }
    CGRectGetMinX(*(CGRect *)&v88);
    if (qword_10097E020 != -1) {
      swift_once();
    }
    sub_100087728(v44, (uint64_t)qword_1009E0FD8);
    id v92 = [v43 traitCollection];
    static Dimensions.defaultRoundingRule.getter();
    StaticDimension.value(compatibleWith:rounded:)();

    v117(v53, v52);
    if (v43[v87] == 1) {
      [v43 frame];
    }
    else {
      LayoutMarginsAware<>.layoutFrame.getter();
    }
    uint64_t v97 = v107;
    uint64_t v98 = v106;
    uint64_t v99 = (uint64_t)v105;
    CGRectGetWidth(*(CGRect *)&v93);
    uint64_t v100 = (uint64_t)&v43[OBJC_IVAR____TtC8AppStore9QuoteView_artworkAspectRatio];
    swift_beginAccess();
    sub_1000ED08C(v100, v99);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v99, 1, v97))
    {
      sub_1000ED0F4(v99);
      LayoutMarginsAware<>.layoutFrame.getter();
      CGRectGetHeight(v126);
    }
    else
    {
      uint64_t v101 = v104;
      (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v104, v99, v97);
      sub_1000ED0F4(v99);
      AspectRatio.height(fromWidth:)();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v101, v97);
    }
    id v102 = *(id *)&v43[v86];
    ArtworkView.frame.setter();
  }
}

id sub_1000EC2CC()
{
  return sub_1000EC2E4((uint64_t (*)(void))type metadata accessor for QuoteView);
}

id sub_1000EC2E4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t sub_1000EC3D0()
{
  return type metadata accessor for QuoteView();
}

uint64_t type metadata accessor for QuoteView()
{
  uint64_t result = qword_100983C60;
  if (!qword_100983C60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000EC424()
{
  sub_100008C8C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t destroy for QuoteGlyphs()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QuoteGlyphs(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for QuoteGlyphs(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  return a1;
}

__n128 initializeWithTake for QuoteGlyphs(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for QuoteGlyphs(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuoteGlyphs(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuoteGlyphs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteGlyphs()
{
  return &type metadata for QuoteGlyphs;
}

unint64_t sub_1000EC76C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008B8F08, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

__n128 sub_1000EC7B8@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = a1;
  v17._object = a2;
  switch(sub_1000EC76C(v17))
  {
    case 1u:
      if (qword_10097DFB8 != -1) {
        swift_once();
      }
      uint64_t v6 = &qword_1009E0DE8;
      break;
    case 2u:
      if (qword_10097DFC0 != -1) {
        swift_once();
      }
      uint64_t v6 = &qword_1009E0E40;
      break;
    case 3u:
    case 4u:
      if (qword_10097DFC8 != -1) {
        swift_once();
      }
      uint64_t v6 = &qword_1009E0E98;
      break;
    case 5u:
      if (qword_10097DFD0 != -1) {
        swift_once();
      }
      uint64_t v6 = &qword_1009E0EF0;
      break;
    default:
      if (qword_10097DFB0 != -1) {
        swift_once();
      }
      uint64_t v6 = &qword_1009E0D90;
      break;
  }
  uint64_t v8 = v6[2];
  uint64_t v7 = v6[3];
  uint64_t v10 = *v6;
  uint64_t v9 = v6[1];
  uint64_t v11 = v6[4];
  __n128 v15 = *(__n128 *)(v6 + 7);
  long long v16 = *(_OWORD *)(v6 + 5);
  uint64_t v12 = v6[9];
  uint64_t v13 = v6[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v8;
  *(void *)(a3 + 24) = v7;
  *(void *)(a3 + 32) = v11;
  *(_OWORD *)(a3 + 40) = v16;
  __n128 result = v15;
  *(__n128 *)(a3 + 56) = v15;
  *(void *)(a3 + 72) = v12;
  *(void *)(a3 + 80) = v13;
  return result;
}

UIImage *sub_1000EC9C8(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100082C28((uint64_t *)&unk_100986D50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007BF1D0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v4 = qword_10097DFE0;
  uint64_t v5 = NSFontAttributeName;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_100983BD8;
  uint64_t v7 = sub_100084CF0(0, (unint64_t *)&qword_100984D10);
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  uint64_t v8 = qword_10097DFE8;
  id v9 = v6;
  uint64_t v10 = NSForegroundColorAttributeName;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_100983BE0;
  *(void *)(inited + 104) = sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  *(void *)(inited + 80) = v11;
  id v12 = v11;
  sub_10005A234(inited);
  uint64_t v13 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  id v14 = objc_allocWithZone((Class)NSAttributedString);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10005A1DC();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [v14 initWithString:v15 attributes:isa];

  [v2 setAttributedText:v17];
  [v2 sizeToFit];
  [v2 frame];
  double v18 = CGRectGetWidth(v27) + *(double *)(a1 + 64);
  if (v13 == 1) {
    double v19 = 0.0;
  }
  else {
    double v19 = *(double *)(a1 + 64);
  }
  [v2 frame];
  CGFloat Height = CGRectGetHeight(v28);
  id v21 = [self mainScreen];
  [v21 scale];
  CGFloat v23 = v22;

  v26.double width = v18;
  v26.double height = Height;
  UIGraphicsBeginImageContextWithOptions(v26, 0, v23);
  [v2 frame];
  [v2 drawTextInRect:v19];
  id v24 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  return v24;
}

id sub_1000ECCF0(double a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, char a7)
{
  id v7 = a3;
  if (a3)
  {
    sub_100082C28((uint64_t *)&unk_100986D50);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007BF1D0;
    *(void *)(inited + 32) = NSParagraphStyleAttributeName;
    uint64_t v14 = qword_10097FE58;
    NSString v15 = NSParagraphStyleAttributeName;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    if (a7) {
      uint64_t v16 = -1;
    }
    else {
      uint64_t v16 = a6;
    }
    id v17 = [(id)qword_1009E62D8 paragraphStyleWithBaseWritingDirection:v16];
    uint64_t v18 = sub_100084CF0(0, &qword_100983C78);
    *(void *)(inited + 40) = v17;
    *(void *)(inited + 64) = v18;
    *(void *)(inited + 72) = NSFontAttributeName;
    *(void *)(inited + 104) = sub_100084CF0(0, (unint64_t *)&qword_100984D10);
    *(void *)(inited + 80) = a4;
    double v19 = NSFontAttributeName;
    id v20 = a4;
    sub_10005A234(inited);
    id v21 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_10005A1DC();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v7 = [v21 initWithString:v22 attributes:isa];

    if (a5)
    {
      id v24 = a5;
      sub_10005A234((uint64_t)_swiftEmptyArrayStorage);
      id v25 = objc_allocWithZone((Class)NSAttributedString);
      NSString v26 = String._bridgeToObjectiveC()();
      Class v27 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v28 = [v25 initWithString:v26 attributes:v27];

      [v7 appendAttributedString:v28];
      id v29 = [objc_allocWithZone((Class)NSTextAttachment) init];
      [v29 setImage:v24];
      [v24 size];
      [v29 setBounds:0.0, -a1, v30, v31];
      id v32 = [self attributedStringWithAttachment:v29];
      [v7 appendAttributedString:v32];
    }
  }
  return v7;
}

uint64_t sub_1000ED01C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000ED054(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000ED08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_1009856C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000ED0F4(uint64_t a1)
{
  uint64_t v2 = sub_100082C28((uint64_t *)&unk_1009856C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1000ED154(void *result, double a2)
{
  if (*(double *)(v2 + 32) != a2)
  {
    unint64_t v3 = result;
    *(double *)(v2 + 32) = a2;
    [result _systemContentInset];
    double v5 = v4;
    [v3 contentOffset];
    double v7 = v6;
    id v8 = [v3 contentInset];
    v9.n128_f64[0] = fmin((v5 + v7 + v9.n128_f64[0] - *(double *)(v2 + 32)) / *(double *)(v2 + 40), 1.0);
    if (v9.n128_f64[0] < 0.0) {
      v9.n128_f64[0] = 0.0;
    }
    return (void *)(*(uint64_t (**)(id, __n128))(v2 + 16))(v8, v9);
  }
  return result;
}

uint64_t sub_1000ED1F4()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000ED22C()
{
  uint64_t v0 = type metadata accessor for VerticalStack();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  double v6 = (char *)&v9 - v5;
  VerticalStack.init(with:)();
  swift_retain();
  VerticalStack.adding(_:with:)();
  swift_release();
  double v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  swift_retain();
  VerticalStack.adding(_:with:)();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_1000ED3C4(uint64_t a1, uint64_t a2)
{
  sub_100082C6C(a2 + 16, (uint64_t)v3);
  return VerticalStack.Properties.topSpacing.setter();
}

uint64_t sub_1000ED400(uint64_t a1, uint64_t a2)
{
  sub_100082C6C(a2 + 176, (uint64_t)v4);
  VerticalStack.Properties.topSpacing.setter();
  sub_100082C6C(a2 + 96, (uint64_t)v4);
  return VerticalStack.Properties.bottomSpacing.setter();
}

uint64_t sub_1000ED454()
{
  sub_1000EDBA8(v0 + 16);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v0 + 216);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v0 + 256);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShelfFooterViewLayout()
{
  return self;
}

uint64_t destroy for ShelfFooterViewLayout.Metrics(uint64_t a1)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 40);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 80);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 120);

  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 160);
}

_OWORD *initializeWithCopy for ShelfFooterViewLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  long long v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  long long v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  long long v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  long long v8 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  return a1;
}

uint64_t *assignWithCopy for ShelfFooterViewLayout.Metrics(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 initializeWithTake for ShelfFooterViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for ShelfFooterViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfFooterViewLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfFooterViewLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfFooterViewLayout.Metrics()
{
  return &type metadata for ShelfFooterViewLayout.Metrics;
}

uint64_t sub_1000ED8C0()
{
  return sub_1000ED22C();
}

_OWORD *sub_1000ED8E4@<X0>(_OWORD *a1@<X8>)
{
  return sub_1000EDB28((_OWORD *)(*(void *)v1 + 16), a1);
}

uint64_t sub_1000ED8F4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  v9.n128_f64[0] = a3;
  v10.n128_f64[0] = a4;

  return CustomLayout.measure(toFit:with:)(a1, a2, WitnessTable, v9, v10);
}

uint64_t sub_1000ED96C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  v13.n128_f64[0] = a3;
  v14.n128_f64[0] = a4;
  v15.n128_f64[0] = a5;
  v16.n128_f64[0] = a6;

  return CustomLayout.place(at:with:)(a1, a2, WitnessTable, v13, v14, v15, v16);
}

uint64_t sub_1000ED9FC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CustomLayout._eraseToAnyForTesting(with:)(a1, a2, WitnessTable);
}

uint64_t sub_1000EDA64()
{
  return sub_1000EDACC(&qword_100983DE8);
}

uint64_t sub_1000EDA98()
{
  return sub_1000EDACC(&qword_100983DF0);
}

uint64_t sub_1000EDACC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ShelfFooterViewLayout();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EDB0C()
{
  return swift_getOpaqueTypeConformance2();
}

_OWORD *sub_1000EDB28(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

uint64_t sub_1000EDB60()
{
  sub_100082C6C(v0 + 16, (uint64_t)v2);
  return VerticalStack.Properties.topSpacing.setter();
}

uint64_t sub_1000EDBA0(uint64_t a1)
{
  return sub_1000ED400(a1, v1);
}

uint64_t sub_1000EDBA8(uint64_t a1)
{
  return a1;
}

void *sub_1000EDBD8()
{
  return &protocol witness table for VerticalStack;
}

void sub_1000EDBE4()
{
  qword_1009E1010 = 0x4072C00000000000;
}

uint64_t sub_1000EDBF8()
{
  uint64_t v0 = type metadata accessor for FontSource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v10[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticDimension();
  sub_100042444(v4, qword_1009E1018);
  sub_100087728(v4, (uint64_t)qword_1009E1018);
  if (qword_10097F580 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for FontUseCase();
  uint64_t v6 = sub_100087728(v5, (uint64_t)qword_1009E4AD8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v3, v6, v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  v10[3] = v0;
  void v10[4] = (uint64_t)&protocol witness table for FontSource;
  long long v7 = sub_1000808B8(v10);
  (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v7, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

char *sub_1000EDDD0(uint64_t a1)
{
  uint64_t v41 = a1;
  uint64_t v2 = type metadata accessor for StaticDimension();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FontUseCase();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  __n128 v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v10 = objc_allocWithZone((Class)type metadata accessor for ArcadeWelcomeContentView());
  uint64_t v11 = v1;
  id v12 = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v11[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_arcadeWelcomeContentView] = v12;
  type metadata accessor for RoundedTitledButton();
  if (qword_10097F580 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100087728(v6, (uint64_t)qword_1009E4AD8);
  __n128 v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v40[1] = v7 + 16;
  v14(v9, v13, v6);
  v40[0] = v6;
  if (qword_10097E030 != -1) {
    swift_once();
  }
  uint64_t v15 = v2;
  uint64_t v16 = sub_100087728(v2, (uint64_t)qword_1009E1018);
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v17(v5, v16, v15);
  *(void *)&v11[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_familyButton] = sub_10075BBAC((uint64_t)v9, (uint64_t)v5);
  v14(v9, v13, v40[0]);
  v17(v5, v16, v15);
  *(void *)&v11[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_continueButton] = sub_10075BBAC((uint64_t)v9, (uint64_t)v5);

  sub_1000EE690(v41, (uint64_t)v42);
  uint64_t v18 = sub_10074FA40((uint64_t)v42);
  uint64_t v19 = OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_familyButton;
  id v20 = *(void **)&v18[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_familyButton];
  id v21 = self;
  NSString v22 = v18;
  id v23 = v20;
  id v24 = [v21 clearColor];
  [v23 setBackgroundColor:v24];

  id v25 = *(void **)&v18[v19];
  sub_10008E8A0();
  id v26 = v25;
  Class v27 = (void *)static UIColor.appTint.getter();
  [v26 setTintColor:v27];

  id v28 = *(void **)&v22[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_arcadeWelcomeContentView];
  uint64_t v29 = OBJC_IVAR____TtC8AppStore18OnboardingPageView_contentView;
  double v30 = *(void **)&v22[OBJC_IVAR____TtC8AppStore18OnboardingPageView_contentView];
  *(void *)&v22[OBJC_IVAR____TtC8AppStore18OnboardingPageView_contentView] = v28;
  id v31 = v28;
  id v32 = v22;
  id v33 = v31;

  if (*(void *)&v22[v29]) {
    [*(id *)&v32[OBJC_IVAR____TtC8AppStore18OnboardingPageView_contentScrollView] addSubview:];
  }
  [v32 setNeedsLayout:v40[0]];

  [v32 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  uint64_t v34 = OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_continueButton;
  id v35 = *(id *)&v32[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_continueButton];
  id v36 = (void *)static UIColor.appTint.getter();
  [v35 setBackgroundColor:v36];

  uint64_t v37 = *(void **)&v32[v34];
  id v38 = [v21 whiteColor];
  [v37 setTintColor:v38];

  sub_1000EE6EC(v41);
  return v32;
}

id sub_1000EE278(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(char **)&v2[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_continueButton];
  ArcadeWelcomeContent.continueAction.getter();
  Action.title.getter();
  uint64_t v8 = v7;
  swift_release();
  if (v8)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  [v6 setTitle:v9 forState:0];

  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = (void (**)())&v6[qword_1009E75E0];
  uint64_t v12 = *(void *)&v6[qword_1009E75E0];
  *uint64_t v11 = sub_1000EE778;
  v11[1] = (void (*)())v10;
  sub_10006012C(v12);
  if (qword_10097E028 != -1) {
    swift_once();
  }
  sub_10071F930(v6, qword_1009E1010, 0);
  [v3 setNeedsLayout];
  uint64_t v13 = *(char **)&v3[OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_familyButton];
  sub_10074FCE0(v13);
  if (ArcadeWelcomeContent.familyAction.getter())
  {
    Action.title.getter();
    if (v14)
    {
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v15 = 0;
    }
    [v13 setTitle:v15 forState:0];

    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v17 = (void (**)())&v13[qword_1009E75E0];
    uint64_t v18 = *(void *)&v13[qword_1009E75E0];
    *id v17 = sub_1000EE7A8;
    v17[1] = (void (*)())v16;
    sub_10006012C(v18);
    sub_10071F930(v13, qword_1009E1010, 0);
    [v3 setNeedsLayout];
    swift_release();
  }
  else
  {
    sub_10074FCE0(v13);
  }
  sub_100251190(a1, a2);

  return [v3 setNeedsLayout];
}

void sub_1000EE510(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();

    if (v5)
    {
      a2();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1000EE5A0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8AppStore21ArcadeWelcomePageView_delegate;

  return sub_100092F18(v1);
}

uint64_t type metadata accessor for ArcadeWelcomePageView()
{
  return self;
}

uint64_t sub_1000EE690(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000EE6EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000EE740()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000EE778()
{
  sub_1000EE510(v0, (void (*)(void))&dispatch thunk of ArcadeWelcomePagePresenter.didTapContinueButton());
}

void sub_1000EE7A8()
{
  sub_1000EE510(v0, (void (*)(void))&dispatch thunk of ArcadeWelcomePagePresenter.didTapFamilyButton());
}

uint64_t sub_1000EE7D8(uint64_t a1)
{
  return sub_1000EE868(a1, qword_1009E1030);
}

uint64_t sub_1000EE7FC(uint64_t a1)
{
  return sub_1000EE868(a1, qword_1009E1048);
}

uint64_t sub_1000EE820(uint64_t a1)
{
  return sub_1000EE868(a1, qword_1009E1060);
}

uint64_t sub_1000EE844(uint64_t a1)
{
  return sub_1000EE868(a1, qword_1009E1078);
}

uint64_t sub_1000EE868(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100082C28((uint64_t *)&unk_100994A20);
  sub_100042444(v3, a2);
  sub_100087728(v3, (uint64_t)a2);
  return PreferenceKey.init(_:)();
}

uint64_t sub_1000EE8D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v151 = a2;
  uint64_t v3 = type metadata accessor for String.Encoding();
  uint64_t v136 = *(void *)(v3 - 8);
  uint64_t v137 = v3;
  __chkstk_darwin(v3);
  v135 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100082C28(&qword_100983E40);
  __chkstk_darwin(v5 - 8);
  v148 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100082C28(&qword_100983E48);
  __chkstk_darwin(v7 - 8);
  v147 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AdamId();
  __chkstk_darwin(v9 - 8);
  uint64_t v131 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v134 = (char *)&v127 - v12;
  __chkstk_darwin(v13);
  uint64_t v139 = (char *)&v127 - v14;
  __chkstk_darwin(v15);
  uint64_t v140 = (char *)&v127 - v16;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v149 = *(void *)(v17 - 8);
  uint64_t v150 = v17;
  __chkstk_darwin(v17);
  CGRect v127 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v21 = (char *)&v127 - v20;
  __chkstk_darwin(v22);
  id v24 = (char *)&v127 - v23;
  __chkstk_darwin(v25);
  v144 = (char *)&v127 - v26;
  __chkstk_darwin(v27);
  v143 = (char *)&v127 - v28;
  uint64_t v29 = type metadata accessor for OnDeviceAdvert();
  uint64_t v145 = *(void *)(v29 - 8);
  uint64_t v146 = v29;
  __chkstk_darwin(v29);
  CGRect v128 = (char *)&v127 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v130 = (char *)&v127 - v32;
  __chkstk_darwin(v33);
  v133 = (char *)&v127 - v34;
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v127 - v36;
  uint64_t v38 = type metadata accessor for AdPlacementType();
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  CGRect v129 = (char *)&v127 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v132 = (char *)&v127 - v42;
  __chkstk_darwin(v43);
  uint64_t v138 = (char *)&v127 - v44;
  __chkstk_darwin(v45);
  double v47 = (char *)&v127 - v46;
  __n128 v49 = __chkstk_darwin(v48);
  id v51 = (char *)&v127 - v50;
  v141 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 16);
  uint64_t v142 = a1;
  v141((char *)&v127 - v50, a1, v38, v49);
  int v52 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v51, v38);
  if (v52 != enum case for AdPlacementType.searchLanding(_:))
  {
    if (v52 == enum case for AdPlacementType.searchResults(_:)) {
      goto LABEL_34;
    }
    if (v52 == enum case for AdPlacementType.today(_:))
    {
      type metadata accessor for LocalPreferences();
      static LocalPreferences.AppStoreKitInternal.getter();
      if (qword_10097E048 != -1) {
        swift_once();
      }
      uint64_t v63 = sub_100082C28((uint64_t *)&unk_100994A20);
      sub_100087728(v63, (uint64_t)qword_1009E1060);
      Preferences.subscript.getter();
      swift_release();
      if (v152 == 2 || (v152 & 1) == 0) {
        goto LABEL_34;
      }
      UUID.init()();
      UUID.uuidString.getter();
      double v64 = *(void (**)(char *, uint64_t))(v149 + 8);
      v64(v24, v150);
      AdamId.init(value:)();
      ((void (*)(char *, uint64_t, uint64_t))v141)(v138, v142, v38);
      sub_100082C28((uint64_t *)&unk_100990630);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1007BEDF0;
      uint64_t v152 = 1953459315;
      unint64_t v153 = 0xE400000000000000;
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 96) = &type metadata for Int;
      *(void *)(inited + 72) = 2;
      sub_10066D688(inited);
      double v66 = v135;
      static String.Encoding.utf8.getter();
      uint64_t v67 = String.data(using:allowLossyConversion:)();
      unint64_t v69 = v68;
      (*(void (**)(char *, uint64_t))(v136 + 8))(v66, v137);
      if (v69 >> 60 != 15)
      {
        uint64_t v70 = self;
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        uint64_t v152 = 0;
        id v72 = [v70 JSONObjectWithData:isa options:0 error:&v152];

        if (v72)
        {
          id v73 = (id)v152;
          _bridgeAnyObjectToAny(_:)();
          sub_1000EFF9C(v67, v69);
          swift_unknownObjectRelease();
          sub_100082C28(&qword_1009A51A0);
          swift_dynamicCast();
        }
        else
        {
          id v110 = (id)v152;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          sub_1000EFF9C(v67, v69);
          swift_errorRelease();
        }
      }
      uint64_t v111 = v133;
      OnDeviceAdvert.init(instanceId:impressionId:adamId:placementType:metadata:privacy:positionInfo:appMetadata:cppIds:)();
      char v112 = v143;
      UUID.init()();
      uint64_t v149 = UUID.uuidString.getter();
      uint64_t v113 = v150;
      v64(v112, v150);
      uint64_t v114 = v144;
      UUID.init()();
      UUID.uuidString.getter();
      v64(v114, v113);
      uint64_t v116 = v145;
      uint64_t v115 = v146;
      uint64_t v117 = v147;
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v147, v111, v146);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v117, 0, 1, v115);
      uint64_t FailReason = type metadata accessor for OnDeviceAdFetchFailReason();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(FailReason - 8) + 56))(v148, 1, 1, FailReason);
      uint64_t v62 = v151;
    }
    else
    {
      if (v52 == enum case for AdPlacementType.productPageYMAL(_:))
      {
        type metadata accessor for LocalPreferences();
        static LocalPreferences.AppStoreKitInternal.getter();
        if (qword_10097E050 != -1) {
          swift_once();
        }
        uint64_t v85 = sub_100082C28((uint64_t *)&unk_100994A20);
        sub_100087728(v85, (uint64_t)qword_1009E1078);
        Preferences.subscript.getter();
        swift_release();
        if (v152 == 2 || (v152 & 1) == 0) {
          goto LABEL_34;
        }
        UUID.init()();
        UUID.uuidString.getter();
        uint64_t v86 = *(void (**)(char *, uint64_t))(v149 + 8);
        v149 += 8;
        v86(v21, v150);
        AdamId.init(value:)();
        ((void (*)(char *, uint64_t, uint64_t))v141)(v132, v142, v38);
        sub_100082C28((uint64_t *)&unk_100990630);
        uint64_t v87 = swift_initStackObject();
        *(_OWORD *)(v87 + 16) = xmmword_1007BEDF0;
        uint64_t v152 = 1953459315;
        unint64_t v153 = 0xE400000000000000;
        AnyHashable.init<A>(_:)();
        *(void *)(v87 + 96) = &type metadata for Int;
        *(void *)(v87 + 72) = 1;
        sub_10066D688(v87);
        uint64_t v88 = v135;
        static String.Encoding.utf8.getter();
        uint64_t v89 = String.data(using:allowLossyConversion:)();
        unint64_t v91 = v90;
        (*(void (**)(char *, uint64_t))(v136 + 8))(v88, v137);
        if (v91 >> 60 != 15)
        {
          id v92 = self;
          Class v93 = Data._bridgeToObjectiveC()().super.isa;
          uint64_t v152 = 0;
          id v94 = [v92 JSONObjectWithData:v93 options:0 error:&v152];

          if (v94)
          {
            id v95 = (id)v152;
            _bridgeAnyObjectToAny(_:)();
            sub_1000EFF9C(v89, v91);
            swift_unknownObjectRelease();
            sub_100082C28(&qword_1009A51A0);
            swift_dynamicCast();
          }
          else
          {
            id v119 = (id)v152;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            sub_1000EFF9C(v89, v91);
            swift_errorRelease();
          }
        }
        uint64_t v111 = v130;
      }
      else
      {
        if (v52 != enum case for AdPlacementType.productPageYMALDuringDownload(_:))
        {
          uint64_t Response = type metadata accessor for OnDeviceAdvertFetchResponse();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(Response - 8) + 56))(v151, 1, 1, Response);
          return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v51, v38);
        }
        type metadata accessor for LocalPreferences();
        static LocalPreferences.AppStoreKitInternal.getter();
        if (qword_10097E050 != -1) {
          swift_once();
        }
        uint64_t v96 = sub_100082C28((uint64_t *)&unk_100994A20);
        sub_100087728(v96, (uint64_t)qword_1009E1078);
        Preferences.subscript.getter();
        swift_release();
        if (v152 == 2 || (v152 & 1) == 0) {
          goto LABEL_34;
        }
        uint64_t v100 = v127;
        UUID.init()();
        UUID.uuidString.getter();
        uint64_t v86 = *(void (**)(char *, uint64_t))(v149 + 8);
        v149 += 8;
        v86(v100, v150);
        AdamId.init(value:)();
        ((void (*)(char *, uint64_t, uint64_t))v141)(v129, v142, v38);
        sub_100082C28((uint64_t *)&unk_100990630);
        uint64_t v101 = swift_initStackObject();
        *(_OWORD *)(v101 + 16) = xmmword_1007BEDF0;
        uint64_t v152 = 1953459315;
        unint64_t v153 = 0xE400000000000000;
        AnyHashable.init<A>(_:)();
        *(void *)(v101 + 96) = &type metadata for Int;
        *(void *)(v101 + 72) = 1;
        sub_10066D688(v101);
        id v102 = v135;
        static String.Encoding.utf8.getter();
        uint64_t v103 = String.data(using:allowLossyConversion:)();
        unint64_t v105 = v104;
        (*(void (**)(char *, uint64_t))(v136 + 8))(v102, v137);
        if (v105 >> 60 != 15)
        {
          uint64_t v106 = self;
          Class v107 = Data._bridgeToObjectiveC()().super.isa;
          uint64_t v152 = 0;
          id v108 = [v106 JSONObjectWithData:v107 options:0 error:&v152];

          if (v108)
          {
            id v109 = (id)v152;
            _bridgeAnyObjectToAny(_:)();
            sub_1000EFF9C(v103, v105);
            swift_unknownObjectRelease();
            sub_100082C28(&qword_1009A51A0);
            swift_dynamicCast();
          }
          else
          {
            id v120 = (id)v152;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            sub_1000EFF9C(v103, v105);
            swift_errorRelease();
          }
        }
        uint64_t v111 = v128;
      }
      OnDeviceAdvert.init(instanceId:impressionId:adamId:placementType:metadata:privacy:positionInfo:appMetadata:cppIds:)();
      CGRect v121 = v143;
      UUID.init()();
      uint64_t v142 = UUID.uuidString.getter();
      uint64_t v122 = v150;
      v86(v121, v150);
      CGRect v123 = v144;
      UUID.init()();
      UUID.uuidString.getter();
      v86(v123, v122);
      uint64_t v116 = v145;
      uint64_t v115 = v146;
      CGRect v124 = v147;
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v147, v111, v146);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v124, 0, 1, v115);
      uint64_t v125 = type metadata accessor for OnDeviceAdFetchFailReason();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v148, 1, 1, v125);
      uint64_t v62 = v151;
    }
    OnDeviceAdvertFetchResponse.init(clientRequestId:iAdId:ad:failureReason:)();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v111, v115);
    goto LABEL_47;
  }
  type metadata accessor for LocalPreferences();
  static LocalPreferences.AppStoreKitInternal.getter();
  if (qword_10097E038 != -1) {
    swift_once();
  }
  uint64_t v53 = sub_100082C28((uint64_t *)&unk_100994A20);
  sub_100087728(v53, (uint64_t)qword_1009E1030);
  Preferences.subscript.getter();
  swift_release();
  if v152 != 2 && (v152)
  {
    uint64_t v74 = v143;
    UUID.init()();
    uint64_t v75 = UUID.uuidString.getter();
    uint64_t v138 = v76;
    uint64_t v139 = (char *)v75;
    uint64_t v77 = v150;
    double v78 = *(void (**)(char *, uint64_t))(v149 + 8);
    v78(v74, v150);
    AdamId.init(value:)();
    ((void (*)(char *, uint64_t, uint64_t))v141)(v47, v142, v38);
    OnDeviceAdvert.init(instanceId:impressionId:adamId:placementType:metadata:privacy:positionInfo:appMetadata:cppIds:)();
    UUID.init()();
    uint64_t v149 = UUID.uuidString.getter();
    uint64_t v142 = v79;
    v78(v74, v77);
    double v80 = v144;
    UUID.init()();
    UUID.uuidString.getter();
    v78(v80, v77);
    uint64_t v81 = v145;
    uint64_t v82 = v146;
    id v83 = v147;
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v147, v37, v146);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v83, 0, 1, v82);
    uint64_t v84 = type metadata accessor for OnDeviceAdFetchFailReason();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v148, 1, 1, v84);
    uint64_t v62 = v151;
    OnDeviceAdvertFetchResponse.init(clientRequestId:iAdId:ad:failureReason:)();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v37, v82);
    goto LABEL_47;
  }
  static LocalPreferences.AppStoreKitInternal.getter();
  if (qword_10097E040 != -1) {
    swift_once();
  }
  sub_100087728(v53, (uint64_t)qword_1009E1048);
  Preferences.subscript.getter();
  swift_release();
  if (v152 == 2 || (v152 & 1) == 0)
  {
LABEL_34:
    uint64_t v97 = type metadata accessor for OnDeviceAdvertFetchResponse();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v151, 1, 1, v97);
  }
  uint64_t v54 = v143;
  UUID.init()();
  UUID.uuidString.getter();
  uint64_t v55 = v150;
  id v56 = *(void (**)(char *, uint64_t))(v149 + 8);
  v56(v54, v150);
  double v57 = v144;
  UUID.init()();
  UUID.uuidString.getter();
  v56(v57, v55);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v145 + 56))(v147, 1, 1, v146);
  uint64_t v58 = enum case for OnDeviceAdFetchFailReason.noAdAvailable(_:);
  uint64_t v59 = type metadata accessor for OnDeviceAdFetchFailReason();
  uint64_t v60 = *(void *)(v59 - 8);
  double v61 = v148;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 104))(v148, v58, v59);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v61, 0, 1, v59);
  uint64_t v62 = v151;
  OnDeviceAdvertFetchResponse.init(clientRequestId:iAdId:ad:failureReason:)();
LABEL_47:
  uint64_t v126 = type metadata accessor for OnDeviceAdvertFetchResponse();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v62, 0, 1, v126);
}

uint64_t sub_1000EFF9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000EFFB0(a1, a2);
  }
  return a1;
}

uint64_t sub_1000EFFB0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

id sub_1000F0008(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = sub_100082C28(&qword_100983EB0);
  __chkstk_darwin(v10);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViewCount] = 0;
  type metadata accessor for TodayCardChinLockupListIconView(0);
  uint64_t v11 = v4;
  ViewRecycler.init()();
  sub_1000F2140();
  ReusePool.init(recycler:limit:)();
  swift_weakInit();
  uint64_t v12 = &v11[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = &v11[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle];
  uint64_t v14 = enum case for TodayCard.Style.light(_:);
  uint64_t v15 = type metadata accessor for TodayCard.Style();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  uint64_t v16 = &v11[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_clickActionHandler];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  v11[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded] = 0;
  v11[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory] = 7;
  v11[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_wantsCardConsistentMargins] = 0;

  v22.receiver = v11;
  v22.super_class = ObjectType;
  id v17 = [super initWithFrame:a1, a2, a3, a4];
  [v17 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraExtraLarge];
  [v17 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  sub_100082C28(&qword_100985E10);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1007BEDF0;
  *(void *)(v18 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v18 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v21[3] = ObjectType;
  v21[0] = v17;
  id v19 = v17;
  UIView.registerForTraitChanges(_:target:action:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v21);
  return v19;
}

void sub_1000F0308()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TodayCard.Style();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded] & 1) != 0
    || v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory] != 6
    || (id v7 = objc_msgSend(v0, "traitCollection", v4),
        char v8 = UITraitCollection.prefersAccessibilityLayouts.getter(),
        v7,
        (v8 & 1) != 0))
  {
    uint64_t v9 = &v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
    id v10 = (id)sub_10000F6B4((uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    id v10 = [self clearColor];
  }
  [v1 setBackgroundColor:v10];
}

uint64_t sub_1000F04AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = v6;
  uint64_t v51 = a6;
  uint64_t v10 = a5;
  uint64_t v49 = a2;
  int v12 = a5;
  uint64_t v13 = type metadata accessor for TodayCard.Style();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = __chkstk_darwin(v13);
  id v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v18 = v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory];
  v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory] = v10;
  if (v12 == 7)
  {
    if (v18 == 7) {
      goto LABEL_6;
    }
LABEL_5:
    [v9 setNeedsLayout];
    goto LABEL_6;
  }
  if (v18 == 7) {
    goto LABEL_5;
  }
  switch(v10)
  {
    case 6u:
      if (v18 != 6) {
        goto LABEL_5;
      }
      break;
    case 5u:
      if (v18 != 5) {
        goto LABEL_5;
      }
      break;
    case 4u:
      if (v18 != 4) {
        goto LABEL_5;
      }
      break;
    default:
      if ((v18 - 7) > 0xFCu || v18 != v10) {
        goto LABEL_5;
      }
      break;
  }
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, a4, v13, v15);
  id v19 = &v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v19, v17, v13);
  swift_endAccess();
  sub_1000F0308();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  unint64_t v20 = TodayCardLockupListOverlay.lockups.getter();
  uint64_t v21 = v20;
  unint64_t v22 = v20 >> 62;
  if (!(v20 >> 62))
  {
    if (*(uint64_t *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 6) {
      uint64_t v23 = 6;
    }
    else {
      uint64_t v23 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_10;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v42 < 0) {
      break;
    }
    if (v41 >= 6) {
      uint64_t v44 = 6;
    }
    else {
      uint64_t v44 = v41;
    }
    if (v41 >= 0) {
      uint64_t v23 = v44;
    }
    else {
      uint64_t v23 = 6;
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31 < v23)
    {
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
LABEL_10:
    if ((v21 & 0xC000000000000001) != 0 && v23)
    {
      type metadata accessor for Lockup();
      Swift::Int v24 = 0;
      do
      {
        Swift::Int v25 = v24 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v24);
        Swift::Int v24 = v25;
      }
      while (v23 != v25);
    }
    if (v22)
    {
      swift_bridgeObjectRetain();
      unint64_t v22 = _CocoaArrayWrapper.subscript.getter();
      char v8 = v27;
      uint64_t v26 = v28;
      unint64_t v30 = v29;
      swift_bridgeObjectRelease_n();
      uint64_t v23 = v30 >> 1;
    }
    else
    {
      uint64_t v26 = 0;
      unint64_t v22 = v21 & 0xFFFFFFFFFFFFFF8;
      char v8 = (void *)((v21 & 0xFFFFFFFFFFFFFF8) + 32);
    }
    uint64_t v31 = v23 - v26;
    if (__OFSUB__(v23, v26)) {
      goto LABEL_65;
    }
    sub_1000F0AFC(v23 - v26, v51);
    *(void *)&v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViewCount] = v31;
    uint64_t v32 = (NSString *)[v9 traitCollection];
    [v9 bounds];
    double Width = CGRectGetWidth(v58);
    sub_1000F34C8(v32, v10, v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded], (uint64_t)&v57, Width);

    uint64_t v34 = (uint64_t *)&v9[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews];
    swift_beginAccess();
    uint64_t v10 = *v34;
    double v47 = v9;
    v46[1] = v22;
    if (v26 == v23)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
LABEL_69:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_1000F395C((uint64_t)&v57);
      uint64_t v45 = v47;
      sub_1000F0308();
      [v45 setNeedsLayout];
      return swift_unknownObjectRelease();
    }
    if (v26 >= v23) {
      goto LABEL_66;
    }
    uint64_t v31 = v26;
    uint64_t v7 = v8[v26];
    unint64_t v56 = (unint64_t)v10 >> 62;
    if (!((unint64_t)v10 >> 62))
    {
      uint64_t v21 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_retain();
      if (!v21) {
        goto LABEL_68;
      }
      goto LABEL_23;
    }
LABEL_67:
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v21)
    {
LABEL_68:
      swift_release();
      goto LABEL_69;
    }
LABEL_23:
    unint64_t v35 = 0;
    unint64_t v55 = v10 & 0xC000000000000001;
    uint64_t v36 = v10 & 0xFFFFFFFFFFFFFF8;
    uint64_t v50 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v10 < 0) {
      uint64_t v36 = v10;
    }
    uint64_t v48 = v36;
    uint64_t v54 = ~v31 + v23;
    uint64_t v52 = (uint64_t)&v8[v31 + 1];
    uint64_t v53 = v31 + 1;
    while (1)
    {
      if (v55)
      {
        uint64_t v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v35 >= *(void *)(v50 + 16)) {
          goto LABEL_55;
        }
        uint64_t v37 = *(id *)(v10 + 8 * v35 + 32);
      }
      char v8 = v37;
      unint64_t v22 = v35 + 1;
      if (__OFADD__(v35, 1)) {
        break;
      }
      uint64_t v21 = v7;
      uint64_t v38 = Lockup.icon.getter();
      if (v38)
      {
        uint64_t v39 = v38;
        uint64_t v40 = Lockup.clickAction.getter();
        uint64_t v9 = (unsigned char *)v31;
        uint64_t v21 = (uint64_t)v8;
        sub_1000F0F44(v39, v40, v49);
        swift_release();

        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
      }
      if (v54 == v35) {
        goto LABEL_69;
      }
      if ((uint64_t)(v53 + v35) < v31 || (uint64_t)(v53 + v35) >= v23) {
        goto LABEL_54;
      }
      uint64_t v7 = *(void *)(v52 + 8 * v35);
      if (v56)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v21 = *(void *)(v50 + 16);
        swift_retain();
      }
      ++v35;
      if (v22 == v21) {
        goto LABEL_68;
      }
    }
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1000F0AFC(int64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (int64_t *)&v3[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews];
  swift_beginAccess();
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7 == a1) {
      return;
    }
  }
  else if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) == a1)
  {
    return;
  }
  if ((unint64_t)*v6 >> 62) {
    goto LABEL_34;
  }
  uint64_t v8 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
  int64_t v9 = *v6;
  unint64_t v10 = (unint64_t)*v6 >> 62;
  if (v8 < a1)
  {
    if (v10)
    {
      swift_bridgeObjectRetain();
      a2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      int64_t v11 = a1 - a2;
      if (!__OFSUB__(a1, a2))
      {
LABEL_10:
        if ((v11 & 0x8000000000000000) == 0)
        {
          for (; v11; --v11)
          {
            swift_beginAccess();
            sub_100082C28(&qword_100983FB8);
            ReusePool.dequeue(or:)();
            swift_endAccess();
            [v3 addSubview:v23];
            swift_beginAccess();
            id v12 = v23;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();
          }
          return;
        }
        goto LABEL_38;
      }
    }
    else
    {
      a2 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      int64_t v11 = a1 - a2;
      if (!__OFSUB__(a1, a2)) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (!v10)
  {
    uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v14 = v13 - a1;
    if (!__OFSUB__(v13, a1)) {
      goto LABEL_18;
    }
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
LABEL_39:
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v14 = v22 - a1;
  if (__OFSUB__(v22, a1)) {
    goto LABEL_41;
  }
LABEL_18:
  if (v14 < 0)
  {
LABEL_42:
    __break(1u);
    return;
  }
  if (v14)
  {
    v3 += OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViewReusePool;
    do
    {
      swift_beginAccess();
      a1 = *v6;
      if ((unint64_t)*v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v21)
        {
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          swift_bridgeObjectRetain();
          uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
      }
      else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_32;
      }
      a1 = *v6;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v6 = a1;
      if (!isUniquelyReferenced_nonNull_bridgeObject || a1 < 0 || (a1 & 0x4000000000000000) != 0)
      {
        a1 = sub_10056C81C(a1);
        *uint64_t v6 = a1;
      }
      uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v16) {
        goto LABEL_33;
      }
      uint64_t v17 = v16 - 1;
      int v18 = *(char **)((a1 & 0xFFFFFFFFFFFFFF8) + 8 * v17 + 0x20);
      *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v17;
      specialized Array._endMutation()();
      swift_endAccess();
      if (a2)
      {
        id v19 = *(void **)&v18[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView];
        type metadata accessor for ArtworkView();
        sub_1000F3B1C((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
        id v20 = v19;
        ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)();
      }
      [v18 removeFromSuperview];
      uint64_t v23 = v18;
      swift_beginAccess();
      sub_100082C28(&qword_100983FB8);
      ReusePool.recycle(_:)();
      swift_endAccess();

      --v14;
    }
    while (v14);
  }
}

uint64_t sub_1000F0F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18[0] = a3;
  uint64_t v5 = sub_100082C28(&qword_10098D120);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for Artwork.Crop();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Artwork.crop.getter();
  Artwork.Crop.preferredContentMode.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  Artwork.config(_:mode:prefersLayeredImage:)();
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView);
  Artwork.style.getter();
  ArtworkView.style.setter();
  [v13 setContentMode:Artwork.contentMode.getter() v18[0]];
  ArtworkLoaderConfig.size.getter();
  ArtworkView.imageSize.setter();
  if (!Artwork.backgroundColor.getter())
  {
    sub_10008E8A0();
    static UIColor.placeholderBackground.getter();
  }
  ArtworkView.backgroundColor.setter();
  type metadata accessor for ArtworkView();
  sub_1000F3B1C((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
  if (a2)
  {
    v18[1] = a2;
    type metadata accessor for Action();
    type metadata accessor for ObjectGraph();
    sub_1000F3B1C(&qword_100981800, (void (*)(uint64_t))&type metadata accessor for Action);
    swift_retain();
    ComponentModel.pairedWith<A>(objectGraph:)();
    swift_release();
    swift_release();
    uint64_t v14 = sub_100082C28((uint64_t *)&unk_10098A9A0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 0, 1, v14);
  }
  else
  {
    swift_release();
    uint64_t v15 = sub_100082C28((uint64_t *)&unk_10098A9A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  }
  uint64_t v16 = v3 + OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_clickAction;
  swift_beginAccess();
  sub_1000F3988((uint64_t)v7, v16);
  return swift_endAccess();
}

id sub_1000F1310@<X0>(void *a1@<X8>)
{
  type metadata accessor for TodayCardChinLockupListIconView(0);
  id result = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *a1 = result;
  return result;
}

uint64_t sub_1000F1350()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for LayoutRect();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30.receiver = v1;
  v30.super_class = ObjectType;
  [super layoutSubviews:v4];
  uint64_t v7 = (NSString *)[v1 traitCollection];
  [v1 bounds];
  double Width = CGRectGetWidth(v51);
  uint64_t v9 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory;
  uint64_t v10 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded;
  sub_1000F34C8(v7, v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory], v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded], (uint64_t)v31, Width);
  long long v26 = v31[1];
  long long v27 = v31[0];
  uint64_t v11 = v32;
  uint64_t v12 = v33;
  char v13 = v34;
  long long v25 = v35;
  uint64_t v14 = v36;
  uint64_t v15 = v37;
  uint64_t v16 = v38;

  swift_beginAccess();
  unint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_100307DEC(v17);
  swift_bridgeObjectRelease();
  char v19 = v1[v9];
  char v20 = v1[v10];
  long long v39 = v27;
  long long v40 = v26;
  uint64_t v41 = v11;
  uint64_t v42 = v12;
  char v43 = v13;
  long long v44 = v25;
  uint64_t v45 = v14;
  uint64_t v46 = v15;
  uint64_t v47 = v16;
  uint64_t v48 = v18;
  char v49 = v19;
  char v50 = v20;
  [v1 bounds];
  sub_1000CECAC(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  uint64_t v21 = &v1[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock];
  uint64_t result = swift_beginAccess();
  uint64_t v23 = *(void (**)(uint64_t))v21;
  if (*(void *)v21)
  {
    uint64_t v24 = swift_retain();
    v23(v24);
    return sub_10006012C((uint64_t)v23);
  }
  return result;
}

double sub_1000F1614()
{
  uint64_t v1 = v0;
  uint64_t v2 = (NSString *)[v0 traitCollection];
  [v1 bounds];
  double Width = CGRectGetWidth(v49);
  uint64_t v4 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory;
  uint64_t v5 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded;
  sub_1000F34C8(v2, *((unsigned char *)v1 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory), *((unsigned char *)v1 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded), (uint64_t)v30, Width);
  long long v28 = v30[1];
  long long v29 = v30[0];
  uint64_t v6 = v31;
  uint64_t v7 = v32;
  char v8 = v33;
  long long v27 = v34;
  uint64_t v9 = v35;
  uint64_t v10 = v36;
  uint64_t v11 = v37;

  swift_beginAccess();
  unint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_100307DEC(v12);
  swift_bridgeObjectRelease();
  char v14 = *((unsigned char *)v1 + v4);
  char v15 = *((unsigned char *)v1 + v5);
  v38[0] = v29;
  v38[1] = v28;
  uint64_t v39 = v6;
  uint64_t v40 = v7;
  char v41 = v8;
  long long v42 = v27;
  uint64_t v43 = v9;
  uint64_t v44 = v10;
  uint64_t v45 = v11;
  uint64_t v46 = v13;
  char v47 = v14;
  char v48 = v15;
  id v16 = [v1 traitCollection];
  if (qword_1009807D8 != -1) {
    swift_once();
  }
  sub_100057F18(v16, (uint64_t)&xmmword_1009E7A90, 1);
  UITraitCollection.prefersAccessibilityLayouts.getter();
  static UIEdgeInsets.vertical(top:bottom:)();
  UITraitCollection.prefersAccessibilityLayouts.getter();
  static UIEdgeInsets.vertical(top:bottom:)();

  id v17 = [v1 traitCollection];
  type metadata accessor for TraitEnvironmentPlaceholder();
  sub_100082C28(&qword_100982B50);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1007BEA80;
  *(void *)(v18 + 32) = v17;
  id v19 = v17;
  char v20 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)();
  sub_1000F30DC(v20, (uint64_t)v38);
  double v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((*((unsigned char *)v1 + v5) & 1) != 0
    || *((unsigned char *)v1 + v4) != 6
    || (id v23 = [v1 traitCollection],
        char v24 = UITraitCollection.prefersAccessibilityLayouts.getter(),
        v23,
        (v24 & 1) != 0))
  {
    id v25 = [v1 traitCollection:v27, v28, v29];
    sub_100057F18(v25, (uint64_t)&xmmword_1009E7A90, 1);
    UITraitCollection.prefersAccessibilityLayouts.getter();
    static UIEdgeInsets.vertical(top:bottom:)();
    UITraitCollection.prefersAccessibilityLayouts.getter();
    static UIEdgeInsets.vertical(top:bottom:)();
  }
  return v22;
}

uint64_t sub_1000F19C8()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        uint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v6 = (char *)*(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      ++v5;
      char v8 = *(void **)&v6[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView];
      type metadata accessor for ArtworkView();
      sub_1000F3B1C((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
      id v9 = v8;
      ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)();
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1000F1B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImpressionMetrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v12 = (void *)Strong;
    swift_beginAccess();
    uint64_t v13 = swift_weakLoadStrong();
    if (!v13)
    {

      return;
    }
    uint64_t v14 = v13;
    sub_100082C6C(a3, (uint64_t)v25);
    sub_100082C28((uint64_t *)&unk_100983890);
    type metadata accessor for TodayCard();
    if (swift_dynamicCast())
    {
      uint64_t v15 = TodayCard.overlay.getter();
      swift_release();
      if (v15)
      {
        type metadata accessor for TodayCardLockupListOverlay();
        if (swift_dynamicCastClass())
        {
          unint64_t v16 = TodayCardLockupListOverlay.lockups.getter();
          unint64_t v17 = v16;
          uint64_t v23 = v14;
          v20[1] = v15;
          if (v16 >> 62)
          {
            uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
            if (v18) {
              goto LABEL_8;
            }
          }
          else
          {
            uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v18)
            {
LABEL_8:
              if (v18 < 1)
              {
                __break(1u);
                return;
              }
              uint64_t v19 = 0;
              unint64_t v24 = v17 & 0xC000000000000001;
              double v21 = (void (**)(char *, uint64_t))(v8 + 8);
              double v22 = (void (**)(char *, char *, uint64_t))(v8 + 32);
              do
              {
                if (v24) {
                  specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  swift_retain();
                }
                Lockup.impressionMetrics.getter();
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
                {
                  swift_release();
                  sub_100082BCC((uint64_t)v6, &qword_100985970);
                }
                else
                {
                  (*v22)(v10, v6, v7);
                  [v12 frame];
                  ImpressionsCalculator.addElement(_:at:)();
                  swift_release();
                  (*v21)(v10, v7);
                }
                ++v19;
              }
              while (v18 != v19);
            }
          }

          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_20;
        }
        swift_release();
      }
    }

LABEL_20:
    swift_release();
  }
}

uint64_t sub_1000F1FA0()
{
  return type metadata accessor for TodayCardChinLockupListView(0);
}

uint64_t type metadata accessor for TodayCardChinLockupListView(uint64_t a1)
{
  return sub_10007F0EC(a1, (uint64_t *)&unk_100983E98);
}

void sub_1000F1FC8()
{
  sub_1000F20D8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TodayCard.Style();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000F20D8()
{
  if (!qword_100983EA8)
  {
    sub_100078F30(&qword_100983EB0);
    sub_1000F2140();
    unint64_t v0 = type metadata accessor for ReusePool();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100983EA8);
    }
  }
}

unint64_t sub_1000F2140()
{
  unint64_t result = qword_100983EB8;
  if (!qword_100983EB8)
  {
    sub_100078F30(&qword_100983EB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100983EB8);
  }
  return result;
}

uint64_t sub_1000F219C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1000F04AC(*a1, a2, a3, a4, a5, a6);
}

void sub_1000F21A4(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded) = a1;
  sub_1000F0308();
}

uint64_t sub_1000F21B4()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_wantsCardConsistentMargins);
}

uint64_t sub_1000F21C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_clickActionHandler);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_clickActionHandler);
  void *v3 = a1;
  v3[1] = a2;
  return sub_10006012C(v4);
}

uint64_t sub_1000F21E8()
{
  id v1 = [v0 accessibilityElements];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1000F2248()
{
  return swift_weakLoadStrong();
}

uint64_t sub_1000F2294()
{
  return swift_release();
}

void (*sub_1000F22F0(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1000F2374;
}

void sub_1000F2374(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }

  free(v3);
}

uint64_t sub_1000F23F4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_100060050(*v1);
  return v2;
}

uint64_t sub_1000F2450(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_10006012C(v6);
}

uint64_t (*sub_1000F24B0())()
{
  return j__swift_endAccess;
}

void (*sub_1000F250C(uint64_t a1))()
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  sub_100082C6C(a1, (uint64_t)v6);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  sub_100081DD4(v6, v4 + 32);
  return sub_1000F3AA8;
}

char *sub_1000F25D4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView;
  type metadata accessor for ArtworkView();
  uint64_t v11 = v4;
  *(void *)&v4[v10] = static ArtworkView.iconArtworkView.getter();
  unint64_t v12 = &v11[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_clickAction];
  uint64_t v13 = sub_100082C28((uint64_t *)&unk_10098A9A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);

  v21.receiver = v11;
  v21.super_class = ObjectType;
  uint64_t v14 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v15 = OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView;
  unint64_t v16 = *(void **)&v14[OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_artworkView];
  unint64_t v17 = v14;
  [v17 addSubview:v16];
  id v18 = v16;
  ArtworkView.setImageDisablesAnimations.setter();

  [*(id *)&v14[v15] setUserInteractionEnabled:0];
  id v19 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v17 action:"handleTap"];
  [v19 setDelaysTouchesBegan:1];
  [v17 addGestureRecognizer:v19];

  return v17;
}

uint64_t sub_1000F28F0()
{
  uint64_t v1 = type metadata accessor for Dependency();
  uint64_t v47 = *(void *)(v1 - 8);
  uint64_t v48 = v1;
  __chkstk_darwin(v1);
  uint64_t v44 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for MetricsFieldsContext();
  uint64_t v3 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  __chkstk_darwin(v9);
  uint64_t v43 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100082C28(&qword_10098D120);
  __chkstk_darwin(v14 - 8);
  unint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100082C28((uint64_t *)&unk_10098A9A0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v0 + OBJC_IVAR____TtC8AppStore31TodayCardChinLockupListIconView_clickAction;
  swift_beginAccess();
  sub_1000F3AB4(v21, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    double v22 = &qword_10098D120;
    uint64_t v23 = (uint64_t)v16;
    return sub_100082BCC(v23, v22);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  ObjectGraphPair.objectGraph.getter();
  ObjectGraph.actionDispatcher.getter();
  swift_release();
  uint64_t v24 = sub_100082C28((uint64_t *)&unk_100984530);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v13, 1, v24) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    double v22 = &qword_1009875B0;
    uint64_t v23 = (uint64_t)v13;
    return sub_100082BCC(v23, v22);
  }
  uint64_t v41 = v24;
  ObjectGraphPair.value.getter();
  uint64_t v27 = ObjectGraphPair.objectGraph.getter();
  uint64_t v38 = v5;
  uint64_t v28 = v27;
  uint64_t v29 = v49[5];
  v49[3] = type metadata accessor for Action();
  v49[4] = sub_1000F3B1C((unint64_t *)&qword_1009875D0, (void (*)(uint64_t))&type metadata accessor for Action);
  v49[0] = v29;
  swift_retain();
  uint64_t v39 = v28;
  sub_1005365D0();
  objc_super v30 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v40 = v25;
  uint64_t v31 = v42;
  v30(v38, v8, v42);
  uint64_t v32 = v44;
  Dependency.init<A>(satisfying:with:)();
  dispatch thunk of BaseObjectGraph.adding(dependency:)();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
  char v33 = v43;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v43, v8, v31);
  uint64_t v35 = v45;
  uint64_t v34 = v46;
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v33, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v46);
  uint64_t v36 = v41;
  ActionDispatcher.perform(_:withMetrics:asPartOf:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v49);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v13, v36);
}

uint64_t sub_1000F2F70()
{
  return type metadata accessor for TodayCardChinLockupListIconView(0);
}

uint64_t type metadata accessor for TodayCardChinLockupListIconView(uint64_t a1)
{
  return sub_10007F0EC(a1, (uint64_t *)&unk_100983EF0);
}

void sub_1000F2F98()
{
  sub_1000F3038();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000F3038()
{
  if (!qword_100984CF0)
  {
    sub_100078F30((uint64_t *)&unk_10098A9A0);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100984CF0);
    }
  }
}

uint64_t sub_1000F3094()
{
  return sub_1000F3B1C(&qword_100983F00, (void (*)(uint64_t))&type metadata accessor for TodayCardLockupListOverlay);
}

void sub_1000F30DC(void *a1, uint64_t a2)
{
  id v4 = [a1 traitCollection];
  sub_1000CDDE8();

  CGSize.subtracting(insets:)();
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  id v9 = [a1 traitCollection];
  LOBYTE(v4) = UITraitCollection.prefersAccessibilityLayouts.getter();

  if (v4) {
    sub_1000CDF24(0, v12, 0.0, 0.0, v6, v8);
  }
  else {
    sub_1000CE804(0, (uint64_t)v12, 0.0, 0.0, v6, v8);
  }
  sub_1000CF318((uint64_t)v12);
  CGSize.adding(outsets:)();
  id v10 = [a1 traitCollection];
  uint64_t v11 = v10;
  if ((*(unsigned char *)(a2 + 105) & 1) == 0 && *(unsigned char *)(a2 + 104) == 6)
  {
    UITraitCollection.prefersAccessibilityLayouts.getter();
  }
  else
  {
  }
}

void sub_1000F32D4(uint64_t a1, void *a2)
{
  if (UITraitCollection.prefersAccessibilityLayouts.getter())
  {
    id v4 = [a2 preferredContentSizeCategory];
    double v5 = UIContentSizeCategoryAccessibilityMedium;
    CGFloat v6 = UIContentSizeCategoryAccessibilityExtraLarge;
    if ((static UIContentSizeCategory.<= infix(_:_:)() & 1) == 0)
    {
      __break(1u);
      goto LABEL_17;
    }
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      double v7 = v6;
      id v8 = v4;
      char v9 = static UIContentSizeCategory.<= infix(_:_:)();

      if (v9)
      {
        if (qword_10097F920 == -1) {
          return;
        }
LABEL_17:
        swift_once();
        return;
      }
    }
    else
    {
    }
    if (qword_1009807D8 != -1) {
      goto LABEL_16;
    }
    while (1)
    {
      sub_100057F18(a2, (uint64_t)&xmmword_1009E7A90, 1);
      if (!__OFSUB__(a1, 1)) {
        break;
      }
      __break(1u);
LABEL_16:
      swift_once();
    }
  }
  else if (qword_1009807D8 != -1)
  {
    goto LABEL_17;
  }
}

unint64_t sub_1000F34C8@<X0>(UIContentSizeCategory a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  if ((UITraitCollection.prefersAccessibilityLayouts.getter() & 1) == 0)
  {
    id v17 = (id)ASKDeviceTypeGetCurrent();
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;
    double v16 = 16.0;
    if (v18 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v20 != v21)
    {
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        double v16 = 16.0;
      }
      else {
        double v16 = 10.0;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = 1;
    sub_1000F32D4(1, a1);
    a5 = v23;
    uint64_t v25 = v24;
    if (((a2 != 7) & ~a3 & (a2 == 6)) != 0) {
      unint64_t v26 = -1;
    }
    else {
      unint64_t v26 = 0;
    }
    int8x16_t v27 = (int8x16_t)vdupq_n_s64(v26);
    int8x16_t v47 = vbslq_s8(v27, *(int8x16_t *)&UIEdgeInsetsZero.top, (int8x16_t)xmmword_1007C0570);
    int8x16_t v46 = vbslq_s8(v27, *(int8x16_t *)&UIEdgeInsetsZero.bottom, (int8x16_t)xmmword_1007C0570);
    sub_100082C28(&qword_100983FB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007BF710;
    *(void *)(inited + 32) = 2;
    *(_OWORD *)(inited + 40) = xmmword_1007C0580;
    *(_OWORD *)(inited + 56) = xmmword_1007C0580;
    *(void *)(inited + 72) = 3;
    *(_OWORD *)(inited + 80) = xmmword_1007C0590;
    *(_OWORD *)(inited + 96) = xmmword_1007C0590;
    *(void *)(inited + 112) = 4;
    *(_OWORD *)(inited + 120) = xmmword_1007C05A0;
    *(_OWORD *)(inited + 136) = xmmword_1007C05A0;
    unint64_t v29 = sub_10066FE60(inited);
    unint64_t result = swift_setDeallocating();
    long long v32 = (__int128)v46;
    long long v31 = (__int128)v47;
    char v33 = 0;
    double v34 = 22.0;
    double v35 = 8.0;
    goto LABEL_34;
  }
  id v10 = [(NSString *)a1 preferredContentSizeCategory];
  uint64_t v11 = UIContentSizeCategoryAccessibilityMedium;
  uint64_t v12 = UIContentSizeCategoryAccessibilityExtraLarge;
  if ((static UIContentSizeCategory.<= infix(_:_:)() & 1) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((static UIContentSizeCategory.>= infix(_:_:)() & 1) == 0)
  {

    double v16 = 20.0;
    goto LABEL_21;
  }
  uint64_t v13 = v12;
  id v14 = v10;
  char v15 = static UIContentSizeCategory.<= infix(_:_:)();

  double v16 = 20.0;
  if ((v15 & 1) == 0) {
    goto LABEL_21;
  }
  if (qword_10097F920 != -1) {
    goto LABEL_38;
  }
  while (1)
  {
    if (*(double *)&qword_1009E54F0 >= a5) {
      double v16 = 10.0;
    }
    else {
      double v16 = 16.0;
    }
LABEL_21:
    id v36 = [(NSString *)a1 preferredContentSizeCategory];
    uint64_t v11 = (uint64_t)(id)v11;
    uint64_t v12 = v12;
    if ((static UIContentSizeCategory.<= infix(_:_:)() & 1) == 0)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (static UIContentSizeCategory.>= infix(_:_:)())
    {
      uint64_t v37 = v12;
      id v38 = v36;
      char v39 = static UIContentSizeCategory.<= infix(_:_:)();

      if (v39)
      {
        uint64_t v11 = 1;
        goto LABEL_27;
      }
    }
    else
    {
    }
    uint64_t v11 = 2;
LABEL_27:
    sub_1000F32D4(v11, a1);
    a5 = v40;
    uint64_t v25 = v41;
    uint64_t v12 = (NSString *)[(NSString *)a1 preferredContentSizeCategory];
    a1 = UIContentSizeCategoryAccessibilityExtraExtraLarge;
    uint64_t v42 = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
    if (static UIContentSizeCategory.<= infix(_:_:)()) {
      break;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    swift_once();
  }
  if (static UIContentSizeCategory.>= infix(_:_:)())
  {
    uint64_t v43 = v42;
    uint64_t v44 = v12;
    char v45 = static UIContentSizeCategory.<= infix(_:_:)();

    if (v45)
    {
      char v33 = 1;
      goto LABEL_33;
    }
  }
  else
  {
  }
  char v33 = 0;
LABEL_33:
  unint64_t result = sub_10066FE60((uint64_t)_swiftEmptyArrayStorage);
  long long v31 = xmmword_1007C05B0;
  unint64_t v29 = result;
  double v35 = v16;
  double v34 = v16;
  long long v32 = xmmword_1007C05B0;
LABEL_34:
  *(double *)a4 = a5;
  *(void *)(a4 + 8) = v25;
  *(double *)(a4 + 16) = v16;
  *(double *)(a4 + 24) = v35;
  *(double *)(a4 + 32) = v34;
  *(void *)(a4 + 40) = v11;
  *(unsigned char *)(a4 + 48) = v33;
  *(_OWORD *)(a4 + 56) = v31;
  *(_OWORD *)(a4 + 72) = v32;
  *(void *)(a4 + 88) = v29;
  return result;
}

uint64_t sub_1000F395C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000F3988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_10098D120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F39F0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F3A28()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F3A60()
{
  swift_release();
  swift_release();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v0 + 32);

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1000F3AA8()
{
  sub_1000F1B3C(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

uint64_t sub_1000F3AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_10098D120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F3B1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000F3B64()
{
  uint64_t v1 = sub_100082C28(&qword_100983EB0);
  __chkstk_darwin(v1);
  *(void *)&v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViews] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_lockupIconViewCount] = 0;
  type metadata accessor for TodayCardChinLockupListIconView(0);
  ViewRecycler.init()();
  sub_1000F2140();
  ReusePool.init(recycler:limit:)();
  swift_weakInit();
  uint64_t v2 = &v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_impressionsUpdateBlock];
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_todayCardStyle];
  uint64_t v4 = enum case for TodayCard.Style.light(_:);
  uint64_t v5 = type metadata accessor for TodayCard.Style();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);
  CGFloat v6 = &v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_clickActionHandler];
  *CGFloat v6 = 0;
  v6[1] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_isExpanded] = 0;
  v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_sizeCategory] = 7;
  v0[OBJC_IVAR____TtC8AppStore27TodayCardChinLockupListView_wantsCardConsistentMargins] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1000F3D28(void *a1)
{
  id v16 = [*(id *)(v1 + 16) view];
  if (v16)
  {
    [a1 _systemContentInset];
    double v4 = v3;
    double v6 = v5;
    [a1 contentOffset];
    double v8 = v7;
    double v10 = v9;
    [a1 contentInset];
    double v12 = v6 + v8 + v11;
    double v14 = v4 + v10 + v13;
    [a1 bounds];
    [v16 setFrame:sub_1000F3E14(v12, v14, v15)];
  }
  else
  {
    __break(1u);
  }
}

double sub_1000F3E14(double a1, double a2, double a3)
{
  uint64_t v5 = *(void *)(v3 + 16);
  double v6 = *(void **)(v5 + OBJC_IVAR____TtC8AppStore27ArticleHeaderViewController_alternateCell);
  if (v6)
  {
    uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC8AppStore27ArticleHeaderViewController_alternateCell + 8);
    id v8 = *(id *)(v5 + OBJC_IVAR____TtC8AppStore27ArticleHeaderViewController_alternateCell);
  }
  else
  {
    uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC8AppStore27ArticleHeaderViewController_cell + 8);
    id v8 = *(id *)(v5 + OBJC_IVAR____TtC8AppStore27ArticleHeaderViewController_cell);
    double v6 = 0;
  }
  id v9 = v6;
  sub_10077C204(a3, (uint64_t)v8, v7);

  type metadata accessor for ListTodayCardCollectionViewCell();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for LegacyListTodayCardCollectionViewCell();
    swift_dynamicCastClass();
  }
  return 0.0;
}

uint64_t sub_1000F3F58()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArticleHeaderScrollObserver()
{
  return self;
}

id sub_1000F3FC0()
{
  uint64_t v0 = type metadata accessor for PageGrid();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ShelfLayoutContext();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter();
  ShelfLayoutContext.contentPageGrid.getter();
  id v8 = *(void (**)(char *, uint64_t))(v5 + 8);
  v8(v7, v4);
  PageGrid.containerWidth.getter();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  ItemLayoutContext.parentShelfLayoutContext.getter();
  uint64_t v11 = ShelfLayoutContext.traitCollection.getter();
  v8(v7, v4);
  double v12 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  double v13 = (char *)objc_allocWithZone(v12);
  double v14 = &v13[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)double v14 = v10;
  *((void *)v14 + 1) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)&v13[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v11;
  v16.receiver = v13;
  v16.super_class = v12;
  return [super init];
}

uint64_t sub_1000F41CC()
{
  uint64_t v0 = type metadata accessor for FontSource();
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FootnoteLayout.Metrics();
  sub_100042444(v4, qword_1009E10C8);
  uint64_t v19 = sub_100087728(v4, (uint64_t)qword_1009E10C8);
  if (qword_10097F288 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for FontUseCase();
  uint64_t v17 = sub_100087728(v5, (uint64_t)qword_1009E41F0);
  uint64_t v6 = *(void *)(v5 - 8);
  objc_super v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v18 = v6 + 16;
  v16(v3, v17, v5);
  uint64_t v7 = enum case for FontSource.useCase(_:);
  double v15 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v15(v3, enum case for FontSource.useCase(_:), v0);
  uint64_t v8 = type metadata accessor for StaticDimension();
  v26[3] = v8;
  v26[4] = (uint64_t)&protocol witness table for StaticDimension;
  sub_1000808B8(v26);
  uint64_t v24 = v0;
  uint64_t v25 = &protocol witness table for FontSource;
  uint64_t v9 = sub_1000808B8(v23);
  uint64_t v10 = (void (*)(uint64_t *, char *, uint64_t))v1[2];
  v10(v9, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  uint64_t v11 = (void (*)(char *, uint64_t))v1[1];
  v11(v3, v0);
  v16(v3, v17, v5);
  v15(v3, v7, v0);
  uint64_t v24 = v8;
  uint64_t v25 = &protocol witness table for StaticDimension;
  sub_1000808B8(v23);
  uint64_t v21 = (void *)v0;
  double v22 = &protocol witness table for FontSource;
  double v12 = sub_1000808B8(v20);
  v10(v12, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  v11(v3, v0);
  uint64_t v21 = &type metadata for Double;
  double v22 = &protocol witness table for Double;
  v20[0] = 0x4018000000000000;
  return FootnoteLayout.Metrics.init(textSpace:bottomSpace:chevronMargin:)();
}

uint64_t sub_1000F44BC()
{
  sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  uint64_t result = static UIColor.secondaryText.getter();
  qword_100984070 = result;
  return result;
}

uint64_t sub_1000F4500()
{
  sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  uint64_t result = static UIColor.tertiaryText.getter();
  qword_100984078 = result;
  return result;
}

uint64_t sub_1000F4544()
{
  uint64_t v0 = type metadata accessor for SystemImage();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for SystemImage.chevronForward(_:), v0, v2);
  uint64_t v5 = self;
  uint64_t v6 = UIFontTextStyleFootnote;
  id v7 = [v5 configurationWithTextStyle:v6 scale:1];

  uint64_t v8 = static SystemImage.load(_:with:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_1009E10E0 = v8;
  return result;
}

char *sub_1000F4694(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v42 = type metadata accessor for Separator.Position();
  uint64_t v10 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  double v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Separator();
  uint64_t v43 = *(void *)(v13 - 8);
  uint64_t v44 = v13;
  __chkstk_darwin(v13);
  double v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v20 - 8);
  double v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v5[OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView] = 0;
  v5[OBJC_IVAR____TtC8AppStore12FootnoteView_hasChevron] = 0;
  v5[OBJC_IVAR____TtC8AppStore12FootnoteView_textLightensOnHighlight] = 0;
  v5[OBJC_IVAR____TtC8AppStore12FootnoteView_isHighlighted] = 0;
  uint64_t v23 = qword_10097F288;
  uint64_t v24 = v5;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for FontUseCase();
  uint64_t v26 = sub_100087728(v25, (uint64_t)qword_1009E41F0);
  uint64_t v27 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v22, v26, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v22, 0, 1, v25);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for DirectionalTextAlignment.none(_:), v16);
  id v28 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
  *(void *)&v24[OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for Separator.Position.top(_:), v42);
  v47[3] = type metadata accessor for ZeroDimension();
  v47[4] = (uint64_t)&protocol witness table for ZeroDimension;
  sub_1000808B8(v47);
  static ZeroDimension.zero.getter();
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)();
  unint64_t v29 = [(char *)objc_allocWithZone((Class)type metadata accessor for SeparatorView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  objc_super v30 = &v29[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v30, v15, v44);
  swift_endAccess();
  *(void *)&v24[OBJC_IVAR____TtC8AppStore12FootnoteView_separatorView] = v29;

  v46.receiver = v24;
  v46.super_class = ObjectType;
  id v31 = [super initWithFrame:a1, a2, a3, a4];
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  double v35 = (char *)v31;
  [v35 setLayoutMargins:UIEdgeInsetsZero.top, left, bottom, right];
  uint64_t v36 = OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel;
  uint64_t v37 = qword_10097E060;
  id v38 = *(id *)&v35[OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel];
  if (v37 != -1) {
    swift_once();
  }
  [v38 setTextColor:qword_100984070];

  id v39 = *(id *)&v35[v36];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter();

  [v35 addSubview:*(void *)&v35[v36]];
  [v35 addSubview:*(void *)&v35[OBJC_IVAR____TtC8AppStore12FootnoteView_separatorView]];

  return v35;
}

double sub_1000F4CAC()
{
  uint64_t v1 = type metadata accessor for FootnoteLayout.Metrics();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FootnoteLayout();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097E058 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100087728(v1, (uint64_t)qword_1009E10C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v9, v1);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel);
  uint64_t v21 = type metadata accessor for DynamicTypeLabel();
  double v22 = &protocol witness table for UILabel;
  uint64_t v20 = v10;
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView);
  if (v11)
  {
    *((void *)&v18 + 1) = sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
    uint64_t v19 = &protocol witness table for UIView;
    *(void *)&long long v17 = v11;
  }
  else
  {
    uint64_t v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
  }
  id v12 = v10;
  id v13 = v11;
  FootnoteLayout.init(metrics:labelView:chevronView:)();
  sub_1000F5CA0(&qword_1009840D8, (void (*)(uint64_t))&type metadata accessor for FootnoteLayout);
  dispatch thunk of Measurable.measurements(fitting:in:)();
  double v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v15;
}

uint64_t sub_1000F4F98()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v38 = type metadata accessor for Separator();
  uint64_t v3 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for LayoutRect();
  uint64_t v6 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FootnoteLayout.Metrics();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for FootnoteLayout();
  uint64_t v35 = *(void *)(v37 - 8);
  *(void *)&double v13 = __chkstk_darwin(v37).n128_u64[0];
  double v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45.receiver = v1;
  v45.super_class = ObjectType;
  uint64_t v36 = ObjectType;
  [super layoutSubviews:v13];
  if (qword_10097E058 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100087728(v9, (uint64_t)qword_1009E10C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  long long v17 = *(void **)&v1[OBJC_IVAR____TtC8AppStore12FootnoteView_textLabel];
  uint64_t v43 = type metadata accessor for DynamicTypeLabel();
  uint64_t v44 = &protocol witness table for UILabel;
  uint64_t v42 = v17;
  long long v18 = *(void **)&v1[OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView];
  if (v18)
  {
    *((void *)&v40 + 1) = sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
    uint64_t v41 = &protocol witness table for UIView;
    *(void *)&long long v39 = v18;
  }
  else
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
  }
  id v19 = v17;
  id v20 = v18;
  FootnoteLayout.init(metrics:labelView:chevronView:)();
  LayoutMarginsAware<>.layoutFrame.getter();
  FootnoteLayout.placeChildren(relativeTo:in:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v34);
  uint64_t v21 = *(char **)&v1[OBJC_IVAR____TtC8AppStore12FootnoteView_separatorView];
  [v1 bounds];
  double v22 = &v21[OBJC_IVAR____TtC8AppStore13SeparatorView_separator];
  swift_beginAccess();
  uint64_t v23 = v38;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v22, v38);
  Separator.frame(forBoundingRect:in:)();
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  [v21 setFrame:v25, v27, v29, v31];
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v15, v37);
}

void sub_1000F5450(char a1)
{
  if (v1[OBJC_IVAR____TtC8AppStore12FootnoteView_hasChevron] == (a1 & 1)) {
    return;
  }
  uint64_t v2 = v1;
  if (v1[OBJC_IVAR____TtC8AppStore12FootnoteView_hasChevron])
  {
    if (qword_10097E070 != -1) {
      swift_once();
    }
    id v3 = [objc_allocWithZone((Class)UIImageView) initWithImage:qword_1009E10E0];
    sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
    uint64_t v4 = (void *)static UIColor.tableViewCellChevron.getter();
    [v3 setTintColor:v4];

    uint64_t v5 = OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView;
    uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView];
    id v7 = v3;
    if (v6)
    {
      [v6 removeFromSuperview];
      uint64_t v6 = *(void **)&v2[v5];
    }
    *(void *)&v2[v5] = v3;
    id v15 = v3;

    uint64_t v11 = *(void **)&v2[v5];
    if (v11)
    {
      id v12 = v11;
      [v2 addSubview:v12];
      [v2 setNeedsLayout];

      double v13 = v12;
LABEL_17:

      return;
    }

LABEL_16:
    double v13 = v15;
    goto LABEL_17;
  }
  uint64_t v8 = OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView;
  uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtC8AppStore12FootnoteView_chevronView];
  if (v9)
  {
    [v9 removeFromSuperview];
    uint64_t v10 = *(void **)&v2[v8];
  }
  else
  {
    uint64_t v10 = 0;
  }
  *(void *)&v2[v8] = 0;

  uint64_t v14 = *(void **)&v2[v8];
  if (v14)
  {
    id v15 = v14;
    [v2 addSubview:v15];
    [v2 setNeedsLayout];
    goto LABEL_16;
  }
}

uint64_t type metadata accessor for FootnoteView()
{
  return self;
}

double sub_1000F56E4(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  int v29 = a3;
  uint64_t v28 = a1;
  uint64_t v5 = type metadata accessor for FootnoteLayout.Metrics();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v30 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for FootnoteLayout();
  uint64_t v31 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LabelPlaceholderCompatibility();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084CF0(0, (unint64_t *)&qword_100984D10);
  if (qword_10097F288 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for FontUseCase();
  sub_100087728(v14, (uint64_t)qword_1009E41F0);
  uint64_t v33 = a4;
  id v15 = [a4 traitCollection:v28];
  uint64_t v16 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)();

  uint64_t v17 = type metadata accessor for Feature();
  v39[3] = v17;
  v39[4] = sub_1000F5CA0((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
  long long v18 = sub_1000808B8(v39);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, enum case for Feature.measurement_with_labelplaceholder(_:), v17);
  swift_bridgeObjectRetain();
  id v19 = v16;
  isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v39);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)();
  LabelPlaceholderCompatibility.layoutTextView.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v29)
  {
    if (qword_10097E070 != -1) {
      swift_once();
    }
    [(id)qword_1009E10E0 size];
    uint64_t v20 = type metadata accessor for LayoutViewPlaceholder();
    swift_allocObject();
    uint64_t v21 = LayoutViewPlaceholder.init(representing:)();
    *((void *)&v37 + 1) = v20;
    uint64_t v38 = &protocol witness table for LayoutViewPlaceholder;
    *(void *)&long long v36 = v21;
  }
  else
  {
    uint64_t v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
  }
  double v22 = v33;
  if (qword_10097E058 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100087728(v5, (uint64_t)qword_1009E10C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v30, v23, v5);
  sub_100082C6C((uint64_t)v39, (uint64_t)v35);
  sub_10005BDC8((uint64_t)&v36, (uint64_t)v34);
  FootnoteLayout.init(metrics:labelView:chevronView:)();
  [v22 pageMarginInsets];
  CGSize.subtracting(insets:)();
  sub_1000F5CA0(&qword_1009840D8, (void (*)(uint64_t))&type metadata accessor for FootnoteLayout);
  uint64_t v24 = v32;
  dispatch thunk of Measurable.measurements(fitting:in:)();
  CGSize.adding(outsets:)();
  double v26 = v25;

  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v24);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v39);
  sub_10005B7C8((uint64_t)&v36);
  return v26;
}

uint64_t sub_1000F5CA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000F5CE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_100082C28(&qword_1009840F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000FA378(a3, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for Artwork.URLTemplate();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100082BCC((uint64_t)v10, &qword_1009840F0);
  }
  else
  {
    char v16 = Artwork.URLTemplate.isSystemImage.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (v16)
    {
      if (a1)
      {
        id v17 = [a1 imageByApplyingSymbolConfiguration:a5];
        if (v17)
        {
          long long v18 = v17;
          [v17 size];
          uint64_t v20 = v19;
          uint64_t v22 = v21;

          swift_beginAccess();
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          if (Strong)
          {
            uint64_t v24 = (void *)Strong;
            double v25 = (void (*)(unsigned char *, void))ArtworkView.frame.modify();
            *(void *)(v26 + 16) = v20;
            *(void *)(v26 + 24) = v22;
            v25(v28, 0);
          }
        }
      }
    }
  }
  swift_beginAccess();
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    id v15 = (void *)v13;
    v29.value.super.Class isa = (Class)a1;
    v29.is_nil = 0;
    ArtworkView.show(image:isAnimationPermitted:)(v29, v14);
  }
}

uint64_t sub_1000F5EF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v135 = a5;
  uint64_t v143 = a4;
  int v140 = a3;
  uint64_t v139 = a2;
  uint64_t v10 = type metadata accessor for AutomationSemantics();
  uint64_t v145 = *(void *)(v10 - 8);
  uint64_t v146 = v10;
  __chkstk_darwin(v10);
  v144 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28(&qword_10098D120);
  __chkstk_darwin(v12 - 8);
  uint64_t v136 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for BadgeViewSpacing();
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  CGRect v129 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v130 = (char *)&v123 - v16;
  uint64_t v153 = type metadata accessor for BadgeType();
  uint64_t v155 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v137 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v134 = (char *)&v123 - v19;
  __chkstk_darwin(v20);
  uint64_t v151 = (char *)&v123 - v21;
  __chkstk_darwin(v22);
  uint64_t v150 = (char *)&v123 - v23;
  __chkstk_darwin(v24);
  uint64_t v149 = (char *)&v123 - v25;
  __chkstk_darwin(v26);
  CGRect v124 = (char *)&v123 - v27;
  uint64_t v128 = type metadata accessor for BadgeValueViewAlignment();
  uint64_t v148 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  v147 = (char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  CGRect v127 = (char *)&v123 - v30;
  uint64_t v31 = sub_100082C28(&qword_100995F80);
  __chkstk_darwin(v31 - 8);
  uint64_t v126 = (char *)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for BadgeLeadingValue();
  uint64_t v33 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v35 = (char *)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for BadgeCaptionCappingType();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  v133 = (char *)&v123 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v123 - v40;
  type metadata accessor for ArtworkLoader();
  uint64_t v123 = a6;
  uint64_t v42 = inject(_:from:)();
  uint64_t v142 = sub_1000F8804();
  uint64_t v138 = v43;
  swift_retain();
  uint64_t v44 = sub_1000F8C7C(a1, v42);
  uint64_t v141 = v42;
  swift_release();
  uint64_t v154 = v37;
  objc_super v45 = *(void (**)(char *, void, uint64_t))(v37 + 104);
  uint64_t v152 = v36;
  v45(v41, enum case for BadgeCaptionCappingType.none(_:), v36);
  Badge.leadingValue.getter();
  objc_super v46 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_leadingValue];
  swift_beginAccess();
  int8x16_t v47 = v46;
  uint64_t v48 = v156;
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v47, v35, v156);
  swift_endAccess();
  [v7 setNeedsLayout];
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v48);
  CGRect v49 = (uint64_t *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_valueText];
  uint64_t v50 = (uint64_t)v138;
  *CGRect v49 = v142;
  v49[1] = v50;
  swift_bridgeObjectRelease();
  sub_100521090();
  CGRect v51 = v44;
  sub_100525100(v44);
  uint64_t v138 = v51;

  uint64_t v156 = a1;
  uint64_t v52 = Badge.heading.getter();
  uint64_t v54 = v52;
  if (v53)
  {
    *(void *)&v158[0] = v52;
    *((void *)&v158[0] + 1) = v53;
    uint64_t v55 = (uint64_t)v126;
    static Locale.storefront.getter();
    uint64_t v56 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
    sub_10007533C();
    uint64_t v54 = StringProtocol.uppercased(with:)();
    uint64_t v58 = v57;
    sub_100082BCC(v55, &qword_100995F80);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = 0;
  }
  sub_100520F8C(v54, v58);
  id v59 = [v7 traitCollection];
  char v60 = UITraitCollection.prefersAccessibilityLayouts.getter();

  if (v60) {
    uint64_t v61 = 4;
  }
  else {
    uint64_t v61 = 1;
  }
  uint64_t v62 = OBJC_IVAR____TtC8AppStore9BadgeView_alignment;
  *(void *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_alignment] = v61;
  [v7[OBJC_IVAR____TtC8AppStore9BadgeView_valueLabel] setTextAlignment:];
  [*(id *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_captionLabel] setTextAlignment:*(void *)&v7[v62]];
  [*(id *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_headingLabel] setTextAlignment:*(void *)&v7[v62]];
  [v7 setNeedsLayout];
  uint64_t v63 = v154;
  double v64 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
  double v65 = v133;
  uint64_t v142 = (uint64_t)v41;
  uint64_t v66 = v152;
  v64(v133, v41, v152);
  uint64_t v67 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_captionCappingType];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v67, v65, v66);
  swift_endAccess();
  [v7 setNeedsLayout];
  unint64_t v69 = *(char **)(v63 + 8);
  uint64_t v68 = v63 + 8;
  v133 = v69;
  ((void (*)(char *, uint64_t))v69)(v65, v66);
  v7[OBJC_IVAR____TtC8AppStore9BadgeView_isTruncatable] = dispatch thunk of Badge.isTruncatable.getter() & 1;
  [v7 setNeedsLayout];
  uint64_t v70 = v124;
  Badge.type.getter();
  objc_super v71 = *(unsigned int (**)(char *, uint64_t))(v155 + 88);
  uint64_t v126 = (char *)(v155 + 88);
  uint64_t v125 = v71;
  unsigned int v72 = v71(v70, v153);
  uint64_t v73 = v131;
  uint64_t v75 = v147;
  uint64_t v74 = v148;
  if (v72 == enum case for BadgeType.contentRating(_:))
  {
    uint64_t v76 = v128;
    (*(void (**)(char *, void, uint64_t))(v148 + 104))(v147, enum case for BadgeValueViewAlignment.center(_:), v128);
    unsigned int v77 = enum case for BadgeType.chartPosition(_:);
    double v78 = v129;
  }
  else
  {
    unsigned int v79 = v72;
    unsigned int v77 = enum case for BadgeType.chartPosition(_:);
    double v78 = v129;
    if (v72 == enum case for BadgeType.chartPosition(_:))
    {
      uint64_t v80 = v128;
      (*(void (**)(char *, void, uint64_t))(v148 + 104))(v147, enum case for BadgeValueViewAlignment.topOfValueLabel(_:), v128);
      unsigned int v77 = v79;
      uint64_t v76 = v80;
      uint64_t v75 = v147;
      uint64_t v74 = v148;
    }
    else
    {
      uint64_t v81 = *(void (**)(char *, void, uint64_t))(v148 + 104);
      uint64_t v76 = v128;
      if (v72 == enum case for BadgeType.paragraph(_:))
      {
        v81(v147, enum case for BadgeValueViewAlignment.topOfView(_:), v128);
      }
      else
      {
        v81(v147, enum case for BadgeValueViewAlignment.baseline(_:), v128);
        (*(void (**)(char *, uint64_t))(v155 + 8))(v70, v153);
      }
    }
  }
  uint64_t v82 = v127;
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v127, v75, v76);
  uint64_t v83 = v76;
  uint64_t v84 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_valueViewAlignment];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v74 + 24))(v84, v82, v83);
  swift_endAccess();
  [v7 setNeedsLayout];
  (*(void (**)(char *, uint64_t))(v74 + 8))(v82, v83);
  Badge.type.getter();
  uint64_t v85 = v149;
  uint64_t v86 = v153;
  uint64_t v87 = v125;
  if (v125(v149, v153) == v77)
  {
    void *v78 = 0;
    uint64_t v88 = v132;
    (*(void (**)(void *, void, uint64_t))(v73 + 104))(v78, enum case for BadgeViewSpacing.spacing(_:), v132);
    uint64_t v89 = v86;
    unint64_t v90 = v78;
    uint64_t v91 = v155;
  }
  else
  {
    id v92 = v85;
    uint64_t v88 = v132;
    (*(void (**)(void *, void, uint64_t))(v73 + 104))(v78, enum case for BadgeViewSpacing.standard(_:), v132);
    uint64_t v91 = v155;
    (*(void (**)(char *, uint64_t))(v155 + 8))(v92, v86);
    uint64_t v89 = v86;
    unint64_t v90 = v78;
  }
  Class v93 = v130;
  (*(void (**)(char *, void *, uint64_t))(v73 + 32))(v130, v90, v88);
  id v94 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_spacing];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v73 + 24))(v94, v93, v88);
  swift_endAccess();
  [v7 setNeedsLayout];
  (*(void (**)(char *, uint64_t))(v73 + 8))(v93, v88);
  Badge.type.getter();
  (*(void (**)(char *, void, uint64_t))(v91 + 104))(v151, enum case for BadgeType.paragraph(_:), v89);
  sub_1000FA3E0(&qword_1009840E0, (void (*)(uint64_t))&type metadata accessor for BadgeType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v154 = v68;
  if (v158[0] == v157[0]) {
    char v95 = 1;
  }
  else {
    char v95 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v96 = *(void (**)(char *, uint64_t))(v91 + 8);
  v96(v151, v89);
  v96(v150, v89);
  v7[OBJC_IVAR____TtC8AppStore9BadgeView_requiresRemainingWidth] = v95 & 1;
  if (v135)
  {
    *(void *)&v158[0] = v135;
    type metadata accessor for Action();
    type metadata accessor for ObjectGraph();
    sub_1000FA3E0(&qword_100981800, (void (*)(uint64_t))&type metadata accessor for Action);
    swift_retain();
    uint64_t v97 = (uint64_t)v136;
    uint64_t v89 = v153;
    ComponentModel.pairedWith<A>(objectGraph:)();
    swift_release();
    uint64_t v98 = sub_100082C28((uint64_t *)&unk_10098A9A0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v97, 0, 1, v98);
  }
  else
  {
    uint64_t v99 = sub_100082C28((uint64_t *)&unk_10098A9A0);
    uint64_t v97 = (uint64_t)v136;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v136, 1, 1, v99);
  }
  sub_1005211BC(v97);
  uint64_t v100 = v134;
  Badge.type.getter();
  uint64_t v101 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_badgeType];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v155 + 40))(v101, v100, v89);
  swift_endAccess();
  id v102 = &v7[OBJC_IVAR____TtC8AppStore9BadgeView_badgePositionInRibbon];
  *(void *)id v102 = v139;
  v102[8] = v140 & 1;
  uint64_t v103 = v143;
  *(void *)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_overallBadgeCount] = v143;
  unint64_t v104 = v137;
  Badge.type.getter();
  if (v87(v104, v89) == enum case for BadgeType.rating(_:))
  {
    unint64_t v105 = sub_1000FA164();
    uint64_t v106 = OBJC_IVAR____TtC8AppStore9BadgeView_captionView;
    Class v107 = *(void **)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_captionView];
    id v108 = v105;
    if (v107)
    {
      [v107 removeFromSuperview];
      Class v107 = *(void **)&v7[v106];
    }
    uint64_t v112 = v142;
    *(void *)&v7[v106] = v105;
    uint64_t v113 = v105;

    uint64_t v114 = *(void **)&v7[v106];
    uint64_t v115 = v113;
    if (v114)
    {
      uint64_t v115 = v114;
      [v7 addSubview:v115];
      [v7 setNeedsLayout];
    }
    sub_100520F78(0, 0);
  }
  else
  {
    v96(v104, v89);
    uint64_t v109 = OBJC_IVAR____TtC8AppStore9BadgeView_captionView;
    id v110 = *(void **)&v7[OBJC_IVAR____TtC8AppStore9BadgeView_captionView];
    if (v110)
    {
      [v110 removeFromSuperview];
      uint64_t v111 = *(void **)&v7[v109];
    }
    else
    {
      uint64_t v111 = 0;
    }
    uint64_t v112 = v142;
    *(void *)&v7[v109] = 0;

    uint64_t v116 = *(void **)&v7[v109];
    if (v116)
    {
      id v117 = v116;
      [v7 addSubview:v117];
      [v7 setNeedsLayout];
    }
    if (v103 < 4 || (uint64_t v118 = Badge.longCaption.getter(), !v119)) {
      uint64_t v118 = Badge.caption.getter();
    }
    sub_100520F78(v118, v119);
  }
  sub_100522EE8();
  [v7 setNeedsLayout];
  *(void *)&v158[0] = 0x2E6567646162;
  *((void *)&v158[0] + 1) = 0xE600000000000000;
  v120._countAndFlagsBits = dispatch thunk of Badge.accessibilityIdentifier.getter();
  String.append(_:)(v120);
  swift_bridgeObjectRelease();
  memset(v158, 0, sizeof(v158));
  memset(v157, 0, sizeof(v157));
  CGRect v121 = v144;
  static AutomationSemantics.productPage(elementName:id:parentId:)();
  swift_bridgeObjectRelease();
  sub_100082BCC((uint64_t)v157, (uint64_t *)&unk_100982B40);
  sub_100082BCC((uint64_t)v158, (uint64_t *)&unk_100982B40);
  UIView.setAutomationSemantics(_:)();
  swift_release();

  (*(void (**)(char *, uint64_t))(v145 + 8))(v121, v146);
  return ((uint64_t (*)(uint64_t, uint64_t))v133)(v112, v152);
}

double sub_1000F70F8(double a1, double a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7, uint64_t a8, void *a9)
{
  uint64_t v123 = a9;
  uint64_t v136 = a6;
  int v135 = a5;
  uint64_t v124 = a4;
  uint64_t v122 = type metadata accessor for LabelPlaceholderCompatibility();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  Swift::String v120 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for BadgeViewSpacing();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v131 = (uint64_t *)((char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v130 = (char *)&v117 - v15;
  uint64_t v137 = type metadata accessor for BadgeViewRibbonLayout.Metrics();
  uint64_t v134 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v17 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100082C28(&qword_100995F80);
  __chkstk_darwin(v18 - 8);
  uint64_t v125 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for BadgeCaptionCappingType();
  uint64_t v144 = *(void *)(v20 - 8);
  uint64_t v145 = v20;
  __chkstk_darwin(v20);
  uint64_t v128 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v143 = (char *)&v117 - v23;
  uint64_t v24 = type metadata accessor for BadgeType();
  uint64_t v141 = *(void *)(v24 - 8);
  uint64_t v142 = v24;
  __chkstk_darwin(v24);
  CGRect v129 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  CGRect v127 = (char *)&v117 - v27;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v117 - v29;
  uint64_t v31 = type metadata accessor for FontUseCase();
  uint64_t v140 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v117 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v117 - v35;
  sub_1000F8804();
  uint64_t v139 = v37;
  if (v37)
  {
    uint64_t v38 = a7;
    if (qword_10097F2D8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_100087728(v31, (uint64_t)qword_1009E42E0);
    uint64_t v40 = v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v36, v39, v31);
    uint64_t v41 = type metadata accessor for Feature();
    *((void *)&v149 + 1) = v41;
    uint64_t v150 = sub_1000FA3E0((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
    uint64_t v42 = sub_1000808B8((uint64_t *)&v148);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v42, enum case for Feature.measurement_with_labelplaceholder(_:), v41);
    isFeatureEnabled(_:)();
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v148);
    a7 = v38;
    static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v31);
  }
  Badge.type.getter();
  uint64_t v43 = v142;
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t))(v141 + 88);
  unsigned int v45 = v44(v30, v142);
  int v126 = enum case for BadgeType.rating(_:);
  uint64_t v138 = v44;
  if (v45 == enum case for BadgeType.rating(_:))
  {
    id v46 = [a7 traitCollection];
    sub_1003E1DBC(1, 0, 1, 1, (uint64_t)v46, 5.0);

LABEL_34:
    uint64_t v70 = v127;
    int v51 = v126;
    goto LABEL_51;
  }
  if (v45 == enum case for BadgeType.contentRating(_:))
  {
    uint64_t v47 = Badge.content.getter();
    uint64_t v48 = BadgeContentKeyContentRatingResource.getter();
    if (*(void *)(v47 + 16))
    {
      unint64_t v50 = sub_10008A950(v48, v49);
      int v51 = v126;
      if (v52)
      {
        sub_10008A898(*(void *)(v47 + 56) + 32 * v50, (uint64_t)&v148);
      }
      else
      {
        long long v148 = 0u;
        long long v149 = 0u;
      }
    }
    else
    {
      long long v148 = 0u;
      long long v149 = 0u;
      int v51 = v126;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v149 + 1))
    {
      if (swift_dynamicCast())
      {
        id v69 = sub_100038400((uint64_t)v146, v147, 0);
        swift_bridgeObjectRelease();
        [v69 size];
      }
      goto LABEL_50;
    }
LABEL_49:
    sub_100082BCC((uint64_t)&v148, (uint64_t *)&unk_100982B40);
LABEL_50:
    uint64_t v70 = v127;
    goto LABEL_51;
  }
  if (v45 == enum case for BadgeType.chartPosition(_:))
  {
    v53._countAndFlagsBits = 0xD000000000000020;
    v53._object = (void *)0x8000000100806FE0;
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    Swift::String v119 = localizedString(_:comment:)(v53, v54);
    if (qword_10097F2E0 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_100087728(v31, (uint64_t)qword_1009E42F8);
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v33, v55, v31);
    uint64_t v123 = a7;
    id v56 = [a7 traitCollection];
    Class isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v56).super.isa;
    id v58 = [(objc_class *)isa fontDescriptorWithDesign:UIFontDescriptorSystemDesignRounded];

    if (v58)
    {
      id v59 = [self fontWithDescriptor:v58 size:0.0];

      if (v59)
      {
        uint64_t v60 = type metadata accessor for Feature();
        *((void *)&v149 + 1) = v60;
        uint64_t v150 = sub_1000FA3E0((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
        uint64_t v61 = sub_1000808B8((uint64_t *)&v148);
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v60 - 8) + 104))(v61, enum case for Feature.measurement_with_labelplaceholder(_:), v60);
        id v118 = v59;
        isFeatureEnabled(_:)();
        _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v148);
        uint64_t v62 = v120;
        LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)();
        sub_1000FA3E0((unint64_t *)&unk_1009947F0, (void (*)(uint64_t))&type metadata accessor for LabelPlaceholderCompatibility);
        a7 = v123;
        uint64_t v63 = v122;
        dispatch thunk of Measurable.measurements(fitting:in:)();

        (*(void (**)(char *, uint64_t))(v121 + 8))(v62, v63);
LABEL_33:
        (*(void (**)(char *, uint64_t))(v140 + 8))(v33, v31);
        goto LABEL_34;
      }
    }
    else
    {
    }
    uint64_t v72 = type metadata accessor for Feature();
    *((void *)&v149 + 1) = v72;
    uint64_t v150 = sub_1000FA3E0((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
    uint64_t v73 = sub_1000808B8((uint64_t *)&v148);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v72 - 8) + 104))(v73, enum case for Feature.measurement_with_labelplaceholder(_:), v72);
    isFeatureEnabled(_:)();
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v148);
    a7 = v123;
    static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (v45 == enum case for BadgeType.editorsChoice(_:))
  {
    type metadata accessor for EditorsChoiceView();
    v64._countAndFlagsBits = 0xD000000000000050;
    v65._object = (void *)0x8000000100807010;
    v64._object = (void *)0x8000000100807030;
    v65._countAndFlagsBits = 0xD000000000000017;
    localizedString(_:comment:)(v65, v64);
    uint64_t v66 = String.count.getter();
    swift_bridgeObjectRelease();
    BOOL v67 = v66 < 19;
    uint64_t v44 = v138;
    char v68 = v67;
    sub_100302864(v68, 1, 0, a7, 0, 2u);
    goto LABEL_34;
  }
  if (v45 == enum case for BadgeType.artwork(_:))
  {
    uint64_t v70 = v127;
    int v51 = v126;
    if (qword_10097FC70 != -1) {
      swift_once();
    }
    sub_100087728(v137, (uint64_t)qword_1009E5E40);
    BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    id v71 = [a7 traitCollection];
    _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection();

    CGSize.scaled(_:)();
  }
  else
  {
    if (v45 == enum case for BadgeType.paragraph(_:))
    {
      sub_1000F89C4();
      if (qword_10097F2D0 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_100087728(v31, (uint64_t)qword_1009E42C8);
      uint64_t v75 = v140;
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v36, v74, v31);
      uint64_t v76 = type metadata accessor for Feature();
      *((void *)&v149 + 1) = v76;
      uint64_t v150 = sub_1000FA3E0((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
      unsigned int v77 = sub_1000808B8((uint64_t *)&v148);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v76 - 8) + 104))(v77, enum case for Feature.measurement_with_labelplaceholder(_:), v76);
      isFeatureEnabled(_:)();
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v148);
      static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)();
      double v79 = v78;
      id v80 = [a7 traitCollection];
      sub_100547160(v79, a1);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v36, v31);
      swift_bridgeObjectRelease();
      uint64_t v44 = v138;
      goto LABEL_34;
    }
    if (v45 != enum case for BadgeType.friendsPlaying(_:))
    {
      (*(void (**)(char *, uint64_t))(v141 + 8))(v30, v43);
      goto LABEL_34;
    }
    uint64_t v81 = Badge.content.getter();
    uint64_t v82 = BadgeContentKeyNativeContentView.getter();
    if (*(void *)(v81 + 16))
    {
      unint64_t v84 = sub_10008A950(v82, v83);
      int v51 = v126;
      if (v85)
      {
        sub_10008A898(*(void *)(v81 + 56) + 32 * v84, (uint64_t)&v148);
      }
      else
      {
        long long v148 = 0u;
        long long v149 = 0u;
      }
    }
    else
    {
      long long v148 = 0u;
      long long v149 = 0u;
      int v51 = v126;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*((void *)&v149 + 1)) {
      goto LABEL_49;
    }
    sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
    char v86 = swift_dynamicCast();
    uint64_t v70 = v127;
    if (v86)
    {
      id v87 = v146;
      [v146 sizeThatFits:a1, a2];
    }
  }
LABEL_51:
  Badge.type.getter();
  uint64_t v88 = v142;
  if (v44(v70, v142) == v51)
  {
    uint64_t v89 = sub_1000FA164();
    [v89 frame];
    CGRectGetWidth(v151);

    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v141 + 8))(v70, v88);
    if (v136 >= 4 && (Badge.longCaption.getter(), v90) || (Badge.caption.getter(), v91))
    {
      if (qword_10097F2F0 != -1) {
        swift_once();
      }
      uint64_t v92 = sub_100087728(v31, (uint64_t)qword_1009E4328);
      uint64_t v93 = v140;
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v36, v92, v31);
      uint64_t v94 = type metadata accessor for Feature();
      *((void *)&v149 + 1) = v94;
      uint64_t v150 = sub_1000FA3E0((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
      char v95 = sub_1000808B8((uint64_t *)&v148);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v94 - 8) + 104))(v95, enum case for Feature.measurement_with_labelplaceholder(_:), v94);
      isFeatureEnabled(_:)();
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v148);
      static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v36, v31);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  (*(void (**)(char *, void, uint64_t))(v144 + 104))(v143, enum case for BadgeCaptionCappingType.none(_:), v145);
  uint64_t v96 = Badge.heading.getter();
  if (v97)
  {
    *(void *)&long long v148 = v96;
    *((void *)&v148 + 1) = v97;
    uint64_t v98 = (uint64_t)v125;
    static Locale.storefront.getter();
    uint64_t v99 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v98, 0, 1, v99);
    sub_10007533C();
    StringProtocol.uppercased(with:)();
    sub_100082BCC(v98, &qword_100995F80);
    swift_bridgeObjectRelease();
    if (qword_10097F2F8 != -1) {
      swift_once();
    }
    uint64_t v100 = sub_100087728(v31, (uint64_t)qword_1009E4340);
    uint64_t v101 = v140;
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v36, v100, v31);
    uint64_t v102 = type metadata accessor for Feature();
    *((void *)&v149 + 1) = v102;
    uint64_t v150 = sub_1000FA3E0((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
    uint64_t v103 = sub_1000808B8((uint64_t *)&v148);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v102 - 8) + 104))(v103, enum case for Feature.measurement_with_labelplaceholder(_:), v102);
    isFeatureEnabled(_:)();
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v148);
    static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v36, v31);
  }
  uint64_t v104 = v137;
  uint64_t v105 = v134;
  uint64_t v106 = v133;
  Class v107 = v129;
  if (qword_10097FC70 != -1) {
    swift_once();
  }
  uint64_t v108 = sub_100087728(v104, (uint64_t)qword_1009E5E40);
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v17, v108, v104);
  (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v128, v143, v145);
  BadgeViewRibbonLayout.Metrics.captionCappingType.setter();
  Badge.type.getter();
  uint64_t v109 = v142;
  if (v138(v107, v142) == enum case for BadgeType.chartPosition(_:))
  {
    id v110 = v131;
    *uint64_t v131 = 0;
    uint64_t v111 = v132;
    (*(void (**)(void *, void, uint64_t))(v132 + 104))(v110, enum case for BadgeViewSpacing.spacing(_:), v106);
  }
  else
  {
    uint64_t v112 = v109;
    uint64_t v111 = v132;
    id v110 = v131;
    (*(void (**)(void *, void, uint64_t))(v132 + 104))(v131, enum case for BadgeViewSpacing.standard(_:), v106);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v107, v112);
  }
  (*(void (**)(char *, void *, uint64_t))(v111 + 32))(v130, v110, v106);
  BadgeViewRibbonLayout.Metrics.spacingType.setter();
  if ((v135 & 1) == 0)
  {
    id v113 = [a7 traitCollection];
    sub_100524EA8((uint64_t)v17, v124, v136);
  }
  static BadgeViewRibbonLayout.measurements(valueLabelWidth:viewSize:captionWidth:headingLabelWidth:fitting:using:in:)();
  double v115 = v114;
  (*(void (**)(char *, uint64_t))(v105 + 8))(v17, v104);
  (*(void (**)(char *, uint64_t))(v144 + 8))(v143, v145);
  return v115;
}

uint64_t sub_1000F8804()
{
  uint64_t v0 = type metadata accessor for BadgeType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Badge.type.getter();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for BadgeType.contentRating(_:))
  {
    uint64_t v5 = Badge.content.getter();
    uint64_t v6 = BadgeContentKeyContentRating.getter();
  }
  else
  {
    if (v4 != enum case for BadgeType.chartPosition(_:))
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      return v13;
    }
    uint64_t v5 = Badge.content.getter();
    uint64_t v6 = BadgeContentKeyChartPosition.getter();
  }
  if (*(void *)(v5 + 16) && (unint64_t v8 = sub_10008A950(v6, v7), (v9 & 1) != 0))
  {
    sub_10008A898(*(void *)(v5 + 56) + 32 * v8, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v12 + 1))
  {
    if (swift_dynamicCast()) {
      return v13;
    }
  }
  else
  {
    sub_100082BCC((uint64_t)&v11, (uint64_t *)&unk_100982B40);
  }
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  return v13;
}

uint64_t sub_1000F89C4()
{
  uint64_t v0 = type metadata accessor for BadgeType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - v5;
  Badge.type.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for BadgeType.paragraph(_:), v0);
  sub_1000FA3E0(&qword_1009840E0, (void (*)(uint64_t))&type metadata accessor for BadgeType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v16 == v18)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
    v7(v3, v0);
    v7(v6, v0);
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = *(void (**)(char *, uint64_t))(v1 + 8);
    v9(v3, v0);
    v9(v6, v0);
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v10 = Badge.content.getter();
  uint64_t v11 = BadgeContentKeyParagraphText.getter();
  if (*(void *)(v10 + 16) && (unint64_t v13 = sub_10008A950(v11, v12), (v14 & 1) != 0))
  {
    sub_10008A898(*(void *)(v10 + 56) + 32 * v13, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v17 + 1))
  {
    if (swift_dynamicCast()) {
      return v18;
    }
  }
  else
  {
    sub_100082BCC((uint64_t)&v16, (uint64_t *)&unk_100982B40);
  }
  return 0;
}

char *sub_1000F8C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v141 = a2;
  uint64_t v2 = type metadata accessor for AvatarShowcaseLayoutConfiguration();
  __chkstk_darwin(v2 - 8);
  uint64_t v140 = (char *)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v149 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)type metadata accessor for FontUseCase();
  uint64_t v151 = *(v10 - 1);
  id v152 = v10;
  __chkstk_darwin(v10);
  uint64_t v150 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v12 - 8);
  uint64_t v145 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for Artwork.Crop();
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v142 = (char *)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AspectRatio();
  uint64_t v146 = *(void *)(v15 - 8);
  uint64_t v147 = v15;
  __chkstk_darwin(v15);
  long long v148 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for BadgeViewRibbonLayout.Metrics();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for BadgeType();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  Badge.type.getter();
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v24, v21);
  if (v25 == enum case for BadgeType.rating(_:))
  {
    uint64_t v26 = [(char *)objc_allocWithZone((Class)type metadata accessor for BadgeParagraphView(0)) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v27 = Badge.content.getter();
    uint64_t v28 = BadgeContentKeyRatingFormatted.getter();
    if (*(void *)(v27 + 16) && (unint64_t v30 = sub_10008A950(v28, v29), (v31 & 1) != 0))
    {
      sub_10008A898(*(void *)(v27 + 56) + 32 * v30, (uint64_t)&v156);
    }
    else
    {
      long long v156 = 0u;
      long long v157 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v157 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v37 = *(void **)&v26[OBJC_IVAR____TtC8AppStore18BadgeParagraphView_paragraphLabel];
        NSString v38 = String._bridgeToObjectiveC()();
LABEL_23:
        [v37 setText:v38];

LABEL_24:
        [v26 setNeedsLayout];
        swift_bridgeObjectRelease();
        return v26;
      }
    }
    else
    {
      sub_100082BCC((uint64_t)&v156, (uint64_t *)&unk_100982B40);
    }
    NSString v38 = 0;
    uint64_t v37 = *(void **)&v26[OBJC_IVAR____TtC8AppStore18BadgeParagraphView_paragraphLabel];
    goto LABEL_23;
  }
  if (v25 == enum case for BadgeType.contentRating(_:))
  {
    uint64_t v32 = Badge.content.getter();
    uint64_t v33 = BadgeContentKeyContentRatingResource.getter();
    if (*(void *)(v32 + 16) && (unint64_t v35 = sub_10008A950(v33, v34), (v36 & 1) != 0))
    {
      sub_10008A898(*(void *)(v32 + 56) + 32 * v35, (uint64_t)&v156);
    }
    else
    {
      long long v156 = 0u;
      long long v157 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v157 + 1))
    {
      if (swift_dynamicCast())
      {
        id v55 = sub_100038400(v154, v155, 0);
        swift_bridgeObjectRelease();
        uint64_t v26 = (char *)[objc_allocWithZone((Class)UIImageView) initWithImage:v55];
        [v26 setAdjustsImageSizeForAccessibilityContentSizeCategory:1];

        return v26;
      }
      return 0;
    }
    goto LABEL_83;
  }
  if (v25 == enum case for BadgeType.chartPosition(_:))
  {
    if (qword_10097F2E0 != -1) {
      swift_once();
    }
    id v39 = v152;
    uint64_t v40 = sub_100087728((uint64_t)v152, (uint64_t)qword_1009E42F8);
    uint64_t v42 = v150;
    uint64_t v41 = v151;
    uint64_t v43 = *(void (**)(char *, uint64_t, id))(v151 + 16);
    v43(v150, v40, v39);
    v43(v9, (uint64_t)v42, v39);
    (*(void (**)(char *, void, uint64_t, id))(v41 + 56))(v9, 0, 1, v39);
    (*(void (**)(char *, void, uint64_t))(v149 + 104))(v6, enum case for DirectionalTextAlignment.none(_:), v4);
    id v44 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
    unsigned int v45 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
    id v46 = [v153 traitCollection];
    Class isa = FontUseCase.makeFontDescriptor(compatibleWith:)((UITraitCollection)v46).super.isa;
    id v48 = [(objc_class *)isa fontDescriptorWithDesign:UIFontDescriptorSystemDesignRounded];

    if (v48)
    {
      id v49 = [self fontWithDescriptor:v48 size:0.0];

      if (!v49)
      {
LABEL_20:
        [v45 setTextAlignment:1];
        v50._countAndFlagsBits = 0xD000000000000020;
        v50._object = (void *)0x8000000100806FE0;
        v51._countAndFlagsBits = 0;
        v51._object = (void *)0xE000000000000000;
        localizedString(_:comment:)(v50, v51);
        NSString v52 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v45 setText:v52];

        Swift::String v53 = self;
        uint64_t v26 = v45;
        id v54 = [v53 systemGrayColor];
        [v26 setTextColor:v54];

        (*(void (**)(char *, id))(v41 + 8))(v42, v39);
        return v26;
      }
      [v45 setFont:v49];
      id v46 = v49;
    }

    goto LABEL_20;
  }
  if (v25 == enum case for BadgeType.editorsChoice(_:))
  {
    v56._countAndFlagsBits = 0xD000000000000050;
    v57._object = (void *)0x8000000100807010;
    v56._object = (void *)0x8000000100807030;
    v57._countAndFlagsBits = 0xD000000000000017;
    localizedString(_:comment:)(v57, v56);
    uint64_t v58 = String.count.getter();
    swift_bridgeObjectRelease();
    id v59 = objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
    return sub_100300950(v58 < 19, 1, 0, 0, 2u);
  }
  if (v25 == enum case for BadgeType.artwork(_:))
  {
    uint64_t v60 = Badge.artwork.getter();
    if (!v60) {
      return 0;
    }
    uint64_t v61 = v60;
    id v62 = v153;
    sub_100523088((uint64_t)v20);
    BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    id v63 = [v62 traitCollection];
    _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection();

    CGSize.scaled(_:)();
    double v65 = v64;
    double v67 = v66;
    Artwork.size.getter();
    char v68 = v148;
    AspectRatio.init(_:_:)();
    LOBYTE(v63) = AspectRatio.isLandscape.getter();
    uint64_t v69 = v147;
    uint64_t v70 = *(void (**)(char *, uint64_t))(v146 + 8);
    v70(v68, v147);
    if (v63)
    {
      Artwork.size.getter();
      AspectRatio.init(_:_:)();
      AspectRatio.maxSize(filling:)();
      double v65 = v71;
      double v67 = v72;
      v70(v68, v69);
    }
    id v73 = [objc_allocWithZone((Class)type metadata accessor for ArtworkView()) initWithFrame:0.0, 0.0, v65, v67];
    id v152 = [self configurationWithTextStyle:UIFontTextStyleTitle1];
    ArtworkView.preferredSymbolConfiguration.setter();
    uint64_t v74 = v142;
    Artwork.crop.getter();
    Artwork.Crop.preferredContentMode.getter();
    (*(void (**)(char *, uint64_t))(v143 + 8))(v74, v144);
    Artwork.config(_:mode:prefersLayeredImage:)();
    Artwork.style.getter();
    ArtworkView.style.setter();
    [v73 setContentMode:Artwork.contentMode.getter()];
    ArtworkLoaderConfig.size.getter();
    ArtworkView.imageSize.setter();
    if (!Artwork.backgroundColor.getter())
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      static UIColor.placeholderBackground.getter();
    }
    ArtworkView.backgroundColor.setter();
    uint64_t v75 = self;
    id v76 = [v75 clearColor];
    ArtworkView.backgroundColor.setter();
    if (Badge.isMonochrome.getter()) {
      id v77 = [v75 secondaryLabelColor];
    }
    ArtworkView.artworkTintColor.setter();
    if ((dispatch thunk of Artwork.isBundleImage.getter() & 1) == 0)
    {
      id v99 = v152;
      if (v141)
      {
        uint64_t v158 = 0;
        long long v156 = 0u;
        long long v157 = 0u;
        uint64_t v100 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v101 = swift_allocObject();
        *(void *)(v101 + 16) = v99;
        *(void *)(v101 + 24) = v100;
        id v102 = v99;
        swift_retain();
        ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)();
        swift_release();
        sub_100082BCC((uint64_t)&v156, &qword_100981560);
        swift_release();
      }
      goto LABEL_65;
    }
    id v89 = sub_100378E2C(v61, 0);
    id v90 = v89;
    ArtworkView.image.setter();
    if (v89)
    {
      [v90 size];
      uint64_t v91 = v148;
      AspectRatio.init(_:_:)();
      char v92 = AspectRatio.isPortrait.getter();
      v70(v91, v69);
      [v90 size];
      AspectRatio.init(_:_:)();
      if (v92)
      {
        AspectRatio.maxSize(fitting:)();
        uint64_t v94 = v93;
        uint64_t v96 = v95;
        v70(v91, v69);
        uint64_t v97 = (void (*)(long long *, void))ArtworkView.frame.modify();
        *(void *)(v98 + 16) = v94;
        *(void *)(v98 + 24) = v96;
        v97(&v156, 0);

        id v99 = v152;
LABEL_65:
        uint64_t v120 = OBJC_IVAR____TtC8AppStore9BadgeView_artworkView;
        uint64_t v121 = v153;
        uint64_t v122 = *(void **)&v153[OBJC_IVAR____TtC8AppStore9BadgeView_artworkView];
        *(void *)&v153[OBJC_IVAR____TtC8AppStore9BadgeView_artworkView] = v73;
        swift_release();
        swift_release();

        uint64_t v26 = *(char **)&v121[v120];
        uint64_t v123 = v26;
        return v26;
      }
      AspectRatio.maxSize(filling:)();
      uint64_t v115 = v116;
      uint64_t v114 = v117;
      v70(v91, v69);
    }
    else
    {
      uint64_t v114 = 0;
      uint64_t v115 = 0;
    }
    id v99 = v152;
    id v118 = (void (*)(long long *, void))ArtworkView.frame.modify();
    *(void *)(v119 + 16) = v115;
    *(void *)(v119 + 24) = v114;
    v118(&v156, 0);

    goto LABEL_65;
  }
  if (v25 == enum case for BadgeType.controller(_:))
  {
    id v78 = v153;
    sub_100523088((uint64_t)v20);
    BadgeViewRibbonLayout.Metrics.badgeIconSize.getter();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    id v79 = [v78 traitCollection];
    _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection();

    CGSize.scaled(_:)();
    uint64_t v26 = (char *)[objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, v80, v81];
    id v82 = sub_100038400(0x6C6C6F72746E6F43, 0xEF65676461427265, 0);
    [v26 setImage:v82];

    [v26 setContentMode:1];
    id v83 = [self systemGrayColor];
    [v26 setTintColor:v83];

    return v26;
  }
  if (v25 == enum case for BadgeType.storefrontContentRating(_:))
  {
    uint64_t v84 = Badge.content.getter();
    uint64_t v85 = BadgeContentKeyContentRating.getter();
    if (*(void *)(v84 + 16) && (unint64_t v87 = sub_10008A950(v85, v86), (v88 & 1) != 0))
    {
      sub_10008A898(*(void *)(v84 + 56) + 32 * v87, (uint64_t)&v156);
    }
    else
    {
      long long v156 = 0u;
      long long v157 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v157 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v106 = [(char *)objc_allocWithZone((Class)type metadata accessor for StorefrontAgeRatingView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
        Class v107 = *(void **)&v106[OBJC_IVAR____TtC8AppStore23StorefrontAgeRatingView_label];
        uint64_t v26 = v106;
        NSString v108 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v107 setText:v108];

        return v26;
      }
      return 0;
    }
LABEL_83:
    sub_100082BCC((uint64_t)&v156, (uint64_t *)&unk_100982B40);
    return 0;
  }
  if (v25 == enum case for BadgeType.paragraph(_:))
  {
    uint64_t v26 = [(char *)objc_allocWithZone((Class)type metadata accessor for BadgeParagraphView(0)) initWithFrame:0.0, 0.0, 0.0, 0.0];
    sub_1000F89C4();
    if (!v103) {
      return v26;
    }
    uint64_t v104 = *(void **)&v26[OBJC_IVAR____TtC8AppStore18BadgeParagraphView_paragraphLabel];
    NSString v105 = String._bridgeToObjectiveC()();
    [v104 setText:v105];

    goto LABEL_24;
  }
  if (v25 != enum case for BadgeType.friendsPlaying(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    return 0;
  }
  uint64_t v109 = Badge.content.getter();
  uint64_t v110 = BadgeContentKeyNumberOfAvatarsToDisplay.getter();
  if (*(void *)(v109 + 16) && (unint64_t v112 = sub_10008A950(v110, v111), (v113 & 1) != 0))
  {
    sub_10008A898(*(void *)(v109 + 56) + 32 * v112, (uint64_t)&v156);
  }
  else
  {
    long long v156 = 0u;
    long long v157 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v157 + 1)) {
    goto LABEL_83;
  }
  sub_100084CF0(0, (unint64_t *)&qword_10098FAF0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v124 = (id)v154;
  id v125 = [(id)v154 integerValue];

  uint64_t v126 = Badge.content.getter();
  uint64_t v127 = GameCenterFriends.getter();
  if (*(void *)(v126 + 16) && (unint64_t v129 = sub_10008A950(v127, v128), (v130 & 1) != 0))
  {
    sub_10008A898(*(void *)(v126 + 56) + 32 * v129, (uint64_t)&v156);
  }
  else
  {
    long long v156 = 0u;
    long long v157 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v157 + 1)) {
    goto LABEL_83;
  }
  sub_100082C28(&qword_1009840E8);
  if (!swift_dynamicCast()) {
    return 0;
  }
  unint64_t v131 = v154;
  if (!v141)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((unint64_t)v154 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v132 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v132 = *(void *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  if (v132 >= (uint64_t)v125) {
    uint64_t v132 = (uint64_t)v125;
  }
  uint64_t v133 = (uint64_t)v140;
  AvatarShowcaseLayoutConfiguration.init(width:visibleWidth:)();
  id v134 = objc_allocWithZone((Class)type metadata accessor for AvatarShowcaseView());
  uint64_t v26 = (char *)sub_100515158(v132, v133);
  *(void *)&long long v156 = _swiftEmptyArrayStorage;
  if (v131 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v135 = (uint64_t)result;
  }
  else
  {
    uint64_t v135 = *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (char *)swift_bridgeObjectRetain();
  }
  if (!v135)
  {
    swift_bridgeObjectRelease();
    uint64_t v139 = _swiftEmptyArrayStorage;
LABEL_101:
    swift_bridgeObjectRelease();
    sub_10051534C((unint64_t)v139, v141);
    swift_bridgeObjectRelease();
    swift_release();
    return v26;
  }
  if (v135 >= 1)
  {
    for (uint64_t i = 0; i != v135; ++i)
    {
      if ((v131 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v138 = dispatch thunk of GameCenterPlayer.artwork.getter();
      swift_release();
      if (v138)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v139 = (void *)v156;
    goto LABEL_101;
  }
  __break(1u);
  return result;
}

char *sub_1000FA164()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for RatingView());
  uint64_t v1 = sub_1003E0068(5, 1, 0, 1, 0, 0, 1);
  uint64_t v2 = Badge.content.getter();
  uint64_t v3 = BadgeContentKeyRating.getter();
  if (!*(void *)(v2 + 16) || (unint64_t v5 = sub_10008A950(v3, v4), (v6 & 1) == 0))
  {
    long long v13 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_10008A898(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_7:
    sub_100082BCC((uint64_t)&v13, (uint64_t *)&unk_100982B40);
    goto LABEL_8;
  }
  sub_100084CF0(0, (unint64_t *)&qword_10098FAF0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    sub_1003DFBE0(0.0);
    id v9 = [self systemMidGrayColor];
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC8AppStore10RatingView_starColor];
    *(void *)&v1[OBJC_IVAR____TtC8AppStore10RatingView_starColor] = v9;
    id v7 = v9;
    sub_1003DFD14();

    goto LABEL_9;
  }
  id v7 = v12;
  [v12 floatValue];
  sub_1003DFBE0(v8);
LABEL_9:

  return v1;
}

uint64_t sub_1000FA2F8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FA330()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000FA370(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000F5CE8(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1000FA378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_1009840F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FA3E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000FA428(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

BOOL sub_1000FA47C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1000FA490(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  if (a1)
  {
    uint64_t v5 = ObjectType;
    char v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews);
    swift_beginAccess();
    id v7 = a1;
    sub_10026B328(&v33, v7);
    swift_endAccess();

    uint64_t v8 = OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase;
    int v9 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase);
    if ((v9 - 1) >= 2)
    {
      if (!*(unsigned char *)(v2 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase))
      {
        [v7 setAlpha:1.0];
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator);
      if (v10)
      {
        sub_100082C28(&qword_100982B50);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1007BEA80;
        *(void *)(inited + 32) = v7;
        unint64_t v27 = inited;
        specialized Array._endMutation()();
        if (v27 >> 62)
        {
          id v19 = v7;
          id v20 = v10;
          swift_bridgeObjectRetain();
          uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v21) {
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v12 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v13 = v7;
          id v14 = v10;
          if (v12)
          {
LABEL_6:
            sub_10000E9D8(v27, &qword_100984150, (unint64_t *)&qword_1009828E0);
            uint64_t v16 = v15;
LABEL_19:
            swift_bridgeObjectRelease();
            uint64_t v22 = swift_allocObject();
            *(void *)(v22 + 16) = v16;
            *(void *)(v22 + 24) = v5;
            if (v9 == 1)
            {
              id v23 = objc_allocWithZone((Class)UIViewPropertyAnimator);
              char v31 = sub_1000FB7A8;
              uint64_t v32 = v22;
              unint64_t v27 = (unint64_t)_NSConcreteStackBlock;
              uint64_t v28 = 1107296256;
              uint64_t v24 = &unk_1008BCA18;
            }
            else
            {
              id v23 = objc_allocWithZone((Class)UIViewPropertyAnimator);
              char v31 = sub_1000FB774;
              uint64_t v32 = v22;
              unint64_t v27 = (unint64_t)_NSConcreteStackBlock;
              uint64_t v28 = 1107296256;
              uint64_t v24 = &unk_1008BC9C8;
            }
            uint64_t v29 = sub_1000162D4;
            unint64_t v30 = v24;
            int v25 = _Block_copy(&v27);
            swift_bridgeObjectRetain();
            swift_release();
            id v26 = [v23 initWithDuration:v25 controlPoint1:0.6, 0.33, 0.0 controlPoint2:0.67, 1.0 animations:v27, v28];
            _Block_release(v25);
            swift_bridgeObjectRelease();
            [v10 fractionComplete];
            [v26 setFractionComplete:];
            [v26 startAnimation];

            goto LABEL_23;
          }
        }
        uint64_t v16 = &_swiftEmptySetSingleton;
        goto LABEL_19;
      }
      *(unsigned char *)(v2 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase) = 3;
    }
    uint64_t v17 = *v6;
    if ((v17 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = __CocoaSet.count.getter();
      swift_bridgeObjectRelease();
      if (!v18) {
        goto LABEL_23;
      }
LABEL_14:
      if (*(unsigned char *)(v2 + v8) == 3 && !UIAccessibilityIsReduceMotionEnabled()) {
        sub_1000FA850();
      }
      goto LABEL_23;
    }
    if (*(void *)(v17 + 16)) {
      goto LABEL_14;
    }
LABEL_23:
  }
}

void sub_1000FA850()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if ((v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_3:
      *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase) = 0;
      uint64_t v4 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1000FB818;
      aBlock[5] = v4;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000FADA8;
      aBlock[3] = &unk_1008BCA68;
      uint64_t v5 = _Block_copy(aBlock);
      char v6 = self;
      swift_retain();
      id v7 = [v6 timerWithTimeInterval:0 repeats:v5 block:0.8];
      _Block_release(v5);
      swift_release();
      uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_sleepTimer);
      *(void *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_sleepTimer) = v7;
      id v9 = v7;
      [v8 invalidate];

      id v10 = [self mainRunLoop];
      [v10 addTimer:v9 forMode:NSRunLoopCommonModes];
      swift_release();

      return;
    }
  }
  else if (*(void *)(v2 + 16))
  {
    goto LABEL_3;
  }
  sub_10000A88C();
}

void sub_1000FAA54()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_sleepTimer);
    *(void *)(Strong + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_sleepTimer) = 0;
    [v2 invalidate];
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1000FAAFC();
  }
}

void sub_1000FAAFC()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews);
  swift_beginAccess();
  if ((*v2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(*v2 + 16)) {
      goto LABEL_3;
    }
LABEL_7:
    sub_10000A88C();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = __CocoaSet.count.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_7;
  }
LABEL_3:
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase) = 1;
  uint64_t v4 = *v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = ObjectType;
  id v6 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  uint64_t v17 = (void (*)(uint64_t))sub_1000FC980;
  uint64_t v18 = v5;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_1000162D4;
  uint64_t v16 = &unk_1008BCAB8;
  id v7 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain_n();
  swift_release();
  id v8 = [v6 initWithDuration:v7 controlPoint1:0.6 controlPoint2:0.33 animations:0.67 1.0];
  _Block_release(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = sub_1000FB820;
  uint64_t v18 = v9;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_1000FA428;
  uint64_t v16 = &unk_1008BCAE0;
  id v10 = _Block_copy(&aBlock);
  swift_release();
  [v8 addCompletion:v10];
  _Block_release(v10);
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator);
  *(void *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator) = v8;
  id v12 = v8;
  if (v11)
  {
    [v11 stopAnimation:1];
  }
  [v12 startAnimation];
}

void sub_1000FADA8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1000FAE10()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animatingViews);
  swift_beginAccess();
  if ((*v2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(*v2 + 16)) {
      goto LABEL_3;
    }
LABEL_7:
    sub_10000A88C();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = __CocoaSet.count.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_7;
  }
LABEL_3:
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_animationPhase) = 2;
  uint64_t v4 = *v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = ObjectType;
  id v6 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  uint64_t v17 = (void (*)(uint64_t))sub_1000FC984;
  uint64_t v18 = v5;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_1000162D4;
  uint64_t v16 = &unk_1008BCB30;
  id v7 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain_n();
  swift_release();
  id v8 = [v6 initWithDuration:v7 controlPoint1:0.6 controlPoint2:0.33 animations:0.67 1.0];
  _Block_release(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = sub_1000FB850;
  uint64_t v18 = v9;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_1000FA428;
  uint64_t v16 = &unk_1008BCB58;
  id v10 = _Block_copy(&aBlock);
  swift_release();
  [v8 addCompletion:v10];
  _Block_release(v10);
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator);
  *(void *)(v0 + OBJC_IVAR____TtC8AppStore41AppEventLiveIndicatorAnimationCoordinator_currentAnimator) = v8;
  id v12 = v8;
  if (v11)
  {
    [v11 stopAnimation:1];
  }
  [v12 startAnimation];
}

void sub_1000FB0BC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (!a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = (void *)Strong;
      a3();
    }
  }
}

uint64_t getEnumTagSinglePayload for GradientView.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppEventLiveIndicatorAnimationCoordinator.AnimationPhase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FB324);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000FB34C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppEventLiveIndicatorAnimationCoordinator.AnimationPhase()
{
  return &type metadata for AppEventLiveIndicatorAnimationCoordinator.AnimationPhase;
}

unint64_t sub_1000FB368()
{
  unint64_t result = qword_100984140;
  if (!qword_100984140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100984140);
  }
  return result;
}

unint64_t sub_1000FB3BC()
{
  unint64_t result = qword_100984148;
  if (!qword_100984148)
  {
    sub_100084CF0(255, (unint64_t *)&qword_1009828E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100984148);
  }
  return result;
}

void *sub_1000FB424(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100082C28(&qword_1009841B0);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    id v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    char v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1000FC550(&qword_1009841B8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1000FC550(&qword_1009841C0, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        int v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1000FB73C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000FB774()
{
  sub_100009610(*(void *)(v0 + 16), 1.0);
}

void sub_1000FB7A8()
{
  sub_100009610(*(void *)(v0 + 16), 0.2);
}

uint64_t sub_1000FB7E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000FB818()
{
}

void sub_1000FB820(uint64_t a1)
{
  sub_1000FB0BC(a1, v1, sub_1000FAE10);
}

void sub_1000FB850(uint64_t a1)
{
  sub_1000FB0BC(a1, v1, (void (*)(void))sub_1000FA850);
}

Swift::Int sub_1000FB880(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100082C28(&qword_100984158);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(void *)(v6 + 8 * v4);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v7);
      Swift::Int result = Hasher._finalize()();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(void *)(v14 + 8 * v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(void *)(v14 + 8 * v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(void *)(v14 + 8 * v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_1000FB9C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Shelf.ContentType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100082C28(&qword_1009841C8);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    char v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1000FC550(&qword_1009841D0, (void (*)(uint64_t))&type metadata accessor for Shelf.ContentType);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1000FC550((unint64_t *)&qword_100986D20, (void (*)(uint64_t))&type metadata accessor for Shelf.ContentType);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        int v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        Swift::Int result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_1000FBCDC(uint64_t a1)
{
  return sub_1000FBCF4(a1, &qword_100984160);
}

void *sub_1000FBCE8(uint64_t a1)
{
  return sub_1000FBCF4(a1, &qword_1009841A8);
}

void *sub_1000FBCF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100082C28(a2);
    uint64_t v4 = static _SetStorage.allocate(capacity:)();
    uint64_t v5 = 0;
    uint64_t v6 = v4 + 56;
    uint64_t v32 = v2;
    uint64_t v33 = a1 + 32;
    while (1)
    {
      uint64_t v7 = *(void **)(v33 + 8 * v5);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v8 = v7;
      String.hash(into:)();
      Swift::Int v9 = Hasher._finalize()();
      Swift::Int result = (void *)swift_bridgeObjectRelease();
      uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v12 = v9 & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = *(void *)(v6 + 8 * (v12 >> 6));
      uint64_t v15 = 1 << v12;
      if (((1 << v12) & v14) != 0)
      {
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;
        if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        Swift::Int result = (void *)swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_4;
        }
        uint64_t v22 = ~v11;
        while (1)
        {
          unint64_t v12 = (v12 + 1) & v22;
          unint64_t v13 = v12 >> 6;
          uint64_t v14 = *(void *)(v6 + 8 * (v12 >> 6));
          uint64_t v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0) {
            break;
          }
          uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v25 = v24;
          if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26) {
            goto LABEL_3;
          }
          char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          Swift::Int result = (void *)swift_bridgeObjectRelease();
          if (v28) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v6 + 8 * v13) = v15 | v14;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v8;
      uint64_t v29 = *(void *)(v4 + 16);
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30)
      {
        __break(1u);
        return result;
      }
      *(void *)(v4 + 16) = v31;
LABEL_5:
      if (++v5 == v32) {
        return (void *)v4;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_1000FBF20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100082C28((uint64_t *)&unk_1009949B0);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1000FC550(&qword_100982700, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1000FC550((unint64_t *)&qword_100992310, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        Swift::Int result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_1000FC238(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MetricsFieldInclusionRequest();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100082C28(&qword_100984168);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1000FC550(&qword_100984170, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1000FC550(&qword_100984178, (void (*)(uint64_t))&type metadata accessor for MetricsFieldInclusionRequest);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        Swift::Int result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1000FC550(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000FC598(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100082C28(&qword_100984190);
      uint64_t result = static _SetStorage.allocate(capacity:)();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    type metadata accessor for AnyCancellable();
    sub_1000FC550(&qword_100984198, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_1000FC550(&qword_1009841A0, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000FC84C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100082C28(&qword_10098B830);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    uint64_t v7 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      uint64_t v8 = *(void *)(v6 + 8 * v4);
      uint64_t result = static Hasher._hash(seed:_:)();
      unint64_t v10 = result & v7;
      unint64_t v11 = (result & (unint64_t)v7) >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * v11);
      uint64_t v13 = 1 << (result & v7);
      uint64_t v14 = *(void *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(void *)(v14 + 8 * v10) != v8)
        {
          unint64_t v10 = (v10 + 1) & v7;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v11) = v13 | v12;
        *(void *)(v14 + 8 * v10) = v8;
        uint64_t v15 = *(void *)(v3 + 16);
        BOOL v16 = __OFADD__(v15, 1);
        uint64_t v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v17;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (uint64_t)&_swiftEmptySetSingleton;
}

char *sub_1000FC9A0(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill;
  id v19 = objc_allocWithZone((Class)UIView);
  uint64_t v20 = v5;
  *(void *)&v5[v18] = [v19 init];
  uint64_t v21 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label;
  if (qword_10097E088 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for FontUseCase();
  uint64_t v23 = sub_100087728(v22, (uint64_t)qword_1009E10E8);
  uint64_t v24 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v17, v23, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v17, 0, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for DirectionalTextAlignment.none(_:), v11);
  id v25 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
  *(void *)&v20[v21] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  uint64_t v26 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage;
  *(void *)&v20[v26] = [objc_allocWithZone((Class)UIImageView) init];
  v20[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn] = 0;

  v43.receiver = v20;
  v43.super_class = ObjectType;
  uint64_t v27 = (char *)[v43 initWithFrame:a1, a2, a3, a4];
  uint64_t v28 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill;
  uint64_t v29 = *(void **)&v27[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill];
  uint64_t v30 = v27;
  [v29 setClipsToBounds:1];
  id v31 = [v30 contentView];
  [v31 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];

  id v32 = [v30 contentView];
  [v32 addSubview:*(void *)&v27[v28]];

  id v33 = [v30 contentView];
  [v33 addSubview:*(void *)&v30[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label]];

  id v34 = [v30 contentView];
  uint64_t v35 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage;
  [v34 addSubview:*(void *)&v30[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage]];

  sub_1000FCECC();
  sub_100082C28(&qword_100985E10);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1007BEDF0;
  *(void *)(v36 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v36 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  uint64_t v37 = v30;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  id v38 = *(id *)&v30[v35];
  id v39 = [v37 traitCollection];
  id v40 = sub_1000FDE94();

  [v38 setImage:v40];
  sub_100084CF0(0, (unint64_t *)&qword_1009842A8);
  uint64_t v41 = v37;
  static UITraitCollection.systemTraitsAffectingImageLookup.getter();
  *(void *)(swift_allocObject() + 16) = ObjectType;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v41;
}

void sub_1000FCECC()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 userInterfaceStyle];

  uint64_t v3 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn;
  id v17 = (id)sub_1000FDD54((uint64_t)v2, v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn]);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill];
  id v9 = [v8 layer];
  double v10 = 0.0;
  if ((v0[v3] & 1) == 0)
  {
    id v11 = [v0 traitCollection];
    static Separator.thickness(compatibleWith:)();
    double v10 = v12;
  }
  [v9 setBorderWidth:v10];

  id v13 = [v8 layer];
  id v14 = [v7 CGColor];
  [v13 setBorderColor:v14];

  [v8 setBackgroundColor:v5];
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label] setTextColor:v17];
  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage];
  double v16 = 1.0;
  if (!v0[v3]) {
    double v16 = 0.0;
  }
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage] setAlpha:v16];
  [v15 setTintColor:v17];
  [v0 setNeedsDisplay];
  [v0 setNeedsLayout];
}

id sub_1000FD0D0(char *a1)
{
  id v2 = *(void **)&a1[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage];
  id v3 = [a1 traitCollection];
  id v4 = sub_1000FDE94();

  [v2 setImage:v4];

  return [a1 setNeedsLayout];
}

id sub_1000FD1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for AutomationSemantics();
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v28 - v17;
  __chkstk_darwin(v16);
  uint64_t v28 = a1;
  uint64_t v29 = (char *)&v28 - v19;
  uint64_t v20 = *(void **)&v6[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label];
  uint64_t v21 = (void *)sub_100581148(a1, a2, a3, a4, v6);
  [v20 setAttributedText:v21];

  int v22 = v6[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn];
  v6[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn] = a5;
  if (v22 != (a5 & 1)) {
    sub_1000FCECC();
  }
  *((void *)&v34 + 1) = &type metadata for String;
  *(void *)&long long v33 = a3;
  *((void *)&v33 + 1) = a4;
  memset(v32, 0, sizeof(v32));
  swift_bridgeObjectRetain();
  static AutomationSemantics.shelfItem(itemKind:id:parentId:)();
  sub_100089384((uint64_t)v32);
  sub_100089384((uint64_t)&v33);
  if (a2)
  {
    *((void *)&v34 + 1) = &type metadata for String;
    *(void *)&long long v33 = v28;
    *((void *)&v33 + 1) = a2;
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  swift_bridgeObjectRetain();
  AutomationSemantics.attribute(key:value:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v24 = v15;
  uint64_t v25 = v31;
  v23(v24, v31);
  sub_100089384((uint64_t)&v33);
  *((void *)&v34 + 1) = &type metadata for Bool;
  LOBYTE(v33) = a5 & 1;
  uint64_t v26 = v29;
  AutomationSemantics.attribute(key:value:)();
  v23(v18, v25);
  sub_100089384((uint64_t)&v33);
  UIView.setAutomationSemantics(_:)();
  v23(v26, v25);
  return [v6 setNeedsLayout];
}

id sub_1000FD478()
{
  v32.receiver = v0;
  v32.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label];
  id v2 = [v1 attributedText];
  uint64_t v3 = v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn];
  id v4 = [v0 contentView];
  [v4 bounds];
  double v6 = v5;
  double v8 = v7;

  double v9 = sub_10058263C(v2, v3, v0, v6, v8);
  double v11 = v10;

  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill];
  id v13 = [v0 contentView];
  [v13 frame];

  CGRect.withLayoutDirection(in:relativeTo:)();
  [v12 setFrame:];
  id v14 = [v12 layer];
  v33.origin.CGFloat x = 0.0;
  v33.origin.CGFloat y = 0.0;
  v33.size.double width = v9;
  v33.size.double height = v11;
  [v14 setCornerRadius:round(CGRectGetHeight(v33) * 0.5)];

  if (qword_10097E078 != -1) {
    swift_once();
  }
  double v15 = sub_100091510(0.0, 0.0, v9, v11, *(double *)&xmmword_1009841D8, *((double *)&xmmword_1009841D8 + 1));
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  [v1 sizeThatFits:v18, v20];
  CGFloat v31 = v22;
  double v24 = v23;
  v34.origin.CGFloat x = v15;
  v34.origin.CGFloat y = v17;
  v34.size.double width = v19;
  v34.size.double height = v21;
  CGFloat MinX = CGRectGetMinX(v34);
  v35.origin.CGFloat x = 0.0;
  v35.origin.CGFloat y = 0.0;
  v35.size.double width = v9;
  v35.size.double height = v11;
  CGFloat v25 = floor((CGRectGetHeight(v35) - v24) * 0.5);
  id v26 = [v0 contentView];
  [v26 frame];

  CGRect.withLayoutDirection(in:relativeTo:)();
  [v1 setFrame:];
  uint64_t v27 = *(void **)&v0[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage];
  [v27 sizeThatFits:v9, v11];
  v36.origin.CGFloat x = MinX;
  v36.origin.CGFloat y = v25;
  v36.size.double width = v31;
  v36.size.double height = v24;
  CGRectGetMaxX(v36);
  v37.origin.CGFloat x = 0.0;
  v37.origin.CGFloat y = 0.0;
  v37.size.double width = v9;
  v37.size.double height = v11;
  CGRectGetHeight(v37);
  id v28 = [v0 contentView];
  [v28 frame];

  CGRect.withLayoutDirection(in:relativeTo:)();
  return [v27 setFrame:];
}

void sub_1000FD890(void *a1)
{
  type metadata accessor for GuidedSearchTokenPaletteCollectionViewLayout.LayoutAttributes();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    id v4 = *(void **)(v3
                  + OBJC_IVAR____TtCC8AppStore44GuidedSearchTokenPaletteCollectionViewLayout16LayoutAttributes_animation);
    if (v4)
    {
      id v8 = a1;
      id v5 = v4;
      id v6 = [v1 layer];
      NSString v7 = String._bridgeToObjectiveC()();
      [v6 addAnimation:v5 forKey:v7];
    }
  }
}

uint64_t type metadata accessor for GuidedSearchTokenCell()
{
  return self;
}

double sub_1000FDA6C()
{
  double result = 5.0;
  xmmword_1009841D8 = xmmword_1007C08A0;
  *(_OWORD *)&qword_1009841E8 = xmmword_1007C08A0;
  return result;
}

void sub_1000FDA84()
{
  qword_1009841F8 = 0x403E000000000000;
}

uint64_t sub_1000FDA94()
{
  uint64_t v0 = type metadata accessor for FontUseCase();
  sub_100042444(v0, qword_1009E10E8);
  uint64_t v1 = sub_100087728(v0, (uint64_t)qword_1009E10E8);
  if (qword_10097F600 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100087728(v0, (uint64_t)qword_1009E4C58);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000FDB5C(uint64_t a1)
{
}

id sub_1000FDB78(uint64_t a1)
{
  return sub_1000FDC90(a1, &qword_100984218, &qword_100984220, algn_100984228);
}

void sub_1000FDB8C(uint64_t a1)
{
}

void sub_1000FDBA8(uint64_t a1, SEL *a2, void *a3, void *a4, void *a5)
{
  double v9 = self;
  id v10 = [v9 systemBlueColor];
  id v11 = [v9 clearColor];
  id v12 = [v9 *a2];
  id v13 = [v12 colorWithAlphaComponent:0.15];

  *a3 = v10;
  *a4 = v11;
  *a5 = v13;
}

id sub_1000FDC7C(uint64_t a1)
{
  return sub_1000FDC90(a1, &qword_100984248, &qword_100984250, algn_100984258);
}

id sub_1000FDC90(uint64_t a1, void *a2, void *a3, void *a4)
{
  NSString v7 = self;
  id v8 = [v7 systemWhiteColor];
  id v9 = [v7 systemBlueColor];
  id result = [v7 clearColor];
  *a2 = v8;
  *a3 = v9;
  *a4 = result;
  return result;
}

void sub_1000FDD30()
{
}

uint64_t sub_1000FDD54(uint64_t a1, char a2)
{
  if (a2)
  {
    if (a1 == 2)
    {
      if (qword_10097E0A8 != -1) {
        swift_once();
      }
      uint64_t v2 = &qword_100984248;
    }
    else
    {
      if (qword_10097E098 != -1) {
        swift_once();
      }
      uint64_t v2 = &qword_100984218;
    }
  }
  else if (a1 == 2)
  {
    if (qword_10097E0A0 != -1) {
      swift_once();
    }
    uint64_t v2 = &qword_100984230;
  }
  else
  {
    if (qword_10097E090 != -1) {
      swift_once();
    }
    uint64_t v2 = &qword_100984200;
  }
  id v4 = (void *)v2[1];
  uint64_t v3 = (void *)v2[2];
  uint64_t v5 = *v2;
  id v6 = (id)*v2;
  id v7 = v4;
  id v8 = v3;
  return v5;
}

id sub_1000FDE94()
{
  uint64_t v0 = type metadata accessor for SystemImage();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for SystemImage.xmark(_:), v0, v2);
  sub_100084CF0(0, (unint64_t *)&qword_100984D10);
  if (qword_10097F608 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for FontUseCase();
  sub_100087728(v5, (uint64_t)qword_1009E4C70);
  id v6 = [self currentTraitCollection];
  id v7 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)();

  id v8 = [self configurationWithFont:v7 scale:-1];
  id v9 = (void *)static SystemImage.load(_:with:)();

  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  id v10 = [v9 imageWithRenderingMode:2];

  return v10;
}

void sub_1000FE084()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_pill;
  *(void *)&v1[v9] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v10 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_label;
  if (qword_10097E088 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for FontUseCase();
  uint64_t v12 = sub_100087728(v11, (uint64_t)qword_1009E10E8);
  uint64_t v13 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, v12, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v11);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  id v14 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
  *(void *)&v1[v10] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  uint64_t v15 = OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_closeImage;
  *(void *)&v1[v15] = [objc_allocWithZone((Class)UIImageView) init];
  v1[OBJC_IVAR____TtC8AppStore21GuidedSearchTokenCell_isOn] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000FE328()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000FE338(char *a1)
{
  return sub_1000FD0D0(a1);
}

void sub_1000FE340()
{
  qword_1009E1100 = 0;
  *(void *)algn_1009E1108 = 0;
}

double sub_1000FE350()
{
  double result = 1.0;
  xmmword_1009E1110 = xmmword_1007C08E0;
  return result;
}

double sub_1000FE364()
{
  double result = 0.0;
  xmmword_1009E1120 = xmmword_1007C08F0;
  return result;
}

__n128 sub_1000FE378()
{
  __asm { FMOV            V0.2D, #1.0 }
  xmmword_1009E1130 = (__int128)result;
  return result;
}

id sub_1000FE388(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors] = _swiftEmptyArrayStorage;
  uint64_t v9 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView;
  uint64_t v10 = (objc_class *)type metadata accessor for GradientView();
  id v11 = objc_allocWithZone(v10);
  uint64_t v12 = v4;
  *(void *)&v4[v9] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView;
  *(void *)&v12[v13] = [objc_allocWithZone(v10) init];
  uint64_t v14 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView;
  *(void *)&v12[v14] = [objc_allocWithZone(v10) init];
  uint64_t v15 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView;
  *(void *)&v12[v15] = [objc_allocWithZone(v10) init];

  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for MultiCornerGradientView();
  id v16 = [super initWithFrame:a1, a2, a3, a4];
  id v17 = [v16 layer];
  id v18 = [self mainScreen];
  [v18 scale];
  double v20 = v19;

  [v17 setRasterizationScale:v20];
  return v16;
}

uint64_t sub_1000FE56C(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors;
  uint64_t v3 = *(void *)((char *)v1 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors);
  *(void *)((char *)v1 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors) = a1;
  unint64_t v4 = swift_bridgeObjectRetain();
  unsigned __int8 v5 = sub_1006EF8A0(v4, v3);
  uint64_t v6 = swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    unint64_t v7 = *(void *)((char *)v1 + v2);
    if (!(v7 >> 62))
    {
      if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = swift_bridgeObjectRelease();
    if (v9) {
LABEL_4:
    }
      (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0xF0))(v6);
  }
LABEL_5:

  return swift_bridgeObjectRelease();
}

void sub_1000FE658()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MultiCornerGradientView();
  [super layoutSubviews];
  id v1 = *(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView];
  [v0 bounds];
  [v1 setFrame:];

  id v2 = *(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView];
  [v0 bounds];
  [v2 setFrame:];

  id v3 = *(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView];
  [v0 bounds];
  [v3 setFrame:];

  id v4 = *(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView];
  [v0 bounds];
  [v4 setFrame:];
}

id sub_1000FE7AC()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView;
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView] removeFromSuperview];
  uint64_t v3 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView;
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView] removeFromSuperview];
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView] removeFromSuperview];
  uint64_t v4 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView;
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView] removeFromSuperview];
  objc_super v5 = (char *)self;
  id v6 = [v5 clearColor];
  [v1 setBackgroundColor:v6];

  uint64_t v7 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors;
  unint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  switch(v9)
  {
    case 1:
      uint64_t v10 = *(void *)&v1[v7];
      if ((v10 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_59;
        }
        id v11 = *(id *)(v10 + 32);
      }
      [v1 setBackgroundColor:v11];

      goto LABEL_53;
    case 2:
      id v12 = [objc_allocWithZone((Class)type metadata accessor for GradientView()) init];
      uint64_t v13 = *(void **)&v1[v2];
      *(void *)&v1[v2] = v12;

      objc_super v5 = *(char **)&v1[v2];
      sub_100082C28(&qword_100982B50);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1007BEFA0;
      uint64_t v14 = *(void *)&v1[v7];
      if ((v14 & 0xC000000000000001) != 0)
      {
LABEL_59:
        uint64_t v84 = v5;
        swift_bridgeObjectRetain();
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void *)&v1[v7];
      }
      else
      {
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_61;
        }
        uint64_t v15 = *(void **)(v14 + 40);
        id v16 = v5;
        id v17 = v15;
      }
      *(void *)(v10 + 32) = v17;
      if ((v14 & 0xC000000000000001) != 0)
      {
LABEL_61:
        swift_bridgeObjectRetain();
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_63;
      }
      id v18 = *(id *)(v14 + 32);
LABEL_14:
      *(void *)(v10 + 40) = v18;
      specialized Array._endMutation()();
      *(void *)&v5[OBJC_IVAR____TtC8AppStore12GradientView_colors] = v10;
      swift_bridgeObjectRelease();
      sub_1000877D0();

      uint64_t v19 = qword_10097E0B0;
      uint64_t v10 = (uint64_t)*(id *)&v1[v2];
      if (v19 == -1) {
        goto LABEL_15;
      }
LABEL_63:
      swift_once();
LABEL_15:
      double v20 = *(double *)&qword_1009E1100;
      double v21 = *(double *)algn_1009E1108;
      id v22 = [(id)v10 layer];
      self;
      [swift_dynamicCastObjCClassUnconditional() setStartPoint:v20, v21];

      uint64_t v23 = qword_10097E0C8;
      id v24 = *(id *)&v1[v2];
      if (v23 != -1) {
        swift_once();
      }
      long long v25 = xmmword_1009E1130;
      id v26 = [v24 layer];
      self;
      [(id)swift_dynamicCastObjCClassUnconditional() setEndPoint:v25];

      [v1 addSubview:*(void *)&v1[v2]];
LABEL_53:
      [v1 setNeedsLayout];
      return [v1 setNeedsDisplay];
    case 3:
      uint64_t v93 = v3;
      uint64_t v27 = (objc_class *)type metadata accessor for GradientView();
      id v28 = [objc_allocWithZone(v27) init];
      uint64_t v29 = *(void **)&v1[v2];
      *(void *)&v1[v2] = v28;

      uint64_t v30 = *(char **)&v1[v2];
      sub_100082C28(&qword_100982B50);
      CGFloat v31 = (_OWORD *)swift_allocObject();
      v31[1] = xmmword_1007BEFA0;
      uint64_t v32 = *(void *)&v1[v7];
      if ((v32 & 0xC000000000000001) != 0)
      {
        uint64_t v85 = v30;
        swift_bridgeObjectRetain();
        uint64_t v86 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        id v35 = (id)v86;
        uint64_t v32 = *(void *)&v1[v7];
      }
      else
      {
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_66;
        }
        CGRect v33 = *(void **)(v32 + 40);
        CGRect v34 = v30;
        id v35 = v33;
      }
      *((void *)v31 + 4) = v35;
      if ((v32 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
        {
          __break(1u);
          goto LABEL_68;
        }
        id v36 = *(id *)(v32 + 48);
LABEL_24:
        *((void *)v31 + 5) = v36;
        specialized Array._endMutation()();
        *(void *)&v30[OBJC_IVAR____TtC8AppStore12GradientView_colors] = v31;
        swift_bridgeObjectRelease();
        sub_1000877D0();

        uint64_t v37 = qword_10097E0B0;
        CGFloat v31 = *(id *)&v1[v2];
        if (v37 == -1) {
          goto LABEL_25;
        }
LABEL_68:
        swift_once();
LABEL_25:
        double v38 = *(double *)&qword_1009E1100;
        double v39 = *(double *)algn_1009E1108;
        id v40 = [v31 layer:2, 5];
        self;
        [swift_dynamicCastObjCClassUnconditional() setStartPoint:v38, v39];

        uint64_t v41 = qword_10097E0B8;
        id v42 = *(id *)&v1[v2];
        if (v41 != -1) {
          swift_once();
        }
        long long v43 = xmmword_1009E1110;
        id v44 = [v42 layer];
        self;
        [(id)swift_dynamicCastObjCClassUnconditional() setEndPoint:v43];

        id v45 = [objc_allocWithZone(v27) init];
        id v46 = *(void **)&v1[v93];
        *(void *)&v1[v93] = v45;

        uint64_t v47 = *(void *)&v1[v93];
        uint64_t v48 = *(void *)&v1[v7];
        if ((v48 & 0xC000000000000001) != 0)
        {
          id v88 = (id)v47;
          swift_bridgeObjectRetain();
          id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          if (!*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_71;
          }
          id v49 = *(void **)(v48 + 32);
          id v50 = (id)v47;
          id v51 = v49;
        }
        [(id)v47 setBackgroundColor:v51];

        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = v92;
        *(void *)(v47 + 32) = [v5 clearColor];
        id v52 = [v5 blackColor];
        id v53 = [v52 colorWithAlphaComponent:0.2];

        *(void *)(v47 + 40) = v53;
        specialized Array._endMutation()();
        if (qword_10097E0C0 == -1)
        {
LABEL_31:
          double v55 = *((double *)&xmmword_1009E1120 + 1);
          double v54 = *(double *)&xmmword_1009E1120;
          if (qword_10097E0C8 != -1)
          {
            long long v89 = xmmword_1009E1120;
            swift_once();
            double v55 = *((double *)&v89 + 1);
            double v54 = *(double *)&v89;
          }
          Swift::String v56 = sub_1000FF7F4(v47, v54, v55, *(double *)&xmmword_1009E1130, *((double *)&xmmword_1009E1130 + 1), (uint64_t)&off_1008B98A0, 0);
          swift_bridgeObjectRelease();
          Swift::String v57 = *(void **)&v1[v4];
          *(void *)&v1[v4] = v56;

          [*(id *)&v1[v93] addSubview:*(void *)&v1[v4]];
          sub_1000FF4E4();
          [v1 addSubview:*(void *)&v1[v2]];
          [v1 addSubview:*(void *)&v1[v93]];
          goto LABEL_53;
        }
LABEL_71:
        swift_once();
        goto LABEL_31;
      }
LABEL_66:
      swift_bridgeObjectRetain();
      uint64_t v87 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      id v36 = (id)v87;
      goto LABEL_24;
    case 4:
      id v58 = [objc_allocWithZone((Class)type metadata accessor for GradientView()) init];
      id v59 = *(void **)&v1[v2];
      *(void *)&v1[v2] = v58;

      uint64_t v60 = *(char **)&v1[v2];
      sub_100082C28(&qword_100982B50);
      uint64_t v61 = (_OWORD *)swift_allocObject();
      v61[1] = xmmword_1007BEFA0;
      uint64_t v62 = *(void *)&v1[v7];
      if ((v62 & 0xC000000000000001) != 0)
      {
        id v90 = v60;
        swift_bridgeObjectRetain();
        id v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        uint64_t v62 = *(void *)&v1[v7];
      }
      else
      {
        if (!*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_74;
        }
        id v63 = *(void **)(v62 + 32);
        double v64 = v60;
        id v65 = v63;
      }
      *((void *)v61 + 4) = v65;
      if ((v62 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_76;
        }
        id v66 = *(id *)(v62 + 40);
LABEL_40:
        *((void *)v61 + 5) = v66;
        specialized Array._endMutation()();
        *(void *)&v60[OBJC_IVAR____TtC8AppStore12GradientView_colors] = v61;
        swift_bridgeObjectRelease();
        sub_1000877D0();

        uint64_t v67 = qword_10097E0B0;
        uint64_t v61 = *(id *)&v1[v2];
        if (v67 == -1) {
          goto LABEL_41;
        }
LABEL_76:
        swift_once();
LABEL_41:
        double v68 = *(double *)&qword_1009E1100;
        double v69 = *(double *)algn_1009E1108;
        id v70 = [v61 layer];
        self;
        [swift_dynamicCastObjCClassUnconditional() setStartPoint:v68, v69];

        uint64_t v71 = qword_10097E0B8;
        id v72 = *(id *)&v1[v2];
        if (v71 != -1) {
          swift_once();
        }
        long long v73 = xmmword_1009E1110;
        id v74 = [v72 layer];
        self;
        [(id)swift_dynamicCastObjCClassUnconditional() setEndPoint:v73];

        uint64_t v75 = swift_allocObject();
        *(_OWORD *)(v75 + 16) = xmmword_1007BEFA0;
        uint64_t v76 = *(void *)&v1[v7];
        if ((v76 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
          uint64_t v76 = *(void *)&v1[v7];
        }
        else
        {
          if (*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
          {
            __break(1u);
            goto LABEL_79;
          }
          id v77 = *(id *)(v76 + 48);
        }
        *(void *)(v75 + 32) = v77;
        if ((v76 & 0xC000000000000001) == 0)
        {
          if (*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
          {
            __break(1u);
            goto LABEL_81;
          }
          id v78 = *(id *)(v76 + 56);
LABEL_49:
          *(void *)(v75 + 40) = v78;
          specialized Array._endMutation()();
          if (qword_10097E0C0 == -1)
          {
LABEL_50:
            double v80 = *((double *)&xmmword_1009E1120 + 1);
            double v79 = *(double *)&xmmword_1009E1120;
            if (qword_10097E0C8 != -1)
            {
              long long v91 = xmmword_1009E1120;
              swift_once();
              double v80 = *((double *)&v91 + 1);
              double v79 = *(double *)&v91;
            }
            double v81 = sub_1000FF7F4(v75, v79, v80, *(double *)&xmmword_1009E1130, *((double *)&xmmword_1009E1130 + 1), (uint64_t)&off_1008B98D0, 0);
            swift_bridgeObjectRelease();
            id v82 = *(void **)&v1[v3];
            *(void *)&v1[v3] = v81;

            sub_1000FF4E4();
            [v1 addSubview:*(void *)&v1[v2]];
            [v1 addSubview:*(void *)&v1[v3]];
            goto LABEL_53;
          }
LABEL_81:
          swift_once();
          goto LABEL_50;
        }
LABEL_79:
        swift_bridgeObjectRetain();
        id v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
LABEL_74:
      swift_bridgeObjectRetain();
      id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_40;
    default:
      goto LABEL_53;
  }
}

void sub_1000FF4E4()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v3 < 3) {
      return;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3)
  {
    return;
  }
  sub_100082C28(&qword_100982B50);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1007BEFA0;
  objc_super v5 = self;
  *(void *)(v4 + 32) = [v5 clearColor];
  *(void *)(v4 + 40) = [v5 whiteColor];
  specialized Array._endMutation()();
  if (qword_10097E0B0 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_1009E1100;
  double v7 = *(double *)algn_1009E1108;
  if (qword_10097E0C0 != -1) {
    swift_once();
  }
  unint64_t v8 = sub_1000FF7F4(v4, v6, v7, *(double *)&xmmword_1009E1120, *((double *)&xmmword_1009E1120 + 1), (uint64_t)&off_1008B9870, 0);
  swift_bridgeObjectRelease();
  uint64_t v9 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView;
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView);
  *(void *)(v1 + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView) = v8;

  id v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView), "layer"));
  id v12 = [*(id *)(v1 + v9) layer];
  [v11 setMask:v12];
}

id sub_1000FF720()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MultiCornerGradientView();
  return [super dealloc];
}

uint64_t type metadata accessor for MultiCornerGradientView()
{
  return self;
}

char *sub_1000FF7F4(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (char *)[objc_allocWithZone((Class)type metadata accessor for GradientView()) init];
  *(void *)&v13[OBJC_IVAR____TtC8AppStore12GradientView_colors] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1000877D0();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_1000592B0(v14);
  id v15 = [v13 layer];
  self;
  [swift_dynamicCastObjCClassUnconditional() setStartPoint:a2, a3];

  id v16 = [v13 layer];
  self;
  [swift_dynamicCastObjCClassUnconditional() setEndPoint:a4, a5];

  id v17 = [v13 layer];
  [v17 setMask:a7];

  return v13;
}

void sub_1000FF974()
{
  *(void *)&v0[OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_colors] = _swiftEmptyArrayStorage;
  uint64_t v1 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_baseGradientView;
  objc_super v2 = (objc_class *)type metadata accessor for GradientView();
  *(void *)&v0[v1] = [objc_allocWithZone(v2) init];
  uint64_t v3 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientView;
  *(void *)&v0[v3] = [objc_allocWithZone(v2) init];
  uint64_t v4 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_secondaryGradientMaskView;
  *(void *)&v0[v4] = [objc_allocWithZone(v2) init];
  uint64_t v5 = OBJC_IVAR____TtC8AppStore23MultiCornerGradientView_bottomRightOverlayView;
  *(void *)&v0[v5] = [objc_allocWithZone(v2) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000FFA6C(uint64_t a1, uint64_t a2)
{
  v19[2] = a1;
  void v19[3] = a2;
  uint64_t v2 = type metadata accessor for Artwork.Crop();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for Artwork.Style();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Artwork.URLTemplate();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for URLComponents();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init()();
  static Artwork.URLTemplate.resourceScheme.getter();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  URLComponents.string.getter();
  if (v15)
  {
    Artwork.URLTemplate.init(rawValue:)();
    uint64_t v16 = type metadata accessor for ImpressionMetrics();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Artwork.Style.unspecified(_:), v3);
    static Artwork.Crop.boundingBox.getter();
    uint64_t v17 = dispatch thunk of Artwork.__allocating_init(id:template:size:backgroundColor:backgroundGradientColor:style:crop:contentMode:variants:impressionMetrics:)();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return 0;
  }
  return v17;
}

uint64_t sub_1000FFDAC()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    type metadata accessor for ViewRecycler();
    swift_getWitnessTable();
    uint64_t v0 = type metadata accessor for ReusePool();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return v0;
}

void sub_1000FFF48(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_100104C0C();
}

id ArcadeSubscribeViewController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = [self defaultCenter];
  [v2 removeObserver:v0];

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return [super dealloc];
}

id sub_1000FFFF4(void *a1)
{
  id v1 = a1;
  return ArcadeSubscribeViewController.__deallocating_deinit();
}

void sub_10010001C(char *a1)
{
  (*(void (**)(char *, void))(*(void *)(*(void *)((swift_isaMask & *(void *)a1) + 0x50) - 8) + 8))(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x60)], *(void *)((swift_isaMask & *(void *)a1) + 0x50));
  sub_10006012C(*(void *)&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x68)]);

  swift_unknownObjectRelease();
  swift_release();
  id v2 = &a1[*(void *)((swift_isaMask & *(void *)a1) + 0xB0)];
  swift_getAssociatedTypeWitness();
  type metadata accessor for ViewRecycler();
  swift_getWitnessTable();
  uint64_t v3 = type metadata accessor for ReusePool();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  objc_super v4 = *(void **)&a1[*(void *)((swift_isaMask & *(void *)a1) + 0xD0)];
}

uint64_t sub_10010025C()
{
  uint64_t result = (uint64_t)[v0 isTracking];
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)[v0 isDragging];
    if ((result & 1) == 0)
    {
      swift_beginAccess();
      swift_getAssociatedTypeWitness();
      type metadata accessor for ViewRecycler();
      swift_getWitnessTable();
      type metadata accessor for ReusePool();
      ReusePool.drain()();
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_100100380(void *a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = a1;
  sub_10010025C();

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_100100468(char a1)
{
  [v1 setContentSize:0.0, 0.0];
  *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0xA0)) = a1;
  [v1 invalidateIntrinsicContentSize];

  return [v1 setNeedsLayout];
}

id sub_1001004F4(void *a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  [super traitCollectionDidChange:a1];
  id v3 = [v1 traitCollection];
  id v4 = [v3 layoutDirection];

  if (!a1 || (id result = [a1 layoutDirection], v4 != result))
  {
    BOOL v6 = [v1 effectiveUserInterfaceLayoutDirection] == (id)1;
    id v7 = [v1 layer];
    [v7 setFlipsHorizontalAxis:v6];

    [v1 setContentSize:0.0, 0.0];
    *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0xA0)) = 1;
    [v1 invalidateIntrinsicContentSize];
    return [v1 setNeedsLayout];
  }
  return result;
}

void sub_100100640(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_1001004F4(a3);
}

id sub_1001006AC(void *a1)
{
  id v1 = a1;
  id v2 = sub_1001006E0();

  return v2;
}

id sub_1001006E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super semanticContentAttribute];
}

void sub_100100718(void *a1, uint64_t a2, void *a3)
{
  id v4 = a1;
  sub_10010076C(a3);
}

id sub_10010076C(id a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v9.receiver = v1;
  v9.super_class = ObjectType;
  [super semanticContentAttribute];
  v8.receiver = v1;
  v8.super_class = ObjectType;
  [super setSemanticContentAttribute:a1];
  if (v4 != a1)
  {
    BOOL v6 = [v1 effectiveUserInterfaceLayoutDirection] == (id)1;
    id v7 = [v1 layer];
    [v7 setFlipsHorizontalAxis:v6];

    [v1 setContentSize:0.0, 0.0];
    *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0xA0)) = 1;
    [v1 invalidateIntrinsicContentSize];
    return [v1 setNeedsLayout];
  }
  return result;
}

uint64_t sub_10010088C()
{
  return 0;
}

uint64_t sub_100100894(void *a1)
{
  sub_100082C28(&qword_100981AD0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1007BEDF0;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 32) = 0xD000000000000040;
  *(void *)(v2 + 40) = 0x80000001008074C0;
  id v3 = a1;
  debugPrint(_:separator:terminator:)();

  return swift_bridgeObjectRelease();
}

double sub_10010093C(void *a1)
{
  id v1 = a1;
  double v2 = sub_100100980();

  return v2;
}

CGFloat sub_100100980()
{
  id v1 = (void *)(swift_isaMask & *(void *)v0);
  uint64_t v2 = v1[10];
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)v7 - v4;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v7 - v4, &v0[v1[12]], v2);
  (*(void (**)(void *__return_ptr, uint64_t))(v1[11] + 24))(v7, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return UIViewNoIntrinsicMetric;
}

CGFloat sub_100100B18(uint64_t a1, CGFloat Width)
{
  uint64_t v4 = swift_isaMask & *(void *)v2;
  uint64_t v5 = *(void *)(v4 + 0x50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  objc_super v9 = (char *)v20 - v8;
  if (Width < COERCE_DOUBLE(1))
  {
    id v10 = [self mainScreen];
    [v10 bounds];
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;

    v21.origin.CGFloat x = v12;
    v21.origin.CGFloat y = v14;
    v21.size.double width = v16;
    v21.size.double height = v18;
    double Width = CGRectGetWidth(v21);
    uint64_t v7 = swift_isaMask & *(void *)v2;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, &v2[*(void *)(v7 + 96)], v5);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v4 + 88) + 24))(v20, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return Width;
}

double sub_100100D5C(void *a1, CGFloat a2)
{
  id v3 = a1;
  double v4 = sub_100100B18((uint64_t)v3, a2);

  return v4;
}

uint64_t sub_100100DB0()
{
  id v1 = (void *)(swift_isaMask & *v0);
  uint64_t v2 = v1[10];
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v13 - v4;
  uint64_t v6 = (char *)v0 + v1[12];
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v7((char *)v13 - v4, v6, v2);
  uint64_t v8 = v1[11];
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v2, v8);
  id v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v7(v5, v6, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 24))(v13, v2, v8);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v5, v2);
  double v12 = ceil((double)v9 / (double)v13[9]);
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v12 < 9.22337204e18) {
    return (uint64_t)v12;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_100100FBC(uint64_t a1)
{
  void (*v13)(double *__return_ptr, uint64_t, uint64_t);
  double v14;
  uint64_t v15;
  double v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  double v19;
  uint64_t v20;
  void (*v21)(double *__return_ptr, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t);
  double v23;
  char *v24;
  void (*v25)(double *__return_ptr, uint64_t, uint64_t);
  double v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  double v31;
  char *v32;
  void (*v33)(double *__return_ptr, uint64_t, uint64_t);
  double v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  double v38;
  void *v39;
  void *v40;
  double *v41;
  uint64_t v42;
  void *v43;
  void (*v44)(double *__return_ptr, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, char *, uint64_t);
  void v51[10];
  void v52[10];
  void v53[10];
  void v54[10];
  void v55[10];
  double v56[10];
  void v57[10];
  void v58[10];
  void v59[11];

  uint64_t v2 = swift_isaMask & *v1;
  uint64_t v3 = *(void *)(v2 + 0x50);
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(a1).n128_u64[0];
  uint64_t v7 = (char *)&v42 - v6;
  id result = [v1 contentSize];
  if (v10 == 0.0 && v9 == 0.0)
  {
    double v11 = (double)sub_100100DB0();
    double v12 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x60);
    id v50 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v50(v7, v12, v3);
    id v45 = v4 + 16;
    uint64_t v47 = *(void *)(v2 + 88);
    double v13 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v47 + 24);
    ((void (*)(void *__return_ptr, uint64_t))v13)(v51, v3);
    id v49 = *(void (**)(char *, uint64_t))(v4 + 8);
    v49(v7, v3);
    CGFloat v14 = (double)v51[9];
    uint64_t v48 = v12;
    v50(v7, v12, v3);
    double v15 = v47;
    id v44 = v13;
    v13((double *)v52, v3, v47);
    v49(v7, v3);
    id v46 = v4 + 8;
    CGFloat v16 = *(double *)&v52[1];
    double v17 = v12;
    CGFloat v18 = v50;
    v50(v7, v17, v3);
    v13((double *)v53, v3, v15);
    v49(v7, v3);
    uint64_t v19 = v16 + *(double *)&v53[3] + 0.0;
    v18(v7, v48, v3);
    double v20 = v47;
    CGRect v21 = v44;
    v44((double *)v54, v3, v47);
    long long v43 = v1;
    id v22 = v49;
    v49(v7, v3);
    uint64_t v23 = v19 + *(double *)&v54[4] * v11;
    id v24 = v48;
    v50(v7, v48, v3);
    v21((double *)v55, v3, v20);
    long long v25 = v21;
    v22(v7, v3);
    id v26 = v23 + (v11 + -1.0) * *(double *)&v55[6];
    uint64_t v27 = v24;
    id v28 = v50;
    v50(v7, v27, v3);
    uint64_t v29 = v47;
    v25(v56, v3, v47);
    uint64_t v30 = v49;
    v49(v7, v3);
    CGFloat v31 = v56[0];
    uint64_t v32 = v48;
    v28(v7, v48, v3);
    CGRect v33 = v44;
    v44((double *)v57, v3, v29);
    v30(v7, v3);
    CGRect v34 = v31 + *(double *)&v57[2] + 0.0;
    id v35 = v32;
    id v36 = v50;
    v50(v7, v35, v3);
    v33((double *)v58, v3, v29);
    uint64_t v37 = v49;
    v49(v7, v3);
    double v38 = v34 + *(double *)&v58[5] * v14;
    v36(v7, v48, v3);
    v33((double *)v59, v3, v47);
    v37(v7, v3);
    double v39 = v43;
    id result = [v43 setContentSize:v26, v38 + (v14 + -1.0) * *(double *)&v59[7]];
    id v40 = v39;
    uint64_t v41 = (double *)((char *)v39 + *(void *)((swift_isaMask & *v39) + 0xA8));
    if (((_BYTE)v41[2] & 1) == 0)
    {
      id result = [v40 setContentOffset:*v41 v41[1]];
      *uint64_t v41 = 0.0;
      v41[1] = 0.0;
      *((unsigned char *)v41 + 16) = 1;
      if (*(void *)((char *)v40 + *(void *)((swift_isaMask & *v40) + 0x88)))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        dispatch thunk of ScrollObserver.didScroll(in:)();
        return (id)swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

id sub_100101570(uint64_t a1)
{
  void (*v11)(void *__return_ptr, uint64_t, uint64_t);
  void (*v12)(char *, uint64_t);
  double v13;
  double Width;
  id result;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t);
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  void v28[10];
  void v29[9];
  uint64_t v30;
  CGRect v31;

  uint64_t v2 = v1;
  uint64_t v3 = (void *)(swift_isaMask & *v1);
  uint64_t v4 = v3[10];
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v24 - v7;
  double v9 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  id v26 = (char *)v2 + v3[12];
  uint64_t v27 = v9;
  ((void (*)(char *, __n128))v9)(v8, v6);
  uint64_t v10 = v3[11];
  double v11 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 24);
  v11(v28, v4, v10);
  double v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  double v13 = *(double *)&v28[4] + *(double *)&v28[6];
  [v2 frame];
  double Width = CGRectGetWidth(v31);
  id result = [v2 contentInset];
  double v17 = ceil((Width - v16) / v13);
  if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  long long v25 = (uint64_t (*)(char *, uint64_t))v12;
  CGFloat v18 = (uint64_t)v17;
  uint64_t v19 = *(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x70));
  if (*((unsigned char *)v2 + *(void *)((swift_isaMask & *v2) + 0x78)) == 1)
  {
    double v20 = __OFADD__(v18, v19);
    CGRect v21 = v18 + v19;
    if (!v20)
    {
      if (v21 + 0x4000000000000000 >= 0)
      {
        id v22 = 2 * v21;
        v27(v8, v26, v4);
        v11(v29, v4, v10);
        id result = (id)v25(v8, v4);
        if ((unsigned __int128)(v22 * (__int128)v30) >> 64 == (v22 * v30) >> 63) {
          goto LABEL_12;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v19 + 0x4000000000000000 < 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v23 = 2 * v19;
  v27(v8, v26, v4);
  v11(v29, v4, v10);
  id result = (id)v25(v8, v4);
  if ((unsigned __int128)(v23 * (__int128)v30) >> 64 != (v23 * v30) >> 63)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!__OFADD__(v18, v23 * v30))
  {
LABEL_12:
    swift_beginAccess();
    swift_getAssociatedTypeWitness();
    type metadata accessor for ViewRecycler();
    swift_getWitnessTable();
    type metadata accessor for ReusePool();
    ReusePool.limit.setter();
    return (id)swift_endAccess();
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_10010198C(uint64_t a1, double a2)
{
  void (*v26)(double *__return_ptr, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t);
  double v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  double v31;
  double v32;
  double v33;
  double Width;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t (*v50)(uint64_t, uint64_t);
  int v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  double v54[10];
  void v55[10];
  void v56[4];
  CGRect v57;
  CGRect v58;

  uint64_t v3 = v2;
  id v51 = a1;
  uint64_t v5 = swift_isaMask & *v2;
  uint64_t v6 = *(void *)(v5 + 0x50);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  double v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = __chkstk_darwin(v10).n128_u64[0];
  double v13 = (char *)&v45 - v12;
  [v3 frame:v11];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  id v22 = *(void (**)(char *))(v7 + 16);
  id v53 = (char *)v3 + *(void *)((swift_isaMask & *v3) + 0x60);
  v22(v13);
  uint64_t v23 = *(void *)(v5 + 88);
  id v50 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 32);
  uint64_t v24 = v50(v6, v23);
  id v52 = *(void (**)(char *, uint64_t))(v7 + 8);
  v52(v13, v6);
  if (v24 >= 1)
  {
    v57.origin.CGFloat x = v15;
    v57.origin.CGFloat y = v17;
    v57.size.double width = v19;
    v57.size.double height = v21;
    if (!CGRectIsEmpty(v57))
    {
      uint64_t v47 = v23 + 32;
      uint64_t v48 = v9;
      id v49 = (void (*)(char *, char *, uint64_t))v22;
      long long v25 = v53;
      v49(v13, v53, v6);
      id v26 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v23 + 24);
      v26(v54, v6, v23);
      uint64_t v27 = v52;
      v52(v13, v6);
      id v28 = v54[4] + v54[6];
      v49(v13, v25, v6);
      v26((double *)v55, v6, v23);
      v27(v13, v6);
      id v46 = v55[9];
      uint64_t v29 = v25;
      uint64_t v30 = v49;
      v49(v13, v29, v6);
      v26((double *)v56, v6, v23);
      v27(v13, v6);
      CGFloat v31 = *(double *)&v56[3];
      uint64_t v32 = 0.0;
      if (a2 >= 0.0) {
        uint64_t v32 = a2;
      }
      CGRect v33 = v32 + *(double *)&v56[1];
      v58.origin.CGFloat x = v15;
      v58.origin.CGFloat y = v17;
      v58.size.double width = v19;
      v58.size.double height = v21;
      double Width = CGRectGetWidth(v58);
      id v35 = floor(v33 / v28);
      if ((~*(void *)&v35 & 0x7FF0000000000000) != 0)
      {
        if (v35 > -9.22337204e18)
        {
          if (v35 < 9.22337204e18)
          {
            id v36 = floor((v33 + Width - v31) / v28);
            if ((~*(void *)&v36 & 0x7FF0000000000000) != 0)
            {
              if (v36 > -9.22337204e18)
              {
                if (v36 < 9.22337204e18)
                {
                  uint64_t v37 = (uint64_t)v35;
                  double v38 = (uint64_t)v36;
                  if (v51)
                  {
                    double v39 = *(void *)((char *)v3 + *(void *)((swift_isaMask & *v3) + 0x70));
                    id v40 = __OFSUB__(v37, v39);
                    v37 -= v39;
                    uint64_t v41 = v48;
                    if (v40)
                    {
LABEL_28:
                      __break(1u);
                      goto LABEL_29;
                    }
                    id v40 = __OFADD__(v38, v39);
                    v38 += v39;
                    if (v40)
                    {
LABEL_29:
                      __break(1u);
                      return;
                    }
                    id v42 = v46;
                  }
                  else
                  {
                    uint64_t v41 = v48;
                    id v42 = v46;
                  }
                  if ((unsigned __int128)(v37 * (__int128)v42) >> 64 == (v37 * v42) >> 63)
                  {
                    long long v43 = v30;
                    id v44 = v42;
                    v43(v41, v53, v6);
                    v50(v6, v23);
                    v52(v41, v6);
                    if ((unsigned __int128)(v38 * (__int128)v44) >> 64 == (v38 * v44) >> 63) {
                      return;
                    }
                    goto LABEL_27;
                  }
LABEL_26:
                  __break(1u);
LABEL_27:
                  __break(1u);
                  goto LABEL_28;
                }
LABEL_25:
                __break(1u);
                goto LABEL_26;
              }
LABEL_24:
              __break(1u);
              goto LABEL_25;
            }
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_22;
    }
  }
}

uint64_t sub_100101EC0()
{
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  void (*v20)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t (*v21)(char *, uint64_t);
  void v22[3];
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29[10];
  uint64_t v30[10];
  uint64_t v31[9];
  uint64_t v32;
  uint64_t v33[9];
  uint64_t v34;
  uint64_t v35[10];
  uint64_t v36[10];
  uint64_t v37[8];
  char v38;
  uint64_t v39[9];
  uint64_t v40;
  uint64_t v41[7];

  id v1 = (void *)(swift_isaMask & *v0);
  uint64_t v2 = v1[10];
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin();
  uint64_t v6 = (char *)v22 - v5;
  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = (char *)v0 + v1[12];
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  long long v25 = result;
  v8(v6, v7, v2);
  uint64_t v9 = v1[11];
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v2, v9);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t result = v27(v6, v2);
  if (v10 <= v25)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8(v6, v7, v2);
  uint64_t v24 = v8;
  id v28 = v7;
  v22[1] = v3 + 16;
  id v26 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v9 + 24);
  v26(v29, v2, v9);
  double v11 = (void (*)(char *, uint64_t))v27;
  v27(v6, v2);
  uint64_t v12 = v7;
  double v13 = v24;
  v24(v6, v12, v2);
  double v14 = v26;
  v26(v30, v2, v9);
  v11(v6, v2);
  v13(v6, v28, v2);
  v14(v31, v2, v9);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v11)(v6, v2);
  if (!v32)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[0] = v32;
  CGFloat v15 = v24;
  v24(v6, v28, v2);
  long long v22[2] = v9 + 24;
  v14(v33, v2, v9);
  double v16 = (void (*)(char *, uint64_t))v27;
  uint64_t result = v27(v6, v2);
  if (!v34)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  CGFloat v17 = v9;
  uint64_t v23 = v25 % v34;
  v22[0] = v25 / v22[0];
  if (v22[0] >= 1)
  {
    v15(v6, v28, v2);
    v26(v35, v2, v9);
    v16(v6, v2);
  }
  double v18 = v15;
  CGFloat v19 = v28;
  if (v23)
  {
    v18(v6, v28, v2);
    v26(v36, v2, v17);
    v27(v6, v2);
    CGFloat v19 = v28;
  }
  v18(v6, v19, v2);
  v26(v37, v2, v17);
  uint64_t result = v27(v6, v2);
  if (v38)
  {
    v18(v6, v19, v2);
    double v20 = v26;
    v26(v39, v2, v17);
    CGFloat v21 = v27;
    uint64_t result = v27(v6, v2);
    if (v40)
    {
      if ((v25 + 1) % v40)
      {
        v18(v6, v28, v2);
        v20(v41, v2, v17);
        return v21(v6, v2);
      }
      return result;
    }
LABEL_18:
    __break(1u);
  }
  return result;
}

void sub_100102424()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void *)((swift_isaMask & *v0) + 0x50);
  id v65 = *(char **)(v2 - 8);
  __chkstk_darwin(ObjectType);
  uint64_t v62 = (char *)&v48 - v3;
  uint64_t v5 = *(void *)(v4 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v50 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  *(void *)&double v6 = __chkstk_darwin(AssociatedTypeWitness).n128_u64[0];
  id v66 = (char *)&v48 - v7;
  v70.receiver = v0;
  v70.super_class = ObjectType;
  [super layoutSubviews:v6];
  sub_100100FBC((uint64_t)v8);
  [v0 contentOffset];
  sub_10010198C(1, v9);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  double v14 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0xB8);
  swift_beginAccess();
  uint64_t v63 = v2;
  uint64_t v64 = v5;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  uint64_t v57 = v15;
  _NativeDictionary.makeIterator()();
  uint64_t v16 = v71;
  uint64_t v17 = v72;
  uint64_t v18 = v74;
  unint64_t v19 = v75;
  uint64_t v67 = *(void *)((swift_isaMask & *v0) + 0xA0);
  int64_t v20 = (unint64_t)(v73 + 64) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_20;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v23 >= v20) {
      break;
    }
    unint64_t v24 = *(void *)(v17 + 8 * v23);
    uint64_t v25 = v18 + 1;
    if (v24) {
      goto LABEL_19;
    }
    uint64_t v25 = v18 + 2;
    if (v18 + 2 >= v20) {
      break;
    }
    unint64_t v24 = *(void *)(v17 + 8 * v25);
    if (v24) {
      goto LABEL_19;
    }
    uint64_t v25 = v18 + 3;
    if (v18 + 3 >= v20) {
      break;
    }
    unint64_t v24 = *(void *)(v17 + 8 * v25);
    if (v24) {
      goto LABEL_19;
    }
    uint64_t v25 = v18 + 4;
    if (v18 + 4 >= v20) {
      break;
    }
    unint64_t v24 = *(void *)(v17 + 8 * v25);
    if (v24) {
      goto LABEL_19;
    }
    uint64_t v25 = v18 + 5;
    if (v18 + 5 >= v20) {
      break;
    }
    unint64_t v24 = *(void *)(v17 + 8 * v25);
    if (!v24)
    {
      uint64_t v26 = v18 + 6;
      do
      {
        if (v20 == v26) {
          goto LABEL_28;
        }
        unint64_t v24 = *(void *)(v17 + 8 * v26++);
      }
      while (!v24);
      uint64_t v25 = v26 - 1;
    }
LABEL_19:
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    uint64_t v18 = v25;
LABEL_20:
    uint64_t v27 = *(void *)(*(void *)(v16 + 48) + 8 * v22);
    if (*((unsigned char *)v0 + v67) == 1 || v27 < v11 || v27 >= v13) {
      sub_100102B58(v27);
    }
  }
LABEL_28:
  swift_release();
  if (v11 == v13)
  {
LABEL_29:
    *((unsigned char *)v0 + v67) = 0;
    return;
  }
  if (v13 < v11) {
    goto LABEL_45;
  }
  uint64_t v30 = *(void *)((swift_isaMask & *v0) + 0xC0);
  uint64_t v31 = *(void *)((swift_isaMask & *v0) + 0xC8);
  if (v11 < v13)
  {
    uint64_t v60 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x60);
    uint64_t v61 = (char *)v0 + v30;
    Swift::String v56 = (char *)v0 + v31;
    id v59 = v65 + 16;
    uint64_t v52 = v64 + 40;
    id v58 = (void (**)(char *, uint64_t))(v65 + 8);
    uint64_t v51 = v64 + 56;
    uint64_t v48 = v64 + 72;
    ++v50;
    double v54 = v14;
    uint64_t v53 = v13;
    id v49 = v0;
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v65 + 16);
    uint64_t v33 = v64;
    while (2)
    {
      swift_beginAccess();
      uint64_t v68 = v11;
      Dictionary.subscript.getter();
      id v35 = v69;
      swift_endAccess();

      if (v35) {
        goto LABEL_35;
      }
      id v65 = (char *)sub_100103030(v11);
      id v36 = *v32;
      uint64_t v37 = v62;
      uint64_t v38 = v63;
      double v39 = v60;
      (*v32)(v62, v60, v63);
      id v40 = v66;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40))(v11, v38, v33);
      uint64_t v41 = *v58;
      (*v58)(v37, v38);
      v36(v37, v39, v38);
      id v42 = v40;
      long long v43 = v65;
      (*(void (**)(char *, uint64_t, char *, uint64_t, uint64_t))(v33 + 56))(v42, v11, v65, v38, v33);
      v41(v37, v38);
      if ((v61[8] & 1) == 0 && v11 == *(void *)v61)
      {
        id v44 = v62;
        uint64_t v45 = v63;
        v36(v62, v60, v63);
        id v46 = *(void (**)(uint64_t, char *, char *, uint64_t))(v64 + 72);
        uint64_t v47 = 1;
        goto LABEL_43;
      }
      if ((v56[8] & 1) != 0 || v11 != *(void *)v56)
      {

        CGRect v34 = v66;
      }
      else
      {
        id v44 = v62;
        uint64_t v45 = v63;
        v36(v62, v60, v63);
        id v46 = *(void (**)(uint64_t, char *, char *, uint64_t))(v64 + 72);
        uint64_t v47 = 2;
LABEL_43:
        CGRect v34 = v66;
        v46(v47, v43, v66, v45);

        v41(v44, v45);
      }
      uint64_t v13 = v53;
      uint64_t v0 = v49;
      (*v50)(v34, AssociatedTypeWitness);
LABEL_35:
      if (v13 == ++v11) {
        goto LABEL_29;
      }
      continue;
    }
  }
LABEL_46:
  __break(1u);
}

void sub_100102B58(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)((swift_isaMask & *(void *)v1) + 0x58);
  uint64_t v5 = *(void *)((swift_isaMask & *(void *)v1) + 0x50);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  id v28 = (char *)v26 - v7;
  uint64_t v8 = *(void *)(v5 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v30 = (char *)v26 - v13;
  uint64_t v31 = a1;
  uint64_t v32 = a1;
  swift_beginAccess();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  type metadata accessor for Dictionary();
  Dictionary.removeValue(forKey:)();
  swift_endAccess();
  uint64_t v15 = v33;
  if (v33)
  {
    uint64_t v16 = &v1[*(void *)((swift_isaMask & *(void *)v1) + 0xC0)];
    if ((v16[8] & 1) == 0 && *(void *)v16 == v31
      || (uint64_t v17 = &v1[*(void *)((swift_isaMask & *(void *)v1) + 0xC8)], (v17[8] & 1) == 0) && *(void *)v17 == v31)
    {
      uint64_t v18 = &v1[*(void *)((swift_isaMask & *(void *)v1) + 0x60)];
      uint64_t v27 = v8;
      unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v26[0] = AssociatedTypeWitness;
      int64_t v20 = v30;
      v19(v30, v18, v5);
      v19(v11, v18, v5);
      unint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
      v26[1] = v14;
      unint64_t v22 = v28;
      v21(v31, v5, v4);
      int64_t v23 = *(void (**)(char *, uint64_t))(v27 + 8);
      v23(v11, v5);
      (*(void (**)(void, void *, char *, uint64_t, uint64_t))(v4 + 72))(0, v15, v22, v5, v4);
      (*(void (**)(char *, void))(v29 + 8))(v22, v26[0]);
      v23(v20, v5);
      uint64_t v8 = v27;
    }
    uint64_t v33 = v15;
    swift_beginAccess();
    type metadata accessor for ViewRecycler();
    swift_getWitnessTable();
    type metadata accessor for ReusePool();
    char v24 = ReusePool.recycle(_:)();
    swift_endAccess();
    if (v24)
    {
      uint64_t v25 = v30;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v30, &v2[*(void *)((swift_isaMask & *(void *)v2) + 0x60)], v5);
      (*(void (**)(void *, uint64_t, uint64_t))(v4 + 64))(v15, v5, v4);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v25, v5);
    }
    else
    {
    }
  }
}

id sub_100103030(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_isaMask & *(void *)v1;
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)v19 - v7;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v4 + 88);
  swift_getAssociatedTypeWitness();
  type metadata accessor for ViewRecycler();
  swift_getWitnessTable();
  type metadata accessor for ReusePool();
  ReusePool.dequeue()();
  swift_endAccess();
  uint64_t v10 = v21;
  if (!v21)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v2[*(void *)((swift_isaMask & *(void *)v2) + 0x60)], v5);
    uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v5, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    [v2 addSubview:v10];
  }
  id v11 = v10;
  sub_100101EC0();
  [v11 setFrame:];

  [v11 setAutoresizingMask:0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:1];
  id v12 = v11;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v20.receiver = v2;
  v20.super_class = ObjectType;
  objc_msgSend(v12, "setSemanticContentAttribute:", objc_msgSendSuper2(&v20, "semanticContentAttribute"));

  id v14 = v12;
  BOOL v15 = [v14 effectiveUserInterfaceLayoutDirection] == (id)1;
  id v16 = [v14 layer];
  [v16 setFlipsHorizontalAxis:v15];

  id v21 = v14;
  v19[1] = a1;
  swift_beginAccess();
  type metadata accessor for Dictionary();
  id v17 = v14;
  Dictionary.subscript.setter();
  swift_endAccess();
  return v17;
}

void sub_1001033B4(void *a1)
{
  id v1 = a1;
  sub_100102424();
}

uint64_t sub_1001033FC(uint64_t a1, CGFloat a2, CGFloat a3)
{
  void (*v16)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t);
  double v20;
  double v21;
  CGFloat v22;
  CGFloat v23;
  uint64_t result;
  double v25;
  char *v26;
  uint64_t v27;
  void (*v28)(void *__return_ptr, uint64_t, uint64_t);
  void (*v29)(char *, uint64_t);
  double v30;
  uint64_t v31;
  char *v32;
  void (*v33)(void *__return_ptr, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t);
  char *v35;
  void (*v36)(void *__return_ptr, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  void v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t (*v44)(char *, uint64_t);
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  void v47[10];
  void v48[10];
  void v49[10];
  void v50[10];
  uint64_t v51[9];
  uint64_t v52;
  CGPoint v53;
  CGRect v54;

  uint64_t v4 = v3;
  uint64_t v7 = swift_isaMask & *v3;
  uint64_t v8 = *(void *)(v7 + 0x50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(a1);
  id v11 = (char *)v39 - v10;
  sub_100100FBC(v12);
  uint64_t v14 = v9 + 16;
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v45 = (char *)v3 + *(void *)((swift_isaMask & *v3) + 0x60);
  id v46 = v13;
  ((void (*)(char *))v13)(v11);
  uint64_t v15 = *(void *)(v7 + 88);
  id v16 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 24);
  v16(v47, v8, v15);
  unint64_t v19 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v18 = v9 + 8;
  id v17 = v19;
  v19(v11, v8);
  objc_super v20 = *(double *)v47;
  id v21 = *(double *)&v47[1];
  [v4 contentSize];
  v54.size.double width = v22;
  v54.size.double height = v23;
  v54.origin.CGFloat x = v21;
  v54.origin.CGFloat y = v20;
  v53.CGFloat x = a2;
  v53.CGFloat y = a3;
  if (!CGRectContainsPoint(v54, v53)) {
    return 0;
  }
  v46(v11, v45, v8);
  long long v43 = v16;
  id v44 = v17;
  v16(v48, v8, v15);
  id v42 = v18;
  uint64_t result = v44(v11, v8);
  uint64_t v25 = floor((a2 - v21) / (*(double *)&v48[4] + *(double *)&v48[6]));
  if ((~*(void *)&v25 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v25 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v26 = v11;
  uint64_t v27 = (uint64_t)v25;
  if ((uint64_t)v25 < 0 || sub_100100DB0() <= v27) {
    return 0;
  }
  uint64_t v41 = v27;
  v46(v26, v45, v8);
  id v28 = v43;
  v43(v49, v8, v15);
  uint64_t v29 = (void (*)(char *, uint64_t))v44;
  uint64_t result = v44(v26, v8);
  uint64_t v30 = floor((a3 - v20) / (*(double *)&v49[5] + *(double *)&v49[7]));
  if ((~*(void *)&v30 & 0x7FF0000000000000) == 0) {
    goto LABEL_19;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v31 = (uint64_t)v30;
  if ((uint64_t)v30 < 0) {
    return 0;
  }
  uint64_t v32 = v26;
  uint64_t v33 = v28;
  CGRect v34 = v29;
  id v35 = v26;
  id v36 = v33;
  uint64_t v37 = v45;
  v39[1] = v14;
  v46(v32, v45, v8);
  id v40 = v15;
  v36(v50, v8, v15);
  v34(v35, v8);
  if (v50[9] <= v31) {
    return 0;
  }
  v46(v35, v37, v8);
  v43(v51, v8, v40);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v35, v8);
  uint64_t v38 = v41 * v52;
  if ((unsigned __int128)(v41 * (__int128)v52) >> 64 != (v41 * v52) >> 63)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t result = v38 + v31;
  if (__OFADD__(v38, v31)) {
LABEL_23:
  }
    __break(1u);
  return result;
}

int64_t *sub_10010383C()
{
  [v0 contentOffset];
  sub_10010198C(0, v1);

  return sub_100616D64(v2, v3);
}

void sub_100103878()
{
  double v1 = v0;
  uint64_t v2 = (void *)(swift_isaMask & *v0);
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = *(void *)(v4 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = __chkstk_darwin(v12);
  id v17 = (char *)&v27 - v14;
  uint64_t v18 = (char *)v1 + v2[24];
  if ((v18[8] & 1) == 0)
  {
    uint64_t v19 = *(void *)v18;
    if ((*(void *)v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v32 = v15;
      uint64_t v33 = v13;
      objc_super v20 = (char *)v1 + v2[12];
      uint64_t v29 = *(void (**)(char *, __n128))(v8 + 16);
      uint64_t v30 = v20;
      v29((char *)&v27 - v14, v16);
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v4, v3);
      uint64_t v31 = *(void (**)(char *, uint64_t))(v8 + 8);
      v31(v17, v4);
      if (v19 < v21)
      {
        swift_beginAccess();
        uint64_t v34 = v19;
        swift_getAssociatedTypeWitness();
        Dictionary.subscript.getter();
        unint64_t v22 = v35;
        if (v35)
        {
          swift_endAccess();
          int64_t v23 = v30;
          uint64_t v28 = v19;
          char v24 = v7;
          uint64_t v25 = (void (*)(char *, char *, uint64_t))v29;
          ((void (*)(char *, char *, uint64_t))v29)(v17, v30, v4);
          v25(v11, v23, v4);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v28, v4, v3);
          uint64_t v26 = v31;
          v31(v11, v4);
          (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v3 + 72))(1, v22, v24, v4, v3);

          (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v33);
          v26(v17, v4);
        }
        else
        {
          swift_endAccess();
        }
        return;
      }
    }
    __break(1u);
  }
}

void sub_100103C5C(uint64_t a1, char a2)
{
  sub_100104FA0();
  uint64_t v5 = (char *)v2 + *(void *)((swift_isaMask & *v2) + 0xC0);
  *(void *)uint64_t v5 = a1;
  v5[8] = a2 & 1;

  sub_100103878();
}

void sub_100103CD0()
{
  double v1 = v0;
  uint64_t v2 = (void *)(swift_isaMask & *v0);
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = *(void *)(v4 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = __chkstk_darwin(v12);
  id v17 = (char *)&v27 - v14;
  uint64_t v18 = (char *)v1 + v2[25];
  if ((v18[8] & 1) == 0)
  {
    uint64_t v19 = *(void *)v18;
    if ((*(void *)v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v32 = v15;
      uint64_t v33 = v13;
      objc_super v20 = (char *)v1 + v2[12];
      uint64_t v29 = *(void (**)(char *, __n128))(v8 + 16);
      uint64_t v30 = v20;
      v29((char *)&v27 - v14, v16);
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v4, v3);
      uint64_t v31 = *(void (**)(char *, uint64_t))(v8 + 8);
      v31(v17, v4);
      if (v19 < v21)
      {
        swift_beginAccess();
        uint64_t v34 = v19;
        swift_getAssociatedTypeWitness();
        Dictionary.subscript.getter();
        unint64_t v22 = v35;
        if (v35)
        {
          swift_endAccess();
          int64_t v23 = v30;
          uint64_t v28 = v19;
          char v24 = v7;
          uint64_t v25 = (void (*)(char *, char *, uint64_t))v29;
          ((void (*)(char *, char *, uint64_t))v29)(v17, v30, v4);
          v25(v11, v23, v4);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v28, v4, v3);
          uint64_t v26 = v31;
          v31(v11, v4);
          (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v3 + 72))(2, v22, v24, v4, v3);

          (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v33);
          v26(v17, v4);
        }
        else
        {
          swift_endAccess();
        }
        return;
      }
    }
    __break(1u);
  }
}

void sub_1001040B4(uint64_t a1, char a2)
{
  sub_10010530C();
  uint64_t v5 = (char *)v2 + *(void *)((swift_isaMask & *v2) + 0xC8);
  *(void *)uint64_t v5 = a1;
  v5[8] = a2 & 1;

  sub_100103CD0();
}

void sub_100104128(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)((swift_isaMask & *v2) + 0xD0);
  uint64_t v7 = *(void **)((char *)v2 + v6);
  if (!v7
    || [v7 phase] == (id)3
    || (uint64_t v8 = *(void **)((char *)v2 + v6)) != 0 && [v8 phase] == (id)4)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_10069378C(v9);
    swift_bridgeObjectRelease();
    if (v10)
    {
      [v10 locationInView:v2];
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      id v15 = [v2 hitTest:a2];
      if (v15
        && (sub_100084CF0(0, (unint64_t *)&qword_1009828E0),
            __n128 v16 = v2,
            id v17 = v15,
            char v18 = static NSObject.== infix(_:_:)(),
            v17,
            v16,
            (v18 & 1) != 0)
        || (unint64_t v19 = sub_10010576C(v15), (v19 & 1) == 0))
      {
        sub_100104FA0();
        unint64_t v22 = (char *)v3 + *(void *)((swift_isaMask & *v3) + 0xC0);
        *(void *)unint64_t v22 = 0;
        v22[8] = 1;
        sub_100103878();
      }
      else
      {
        uint64_t v20 = sub_1001033FC(v19, v12, v14);
        sub_100103C5C(v20, v21 & 1);
      }

      int64_t v23 = *(void **)((char *)v3 + v6);
      *(void *)((char *)v3 + v6) = v10;
    }
  }
  sub_100104770(v3, a1, a2, (SEL *)&selRef_touchesBegan_withEvent_);
}

uint64_t sub_100104330(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100104860(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_100104128);
}

void sub_100104348(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)(swift_isaMask & *(void *)v2);
  uint64_t v7 = v6[10];
  uint64_t v33 = *(void *)(v7 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = v6[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  CGFloat v14 = (char *)&v29 - v13;
  uint64_t v15 = v6[26];
  __n128 v16 = *(void **)&v3[v15];
  if (v16)
  {
    uint64_t v32 = v12;
    uint64_t v34 = a2;
    id v17 = v16;
    if (sub_1002F99D4(v17, a1))
    {
      char v18 = *(void **)&v3[v15];
      *(void *)&v3[v15] = 0;

      unint64_t v19 = &v3[*(void *)((swift_isaMask & *(void *)v3) + 0xC0)];
      if (v19[8] & 1) != 0 || (uint64_t v31 = *(void *)v19, ([v3 isDragging]))
      {
        sub_100104FA0();
        uint64_t v20 = &v3[*(void *)((swift_isaMask & *(void *)v3) + 0xC0)];
        *(void *)uint64_t v20 = 0;
        v20[8] = 1;
        sub_100103878();
        sub_10010530C();
        char v21 = &v3[*(void *)((swift_isaMask & *(void *)v3) + 0xC8)];
        *(void *)char v21 = 0;
        v21[8] = 1;
        sub_100103CD0();
      }
      else
      {
        sub_100104FA0();
        unint64_t v22 = &v3[*(void *)((swift_isaMask & *(void *)v3) + 0xC0)];
        *(void *)unint64_t v22 = 0;
        v22[8] = 1;
        sub_100103878();
        sub_10010530C();
        int64_t v23 = &v3[*(void *)((swift_isaMask & *(void *)v3) + 0xC8)];
        *(void *)int64_t v23 = v31;
        v23[8] = 0;
        sub_100103CD0();
        uint64_t v24 = swift_isaMask & *(void *)v3;
        uint64_t v25 = (uint64_t *)&v3[*(void *)(v24 + 0x68)];
        uint64_t v30 = (uint64_t (*)(char *, uint64_t))*v25;
        if (v30)
        {
          uint64_t v29 = v25[1];
          uint64_t v26 = v33;
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v9, &v3[*(void *)(v24 + 96)], v7);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v31, v7, v10);
          uint64_t v27 = v30;
          sub_100060050((uint64_t)v30);
          (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
          char v28 = v27(v14, v31);
          (*(void (**)(char *, uint64_t))(v32 + 8))(v14, AssociatedTypeWitness);
          if (v28) {
            sub_1001056D0();
          }

          sub_10006012C((uint64_t)v27);
          goto LABEL_7;
        }
      }
    }

LABEL_7:
    a2 = v34;
  }
  sub_100104770(v3, a1, a2, (SEL *)&selRef_touchesEnded_withEvent_);
}

void sub_100104770(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  sub_100084CF0(0, (unint64_t *)&qword_100990050);
  sub_100105B50();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for HorizontalShelfView();
  [super isa:a3];
}

uint64_t sub_100104848(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100104860(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_100104348);
}

uint64_t sub_100104860(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  sub_100084CF0(0, (unint64_t *)&qword_100990050);
  sub_100105B50();
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a4;
  id v10 = a1;
  a5(v8, a4);

  return swift_bridgeObjectRelease();
}

void sub_100104910(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)((swift_isaMask & *v2) + 0xD0);
  uint64_t v6 = *(void **)((char *)v2 + v5);
  *(void *)((char *)v2 + v5) = 0;

  sub_100104FA0();
  uint64_t v7 = (char *)v2 + *(void *)((swift_isaMask & *v2) + 0xC0);
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  sub_100103878();
  sub_10010530C();
  uint64_t v8 = (char *)v2 + *(void *)((swift_isaMask & *v2) + 0xC8);
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  sub_100103CD0();
  sub_100104770(v2, a1, a2, (SEL *)&selRef_touchesCancelled_withEvent_);
}

uint64_t sub_1001049F0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100104860(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_100104910);
}

void sub_100104A08()
{
}

uint64_t type metadata accessor for HorizontalShelfView()
{
  return sub_10001421C();
}

uint64_t sub_100104A64()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100104AB0()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SnapToColumnScrollObserver()
{
  return sub_10001421C();
}

__n128 initializeWithTake for OnboardingTrayLayout.Item(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HorizontalShelfLayout(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HorizontalShelfLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HorizontalShelfLayout()
{
  return &type metadata for HorizontalShelfLayout;
}

void sub_100104BD8(UIScrollView in)
{
}

void sub_100104C04(double a1, double a2, uint64_t a3, double *a4)
{
}

void sub_100104C0C()
{
  double v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  swift_getAssociatedTypeWitness();
  uint64_t v3 = type metadata accessor for ViewRecycler();
  __chkstk_darwin(v3);
  BOOL v4 = (void *)((char *)v1 + *(void *)(v2 + 104));
  *BOOL v4 = 0;
  v4[1] = 0;
  *(void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x70)) = 1;
  *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0x78)) = 0;
  uint64_t v5 = *(void *)((swift_isaMask & *v1) + 0x80);
  id v6 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver());
  *(void *)((char *)v1 + v5) = CompoundScrollObserver.init(children:)();
  uint64_t v7 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x88));
  *uint64_t v7 = 0;
  v7[1] = 0;
  *(void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x90)) = 0;
  *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0x98)) = 0;
  *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0xA0)) = 0;
  uint64_t v8 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0xA8);
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  ViewRecycler.init()();
  swift_getWitnessTable();
  ReusePool.init(recycler:limit:)();
  uint64_t v9 = *(void *)((swift_isaMask & *v1) + 0xB8);
  swift_getTupleTypeMetadata2();
  static Array._allocateUninitialized(_:)();
  *(void *)((char *)v1 + v9) = Dictionary.init(dictionaryLiteral:)();
  id v10 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0xC0);
  *(void *)id v10 = 0;
  v10[8] = 1;
  double v11 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0xC8);
  *(void *)double v11 = 0;
  v11[8] = 1;
  *(void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xD0)) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100104FA0()
{
  double v1 = (void *)(swift_isaMask & *v0);
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  id v6 = (char *)&v21 - v5;
  uint64_t v7 = *(void *)(v3 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  CGFloat v14 = (char *)&v21 - v13;
  uint64_t v15 = (char *)v0 + v1[24];
  if ((v15[8] & 1) == 0)
  {
    uint64_t v23 = v12;
    uint64_t v16 = *(void *)v15;
    swift_beginAccess();
    uint64_t v24 = v16;
    swift_getAssociatedTypeWitness();
    Dictionary.subscript.getter();
    id v17 = v25;
    if (v25)
    {
      swift_endAccess();
      char v18 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x60);
      uint64_t v21 = v16;
      uint64_t v22 = AssociatedTypeWitness;
      unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v19(v14, v18, v3);
      v19(v10, v18, v3);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 40))(v21, v3, v2);
      uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
      v20(v10, v3);
      (*(void (**)(void, void *, char *, uint64_t, uint64_t))(v2 + 72))(0, v17, v6, v3, v2);

      (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v22);
      v20(v14, v3);
    }
    else
    {
      swift_endAccess();
    }
  }
}

void sub_10010530C()
{
  double v1 = (void *)(swift_isaMask & *v0);
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  id v6 = &v24[-v5];
  uint64_t v7 = *(void *)(v3 - 8);
  __chkstk_darwin(v8);
  id v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  CGFloat v14 = &v24[-v13];
  uint64_t v15 = (char *)v0 + v1[25];
  if ((v15[8] & 1) == 0)
  {
    uint64_t v28 = v12;
    uint64_t v16 = *(void *)v15;
    swift_beginAccess();
    uint64_t v29 = v16;
    swift_getAssociatedTypeWitness();
    Dictionary.subscript.getter();
    id v17 = v30;
    if (v30)
    {
      swift_endAccess();
      uint64_t v18 = swift_isaMask & *v0;
      unint64_t v19 = (char *)v0 + *(void *)(v18 + 0xC0);
      char v20 = v19[8];
      uint64_t v26 = v16;
      uint64_t v27 = AssociatedTypeWitness;
      BOOL v25 = (v20 & 1) == 0 && v16 == *(void *)v19;
      uint64_t v21 = (char *)v0 + *(void *)(v18 + 96);
      uint64_t v22 = *(void (**)(unsigned char *, char *, uint64_t))(v7 + 16);
      v22(v14, v21, v3);
      v22(v10, v21, v3);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 40))(v26, v3, v2);
      uint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
      v23(v10, v3);
      (*(void (**)(BOOL, void *, unsigned char *, uint64_t, uint64_t))(v2 + 72))(v25, v17, v6, v3, v2);

      (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v6, v27);
      v23(v14, v3);
    }
    else
    {
      swift_endAccess();
    }
  }
}

void sub_1001056D0()
{
  sub_100104FA0();
  double v1 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0xC0);
  *(void *)double v1 = 0;
  v1[8] = 1;
  sub_100103878();
  sub_10010530C();
  uint64_t v2 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0xC8);
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;

  sub_100103CD0();
}

unint64_t sub_10010576C(void *a1)
{
  if (!a1) {
    return 0;
  }
  swift_getAssociatedTypeWitness();
  id v2 = a1;
  while (1)
  {
    uint64_t v4 = swift_dynamicCastUnknownClass();
    unint64_t v3 = v4 != 0;
    if (v4) {
      break;
    }
    type metadata accessor for HorizontalShelfView();
    if (swift_dynamicCastClass()) {
      break;
    }
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      if ([v5 isTracking]) {
        break;
      }
    }
    unint64_t v3 = (unint64_t)[v2 superview];

    id v2 = (id)v3;
    if (!v3) {
      return v3;
    }
  }

  return v3;
}

void sub_100105878()
{
}

void sub_1001058A8(double *a1, double a2, double a3)
{
  uint64_t v4 = v3;
  double v8 = *v3;
  uint64_t v9 = *(void *)(*(void *)v3 + 80);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(a1);
  uint64_t v12 = (char *)v36 - v11;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  CGFloat v14 = sub_10010383C();

  int64_t v15 = v14[2];
  swift_bridgeObjectRelease();
  if (v15)
  {
    long double v16 = *a1;
    id v17 = (void *)swift_unknownObjectUnownedLoadStrong();
    [v17 bounds];
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    CGFloat v23 = v22;
    CGFloat v25 = v24;

    v39.origin.CGFloat x = v19;
    v39.origin.CGFloat y = v21;
    v39.size.double width = v23;
    v39.size.double height = v25;
    double Width = CGRectGetWidth(v39);
    if (v16 > 0.0)
    {
      double v27 = Width;
      uint64_t v28 = (void *)swift_unknownObjectUnownedLoadStrong();
      [v28 contentSize];
      double v30 = v29;

      if (v16 < v30 - v27)
      {
        uint64_t v31 = (char *)swift_unknownObjectUnownedLoadStrong();
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, &v31[*(void *)((swift_isaMask & *(void *)v31) + 0x60)], v9);
        (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)&v8 + 88) + 24))(v36, v9);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

        double v32 = v37 + v38;
        double v33 = a2;
        if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
          double v33 = v4[3];
        }
        double v34 = fmod(v16, v37 + v38);
        if (v33 >= 0.0) {
          double v35 = v32 - v34 + *a1;
        }
        else {
          double v35 = *a1 - v34;
        }
        *a1 = v35;
        _OWORD v4[3] = a2;
        void v4[4] = a3;
      }
    }
  }
}

unint64_t sub_100105B50()
{
  unint64_t result = qword_1009A2510;
  if (!qword_1009A2510)
  {
    sub_100084CF0(255, (unint64_t *)&qword_100990050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009A2510);
  }
  return result;
}

uint64_t sub_100105BB8()
{
  return swift_initClassMetadata2();
}

void sub_100105C40(uint64_t a1)
{
  id v3 = [v1 collectionView];
  sub_1005BDF84(a1, v3);

  sub_100106B70();
}

void sub_100105CF4()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + qword_100984440))
  {
    swift_retain();
    Date.init()();
    PageRefreshGate.appWillForeground(on:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_100105DDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StoreViewControllerLifecycleEvent();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v0 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_lifecycleObserver;
  swift_beginAccess();
  sub_1000DD5EC(v10, (uint64_t)v14);
  if (v15)
  {
    sub_100082C6C((uint64_t)v14, (uint64_t)v13);
    sub_100082BCC((uint64_t)v14, (uint64_t *)&unk_100982B20);
    sub_100081D90(v13, v13[3]);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for StoreViewControllerLifecycleEvent.appExitedWhileAppeared(_:), v6);
    dispatch thunk of StoreViewControllerLifecycleObserver.observe(lifecycleEvent:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t result = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v13);
  }
  else
  {
    uint64_t result = sub_100082BCC((uint64_t)v14, (uint64_t *)&unk_100982B20);
  }
  if (*(void *)(v1 + qword_100984440))
  {
    swift_retain();
    Date.init()();
    PageRefreshGate.appWillBackground(on:)();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_100106030()
{
  return *(unsigned __int8 *)(v0 + qword_100984428);
}

uint64_t sub_100106040(uint64_t a1)
{
  *(void *)(v1 + qword_100984440) = a1;
  return swift_release();
}

uint64_t sub_100106058(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  double v27 = a3;
  uint64_t v7 = type metadata accessor for Shelf.ContentType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - v12;
  Shelf.contentType.getter();
  uint64_t v14 = sub_100600290();
  if (v14)
  {
    uint64_t v16 = v14;
    uint64_t v26 = v15;
    if (dispatch thunk of ShelfPresenter.doesShelfExist(for:)()) {
      uint64_t v17 = sub_1005BE480(a2);
    }
    else {
      uint64_t v17 = 0;
    }
    char v18 = Shelf.isHorizontal.getter();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    int v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
    if (v19 != enum case for Shelf.ContentType.smallLockup(_:)
      && v19 != enum case for Shelf.ContentType.mediumLockup(_:))
    {
      if (v19 == enum case for Shelf.ContentType.largeLockup(_:))
      {
LABEL_20:
        char v23 = 1;
        goto LABEL_21;
      }
      if (v19 != enum case for Shelf.ContentType.inAppPurchaseLockup(_:)
        && v19 != enum case for Shelf.ContentType.inAppPurchaseTiledLockup(_:)
        && v19 != enum case for Shelf.ContentType.action(_:))
      {
        if (v19 == enum case for Shelf.ContentType.ribbonBar(_:)) {
          goto LABEL_20;
        }
        if (v19 != enum case for Shelf.ContentType.editorialCard(_:)
          && v19 != enum case for Shelf.ContentType.videoCard(_:))
        {
          char v23 = 1;
          if (v19 == enum case for Shelf.ContentType.brick(_:)
            || v19 == enum case for Shelf.ContentType.categoryBrick(_:))
          {
            goto LABEL_21;
          }
          if (v19 != enum case for Shelf.ContentType.reviews(_:)
            && v19 != enum case for Shelf.ContentType.appTrailerLockup(_:)
            && v19 != enum case for Shelf.ContentType.framedVideo(_:)
            && v19 != enum case for Shelf.ContentType.screenshotsLockup(_:)
            && v19 != enum case for Shelf.ContentType.largeHeroBreakout(_:)
            && v19 != enum case for Shelf.ContentType.smallBreakout(_:))
          {
            if (v19 == enum case for Shelf.ContentType.editorialStoryCard(_:)) {
              goto LABEL_20;
            }
            if (v19 != enum case for Shelf.ContentType.mixedMediaLockup(_:)
              && v19 != enum case for Shelf.ContentType.gameCenterActivityFeedCard(_:)
              && v19 != enum case for Shelf.ContentType.largeGameCenterPlayer(_:)
              && v19 != enum case for Shelf.ContentType.posterLockup(_:)
              && v19 != enum case for Shelf.ContentType.smallContactCard(_:))
            {
              if (v19 != enum case for Shelf.ContentType.informationRibbon(_:))
              {
                char v23 = v18;
                if (v19 != enum case for Shelf.ContentType.appPromotion(_:))
                {
                  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
                  char v23 = 0;
                }
                goto LABEL_21;
              }
              goto LABEL_20;
            }
          }
        }
      }
    }
    char v23 = v18;
LABEL_21:
    uint64_t v24 = v23 & 1;
    sub_1005AEAD8((uint64_t)v13, v23 & 1, v17, v4, v27);
    (*(void (**)(uint64_t, uint64_t, char *, void, uint64_t))(v26 + 24))(a1, v24, v4, *(void *)&v4[OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_artworkLoader], v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

unint64_t sub_1001064C0()
{
  uint64_t v1 = swift_isaMask & *v0;
  uint64_t v2 = type metadata accessor for ShelfBackground();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (id *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (id *)((char *)&v33 - v8);
  unint64_t v34 = (unint64_t)_swiftEmptyArrayStorage;
  double v10 = (*(double (**)(__n128))(v1 + 1280))(v7);
  id v11 = sub_1000CC750(v10);
  if (v11)
  {
    id v12 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  id v13 = sub_1005B0070(v0);
  if (v13)
  {
    id v14 = v13;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (dispatch thunk of ShelfPresenter.sectionCount.getter() < 1) {
    goto LABEL_14;
  }
  dispatch thunk of ShelfPresenter.background(for:)();
  if ((*(unsigned int (**)(id *, uint64_t))(v3 + 88))(v9, v2) != enum case for ShelfBackground.color(_:))
  {
    (*(void (**)(id *, uint64_t))(v3 + 8))(v9, v2);
    goto LABEL_14;
  }
  (*(void (**)(id *, uint64_t))(v3 + 96))(v9, v2);

  uint64_t v15 = (char *)v9 + *(int *)(sub_100082C28(&qword_100984570) + 48);
  uint64_t v16 = type metadata accessor for ShelfBackgroundStyle();
  (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = self;
  id v18 = [v17 fractionalWidthDimension:1.0];
  id v19 = [v17 absoluteDimension:2000.0];
  id v20 = [self sizeWithWidthDimension:v18 heightDimension:v19];

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [self boundarySupplementaryItemWithLayoutSize:v20 elementKind:v21 alignment:1 absoluteOffset:0.0 -2000.0];

  [v22 setExtendsBoundary:0];
  uint64_t v9 = (id *)v22;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_23;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

LABEL_14:
    if (dispatch thunk of ShelfPresenter.sectionCount.getter() < 1) {
      break;
    }
    if (!__OFSUB__(dispatch thunk of ShelfPresenter.sectionCount.getter(), 1))
    {
      dispatch thunk of ShelfPresenter.background(for:)();
      if ((*(unsigned int (**)(id *, uint64_t))(v3 + 88))(v5, v2) == enum case for ShelfBackground.color(_:))
      {
        (*(void (**)(id *, uint64_t))(v3 + 96))(v5, v2);

        char v23 = (char *)v5 + *(int *)(sub_100082C28(&qword_100984570) + 48);
        uint64_t v24 = type metadata accessor for ShelfBackgroundStyle();
        (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        CGFloat v25 = self;
        id v26 = [v25 fractionalWidthDimension:1.0];
        id v27 = [v25 absoluteDimension:2000.0];
        id v28 = [self sizeWithWidthDimension:v26 heightDimension:v27];

        NSString v29 = String._bridgeToObjectiveC()();
        id v30 = [self boundarySupplementaryItemWithLayoutSize:v28 elementKind:v29 alignment:5 absoluteOffset:0.0, 2000.0];

        [v30 setExtendsBoundary:0];
        id v31 = v30;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        (*(void (**)(id *, uint64_t))(v3 + 8))(v5, v2);
      }
      return v34;
    }
    __break(1u);
LABEL_23:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  return v34;
}

void sub_100106B70()
{
  id v0 = sub_10010A248();
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [v0 configuration];
    sub_100084CF0(0, &qword_100982668);
    id v4 = (id)NSCopying.makeCopy()();

    sub_1001064C0();
    sub_100084CF0(0, &qword_100983970);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 setBoundarySupplementaryItems:isa];

    [v1 setConfiguration:v4];
  }
}

void sub_100106C80()
{
  uint64_t v1 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
  if (v2)
  {
    type metadata accessor for JULoadingViewController();
    if (swift_dynamicCastClass())
    {
      id v3 = v2;
      static ViewControllerContainment.remove(_:)();

      id v4 = *(void **)&v0[v1];
      *(void *)&v0[v1] = 0;

      id v5 = *(id *)&v0[v1];
      id v6 = [v0 view];
      if (v6)
      {
        __n128 v7 = v6;
        [v6 bounds];

        static ViewControllerContainment.add(_:to:frame:)();
        sub_1001F4CC4();
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_100106DA4()
{
  uint64_t v1 = v0;
  id v2 = (void *)(swift_isaMask & *v0);
  id v3 = v2;
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_100984550);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v2[129];
  uint64_t v8 = v2[134];
  dispatch thunk of ShelfPresenter.sectionCount.getter();
  sub_1005BE53C();
  id v9 = [v0 collectionView];
  [v9 reloadData];

  uint64_t v10 = v2[132];
  if (dispatch thunk of MetricsPagePresenter.pendingPageRender.getter())
  {
    PendingPageRender.isLayoutPending.setter();
    swift_release();
  }
  id v11 = (char *)sub_10010A248();
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v14 = (uint64_t (*)(uint64_t))swift_allocObject();
    *((void *)v14 + 2) = v7;
    *((void *)v14 + 3) = v3[130];
    *((void *)v14 + 4) = v3[131];
    *((void *)v14 + 5) = v10;
    *((void *)v14 + 6) = v3[133];
    *((void *)v14 + 7) = v8;
    *((void *)v14 + 8) = v13;
    uint64_t v15 = (uint64_t (**)(uint64_t))&v12[OBJC_IVAR____TtC8AppStore33BaseCollectionCompositionalLayout_pendingPrepareObserver];
    uint64_t v16 = *(void *)&v12[OBJC_IVAR____TtC8AppStore33BaseCollectionCompositionalLayout_pendingPrepareObserver];
    *uint64_t v15 = sub_10010C7B0;
    v15[1] = v14;
    sub_10006012C(v16);
  }
  id v17 = sub_10010A248();
  uint64_t v18 = type metadata accessor for IndexSet();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  sub_1005BE598((uint64_t)v6);

  sub_100082BCC((uint64_t)v6, (uint64_t *)&unk_100984550);
  uint64_t v19 = dispatch thunk of MetricsPagePresenter.pageRenderMetrics.getter();
  id v20 = [self sharedApplication];
  unsigned int v21 = [v20 launchedToTest];

  if (v21)
  {
    if (v19)
    {
      id v22 = self;
      swift_retain();
      id v23 = [v22 defaultCenter];
      type metadata accessor for PageRenderMetricsPresenter();
      uint64_t v24 = (void *)static PageRenderMetricsPresenter.pageEndNotification.getter();
      [v23 addObserver:v1 selector:"ppt_pageRenderMetricsPresenterPageLoaded:" name:v24 object:v19];
      swift_release_n();
    }
    else
    {
      sub_10010C75C();
      uint64_t v25 = swift_allocError();
      sub_100286500(v25);
      swift_errorRelease();
    }
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_100107148(uint64_t a1)
{
  uint64_t v3 = sub_100082C28((uint64_t *)&unk_100984550);
  *(void *)&double v4 = __chkstk_darwin(v3 - 8).n128_u64[0];
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v1 collectionView];
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = [v7 collectionViewLayout];

    [v9 invalidateLayout];
  }
  id v10 = [v1 collectionView];
  if (v10)
  {
    id v11 = v10;
    sub_100082C28(&qword_100984E60);
    uint64_t v12 = type metadata accessor for IndexPath();
    uint64_t v13 = *(void *)(v12 - 8);
    unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1007BEDF0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v15 + v14, a1, v12);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 reloadItemsAtIndexPaths:isa];
  }
  id v17 = sub_10010A248();
  uint64_t v18 = type metadata accessor for IndexSet();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  sub_1005BE598((uint64_t)v6);

  return sub_100082BCC((uint64_t)v6, (uint64_t *)&unk_100984550);
}

uint64_t sub_100107388(uint64_t a1)
{
  id v2 = v1;
  uint64_t v28 = a1;
  uint64_t v27 = swift_isaMask & *v1;
  uint64_t v3 = type metadata accessor for IndexSet();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v26 = v5;
  NSString v29 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082C28((uint64_t *)&unk_100984550);
  *(void *)&double v7 = __chkstk_darwin(v6 - 8).n128_u64[0];
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v1 collectionView];
  if (v10)
  {
    id v11 = v10;
    id v12 = [v10 collectionViewLayout];

    [v12 invalidateLayout];
  }
  id v13 = sub_10010A248();
  unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v15 = v28;
  v14(v9, v28, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
  sub_1005BE598((uint64_t)v9);

  sub_100082BCC((uint64_t)v9, (uint64_t *)&unk_100984550);
  uint64_t v16 = self;
  id v17 = v29;
  v14(v29, v15, v3);
  unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v27;
  *(_OWORD *)(v19 + 16) = *(_OWORD *)(v27 + 1032);
  *(void *)(v19 + 32) = *(void *)(v20 + 1048);
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 1056);
  *(void *)(v19 + 56) = *(void *)(v20 + 1072);
  *(void *)(v19 + 64) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v19 + v18, v17, v3);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_10010C6E8;
  *(void *)(v21 + 24) = v19;
  aBlock[4] = sub_1000E9854;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10003EBD4;
  aBlock[3] = &unk_1008BD030;
  id v22 = _Block_copy(aBlock);
  id v23 = v2;
  swift_retain();
  swift_release();
  [v16 performWithoutAnimation:v22];
  _Block_release(v22);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_10010773C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = swift_isaMask & *(void *)v1;
  uint64_t v5 = type metadata accessor for OSLogger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v4 + 1032);
  uint64_t v10 = *(void *)(v4 + 1072);
  if (dispatch thunk of ShelfPresenter.sectionCount.getter())
  {
    uint64_t v36 = v4;
    uint64_t v37 = a1;
    if (qword_10097E348 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100087728(v5, (uint64_t)qword_1009E1828);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v5);
    sub_100082C28((uint64_t *)&unk_100984540);
    type metadata accessor for LogMessage();
    double v35 = v8;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BF710;
    id v40 = (void *)v9;
    long long v41 = *(_OWORD *)(v36 + 1040);
    long long v42 = *(_OWORD *)(v36 + 1056);
    uint64_t v43 = v10;
    *(void *)&long long v42 = type metadata accessor for BaseShelfViewController();
    id v40 = v1;
    id v12 = v1;
    static LogMessage.safe(_:)();
    sub_100082BCC((uint64_t)&v40, (uint64_t *)&unk_100982B40);
    LogMessage.init(stringLiteral:)();
    a1 = v37;
    swift_getErrorValue();
    uint64_t v13 = v38;
    uint64_t v14 = v39;
    *(void *)&long long v42 = v39;
    uint64_t v15 = sub_1000808B8((uint64_t *)&v40);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v15, v13, v14);
    static LogMessage.sensitive(_:)();
    sub_100082BCC((uint64_t)&v40, (uint64_t *)&unk_100982B40);
    uint64_t v16 = v35;
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
    goto LABEL_7;
  }
  type metadata accessor for JUContentUnavailableViewController();
  swift_errorRetain();
  swift_unknownObjectRetain();
  id v17 = (void *)JUContentUnavailableViewController.init(error:from:includeMetrics:retry:)();
  uint64_t v18 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  id v19 = *(id *)&v2[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
  id v20 = v17;
  static ViewControllerContainment.remove(_:)();

  uint64_t v21 = *(void **)&v2[v18];
  *(void *)&v2[v18] = v17;
  id v22 = v20;

  id v23 = *(id *)&v2[v18];
  id v24 = [v2 view];
  if (v24)
  {
    uint64_t v25 = v24;
    [v24 bounds];
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;

    id v40 = (void *)v27;
    *(void *)&long long v41 = v29;
    *((void *)&v41 + 1) = v31;
    *(void *)&long long v42 = v33;
    BYTE8(v42) = 0;
    static ViewControllerContainment.add(_:to:frame:)();

    sub_1001F4CC4();
LABEL_7:
    sub_100286500(a1);
    return;
  }
  __break(1u);
}

void sub_100107BB8()
{
  id v1 = [v0 collectionView];
  sub_1005BE990();

  sub_100106B70();
}

void sub_100107C20()
{
  id v1 = [v0 collectionView];
  sub_1005AF5F0(v1);

  sub_100106B70();
}

uint64_t sub_100107C88()
{
  uint64_t v1 = swift_isaMask & *v0;
  uint64_t v2 = type metadata accessor for OSLogger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097E348 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100087728(v2, (uint64_t)qword_1009E1828);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BF710;
  long long v7 = *(_OWORD *)(v1 + 1048);
  long long v15 = *(_OWORD *)(v1 + 1032);
  long long v16 = v7;
  long long v17 = *(_OWORD *)(v1 + 1064);
  *((void *)&v16 + 1) = type metadata accessor for BaseShelfViewController();
  *(void *)&long long v15 = v0;
  uint64_t v8 = v0;
  static LogMessage.safe(_:)();
  sub_100082BCC((uint64_t)&v15, (uint64_t *)&unk_100982B40);
  LogMessage.init(stringLiteral:)();
  swift_getErrorValue();
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  *((void *)&v16 + 1) = v14;
  uint64_t v11 = sub_1000808B8((uint64_t *)&v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v11, v9, v10);
  static LogMessage.sensitive(_:)();
  sub_100082BCC((uint64_t)&v15, (uint64_t *)&unk_100982B40);
  Logger.error(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100107F8C(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v1 = type metadata accessor for Dependency();
  uint64_t v27 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v24 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MetricsFieldsContext();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v26 = v10;
  __chkstk_darwin(v10);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v13 - 8);
  long long v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectGraph.actionDispatcher.getter();
  uint64_t v16 = sub_100082C28((uint64_t *)&unk_100984530);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    return sub_100082BCC((uint64_t)v15, &qword_1009875B0);
  }
  void v29[3] = type metadata accessor for Action();
  v29[4] = sub_10010C5D4((unint64_t *)&qword_1009875D0, (void (*)(uint64_t))&type metadata accessor for Action);
  uint64_t v22 = v1;
  v29[0] = v28;
  swift_retain_n();
  uint64_t v23 = v17;
  sub_1005365D0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  id v19 = v24;
  Dependency.init<A>(satisfying:with:)();
  dispatch thunk of BaseObjectGraph.adding(dependency:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v22);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v9, v3);
  uint64_t v21 = v25;
  uint64_t v20 = v26;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v12, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v26);
  ActionDispatcher.perform(_:withMetrics:asPartOf:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v20);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v29);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v16);
}

uint64_t sub_1001083C8(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = swift_isaMask & *v1;
    type metadata accessor for PageRefreshGate();
    swift_allocObject();
    swift_retain();
    *(void *)((char *)v1 + qword_100984440) = PageRefreshGate.init(policy:)();
    uint64_t result = swift_release();
    if (!*(void *)((char *)v1 + qword_100984440)) {
      return result;
    }
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = *(_OWORD *)(v2 + 1032);
    *(void *)(v5 + 32) = *(void *)(v2 + 1048);
    *(_OWORD *)(v5 + 40) = *(_OWORD *)(v2 + 1056);
    *(void *)(v5 + 56) = *(void *)(v2 + 1072);
    *(void *)(v5 + 64) = v4;
    swift_retain();
    swift_retain();
    PageRefreshGate.performRefresh.setter();
    swift_release();
  }
  else
  {
    *(void *)((char *)v1 + qword_100984440) = 0;
  }

  return swift_release();
}

uint64_t sub_100108548()
{
  uint64_t v1 = swift_isaMask & *v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2);
  uint64_t v28 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  __chkstk_darwin(v4);
  uint64_t v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - v10;
  aBlock[0] = *(void *)((char *)v0 + qword_100984408);
  swift_unknownObjectRetain();
  PageRefreshPolicy.shouldSendEventsForPageExit.getter();
  uint64_t v12 = *(void *)(v1 + 1032);
  uint64_t v13 = *(void *)(v1 + 1040);
  dispatch thunk of ClearablePresenter.clearContent(shouldSendEventsForPageExit:)();
  swift_unknownObjectRelease();
  if (*(void *)(*(void *)((char *)v0 + qword_100984410) + 112))
  {
    swift_retain();
    ImpressionsCalculator.removeAllElements()();
    swift_release();
  }
  sub_10010BEDC();
  sub_100084CF0(0, (unint64_t *)&qword_100984500);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  PageRefreshPolicy.updateDelayInterval.getter();
  + infix(_:_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v15 = v24;
  v23(v8, v24);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v12;
  *(void *)(v17 + 24) = v13;
  *(void *)(v17 + 32) = *(void *)(v1 + 1048);
  *(_OWORD *)(v17 + 40) = *(_OWORD *)(v1 + 1056);
  *(void *)(v17 + 56) = *(void *)(v1 + 1072);
  *(void *)(v17 + 64) = v16;
  aBlock[4] = sub_10010C5A8;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000162D4;
  aBlock[3] = &unk_1008BCF90;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = v25;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10010C5D4((unint64_t *)&qword_100988CC0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100082C28((uint64_t *)&unk_100984510);
  sub_10003C2CC((unint64_t *)&qword_100988CD0, (uint64_t *)&unk_100984510);
  uint64_t v20 = v28;
  uint64_t v21 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
  return ((uint64_t (*)(char *, uint64_t))v23)(v11, v15);
}

void sub_100108A18()
{
  uint64_t v1 = v0;
  long long v18 = *(_OWORD *)((swift_isaMask & *(void *)v0) + 0x420);
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for BaseShelfViewController();
  [super viewDidLoad];
  id v2 = [self sharedApplication];
  unsigned int v3 = [v2 launchedToTest];

  if (v3)
  {
    swift_retain();
    dispatch thunk of InfiniteScrollObserver.pptAllowedPaginationCount.setter();
    swift_release();
  }
  uint64_t v4 = *(void **)&v1[qword_100984438];
  if (v4)
  {
    sub_100084CF0(0, (unint64_t *)&unk_1009844F0);
    type metadata accessor for FlowPreviewing();
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    id v6 = v4;
    id v7 = [objc_allocWithZone(ObjCClassFromMetadata) initWithDelegate:v6];
    id v8 = [v1 collectionView];
    if (!v8)
    {
LABEL_13:
      __break(1u);
      return;
    }
    uint64_t v9 = v8;
    [v8 addInteraction:v7];
  }
  id v10 = [v1 collectionView];
  if (!v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = v10;
  id v12 = sub_100108CF4();
  [v11 setCollectionViewLayout:v12];

  dispatch thunk of UpdatablePresenter.didLoad()();
  id v13 = [v1 collectionView];
  if (v13)
  {
    uint64_t v14 = v13;
    [v13 setAlwaysBounceVertical:1];
  }
  id v15 = [v1 collectionView];
  if (v15)
  {
    uint64_t v16 = v15;
    [v15 setPrefetchDataSource:v1];
  }
  id v17 = [v1 collectionView];
  sub_100475814(v17);
}

id sub_100108CF4()
{
  uint64_t v1 = swift_isaMask & *v0;
  id v2 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
  sub_1001064C0();
  sub_100084CF0(0, &qword_100983970);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setBoundarySupplementaryItems:isa];

  uint64_t v4 = (objc_class *)type metadata accessor for BaseCollectionCompositionalLayout();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v1 + 1032);
  *(void *)(v6 + 32) = *(void *)(v1 + 1048);
  *(_OWORD *)(v6 + 40) = *(_OWORD *)(v1 + 1056);
  *(void *)(v6 + 56) = *(void *)(v1 + 1072);
  *(void *)(v6 + 64) = v5;
  id v7 = objc_allocWithZone(v4);
  void v11[4] = sub_10010C574;
  v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10004DF80;
  v11[3] = &unk_1008BCF40;
  id v8 = _Block_copy(v11);
  swift_retain();
  id v9 = [v7 initWithSectionProvider:v8 configuration:v2];

  _Block_release(v8);
  swift_release();
  swift_release();
  return v9;
}

void sub_100108F1C(void *a1)
{
  id v1 = a1;
  sub_100108A18();
}

uint64_t sub_100108F64()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseShelfViewController();
  [super as_viewDidBecomeFullyVisible];
  if (*(void *)(*(void *)&v0[qword_100984410] + 112))
  {
    swift_retain();
    ImpressionsCalculator.isVisible.setter();
    swift_release();
  }
  type metadata accessor for MetricsActivity();
  static MetricsActivity.current.getter();
  dispatch thunk of MetricsPagePresenter.referrer.getter();
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  static MetricsActivity.current.getter();
  dispatch thunk of MetricsActivity.changePreloaded(_:)();
  return swift_release();
}

void sub_1001090D4(void *a1)
{
  id v1 = a1;
  sub_100108F64();
}

id sub_10010911C()
{
  uint64_t v1 = swift_isaMask & *v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *(_OWORD *)(v1 + 1048);
  v9[0] = *(_OWORD *)(v1 + 1032);
  v9[1] = v6;
  v9[2] = *(_OWORD *)(v1 + 1064);
  id v7 = (objc_class *)type metadata accessor for BaseShelfViewController();
  v10.receiver = v0;
  v10.super_class = v7;
  id result = [super as_viewWillBecomeFullyVisible];
  if (*(void *)((char *)v0 + qword_100984440))
  {
    swift_retain();
    Date.init()();
    PageRefreshGate.viewWillAppear(on:)();
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

void sub_100109288(void *a1)
{
  id v1 = a1;
  sub_10010911C();
}

id sub_1001092D0(char a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *(_OWORD *)(v3 + 1048);
  v11[0] = *(_OWORD *)(v3 + 1032);
  v11[1] = v8;
  v11[2] = *(_OWORD *)(v3 + 1064);
  id v9 = (objc_class *)type metadata accessor for BaseShelfViewController();
  v12.receiver = v1;
  v12.super_class = v9;
  id result = [super viewWillAppear:a1 & 1];
  if (*(void *)((char *)v1 + qword_100984440))
  {
    swift_retain();
    Date.init()();
    PageRefreshGate.viewWillAppear(on:)();
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void sub_100109444(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1001092D0(a3);
}

uint64_t sub_100109498(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_isaMask & *v2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v4 + 1048);
  uint64_t v10 = *(void *)(v4 + 1072);
  long long v14 = *(_OWORD *)(v4 + 1032);
  long long v15 = v14;
  uint64_t v16 = v9;
  long long v13 = *(_OWORD *)(v4 + 1056);
  long long v17 = v13;
  uint64_t v18 = v10;
  uint64_t v11 = (objc_class *)type metadata accessor for BaseShelfViewController();
  v19.receiver = v2;
  v19.super_class = v11;
  [super viewDidAppear:a1 & 1];
  if (dispatch thunk of MetricsPagePresenter.pendingPageRender.getter())
  {
    Date.init()();
    Date.timeIntervalSince1970.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    PendingPageRender.appearTime.setter();
    swift_release();
  }
  if (*(void *)(*(void *)((char *)v2 + qword_100984410) + 112))
  {
    swift_retain();
    ImpressionsCalculator.isVisible.setter();
    swift_release();
  }
  type metadata accessor for MetricsActivity();
  static MetricsActivity.current.getter();
  dispatch thunk of MetricsPagePresenter.referrer.getter();
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1001096F0(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100109498(a3);
}

uint64_t sub_100109744()
{
  id v1 = v0;
  uint64_t v2 = swift_isaMask & *(void *)v0;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *(_OWORD *)(v2 + 1048);
  v10[0] = *(_OWORD *)(v2 + 1032);
  v10[1] = v7;
  v10[2] = *(_OWORD *)(v2 + 1064);
  long long v8 = (objc_class *)type metadata accessor for BaseShelfViewController();
  v11.receiver = v1;
  v11.super_class = v8;
  [super as_viewWillBecomePartiallyVisible];
  if (*(void *)(*(void *)&v1[qword_100984410] + 112))
  {
    swift_retain();
    ImpressionsCalculator.isVisible.setter();
    swift_release();
  }
  type metadata accessor for MetricsActivity();
  static MetricsActivity.current.getter();
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)();
  swift_release();
  static MetricsActivity.current.getter();
  dispatch thunk of MetricsActivity.changePreloaded(_:)();
  uint64_t result = swift_release();
  if (*(void *)&v1[qword_100984440])
  {
    swift_retain();
    Date.init()();
    PageRefreshGate.viewWillDisappear(on:)();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

void sub_100109928(void *a1)
{
  id v1 = a1;
  sub_100109744();
}

uint64_t sub_100109970(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_isaMask & *v2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ViewWillDisappearReason();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_100082C28(&qword_1009844E8);
  __chkstk_darwin(v10 - 8);
  objc_super v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v4 + 1048);
  uint64_t v14 = *(void *)(v4 + 1072);
  long long v20 = *(_OWORD *)(v4 + 1032);
  long long v21 = v20;
  uint64_t v22 = v13;
  long long v19 = *(_OWORD *)(v4 + 1056);
  long long v23 = v19;
  uint64_t v24 = v14;
  long long v15 = (objc_class *)type metadata accessor for BaseShelfViewController();
  v25.receiver = v2;
  v25.super_class = v15;
  [super viewWillDisappear:a1 & 1];
  if (dispatch thunk of MetricsPagePresenter.pendingPageRender.getter())
  {
    static ViewWillDisappearReason.inferred(for:)();
    Date.init()();
    Date.timeIntervalSince1970.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    PendingPageRender.DisappearTimeAndReason.init(reason:timeInterval:)();
    uint64_t v16 = type metadata accessor for PendingPageRender.DisappearTimeAndReason();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 0, 1, v16);
    PendingPageRender.disappearTime.setter();
    swift_release();
  }
  if (*((unsigned char *)v2 + qword_100984428) == 1)
  {
    type metadata accessor for VideoPlaybackCoordinator();
    long long v17 = (void *)inject(_:from:)();
    dispatch thunk of VideoPlaybackCoordinator.pauseAutoPlayVideo()();
  }
  if (*(void *)(*(void *)((char *)v2 + qword_100984410) + 112))
  {
    swift_retain();
    ImpressionsCalculator.isVisible.setter();
    swift_release();
  }
  type metadata accessor for MetricsActivity();
  static MetricsActivity.current.getter();
  dispatch thunk of MetricsActivity.changePageReferrerUrl(_:)();
  swift_release();
  static MetricsActivity.current.getter();
  dispatch thunk of MetricsActivity.changePreloaded(_:)();
  uint64_t result = swift_release();
  if (*(void *)((char *)v2 + qword_100984440))
  {
    swift_retain();
    Date.init()();
    PageRefreshGate.viewWillDisappear(on:)();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

void sub_100109D30(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100109970(a3);
}

void sub_100109D84()
{
  long long v2 = *(_OWORD *)((swift_isaMask & *v0) + 0x408);
  long long v3 = *(_OWORD *)((swift_isaMask & *v0) + 0x418);
  long long v4 = *(_OWORD *)((swift_isaMask & *v0) + 0x428);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for BaseShelfViewController();
  [super as_viewDidBecomePartiallyVisible:v2, v3, v4];
  if (*((unsigned char *)v0 + qword_100984428) == 1)
  {
    type metadata accessor for VideoPlaybackCoordinator();
    id v1 = (void *)inject(_:from:)();
    dispatch thunk of VideoPlaybackCoordinator.pauseAutoPlayVideo()();
  }
}

void sub_100109E58(void *a1)
{
  id v1 = a1;
  sub_100109D84();
}

void sub_100109EA0(uint64_t a1)
{
  long long v4 = *(_OWORD *)((swift_isaMask & *v1) + 0x408);
  long long v5 = *(_OWORD *)((swift_isaMask & *v1) + 0x418);
  long long v6 = *(_OWORD *)((swift_isaMask & *v1) + 0x428);
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for BaseShelfViewController();
  [super traitCollectionDidChange:a1, v4, v5, v6];
  if ([v1 isViewLoaded])
  {
    sub_100106B70();
    id v3 = [v1 collectionView];
    sub_1005BEAB0(v3);
  }
}

void sub_100109F98(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_100109EA0((uint64_t)a3);
}

void sub_10010A004(uint64_t a1, double a2, double a3)
{
  long long v4 = v3;
  uint64_t v8 = swift_isaMask & *v3;
  objc_super v9 = *(objc_super *)(v8 + 0x418);
  v17[1] = *(objc_super *)(v8 + 0x408);
  v17[2] = v9;
  v17[3] = *(objc_super *)(v8 + 1064);
  v18.receiver = v3;
  v18.super_class = (Class)type metadata accessor for BaseShelfViewController();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2 a3];
  if ([v3 isViewLoaded])
  {
    id v10 = [v3 traitCollection];
    uint64_t v11 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
    objc_super v12 = (char *)objc_allocWithZone(v11);
    uint64_t v13 = (double *)&v12[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
    *uint64_t v13 = a2;
    v13[1] = a3;
    *(void *)&v12[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v10;
    v17[0].receiver = v12;
    v17[0].super_class = v11;
    id v14 = [(objc_super *)v17 init];
    uint64_t v15 = *(void *)((char *)v3 + qword_100984410);
    id v16 = [v4 collectionView];
    (*(void (**)(uint64_t, id, id, double, double))(*(void *)v15 + 304))(a1, v14, v16, a2, a3);
  }
}

void sub_10010A1C8(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  id v9 = a1;
  sub_10010A004(a5, a2, a3);
  swift_unknownObjectRelease();
}

id sub_10010A248()
{
  id result = [v0 collectionView];
  if (result)
  {
    long long v2 = result;
    id v3 = [result collectionViewLayout];

    id result = 0;
    if (v3)
    {
      type metadata accessor for BaseCollectionCompositionalLayout();
      id result = (id)swift_dynamicCastClass();
      if (!result)
      {

        return 0;
      }
    }
  }
  return result;
}

id sub_10010A2C4(uint64_t a1)
{
  id result = [v1 collectionView];
  if (!result) {
    return result;
  }
  long long v4 = result;
  uint64_t v16 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v17 = (unint64_t)(v5 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v17) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v16 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v17) {
        goto LABEL_22;
      }
      unint64_t v14 = *(void *)(v16 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v17) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v16 + 8 * v8);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v12 = dispatch thunk of ShelfPresenter.shelf(for:)();
    sub_100106058(v12, v11, v4);
    id result = (id)swift_release();
  }
  int64_t v15 = v13 + 3;
  if (v15 < v17)
  {
    unint64_t v14 = *(void *)(v16 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v8 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v8 >= v17) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v16 + 8 * v8);
        ++v15;
        if (v14) {
          goto LABEL_21;
        }
      }
    }
    int64_t v8 = v15;
    goto LABEL_21;
  }
LABEL_22:

  return (id)swift_release();
}

uint64_t sub_10010A504(void *a1, uint64_t a2, void *a3)
{
  type metadata accessor for IndexPath();
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = a3;
  id v7 = a1;
  sub_10010BCE4(v5);

  return swift_bridgeObjectRelease();
}

id sub_10010A580(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v3 = (char *)Strong;
  swift_retain();
  id result = [v3 collectionView];
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph];
    id v7 = v3;
    swift_retain();
    uint64_t v8 = sub_1005AF9D4(a1, v5, v7, v6);
    swift_release();

    swift_release();
    return (id)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_10010A678()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    long long v2 = sub_1003DD0B4();
    sub_10010A2C4((uint64_t)v2);

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    long long v4 = (void *)result;
    swift_unknownObjectRetain();

    uint64_t v5 = dispatch thunk of MetricsPagePresenter.pendingPageRender.getter();
    uint64_t result = swift_unknownObjectRelease();
    if (v5)
    {
      PendingPageRender.isLayoutPending.setter();
      return swift_release();
    }
  }
  return result;
}

void sub_10010A768(void *a1)
{
  id v1 = [a1 collectionView];
  if (v1)
  {
    id v3 = v1;
    IndexSet._bridgeToObjectiveC()(v2);
    id v5 = v4;
    [v3 reloadSections:v4];
  }
}

void sub_10010A7F0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexSet();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [a1 collectionView:v6];
  if (v9)
  {
    unint64_t v10 = v9;
    sub_100082C28(&qword_1009955C0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1007BEDF0;
    *(void *)(v11 + 32) = a2;
    v15[1] = v11;
    sub_10010C5D4(&qword_1009844D0, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    sub_100082C28(&qword_1009844D8);
    sub_10003C2CC(&qword_1009844E0, &qword_1009844D8);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    IndexSet._bridgeToObjectiveC()(v12);
    unint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    [v10 reloadSections:v14];
  }
}

void sub_10010A9B4(void *a1)
{
  id v1 = a1;
  sub_100107BB8();
}

void sub_10010A9FC(void *a1)
{
  id v1 = a1;
  sub_100107C20();
}

void sub_10010AA44(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v4 = a1;
  sub_100107C88();
}

uint64_t sub_10010AA9C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  uint64_t v6 = sub_10010C3F8();

  return v6;
}

uint64_t sub_10010AAE8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  uint64_t v8 = sub_10010C424(a4);

  return v8;
}

void sub_10010AB3C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_100108548();
  }
}

uint64_t sub_10010AB98()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v1 = (void *)result;
    swift_unknownObjectRetain();

    dispatch thunk of UpdatablePresenter.update(ignoringCache:)();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10010AC28(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  LOBYTE(a5) = sub_10010C398(a5);

  return a5 & 1;
}

double sub_10010AC94(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  double v11 = sub_10010C3C8(a5);

  return v11;
}

uint64_t sub_10010AD28(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1005B29AC(a2, a3, a4, a1);
}

id sub_10010AD68(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  double v11 = v10;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  unint64_t v14 = (void *)sub_10010AD28(v12, v9, v11, (uint64_t)v8);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v14;
}

uint64_t sub_10010AEA8(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = a3;
  id v15 = a4;
  id v16 = a1;
  sub_10010C450((uint64_t)v15, v11, v13);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_10010AFE8(void *a1, uint64_t a2)
{
  return sub_1005B5BC8(a2, a1);
}

id sub_10010B020(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  id v11 = sub_10010AFE8(v9, (uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v11;
}

uint64_t sub_10010B134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void, uint64_t))(**(void **)(v3 + qword_100984410)
                                                                                       + 664))(a2, a3, *(void *)(v3 + OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_artworkLoader), v3, *(void *)(v3 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph), a1);
}

uint64_t sub_10010B1BC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10010B274(a1, a2, a3, a4, a5, (void (*)(id, id, char *))sub_10010B134);
}

uint64_t sub_10010B1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t))(**(void **)(v3 + qword_100984410)
                                                                              + 672))(a2, a3, *(void *)(v3 + OBJC_IVAR____TtC8AppStore30UberedCollectionViewController_artworkLoader), *(void *)(v3 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph), a1);
}

uint64_t sub_10010B25C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_10010B274(a1, a2, a3, a4, a5, (void (*)(id, id, char *))sub_10010B1D4);
}

uint64_t sub_10010B274(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, char *))
{
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = a3;
  id v15 = a4;
  id v16 = a1;
  a6(v14, v15, v13);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

BOOL sub_10010B394(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v12 = [v9 cellForItemAtIndexPath:isa];

  if (v12)
  {
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      id v13 = v12;
    }
    else {
      id v13 = 0;
    }
    BOOL v14 = v13 == 0;

    id v9 = v10;
    id v10 = v12;
  }
  else
  {
    BOOL v14 = 0;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v14;
}

void sub_10010B504(void *a1, objc_class *a2)
{
  sub_1005B9644(a2, (uint64_t)a2, *(void *)(v2 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph), a1);
}

uint64_t sub_10010B54C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (objc_class *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  sub_10010B504(v9, v8);

  return (*(uint64_t (**)(objc_class *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_10010B648(uint64_t a1)
{
  return [*(id *)(v1 + qword_100984418) scrollViewWillBeginDecelerating:a1];
}

void sub_10010B664(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10010B648((uint64_t)v4);
}

id sub_10010B6CC(uint64_t a1)
{
  return [*(id *)(v1 + qword_100984418) scrollViewDidEndDecelerating:a1];
}

void sub_10010B6E8(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10010B6CC((uint64_t)v4);
}

id sub_10010B750(uint64_t a1)
{
  long long v4 = *(_OWORD *)((swift_isaMask & *v1) + 0x408);
  long long v5 = *(_OWORD *)((swift_isaMask & *v1) + 0x418);
  long long v6 = *(_OWORD *)((swift_isaMask & *v1) + 0x428);
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for BaseShelfViewController();
  [super scrollViewDidScroll:a1, v4, v5, v6];
  return [*(id *)((char *)v1 + qword_100984418) scrollViewDidScroll:a1];
}

void sub_10010B810(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10010B750((uint64_t)v4);
}

id sub_10010B878(uint64_t a1)
{
  return [*(id *)(v1 + qword_100984418) scrollViewWillBeginDragging:a1];
}

void sub_10010B894(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10010B878((uint64_t)v4);
}

id sub_10010B8FC(uint64_t a1, char a2)
{
  return [*(id *)(v2 + qword_100984418) scrollViewDidEndDragging:a1 willDecelerate:a2 & 1];
}

void sub_10010B920(void *a1, uint64_t a2, void *a3, char a4)
{
  id v6 = a3;
  id v7 = a1;
  sub_10010B8FC((uint64_t)v6, a4);
}

void sub_10010B990(void *a1)
{
  id v1 = a1;
  sub_100105CF4();
}

void sub_10010B9D8(void *a1)
{
  id v1 = a1;
  sub_100105DDC();
}

uint64_t sub_10010BA20()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  return swift_release();
}

id sub_10010BAB0()
{
  long long v2 = *(_OWORD *)((swift_isaMask & *v0) + 0x408);
  long long v3 = *(_OWORD *)((swift_isaMask & *v0) + 0x418);
  long long v4 = *(_OWORD *)((swift_isaMask & *v0) + 0x428);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for BaseShelfViewController();
  return [super dealloc:v2, v3, v4];
}

uint64_t sub_10010BB40(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for BaseShelfViewController()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10010BBF4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x530))();
}

void *sub_10010BC30(uint64_t a1, void *a2)
{
  return sub_10010C1D4(a2);
}

uint64_t sub_10010BC54()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x538))();
}

uint64_t sub_10010BC90()
{
  return swift_getWitnessTable();
}

uint64_t sub_10010BCAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10010BCC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10010BCE4(uint64_t a1)
{
  uint64_t v22 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  objc_super v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  id v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v19[1] = v1;
    long long v23 = _swiftEmptyArrayStorage;
    sub_1001297CC(0, v6, 0);
    id v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v20 = *(void *)(v8 + 56);
    long long v21 = v9;
    uint64_t v11 = (void (**)(char *, uint64_t))(v8 - 8);
    do
    {
      uint64_t v12 = v22;
      uint64_t v13 = v8;
      v21(v5, v10, v22);
      uint64_t v14 = IndexPath.section.getter();
      (*v11)(v5, v12);
      id v7 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001297CC(0, v7[2] + 1, 1);
        id v7 = v23;
      }
      unint64_t v16 = v7[2];
      unint64_t v15 = v7[3];
      if (v16 >= v15 >> 1)
      {
        sub_1001297CC(v15 > 1, v16 + 1, 1);
        id v7 = v23;
      }
      void v7[2] = v16 + 1;
      v7[v16 + 4] = v14;
      v10 += v20;
      --v6;
      uint64_t v8 = v13;
    }
    while (v6);
  }
  uint64_t v17 = sub_10026F6F4((uint64_t)v7);
  swift_bridgeObjectRelease();
  sub_10010A2C4(v17);
  return swift_bridgeObjectRelease();
}

void sub_10010BEDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JULoadingViewController.PresentationContext();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = dispatch thunk of ShelfPresenter.sectionCount.getter();
  uint64_t v4 = OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController;
  objc_super v5 = *(void **)&v0[OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_overlayViewController];
  if (!v3)
  {
    if (v5)
    {
      type metadata accessor for JULoadingViewController();
      if (swift_dynamicCastClass()) {
        return;
      }
    }
    dispatch thunk of MetricsPagePresenter.pageRenderMetrics.getter();
    static JULoadingViewController.PresentationContext.placeholder.getter();
    id v11 = objc_allocWithZone((Class)type metadata accessor for JULoadingViewController());
    uint64_t v12 = (void *)JULoadingViewController.init(label:presentationContext:pageRenderMetrics:)();
    id v13 = *(id *)&v1[v4];
    id v14 = v12;
    static ViewControllerContainment.remove(_:)();

    unint64_t v15 = *(void **)&v1[v4];
    *(void *)&v1[v4] = v12;
    id v16 = v14;

    id v17 = *(id *)&v1[v4];
    id v18 = [v1 view];
    if (v18)
    {
      long long v19 = v18;
      [v18 bounds];

      static ViewControllerContainment.add(_:to:frame:)();
      sub_1001F4CC4();

      return;
    }
LABEL_12:
    __break(1u);
    return;
  }
  id v6 = v5;
  static ViewControllerContainment.remove(_:)();

  id v7 = *(void **)&v1[v4];
  *(void *)&v1[v4] = 0;

  id v8 = *(id *)&v1[v4];
  id v9 = [v1 view];
  if (!v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v10 = v9;
  [v9 bounds];

  static ViewControllerContainment.add(_:to:frame:)();

  sub_1001F4CC4();
}

void *sub_10010C1D4(void *result)
{
  if (result)
  {
    id v2 = [result integerValue];
    uint64_t v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    *(void *)(v4 + 24) = v2;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_10010C380;
    *(void *)(v5 + 24) = v4;
    v9[4] = sub_10003EC24;
    uint64_t v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_10003EBD4;
    _OWORD v9[3] = &unk_1008BCEC8;
    id v6 = _Block_copy(v9);
    id v7 = v1;
    swift_retain();
    swift_release();
    [v3 performWithoutAnimation:v6];
    _Block_release(v6);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = (void *)swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10010C348()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10010C380()
{
  sub_10010A7F0(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10010C388()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10010C398(uint64_t a1)
{
  return sub_1005B2220(a1) & 1;
}

CGFloat sub_10010C3C8(uint64_t a1)
{
  return sub_1005B240C(a1, v1);
}

uint64_t sub_10010C3F8()
{
  return sub_1005B13E0();
}

uint64_t sub_10010C424(uint64_t a1)
{
  return sub_1005BE480(a1);
}

uint64_t sub_10010C450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (IndexPath.count.getter() < 2) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = IndexPath.section.getter();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(**(void **)(v3 + qword_100984410)
                                                                                        + 608))(a1, a2, a3, v7, v3, *(void *)(v3 + OBJC_IVAR____TtC8AppStore29StoreCollectionViewController_objectGraph));
}

uint64_t sub_10010C504()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10010C53C()
{
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

id sub_10010C574(uint64_t a1)
{
  return sub_10010A580(a1);
}

uint64_t sub_10010C5A8()
{
  return sub_10010AB98();
}

uint64_t sub_10010C5BC(uint64_t a1)
{
  return sub_10010C7C8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_10010AB3C);
}

uint64_t sub_10010C5D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10010C61C()
{
  uint64_t v1 = type metadata accessor for IndexSet();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10010C6E8()
{
  type metadata accessor for IndexSet();
  uint64_t v1 = *(void **)(v0 + 64);

  sub_10010A768(v1);
}

uint64_t sub_10010C74C()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10010C75C()
{
  unint64_t result = qword_100984560;
  if (!qword_100984560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100984560);
  }
  return result;
}

uint64_t sub_10010C7B0(uint64_t a1)
{
  return sub_10010C7C8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_10010A678);
}

uint64_t sub_10010C7C8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

ValueMetadata *type metadata accessor for SearchLandingPageShelfLayoutSpacingProvider()
{
  return &type metadata for SearchLandingPageShelfLayoutSpacingProvider;
}

uint64_t sub_10010C818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = type metadata accessor for PageGrid();
  uint64_t v38 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  __chkstk_darwin(v1);
  uint64_t v37 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100082C28(&qword_100984590);
  __chkstk_darwin(v42);
  id v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100082C28(&qword_100984598);
  __chkstk_darwin(v4 - 8);
  id v46 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v37 - v7;
  __chkstk_darwin(v9);
  id v11 = (char *)&v37 - v10;
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_1009A35C0);
  __chkstk_darwin(v12 - 8);
  id v40 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Shelf.ContentType();
  uint64_t v18 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter();
  swift_getKeyPath();
  long long v41 = v20;
  ReadOnlyLens.subscript.getter();
  swift_release();
  long long v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v21(v17, v14);
  uint64_t v22 = (uint64_t)v46;
  ShelfLayoutContext.surroundingShelves.getter();
  sub_100082BCC(v22, &qword_100984598);
  sub_1000673A0((uint64_t)v8, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
  {
    sub_100082BCC((uint64_t)v11, &qword_100984598);
    uint64_t v23 = 1;
    uint64_t v24 = (uint64_t)v44;
    uint64_t v25 = (uint64_t)v40;
  }
  else
  {
    swift_getKeyPath();
    uint64_t v25 = (uint64_t)v40;
    ReadOnlyLens.subscript.getter();
    swift_release();
    v21(v11, v14);
    uint64_t v23 = 0;
    uint64_t v24 = (uint64_t)v44;
  }
  uint64_t v26 = v42;
  uint64_t v27 = v43;
  uint64_t v28 = v41;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v25, v23, 1, v43);
  uint64_t v29 = v24 + *(int *)(v26 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v24, v28, v27);
  sub_10010D458(v25, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v29, 1, v27) == 1)
  {
    int v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88))(v24, v27);
    uint64_t v31 = v45;
    if (v30 == enum case for Shelf.ContentType.unifiedMessage(_:))
    {
      uint64_t v32 = v37;
      ShelfLayoutContext.contentPageGrid.getter();
      PageGrid.interRowSpace.getter();
      double v34 = v33;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v39);
      v31[3] = (uint64_t)&type metadata for CGFloat;
      v31[4] = (uint64_t)&protocol witness table for CGFloat;
      *(double *)uint64_t v31 = v34 * 0.5;
      sub_100082BCC(v25, (uint64_t *)&unk_1009A35C0);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v28, v27);
    }
    else
    {
      v45[3] = (uint64_t)&type metadata for Double;
      v31[4] = (uint64_t)&protocol witness table for Double;
      *uint64_t v31 = 0;
      sub_100082BCC(v25, (uint64_t *)&unk_1009A35C0);
      uint64_t v36 = *(void (**)(char *, uint64_t))(v18 + 8);
      v36(v28, v27);
      return ((uint64_t (*)(uint64_t, uint64_t))v36)(v24, v27);
    }
  }
  else
  {
    sub_1007616A8(v45);
    sub_100082BCC(v25, (uint64_t *)&unk_1009A35C0);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v28, v27);
    return sub_100082BCC(v24, &qword_100984590);
  }
}

uint64_t sub_10010CDEC@<X0>(NSString *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Shelf.ContentType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v12 == enum case for Shelf.ContentType.mediumAdLockupWithScreenshotsBackground(_:)
    || v12 == enum case for Shelf.ContentType.condensedAdLockupWithIconBackground(_:))
  {
    if (qword_10097FC20 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for StaticDimension();
    uint64_t v15 = v14;
    uint64_t v16 = qword_1009E5D60;
    goto LABEL_13;
  }
  if (v12 == enum case for Shelf.ContentType.action(_:))
  {
    if (qword_10097FC48 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for StaticDimension();
    uint64_t v15 = v14;
    uint64_t v16 = qword_1009E5DD8;
LABEL_13:
    uint64_t v17 = sub_100087728(v14, (uint64_t)v16);
    a2[3] = v15;
    a2[4] = (uint64_t)&protocol witness table for StaticDimension;
    uint64_t v18 = sub_1000808B8(a2);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v18, v17, v15);
  }
  sub_100761A10(a1, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10010D0C8@<X0>(double *a1@<X8>)
{
  uint64_t v2 = sub_100082C28(&qword_100984578);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.shelf.getter();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (*(void *)(v16 + 16))
  {
    sub_100082C6C(v16 + 32, (uint64_t)&v17);
  }
  else
  {
    uint64_t v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
    sub_100082BCC((uint64_t)&v17, &qword_100989360);
    long long v20 = 0u;
    long long v21 = 0u;
    uint64_t v22 = 0;
    goto LABEL_11;
  }
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100984588);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
    goto LABEL_11;
  }
  if (!*((void *)&v21 + 1))
  {
LABEL_11:
    uint64_t result = sub_100082BCC((uint64_t)&v20, &qword_100984580);
LABEL_12:
    *((void *)a1 + 3) = &type metadata for Double;
    *((void *)a1 + 4) = &protocol witness table for Double;
    *a1 = 0.0;
    return result;
  }
  sub_100081DD4(&v20, (uint64_t)v23);
  sub_100081D90(v23, v23[3]);
  dispatch thunk of ItemBackgroundProviding.itemBackground.getter();
  uint64_t v9 = type metadata accessor for ItemBackground();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
  {
    sub_100082BCC((uint64_t)v4, &qword_100984578);
LABEL_17:
    uint64_t result = _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v23);
    goto LABEL_12;
  }
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v4, v9);
  int v13 = enum case for ItemBackground.ad(_:);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  if (v12 != v13) {
    goto LABEL_17;
  }
  if (qword_10097E8B0 != -1) {
    swift_once();
  }
  double v14 = *(double *)&xmmword_1009E2300;
  *((void *)a1 + 3) = &type metadata for CGFloat;
  *((void *)a1 + 4) = &protocol witness table for CGFloat;
  *a1 = fabs(v14);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v23);
}

uint64_t sub_10010D458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_1009A35C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for RestoreAppStoreActionImplementation()
{
  return &type metadata for RestoreAppStoreActionImplementation;
}

unint64_t sub_10010D4D4()
{
  unint64_t result = qword_1009845B8;
  if (!qword_1009845B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009845B8);
  }
  return result;
}

uint64_t sub_10010D528()
{
  uint64_t v0 = type metadata accessor for OSLogger.Subsystem();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSLogger();
  sub_100042444(v4, qword_1009845A0);
  sub_100087728(v4, (uint64_t)qword_1009845A0);
  if (qword_10097E338 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100087728(v0, (uint64_t)qword_1009E17F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSLogger.init(subsystem:category:)();
}

uint64_t sub_10010D67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  uint64_t v4 = type metadata accessor for InstallationType();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  sub_100082C28(&qword_1009845E0);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AdamId();
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return _swift_task_switch(sub_10010D81C, 0, 0);
}

uint64_t sub_10010D81C()
{
  uint64_t v1 = v0[20];
  uint64_t v12 = v0[19];
  uint64_t v2 = v0[18];
  sub_100082C28(&qword_100999640);
  type metadata accessor for ObjectGraph();
  inject<A, B>(_:from:)();
  uint64_t v3 = v0[8];
  v0[25] = v0[7];
  v0[26] = v3;
  v0[27] = swift_getObjectType();
  sub_100082C28(&qword_1009845E8);
  inject<A, B>(_:from:)();
  RestoreAppStoreAction.gatedAppAdamId.getter();
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v0[28] = v4;
  v0[29] = (v1 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v2, 1, v12) == 1)
  {
    sub_100082BCC(v0[18], &qword_1009845E0);
  }
  else
  {
    uint64_t v5 = v0[24];
    uint64_t v6 = v0[20];
    uint64_t v13 = v0[19];
    uint64_t v7 = v0[13];
    uint64_t v8 = v0[14];
    uint64_t v9 = v0[12];
    (*(void (**)(uint64_t, void))(v6 + 32))(v5, v0[18]);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v8, enum case for InstallationType.redownload(_:), v9);
    dispatch thunk of AppStateController.setWaiting(for:installationType:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v13);
  }
  uint64_t v10 = (void *)swift_task_alloc();
  v0[30] = v10;
  void *v10 = v0;
  v10[1] = sub_10010DA38;
  return sub_10010E4CC();
}

uint64_t sub_10010DA38()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10010DCBC, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 256) = v3;
    void *v3 = v2;
    v3[1] = sub_10010DBA8;
    return sub_10010EC18(v2 + 16);
  }
}

uint64_t sub_10010DBA8()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10010E028;
  }
  else {
    uint64_t v2 = sub_10010DE50;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10010DCBC()
{
  uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[28];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  RestoreAppStoreAction.gatedAppAdamId.getter();
  if (v1(v3, 1, v2) == 1)
  {
    sub_100082BCC(v0[17], &qword_1009845E0);
  }
  else
  {
    uint64_t v4 = v0[23];
    uint64_t v5 = v0[19];
    uint64_t v6 = v0[20];
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v4, v0[17], v5);
    dispatch thunk of AppStateController.clearWaiting(for:refreshState:)();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_unknownObjectRelease();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10010DE50()
{
  uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[28];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[9];
  uint64_t v5 = enum case for ActionOutcome.performed(_:);
  uint64_t v6 = type metadata accessor for ActionOutcome();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  RestoreAppStoreAction.gatedAppAdamId.getter();
  if (v1(v3, 1, v2) == 1)
  {
    sub_100082BCC(v0[16], &qword_1009845E0);
  }
  else
  {
    uint64_t v7 = v0[22];
    uint64_t v8 = v0[19];
    uint64_t v9 = v0[20];
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 32))(v7, v0[16], v8);
    dispatch thunk of AppStateController.clearWaiting(for:refreshState:)();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_unknownObjectRelease();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10010E028()
{
  uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[28];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[15];
  RestoreAppStoreAction.gatedAppAdamId.getter();
  if (v1(v3, 1, v2) == 1)
  {
    sub_100082BCC(v0[15], &qword_1009845E0);
  }
  else
  {
    uint64_t v5 = v0[20];
    uint64_t v4 = v0[21];
    uint64_t v6 = v0[19];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v4, v0[15], v6);
    dispatch thunk of AppStateController.clearWaiting(for:refreshState:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  swift_unknownObjectRelease();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10010E1BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100082C28(&qword_100984620);
    uint64_t v10 = swift_allocError();
    *id v11 = a3;
    id v12 = a3;
    return _swift_continuation_throwingResumeWithError(v9, v10);
  }
  else
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(void, char *, uint64_t))(v6 + 32))(*(void *)(*(void *)(v9 + 64) + 40), v8, v5);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_10010E318(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1000321BC;
  return sub_10010D67C(a1, v6, a3);
}

unint64_t sub_10010E3CC()
{
  unint64_t result = qword_1009845C8;
  if (!qword_1009845C8)
  {
    type metadata accessor for RestoreAppStoreAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009845C8);
  }
  return result;
}

uint64_t sub_10010E424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10010E478();

  return AsyncActionImplementation.perform(_:asPartOf:)(a1, a2, a3, v6);
}

unint64_t sub_10010E478()
{
  unint64_t result = qword_1009845D0;
  if (!qword_1009845D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1009845D0);
  }
  return result;
}

uint64_t sub_10010E4CC()
{
  type metadata accessor for LogMessage.StringInterpolation();
  v0[19] = swift_task_alloc();
  uint64_t v1 = type metadata accessor for OSLogger();
  v0[20] = v1;
  v0[21] = *(void *)(v1 - 8);
  v0[22] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for UUID();
  v0[23] = v2;
  v0[24] = *(void *)(v2 - 8);
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  return _swift_task_switch(sub_10010E620, 0, 0);
}

uint64_t sub_10010E620()
{
  uint64_t v1 = v0[25];
  id v2 = objc_allocWithZone((Class)ASDSystemAppMetadata);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 initWithBundleID:v3];
  v0[27] = v4;

  [v4 setUserInitiated:1];
  uint64_t v5 = self;
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_10010E7A0;
  uint64_t v6 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10010E1BC;
  v0[13] = &unk_1008BD0C8;
  v0[14] = v6;
  [v5 installApp:v4 withCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10010E7A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 224) = v1;
  if (v1) {
    id v2 = sub_10010EB68;
  }
  else {
    id v2 = sub_10010E8B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10010E8B0()
{
  uint64_t v1 = (void *)v0[27];
  (*(void (**)(void, void, void))(v0[24] + 32))(v0[26], v0[25], v0[23]);

  if (qword_10097E0D0 != -1) {
    swift_once();
  }
  uint64_t v12 = v0[26];
  uint64_t v13 = (void *)v0[27];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  uint64_t v14 = v0[23];
  uint64_t v5 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = sub_100087728(v5, (uint64_t)qword_1009845A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x8000000100807810;
  v7._countAndFlagsBits = 0xD000000000000036;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  v0[18] = v14;
  uint64_t v8 = sub_1000808B8(v0 + 15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 16))(v8, v12, v14);
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100082BCC((uint64_t)(v0 + 15), (uint64_t *)&unk_100982B40);
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  LogMessage.init(stringInterpolation:)();
  Logger.info(_:)();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10010EB68()
{
  uint64_t v1 = *(void **)(v0 + 216);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10010EC18(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_100082C28(&qword_100984600);
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_100082C28(&qword_100984608);
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_10010ED4C, 0, 0);
}

uint64_t sub_10010ED4C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_100081D90(v1, v1[3]);
  if (dispatch thunk of AppStoreInstallStateMonitor.appStoreInstalled.getter())
  {
    if (qword_10097E0D0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for OSLogger();
    sub_100087728(v2, (uint64_t)qword_1009845A0);
    sub_100082C28((uint64_t *)&unk_100984540);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
    LogMessage.init(stringLiteral:)();
    Logger.info(_:)();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    if (qword_10097E0D0 != -1) {
      swift_once();
    }
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v8 = *(void **)(v0 + 16);
    uint64_t v9 = type metadata accessor for OSLogger();
    *(void *)(v0 + 80) = v9;
    *(void *)(v0 + 88) = sub_100087728(v9, (uint64_t)qword_1009845A0);
    *(void *)(v0 + 96) = sub_100082C28((uint64_t *)&unk_100984540);
    uint64_t v10 = *(void *)(type metadata accessor for LogMessage() - 8);
    *(void *)(v0 + 104) = *(void *)(v10 + 72);
    *(_DWORD *)(v0 + 120) = *(_DWORD *)(v10 + 80);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
    LogMessage.init(stringLiteral:)();
    Logger.info(_:)();
    swift_bridgeObjectRelease();
    sub_100081D90(v8, v1[3]);
    dispatch thunk of AppStoreInstallStateMonitor.onAppStoreInstallStateChange.getter();
    sub_100082C28(&qword_100991F10);
    sub_1000DD560((unint64_t *)&qword_1009AA850, &qword_100991F10);
    EventEmitter.asyncStream.getter();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v14, v5, v6);
    sub_1000DD560(&qword_100984610, &qword_100984608);
    dispatch thunk of AsyncSequence.makeAsyncIterator()();
    uint64_t v11 = sub_1000DD560(&qword_100984618, &qword_100984600);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v12;
    void *v12 = v0;
    v12[1] = sub_10010F1DC;
    uint64_t v13 = *(void *)(v0 + 24);
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 124, v13, v11);
  }
}

uint64_t sub_10010F1DC()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[5];
    uint64_t v4 = v2[3];
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2[4] + 8);
    return v5(v3, v4);
  }
  else
  {
    return _swift_task_switch(sub_10010F310, 0, 0);
  }
}

uint64_t sub_10010F310()
{
  int v1 = *(unsigned __int8 *)(v0 + 124);
  if (v1 != 2)
  {
    if ((v1 & 1) == 0)
    {
      uint64_t v2 = sub_1000DD560(&qword_100984618, &qword_100984600);
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v3;
      void *v3 = v0;
      v3[1] = sub_10010F1DC;
      uint64_t v4 = *(void *)(v0 + 24);
      return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 124, v4, v2);
    }
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
    LogMessage.init(stringLiteral:)();
    Logger.info(_:)();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  (*(void (**)(void, void))(*(void *)(v0 + 32) + 8))(*(void *)(v0 + 40), *(void *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10010F4F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore28ScreenshotCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  return sub_1000E70A0(v3, a1);
}

uint64_t sub_10010F54C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore28ScreenshotCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  sub_1000E7038(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_10010F5AC())()
{
  return j__swift_endAccess;
}

uint64_t sub_10010F610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_10010F694()
{
  uint64_t v1 = type metadata accessor for Shelf.ContentsMetadata();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ProductMediaMetadata();
  uint64_t v16 = *(void *)(v9 - 8);
  uint64_t v17 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ProductMediaItem();
  sub_10010F9D4();
  uint64_t result = ItemLayoutContext.typedModel<A>(as:)();
  if (v18)
  {
    uint64_t v15 = v0;
    swift_getKeyPath();
    ItemLayoutContext.subscript.getter();
    swift_release();
    swift_getKeyPath();
    ReadOnlyLens.subscript.getter();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == enum case for Shelf.ContentsMetadata.productMedia(_:))
    {
      (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
      uint64_t v14 = v16;
      uint64_t v13 = v17;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v4, v17);
      *(void *)(*(void *)(v15 + OBJC_IVAR____TtC8AppStore28ScreenshotCollectionViewCell_borderedScreenshotView)
                + OBJC_IVAR____TtC8AppStore22BorderedScreenshotView_platform) = ProductMediaMetadata.platform.getter();
      swift_retain();
      swift_release();
      sub_100643254();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    }
    else
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  return result;
}

unint64_t sub_10010F9D4()
{
  unint64_t result = qword_100984628;
  if (!qword_100984628)
  {
    type metadata accessor for ProductMediaItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100984628);
  }
  return result;
}

uint64_t sub_10010FA34(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
    if (!v4) {
      return (uint64_t)v5;
    }
    uint64_t v32 = _swiftEmptyArrayStorage;
    uint64_t result = sub_1001295A0(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    v19[1] = v2;
    uint64_t v7 = 0;
    uint64_t v5 = v32;
    uint64_t v26 = 0x3FF0000000000000;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0x3FF0000000000000;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      [v8 transform];
      long long v23 = v20;
      long long v24 = v21;
      long long v25 = v22;
      if (static CGAffineTransform.== infix(_:_:)())
      {
        *((void *)&v21 + 1) = sub_10003A33C();
        *(void *)&long long v22 = &protocol witness table for UIView;
        *(void *)&long long v20 = v9;
      }
      else
      {
        UIView.withUntransformedFrame.getter();
      }
      uint64_t v32 = v5;
      unint64_t v11 = v5[2];
      unint64_t v10 = v5[3];
      if (v11 >= v10 >> 1) {
        sub_1001295A0(v10 > 1, v11 + 1, 1);
      }
      ++v7;
      uint64_t v12 = *((void *)&v21 + 1);
      uint64_t v13 = v22;
      uint64_t v14 = sub_100071F4C((uint64_t)&v20, *((uint64_t *)&v21 + 1));
      uint64_t v2 = v19;
      __n128 v15 = __chkstk_darwin(v14);
      uint64_t v17 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v18 + 16))(v17, v15);
      sub_10012C20C(v11, (uint64_t)v17, (uint64_t *)&v32, v12, v13);
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v20);
      uint64_t v5 = v32;
      if (v4 == v7) {
        return (uint64_t)v5;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_10010FC9C()
{
  qword_100984630 = 0xBFE0C152382D7365;
}

int64x2_t sub_10010FCB8()
{
  if (qword_10097E0D8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_100984630;
  qword_1009E1168 = 0;
  swift_weakInit();
  qword_1009E1178 = 0;
  unk_1009E1180 = 0;
  int64x2_t result = vdupq_n_s64(0x404A000000000000uLL);
  byte_1009E1188 = 1;
  xmmword_1009E1140 = (__int128)result;
  *(_OWORD *)algn_1009E1150 = xmmword_1007C0F50;
  qword_1009E1160 = v0;
  return result;
}

uint64_t sub_10010FD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001112F4(a1, a2);
}

id sub_10010FDC4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews] = _swiftEmptyArrayStorage;
  uint64_t v10 = OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  uint64_t v11 = qword_10097E0E0;
  uint64_t v12 = v4;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = &v12[v10];
  sub_1001129A0((uint64_t)&xmmword_1009E1140, (uint64_t)&v27);
  uint64_t v14 = v28;
  *((void *)v13 + 5) = &type metadata for CGFloat;
  *((void *)v13 + 6) = &protocol witness table for CGFloat;
  *((void *)v13 + 2) = v14;
  char v15 = v33;
  *(_OWORD *)uint64_t v13 = v27;
  *(_OWORD *)(v13 + 56) = v29;
  *(_OWORD *)(v13 + 72) = v32;
  v13[88] = v15;
  sub_1001129D8((uint64_t)&v27);
  sub_1001129A0((uint64_t)&xmmword_1009E1140, (uint64_t)&v12[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config]);

  v40.receiver = v12;
  v40.super_class = ObjectType;
  id v16 = [super initWithFrame:a1, a2, a3, a4];
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v20 = v16;
  [v20 setLayoutMargins:UIEdgeInsetsZero.top, left, bottom, right];
  [v20 setClipsToBounds:1];
  uint64_t v21 = (uint64_t)v20 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config;
  swift_beginAccess();
  uint64_t v22 = sub_1001129A0(v21, (uint64_t)&v35);
  __chkstk_darwin(v22);
  sub_100112A1C();
  Copyable.copyWithOverrides(in:)();
  sub_1001129D8((uint64_t)&v35);
  swift_beginAccess();
  sub_100112A70((uint64_t)&v27, v21);
  swift_endAccess();
  sub_1001129A0(v21, (uint64_t)&v35);
  uint64_t v23 = v36;
  uint64_t v30 = &type metadata for CGFloat;
  uint64_t v31 = &protocol witness table for CGFloat;
  long long v26 = v35;

  uint64_t v28 = v23;
  long long v27 = v26;
  long long v32 = v37;
  long long v33 = v38;
  char v34 = v39;
  sub_1001129D8((uint64_t)&v35);
  uint64_t v24 = (uint64_t)v20 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  swift_beginAccess();
  sub_100112AA8((uint64_t)&v27, v24);
  swift_endAccess();
  return v20;
}

id sub_100110148(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews;
  unint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v5 = (uint64_t)result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_23;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v9 = v8;
    [v8 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease();
  *(void *)&v1[v3] = a1;
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)&v1[v3];
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = (uint64_t)result;
    if (result)
    {
LABEL_12:
      if (v11 >= 1)
      {
        for (uint64_t j = 0; j != v11; ++j)
        {
          if ((v10 & 0xC000000000000001) != 0) {
            id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v13 = *(id *)(v10 + 8 * j + 32);
          }
          uint64_t v14 = v13;
          [v1 addSubview:v13];
        }
        goto LABEL_19;
      }
LABEL_23:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_12;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();

  return [v1 setNeedsLayout];
}

uint64_t sub_100110308()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config;
  swift_beginAccess();
  sub_1001129A0(v1, (uint64_t)&v11);
  uint64_t v6 = &type metadata for CGFloat;
  uint64_t v7 = &protocol witness table for CGFloat;
  uint64_t v5 = v12;
  long long v4 = v11;
  long long v8 = v13;
  long long v9 = v14;
  char v10 = v15;
  sub_1001129D8((uint64_t)&v11);
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  swift_beginAccess();
  sub_100112B04((uint64_t)&v4, v2);
  swift_endAccess();
  [v0 setNeedsLayout];
  return sub_1001128F4((uint64_t)&v4);
}

id sub_100110520()
{
  uint64_t v1 = OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews;
  type metadata accessor for ArtworkView();
  swift_bridgeObjectRetain();
  char v2 = Array.isNotEmpty.getter();
  id result = (id)swift_bridgeObjectRelease();
  if (v2)
  {
    swift_beginAccess();
    if (!swift_weakLoadStrong()) {
      return sub_100110148((uint64_t)_swiftEmptyArrayStorage);
    }
    unint64_t v4 = *(void *)(v0 + v1);
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v5 = (uint64_t)result;
      if (result) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_5:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * v6 + 32);
          }
          long long v8 = v7;
          ++v6;
          sub_100112948();
          ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)();
        }
        while (v5 != v6);
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return sub_100110148((uint64_t)_swiftEmptyArrayStorage);
  }
  return result;
}

void sub_100110690(CGFloat a1, CGFloat a2)
{
  if (a1 <= 0.0) {
    return;
  }
  if (a2 <= 0.0) {
    return;
  }
  uint64_t v5 = v2 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config;
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return;
  }
  unint64_t v6 = *(void *)(v5 + 40);
  if (!v6)
  {
LABEL_28:
    swift_release();
    return;
  }
  type metadata accessor for Artwork();
  swift_bridgeObjectRetain();
  if ((Array.isNotEmpty.getter() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = v2 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  swift_beginAccess();
  sub_100112844(v7, (uint64_t)v16);
  uint64_t v8 = sub_100111350((uint64_t)v16, 0.0, 0.0, a1, a2)[2];
  swift_bridgeObjectRelease();
  sub_1001128F4((uint64_t)v16);
  uint64_t v15 = v8;
  v16[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (!v8)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    sub_100110148(v16[0]);
    goto LABEL_28;
  }
  uint64_t v9 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v6 >> 62) {
    goto LABEL_34;
  }
  uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    type metadata accessor for ArtworkView();
    if (!v10) {
      break;
    }
    if ((v6 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = 0;
      while (1)
      {
        id v12 = (id)static ArtworkView.iconArtworkView.getter();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v16[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        uint64_t v9 = v11 + 0x8000000000000000;
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        if (v11 == 0x8000000000000000 && v10 == -1) {
          break;
        }
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        Artwork.config(using:)();
        sub_100112948();
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();

        swift_unknownObjectRelease();
        swift_release();
        if (v15 == ++v11) {
          goto LABEL_27;
        }
      }
LABEL_32:
      __break(1u);
    }
    else
    {
      uint64_t v14 = v9;
      uint64_t v9 = 0;
      while (1)
      {
        id v13 = (id)static ArtworkView.iconArtworkView.getter();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v16[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        if (v9 == 0x8000000000000000 && v10 == -1) {
          break;
        }
        if (v9 % v10 < 0)
        {
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        if ((unint64_t)(v9 % v10) >= *(void *)(v14 + 16)) {
          goto LABEL_31;
        }
        ++v9;
        swift_retain();
        Artwork.config(using:)();
        sub_100112948();
        ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();

        swift_release();
        swift_release();
        if (v15 == v9) {
          goto LABEL_27;
        }
      }
    }
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
}

uint64_t sub_100110A50()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for LayoutRect();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  *(void *)&CGFloat d = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38.receiver = v1;
  v38.super_class = ObjectType;
  [super layoutSubviews:v5];
  [v1 bounds];
  CGFloat x = v39.origin.x;
  CGFloat y = v39.origin.y;
  CGFloat width = v39.size.width;
  CGFloat height = v39.size.height;
  uint64_t result = CGRectIsEmpty(v39);
  if ((result & 1) == 0)
  {
    tCGFloat x = *(double *)&OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews;
    unint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews];
    if (v14 >> 62) {
      goto LABEL_21;
    }
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        *(CGFloat *)&long long v32 = d;
        *(void *)&long long v33 = v4;
        *(void *)&long long v34 = v3;
        CGFloat v31 = tx;
        unint64_t v15 = swift_bridgeObjectRetain();
        CGFloat d = COERCE_DOUBLE(sub_10010FA34(v15));
        swift_bridgeObjectRelease();
        uint64_t v16 = (uint64_t)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics];
        swift_beginAccess();
        sub_100112844(v16, (uint64_t)v36);
        CGFloat v37 = d;
        uint64_t v17 = sub_100111350((uint64_t)v36, x, y, width, height);
        uint64_t v18 = v17;
        uint64_t v19 = *(void *)(*(void *)&d + 16);
        if (!v19)
        {
LABEL_12:
          swift_bridgeObjectRelease();
          uint64_t v22 = v32;
          LayoutRect.init(representing:)();
          (*(void (**)(uint64_t, void))(v33 + 8))(v22, v34);
          uint64_t v23 = (CGFloat *)&v1[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config];
          swift_beginAccess();
          CGAffineTransformMakeRotation(&v35, v23[4]);
          long long v34 = *(_OWORD *)&v35.a;
          long long v33 = *(_OWORD *)&v35.c;
          long long v32 = *(_OWORD *)&v35.tx;
          unint64_t v24 = *(void *)&v1[*(void *)&v31];
          if (v24 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t result = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v25 = result;
            if (result)
            {
LABEL_14:
              if (v25 < 1)
              {
                __break(1u);
                return result;
              }
              uint64_t v26 = 0;
              do
              {
                if ((v24 & 0xC000000000000001) != 0) {
                  id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v27 = *(id *)(v24 + 8 * v26 + 32);
                }
                uint64_t v28 = v27;
                ++v26;
                *(_OWORD *)&v35.a = v34;
                *(_OWORD *)&v35.c = v33;
                *(_OWORD *)&v35.tCGFloat x = v32;
                [v27 setTransform:&v35];
              }
              while (v25 != v26);
            }
          }
          else
          {
            uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
            uint64_t result = swift_bridgeObjectRetain();
            if (v25) {
              goto LABEL_14;
            }
          }
          swift_bridgeObjectRelease();
          return sub_1001128A0((uint64_t)v36);
        }
        unint64_t v20 = 0;
        unint64_t v21 = v17[2];
        uint64_t v3 = (uint64_t)(v17 + 7);
        uint64_t v4 = 32;
        while (1)
        {
          if (v20 >= v21) {
            goto LABEL_7;
          }
          if (v20 >= *(void *)(*(void *)&v37 + 16)) {
            break;
          }
          sub_100082C6C(*(void *)&v37 + v4, (uint64_t)&v35);
          CGFloat d = v35.d;
          tCGFloat x = v35.tx;
          sub_100081D90(&v35, *(uint64_t *)&v35.d);
          if (v20 >= v18[2])
          {
            __break(1u);
            goto LABEL_12;
          }
          dispatch thunk of LayoutView.frame.setter();
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v35);
LABEL_7:
          ++v20;
          v3 += 32;
          v4 += 40;
          if (v19 == v20) {
            goto LABEL_12;
          }
        }
        __break(1u);
LABEL_21:
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
      }
      while (v29);
    }
  }
  return result;
}

uint64_t sub_100110F4C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2;
  uint64_t result = swift_weakAssign();
  *(double *)(a1 + 56) = a3;
  *(double *)(a1 + 64) = a4;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

uint64_t type metadata accessor for IconArtworkGridView()
{
  return self;
}

uint64_t destroy for IconArtworkGridView.Config()
{
  swift_bridgeObjectRelease();

  return swift_weakDestroy();
}

uint64_t initializeWithCopy for IconArtworkGridView.Config(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_weakCopyInit();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for IconArtworkGridView.Config(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_weakCopyAssign();
  long long v4 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v4;
  return a1;
}

uint64_t initializeWithTake for IconArtworkGridView.Config(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_weakTakeInit();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for IconArtworkGridView.Config(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_weakTakeAssign();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconArtworkGridView.Config(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IconArtworkGridView.Config(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IconArtworkGridView.Config()
{
  return &type metadata for IconArtworkGridView.Config;
}

uint64_t sub_1001112F4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 40);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(void *)(a2 + 40) = v4;
  swift_weakTakeInit();
  long long v5 = *(_OWORD *)(a1 + 56);
  *(unsigned char *)(a2 + 72) = *(unsigned char *)(a1 + 72);
  *(_OWORD *)(a2 + 56) = v5;
  return a2;
}

void *sub_100111350(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v174 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v203 = *(double *)(a1 + 64);
  CGAffineTransformMakeRotation(&v204, v203);
  v205.origin.CGFloat x = a4 * -0.5;
  v205.origin.CGFloat y = a5 * -0.5;
  v205.size.CGFloat width = a4;
  v205.size.CGFloat height = a5;
  CGRect v206 = CGRectApplyAffineTransform(v205, &v204);
  CGFloat x = v206.origin.x;
  CGFloat y = v206.origin.y;
  CGFloat width = v206.size.width;
  CGFloat v202 = v206.size.width;
  CGFloat height = v206.size.height;
  CGFloat v198 = v206.size.height;
  double MinX = CGRectGetMinX(v206);
  CGFloat v193 = a2;
  v207.origin.CGFloat x = a2;
  CGFloat v194 = a3;
  v207.origin.CGFloat y = a3;
  v207.size.CGFloat width = a4;
  v207.size.CGFloat height = a5;
  CGFloat v195 = a5;
  double v200 = MinX + CGRectGetMidX(v207);
  v208.origin.CGFloat x = x;
  v208.origin.CGFloat y = y;
  v208.size.CGFloat width = width;
  v208.size.CGFloat height = height;
  double MinY = CGRectGetMinY(v208);
  v209.origin.CGFloat x = a2;
  v209.origin.CGFloat y = a3;
  v209.size.CGFloat width = a4;
  v209.size.CGFloat height = a5;
  double MinX = MinY + CGRectGetMidY(v209);
  double v19 = *(double *)a1;
  double v20 = *(double *)(a1 + 8);
  CGAffineTransformMakeRotation(&v204, v203);
  v210.origin.CGFloat x = v19 * -0.5;
  v210.origin.CGFloat y = v20 * -0.5;
  v210.size.CGFloat width = v19;
  v210.size.CGFloat height = v20;
  CGRect v211 = CGRectApplyAffineTransform(v210, &v204);
  CGFloat v21 = v211.origin.x;
  CGFloat v22 = v211.origin.y;
  CGFloat v23 = v211.size.width;
  CGFloat v24 = v211.size.height;
  double v25 = CGRectGetMinX(v211);
  v212.origin.CGFloat x = 0.0;
  v212.origin.CGFloat y = 0.0;
  v212.size.CGFloat width = v19;
  v212.size.CGFloat height = v20;
  double v197 = v25 + CGRectGetMidX(v212);
  v213.origin.CGFloat x = v21;
  v213.origin.CGFloat y = v22;
  v213.size.CGFloat width = v23;
  v213.size.CGFloat height = v24;
  double v26 = CGRectGetMinY(v213);
  v214.origin.CGFloat x = 0.0;
  v214.origin.CGFloat y = 0.0;
  CGFloat v191 = v19;
  v214.size.CGFloat width = v19;
  CGFloat v190 = v20;
  v214.size.CGFloat height = v20;
  CGFloat v27 = v26 + CGRectGetMidY(v214);
  sub_100081D90((void *)(a1 + 16), *(void *)(a1 + 40));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  double v29 = v28;
  CGFloat v189 = v28;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  double v30 = v29 + *(double *)a1;
  CGFloat sinval = floor(*(double *)(a1 + 56) * v30);
  CGFloat v31 = v193;
  v215.origin.CGFloat x = v193;
  CGFloat v32 = v194;
  v215.origin.CGFloat y = v194;
  v215.size.CGFloat width = a4;
  CGFloat v33 = v195;
  v215.size.CGFloat height = v195;
  CGFloat MidX = CGRectGetMidX(v215);
  v216.origin.CGFloat x = v31;
  v216.origin.CGFloat y = v32;
  CGFloat v192 = a4;
  v216.size.CGFloat width = a4;
  v216.size.CGFloat height = v33;
  double MidY = CGRectGetMidY(v216);
  double v35 = *(double *)(a1 + 64);
  __double2 v36 = __sincos_stret(v35);
  double v185 = v30 * v36.__cosval;
  double v184 = v30 * v36.__sinval;
  __double2 v37 = __sincos_stret(v35 + 3.14159265);
  double v188 = v30 * v37.__cosval;
  double v187 = v30 * v37.__sinval;
  CGFloat v178 = sinval * v36.__cosval;
  CGFloat v177 = sinval * v36.__sinval;
  double v176 = v35;
  __double2 v38 = __sincos_stret(v35 + 1.57079633);
  CGFloat sinval = v38.__sinval;
  double cosval = v38.__cosval;
  double v39 = v189 + *(double *)(a1 + 8);
  CGFloat v40 = v197;
  v217.origin.CGFloat x = v197;
  v217.origin.CGFloat y = v27;
  v217.size.CGFloat width = v23;
  v217.size.CGFloat height = v24;
  CGFloat v41 = MidX + CGRectGetMidX(v217);
  v218.origin.CGFloat x = v40;
  v218.origin.CGFloat y = v27;
  v218.size.CGFloat width = v23;
  v218.size.CGFloat height = v24;
  CGFloat v42 = v41 + CGRectGetWidth(v218) * -0.5;
  v219.origin.CGFloat x = v40;
  v219.origin.CGFloat y = v27;
  v219.size.CGFloat width = v23;
  v219.size.CGFloat height = v24;
  CGFloat v43 = CGRectGetMidY(v219);
  CGFloat v179 = MidY;
  double v44 = MidY + v43;
  v220.origin.CGFloat x = v40;
  CGFloat v199 = v27;
  v220.origin.CGFloat y = v27;
  v220.size.CGFloat width = v23;
  v220.size.CGFloat height = v24;
  v221.origin.CGFloat y = v44 + CGRectGetHeight(v220) * -0.5;
  v297.origin.CGFloat y = MinX;
  v297.size.CGFloat width = v202;
  v221.origin.CGFloat x = v42;
  v221.size.CGFloat width = v23;
  v221.size.CGFloat height = v24;
  v297.origin.CGFloat x = v200;
  v297.size.CGFloat height = v198;
  BOOL v45 = CGRectIntersectsRect(v221, v297);
  double v175 = v39;
  CGFloat v203 = v23;
  CGFloat v196 = v24;
  if (v45)
  {
    CGFloat v182 = v178 + cosval * v39;
    CGFloat v181 = v177 + sinval * v39;
    id v46 = _swiftEmptyArrayStorage;
    double v47 = 0.5;
    double v48 = MidX;
    CGFloat v189 = v179;
    CGFloat v49 = v197;
    CGFloat v50 = v198;
    CGFloat v51 = v199;
    do
    {
      v227.origin.CGFloat x = v49;
      v227.origin.CGFloat y = v51;
      v227.size.CGFloat width = v23;
      v227.size.CGFloat height = v24;
      double v58 = v48 + CGRectGetMidX(v227);
      v228.origin.CGFloat x = v49;
      v228.origin.CGFloat y = v51;
      v228.size.CGFloat width = v23;
      v228.size.CGFloat height = v24;
      double v59 = v58 - CGRectGetWidth(v228) * v47;
      v229.origin.CGFloat x = v49;
      v229.origin.CGFloat y = v51;
      v229.size.CGFloat width = v23;
      v229.size.CGFloat height = v24;
      CGFloat sinval = v189 + CGRectGetMidY(v229);
      v230.origin.CGFloat x = v49;
      v230.origin.CGFloat y = v51;
      v230.size.CGFloat width = v23;
      v230.size.CGFloat height = v24;
      double v60 = sinval - CGRectGetHeight(v230) * v47;
      v231.origin.CGFloat x = v59;
      v231.origin.CGFloat y = v60;
      v231.size.CGFloat width = v23;
      v231.size.CGFloat height = v24;
      v299.origin.CGFloat x = v200;
      v299.origin.CGFloat y = MinX;
      v299.size.CGFloat width = v202;
      v299.size.CGFloat height = v50;
      BOOL v61 = CGRectIntersectsRect(v231, v299);
      double cosval = v48;
      if (v61)
      {
        CGFloat sinval = v48;
        double v62 = v189;
        do
        {
          v237.origin.CGFloat x = v59;
          v237.origin.CGFloat y = v60;
          v237.size.CGFloat width = v23;
          v237.size.CGFloat height = v24;
          v301.origin.CGFloat x = v193;
          v301.origin.CGFloat y = v194;
          v301.size.CGFloat width = v192;
          v301.size.CGFloat height = v195;
          if (CGRectIntersectsRect(v237, v301))
          {
            v238.origin.CGFloat x = 0.0;
            v238.origin.CGFloat y = 0.0;
            CGFloat v73 = v191;
            v238.size.CGFloat width = v191;
            CGFloat v74 = v190;
            v238.size.CGFloat height = v190;
            double v75 = CGRectGetMidX(v238);
            v239.origin.CGFloat x = 0.0;
            v239.origin.CGFloat y = 0.0;
            v239.size.CGFloat width = v73;
            v239.size.CGFloat height = v74;
            double v76 = CGRectGetWidth(v239);
            v240.origin.CGFloat x = 0.0;
            v240.origin.CGFloat y = 0.0;
            v240.size.CGFloat width = v73;
            v240.size.CGFloat height = v74;
            double v77 = CGRectGetMidY(v240);
            v241.origin.CGFloat x = 0.0;
            v241.origin.CGFloat y = 0.0;
            v241.size.CGFloat width = v73;
            v241.size.CGFloat height = v74;
            double v78 = CGRectGetHeight(v241);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v46 = sub_1000ABA60(0, v46[2] + 1, 1, v46);
            }
            unint64_t v80 = v46[2];
            unint64_t v79 = v46[3];
            double v64 = sinval;
            if (v80 >= v79 >> 1) {
              id v46 = sub_1000ABA60((void *)(v79 > 1), v80 + 1, 1, v46);
            }
            double v63 = 0.5;
            void v46[2] = v80 + 1;
            double v81 = (double *)&v46[4 * v80];
            v81[4] = v64 + v75 - v76 * 0.5;
            v81[5] = v62 + v77 - v78 * 0.5;
            CGFloat v82 = v190;
            v81[6] = v191;
            v81[7] = v82;
          }
          else
          {
            double v63 = 0.5;
            double v64 = sinval;
          }
          CGFloat v65 = v185 + v64;
          double v62 = v184 + v62;
          CGFloat v24 = v196;
          CGFloat v66 = v197;
          v232.origin.CGFloat x = v197;
          CGFloat v67 = v199;
          v232.origin.CGFloat y = v199;
          CGFloat v23 = v203;
          v232.size.CGFloat width = v203;
          v232.size.CGFloat height = v196;
          CGFloat v68 = CGRectGetMidX(v232);
          CGFloat sinval = v65;
          CGFloat v69 = v65 + v68;
          v233.origin.CGFloat x = v66;
          v233.origin.CGFloat y = v67;
          v233.size.CGFloat width = v23;
          v233.size.CGFloat height = v24;
          double v59 = v69 - CGRectGetWidth(v233) * v63;
          v234.origin.CGFloat x = v66;
          v234.origin.CGFloat y = v67;
          v234.size.CGFloat width = v23;
          v234.size.CGFloat height = v24;
          double v70 = v62 + CGRectGetMidY(v234);
          v235.origin.CGFloat x = v66;
          v235.origin.CGFloat y = v67;
          v235.size.CGFloat width = v23;
          v235.size.CGFloat height = v24;
          double v60 = v70 - CGRectGetHeight(v235) * v63;
          v236.origin.CGFloat x = v59;
          v236.origin.CGFloat y = v60;
          v236.size.CGFloat width = v23;
          v236.size.CGFloat height = v24;
          v300.origin.CGFloat x = v200;
          v300.origin.CGFloat y = MinX;
          v300.size.CGFloat width = v202;
          v300.size.CGFloat height = v198;
          BOOL v71 = CGRectIntersectsRect(v236, v300);
          double v48 = cosval;
          double v72 = v189;
        }
        while (v71);
      }
      else
      {
        double v72 = v189;
      }
      double v83 = v188 + v48;
      double v84 = v187 + v72;
      v242.size.CGFloat height = v196;
      CGFloat v85 = v197;
      v242.origin.CGFloat x = v197;
      CGFloat v86 = v199;
      v242.origin.CGFloat y = v199;
      v242.size.CGFloat width = v23;
      double v87 = v83 + CGRectGetMidX(v242);
      v243.origin.CGFloat x = v85;
      v243.origin.CGFloat y = v86;
      v243.size.CGFloat width = v23;
      v243.size.CGFloat height = v196;
      double v88 = v87 - CGRectGetWidth(v243) * 0.5;
      v244.origin.CGFloat x = v85;
      v244.origin.CGFloat y = v86;
      v244.size.CGFloat width = v23;
      v244.size.CGFloat height = v196;
      double v89 = v84 + CGRectGetMidY(v244);
      v245.origin.CGFloat x = v85;
      v245.origin.CGFloat y = v86;
      CGFloat v24 = v196;
      v245.size.CGFloat width = v23;
      v245.size.CGFloat height = v196;
      double v90 = v89 - CGRectGetHeight(v245) * 0.5;
      v246.origin.CGFloat x = v88;
      v246.origin.CGFloat y = v90;
      v246.size.CGFloat width = v23;
      v246.size.CGFloat height = v24;
      v302.origin.CGFloat x = v200;
      v302.origin.CGFloat y = MinX;
      v302.size.CGFloat width = v202;
      v302.size.CGFloat height = v198;
      if (CGRectIntersectsRect(v246, v302))
      {
        do
        {
          v252.origin.CGFloat x = v88;
          v252.origin.CGFloat y = v90;
          v252.size.CGFloat width = v23;
          v252.size.CGFloat height = v24;
          v304.origin.CGFloat x = v193;
          v304.origin.CGFloat y = v194;
          v304.size.CGFloat width = v192;
          v304.size.CGFloat height = v195;
          if (CGRectIntersectsRect(v252, v304))
          {
            v253.origin.CGFloat x = 0.0;
            v253.origin.CGFloat y = 0.0;
            CGFloat v99 = v191;
            v253.size.CGFloat width = v191;
            CGFloat v100 = v190;
            v253.size.CGFloat height = v190;
            double v101 = CGRectGetMidX(v253);
            v254.origin.CGFloat x = 0.0;
            v254.origin.CGFloat y = 0.0;
            v254.size.CGFloat width = v99;
            v254.size.CGFloat height = v100;
            double v102 = CGRectGetWidth(v254);
            v255.origin.CGFloat x = 0.0;
            v255.origin.CGFloat y = 0.0;
            v255.size.CGFloat width = v99;
            v255.size.CGFloat height = v100;
            CGFloat sinval = CGRectGetMidY(v255);
            v256.origin.CGFloat x = 0.0;
            v256.origin.CGFloat y = 0.0;
            v256.size.CGFloat width = v99;
            v256.size.CGFloat height = v100;
            double v103 = CGRectGetHeight(v256);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v46 = sub_1000ABA60(0, v46[2] + 1, 1, v46);
            }
            unint64_t v105 = v46[2];
            unint64_t v104 = v46[3];
            if (v105 >= v104 >> 1) {
              id v46 = sub_1000ABA60((void *)(v104 > 1), v105 + 1, 1, v46);
            }
            double v92 = 0.5;
            double v106 = v84 + sinval - v103 * 0.5;
            void v46[2] = v105 + 1;
            Class v107 = (double *)&v46[4 * v105];
            v107[4] = v83 + v101 - v102 * 0.5;
            v107[5] = v106;
            CGFloat v108 = v190;
            v107[6] = v191;
            v107[7] = v108;
          }
          else
          {
            double v92 = 0.5;
          }
          double v83 = v188 + v83;
          double v84 = v187 + v84;
          CGFloat v93 = v197;
          v247.origin.CGFloat x = v197;
          CGFloat v94 = v199;
          v247.origin.CGFloat y = v199;
          v247.size.CGFloat width = v23;
          CGFloat v95 = v196;
          v247.size.CGFloat height = v196;
          double v96 = v83 + CGRectGetMidX(v247);
          v248.origin.CGFloat x = v93;
          v248.origin.CGFloat y = v94;
          v248.size.CGFloat width = v203;
          v248.size.CGFloat height = v95;
          double v88 = v96 - CGRectGetWidth(v248) * v92;
          v249.origin.CGFloat x = v93;
          v249.origin.CGFloat y = v94;
          v249.size.CGFloat width = v203;
          v249.size.CGFloat height = v95;
          double v97 = v84 + CGRectGetMidY(v249);
          v250.origin.CGFloat x = v93;
          v250.origin.CGFloat y = v94;
          CGFloat v24 = v95;
          CGFloat v23 = v203;
          v250.size.CGFloat width = v203;
          v250.size.CGFloat height = v24;
          double v90 = v97 - CGRectGetHeight(v250) * v92;
          v251.origin.CGFloat x = v88;
          v251.origin.CGFloat y = v90;
          v251.size.CGFloat width = v23;
          v251.size.CGFloat height = v24;
          v303.origin.CGFloat x = v200;
          v303.origin.CGFloat y = MinX;
          v303.size.CGFloat width = v202;
          v303.size.CGFloat height = v198;
          BOOL v98 = CGRectIntersectsRect(v251, v303);
          double v91 = v189;
        }
        while (v98);
      }
      else
      {
        double v91 = v189;
      }
      double v48 = v182 + cosval;
      CGFloat v52 = v181 + v91;
      CGFloat v53 = v197;
      v222.origin.CGFloat x = v197;
      CGFloat v51 = v199;
      v222.origin.CGFloat y = v199;
      v222.size.CGFloat width = v23;
      v222.size.CGFloat height = v24;
      double v54 = v48 + CGRectGetMidX(v222);
      v223.origin.CGFloat x = v53;
      v223.origin.CGFloat y = v51;
      v223.size.CGFloat width = v23;
      v223.size.CGFloat height = v24;
      double v47 = 0.5;
      CGFloat sinval = v54 - CGRectGetWidth(v223) * 0.5;
      v224.origin.CGFloat x = v53;
      v224.origin.CGFloat y = v51;
      v224.size.CGFloat width = v23;
      v224.size.CGFloat height = v24;
      CGFloat v55 = CGRectGetMidY(v224);
      CGFloat v189 = v52;
      CGFloat v56 = v52 + v55;
      CGFloat v49 = v53;
      v225.origin.CGFloat x = v53;
      v225.origin.CGFloat y = v51;
      v225.size.CGFloat width = v23;
      v225.size.CGFloat height = v24;
      v226.origin.CGFloat y = v56 - CGRectGetHeight(v225) * 0.5;
      v226.origin.CGFloat x = sinval;
      v226.size.CGFloat width = v23;
      v226.size.CGFloat height = v24;
      CGFloat v57 = v200;
      v298.origin.CGFloat y = MinX;
      v298.origin.CGFloat x = v200;
      v298.size.CGFloat width = v202;
      CGFloat v50 = v198;
      v298.size.CGFloat height = v198;
    }
    while (CGRectIntersectsRect(v226, v298));
  }
  else
  {
    id v46 = _swiftEmptyArrayStorage;
    CGFloat v51 = v199;
    CGFloat v57 = v200;
    CGFloat v49 = v197;
  }
  __double2 v109 = __sincos_stret(v176 + -1.57079633);
  CGFloat v182 = v109.__cosval * v175 - v178;
  double v110 = MidX + v182;
  CGFloat v181 = v109.__sinval * v175 - v177;
  double v111 = v179 + v181;
  CGFloat v112 = v49;
  v257.origin.CGFloat x = v49;
  v257.origin.CGFloat y = v51;
  v257.size.CGFloat width = v23;
  v257.size.CGFloat height = v24;
  double v113 = v110 + CGRectGetMidX(v257);
  v258.origin.CGFloat x = v112;
  v258.origin.CGFloat y = v51;
  v258.size.CGFloat width = v23;
  v258.size.CGFloat height = v24;
  CGFloat v189 = v113 - CGRectGetWidth(v258) * 0.5;
  v259.origin.CGFloat x = v112;
  v259.origin.CGFloat y = v51;
  v259.size.CGFloat width = v23;
  v259.size.CGFloat height = v24;
  double v114 = v111 + CGRectGetMidY(v259);
  v260.origin.CGFloat x = v112;
  v260.origin.CGFloat y = v51;
  v260.size.CGFloat width = v23;
  v260.size.CGFloat height = v24;
  v261.origin.CGFloat y = v114 - CGRectGetHeight(v260) * 0.5;
  v261.origin.CGFloat x = v189;
  v261.size.CGFloat width = v23;
  v261.size.CGFloat height = v24;
  v305.origin.CGFloat x = v57;
  v305.origin.CGFloat y = MinX;
  v305.size.CGFloat width = v202;
  v305.size.CGFloat height = v198;
  if (CGRectIntersectsRect(v261, v305))
  {
    do
    {
      v267.origin.CGFloat x = v112;
      v267.origin.CGFloat y = v51;
      v267.size.CGFloat width = v23;
      v267.size.CGFloat height = v24;
      double v119 = v110 + CGRectGetMidX(v267);
      v268.origin.CGFloat x = v112;
      v268.origin.CGFloat y = v51;
      v268.size.CGFloat width = v23;
      v268.size.CGFloat height = v24;
      double v120 = v119 - CGRectGetWidth(v268) * 0.5;
      v269.origin.CGFloat x = v112;
      v269.origin.CGFloat y = v51;
      v269.size.CGFloat width = v23;
      v269.size.CGFloat height = v24;
      double v121 = v111 + CGRectGetMidY(v269);
      v270.origin.CGFloat x = v112;
      v270.origin.CGFloat y = v51;
      v270.size.CGFloat width = v23;
      v270.size.CGFloat height = v24;
      double v122 = v121 - CGRectGetHeight(v270) * 0.5;
      v271.origin.CGFloat x = v120;
      v271.origin.CGFloat y = v122;
      v271.size.CGFloat width = v23;
      v271.size.CGFloat height = v24;
      v307.origin.CGFloat x = v200;
      v307.origin.CGFloat y = MinX;
      v307.size.CGFloat width = v202;
      v307.size.CGFloat height = v198;
      BOOL v123 = CGRectIntersectsRect(v271, v307);
      CGFloat sinval = v110;
      double cosval = v111;
      if (v123)
      {
        CGFloat v189 = v110;
        do
        {
          v277.origin.CGFloat x = v120;
          v277.origin.CGFloat y = v122;
          v277.size.CGFloat width = v23;
          v277.size.CGFloat height = v24;
          v309.origin.CGFloat x = v193;
          v309.origin.CGFloat y = v194;
          v309.size.CGFloat width = v192;
          v309.size.CGFloat height = v195;
          if (CGRectIntersectsRect(v277, v309))
          {
            v278.origin.CGFloat x = 0.0;
            v278.origin.CGFloat y = 0.0;
            CGFloat v132 = v191;
            v278.size.CGFloat width = v191;
            CGFloat v133 = v190;
            v278.size.CGFloat height = v190;
            double v134 = CGRectGetMidX(v278);
            v279.origin.CGFloat x = 0.0;
            v279.origin.CGFloat y = 0.0;
            v279.size.CGFloat width = v132;
            v279.size.CGFloat height = v133;
            double v135 = CGRectGetWidth(v279);
            v280.origin.CGFloat x = 0.0;
            v280.origin.CGFloat y = 0.0;
            v280.size.CGFloat width = v132;
            v280.size.CGFloat height = v133;
            double v136 = CGRectGetMidY(v280);
            v281.origin.CGFloat x = 0.0;
            v281.origin.CGFloat y = 0.0;
            v281.size.CGFloat width = v132;
            v281.size.CGFloat height = v133;
            double v137 = CGRectGetHeight(v281);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v46 = sub_1000ABA60(0, v46[2] + 1, 1, v46);
            }
            unint64_t v139 = v46[2];
            unint64_t v138 = v46[3];
            double v140 = 0.5;
            double v125 = v189;
            if (v139 >= v138 >> 1)
            {
              uint64_t v145 = sub_1000ABA60((void *)(v138 > 1), v139 + 1, 1, v46);
              double v140 = 0.5;
              id v46 = v145;
            }
            double v141 = v125 + v134 - v135 * v140;
            double v142 = v111 + v136;
            double v124 = 0.5;
            void v46[2] = v139 + 1;
            uint64_t v143 = (double *)&v46[4 * v139];
            v143[4] = v141;
            v143[5] = v142 - v137 * 0.5;
            CGFloat v144 = v190;
            v143[6] = v191;
            v143[7] = v144;
          }
          else
          {
            double v124 = 0.5;
            double v125 = v189;
          }
          CGFloat v126 = v185 + v125;
          double v111 = v184 + v111;
          CGFloat v24 = v196;
          CGFloat v127 = v197;
          v272.origin.CGFloat x = v197;
          CGFloat v128 = v199;
          v272.origin.CGFloat y = v199;
          CGFloat v23 = v203;
          v272.size.CGFloat width = v203;
          v272.size.CGFloat height = v196;
          CGFloat v129 = CGRectGetMidX(v272);
          CGFloat v189 = v126;
          CGFloat v130 = v126 + v129;
          v273.origin.CGFloat x = v127;
          v273.origin.CGFloat y = v128;
          v273.size.CGFloat width = v23;
          v273.size.CGFloat height = v24;
          double v120 = v130 - CGRectGetWidth(v273) * v124;
          v274.origin.CGFloat x = v127;
          v274.origin.CGFloat y = v128;
          v274.size.CGFloat width = v23;
          v274.size.CGFloat height = v24;
          double v131 = v111 + CGRectGetMidY(v274);
          v275.origin.CGFloat x = v127;
          v275.origin.CGFloat y = v128;
          v275.size.CGFloat width = v23;
          v275.size.CGFloat height = v24;
          double v122 = v131 - CGRectGetHeight(v275) * v124;
          v276.origin.CGFloat x = v120;
          v276.origin.CGFloat y = v122;
          v276.size.CGFloat width = v23;
          v276.size.CGFloat height = v24;
          v308.origin.CGFloat x = v200;
          v308.origin.CGFloat y = MinX;
          v308.size.CGFloat width = v202;
          v308.size.CGFloat height = v198;
        }
        while (CGRectIntersectsRect(v276, v308));
      }
      double v146 = v188 + sinval;
      double v147 = v187 + cosval;
      CGFloat v148 = v197;
      v282.origin.CGFloat x = v197;
      v282.origin.CGFloat y = v199;
      v282.size.CGFloat width = v23;
      v282.size.CGFloat height = v24;
      double v149 = v146 + CGRectGetMidX(v282);
      v283.origin.CGFloat x = v148;
      v283.origin.CGFloat y = v199;
      v283.size.CGFloat width = v23;
      v283.size.CGFloat height = v24;
      double v150 = v149 - CGRectGetWidth(v283) * 0.5;
      v284.origin.CGFloat x = v148;
      v284.origin.CGFloat y = v199;
      v284.size.CGFloat width = v23;
      v284.size.CGFloat height = v24;
      double v151 = v147 + CGRectGetMidY(v284);
      v285.origin.CGFloat x = v148;
      CGFloat v51 = v199;
      v285.origin.CGFloat y = v199;
      v285.size.CGFloat width = v23;
      v285.size.CGFloat height = v24;
      double v152 = v151 - CGRectGetHeight(v285) * 0.5;
      v286.origin.CGFloat x = v150;
      v286.origin.CGFloat y = v152;
      v286.size.CGFloat width = v23;
      v286.size.CGFloat height = v24;
      v310.origin.CGFloat x = v200;
      v310.origin.CGFloat y = MinX;
      v310.size.CGFloat width = v202;
      v310.size.CGFloat height = v198;
      if (CGRectIntersectsRect(v286, v310))
      {
        CGFloat v189 = v146;
        do
        {
          v292.origin.CGFloat x = v150;
          v292.origin.CGFloat y = v152;
          v292.size.CGFloat width = v23;
          v292.size.CGFloat height = v24;
          v312.origin.CGFloat x = v193;
          v312.origin.CGFloat y = v194;
          v312.size.CGFloat width = v192;
          v312.size.CGFloat height = v195;
          if (CGRectIntersectsRect(v292, v312))
          {
            v293.origin.CGFloat x = 0.0;
            v293.origin.CGFloat y = 0.0;
            CGFloat v160 = v191;
            v293.size.CGFloat width = v191;
            CGFloat v161 = v190;
            v293.size.CGFloat height = v190;
            double v162 = CGRectGetMidX(v293);
            v294.origin.CGFloat x = 0.0;
            v294.origin.CGFloat y = 0.0;
            v294.size.CGFloat width = v160;
            v294.size.CGFloat height = v161;
            double v163 = CGRectGetWidth(v294);
            v295.origin.CGFloat x = 0.0;
            v295.origin.CGFloat y = 0.0;
            v295.size.CGFloat width = v160;
            v295.size.CGFloat height = v161;
            double v164 = CGRectGetMidY(v295);
            v296.origin.CGFloat x = 0.0;
            v296.origin.CGFloat y = 0.0;
            v296.size.CGFloat width = v160;
            v296.size.CGFloat height = v161;
            double v165 = CGRectGetHeight(v296);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v46 = sub_1000ABA60(0, v46[2] + 1, 1, v46);
            }
            unint64_t v167 = v46[2];
            unint64_t v166 = v46[3];
            double v168 = 0.5;
            double v154 = v189;
            if (v167 >= v166 >> 1)
            {
              v173 = sub_1000ABA60((void *)(v166 > 1), v167 + 1, 1, v46);
              double v168 = 0.5;
              id v46 = v173;
            }
            double v169 = v154 + v162 - v163 * v168;
            double v170 = v147 + v164;
            double v153 = 0.5;
            void v46[2] = v167 + 1;
            v171 = (double *)&v46[4 * v167];
            v171[4] = v169;
            v171[5] = v170 - v165 * 0.5;
            CGFloat v172 = v190;
            v171[6] = v191;
            v171[7] = v172;
          }
          else
          {
            double v153 = 0.5;
            double v154 = v189;
          }
          CGFloat v155 = v188 + v154;
          double v147 = v187 + v147;
          CGFloat v24 = v196;
          CGFloat v156 = v197;
          v287.origin.CGFloat x = v197;
          CGFloat v51 = v199;
          v287.origin.CGFloat y = v199;
          CGFloat v23 = v203;
          v287.size.CGFloat width = v203;
          v287.size.CGFloat height = v196;
          CGFloat v157 = CGRectGetMidX(v287);
          CGFloat v189 = v155;
          CGFloat v158 = v155 + v157;
          v288.origin.CGFloat x = v156;
          v288.origin.CGFloat y = v51;
          v288.size.CGFloat width = v23;
          v288.size.CGFloat height = v24;
          double v150 = v158 - CGRectGetWidth(v288) * v153;
          v289.origin.CGFloat x = v156;
          v289.origin.CGFloat y = v51;
          v289.size.CGFloat width = v23;
          v289.size.CGFloat height = v24;
          double v159 = v147 + CGRectGetMidY(v289);
          v290.origin.CGFloat x = v156;
          v290.origin.CGFloat y = v51;
          v290.size.CGFloat width = v23;
          v290.size.CGFloat height = v24;
          double v152 = v159 - CGRectGetHeight(v290) * v153;
          v291.origin.CGFloat x = v150;
          v291.origin.CGFloat y = v152;
          v291.size.CGFloat width = v23;
          v291.size.CGFloat height = v24;
          v311.origin.CGFloat x = v200;
          v311.origin.CGFloat y = MinX;
          v311.size.CGFloat width = v202;
          v311.size.CGFloat height = v198;
        }
        while (CGRectIntersectsRect(v291, v311));
      }
      double v110 = v182 + sinval;
      double v111 = v181 + cosval;
      CGFloat v112 = v197;
      v262.origin.CGFloat x = v197;
      v262.origin.CGFloat y = v51;
      v262.size.CGFloat width = v23;
      v262.size.CGFloat height = v24;
      double v116 = v110 + CGRectGetMidX(v262);
      v263.origin.CGFloat x = v112;
      v263.origin.CGFloat y = v51;
      v263.size.CGFloat width = v23;
      v263.size.CGFloat height = v24;
      CGFloat v117 = v116 - CGRectGetWidth(v263) * 0.5;
      v264.origin.CGFloat x = v112;
      v264.origin.CGFloat y = v51;
      v264.size.CGFloat width = v23;
      v264.size.CGFloat height = v24;
      double v118 = v111 + CGRectGetMidY(v264);
      v265.origin.CGFloat x = v112;
      v265.origin.CGFloat y = v51;
      v265.size.CGFloat width = v23;
      v265.size.CGFloat height = v24;
      v266.origin.CGFloat y = v118 - CGRectGetHeight(v265) * 0.5;
      v266.origin.CGFloat x = v117;
      v266.size.CGFloat width = v23;
      v266.size.CGFloat height = v24;
      v306.origin.CGFloat x = v200;
      v306.origin.CGFloat y = MinX;
      v306.size.CGFloat width = v202;
      v306.size.CGFloat height = v198;
    }
    while (CGRectIntersectsRect(v266, v306));
  }
  return v46;
}

void sub_100112670()
{
  *(void *)&v0[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_iconViews] = _swiftEmptyArrayStorage;
  uint64_t v1 = OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  if (qword_10097E0E0 != -1) {
    swift_once();
  }
  uint64_t v2 = &v0[v1];
  sub_1001129A0((uint64_t)&xmmword_1009E1140, (uint64_t)&v5);
  uint64_t v3 = v6;
  *((void *)v2 + 5) = &type metadata for CGFloat;
  *((void *)v2 + 6) = &protocol witness table for CGFloat;
  *((void *)v2 + 2) = v3;
  char v4 = v9;
  *(_OWORD *)uint64_t v2 = v5;
  *(_OWORD *)(v2 + 56) = v7;
  *(_OWORD *)(v2 + 72) = v8;
  v2[88] = v4;
  sub_1001129D8((uint64_t)&v5);
  sub_1001129A0((uint64_t)&xmmword_1009E1140, (uint64_t)&v0[OBJC_IVAR____TtC8AppStore19IconArtworkGridView_config]);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double sub_100112790(double a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore19IconArtworkGridView_layoutMetrics;
  swift_beginAccess();
  sub_100112844(v3, (uint64_t)v7);
  unint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100307F58(v4);
  swift_bridgeObjectRelease();
  uint64_t v10 = v5;
  if (!v9) {
    a1 = v8;
  }
  sub_1001128A0((uint64_t)v7);
  return a1;
}

uint64_t sub_100112844(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001128A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001128F4(uint64_t a1)
{
  return a1;
}

unint64_t sub_100112948()
{
  unint64_t result = qword_1009828D0;
  if (!qword_1009828D0)
  {
    type metadata accessor for ArtworkView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009828D0);
  }
  return result;
}

uint64_t sub_1001129A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001129D8(uint64_t a1)
{
  return a1;
}

__n128 sub_100112A0C(uint64_t a1)
{
  __n128 result = v1[2];
  *(__n128 *)(a1 + 56) = result;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

unint64_t sub_100112A1C()
{
  unint64_t result = qword_100984678;
  if (!qword_100984678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100984678);
  }
  return result;
}

uint64_t sub_100112A70(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100112AA8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100112B04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100112B60()
{
  return sub_100113044(&qword_100984680, (void (*)(uint64_t))type metadata accessor for MixedMediaLockupCollectionViewCell);
}

double sub_100112BA8()
{
  uint64_t v0 = type metadata accessor for ShelfLayoutContext();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter();
  double v4 = sub_100112C98();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

double sub_100112C98()
{
  uint64_t v0 = type metadata accessor for PageGrid();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100082C28(&qword_100984688);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for MixedMediaLockupLayout.Metrics();
  uint64_t v22 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  long long v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v21 - v13;
  ShelfLayoutContext.shelfPresentationHints.getter();
  static Shelf.PresentationHints.showSupplementaryText.getter();
  sub_100113044((unint64_t *)&unk_100982850, (void (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints);
  dispatch thunk of SetAlgebra.isSuperset(of:)();
  unint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  v15(v14, v8);
  uint64_t v16 = (void *)ShelfLayoutContext.traitEnvironment.getter();
  uint64_t v17 = type metadata accessor for MixedMediaLockupLayout.LockupPosition();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
  sub_10014504C(v16, (uint64_t)v5, (uint64_t)v7);
  swift_unknownObjectRelease();
  sub_10011308C((uint64_t)v5);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.componentMeasuringSize(spanning:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v2, v25);
  uint64_t v18 = ShelfLayoutContext.traitEnvironment.getter();
  double v19 = sub_1002B0AC4((uint64_t)v7, v18);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  return v19;
}

uint64_t sub_100113044(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10011308C(uint64_t a1)
{
  uint64_t v2 = sub_100082C28(&qword_100984688);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001130EC()
{
  uint64_t v1 = type metadata accessor for PageFacets.Facet.Option();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PageFacets.Facet();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PageFacetsViewController.Item(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011A9DC(v0, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = &v11[*(int *)(sub_100082C28(&qword_100984710) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v12, v1);
    Hasher._combine(_:)(1uLL);
    sub_10011AA40(&qword_1009847C8, (void (*)(uint64_t))&type metadata accessor for PageFacets.Facet);
    dispatch thunk of Hashable.hash(into:)();
    sub_10011AA40(&qword_1009847D0, (void (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    Hasher._combine(_:)(0);
    sub_10011AA40(&qword_1009847C8, (void (*)(uint64_t))&type metadata accessor for PageFacets.Facet);
    dispatch thunk of Hashable.hash(into:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int sub_100113424()
{
  return Hasher._finalize()();
}

Swift::Int sub_100113468()
{
  return Hasher._finalize()();
}

void *sub_1001134A8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = sub_100082C28(&qword_10098F020);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v11 = (uint64_t)&v3[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets];
  uint64_t v12 = type metadata accessor for PageFacets();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = &v3[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions];
  uint64_t v14 = v3;
  *(void *)uint64_t v13 = sub_10066DBC8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v14[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource] = 0;
  unint64_t v15 = &v14[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
  *(void *)unint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  *(void *)&v14[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_facetsPresenter] = a1;
  *(void *)&v14[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_objectGraph] = a3;
  swift_retain();
  swift_retain();
  PageFacetsPresenter.pageFacets.getter();
  swift_beginAccess();
  sub_10011B46C((uint64_t)v10, v11);
  swift_endAccess();
  swift_retain();
  uint64_t v16 = PageFacetsPresenter.selectedFacetOptions.getter();
  swift_release();
  swift_beginAccess();
  *(void *)uint64_t v13 = v16;
  swift_bridgeObjectRelease();
  v14[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_showDoneButton] = a2;

  id v17 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
  v29.receiver = v14;
  v29.super_class = ObjectType;
  [super initWithCollectionViewLayout:v17];

  id v19 = v18;
  double v20 = v19;
  if (a2)
  {
    id v21 = [v19 navigationItem];
    sub_100084CF0(0, (unint64_t *)&qword_100981A18);
    sub_100084CF0(0, (unint64_t *)&qword_10098F030);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v30.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v30.is_nil = 0;
    Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v30, v31).super.super.isa;
    [v21 setRightBarButtonItem:isa];
  }
  id v23 = [v20 navigationItem];
  v24._object = (void *)0x8000000100807A00;
  v24._countAndFlagsBits = 0xD000000000000019;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  localizedString(_:comment:)(v24, v25);
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setTitle:v26];

  swift_release();
  swift_release();
  return v20;
}

void sub_10011385C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v3 = *(void *)(v2 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v3 + 8))(v1, ObjectType, v3);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_100113930(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PageFacets();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28(&qword_10098F020);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28(&qword_100984848);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets;
  swift_beginAccess();
  uint64_t v16 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10011BFF0(v15, (uint64_t)v14);
  sub_10011BFF0(a1, v16);
  id v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v14, 1, v4) == 1)
  {
    if (v17(v16, 1, v4) == 1) {
      return sub_100082BCC((uint64_t)v14, &qword_10098F020);
    }
  }
  else
  {
    sub_10011BFF0((uint64_t)v14, (uint64_t)v10);
    if (v17(v16, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v16, v4);
      sub_10011AA40(&qword_100984850, (void (*)(uint64_t))&type metadata accessor for PageFacets);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      double v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      uint64_t result = sub_100082BCC((uint64_t)v14, &qword_10098F020);
      if (v19) {
        return result;
      }
      return sub_100113C30();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_100082BCC((uint64_t)v14, &qword_100984848);
  return sub_100113C30();
}

uint64_t sub_100113C30()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100082C28(&qword_100984810);
  __chkstk_darwin(v2 - 8);
  double v81 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PageFacetsViewController.Item(0);
  uint64_t v99 = *(void *)(v4 - 8);
  uint64_t v100 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v97 = (uint64_t)&v67 - v8;
  uint64_t v9 = type metadata accessor for PageFacets.Facet();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PageFacets.FacetGroup();
  uint64_t v82 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  double v84 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100082C28(&qword_10098F020);
  __chkstk_darwin(v15 - 8);
  id v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PageFacets();
  uint64_t v70 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  CGFloat v69 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100082C28(&qword_100984818);
  uint64_t v68 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011AA40(&qword_100984820, (void (*)(uint64_t))&type metadata accessor for PageFacets.FacetGroup);
  sub_10011AA40(&qword_100984828, (void (*)(uint64_t))type metadata accessor for PageFacetsViewController.Item);
  uint64_t v85 = v13;
  CGFloat v86 = v21;
  NSDiffableDataSourceSnapshot.init()();
  uint64_t v22 = v1 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets;
  swift_beginAccess();
  uint64_t v23 = v22;
  uint64_t v24 = v70;
  sub_10011BFF0(v23, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 1, v18) == 1)
  {
    uint64_t result = sub_100082BCC((uint64_t)v17, &qword_10098F020);
    NSString v26 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
    if (v26)
    {
      id v27 = v26;
      uint64_t v28 = v86;
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v28, v87);
    }
    goto LABEL_34;
  }
  objc_super v29 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v67 = v18;
  v29(v69, v17, v18);
  uint64_t result = PageFacets.facetGroups.getter();
  uint64_t v80 = *(void *)(result + 16);
  if (v80)
  {
    unint64_t v30 = 0;
    uint64_t v31 = *(unsigned __int8 *)(v82 + 80);
    uint64_t v79 = (v31 + 32) & ~v31;
    uint64_t v78 = result + v79;
    uint64_t v77 = v82 + 16;
    uint64_t v76 = v31 | 7;
    double v72 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
    BOOL v71 = (void (**)(char *, uint64_t))(v82 + 8);
    long long v75 = xmmword_1007BEDF0;
    uint64_t v74 = v1;
    uint64_t v88 = v10;
    double v89 = v6;
    double v96 = v12;
    uint64_t v73 = result;
    uint64_t v98 = v10 + 16;
    double v90 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
    while (v30 < *(void *)(result + 16))
    {
      uint64_t v35 = *(void *)(v82 + 72);
      unint64_t v83 = v30;
      CGFloat v95 = *(void (**)(char *, unint64_t, uint64_t))(v82 + 16);
      __double2 v37 = v84;
      uint64_t v36 = v85;
      v95(v84, v78 + v35 * v30, v85);
      sub_100082C28(&qword_100984830);
      uint64_t v38 = v79;
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = v75;
      v95((char *)(v39 + v38), (unint64_t)v37, v36);
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v39);
      swift_bridgeObjectRelease();
      uint64_t result = PageFacets.FacetGroup.facets.getter();
      uint64_t v40 = result;
      CGFloat v94 = *(char **)(result + 16);
      if (v94)
      {
        unint64_t v41 = 0;
        unint64_t v92 = result + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        CGFloat v42 = _swiftEmptyArrayStorage;
        CGFloat v43 = v90;
        uint64_t v93 = result;
        while (v41 < *(void *)(v40 + 16))
        {
          double v44 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
          v44(v12, v92 + *(void *)(v10 + 72) * v41, v9);
          char v45 = PageFacets.Facet.displayOptionsInline.getter();
          CGFloat v95 = (void (*)(char *, unint64_t, uint64_t))v41;
          if (v45)
          {
            uint64_t v46 = PageFacets.Facet.options.getter();
            uint64_t v47 = *(void *)(v46 + 16);
            if (v47)
            {
              uint64_t v48 = v9;
              uint64_t v49 = type metadata accessor for PageFacets.Facet.Option();
              uint64_t v50 = *(void *)(v49 - 8);
              uint64_t v51 = *(unsigned __int8 *)(v50 + 80);
              uint64_t v91 = v46;
              uint64_t v52 = v46 + ((v51 + 32) & ~v51);
              uint64_t v53 = *(void *)(v50 + 72);
              double v54 = (void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
              uint64_t v55 = v97;
              do
              {
                uint64_t v56 = v55 + *(int *)(sub_100082C28(&qword_100984710) + 48);
                v44((char *)v55, (unint64_t)v96, v48);
                (*v54)(v56, v52, v49);
                swift_storeEnumTagMultiPayload();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  CGFloat v42 = (void *)sub_1000ACB6C(0, v42[2] + 1, 1, (unint64_t)v42);
                }
                unint64_t v58 = v42[2];
                unint64_t v57 = v42[3];
                if (v58 >= v57 >> 1) {
                  CGFloat v42 = (void *)sub_1000ACB6C(v57 > 1, v58 + 1, 1, (unint64_t)v42);
                }
                v42[2] = v58 + 1;
                uint64_t v59 = (uint64_t)v42
                    + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))
                    + *(void *)(v99 + 72) * v58;
                uint64_t v55 = v97;
                sub_10011BE20(v97, v59);
                v52 += v53;
                --v47;
              }
              while (v47);
              swift_bridgeObjectRelease();
              uint64_t v9 = v48;
              uint64_t v10 = v88;
              uint64_t v6 = v89;
              uint64_t v12 = v96;
              CGFloat v43 = v90;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v40 = v93;
          }
          else
          {
            v44(v6, (unint64_t)v12, v9);
            swift_storeEnumTagMultiPayload();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              CGFloat v42 = (void *)sub_1000ACB6C(0, v42[2] + 1, 1, (unint64_t)v42);
            }
            uint64_t v40 = v93;
            unint64_t v61 = v42[2];
            unint64_t v60 = v42[3];
            if (v61 >= v60 >> 1) {
              CGFloat v42 = (void *)sub_1000ACB6C(v60 > 1, v61 + 1, 1, (unint64_t)v42);
            }
            v42[2] = v61 + 1;
            sub_10011BE20((uint64_t)v6, (uint64_t)v42+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(void *)(v99 + 72) * v61);
          }
          unint64_t v41 = (unint64_t)v95 + 1;
          uint64_t result = (*v43)(v12, v9);
          if ((char *)v41 == v94) {
            goto LABEL_6;
          }
        }
        __break(1u);
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      unint64_t v32 = v83 + 1;
      uint64_t v33 = (uint64_t)v81;
      uint64_t v34 = v85;
      (*v72)(v81, 1, 1, v85);
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      unint64_t v30 = v32;
      swift_bridgeObjectRelease();
      sub_100082BCC(v33, &qword_100984810);
      (*v71)(v84, v34);
      uint64_t v1 = v74;
      uint64_t result = v73;
      if (v32 == v80) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_29:
  uint64_t result = swift_bridgeObjectRelease();
  double v62 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
  uint64_t v63 = v67;
  uint64_t v64 = v70;
  CGFloat v65 = v69;
  if (v62)
  {
    id v66 = v62;
    uint64_t v28 = v86;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v63);
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v28, v87);
  }
LABEL_35:
  __break(1u);
  return result;
}

void sub_1001146CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PageFacets.FacetGroup();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082C28(&qword_100984818);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource;
  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource];
  if (!v11) {
    goto LABEL_12;
  }
  id v12 = v11;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v13 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void **)&v1[v10];
    if (v22) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v30 = v10;
  uint64_t v31 = v1;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v15 = v3 + 16;
  uint64_t v32 = v7;
  uint64_t v33 = v16;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 64);
  uint64_t v18 = v9;
  v29[1] = v13;
  uint64_t v19 = v13 + ((v17 + 32) & ~v17);
  uint64_t v20 = *(void *)(v15 + 56);
  do
  {
    v33(v5, v19, v2);
    uint64_t v21 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
    NSDiffableDataSourceSnapshot.reloadItems(_:)((Swift::OpaquePointer)v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 - 8))(v5, v2);
    v19 += v20;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  uint64_t v1 = v31;
  uint64_t v7 = v32;
  uint64_t v9 = v18;
  uint64_t v22 = *(void **)&v31[v30];
  if (!v22)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_6:
  id v23 = v22;
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

  uint64_t v24 = (double *)&v1[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
  if (v1[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset + 16])
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return;
  }
  double v26 = *v24;
  double v25 = v24[1];
  id v27 = [v1 collectionView];
  if (v27)
  {
    uint64_t v28 = v27;
    [v27 setContentOffset:v26, v25];

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *uint64_t v24 = 0.0;
    v24[1] = 0.0;
    *((unsigned char *)v24 + 16) = 1;
    return;
  }
LABEL_13:
  __break(1u);
}

id sub_1001149C8()
{
  v15.receiver = v0;
  v15.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = result;
  uint64_t v3 = self;
  id v4 = [v3 systemBackgroundColor];
  [v2 setBackgroundColor:v4];

  id result = [v0 collectionView];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  id v6 = [v3 systemBackgroundColor];
  [v5 setBackgroundColor:v6];

  id v7 = sub_100114C04();
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource];
  *(void *)&v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource] = v7;

  id result = [v0 collectionView];
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v11 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
    v14[4] = sub_10011BFE8;
    v14[5] = v10;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    id v14[2] = sub_10004DF80;
    v14[3] = &unk_1008BD200;
    id v12 = _Block_copy(v14);
    swift_retain();
    id v13 = [v11 initWithSectionProvider:v12];
    _Block_release(v12);
    swift_release();
    swift_release();
    [v9 setCollectionViewLayout:v13];

    sub_100115000();
    return (id)sub_100113C30();
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_100114C04()
{
  uint64_t v1 = v0;
  uint64_t v28 = sub_100082C28(&qword_100984858);
  uint64_t v2 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  v24[1] = v3;
  double v25 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v6 = (char *)v24 - v5;
  uint64_t v26 = sub_100082C28(&qword_100984860);
  uint64_t v7 = *(void *)(v26 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v26);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)v24 - v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100084CF0(0, &qword_100984868);
  type metadata accessor for PageFacetsViewController.Item(0);
  UICollectionView.CellRegistration.init(handler:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100084CF0(0, (unint64_t *)&qword_10099ACA0);
  id v27 = v6;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  id result = [v1 collectionView];
  if (result)
  {
    uint64_t v14 = v26;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v26);
    unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v16 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, v9, v14);
    id v17 = objc_allocWithZone((Class)sub_100082C28(&qword_100984870));
    uint64_t v18 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    uint64_t v19 = v25;
    uint64_t v20 = v27;
    uint64_t v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v25, v27, v28);
    unint64_t v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v23 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v23 + v22, v19, v21);
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v20, v21);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v14);
    return (id)v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100115000()
{
  swift_getObjectType();
  uint64_t v1 = sub_100082C28((uint64_t *)&unk_1009964F0);
  uint64_t v18 = *(void *)(v1 - 8);
  uint64_t v19 = v1;
  __chkstk_darwin(v1);
  id v17 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100082C28(&qword_10098EFD0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_facetsPresenter);
  PageFacetsPresenter.onFacetStateDidChange.getter();
  uint64_t v7 = sub_100084CF0(0, (unint64_t *)&qword_100984500);
  uint64_t v8 = static OS_dispatch_queue.main.getter();
  uint64_t v21 = v7;
  unint64_t v22 = &protocol witness table for OS_dispatch_queue;
  v20[0] = v8;
  v14[1] = sub_100082C28((uint64_t *)&unk_100996500);
  sub_1000DD560((unint64_t *)&unk_10098F000, (uint64_t *)&unk_100996500);
  uint64_t v15 = v0;
  EventEmitter.addObserver<A>(on:target:method:)();
  swift_release();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14[0] = v4 + 8;
  v9(v6, v3);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v20);
  PageFacetsPresenter.onSelectedFacetOptionsChanged.getter();
  uint64_t v10 = static OS_dispatch_queue.main.getter();
  uint64_t v21 = v7;
  unint64_t v22 = &protocol witness table for OS_dispatch_queue;
  v20[0] = v10;
  EventEmitter.addObserver<A>(on:target:method:)();
  swift_release();
  v9(v6, v3);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v20);
  PageFacetsPresenter.onPerformPageFacetsChangeAction.getter();
  uint64_t v11 = static OS_dispatch_queue.main.getter();
  uint64_t v21 = v7;
  unint64_t v22 = &protocol witness table for OS_dispatch_queue;
  v20[0] = v11;
  sub_100082C28(&qword_100996510);
  sub_1000DD560((unint64_t *)&unk_10098F010, &qword_100996510);
  id v12 = v17;
  EventEmitter.addObserver<A>(on:target:method:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v19);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v20);
}

void sub_1001153D0(unint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  unint64_t v53 = a1;
  uint64_t v2 = sub_100082C28(&qword_100984818);
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PageFacets.FacetGroup();
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v47 - v8;
  uint64_t v9 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v54 = *(void *)(v17 - 8);
  uint64_t v55 = v17;
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v14 + 104))(v16, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v13, v18);
  UICollectionLayoutListConfiguration.init(appearance:)();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v9);
  UICollectionLayoutListConfiguration.headerMode.setter();
  sub_100084CF0(0, (unint64_t *)&qword_100996760);
  uint64_t v21 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v54 + 8))(v20, v55);
    return;
  }
  uint64_t v23 = (void *)Strong;
  uint64_t v24 = *(void **)(Strong + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
  id v25 = v24;

  if (v24)
  {
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    uint64_t v26 = v52;
    uint64_t v27 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v4, v26);
    if ((v53 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(v27 + 16) > v53)
    {
      uint64_t v29 = v49;
      uint64_t v28 = v50;
      uint64_t v30 = v47;
      (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v47, v27+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v53, v50);
      swift_bridgeObjectRelease();
      uint64_t v31 = v48;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v48, v30, v28);
      uint64_t v32 = PageFacets.FacetGroup.title.getter();
      if (v33)
      {
        uint64_t v34 = v32;
        unint64_t v35 = v33;
        swift_bridgeObjectRelease();
        uint64_t v36 = HIBYTE(v35) & 0xF;
        if ((v35 & 0x2000000000000000) == 0) {
          uint64_t v36 = v34 & 0xFFFFFFFFFFFFLL;
        }
        if (v36)
        {
          __double2 v37 = self;
          id v38 = [v37 fractionalWidthDimension:1.0];
          id v39 = [v37 estimatedDimension:44.0];
          id v40 = [self sizeWithWidthDimension:v38 heightDimension:v39];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v41 = v40;
          NSString v42 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v43 = [self boundarySupplementaryItemWithLayoutSize:v41 elementKind:v42 alignment:1];

          sub_100082C28(&qword_100982B50);
          uint64_t v44 = swift_allocObject();
          *(_OWORD *)(v44 + 16) = xmmword_1007BEA80;
          *(void *)(v44 + 32) = v43;
          uint64_t v57 = v44;
          specialized Array._endMutation()();
          sub_100084CF0(0, &qword_100983970);
          id v45 = v43;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v21 setBoundarySupplementaryItems:isa];
        }
      }
      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
      goto LABEL_11;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100115A18(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    sub_100115A90(a1, a2, a3);
  }
}

uint64_t sub_100115A90(void *a1, uint64_t a2, uint64_t a3)
{
  double v185 = (char *)a3;
  v183 = a1;
  uint64_t v159 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  CGFloat v157 = (char *)&v149 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v164 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  CGFloat v161 = (char *)&v149 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v166 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  double v165 = (char *)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for PageFacets.Facet.DisplayType();
  unint64_t v187 = *(void *)(v175 - 8);
  __chkstk_darwin(v175);
  double v152 = (char *)&v149 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v153 = (char *)&v149 - v8;
  __chkstk_darwin(v9);
  double v162 = (char *)&v149 - v10;
  __chkstk_darwin(v11);
  double v163 = (char *)&v149 - v12;
  __chkstk_darwin(v13);
  v173 = (char *)&v149 - v14;
  __chkstk_darwin(v15);
  uint64_t v174 = (char *)&v149 - v16;
  uint64_t v17 = sub_100082C28(&qword_1009847F0);
  __chkstk_darwin(v17 - 8);
  CGFloat v177 = (char *)&v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for UICellAccessory.CheckmarkOptions();
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  double v154 = (char *)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v176 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  double v169 = (char *)&v149 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for PageFacets.Facet.Option();
  unint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  double v170 = (char *)&v149 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for PageFacets.Facet();
  uint64_t v188 = *(void *)(v22 - 8);
  uint64_t v189 = v22;
  uint64_t v23 = *(void *)(v188 + 64);
  __chkstk_darwin(v22);
  double v168 = (char *)&v149 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v149 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v149 - v28;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v149 - v31;
  __chkstk_darwin(v33);
  double v184 = (char *)&v149 - v34;
  uint64_t v35 = type metadata accessor for PageFacetsViewController.Item(0);
  __chkstk_darwin(v35);
  __double2 v37 = (char *)&v149 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  id v40 = (char *)&v149 - v39;
  __chkstk_darwin(v41);
  id v43 = (char *)&v149 - v42;
  uint64_t v44 = type metadata accessor for UIListContentConfiguration();
  uint64_t v180 = *(void *)(v44 - 8);
  uint64_t v181 = v44;
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v149 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v149 - v48;
  static UIListContentConfiguration.cell()();
  sub_10011A9DC((uint64_t)v185, (uint64_t)v43);
  EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
  CGFloat v182 = v43;
  v186 = v49;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v51 = v183;
    sub_10011A9DC((uint64_t)v43, (uint64_t)v40);
    uint64_t v52 = &v40[*(int *)(sub_100082C28(&qword_100984710) + 48)];
    uint64_t v53 = v188;
    uint64_t v54 = (uint64_t)v184;
    (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v184, v40, v189);
    unint64_t v55 = v171;
    uint64_t v56 = (uint64_t)v170;
    uint64_t v57 = v172;
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v170, v52, v172);
    PageFacets.Facet.Option.title.getter();
    UIListContentConfiguration.text.setter();
    unint64_t v58 = (uint64_t *)(v179 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions);
    swift_beginAccess();
    uint64_t v59 = *v58;
    if (*(void *)(*v58 + 16) && (unint64_t v60 = sub_10040760C(v54), (v61 & 1) != 0))
    {
      uint64_t v62 = *(void *)(*(void *)(v59 + 56) + 8 * v60);
      swift_endAccess();
      swift_bridgeObjectRetain();
      char v63 = sub_1002F9B34(v56, v62);
      swift_bridgeObjectRelease();
      uint64_t v64 = v56;
      uint64_t v65 = v57;
      if (v63)
      {
        sub_100082C28(&qword_100984808);
        uint64_t v66 = *(void *)(type metadata accessor for UICellAccessory() - 8);
        unint64_t v67 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
        uint64_t v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = xmmword_1007BEDF0;
        unint64_t v187 = v68 + v67;
        uint64_t v69 = v176;
        uint64_t v70 = v169;
        (*(void (**)(char *, void, uint64_t))(v176 + 104))(v169, enum case for UICellAccessory.DisplayedState.always(_:), v178);
        uint64_t v71 = type metadata accessor for UICellAccessory.LayoutDimension();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v177, 1, 1, v71);
        double v72 = v154;
        UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
        static UICellAccessory.checkmark(displayed:options:)();
        (*(void (**)(char *, uint64_t))(v155 + 8))(v72, v156);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v178);
      }
    }
    else
    {
      uint64_t v64 = v56;
      uint64_t v65 = v57;
      swift_endAccess();
    }
    uint64_t v80 = v180;
    uint64_t v79 = v181;
    uint64_t v81 = (uint64_t)v182;
    UICollectionViewListCell.accessories.setter();
    uint64_t v82 = PageFacets.Facet.Option.metricsValue.getter();
    if (v83)
    {
      uint64_t v192 = 0x2D7465636166;
      unint64_t v193 = 0xE600000000000000;
      String.append(_:)(*(Swift::String *)&v82);
      swift_bridgeObjectRelease();
      NSString v84 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v51 setAccessibilityIdentifier:v84];
    }
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v64, v65);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v184, v189);
    goto LABEL_32;
  }
  uint64_t v156 = (uint64_t)v29;
  double v154 = v46;
  double v185 = v26;
  sub_10011A9DC((uint64_t)v43, (uint64_t)v37);
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v188 + 16);
  uint64_t v172 = v188 + 16;
  v73(v32, v37, v189);
  uint64_t v74 = v174;
  PageFacets.Facet.displayType.getter();
  long long v75 = v173;
  uint64_t v76 = v175;
  uint64_t v155 = *(void *)(v187 + 104);
  unint64_t v171 = v187 + 104;
  ((void (*)(char *, void, uint64_t))v155)(v173, enum case for PageFacets.Facet.DisplayType.toggle(_:), v175);
  uint64_t v77 = sub_10011AA40(&qword_100984800, (void (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  double v170 = (char *)v77;
  dispatch thunk of RawRepresentable.rawValue.getter();
  double v151 = v37;
  double v184 = (char *)v73;
  if (v192 == v190 && v193 == v191) {
    char v78 = 1;
  }
  else {
    char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v85 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v87 = v187 + 8;
  CGFloat v86 = *(void (**)(char *, uint64_t))(v187 + 8);
  v86(v85, v76);
  v86(v74, v76);
  if ((v78 & 1) == 0)
  {
    unint64_t v187 = v87;
    uint64_t v106 = v188;
    Class v107 = *(char **)(v188 + 8);
    CGFloat v108 = v32;
    uint64_t v109 = v189;
    uint64_t v174 = (char *)(v188 + 8);
    v173 = v107;
    ((void (*)(char *, uint64_t))v107)(v108, v189);
    uint64_t v110 = (uint64_t)v185;
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v185, v151, v109);
    double v111 = v163;
    PageFacets.Facet.displayType.getter();
    CGFloat v112 = v162;
    double v113 = (void (*)(char *, void, uint64_t))v155;
    ((void (*)(char *, void, uint64_t))v155)(v162, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v76);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v192 == v190 && v193 == v191)
    {
      swift_bridgeObjectRelease_n();
      v86(v112, v76);
      v86(v111, v76);
      double v114 = v168;
      uint64_t v115 = v189;
      ((void (*)(char *, uint64_t, uint64_t))v184)(v168, v110, v189);
    }
    else
    {
      char v128 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v86(v112, v76);
      v86(v111, v76);
      double v114 = v168;
      uint64_t v115 = v189;
      ((void (*)(char *, uint64_t, uint64_t))v184)(v168, v110, v189);
      if ((v128 & 1) == 0)
      {
        CGFloat v129 = v153;
        PageFacets.Facet.displayType.getter();
        CGFloat v130 = v152;
        v113(v152, enum case for PageFacets.Facet.DisplayType.multipleSelection(_:), v76);
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        if (v192 != v190 || v193 != v191)
        {
          char v147 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v86(v130, v76);
          v86(v129, v76);
          uint64_t v148 = v189;
          ((void (*)(char *, uint64_t))v173)(v168, v189);
          if ((v147 & 1) == 0)
          {
            ((void (*)(char *, uint64_t))v173)(v185, v148);
            UICollectionViewListCell.accessories.setter();
            uint64_t v80 = v180;
            uint64_t v79 = v181;
LABEL_31:
            uint64_t v81 = (uint64_t)v182;
LABEL_32:
            double v89 = v186;
            goto LABEL_33;
          }
LABEL_28:
          double v131 = v154;
          static UIListContentConfiguration.valueCell()();
          uint64_t v80 = v180;
          uint64_t v79 = v181;
          CGFloat v132 = v186;
          (*(void (**)(char *, uint64_t))(v180 + 8))(v186, v181);
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v132, v131, v79);
          uint64_t v133 = (uint64_t)v185;
          PageFacets.Facet.title.getter();
          UIListContentConfiguration.text.setter();
          double v134 = (uint64_t *)(v179 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions);
          swift_beginAccess();
          uint64_t v135 = *v134;
          swift_bridgeObjectRetain();
          sub_10011787C(v133, v135);
          swift_bridgeObjectRelease();
          UIListContentConfiguration.secondaryText.setter();
          sub_100082C28(&qword_100984808);
          type metadata accessor for UICellAccessory();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
          uint64_t v136 = v176;
          double v137 = v169;
          uint64_t v138 = v178;
          (*(void (**)(char *, void, uint64_t))(v176 + 104))(v169, enum case for UICellAccessory.DisplayedState.always(_:), v178);
          uint64_t v139 = type metadata accessor for UICellAccessory.LayoutDimension();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v177, 1, 1, v139);
          double v140 = v157;
          UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
          static UICellAccessory.disclosureIndicator(displayed:options:)();
          (*(void (**)(char *, uint64_t))(v158 + 8))(v140, v159);
          (*(void (**)(char *, uint64_t))(v136 + 8))(v137, v138);
          double v141 = v183;
          UICollectionViewListCell.accessories.setter();
          uint64_t v142 = PageFacets.Facet.metricsParameterName.getter();
          if (v143)
          {
            uint64_t v192 = 0x2D7465636166;
            unint64_t v193 = 0xE600000000000000;
            String.append(_:)(*(Swift::String *)&v142);
            swift_bridgeObjectRelease();
            NSString v144 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v141 setAccessibilityIdentifier:v144];
          }
          ((void (*)(char *, uint64_t))v173)(v185, v189);
          goto LABEL_31;
        }
        swift_bridgeObjectRelease_n();
        v86(v130, v76);
        v86(v129, v76);
        uint64_t v115 = v189;
        double v114 = v168;
      }
    }
    ((void (*)(char *, uint64_t))v173)(v114, v115);
    goto LABEL_28;
  }
  uint64_t v88 = (uint64_t)v32;
  PageFacets.Facet.title.getter();
  double v89 = v186;
  UIListContentConfiguration.text.setter();
  sub_100084CF0(0, (unint64_t *)&qword_10098F030);
  uint64_t v90 = swift_allocObject();
  uint64_t v91 = v179;
  swift_unknownObjectWeakInit();
  uint64_t v92 = v156;
  uint64_t v93 = v189;
  ((void (*)(uint64_t, uint64_t, uint64_t))v184)(v156, v88, v189);
  unint64_t v94 = (*(unsigned __int8 *)(v188 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80);
  uint64_t v95 = v188;
  uint64_t v96 = swift_allocObject();
  *(void *)(v96 + 16) = v90;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v95 + 32))(v96 + v94, v92, v93);
  uint64_t v97 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v98 = [objc_allocWithZone((Class)UISwitch) initWithFrame:v97 primaryAction:0.0];

  uint64_t v99 = (uint64_t *)(v91 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions);
  swift_beginAccess();
  uint64_t v100 = *v99;
  uint64_t v101 = *(void *)(v100 + 16);
  uint64_t v150 = v88;
  if (v101 && (unint64_t v102 = sub_10040760C(v88), (v103 & 1) != 0))
  {
    uint64_t v104 = *(void *)(*(void *)(v100 + 56) + 8 * v102);
    swift_endAccess();
    BOOL v105 = *(void *)(v104 + 16) != 0;
  }
  else
  {
    swift_endAccess();
    BOOL v105 = 0;
  }
  double v116 = v183;
  uint64_t v80 = v180;
  uint64_t v79 = v181;
  CGFloat v117 = v161;
  uint64_t v118 = v160;
  [v98 setOn:v105];
  sub_100082C28(&qword_100984808);
  type metadata accessor for UICellAccessory();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
  double v119 = (uint64_t (**)())&v117[*(int *)(sub_100082C28(&qword_100984878) + 48)];
  (*(void (**)(char *, void, uint64_t))(v176 + 104))(v117, enum case for UICellAccessory.DisplayedState.always(_:), v178);
  char *v119 = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v119[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v164 + 104))(v117, enum case for UICellAccessory.Placement.trailing(_:), v118);
  uint64_t v120 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v177, 1, 1, v120);
  id v121 = v98;
  double v122 = v165;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();
  (*(void (**)(char *, uint64_t))(v166 + 8))(v122, v167);
  UICollectionViewListCell.accessories.setter();
  uint64_t v192 = 0x2D7465636166;
  unint64_t v193 = 0xE600000000000000;
  uint64_t v123 = v150;
  v124._countAndFlagsBits = PageFacets.Facet.id.getter();
  String.append(_:)(v124);
  swift_bridgeObjectRelease();
  NSString v125 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v116 setAccessibilityIdentifier:v125];

  uint64_t v126 = v189;
  CGFloat v127 = *(void (**)(uint64_t, uint64_t))(v188 + 8);
  v127(v123, v189);
  v127((uint64_t)v151, v126);
  uint64_t v81 = (uint64_t)v182;
LABEL_33:
  sub_10011A5E4(v81);
  uint64_t v194 = v79;
  CGFloat v195 = &protocol witness table for UIListContentConfiguration;
  uint64_t v145 = sub_1000808B8(&v192);
  (*(void (**)(uint64_t *, char *, uint64_t))(v80 + 16))(v145, v89, v79);
  UICollectionViewCell.contentConfiguration.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v89, v79);
}

unint64_t sub_1001171E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = a4;
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28(&qword_100984818);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for PageFacets.FacetGroup();
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v16 = (void *)result;
    uint64_t v23 = v5;
    uint64_t v17 = *(void **)(result + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
    if (v17)
    {
      id v18 = v17;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      uint64_t v19 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      unint64_t result = IndexPath.subscript.getter();
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(void *)(v19 + 16))
      {
        uint64_t v20 = v24;
        (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v19+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * result, v24);
        swift_bridgeObjectRelease();
        static UIListContentConfiguration.groupedHeader()();
        PageFacets.FacetGroup.title.getter();
        UIListContentConfiguration.text.setter();
        void v27[3] = v4;
        v27[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
        uint64_t v21 = sub_1000808B8(v27);
        uint64_t v22 = v23;
        (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 16))(v21, v7, v4);
        UICollectionViewCell.contentConfiguration.setter();

        (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v4);
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v20);
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100117504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100082C28(&qword_1009847E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011A9DC(a3, (uint64_t)v6);
  uint64_t v7 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  sub_100084CF0(0, &qword_100984868);
  uint64_t v8 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  sub_100082BCC((uint64_t)v6, &qword_1009847E0);
  return v8;
}

void sub_100117624()
{
  uint64_t v0 = sub_100082C28(&qword_1009847F8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    swift_beginAccess();
    uint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v6 = v5;
    if (v5)
    {
      id v7 = [v5 collectionView];

      if (!v7)
      {
        __break(1u);
        return;
      }
      [v7 contentOffset];
      uint64_t v9 = v8;
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v11 = 0;
    }
    uint64_t v12 = &v4[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
    *(void *)uint64_t v12 = v9;
    *((void *)v12 + 1) = v11;
    v12[16] = v6 == 0;
  }
  swift_beginAccess();
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    swift_retain();

    uint64_t v15 = PageFacets.Facet.options.getter();
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = type metadata accessor for PageFacets.Facet.Option();
    uint64_t v18 = *(void *)(v17 - 8);
    if (v16)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v2, v15+ ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80)), v17);
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v2, v19, 1, v17);
    swift_bridgeObjectRelease();
    PageFacetsPresenter.didSelect(option:in:)();
    swift_release();
    sub_100082BCC((uint64_t)v2, &qword_1009847F8);
  }
}

uint64_t sub_10011787C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageFacets.Facet.Option();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = 0;
  if (PageFacets.Facet.showsSelectedOptions.getter())
  {
    if (*(void *)(a2 + 16) && (unint64_t v9 = sub_10040760C(a1), (v10 & 1) != 0))
    {
      uint64_t v11 = *(void *)(*(void *)(a2 + 56) + 8 * v9);
      uint64_t v12 = *(void *)(v11 + 16);
      swift_bridgeObjectRetain();
      uint64_t v13 = *(void *)(PageFacets.Facet.options.getter() + 16);
      swift_bridgeObjectRelease();
      if (v12 == v13)
      {
        swift_bridgeObjectRelease();
        v14._countAndFlagsBits = 0xD000000000000025;
        v14._object = (void *)0x8000000100807A70;
        v15._countAndFlagsBits = 0;
        v15._object = (void *)0xE000000000000000;
        return localizedString(_:comment:)(v14, v15)._countAndFlagsBits;
      }
      uint64_t v20 = PageFacets.Facet.options.getter();
      uint64_t v21 = sub_10011B514(v20, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v22 = *((void *)v21 + 2);
      if (v22)
      {
        uint64_t v42 = _swiftEmptyArrayStorage;
        sub_10012973C(0, v22, 0);
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        uint64_t v23 = v5 + 16;
        uint64_t v25 = &v21[(*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64)];
        uint64_t v39 = *(void *)(v23 + 56);
        id v40 = v24;
        v37[1] = v21;
        uint64_t v38 = (void (**)(char *, uint64_t))(v23 - 8);
        uint64_t v41 = v4;
        do
        {
          uint64_t v26 = v23;
          v40(v7, v25, v4);
          uint64_t v27 = PageFacets.Facet.Option.title.getter();
          uint64_t v29 = v28;
          (*v38)(v7, v4);
          uint64_t v30 = v42;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10012973C(0, v30[2] + 1, 1);
            uint64_t v30 = v42;
          }
          unint64_t v32 = v30[2];
          unint64_t v31 = v30[3];
          if (v32 >= v31 >> 1)
          {
            sub_10012973C(v31 > 1, v32 + 1, 1);
            uint64_t v30 = v42;
          }
          _OWORD v30[2] = v32 + 1;
          uint64_t v33 = &v30[2 * v32];
          v33[4] = v27;
          v33[5] = v29;
          v25 += v39;
          --v22;
          uint64_t v4 = v41;
          uint64_t v23 = v26;
        }
        while (v22);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = _swiftEmptyArrayStorage;
      }
      uint64_t v42 = v30;
      v34._object = (void *)0x8000000100807A50;
      v34._countAndFlagsBits = 0xD00000000000001DLL;
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      localizedString(_:comment:)(v34, v35);
      sub_100082C28((uint64_t *)&unk_100984E90);
      sub_1000DD560((unint64_t *)&qword_10098C670, (uint64_t *)&unk_100984E90);
      uint64_t v8 = BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = PageFacets.Facet.options.getter();
      __chkstk_darwin(v16);
      v37[-2] = a1;
      uint64_t v17 = sub_1004D9150((void (*)(uint64_t *__return_ptr, uint64_t))sub_10011C4EC, (uint64_t)&v37[-4], v16);
      swift_bridgeObjectRelease();
      if (!v17[2])
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v42 = v17;
      v18._object = (void *)0x8000000100807A50;
      v18._countAndFlagsBits = 0xD00000000000001DLL;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      localizedString(_:comment:)(v18, v19);
      sub_100082C28((uint64_t *)&unk_100984E90);
      sub_1000DD560((unint64_t *)&qword_10098C670, (uint64_t *)&unk_100984E90);
      uint64_t v8 = BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_100117CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100082C28(&qword_10098F020);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v11[-v7];
  PageFacetsPresenter.FacetsState.facets.getter();
  uint64_t v9 = a2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets;
  swift_beginAccess();
  sub_10011BFF0(v9, (uint64_t)v5);
  swift_beginAccess();
  sub_10011C16C((uint64_t)v8, v9);
  swift_endAccess();
  sub_100113930((uint64_t)v5);
  sub_100082BCC((uint64_t)v8, &qword_10098F020);
  return sub_100082BCC((uint64_t)v5, &qword_10098F020);
}

uint64_t (*sub_100117E1C(void *a1))(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  id v2 = a1;
  return sub_10011C164;
}

uint64_t (*sub_100117E80(void *a1))(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  id v2 = a1;
  return sub_10011C0F4;
}

uint64_t sub_100117EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = PageFacetsPresenter.FacetsState.selectedFacetOptions.getter();
  uint64_t v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *uint64_t v4 = v3;
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_10011AB04(v6, v5);
  LOBYTE(v4) = v7;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    sub_1001146CC();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100117F78(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v1 = type metadata accessor for Dependency();
  uint64_t v27 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v24 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MetricsFieldsContext();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v25 = *(void *)(v10 - 8);
  uint64_t v26 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v13 - 8);
  Swift::String v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectGraph.actionDispatcher.getter();
  uint64_t v16 = sub_100082C28((uint64_t *)&unk_100984530);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    return sub_100082BCC((uint64_t)v15, &qword_1009875B0);
  }
  void v29[3] = type metadata accessor for Action();
  v29[4] = sub_10011AA40((unint64_t *)&qword_1009875D0, (void (*)(uint64_t))&type metadata accessor for Action);
  uint64_t v22 = v1;
  v29[0] = v28;
  swift_retain_n();
  uint64_t v23 = v17;
  sub_1005365D0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  Swift::String v19 = v24;
  Dependency.init<A>(satisfying:with:)();
  dispatch thunk of BaseObjectGraph.adding(dependency:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v22);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v9, v3);
  uint64_t v21 = v25;
  uint64_t v20 = v26;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v12, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v26);
  ActionDispatcher.perform(_:withMetrics:asPartOf:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v20);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v29);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v16);
}

uint64_t (*sub_1001183B0(void *a1))(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10011C090;
  *(void *)(v3 + 24) = v2;
  id v4 = a1;
  return sub_10011C0EC;
}

void sub_100118440(void *a1, uint64_t a2)
{
  id v190 = a1;
  uint64_t v178 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v175 = &v151[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v176 = type metadata accessor for DispatchQoS();
  uint64_t v174 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  v173 = &v151[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v169 = type metadata accessor for IndexPath();
  uint64_t v168 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  uint64_t v166 = v6;
  uint64_t v167 = &v151[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v172 = type metadata accessor for DispatchTime();
  uint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  double v165 = &v151[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  double v170 = &v151[-v9];
  uint64_t v10 = sub_100082C28(&qword_1009847F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v158 = &v151[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v160 = type metadata accessor for UICellAccessory.CheckmarkOptions();
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v156 = &v151[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v157 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v155 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  double v154 = &v151[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_100082C28(&qword_1009847F8);
  __chkstk_darwin(v14 - 8);
  uint64_t v179 = &v151[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v198 = type metadata accessor for PageFacets.Facet.DisplayType();
  uint64_t v200 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  double v162 = &v151[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  CGFloat v182 = &v151[-v18];
  __chkstk_darwin(v19);
  uint64_t v21 = &v151[-v20];
  __chkstk_darwin(v22);
  uint64_t v24 = &v151[-v23];
  __chkstk_darwin(v25);
  CGFloat v161 = &v151[-v26];
  __chkstk_darwin(v27);
  double v163 = &v151[-v28];
  __chkstk_darwin(v29);
  v183 = &v151[-v30];
  __chkstk_darwin(v31);
  uint64_t v188 = &v151[-v32];
  __chkstk_darwin(v33);
  Swift::String v35 = &v151[-v34];
  __chkstk_darwin(v36);
  uint64_t v38 = &v151[-v37];
  uint64_t v39 = type metadata accessor for PageFacets.Facet.Option();
  uint64_t v191 = *(void *)(v39 - 8);
  uint64_t v192 = v39;
  __chkstk_darwin(v39);
  double v185 = &v151[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v41);
  CGFloat v195 = &v151[-v42];
  uint64_t v199 = type metadata accessor for PageFacets.Facet();
  uint64_t v197 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v164 = &v151[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v44);
  v186 = &v151[-v45];
  __chkstk_darwin(v46);
  unint64_t v193 = &v151[-v47];
  __chkstk_darwin(v48);
  double v184 = &v151[-v49];
  __chkstk_darwin(v50);
  unint64_t v187 = &v151[-v51];
  __chkstk_darwin(v52);
  uint64_t v194 = &v151[-v53];
  uint64_t v54 = sub_100082C28(&qword_1009847E0);
  __chkstk_darwin(v54 - 8);
  uint64_t v56 = &v151[-((v55 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v57 = type metadata accessor for PageFacetsViewController.Item(0);
  uint64_t v58 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  unint64_t v60 = &v151[-((v59 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v61);
  CGFloat v196 = &v151[-v62];
  uint64_t v189 = v2;
  char v63 = *(void **)&v2[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource];
  if (!v63)
  {
    __break(1u);
    return;
  }
  id v64 = v63;
  uint64_t v181 = a2;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1)
  {
    sub_100082BCC((uint64_t)v56, &qword_1009847E0);
    return;
  }
  uint64_t v65 = v196;
  uint64_t v66 = v197;
  sub_10011BE20((uint64_t)v56, (uint64_t)v196);
  sub_10011A9DC((uint64_t)v65, (uint64_t)v60);
  EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
  uint64_t v180 = v66;
  if (EnumCaseMultiPayload != 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 32))(v193, v60, v199);
    PageFacets.Facet.displayType.getter();
    uint64_t v75 = v198;
    CGFloat v195 = *(unsigned char **)(v200 + 104);
    ((void (*)(unsigned char *, void, uint64_t))v195)(v21, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v198);
    sub_10011AA40(&qword_100984800, (void (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (aBlock == v207 && v202 == v208) {
      char v76 = 1;
    }
    else {
      char v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v96 = *(void (**)(unsigned char *, uint64_t))(v200 + 8);
    v96(v21, v75);
    v96(v24, v75);
    uint64_t v97 = v180;
    id v98 = v186;
    uint64_t v99 = v199;
    uint64_t v200 = *(void *)(v180 + 16);
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v200)(v186, v193, v199);
    if (v76)
    {
      uint64_t v100 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
      v100(v98, v99);
      uint64_t v101 = v99;
    }
    else
    {
      PageFacets.Facet.displayType.getter();
      unint64_t v102 = v162;
      ((void (*)(unsigned char *, void, uint64_t))v195)(v162, enum case for PageFacets.Facet.DisplayType.multipleSelection(_:), v75);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (aBlock == v207 && v202 == v208) {
        char v103 = 1;
      }
      else {
        char v103 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      uint64_t v101 = v199;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v96(v102, v75);
      v96(v182, v75);
      uint64_t v100 = *(void (**)(unsigned char *, uint64_t))(v180 + 8);
      v100(v186, v101);
      if ((v103 & 1) == 0)
      {
        v100(v193, v101);
        goto LABEL_54;
      }
    }
    uint64_t v104 = (uint64_t)v164;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v200)(v164, v193, v101);
    BOOL v105 = v189;
    uint64_t v106 = *(void *)&v189[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_facetsPresenter];
    char v107 = v189[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_showDoneButton];
    id v108 = objc_allocWithZone((Class)type metadata accessor for PageFacetOptionsViewController());
    swift_retain();
    uint64_t v109 = (char *)sub_100780B5C(v104, v106, v107);
    swift_release();
    *(void *)&v109[OBJC_IVAR____TtC8AppStore30PageFacetOptionsViewController_delegate + 8] = &off_1008BD178;
    swift_unknownObjectWeakAssign();
    uint64_t v110 = (char *)[v105 navigationController];
    if (v110)
    {
      double v111 = v110;
      [v110 pushViewController:v109 animated:1];

      uint64_t v109 = v111;
    }

    v100(v193, v101);
    goto LABEL_54;
  }
  uint64_t v68 = &v60[*(int *)(sub_100082C28(&qword_100984710) + 48)];
  uint64_t v69 = v199;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 32))(v194, v60, v199);
  uint64_t v70 = (void *)v191;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v191 + 32))(v195, v68, v192);
  PageFacets.Facet.displayType.getter();
  double v72 = (unsigned char *)(v200 + 104);
  uint64_t v71 = *(void (**)(void))(v200 + 104);
  unsigned int v152 = enum case for PageFacets.Facet.DisplayType.multipleSelection(_:);
  v186 = v71;
  v71(v35);
  uint64_t v73 = sub_10011AA40(&qword_100984800, (void (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  double v162 = v72;
  uint64_t v153 = v73;
  if (aBlock == v207 && v202 == v208) {
    char v74 = 1;
  }
  else {
    char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v77 = v200 + 8;
  char v78 = *(unsigned char **)(v200 + 8);
  uint64_t v79 = v35;
  uint64_t v80 = v198;
  ((void (*)(unsigned char *, uint64_t))v78)(v79, v198);
  uint64_t v200 = v77;
  CGFloat v182 = v78;
  ((void (*)(unsigned char *, uint64_t))v78)(v38, v80);
  uint64_t v81 = v180;
  uint64_t v82 = v187;
  uint64_t v164 = *(unsigned char **)(v180 + 16);
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v164)(v187, v194, v69);
  uint64_t v83 = (void (*)(unsigned char *, unsigned char *, uint64_t))v70[2];
  NSString v84 = v185;
  uint64_t v85 = v192;
  v83(v185, v195, v192);
  if (v74) {
    goto LABEL_31;
  }
  CGFloat v86 = &v189[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions];
  swift_beginAccess();
  uint64_t v87 = *(void *)v86;
  if (!*(void *)(*(void *)v86 + 16))
  {
    swift_endAccess();
    uint64_t v70 = (void *)v191;
    uint64_t v85 = v192;
    uint64_t v81 = v180;
    NSString v84 = v185;
    uint64_t v82 = v187;
LABEL_31:
    double v185 = (unsigned char *)v70[1];
    ((void (*)(unsigned char *, uint64_t))v185)(v84, v85);
    unint64_t v193 = *(unsigned char **)(v81 + 8);
    ((void (*)(unsigned char *, uint64_t))v193)(v82, v69);
    goto LABEL_32;
  }
  uint64_t v82 = v187;
  unint64_t v88 = sub_10040760C((uint64_t)v187);
  if ((v89 & 1) == 0)
  {
    swift_endAccess();
    uint64_t v70 = (void *)v191;
    uint64_t v85 = v192;
    uint64_t v81 = v180;
    NSString v84 = v185;
    goto LABEL_31;
  }
  uint64_t v90 = *(void *)(*(void *)(v87 + 56) + 8 * v88);
  swift_endAccess();
  swift_bridgeObjectRetain();
  uint64_t v91 = v185;
  char v92 = sub_1002F9B34((uint64_t)v185, v90);
  swift_bridgeObjectRelease();
  uint64_t v85 = v192;
  double v185 = *(unsigned char **)(v191 + 8);
  ((void (*)(unsigned char *, uint64_t))v185)(v91, v192);
  unint64_t v193 = *(unsigned char **)(v180 + 8);
  ((void (*)(unsigned char *, uint64_t))v193)(v82, v69);
  if (v92)
  {
    LODWORD(v189) = 0;
    uint64_t v93 = v194;
    unint64_t v94 = v183;
    uint64_t v95 = (void (*)(unsigned char *, uint64_t))v182;
    goto LABEL_33;
  }
  uint64_t v70 = (void *)v191;
LABEL_32:
  unint64_t v94 = v183;
  [v190 contentOffset];
  CGFloat v112 = &v189[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
  *(void *)CGFloat v112 = v113;
  *((void *)v112 + 1) = v114;
  v112[16] = 0;
  uint64_t v115 = (uint64_t)v179;
  v83(v179, v195, v85);
  double v116 = (void (*)(uint64_t, void, uint64_t, uint64_t))v70[7];
  LODWORD(v189) = 1;
  v116(v115, 0, 1, v85);
  uint64_t v93 = v194;
  PageFacetsPresenter.didSelect(option:in:)();
  sub_100082BCC(v115, &qword_1009847F8);
  uint64_t v95 = (void (*)(unsigned char *, uint64_t))v182;
LABEL_33:
  PageFacets.Facet.displayType.getter();
  ((void (*)(unsigned char *, void, uint64_t))v186)(v94, enum case for PageFacets.Facet.DisplayType.singleSelection(_:), v198);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (aBlock == v207 && v202 == v208)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v117 = v198;
    v95(v94, v198);
    v95(v188, v117);
    uint64_t v118 = v184;
    uint64_t v119 = v199;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v164)(v184, v93, v199);
LABEL_37:
    ((void (*)(unsigned char *, uint64_t))v193)(v118, v119);
    uint64_t v123 = v181;
LABEL_38:
    if (v189)
    {
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v125 = [v190 cellForItemAtIndexPath:isa];

      if (v125)
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          uint64_t v126 = *(void *)(UICollectionViewListCell.accessories.getter() + 16);
          swift_bridgeObjectRelease();
          if (!v126)
          {
            sub_100082C28(&qword_100984808);
            type metadata accessor for UICellAccessory();
            *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
            uint64_t v130 = v155;
            double v131 = v154;
            uint64_t v132 = v157;
            (*(void (**)(unsigned char *, void, uint64_t))(v155 + 104))(v154, enum case for UICellAccessory.DisplayedState.always(_:), v157);
            uint64_t v133 = type metadata accessor for UICellAccessory.LayoutDimension();
            (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v158, 1, 1, v133);
            double v134 = v156;
            UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
            static UICellAccessory.checkmark(displayed:options:)();
            (*(void (**)(unsigned char *, uint64_t))(v159 + 8))(v134, v160);
            (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v131, v132);
          }
          UICollectionViewListCell.accessories.setter();
        }
      }
    }
    sub_100084CF0(0, (unint64_t *)&qword_100984500);
    uint64_t v135 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v136 = v165;
    static DispatchTime.now()();
    double v137 = v170;
    + infix(_:_:)();
    uint64_t v200 = *(void *)(v171 + 8);
    uint64_t v138 = v172;
    ((void (*)(unsigned char *, uint64_t))v200)(v136, v172);
    uint64_t v139 = v168;
    double v140 = v167;
    uint64_t v141 = v123;
    uint64_t v142 = v169;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v168 + 16))(v167, v141, v169);
    unint64_t v143 = (*(unsigned __int8 *)(v139 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
    uint64_t v144 = swift_allocObject();
    id v145 = v190;
    *(void *)(v144 + 16) = v190;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v139 + 32))(v144 + v143, v140, v142);
    CGRect v205 = sub_10011BF50;
    uint64_t v206 = v144;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v202 = 1107296256;
    CGFloat v203 = sub_1000162D4;
    CGAffineTransform v204 = &unk_1008BD1D8;
    double v146 = _Block_copy(&aBlock);
    id v147 = v145;
    swift_release();
    uint64_t v148 = v173;
    static DispatchQoS.unspecified.getter();
    CGAffineTransform aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10011AA40((unint64_t *)&qword_100988CC0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100082C28((uint64_t *)&unk_100984510);
    sub_1000DD560((unint64_t *)&qword_100988CD0, (uint64_t *)&unk_100984510);
    uint64_t v149 = v175;
    uint64_t v150 = v178;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v146);

    (*(void (**)(unsigned char *, uint64_t))(v177 + 8))(v149, v150);
    (*(void (**)(unsigned char *, uint64_t))(v174 + 8))(v148, v176);
    ((void (*)(unsigned char *, uint64_t))v200)(v137, v138);
    ((void (*)(unsigned char *, uint64_t))v185)(v195, v192);
    ((void (*)(unsigned char *, uint64_t))v193)(v194, v199);
    goto LABEL_54;
  }
  char v120 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v121 = v94;
  uint64_t v122 = v198;
  v95(v121, v198);
  v95(v188, v122);
  uint64_t v118 = v184;
  uint64_t v119 = v199;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v164)(v184, v93, v199);
  if (v120) {
    goto LABEL_37;
  }
  PageFacets.Facet.displayType.getter();
  CGFloat v127 = v161;
  ((void (*)(unsigned char *, void, uint64_t))v186)(v161, v152, v122);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (aBlock == v207 && v202 == v208) {
    char v128 = 1;
  }
  else {
    char v128 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v123 = v181;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v129 = v198;
  v95(v127, v198);
  v95(v163, v129);
  ((void (*)(unsigned char *, uint64_t))v193)(v184, v199);
  if (v128) {
    goto LABEL_38;
  }
  ((void (*)(unsigned char *, uint64_t))v185)(v195, v192);
  ((void (*)(unsigned char *, uint64_t))v193)(v93, v199);
LABEL_54:
  sub_10011A5E4((uint64_t)v196);
}

uint64_t sub_10011A080()
{
  return type metadata accessor for PageFacetsViewController(0);
}

uint64_t type metadata accessor for PageFacetsViewController(uint64_t a1)
{
  return sub_10007F0EC(a1, (uint64_t *)&unk_1009846F8);
}

void sub_10011A0A8()
{
  sub_10011A17C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10011A17C()
{
  if (!qword_100984708)
  {
    type metadata accessor for PageFacets();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100984708);
    }
  }
}

uint64_t *sub_10011A1D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for PageFacets.Facet();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *(int *)(sub_100082C28(&qword_100984710) + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PageFacets.Facet.Option();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10011A320(uint64_t a1)
{
  EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
  uint64_t v3 = type metadata accessor for PageFacets.Facet();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a1 + *(int *)(sub_100082C28(&qword_100984710) + 48);
    uint64_t v6 = type metadata accessor for PageFacets.Facet.Option();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

uint64_t sub_10011A3EC(uint64_t a1, uint64_t a2)
{
  EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for PageFacets.Facet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = *(int *)(sub_100082C28(&qword_100984710) + 48);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = type metadata accessor for PageFacets.Facet.Option();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10011A4E0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10011A5E4(a1);
    EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for PageFacets.Facet();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = *(int *)(sub_100082C28(&qword_100984710) + 48);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = type metadata accessor for PageFacets.Facet.Option();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10011A5E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PageFacetsViewController.Item(uint64_t a1)
{
  return sub_10007F0EC(a1, qword_100984788);
}

uint64_t sub_10011A660(uint64_t a1, uint64_t a2)
{
  EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for PageFacets.Facet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = *(int *)(sub_100082C28(&qword_100984710) + 48);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = type metadata accessor for PageFacets.Facet.Option();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10011A754(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10011A5E4(a1);
    EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for PageFacets.Facet();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = *(int *)(sub_100082C28(&qword_100984710) + 48);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = type metadata accessor for PageFacets.Facet.Option();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowDestination(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FlowDestination(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_10011A8A8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10011A8B8()
{
  uint64_t result = type metadata accessor for PageFacets.Facet();
  if (v1 <= 0x3F)
  {
    v3[4] = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for PageFacets.Facet.Option();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10011A994()
{
  return sub_10011AA40(&qword_1009847C0, (void (*)(uint64_t))type metadata accessor for PageFacetsViewController.Item);
}

uint64_t sub_10011A9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011AA40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10011AA88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = PageFacets.Facet.defaultOptions.getter();
  char v5 = sub_1002F9B34(a1, v4);
  swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t result = PageFacets.Facet.Option.title.getter();
  }
  else
  {
    uint64_t result = 0;
    uint64_t v7 = 0;
  }
  *a2 = result;
  a2[1] = v7;
  return result;
}

void sub_10011AB04(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = type metadata accessor for PageFacets.Facet();
  uint64_t v43 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100082C28(&qword_100984838);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin(v8);
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v44 = (char *)&v36 - v9;
  int64_t v46 = 0;
  uint64_t v40 = a1;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v37 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v38 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v39 = v43 + 16;
  uint64_t v41 = (void (**)(uint64_t, uint64_t))(v43 + 8);
  uint64_t v42 = (void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
  int64_t v36 = v38 - 1;
  uint64_t v15 = (uint64_t *)&unk_100984840;
  uint64_t v16 = (uint64_t)v45;
  uint64_t v17 = v47;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v46 << 6);
LABEL_8:
      uint64_t v20 = v40;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v43 + 16))(v7, *(void *)(v40 + 48) + *(void *)(v43 + 72) * v19, v47, v10);
      uint64_t v21 = *(void *)(v20 + 56);
      uint64_t v22 = sub_100082C28(v15);
      *(void *)&v7[*(int *)(v22 + 48)] = *(void *)(v21 + 8 * v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 0, 1, v22);
      swift_bridgeObjectRetain();
      uint64_t v23 = (uint64_t)v44;
      goto LABEL_30;
    }
    int64_t v24 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v23 = (uint64_t)v44;
    if (v24 < v38)
    {
      unint64_t v25 = *(void *)(v37 + 8 * v24);
      if (v25) {
        goto LABEL_12;
      }
      int64_t v26 = v46 + 2;
      ++v46;
      if (v24 + 1 < v38)
      {
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (v25) {
          goto LABEL_15;
        }
        int64_t v46 = v24 + 1;
        if (v24 + 2 < v38)
        {
          unint64_t v25 = *(void *)(v37 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_12;
          }
          int64_t v46 = v24 + 2;
          if (v24 + 3 < v38)
          {
            unint64_t v25 = *(void *)(v37 + 8 * (v24 + 3));
            if (v25)
            {
              v24 += 3;
              goto LABEL_12;
            }
            int64_t v26 = v24 + 4;
            int64_t v46 = v24 + 3;
            if (v24 + 4 < v38) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v27 = sub_100082C28(v15);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v7, 1, 1, v27);
    unint64_t v14 = 0;
LABEL_30:
    sub_10011C0FC((uint64_t)v7, v23);
    uint64_t v28 = v15;
    uint64_t v29 = sub_100082C28(v15);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29) == 1) {
      return;
    }
    uint64_t v30 = *(int *)(v29 + 48);
    (*v42)(v16, v23, v17);
    uint64_t v31 = *(void *)(v23 + v30);
    sub_10040760C(v16);
    LOBYTE(v30) = v32;
    (*v41)(v16, v17);
    if ((v30 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_100780718(v33, v31);
    char v35 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v28;
    if ((v35 & 1) == 0) {
      return;
    }
  }
  unint64_t v25 = *(void *)(v37 + 8 * v26);
  if (v25)
  {
LABEL_15:
    int64_t v24 = v26;
LABEL_12:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v19 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v46 = v24;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v38)
    {
      int64_t v46 = v36;
      goto LABEL_29;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_10011AFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = (char *)a1;
  uint64_t v51 = (char *)a2;
  uint64_t v2 = type metadata accessor for PageFacets.Facet.Option();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v45 - v6;
  uint64_t v52 = type metadata accessor for PageFacets.Facet();
  uint64_t v8 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  __n128 v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = type metadata accessor for PageFacetsViewController.Item(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v45 - v18;
  uint64_t v20 = sub_100082C28(&qword_1009847D8);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v22[*(int *)(v23 + 56)];
  sub_10011A9DC((uint64_t)v50, (uint64_t)v22);
  sub_10011A9DC((uint64_t)v51, v24);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10011A9DC((uint64_t)v22, (uint64_t)v19);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v42 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v13, v24, v52);
      char v38 = static PageFacets.Facet.== infix(_:_:)();
      char v35 = *(void (**)(char *, uint64_t))(v8 + 8);
      v35(v13, v42);
      uint64_t v40 = v19;
      uint64_t v41 = v42;
      goto LABEL_10;
    }
    uint64_t v16 = v19;
    goto LABEL_8;
  }
  uint64_t v47 = v10;
  uint64_t v50 = v4;
  uint64_t v51 = v7;
  uint64_t v26 = v48;
  uint64_t v25 = v49;
  sub_10011A9DC((uint64_t)v22, (uint64_t)v16);
  uint64_t v27 = *(int *)(sub_100082C28(&qword_100984710) + 48);
  uint64_t v28 = &v16[v27];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(&v16[v27], v25);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v52);
    sub_100082BCC((uint64_t)v22, &qword_1009847D8);
LABEL_12:
    char v38 = 0;
    return v38 & 1;
  }
  int64_t v46 = (char *)(v24 + v27);
  uint64_t v29 = v47;
  uint64_t v30 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v47, v24, v52);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v31(v51, v28, v25);
  uint64_t v32 = (uint64_t)v50;
  v31(v50, v46, v25);
  uint64_t v33 = v29;
  char v34 = static PageFacets.Facet.== infix(_:_:)();
  char v35 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v36 = v30;
  uint64_t v37 = (uint64_t)v51;
  v35(v16, v36);
  if ((v34 & 1) == 0)
  {
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v43(v32, v25);
    v43(v37, v25);
    v35(v33, v52);
    sub_10011A5E4((uint64_t)v22);
    goto LABEL_12;
  }
  char v38 = static PageFacets.Facet.Option.== infix(_:_:)();
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v39(v32, v25);
  v39(v37, v25);
  uint64_t v40 = v33;
  uint64_t v41 = v52;
LABEL_10:
  v35(v40, v41);
  sub_10011A5E4((uint64_t)v22);
  return v38 & 1;
}

uint64_t sub_10011B46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_10098F020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011B4D4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10011B50C()
{
}

char *sub_10011B514(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PageFacets.Facet.Option();
  __chkstk_darwin(v5);
  uint64_t v37 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v34 - v8;
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v44 = (char *)v34 - v13;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v45 = (char *)_swiftEmptyArrayStorage;
  uint64_t v39 = *(void *)(a1 + 16);
  if (v39)
  {
    uint64_t v15 = 0;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
    uint64_t v16 = v11 + 16;
    uint64_t v18 = *(unsigned __int8 *)(v16 + 64);
    v34[1] = v2;
    uint64_t v35 = (v18 + 32) & ~v18;
    uint64_t v38 = a1 + v35;
    uint64_t v19 = *(void *)(v16 + 56);
    uint64_t v42 = v17;
    uint64_t v43 = v19;
    uint64_t v41 = a2 + 56;
    uint64_t v20 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v21 = a2;
    uint64_t v22 = v16;
    do
    {
      uint64_t v40 = v15;
      v42(v44, v38 + v43 * v15, v5, v12);
      if (*(void *)(v21 + 16)
        && (uint64_t v23 = v21,
            sub_10011AA40(&qword_1009847D0, (void (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option), uint64_t v24 = v22, v25 = dispatch thunk of Hashable._rawHashValue(seed:)(), v26 = -1 << *(unsigned char *)(v21 + 32), v27 = v25 & ~v26, ((*(void *)(v41 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) != 0))
      {
        uint64_t v28 = ~v26;
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v42)(v9, *(void *)(v21 + 48) + v27 * v43, v5);
          sub_10011AA40(&qword_100984880, (void (*)(uint64_t))&type metadata accessor for PageFacets.Facet.Option);
          char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*v20)(v9, v5);
          if (v29) {
            break;
          }
          unint64_t v27 = (v27 + 1) & v28;
          uint64_t v21 = v23;
          uint64_t v22 = v24;
          if (((*(void *)(v41 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
            goto LABEL_3;
          }
        }
        uint64_t v30 = *v36;
        (*v36)(v37, v44, v5);
        uint64_t v31 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10012987C(0, *((void *)v31 + 2) + 1, 1);
          uint64_t v31 = v45;
        }
        unint64_t v33 = *((void *)v31 + 2);
        unint64_t v32 = *((void *)v31 + 3);
        if (v33 >= v32 >> 1)
        {
          sub_10012987C(v32 > 1, v33 + 1, 1);
          uint64_t v31 = v45;
        }
        *((void *)v31 + 2) = v33 + 1;
        v30(&v31[v35 + v33 * v43], v37, v5);
        uint64_t v45 = v31;
        uint64_t v21 = v23;
        uint64_t v22 = v24;
      }
      else
      {
LABEL_3:
        (*v20)(v44, v5);
      }
      uint64_t v15 = v40 + 1;
    }
    while (v40 + 1 != v39);
    return v45;
  }
  return result;
}

void sub_10011B8D8()
{
  *(void *)&v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  unint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_pageFacets];
  uint64_t v2 = type metadata accessor for PageFacets();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = OBJC_IVAR____TtC8AppStore24PageFacetsViewController_selectedFacetOptions;
  *(void *)&v0[v3] = sub_10066DBC8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8AppStore24PageFacetsViewController_preselectionContentOffset];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10011B9E0()
{
  uint64_t v1 = type metadata accessor for PageFacets.Facet.DisplayType();
  uint64_t v30 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v29 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - v4;
  uint64_t v6 = type metadata accessor for PageFacets.Facet();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100082C28(&qword_1009847E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PageFacetsViewController.Item(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v29 - v17;
  uint64_t v19 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore24PageFacetsViewController_diffableDataSource);
  if (v19)
  {
    id v20 = v19;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_100082BCC((uint64_t)v11, &qword_1009847E0);
    }
    else
    {
      sub_10011BE20((uint64_t)v11, (uint64_t)v18);
      sub_10011A9DC((uint64_t)v18, (uint64_t)v15);
      EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
      uint64_t v22 = v31;
      uint64_t v23 = (void (**)(char *, uint64_t))(v31 + 8);
      if (EnumCaseMultiPayload == 1)
      {
        sub_10011A5E4((uint64_t)v18);
        uint64_t v24 = &v15[*(int *)(sub_100082C28(&qword_100984710) + 48)];
        uint64_t v25 = type metadata accessor for PageFacets.Facet.Option();
        (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
        (*v23)(v15, v32);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v8, v15, v32);
        PageFacets.Facet.displayType.getter();
        unint64_t v27 = v29;
        uint64_t v26 = v30;
        (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for PageFacets.Facet.DisplayType.toggle(_:), v1);
        sub_10011AA40(&qword_1009847E8, (void (*)(uint64_t))&type metadata accessor for PageFacets.Facet.DisplayType);
        dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v28 = *(void (**)(char *, uint64_t))(v26 + 8);
        v28(v27, v1);
        v28(v5, v1);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v32);
        sub_10011A5E4((uint64_t)v18);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10011BE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PageFacetsViewController.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011BE84()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10011BF50()
{
  type metadata accessor for IndexPath();
  uint64_t v1 = *(void **)(v0 + 16);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v1 deselectItemAtIndexPath:isa animated:1];
}

void sub_10011BFE8(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_10011BFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_10098F020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011C058()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011C090(uint64_t a1)
{
  return sub_100117F78(a1);
}

uint64_t sub_10011C0B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10011C0EC(void *a1)
{
  return sub_1004238E4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10011C0F4(uint64_t a1)
{
  return sub_100117EE4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10011C0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100984838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011C164(uint64_t a1)
{
  return sub_100117CF4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10011C16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_10098F020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10011C1D4(void *a1, uint64_t a2, uint64_t a3)
{
}

unint64_t sub_10011C1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001171E0(a1, a2, a3, a4);
}

uint64_t sub_10011C1E4()
{
  return sub_10011C288(&qword_100984860);
}

uint64_t sub_10011C1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100082C28(&qword_100984860);

  return sub_100117504(a1, a2, a3);
}

uint64_t sub_10011C27C()
{
  return sub_10011C288(&qword_100984858);
}

uint64_t sub_10011C288(uint64_t *a1)
{
  uint64_t v2 = sub_100082C28(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_10011C314()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t sub_10011C3AC()
{
  uint64_t v1 = type metadata accessor for PageFacets.Facet();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10011C478()
{
  type metadata accessor for PageFacets.Facet();

  sub_100117624();
}

uint64_t sub_10011C4EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10011AA88(a1, a2);
}

void sub_10011C518()
{
  qword_1009E1190 = 0x4081D00000000000;
}

void sub_10011C52C()
{
  qword_1009E1198 = 0x4074500000000000;
}

void sub_10011C540()
{
  qword_1009E11A0 = 0x4059000000000000;
}

void sub_10011C578()
{
  uint64_t v1 = *(unsigned char **)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayContainer);
  uint64_t v2 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_isTransitioning;
  int v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_isTransitioning);
  uint64_t v4 = &v1[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_isTransitioning];
  v1[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_isTransitioning] = v3;
  unsigned int v5 = v3 ^ 1;
  if (v1[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_sizeCategory] == 4) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  [v1 setHidden:v6];
  v1[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_isLayoutRequired] = (*v4 & 1) == 0;
  [v1 setNeedsLayout];
  *(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView) + qword_10099E280) = *(unsigned char *)(v0 + v2);
  sub_100579014();
}

uint64_t sub_10011C6EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v41 = a5;
  uint64_t v42 = a1;
  int v10 = a3;
  uint64_t v11 = type metadata accessor for EditorialDisplayOptions();
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TodayCard.Style();
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v38 = v14;
  *(void *)&double v15 = __chkstk_darwin(v14).n128_u64[0];
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v10 == 4) {
    int v18 = 5;
  }
  else {
    int v18 = a3;
  }
  id v19 = [v6 traitCollection:v15];
  sub_100085C74(v18, a4, v19);
  static CGFloat.allColumns.getter();
  PageGrid.componentMeasuringSize(spanning:)();
  if (v18 != 6)
  {
    if (v18 == 5)
    {
      PageGrid.columnWidth.getter();
    }
    else if (v18 == 4)
    {
      PageGrid.interColumnSpace.getter();
    }
    else
    {
      sub_1006AFBF0(v18);
    }
  }
  uint64_t v20 = Artwork.config(_:mode:prefersLayeredImage:)();

  id v21 = [v6 traitCollection];
  sub_100085C74(a3, a4, v21);
  static CGFloat.allColumns.getter();
  PageGrid.componentMeasuringSize(spanning:)();
  if (a3 != 6)
  {
    if (a3 == 5)
    {
      PageGrid.columnWidth.getter();
    }
    else if (a3 == 4)
    {
      PageGrid.interColumnSpace.getter();
    }
    else
    {
      sub_1006AFBF0(a3);
    }
  }
  uint64_t v42 = Artwork.config(_:mode:prefersLayeredImage:)();

  uint64_t v22 = *(unsigned char **)&v6[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView];
  uint64_t v23 = &v22[qword_10099E230];
  uint64_t v24 = *(void *)&v22[qword_10099E230];
  uint64_t v25 = *(void *)&v22[qword_10099E230 + 32];
  char v26 = v22[qword_10099E230 + 40];
  ArtworkLoaderConfig.size.getter();
  *(void *)uint64_t v23 = v24;
  *((void *)v23 + 1) = v27;
  *((void *)v23 + 2) = v28;
  *((void *)v23 + 3) = 0x402C000000000000;
  *((void *)v23 + 4) = v25;
  unsigned char v23[40] = v26;
  [v22 setNeedsLayout];
  id v29 = [*(id *)&v22[qword_10099E258] image];
  uint64_t v30 = TodayCard.inlineDescription.getter();
  unint64_t v32 = v31;
  TodayCard.style.getter();
  TodayCard.editorialDisplayOptions.getter();
  sub_100578398((uint64_t)v29, v30, v32, (uint64_t)v17, (uint64_t)v13, 1);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v40);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v38);
  type metadata accessor for ArtworkLoader();
  inject(_:from:)();
  *(void *)&v6[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey] = v20;
  swift_retain();
  swift_release();
  uint64_t v43 = v22;
  type metadata accessor for TodayCardLabelsView();
  sub_10009648C(&qword_100984928, (void (*)(uint64_t))type metadata accessor for TodayCardLabelsView);
  unint64_t v33 = v22;
  AnyHashable.init<A>(_:)();
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v35 = (void *)swift_allocObject();
  _OWORD v35[2] = v34;
  v35[3] = v20;
  v35[4] = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  ArtworkLoader.fetchArtwork(using:forReason:closestMatch:handlerKey:completionHandler:)();
  swift_release();
  sub_100082BCC((uint64_t)v44, &qword_100981560);
  swift_release();
  [v6 setNeedsLayout];
  swift_release();
  swift_release();
  return swift_release();
}

void sub_10011CC18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v29 = a1;
  uint64_t v8 = type metadata accessor for EditorialDisplayOptions();
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TodayCard.Style();
  uint64_t v27 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v15 = (void *)Strong;
    uint64_t v16 = *(void *)(Strong + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey);
    swift_retain();

    if (v16)
    {
      uint64_t v31 = v16;
      uint64_t v30 = a6;
      type metadata accessor for ArtworkLoaderConfig();
      sub_10009648C(&qword_100984930, (void (*)(uint64_t))&type metadata accessor for ArtworkLoaderConfig);
      swift_retain();
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      swift_release();
      swift_release();
      if (v17)
      {
        if (a4) {
          id v29 = 0;
        }
        else {
          id v18 = v29;
        }
        swift_beginAccess();
        uint64_t v19 = swift_unknownObjectWeakLoadStrong();
        if (v19)
        {
          uint64_t v20 = (void *)v19;
          id v21 = *(id *)(v19 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView);

          uint64_t v22 = TodayCard.inlineDescription.getter();
          unint64_t v24 = v23;
          TodayCard.style.getter();
          TodayCard.editorialDisplayOptions.getter();
          sub_100578398((uint64_t)v29, v22, v24, (uint64_t)v13, (uint64_t)v10, 1);

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
          (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
        }
        swift_beginAccess();
        uint64_t v25 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v25)
        {
          char v26 = v25;
          [v25 setNeedsLayout];
        }
      }
    }
  }
}

id sub_10011CF38(unsigned __int8 *a1, char a2)
{
  int v3 = v2;
  int v6 = a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory];
  v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory] = v6;
  if (v6 != 7)
  {
    uint64_t v7 = *(unsigned char **)&v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayContainer];
    v7[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_sizeCategory] = v6;
    if (v6 == 4) {
      char v8 = v7[OBJC_IVAR____TtC8AppStore29InfoLayerOverlayContainerView_isTransitioning] ^ 1;
    }
    else {
      char v8 = 0;
    }
    [v7 setHidden:v8 & 1];
    *(unsigned char *)(*(void *)&v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView] + qword_10099E238) = v6;
    sub_10005D910();
  }
  sub_10057B000(*(unsigned char **)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView]);
  uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
  if (v9 && *(void *)&v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay])
  {
    uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay + 8];
    uint64_t v11 = *(void *)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v10 + 120);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v13(v9, v11, a2 & 1, ObjectType, v10);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  sub_100096134((id)a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionMode]);
  [v2 setOverrideUserInterfaceStyle:[a1 overrideUserInterfaceStyle]];
  uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView];
  uint64_t v15 = *(void *)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView];
  uint64_t v16 = *(void *)(v15 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_style);
  uint64_t v17 = *(void *)(v15 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_style + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10001159C(v16, v17);
  *(void *)(v14 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_blurUserInterfaceStyle) = *(void *)(v15 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_blurUserInterfaceStyle);
  sub_10000C8E8();

  return [v3 setNeedsLayout];
}

id sub_10011D148()
{
  sub_1003FD854();
  [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView) + qword_10099E258) setImage:0];
  sub_1000E8FE0();
  sub_1000E8FE0();
  sub_1000E8FE0();
  *(void *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey) = 0;
  swift_release();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory) = 7;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_originalSizeCategory) = 7;
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock);
  uint64_t v2 = *v1;
  *uint64_t v1 = 0;
  v1[1] = 0;
  sub_10006012C(v2);
  int v3 = (void (*)(uint64_t))*v1;
  if (*v1)
  {
    uint64_t v4 = swift_retain();
    v3(v4);
    sub_10006012C((uint64_t)v3);
  }
  return sub_1006A23B0();
}

id sub_10011D25C(uint64_t a1, double a2, double a3)
{
  if (!*(void *)&v3[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay]) {
    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)&v3[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16);
  swift_unknownObjectRetain();
  uint64_t v11 = (void *)v10(ObjectType, v8);
  swift_unknownObjectRelease();
  [v4 convertPoint:v11 toCoordinateSpace:a2, a3];
  double v13 = v12;
  double v15 = v14;
  if (!objc_msgSend(v11, "pointInside:withEvent:", a1))
  {

    return 0;
  }
  [v11 hitTest:a1 withEvent:v13];

  return v16;
}

uint64_t sub_10011D3F4(uint64_t a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay))
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay + 8);
    uint64_t ObjectType = swift_getObjectType();
    unsigned int v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 128);
    swift_unknownObjectRetain();
    v5(a1, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  *(void *)(v1 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey) = 0;
  swift_release();
  int v6 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView);
  type metadata accessor for TodayCardLabelsView();
  sub_10009648C(&qword_100984928, (void (*)(uint64_t))type metadata accessor for TodayCardLabelsView);
  id v7 = v6;
  AnyHashable.init<A>(_:)();
  ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)();
  return sub_1000E2D1C((uint64_t)v9);
}

uint64_t getEnumTagSinglePayload for NavigationAccessory.Location(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TodayCardInfoLayerView.ProtectionMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011D848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayCardInfoLayerView.ProtectionMode()
{
  return &type metadata for TodayCardInfoLayerView.ProtectionMode;
}

unint64_t sub_10011D884()
{
  unint64_t result = qword_100984920;
  if (!qword_100984920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100984920);
  }
  return result;
}

uint64_t sub_10011D8D8()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayKind);
}

uint64_t sub_10011D8F0(uint64_t result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayKind;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t sub_10011D90C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_10011D940(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay);
  void *v3 = a1;
  v3[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t sub_10011D95C()
{
  return swift_weakLoadStrong();
}

uint64_t sub_10011D96C()
{
  swift_weakAssign();

  return swift_release();
}

void sub_10011D9B8()
{
}

void sub_10011D9E8(char *a1, void *a2)
{
  id v4 = [a1 traitCollection];
  id v5 = [v4 layoutDirection];

  if (v5 != [a2 layoutDirection])
  {
    id v6 = [a1 traitCollection];
    char v7 = UITraitCollection.prefersRightToLeftLayouts.getter();

    uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView];
    double v9 = 0.13962634;
    if (v7) {
      double v9 = -0.13962634;
    }
    double v10 = *(double *)(v8 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_rotationAngle);
    *(double *)(v8 + OBJC_IVAR____TtC8AppStore28TodayCardProtectionLayerView_rotationAngle) = v9;
    if (v9 != v10) {
      sub_1000573B0();
    }
  }
}

id sub_10011DAC4(char *a1)
{
  sub_10005C0E4();
  uint64_t v2 = *(void (**)(uint64_t))&a1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock];
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_10006012C((uint64_t)v2);
  }

  return [a1 setNeedsLayout];
}

void sub_10011DB44()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsView;
  v10[0] = sub_100053DF8;
  v10[1] = 0;
  v10[2] = sub_100096684;
  _OWORD v10[3] = 0;
  void v10[4] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  uint64_t v10[5] = 0;
  v10[6] = sub_100053DF8;
  v10[7] = 0;
  v10[8] = variable initialization expression of CondensedEditorialSearchResultContentView.iconGrid;
  v10[9] = 0;
  v10[10] = sub_100096688;
  v10[11] = 0;
  if (qword_10097FED0 != -1) {
    swift_once();
  }
  long long v11 = xmmword_1009E63C8;
  v12[0] = *(_OWORD *)&qword_1009E63D8;
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)&qword_1009E63E0 + 1);
  id v3 = objc_allocWithZone((Class)type metadata accessor for TodayCardLabelsView());
  *(void *)&v0[v2] = sub_10005EBD8((uint64_t)v10, &v11);
  *(void *)&v0[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_labelsArtworkFetchKey] = 0;
  uint64_t v4 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_gradientBlurView;
  if (qword_10097E630 != -1) {
    swift_once();
  }
  objc_allocWithZone((Class)type metadata accessor for TodayCardProtectionLayerView());
  uint64_t v5 = swift_bridgeObjectRetain();
  *(void *)&v0[v4] = sub_100058758(v5);
  uint64_t v6 = OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayContainer;
  type metadata accessor for InfoLayerOverlayContainerView();
  *(void *)&v1[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionMode] = 0;
  char v7 = &v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_protectionUpdateBlock];
  *char v7 = 0;
  v7[1] = 0;
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_sizeCategory] = 7;
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_originalSizeCategory] = 7;
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_isTransitioning] = 0;
  uint64_t v8 = &v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlayKind];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  double v9 = &v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_overlay];
  *double v9 = 0;
  v9[1] = 0;
  swift_weakInit();
  v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_isExpanded] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore22TodayCardInfoLayerView_preferredGradientType] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10011DDB4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011DDEC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011DE24()
{
  return sub_10011DE34(56);
}

uint64_t sub_10011DE2C()
{
  return sub_10011DE34(40);
}

uint64_t sub_10011DE34(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

void sub_10011DE88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10011CC18(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_10011DE94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JSIncident();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  if (qword_10097E8F8 != -1) {
    swift_once();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(Strong
                                                                   + OBJC_IVAR____TtC8AppStore11AppDelegate_window), "rootViewController")),
        swift_unknownObjectRelease(),
        v6))
  {
    JSIncident.contextSummary.getter();
    JSIncident.problemSummary.getter();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v9 = [self alertControllerWithTitle:v7 message:v8 preferredStyle:1];

    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v11 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v11 + v10, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    NSString v12 = String._bridgeToObjectiveC()();
    aBlock[4] = sub_10011FFBC;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100778BDC;
    aBlock[3] = &unk_1008BD5D0;
    double v13 = _Block_copy(aBlock);
    swift_release();
    double v14 = self;
    id v15 = [v14 actionWithTitle:v12 style:0 handler:v13];
    _Block_release(v13);

    [v9 addAction:v15];
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v14 actionWithTitle:v16 style:0 handler:0];

    [v9 addAction:v17];
    [v6 presentViewController:v9 animated:1 completion:0];
  }
  else
  {
    if (qword_10097E340 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for OSLogger();
    sub_100087728(v18, (uint64_t)qword_1009E1810);
    sub_100082C28((uint64_t *)&unk_100984540);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
    LogMessage.init(stringLiteral:)();
    Logger.debug(_:)();
    swift_bridgeObjectRelease();
  }
}

void sub_10011E330()
{
  id v0 = [self generalPasteboard];
  JSIncident.description.getter();
  id v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setString:v1];
}

uint64_t sub_10011E3C0()
{
  uint64_t v0 = type metadata accessor for OSLogger.Subsystem();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSLogger();
  sub_100042444(v4, qword_1009E11A8);
  sub_100087728(v4, (uint64_t)qword_1009E11A8);
  if (qword_10097E338 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100087728(v0, (uint64_t)qword_1009E17F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSLogger.init(subsystem:category:)();
}

uint64_t sub_10011E51C()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  uint64_t v2 = v0 + OBJC_IVAR____TtC8AppStore19DiagnosticsReporter_configuration;
  uint64_t v3 = type metadata accessor for MetricsLogger.Configuration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_deallocClassInstance();
}

uint64_t sub_10011E5F4()
{
  return type metadata accessor for DiagnosticsReporter();
}

uint64_t sub_10011E5FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v2 - 8);
  uint64_t v42 = v2;
  __chkstk_darwin(v2);
  uint64_t v40 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v37 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for MetricsLogger.Configuration();
  uint64_t v33 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v35 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSLogger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (id)ASKBuildTypeGetCurrent();
  sub_100082C28(&qword_100984A10);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1007BF710;
  NSString v12 = (void *)ASKBuildTypeDebug;
  double v13 = (void *)ASKBuildTypeConvergence;
  *(void *)(v11 + 32) = ASKBuildTypeDebug;
  *(void *)(v11 + 40) = v13;
  double v14 = (void *)ASKBuildTypeInternal;
  *(void *)(v11 + 48) = ASKBuildTypeInternal;
  type metadata accessor for BuildType(0);
  id v15 = v12;
  id v16 = v13;
  id v17 = v14;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  int IsAnyOf = ASKBuildTypeIsAnyOf();

  if (IsAnyOf)
  {
    *(void *)&long long v43 = a1;
    swift_errorRetain();
    sub_100082C28(&qword_100984620);
    sub_100082C28(&qword_100984A18);
    if (swift_dynamicCast())
    {
      sub_100081DD4(&v44, (uint64_t)&aBlock);
      sub_100081D90(&aBlock, (uint64_t)v50);
      *(void *)&long long v43 = dispatch thunk of MetricsReportableError.metricsErrorDescription.getter();
      *((void *)&v43 + 1) = v20;
      id v21 = sub_100081D90(&aBlock, (uint64_t)v50);
      __chkstk_darwin(v21);
      *(&v33 - 2) = (uint64_t)&v43;
      dispatch thunk of MetricsReportableError.describeForMetricsEvent(using:)();
      if (qword_10097E100 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_100087728(v6, (uint64_t)qword_1009E11A8);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v22, v6);
      sub_100082C28((uint64_t *)&unk_100984540);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
      *((void *)&v45 + 1) = &type metadata for String;
      long long v44 = v43;
      swift_bridgeObjectRetain();
      static LogMessage.safe(_:)();
      sub_100082BCC((uint64_t)&v44, (uint64_t *)&unk_100982B40);
      Logger.error(_:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&aBlock);
      goto LABEL_10;
    }
    uint64_t v46 = 0;
    long long v44 = 0u;
    long long v45 = 0u;
    sub_100082BCC((uint64_t)&v44, (uint64_t *)&unk_100984A20);
  }
  if (qword_10097E100 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100087728(v6, (uint64_t)qword_1009E11A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v23, v6);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
  swift_getErrorValue();
  uint64_t v24 = Error.localizedDescription.getter();
  uint64_t v50 = &type metadata for String;
  CGAffineTransform aBlock = (void **)v24;
  uint64_t v48 = v25;
  static LogMessage.safe(_:)();
  sub_100082BCC((uint64_t)&aBlock, (uint64_t *)&unk_100982B40);
  Logger.error(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_10:
  sub_10011FC1C(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v35, v36 + OBJC_IVAR____TtC8AppStore19DiagnosticsReporter_configuration, v34);
  type metadata accessor for MetricsLogger();
  swift_allocObject();
  MetricsLogger.init(loggerName:configuration:)();
  MetricsLogger.log(contentsOf:)();
  sub_100050CD0();
  char v26 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a1;
  uint64_t v51 = sub_10011FE6C;
  uint64_t v52 = v27;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v48 = 1107296256;
  uint64_t v49 = sub_1000162D4;
  uint64_t v50 = &unk_1008BD508;
  uint64_t v28 = _Block_copy(&aBlock);
  swift_errorRetain();
  swift_release();
  id v29 = v37;
  static DispatchQoS.unspecified.getter();
  CGAffineTransform aBlock = (void **)&_swiftEmptyArrayStorage;
  sub_100078F78();
  sub_100082C28((uint64_t *)&unk_100984510);
  sub_100060CC8();
  uint64_t v30 = v40;
  uint64_t v31 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v28);
  swift_release();

  (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v29, v39);
}

uint64_t sub_10011EFB4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v63 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v62 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for JSIncident();
  *(void *)&long long v64 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v64 + 64);
  __chkstk_darwin(v9);
  uint64_t v68 = type metadata accessor for OSLogger();
  uint64_t v51 = *(void (***)(char *, uint64_t))(v68 - 8);
  __chkstk_darwin(v68);
  unint64_t v60 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MetricsLogger.Configuration();
  __chkstk_darwin(v12);
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + OBJC_IVAR____TtC8AppStore19DiagnosticsReporter_configuration);
  uint64_t v59 = type metadata accessor for MetricsLogger();
  swift_allocObject();
  uint64_t v15 = MetricsLogger.init(loggerName:configuration:)();
  if (!*(void *)(a1 + 16)) {
    return swift_release();
  }
  uint64_t v67 = *(void *)(a1 + 16);
  uint64_t v61 = v15;
  uint64_t v55 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = (void *)v9;
  unint64_t v54 = sub_100050CD0();
  uint64_t v16 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v17 = a1 + ((v16 + 32) & ~v16);
  uint64_t v18 = qword_10097E100;
  v41[1] = a1;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))(v51 + 2);
  uint64_t v65 = (void (**)(uint64_t *, uint64_t, void *))(v64 + 16);
  uint64_t v52 = *(void *)(v64 + 72);
  ++v51;
  uint64_t v50 = (v16 + 16) & ~v16;
  uint64_t v49 = v50 + v10;
  uint64_t v48 = v16 | 7;
  uint64_t v47 = (void (**)(uint64_t, char *, void *))(v64 + 32);
  uint64_t v46 = &v71;
  long long v45 = (void (**)(char *, uint64_t))(v63 + 8);
  long long v44 = (void (**)(char *, uint64_t))(v62 + 8);
  long long v64 = xmmword_1007BF1D0;
  unint64_t v43 = 0x8000000100807CE0;
  uint64_t v19 = v67;
  uint64_t v20 = v68;
  uint64_t v58 = v5;
  uint64_t v57 = v6;
  uint64_t v56 = v3;
  uint64_t v42 = v8;
  do
  {
    uint64_t v67 = v19;
    uint64_t v21 = sub_100087728(v20, (uint64_t)qword_1009E11A8);
    uint64_t v22 = v60;
    (*v53)(v60, v21, v20);
    uint64_t v62 = sub_100082C28((uint64_t *)&unk_100984540);
    uint64_t v63 = *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
    *(_OWORD *)(swift_allocObject() + 16) = v64;
    LogMessage.init(stringLiteral:)();
    uint64_t v23 = v66;
    double v72 = v66;
    uint64_t v24 = sub_1000808B8((uint64_t *)&aBlock);
    uint64_t v25 = *v65;
    (*v65)(v24, v17, v23);
    static LogMessage.safe(_:)();
    sub_100082BCC((uint64_t)&aBlock, (uint64_t *)&unk_100982B40);
    Logger.warning(_:)();
    swift_bridgeObjectRelease();
    (*v51)(v22, v68);
    uint64_t v75 = v61;
    *(_OWORD *)(swift_allocObject() + 16) = v64;
    char v26 = v42;
    uint64_t v27 = (void **)JSIncident.problemSummary.getter();
    double v72 = &type metadata for String;
    CGAffineTransform aBlock = v27;
    uint64_t v70 = v28;
    static LogMessage.safe(_:)();
    sub_100082BCC((uint64_t)&aBlock, (uint64_t *)&unk_100982B40);
    uint64_t v29 = v56;
    uint64_t v30 = v58;
    uint64_t v31 = (void **)JSIncident.contextSummary.getter();
    double v72 = &type metadata for String;
    CGAffineTransform aBlock = v31;
    uint64_t v70 = v32;
    static LogMessage.safe(_:)();
    sub_100082BCC((uint64_t)&aBlock, (uint64_t *)&unk_100982B40);
    Logger.error(_:)();
    swift_bridgeObjectRelease();
    uint64_t v33 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v34 = v55;
    uint64_t v35 = v66;
    v25((uint64_t *)v55, v17, v66);
    uint64_t v36 = swift_allocObject();
    (*v47)(v36 + v50, v34, v35);
    uint64_t v73 = sub_10011FE80;
    uint64_t v74 = v36;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v70 = 1107296256;
    uint64_t v71 = sub_1000162D4;
    double v72 = &unk_1008BD558;
    uint64_t v37 = _Block_copy(&aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    CGAffineTransform aBlock = (void **)&_swiftEmptyArrayStorage;
    sub_100078F78();
    sub_100082C28((uint64_t *)&unk_100984510);
    sub_100060CC8();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    uint64_t v38 = v37;
    uint64_t v20 = v68;
    _Block_release(v38);

    uint64_t v39 = v57;
    (*v45)(v30, v29);
    (*v44)(v26, v39);
    v17 += v52;
    uint64_t v19 = v67 - 1;
  }
  while (v67 != 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011F954(uint64_t a1, void *a2)
{
  v4._countAndFlagsBits = 10;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = a1;
  v5._object = a2;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 8250;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  _print_unlocked<A, B>(_:_:)();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  String.append(_:)(v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011FA10()
{
  type metadata accessor for DebugNotificationCenter();
  swift_initStaticObject();
  swift_getErrorValue();
  uint64_t v0 = Error.localizedDescription.getter();
  sub_1003AD0E4(2, v0, v1, 0, 0, 3.0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011FAA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JSIncident();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebugNotificationCenter();
  swift_initStaticObject();
  uint64_t v6 = JSIncident.problemSummary.getter();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, v5, v2);
  sub_1003AD0E4(1, v6, v8, (uint64_t)sub_10011FE9C, v10, 3.0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10011FC1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JSError();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for JSONError();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1;
  swift_errorRetain();
  sub_100082C28(&qword_100984620);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_errorRelease();
    return 1852797802;
  }
  else
  {
    swift_errorRelease();
    uint64_t v12 = a1;
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_errorRelease();
      return 29546;
    }
    else
    {
      swift_errorRelease();
      return 0x74736F6E67616964;
    }
  }
}

uint64_t sub_10011FE34()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011FE6C()
{
  return sub_10011FA10();
}

uint64_t sub_10011FE74(uint64_t a1, void *a2)
{
  return sub_10011F954(a1, a2);
}

uint64_t sub_10011FE80()
{
  return sub_10011FEB4(sub_10011FAA4);
}

uint64_t sub_10011FE9C()
{
  return sub_10011FEB4((uint64_t (*)(uint64_t))sub_10011DE94);
}

uint64_t sub_10011FEB4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for JSIncident() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_10011FF2C()
{
  uint64_t v1 = type metadata accessor for JSIncident();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10011FFBC()
{
  type metadata accessor for JSIncident();

  sub_10011E330();
}

uint64_t sub_100120038(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetadataRibbonItemViewType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Feature();
  v28[3] = v8;
  v28[4] = sub_100124D04((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
  unint64_t v9 = sub_1000808B8(v28);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for Feature.search_tags(_:), v8);
  LOBYTE(v8) = isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v28);
  if (v8) {
    a2 = a1;
  }
  if (a2)
  {
    type metadata accessor for MetadataRibbonItem();
    if (Array.isNotEmpty.getter())
    {
      if (a2 >> 62) {
        goto LABEL_25;
      }
      uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v10; uint64_t v10 = _CocoaArrayWrapper.endIndex.getter())
      {
        unint64_t v27 = a2 & 0xC000000000000001;
        uint64_t v11 = (uint64_t (**)(char *, uint64_t))(v5 + 88);
        int v12 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
        int v26 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
        int v25 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
        int v24 = enum case for MetadataRibbonItemViewType.starRating(_:);
        int v23 = enum case for MetadataRibbonItemViewType.textLabel(_:);
        int v22 = enum case for MetadataRibbonItemViewType.divider(_:);
        uint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
        uint64_t v14 = 4;
        int v21 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
        while (1)
        {
          uint64_t v15 = v14 - 4;
          if (!v27) {
            break;
          }
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v16 = __OFADD__(v15, 1);
          uint64_t v17 = v14 - 3;
          if (v16) {
            goto LABEL_24;
          }
LABEL_13:
          MetadataRibbonItem.viewContainerType.getter();
          int v18 = (*v11)(v7, v4);
          if (v18 == v12 || v18 == v26 || v18 == v25 || v18 == v24 || v18 == v23 || v18 == v22 || v18 == v21)
          {
            swift_bridgeObjectRelease();
            swift_release();
            return 1;
          }
          (*v13)(v7, v4);
          swift_release();
          ++v14;
          if (v17 == v10) {
            goto LABEL_21;
          }
        }
        uint64_t v5 = *(void *)(a2 + 8 * v14);
        swift_retain();
        BOOL v16 = __OFADD__(v15, 1);
        uint64_t v17 = v14 - 3;
        if (!v16) {
          goto LABEL_13;
        }
LABEL_24:
        __break(1u);
LABEL_25:
        swift_bridgeObjectRetain();
      }
LABEL_21:
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

double sub_10012037C(uint64_t a1, NSString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, unsigned __int8 a10, void *a11)
{
  return sub_100123F94(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_100120398()
{
  uint64_t v0 = type metadata accessor for FontSource();
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (void *)((char *)v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for SmallSearchLockupLayout.Metrics();
  sub_100042444(v4, qword_1009E11C0);
  v50[0] = sub_100087728(v4, (uint64_t)qword_1009E11C0);
  v94[8] = (uint64_t)&type metadata for Double;
  v94[9] = (uint64_t)&protocol witness table for Double;
  v94[5] = 0x4024000000000000;
  if (qword_10097F178 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for FontUseCase();
  uint64_t v6 = sub_100087728(v5, (uint64_t)qword_1009E3ED8);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v3, v6, v5);
  uint64_t v7 = (void (*)(void *, void, uint64_t))v1[13];
  v7(v3, enum case for FontSource.useCase(_:), v0);
  uint64_t v56 = v7;
  uint64_t v8 = type metadata accessor for StaticDimension();
  v94[3] = v8;
  v94[4] = (uint64_t)&protocol witness table for StaticDimension;
  uint64_t v53 = v8;
  sub_1000808B8(v94);
  uint64_t v92 = v0;
  uint64_t v93 = &protocol witness table for FontSource;
  unint64_t v9 = sub_1000808B8(v91);
  uint64_t v55 = (void (*)(uint64_t *, void *, uint64_t))v1[2];
  v55(v9, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  uint64_t v10 = (void (*)(void *, uint64_t))v1[1];
  v10(v3, v0);
  uint64_t v51 = v10;
  void *v3 = UIFontTextStyleBody;
  unsigned int v52 = enum case for FontSource.textStyle(_:);
  v50[2] = v1 + 13;
  ((void (*)(void *))v7)(v3);
  uint64_t v92 = v8;
  uint64_t v93 = &protocol witness table for StaticDimension;
  sub_1000808B8(v91);
  uint64_t v89 = v0;
  uint64_t v90 = &protocol witness table for FontSource;
  uint64_t v11 = sub_1000808B8(v88);
  int v12 = v55;
  v55(v11, v3, v0);
  unint64_t v54 = v1 + 2;
  uint64_t v13 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)();
  v10(v3, v0);
  void *v3 = v13;
  uint64_t v14 = v52;
  uint64_t v15 = v56;
  v56(v3, v52, v0);
  uint64_t v89 = v53;
  uint64_t v90 = &protocol witness table for StaticDimension;
  sub_1000808B8(v88);
  uint64_t v86 = v0;
  uint64_t v87 = &protocol witness table for FontSource;
  BOOL v16 = sub_1000808B8(v85);
  v12(v16, v3, v0);
  uint64_t v17 = v13;
  StaticDimension.init(_:scaledLike:)();
  int v18 = v51;
  v51(v3, v0);
  void *v3 = v17;
  v15(v3, v14, v0);
  uint64_t v19 = v53;
  uint64_t v86 = v53;
  uint64_t v87 = &protocol witness table for StaticDimension;
  sub_1000808B8(v85);
  uint64_t v83 = v0;
  NSString v84 = &protocol witness table for FontSource;
  uint64_t v20 = sub_1000808B8(v82);
  v12(v20, v3, v0);
  int v21 = v17;
  StaticDimension.init(_:scaledLike:)();
  v18(v3, v0);
  v50[1] = v1 + 1;
  void *v3 = v21;
  uint64_t v22 = v52;
  v56(v3, v52, v0);
  uint64_t v83 = v19;
  NSString v84 = &protocol witness table for StaticDimension;
  sub_1000808B8(v82);
  uint64_t v80 = v0;
  uint64_t v81 = &protocol witness table for FontSource;
  int v23 = sub_1000808B8(v79);
  v55(v23, v3, v0);
  int v24 = v21;
  StaticDimension.init(_:scaledLike:)();
  v18(v3, v0);
  void *v3 = UIFontTextStyleFootnote;
  int v25 = v56;
  v56(v3, v22, v0);
  uint64_t v80 = v19;
  uint64_t v81 = &protocol witness table for StaticDimension;
  sub_1000808B8(v79);
  uint64_t v77 = v0;
  char v78 = &protocol witness table for FontSource;
  int v26 = sub_1000808B8(v76);
  unint64_t v27 = v55;
  v55(v26, v3, v0);
  uint64_t v28 = UIFontTextStyleFootnote;
  StaticDimension.init(_:scaledLike:)();
  uint64_t v29 = v51;
  v51(v3, v0);
  void *v3 = v28;
  uint64_t v30 = v52;
  v25(v3, v52, v0);
  uint64_t v31 = v53;
  uint64_t v77 = v53;
  char v78 = &protocol witness table for StaticDimension;
  sub_1000808B8(v76);
  uint64_t v74 = v0;
  uint64_t v75 = &protocol witness table for FontSource;
  uint64_t v32 = sub_1000808B8(v73);
  v27(v32, v3, v0);
  uint64_t v33 = v28;
  StaticDimension.init(_:scaledLike:)();
  v29(v3, v0);
  void *v3 = v33;
  uint64_t v34 = v56;
  v56(v3, v30, v0);
  uint64_t v74 = v31;
  uint64_t v75 = &protocol witness table for StaticDimension;
  sub_1000808B8(v73);
  uint64_t v71 = v0;
  double v72 = &protocol witness table for FontSource;
  uint64_t v35 = sub_1000808B8(v70);
  v27(v35, v3, v0);
  uint64_t v36 = v33;
  StaticDimension.init(_:scaledLike:)();
  v51(v3, v0);
  void *v3 = v36;
  uint64_t v37 = v52;
  v34(v3, v52, v0);
  uint64_t v38 = v53;
  uint64_t v71 = v53;
  double v72 = &protocol witness table for StaticDimension;
  sub_1000808B8(v70);
  uint64_t v68 = v0;
  uint64_t v69 = &protocol witness table for FontSource;
  uint64_t v39 = sub_1000808B8(v67);
  uint64_t v40 = v55;
  v55(v39, v3, v0);
  uint64_t v41 = v36;
  StaticDimension.init(_:scaledLike:)();
  uint64_t v42 = v51;
  v51(v3, v0);
  void *v3 = v41;
  uint64_t v43 = v37;
  long long v44 = v56;
  v56(v3, v43, v0);
  uint64_t v68 = v38;
  uint64_t v69 = &protocol witness table for StaticDimension;
  sub_1000808B8(v67);
  uint64_t v65 = (void *)v0;
  uint64_t v66 = &protocol witness table for FontSource;
  long long v45 = sub_1000808B8(v64);
  v40(v45, v3, v0);
  uint64_t v46 = v41;
  StaticDimension.init(_:scaledLike:)();
  v42(v3, v0);
  uint64_t v66 = &protocol witness table for Double;
  uint64_t v65 = &type metadata for Double;
  v63[19] = (uint64_t)&protocol witness table for Double;
  v64[0] = 0x4024000000000000;
  v63[18] = (uint64_t)&type metadata for Double;
  v63[14] = (uint64_t)&protocol witness table for Double;
  v63[15] = 0x4010000000000000;
  v63[13] = (uint64_t)&type metadata for Double;
  v63[9] = (uint64_t)&protocol witness table for Double;
  v63[10] = 0x4020000000000000;
  v63[8] = (uint64_t)&type metadata for Double;
  v63[5] = 0x401C000000000000;
  void *v3 = v46;
  v44(v3, v52, v0);
  _OWORD v63[3] = v53;
  v63[4] = (uint64_t)&protocol witness table for StaticDimension;
  sub_1000808B8(v63);
  uint64_t v61 = (void *)v0;
  uint64_t v62 = &protocol witness table for FontSource;
  uint64_t v47 = sub_1000808B8(v60);
  v55(v47, v3, v0);
  uint64_t v48 = v46;
  StaticDimension.init(_:scaledLike:)();
  v42(v3, v0);
  uint64_t v61 = &type metadata for Double;
  uint64_t v62 = &protocol witness table for Double;
  uint64_t v59 = &protocol witness table for Double;
  v60[0] = 0x4040000000000000;
  uint64_t v58 = &type metadata for Double;
  uint64_t v57 = 0x4024000000000000;
  return SmallSearchLockupLayout.Metrics.init(artworkSize:artworkMargin:headingSpace:titleRegularSpace:titleMediumSpace:titleShortSpace:titleWithHeadingSpace:subtitleSpace:tertiaryTitleSpace:offerTextSpace:metadataTextSpace:bottomSpace:offerButtonSize:offerButtonMargin:userRatingRightMargin:editorsChoiceMargin:adButtonRightMargin:descriptionSpace:regularWidthColumnSpacing:descriptionTopMargin:)();
}

uint64_t sub_100120D14()
{
  uint64_t v0 = sub_100082C28((uint64_t *)&unk_100984B00);
  sub_100042444(v0, qword_100984A30);
  sub_100087728(v0, (uint64_t)qword_100984A30);
  sub_100082C28(&qword_100985B80);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)();
}

void sub_100120DA0(char a1)
{
  if (v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeEditorsChoice] != (a1 & 1))
  {
    uint64_t v2 = v1;
    if (v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeEditorsChoice])
    {
      int v3 = v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_useAdsLocale];
      id v4 = objc_allocWithZone((Class)type metadata accessor for EditorsChoiceView());
      uint64_t v5 = sub_100300950(2, 0, 0, v3, 0);
      uint64_t v6 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView;
      uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView];
      *(void *)&v2[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView] = v5;

      uint64_t v8 = *(void **)&v2[v6];
      if (!v8
        || (sub_100084CF0(0, (unint64_t *)&qword_100981AA0),
            id v9 = v8,
            uint64_t v10 = (void *)static UIColor.secondaryText.getter(),
            [v9 setTintColor:v10],
            v9,
            v10,
            !*(void *)&v2[v6]))
      {
        __break(1u);
        return;
      }
      [v2 addSubview:];
    }
    else
    {
      uint64_t v11 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView;
      int v12 = *(void **)&v2[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView];
      if (v12)
      {
        [v12 removeFromSuperview];
        uint64_t v13 = *(void **)&v2[v11];
      }
      else
      {
        uint64_t v13 = 0;
      }
      *(void *)&v2[v11] = 0;
    }
    [v2 setNeedsLayout];
  }
}

uint64_t sub_100120EFC()
{
  uint64_t v1 = type metadata accessor for MetadataRibbonViewLayout.Metrics();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(char **)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView);
  uint64_t v6 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_isDisplayingSearchAd;
  int v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_isDisplayingSearchAd);
  uint64_t v8 = &v5[OBJC_IVAR____TtC8AppStore18MetadataRibbonView_isInsideSearchAd];
  uint64_t result = swift_beginAccess();
  *uint64_t v8 = v7;
  if (v7 == 1)
  {
    static MetadataRibbonViewLayout.Metrics.standard.getter();
    uint64_t v10 = &v5[OBJC_IVAR____TtC8AppStore18MetadataRibbonView_metrics];
    swift_beginAccess();
    (*(void (**)(char *, unsigned char *, uint64_t))(v2 + 24))(v10, v4, v1);
    swift_endAccess();
    [v5 setNeedsLayout];
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  *(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView)
           + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_isInsideSearchAd) = *(unsigned char *)(v0 + v6);
  return result;
}

char *sub_100121094(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v90 = (void (*)(uint64_t *, uint64_t, uint64_t))type metadata accessor for DirectionalTextAlignment();
  uint64_t v86 = *((void *)v90 - 1);
  __chkstk_darwin(v90);
  uint64_t v85 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v11 - 8);
  unint64_t v88 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FontSource();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  BOOL v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v5[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRegularMargin] = 0x4024000000000000;
  *(void *)&v5[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataSmallMargin] = 0x401C000000000000;
  uint64_t v17 = qword_10097F708;
  int v18 = v5;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for FontUseCase();
  uint64_t v20 = sub_100087728(v19, (uint64_t)qword_1009E4F70);
  uint64_t v21 = *(void *)(v19 - 8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v89 = v21 + 16;
  int v23 = v22;
  v22(v16, v20, v19);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for FontSource.useCase(_:), v13);
  uint64_t v94 = v13;
  uint64_t v95 = &protocol witness table for FontSource;
  int v24 = sub_1000808B8(v93);
  (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 16))(v24, v16, v13);
  StaticDimension.init(_:scaledLike:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  *(void *)&v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_regularWidthColumnSpacing] = 0x4040000000000000;
  v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeRatings] = 0;
  uint64_t v25 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_userRatingView;
  id v26 = objc_allocWithZone((Class)type metadata accessor for RatingView());
  *(void *)&v18[v25] = sub_1003E0068(5, 3, 0, 1, 0, 0, 0);
  uint64_t v27 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel;
  if (qword_10097F5A8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_100087728(v19, (uint64_t)qword_1009E4B50);
  uint64_t v29 = v88;
  v23(v88, v28, v19);
  uint64_t v30 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
  uint64_t v84 = v21 + 56;
  v30(v29, 0, 1, v19);
  uint64_t v31 = v85;
  uint64_t v32 = *(void (**)(void))(v86 + 104);
  LODWORD(v86) = enum case for DirectionalTextAlignment.none(_:);
  uint64_t v83 = (void (*)(char *, void, void *))v32;
  v32(v85);
  Class v82 = (Class)type metadata accessor for DynamicTypeLabel();
  id v33 = objc_allocWithZone(v82);
  *(void *)&v18[v27] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_useAdsLocale] = 0;
  v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeEditorsChoice] = 0;
  *(void *)&v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView] = 0;
  uint64_t v34 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView;
  *(void *)&v18[v34] = [objc_allocWithZone((Class)type metadata accessor for MetadataRibbonView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v35 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView;
  *(void *)&v18[v35] = [objc_allocWithZone((Class)type metadata accessor for SearchTagsRibbonView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton] = 0;
  v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_isDisplayingSearchAd] = 0;
  v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includesMetadataInformationInLockup] = 0;
  v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_shouldEvenlyDistribute] = 2;
  *(void *)&v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator] = 0;
  uint64_t v36 = &v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock];
  *(void *)uint64_t v36 = 0;
  *((void *)v36 + 1) = 0;
  if (qword_10097F5A0 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_100087728(v19, (uint64_t)qword_1009E4B38);
  v23(v29, v37, v19);
  uint64_t v81 = v30;
  v30(v29, 0, 1, v19);
  v83(v31, v86, v90);
  id v38 = objc_allocWithZone(v82);
  *(void *)&v18[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();

  v92.receiver = v18;
  v92.super_class = ObjectType;
  id v39 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v40 = type metadata accessor for Feature();
  uint64_t v94 = v40;
  uint64_t v41 = sub_100124D04((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
  uint64_t v95 = (void *)v41;
  uint64_t v42 = sub_1000808B8(v93);
  uint64_t v43 = enum case for Feature.search_tags(_:);
  uint64_t v44 = *(void *)(v40 - 8);
  long long v45 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 104);
  uint64_t v86 = v40;
  uint64_t ObjectType = (objc_class *)(v44 + 104);
  uint64_t v90 = v45;
  v45(v42, enum case for Feature.search_tags(_:), v40);
  uint64_t v46 = (char *)v39;
  LOBYTE(v39) = isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v93);
  if (v39)
  {
    uint64_t v83 = (void (*)(char *, void, void *))v41;
    LODWORD(v85) = v43;
    uint64_t v47 = v23;
    uint64_t v48 = qword_10097F198;
    id v49 = *(id *)&v46[OBJC_IVAR____TtC8AppStore14BaseLockupView_titleLabel];
    if (v48 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_100087728(v19, (uint64_t)qword_1009E3F38);
    uint64_t v51 = v88;
    v47(v88, v50, v19);
    unsigned int v52 = v81;
    v81(v51, 0, 1, v19);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter();

    uint64_t v53 = qword_10097F1A8;
    id v54 = *(id *)&v46[OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel];
    uint64_t v55 = v86;
    if (v53 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_100087728(v19, (uint64_t)qword_1009E3F68);
    v47(v51, v56, v19);
    v52(v51, 0, 1, v19);
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter();

    uint64_t v57 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel;
    id v58 = *(id *)&v46[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel];
    static CustomTextStyle<>.metadataRibbon.getter();
    if (qword_1009805E8 != -1) {
      swift_once();
    }
    uint64_t v59 = type metadata accessor for MetadataRibbonTextStyle();
    uint64_t v60 = sub_100087728(v59, (uint64_t)qword_1009E72C0);
    uint64_t v94 = v59;
    uint64_t v95 = (void *)sub_100124D04((unint64_t *)&qword_100981570, (void (*)(uint64_t))&type metadata accessor for MetadataRibbonTextStyle);
    uint64_t v61 = sub_1000808B8(v93);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v61, v60, v59);
    dispatch thunk of DynamicTypeLabel.customTextStyle.setter();

    uint64_t v62 = *(void **)&v46[v57];
    sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
    id v63 = v62;
    long long v64 = (void *)static UIColor.secondaryText.getter();
    [v63 setTextColor:v64];

    [*(id *)&v46[v57] setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];
    uint64_t v43 = v85;
    uint64_t v41 = (uint64_t)v83;
  }
  else
  {
    uint64_t v65 = *(void **)&v46[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel];
    sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
    id v66 = v65;
    uint64_t v67 = (void *)static UIColor.tertiaryText.getter();
    [v66 setTextColor:v67];

    uint64_t v55 = v86;
  }
  uint64_t v68 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel;
  uint64_t v69 = *(void **)&v46[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel];
  sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  id v70 = v69;
  uint64_t v71 = (void *)static UIColor.secondaryText.getter();
  [v70 setTextColor:v71];

  [*(id *)&v46[v68] setUserInteractionEnabled:0];
  if (qword_10097E110 != -1) {
    swift_once();
  }
  uint64_t v72 = sub_100082C28((uint64_t *)&unk_100984B00);
  sub_100087728(v72, (uint64_t)qword_100984A30);
  uint64_t v91 = v46;
  Conditional.evaluate(with:)();
  UILabel.alignment.setter();
  [v46 addSubview:*(void *)&v46[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_userRatingView]];
  uint64_t v94 = v55;
  uint64_t v95 = (void *)v41;
  uint64_t v73 = sub_1000808B8(v93);
  uint64_t v74 = v90;
  v90(v73, v43, v55);
  char v75 = isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v93);
  if (v75) {
    [v46 addSubview:*(void *)&v46[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel]];
  }
  uint64_t v94 = v55;
  uint64_t v95 = (void *)v41;
  char v76 = sub_1000808B8(v93);
  v74(v76, v43, v55);
  char v77 = isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v93);
  char v78 = &OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView;
  if ((v77 & 1) == 0) {
    char v78 = &OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView;
  }
  [v46 addSubview:*(void *)&v46[*v78]];

  return v46;
}

double sub_100121C54()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SmallSearchLockupLayout.Metrics();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SmallSearchLockupLayout();
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  __chkstk_darwin(v6);
  uint64_t v59 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097E108 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100087728(v2, (uint64_t)qword_1009E11C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  id v9 = *(unsigned char **)(v1 + OBJC_IVAR____TtC8AppStore14BaseLockupView_offerButton);
  type metadata accessor for BaseLockupView();
  LayoutMarginsAware<>.layoutFrame.getter();
  uint64_t v10 = &v9[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize];
  if (v9[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize + 16])
  {
    uint64_t v11 = (uint64_t)&v9[OBJC_IVAR____TtC8AppStore11OfferButton__configuration];
    swift_beginAccess();
    sub_100082C6C(v11, (uint64_t)v101);
    sub_100081D90(v101, v102);
    dispatch thunk of OfferButtonConfiguration.size(in:)();
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v101);
    *(void *)uint64_t v10 = v13;
    *((void *)v10 + 1) = v15;
    v10[16] = 0;
  }
  SmallSearchLockupLayout.Metrics.offerButtonSize.setter();
  BOOL v16 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView);
  uint64_t v17 = type metadata accessor for ArtworkView();
  char v103 = &protocol witness table for UIView;
  uint64_t v102 = v17;
  id v56 = v16;
  v101[0] = v16;
  int v18 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel);
  id v55 = v18;
  if (v18)
  {
    *((void *)&v99 + 1) = type metadata accessor for DynamicTypeLabel();
    uint64_t v100 = &protocol witness table for UILabel;
    *(void *)&long long v98 = v18;
  }
  else
  {
    uint64_t v100 = 0;
    long long v98 = 0u;
    long long v99 = 0u;
  }
  uint64_t v19 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore14BaseLockupView_titleLabel);
  uint64_t v20 = type metadata accessor for DynamicTypeLabel();
  uint64_t v21 = v20;
  uint64_t v97 = &protocol witness table for UILabel;
  uint64_t v96 = v20;
  uint64_t v95 = v19;
  uint64_t v22 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel);
  uint64_t v94 = &protocol witness table for UILabel;
  uint64_t v93 = v20;
  id v53 = v22;
  id v54 = v19;
  objc_super v92 = v22;
  int v23 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel);
  id v58 = v5;
  if (v23)
  {
    *((void *)&v90 + 1) = v20;
    uint64_t v91 = &protocol witness table for UILabel;
    *(void *)&long long v89 = v23;
  }
  else
  {
    uint64_t v91 = 0;
    long long v89 = 0u;
    long long v90 = 0u;
  }
  int v24 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabel);
  uint64_t v87 = v20;
  unint64_t v88 = &protocol witness table for UILabel;
  id v52 = v24;
  uint64_t v86 = v24;
  uint64_t v84 = type metadata accessor for OfferButton();
  uint64_t v85 = &protocol witness table for UIView;
  id v57 = v9;
  uint64_t v83 = v9;
  uint64_t v25 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_userRatingView);
  uint64_t v81 = type metadata accessor for RatingView();
  Class v82 = &protocol witness table for UIView;
  id v51 = v25;
  uint64_t v79 = &protocol witness table for UILabel;
  uint64_t v80 = v25;
  id v26 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel);
  uint64_t v78 = v21;
  char v77 = v26;
  uint64_t v27 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView);
  if (v27)
  {
    *((void *)&v75 + 1) = type metadata accessor for EditorsChoiceView();
    char v76 = &protocol witness table for UIView;
    *(void *)&long long v74 = v27;
  }
  else
  {
    char v76 = 0;
    long long v74 = 0u;
    long long v75 = 0u;
  }
  uint64_t v28 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton);
  if (v28)
  {
    *((void *)&v72 + 1) = type metadata accessor for SearchAdTransparencyButton();
    uint64_t v73 = &protocol witness table for UIView;
    *(void *)&long long v71 = v28;
  }
  else
  {
    uint64_t v73 = 0;
    long long v72 = 0u;
    long long v71 = 0u;
  }
  uint64_t v29 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel);
  uint64_t v69 = v21;
  id v70 = &protocol witness table for UILabel;
  uint64_t v68 = v29;
  void v50[3] = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeRatings);
  uint64_t v30 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView);
  uint64_t v66 = type metadata accessor for MetadataRibbonView();
  uint64_t v67 = &protocol witness table for UIView;
  uint64_t v65 = v30;
  uint64_t v31 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView);
  uint64_t v63 = type metadata accessor for SearchTagsRibbonView();
  long long v64 = &protocol witness table for UIView;
  uint64_t v62 = v31;
  id v32 = v27;
  id v33 = v28;
  id v34 = v29;
  id v35 = v30;
  v31;
  id v36 = v56;
  id v37 = v55;
  id v38 = v54;
  id v39 = v53;
  id v40 = v23;
  id v41 = v52;
  id v42 = v57;
  id v43 = v51;
  id v44 = v26;
  MetadataRibbonView.hasContent.getter();
  sub_1000BC5F8();
  long long v45 = v59;
  SmallSearchLockupLayout.init(metrics:artworkView:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:userRatingView:ratingCountLabel:editorsChoiceView:adButton:description:includesRatings:metadataRibbonView:searchTagsRibbonView:includesMetadataRibbon:includesSearchTagsRibbon:includesMetadataInformationInLockup:)();
  sub_100124D04((unint64_t *)&unk_100984AB0, (void (*)(uint64_t))&type metadata accessor for SmallSearchLockupLayout);
  uint64_t v46 = v61;
  dispatch thunk of Measurable.measurements(fitting:in:)();
  double v48 = v47;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v46);
  return v48;
}

double sub_100122290(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_1009A4AA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView];
  uint64_t v8 = (unint64_t *)(v7 + OBJC_IVAR____TtC8AppStore18MetadataRibbonView_metadataRibbonItemModels);
  swift_beginAccess();
  unint64_t v9 = *v8;
  uint64_t v10 = v7 + OBJC_IVAR____TtC8AppStore18MetadataRibbonView_metrics;
  swift_beginAccess();
  uint64_t v11 = type metadata accessor for MetadataRibbonViewLayout.Metrics();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v6, v10, v11);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
  uint64_t v13 = *(void *)&v2[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView];
  unint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_metadataRibbonItemModels);
  LOBYTE(v12) = *(unsigned char *)(v13 + OBJC_IVAR____TtC8AppStore20SearchTagsRibbonView_shouldEvenlyDistribute);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  [v2 layoutMargins];
  double v15 = sub_100123F94(0, 0, 0, 0, 0, 0, v9, (uint64_t)v6, v14, v12, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100082BCC((uint64_t)v6, (uint64_t *)&unk_1009A4AA0);
  return v15;
}

uint64_t sub_1001224C4()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for LayoutRect();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  __chkstk_darwin(v3);
  uint64_t v66 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SmallSearchLockupLayout.Metrics();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SmallSearchLockupLayout();
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v64 = v9;
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  uint64_t v62 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111.receiver = v1;
  v111.super_class = ObjectType;
  uint64_t v65 = ObjectType;
  [super layoutSubviews:v10];
  if (qword_10097E108 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100087728(v5, (uint64_t)qword_1009E11C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v12, v5);
  uint64_t v13 = *(unsigned char **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_offerButton];
  type metadata accessor for BaseLockupView();
  LayoutMarginsAware<>.layoutFrame.getter();
  unint64_t v14 = &v13[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize];
  if (v13[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize + 16])
  {
    uint64_t v15 = (uint64_t)&v13[OBJC_IVAR____TtC8AppStore11OfferButton__configuration];
    swift_beginAccess();
    sub_100082C6C(v15, (uint64_t)v108);
    sub_100081D90(v108, v109);
    dispatch thunk of OfferButtonConfiguration.size(in:)();
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v108);
    *(void *)unint64_t v14 = v17;
    *((void *)v14 + 1) = v19;
    v14[16] = 0;
  }
  SmallSearchLockupLayout.Metrics.offerButtonSize.setter();
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView];
  uint64_t v21 = type metadata accessor for ArtworkView();
  uint64_t v110 = &protocol witness table for UIView;
  uint64_t v109 = v21;
  id v59 = v20;
  v108[0] = v20;
  uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_headingLabel];
  id v58 = v22;
  if (v22)
  {
    *((void *)&v106 + 1) = type metadata accessor for DynamicTypeLabel();
    char v107 = &protocol witness table for UILabel;
    *(void *)&long long v105 = v22;
  }
  else
  {
    char v107 = 0;
    long long v105 = 0u;
    long long v106 = 0u;
  }
  int v23 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_titleLabel];
  uint64_t v24 = type metadata accessor for DynamicTypeLabel();
  uint64_t v25 = v24;
  uint64_t v104 = &protocol witness table for UILabel;
  uint64_t v103 = v24;
  uint64_t v102 = v23;
  id v26 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_subtitleLabel];
  uint64_t v101 = &protocol witness table for UILabel;
  uint64_t v100 = v24;
  id v56 = v26;
  id v57 = v23;
  long long v99 = v26;
  uint64_t v27 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_tertiaryTitleLabel];
  if (v27)
  {
    long long v98 = &protocol witness table for UILabel;
    *((void *)&v97 + 1) = v24;
    *(void *)&long long v96 = v27;
  }
  else
  {
    long long v98 = 0;
    long long v96 = 0u;
    long long v97 = 0u;
  }
  uint64_t v28 = *(void **)&v1[OBJC_IVAR____TtC8AppStore14BaseLockupView_offerLabel];
  uint64_t v94 = v24;
  uint64_t v95 = &protocol witness table for UILabel;
  id v55 = v28;
  uint64_t v93 = v28;
  uint64_t v91 = type metadata accessor for OfferButton();
  objc_super v92 = &protocol witness table for UIView;
  id v60 = v13;
  long long v90 = v13;
  uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_userRatingView];
  uint64_t v88 = type metadata accessor for RatingView();
  long long v89 = &protocol witness table for UIView;
  id v54 = v29;
  uint64_t v86 = &protocol witness table for UILabel;
  uint64_t v87 = v29;
  uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_ratingCountLabel];
  uint64_t v85 = v25;
  uint64_t v84 = v30;
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_editorsChoiceView];
  if (v31)
  {
    *((void *)&v82 + 1) = type metadata accessor for EditorsChoiceView();
    uint64_t v83 = &protocol witness table for UIView;
    *(void *)&long long v81 = v31;
  }
  else
  {
    uint64_t v83 = 0;
    long long v81 = 0u;
    long long v82 = 0u;
  }
  id v32 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton];
  uint64_t v61 = v8;
  if (v32)
  {
    *((void *)&v79 + 1) = type metadata accessor for SearchAdTransparencyButton();
    uint64_t v80 = &protocol witness table for UIView;
    *(void *)&long long v78 = v32;
  }
  else
  {
    uint64_t v80 = 0;
    long long v79 = 0u;
    long long v78 = 0u;
  }
  id v33 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel];
  uint64_t v76 = v25;
  char v77 = &protocol witness table for UILabel;
  long long v75 = v33;
  v53[3] = v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includeRatings];
  id v34 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataRibbonView];
  uint64_t v73 = type metadata accessor for MetadataRibbonView();
  long long v74 = &protocol witness table for UIView;
  long long v72 = v34;
  id v35 = *(void **)&v1[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchTagsRibbonView];
  uint64_t v70 = type metadata accessor for SearchTagsRibbonView();
  long long v71 = &protocol witness table for UIView;
  uint64_t v69 = v35;
  id v36 = v31;
  id v37 = v32;
  id v38 = v33;
  id v39 = v34;
  id v40 = v35;
  id v41 = v59;
  id v42 = v58;
  id v43 = v57;
  id v44 = v56;
  id v45 = v27;
  id v46 = v55;
  id v47 = v60;
  id v48 = v54;
  id v49 = v30;
  MetadataRibbonView.hasContent.getter();
  sub_1000BC5F8();
  uint64_t v50 = v62;
  SmallSearchLockupLayout.init(metrics:artworkView:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:userRatingView:ratingCountLabel:editorsChoiceView:adButton:description:includesRatings:metadataRibbonView:searchTagsRibbonView:includesMetadataRibbon:includesSearchTagsRibbon:includesMetadataInformationInLockup:)();
  LayoutMarginsAware<>.layoutFrame.getter();
  id v51 = v66;
  SmallSearchLockupLayout.placeChildren(relativeTo:in:)();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v68);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v50, v64);
}

id sub_100122B78(uint64_t a1, double a2, double a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton];
  if (!v8) {
    goto LABEL_4;
  }
  id v9 = v8;
  [v3 convertPoint:v9 toCoordinateSpace:a2];
  if ((objc_msgSend(v9, "pointInside:withEvent:", a1) & 1) == 0)
  {

LABEL_4:
    v11.receiver = v3;
    v11.super_class = ObjectType;
    return [super hitTest:a1 withEvent:a2];
  }
  return v8;
}

id sub_100122CCC(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  [super traitCollectionDidChange:a1];
  id v3 = [v1 traitCollection];
  id v4 = [v3 layoutDirection];

  if (!a1 || (id result = [a1 layoutDirection], v4 != result))
  {
    if (qword_10097E110 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_100082C28((uint64_t *)&unk_100984B00);
    sub_100087728(v6, (uint64_t)qword_100984A30);
    Conditional.evaluate(with:)();
    return (id)UILabel.alignment.setter();
  }
  return result;
}

id sub_100122EC8(uint64_t a1, uint64_t a2, Swift::Bool a3)
{
  id v4 = v3;
  v14.value.super.Class isa = 0;
  v14.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v14, a3);
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_descriptionLabel];
  id v6 = [v5 superview];
  if (!v6) {
    goto LABEL_3;
  }
  objc_super v7 = v6;
  sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
  uint64_t v8 = v4;
  id v9 = v7;
  LOBYTE(v7) = static NSObject.== infix(_:_:)();

  if ((v7 & 1) == 0) {
LABEL_3:
  }
    [v4 addSubview:v5];
  [v5 setHidden:1];
  [v5 setText:0];
  [v4 setNeedsLayout];
  uint64_t v10 = OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton;
  objc_super v11 = *(void **)&v4[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_searchAdTransparencyButton];
  if (v11)
  {
    [v11 removeFromSuperview];
    uint64_t v12 = *(void **)&v4[v10];
  }
  else
  {
    uint64_t v12 = 0;
  }
  *(void *)&v4[v10] = 0;

  if (*(void *)&v4[v10]) {
    [v4 addSubview:];
  }
  v4[OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_includesMetadataInformationInLockup] = 0;
  sub_100373E90();
  return sub_1000BC664();
}

uint64_t sub_100123050()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess();
  if (*v1)
  {
    swift_retain();
    ImpressionsCalculator.removeAllElements()();
    swift_release();
  }
  *uint64_t v1 = 0;
  swift_release();
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess();
  uint64_t v3 = *v2;
  *uint64_t v2 = 0;
  v2[1] = 0;
  sub_10006012C(v3);
  type metadata accessor for SearchTagsRibbonView();
  sub_100124D04((unint64_t *)&unk_100992290, (void (*)(uint64_t))type metadata accessor for SearchTagsRibbonView);
  return NestedModelImpressionsRecording.stopRecordingNestedImpressions(using:)();
}

uint64_t sub_10012315C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_metadataTextSpace;
  uint64_t v2 = type metadata accessor for StaticDimension();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock);

  return sub_10006012C(v3);
}

uint64_t sub_100123360()
{
  return type metadata accessor for SmallSearchLockupView();
}

uint64_t type metadata accessor for SmallSearchLockupView()
{
  uint64_t result = qword_100984A88;
  if (!qword_100984A88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001233B4()
{
  uint64_t result = type metadata accessor for StaticDimension();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

double sub_10012349C(void *a1)
{
  return sub_100122290(a1);
}

uint64_t sub_1001234C4()
{
  return swift_retain();
}

uint64_t sub_100123510(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsCalculator);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*sub_100123564())()
{
  return j__swift_endAccess;
}

uint64_t sub_1001235C0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_100060050(*v1);
  return v2;
}

uint64_t sub_10012361C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore21SmallSearchLockupView_impressionsUpdateBlock);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_10006012C(v6);
}

uint64_t (*sub_10012367C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1001236D8()
{
  return NestedModelImpressionsRecording.startRecordingNestedImpressions(for:using:)();
}

uint64_t sub_100123768(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = type metadata accessor for MetadataRibbonItemViewType();
  uint64_t v6 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MetadataRibbonViewLayout.Metrics();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MetadataRibbonViewLayout();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v49 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MetadataRibbonItem();
  uint64_t result = Array.isNotEmpty.getter();
  if ((result & 1) == 0) {
    return result;
  }
  unint64_t v60 = a1;
  uint64_t v48 = v9;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    a1 = v60;
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v15 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_33:
    swift_bridgeObjectRelease();
LABEL_34:
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v50, a2, v8);
    id v38 = v49;
    MetadataRibbonViewLayout.init(metadataRibbonItemLayoutContexts:metrics:)();
    MetadataRibbonViewLayout.measurements(fitting:in:)();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v38, v11);
  }
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v15) {
    goto LABEL_33;
  }
LABEL_4:
  if (v15 >= 1)
  {
    uint64_t v42 = v8;
    uint64_t v43 = v12;
    uint64_t v44 = v11;
    uint64_t v45 = a2;
    uint64_t v46 = a3;
    uint64_t v16 = 0;
    unint64_t v59 = a1 & 0xC000000000000001;
    id v58 = (uint64_t (**)(char *, uint64_t))(v6 + 88);
    id v39 = (void (**)(char *, uint64_t))(v6 + 8);
    id v56 = v71;
    int v57 = enum case for MetadataRibbonItemViewType.borderedTextLabel(_:);
    id v55 = (long long *)&v69;
    int v53 = enum case for MetadataRibbonItemViewType.editorsChoice(_:);
    int v52 = enum case for MetadataRibbonItemViewType.imageWithLabel(_:);
    int v51 = enum case for MetadataRibbonItemViewType.starRating(_:);
    int v47 = enum case for MetadataRibbonItemViewType.textLabel(_:);
    uint64_t v54 = (uint64_t)v65 + 8;
    uint64_t v17 = _swiftEmptyArrayStorage;
    int v40 = enum case for MetadataRibbonItemViewType.highlightedText(_:);
    int v41 = enum case for MetadataRibbonItemViewType.divider(_:);
    while (1)
    {
      if (v59)
      {
        uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v18 = *(void *)(a1 + 8 * v16 + 32);
        swift_retain();
      }
      uint64_t v19 = v15;
      uint64_t v20 = v61;
      MetadataRibbonItem.viewContainerType.getter();
      int v21 = (*v58)(v20, v62);
      if (v21 == v57) {
        break;
      }
      if (v21 == v53)
      {
        uint64_t v22 = type metadata accessor for MetadataRibbonEditorsChoiceView();
        int v23 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonEditorsChoiceView;
        uint64_t v24 = (unint64_t *)&unk_100984AE0;
        goto LABEL_23;
      }
      if (v21 == v52)
      {
        uint64_t v22 = type metadata accessor for MetadataRibbonIconWithLabelView(0);
        int v23 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonIconWithLabelView;
        uint64_t v24 = (unint64_t *)&unk_100981FE8;
        goto LABEL_23;
      }
      if (v21 == v51)
      {
        uint64_t v22 = type metadata accessor for MetadataRibbonStarRatingView();
        int v23 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonStarRatingView;
        uint64_t v24 = (unint64_t *)&unk_100984AF0;
        goto LABEL_23;
      }
      if (v21 == v47)
      {
        uint64_t v22 = type metadata accessor for MetadataRibbonTagView();
        int v23 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonTagView;
        uint64_t v24 = (unint64_t *)&unk_100981FE0;
        goto LABEL_23;
      }
      if (v21 == v41)
      {
        uint64_t v22 = type metadata accessor for MetadataRibbonBarView();
        int v23 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonBarView;
        uint64_t v24 = (unint64_t *)&unk_100984AD0;
        goto LABEL_23;
      }
      if (v21 == v40)
      {
        uint64_t v22 = type metadata accessor for MetadataRibbonHighlightedTextView();
        int v23 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonHighlightedTextView;
        uint64_t v24 = (unint64_t *)&unk_100981FD8;
        goto LABEL_23;
      }
      (*v39)(v61, v62);
      swift_release();
LABEL_28:
      uint64_t v15 = v19;
      if (v19 == ++v16)
      {
        swift_bridgeObjectRelease();
        a2 = v45;
        uint64_t v12 = v43;
        uint64_t v11 = v44;
        uint64_t v8 = v42;
        goto LABEL_34;
      }
    }
    uint64_t v22 = type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView();
    int v23 = (void (*)(uint64_t))type metadata accessor for MetadataRibbonBorderedLabelWithDescriptionView;
    uint64_t v24 = (unint64_t *)&unk_100981FF0;
LABEL_23:
    uint64_t v25 = sub_100124D04(v24, v23);
    id v26 = (void *)swift_allocObject();
    void v26[2] = v22;
    v26[3] = v25;
    v26[4] = v18;
    uint64_t v27 = type metadata accessor for LayoutViewPlaceholder();
    swift_allocObject();
    swift_retain();
    uint64_t v28 = LayoutViewPlaceholder.init(measureWith:)();
    MetadataRibbonItem.id.getter();
    v71[3] = v27;
    v71[4] = &protocol witness table for LayoutViewPlaceholder;
    v71[0] = v28;
    swift_retain();
    LOBYTE(v27) = dispatch thunk of static MetadataRibbonItemView.isBaselineAligned.getter() & 1;
    char v72 = v27;
    char v29 = dispatch thunk of static MetadataRibbonItemView.shouldForceIntrinsicSizeDuringLayout.getter() & 1;
    char v73 = v29;
    sub_10008A8F4((uint64_t)v70, (uint64_t)v67);
    uint64_t v30 = v55;
    sub_100082C6C((uint64_t)v56, (uint64_t)v55);
    long long v63 = v67[0];
    long long v64 = v67[1];
    *(void *)&v65[0] = v68;
    sub_100081DD4(v30, v54);
    LOBYTE(v66) = v27;
    HIBYTE(v66) = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_1000AB8F0(0, v17[2] + 1, 1, v17);
    }
    a1 = v60;
    unint64_t v32 = v17[2];
    unint64_t v31 = v17[3];
    if (v32 >= v31 >> 1) {
      uint64_t v17 = sub_1000AB8F0((void *)(v31 > 1), v32 + 1, 1, v17);
    }
    v17[2] = v32 + 1;
    id v33 = &v17[11 * v32];
    long long v34 = v64;
    *((_OWORD *)v33 + 2) = v63;
    *((_OWORD *)v33 + 3) = v34;
    long long v35 = v65[0];
    long long v36 = v65[1];
    long long v37 = v65[2];
    *((_WORD *)v33 + 56) = v66;
    *((_OWORD *)v33 + 5) = v36;
    *((_OWORD *)v33 + 6) = v37;
    *((_OWORD *)v33 + 4) = v35;
    swift_release();
    swift_release();
    sub_100082BCC((uint64_t)v70, (uint64_t *)&unk_100984AC0);
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

double sub_100123F94(uint64_t a1, NSString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, unsigned __int8 a10, void *a11)
{
  uint64_t v76 = a8;
  unint64_t v95 = a7;
  uint64_t v90 = a5;
  uint64_t v91 = a6;
  uint64_t v86 = a3;
  uint64_t v87 = a4;
  uint64_t v84 = a1;
  UIFontTextStyle v85 = a2;
  uint64_t v11 = type metadata accessor for SmallSearchLockupLayout();
  uint64_t v103 = *(void *)(v11 - 8);
  uint64_t v104 = v11;
  __chkstk_darwin(v11);
  uint64_t v102 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100082C28((uint64_t *)&unk_1009A4AA0);
  __chkstk_darwin(v13 - 8);
  uint64_t v74 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for MetadataRibbonViewLayout.Metrics();
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v78 = v15;
  __chkstk_darwin(v15);
  long long v75 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for LabelPlaceholderCompatibility();
  uint64_t v89 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v88 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for OfferButtonMetrics();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  int v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v74 - v23;
  uint64_t v25 = type metadata accessor for SmallSearchLockupLayout.Metrics();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  long long v97 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v74 - v29;
  if (qword_10097E108 != -1) {
    swift_once();
  }
  unint64_t v92 = a9;
  uint64_t v31 = sub_100087728(v25, (uint64_t)qword_1009E11C0);
  uint64_t v98 = v26;
  uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v94 = v26 + 16;
  v93(v30, v31, v25);
  char v32 = UITraitCollection.prefersAccessibilityLayouts.getter();
  uint64_t v108 = v25;
  if (v32)
  {
    if (qword_100980418 != -1) {
      swift_once();
    }
    id v33 = qword_1009A4898;
  }
  else
  {
    if (qword_100980420 != -1) {
      swift_once();
    }
    id v33 = qword_1009A48B0;
  }
  uint64_t v34 = sub_100087728(v18, (uint64_t)v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v34, v18);
  uint64_t v100 = v19;
  uint64_t v101 = v18;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v21, v18);
  id v35 = [a11 preferredContentSizeCategory];
  UIContentSizeCategory.isAccessibilityCategory.getter();

  OfferButtonMetrics.minimumSize.getter();
  long long v99 = v24;
  OfferButtonMetrics.estimatedHeight.getter();
  SmallSearchLockupLayout.Metrics.offerButtonSize.setter();
  char v107 = v30;
  SmallSearchLockupLayout.Metrics.artworkSize.getter();
  uint64_t v82 = type metadata accessor for LayoutViewPlaceholder();
  swift_allocObject();
  uint64_t v96 = LayoutViewPlaceholder.init(representing:)();
  long long v36 = self;
  id v105 = v36;
  swift_bridgeObjectRetain();
  id v37 = [v36 preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v38 = type metadata accessor for Feature();
  v145[3] = v38;
  uint64_t v39 = sub_100124D04((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
  v145[4] = v39;
  uint64_t v80 = v39;
  int v40 = sub_1000808B8(v145);
  uint64_t v41 = enum case for Feature.measurement_with_labelplaceholder(_:);
  long long v81 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v38 - 8) + 104);
  unsigned int v79 = enum case for Feature.measurement_with_labelplaceholder(_:);
  v81(v40, enum case for Feature.measurement_with_labelplaceholder(_:), v38);
  isFeatureEnabled(_:)();
  id v83 = a11;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v145);
  uint64_t v42 = v88;
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)();
  LabelPlaceholderCompatibility.layoutTextView.getter();
  uint64_t v89 = *(void *)(v89 + 8);
  uint64_t v43 = v106;
  ((void (*)(char *, uint64_t))v89)(v42, v106);
  UIFontTextStyle v85 = UIFontTextStyleFootnote;
  swift_bridgeObjectRetain();
  id v44 = [v105 preferredFontForTextStyle:UIFontTextStyleFootnote];
  v144[3] = v38;
  v144[4] = v39;
  uint64_t v45 = sub_1000808B8(v144);
  uint64_t v46 = v41;
  int v47 = v81;
  v81(v45, v46, v38);
  isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v144);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)();
  LabelPlaceholderCompatibility.layoutTextView.getter();
  uint64_t v48 = (void (*)(char *, uint64_t))v89;
  ((void (*)(char *, uint64_t))v89)(v42, v43);
  swift_bridgeObjectRetain();
  id v49 = [v105 preferredFontForTextStyle:v85];
  v143[3] = v38;
  v143[4] = v80;
  uint64_t v50 = sub_1000808B8(v143);
  v47(v50, v79, v38);
  isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v143);
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)();
  LabelPlaceholderCompatibility.layoutTextView.getter();
  v48(v42, v106);
  unint64_t v51 = v95;
  LODWORD(v106) = sub_100120038(0, v95) & (v51 != 0);
  if (v106 == 1)
  {
    uint64_t v52 = v82;
    id v53 = objc_allocWithZone((Class)type metadata accessor for TraitEnvironmentPlaceholder());
    id v54 = v83;
    id v55 = v83;
    id v56 = (void *)TraitEnvironmentPlaceholder.init(traitCollection:)();
    uint64_t v57 = v74;
    sub_100124C58(v76, v74);
    uint64_t v59 = v77;
    uint64_t v58 = v78;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v57, 1, v78) == 1)
    {
      uint64_t v60 = (uint64_t)v75;
      static MetadataRibbonViewLayout.Metrics.standard.getter();
      sub_100082BCC(v57, (uint64_t *)&unk_1009A4AA0);
    }
    else
    {
      uint64_t v60 = (uint64_t)v75;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v75, v57, v58);
    }
    id v61 = v56;
    sub_100123768(v51, v60, (uint64_t)v61);

    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v58);
    swift_allocObject();
    id v105 = (id)LayoutViewPlaceholder.init(measurements:)();
  }
  else
  {
    uint64_t v52 = v82;
    swift_allocObject();
    id v105 = (id)LayoutViewPlaceholder.init(representing:)();
    id v54 = v83;
  }
  unint64_t v62 = v92;
  LODWORD(v95) = sub_100120038(v92, 0) & (v62 != 0);
  if (v95 == 1)
  {
    sub_1000BD1F4(v62, a10);
    swift_allocObject();
    uint64_t v63 = LayoutViewPlaceholder.init(measurements:)();
  }
  else
  {
    swift_allocObject();
    uint64_t v63 = LayoutViewPlaceholder.init(representing:)();
  }
  uint64_t v64 = v63;
  v93(v97, (uint64_t)v107, v108);
  uint64_t v142 = &protocol witness table for LayoutViewPlaceholder;
  uint64_t v141 = v52;
  uint64_t v140 = v96;
  uint64_t v139 = 0;
  *(_OWORD *)&v137[40] = 0u;
  long long v138 = 0u;
  sub_100082C6C((uint64_t)v145, (uint64_t)v137);
  sub_100082C6C((uint64_t)v144, (uint64_t)&v136);
  uint64_t v135 = 0;
  long long v133 = 0u;
  long long v134 = 0u;
  uint64_t v132 = 0;
  long long v130 = 0u;
  long long v131 = 0u;
  swift_retain();
  uint64_t v65 = static LayoutViewPlaceholder.withIdentityMeasurement.getter();
  uint64_t v129 = &protocol witness table for LayoutViewPlaceholder;
  uint64_t v128 = v52;
  uint64_t v127 = v65;
  uint64_t v126 = 0;
  long long v124 = 0u;
  long long v125 = 0u;
  uint64_t v123 = 0;
  long long v121 = 0u;
  long long v122 = 0u;
  uint64_t v120 = 0;
  long long v118 = 0u;
  long long v119 = 0u;
  uint64_t v117 = 0;
  long long v116 = 0u;
  *(_OWORD *)&v115[40] = 0u;
  sub_100082C6C((uint64_t)v143, (uint64_t)v115);
  uint64_t v113 = v52;
  uint64_t v114 = &protocol witness table for LayoutViewPlaceholder;
  objc_super v111 = &protocol witness table for LayoutViewPlaceholder;
  id v112 = v105;
  uint64_t v110 = v52;
  uint64_t v109 = v64;
  swift_retain();
  swift_retain();
  __int16 v66 = v102;
  SmallSearchLockupLayout.init(metrics:artworkView:headingText:titleText:subtitleText:tertiaryTitleText:offerText:offerButton:userRatingView:ratingCountLabel:editorsChoiceView:adButton:description:includesRatings:metadataRibbonView:searchTagsRibbonView:includesMetadataRibbon:includesSearchTagsRibbon:includesMetadataInformationInLockup:)();
  type metadata accessor for TraitEnvironmentPlaceholder();
  sub_100082C28(&qword_100982B50);
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1007BEA80;
  *(void *)(v67 + 32) = v54;
  id v68 = v54;
  uint64_t v69 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)();
  sub_100124D04((unint64_t *)&unk_100984AB0, (void (*)(uint64_t))&type metadata accessor for SmallSearchLockupLayout);
  uint64_t v70 = v104;
  dispatch thunk of Measurable.measurements(fitting:in:)();
  double v72 = v71;
  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v103 + 8))(v66, v70);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v143);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v144);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v145);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v107, v108);
  return v72;
}

uint64_t sub_100124C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_1009A4AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100124CC0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100124CF8()
{
  return sub_100375198();
}

uint64_t sub_100124D04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ButtonPlaceholder.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button) = 0;
  uint64_t v3 = v2 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t ButtonPlaceholder.init(configuration:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button) = 0;
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t ButtonPlaceholder.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id sub_100124ED4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIButton.Configuration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button;
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button);
  if (v7)
  {
    id v8 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder____lazy_storage___button);
  }
  else
  {
    sub_1001252F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration, v2);
    uint64_t v9 = (void *)UIButton.init(configuration:primaryAction:)();
    uint64_t v10 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v9;
    id v8 = v9;

    uint64_t v7 = 0;
  }
  id v11 = v7;
  return v8;
}

double ButtonPlaceholder.measure(toFit:with:)()
{
  id v0 = sub_100124ED4();
  UIButton.measure(toFit:with:)();
  double v2 = v1;

  return v2;
}

uint64_t ButtonPlaceholder.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  uint64_t v2 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t ButtonPlaceholder.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8AppStore17ButtonPlaceholder_configuration;
  uint64_t v2 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

double sub_100125190()
{
  id v0 = sub_100124ED4();
  UIButton.measure(toFit:with:)();
  double v2 = v1;

  return v2;
}

uint64_t sub_100125208()
{
  return type metadata accessor for ButtonPlaceholder();
}

uint64_t type metadata accessor for ButtonPlaceholder()
{
  uint64_t result = qword_100984B48;
  if (!qword_100984B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10012525C()
{
  uint64_t result = type metadata accessor for UIButton.Configuration();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1001252F4()
{
  unint64_t result = qword_100986D60;
  if (!qword_100986D60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100986D60);
  }
  return result;
}

BOOL sub_100125334()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = type metadata accessor for FontUseCase();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ProductAnnotationLayout.Metrics();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100082C28((uint64_t *)&unk_10098A9A0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary + 8)) {
    return 1;
  }
  double v72 = v8;
  uint64_t v73 = v6;
  uint64_t v76 = v1;
  uint64_t v77 = v12;
  uint64_t v74 = v10;
  uint64_t v75 = v2;
  uint64_t v19 = v9;
  uint64_t v20 = v4;
  uint64_t v21 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems;
  unint64_t v22 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems);
  if (v22 >> 62)
  {
    uint64_t v71 = v14;
    uint64_t v64 = v18;
    uint64_t v65 = v16;
    __int16 v66 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v17 = v66;
    uint64_t v16 = v65;
    uint64_t v14 = v71;
    uint64_t v18 = v64;
    if (v67 != 1) {
      return 1;
    }
  }
  else if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return 1;
  }
  uint64_t v69 = v17;
  uint64_t v23 = v16;
  uint64_t v24 = v14;
  uint64_t v70 = v20;
  uint64_t v71 = v18;
  unint64_t v25 = *(void *)(v18 + v21);
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v26)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  uint64_t v27 = (char *)v19;
  if ((v25 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_34;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  unint64_t v28 = AnnotationItem_V2.textPairs.getter();
  if (!(v28 >> 62))
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_34:
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
LABEL_11:
  swift_bridgeObjectRelease();
  if (v29)
  {
    swift_release();
    return 1;
  }
  uint64_t v30 = v71;
  uint64_t v31 = v71 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction;
  swift_beginAccess();
  uint64_t v32 = v23;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v31, 1, v24))
  {
    unint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v52 = v69;
    v51(v69, v31, v24);
    ObjectGraphPair.value.getter();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v52, v24);
    Action.title.getter();
    uint64_t v54 = v53;
    swift_release();
    if (v54)
    {
      swift_release();
      goto LABEL_23;
    }
  }
  uint64_t v69 = v27;
  id v33 = *(void **)(v30 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel);
  LayoutMarginsAware<>.layoutFrame.getter();
  [v33 sizeThatFits:v34 v35];
  double v37 = v36;
  double v39 = v38;
  if (qword_10097E130 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_100082C28(&qword_100984D00);
  sub_100087728(v40, (uint64_t)qword_1009E1290);
  v79[0] = v30;
  Conditional.evaluate(with:)();
  char v41 = static ProductAnnotationLayout.isSummaryPlacedBelow(in:)();
  uint64_t v42 = v73;
  if (v41)
  {
    LayoutMarginsAware<>.layoutFrame.getter();
    double Width = CGRectGetWidth(v82);
    LayoutMarginsAware<>.layoutFrame.getter();
    double Height = CGRectGetHeight(v83) - v39;
  }
  else
  {
    ProductAnnotationLayout.Metrics.horizontalSpacing.getter();
    sub_100081D90(v79, v80);
    uint64_t v45 = v72;
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
    AnyDimension.value(in:rounded:)();
    double v47 = v46;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v5);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v79);
    LayoutMarginsAware<>.layoutFrame.getter();
    double Width = CGRectGetWidth(v84) - (v37 + v47);
    LayoutMarginsAware<>.layoutFrame.getter();
    double Height = CGRectGetHeight(v85);
  }
  uint64_t v48 = *(void **)(v30 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel);
  id v49 = [v48 text];
  if (v49)
  {
    uint64_t v50 = v49;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  if (qword_10097E128 != -1) {
    swift_once();
  }
  uint64_t v56 = sub_100082C28((uint64_t *)&unk_100985790);
  sub_100087728(v56, (uint64_t)qword_100984C00);
  uint64_t v57 = v70;
  v79[0] = v71;
  Conditional.evaluate(with:)();
  [v48 numberOfLines];
  uint64_t v58 = type metadata accessor for Feature();
  uint64_t v80 = v58;
  uint64_t v81 = sub_10012C794((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
  uint64_t v59 = sub_1000808B8(v79);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v58 - 8) + 104))(v59, enum case for Feature.measurement_with_labelplaceholder(_:), v58);
  isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v79);
  static LabelPlaceholderCompatibility.measurements(text:fontUseCase:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:fitting:in:shouldUseLabelPlaceholder:)();
  double v61 = v60;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v57, v76);
  [v48 sizeThatFits:Width, Height];
  double v63 = v62;
  swift_release();
  (*(void (**)(char *, char *))(v74 + 8))(v77, v69);
  return floor(v63 - v61) > 0.0;
}

uint64_t sub_100125B78()
{
  uint64_t v0 = type metadata accessor for FontSource();
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ProductAnnotationLayout.Metrics();
  sub_100042444(v4, qword_1009E1260);
  uint64_t v26 = sub_100087728(v4, (uint64_t)qword_1009E1260);
  if (qword_10097E150 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_100984C60;
  [(id)qword_100984C60 size];
  [v5 contentInsets];
  v48[8] = (uint64_t)&type metadata for Double;
  v48[9] = (uint64_t)&protocol witness table for Double;
  v48[5] = 0x401C000000000000;
  if (qword_10097F368 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for FontUseCase();
  uint64_t v7 = sub_100087728(v6, (uint64_t)qword_1009E4490);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v28 = v8 + 16;
  uint64_t v30 = v7;
  v27(v3, v7, v6);
  uint64_t v9 = enum case for FontSource.useCase(_:);
  id v33 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  double v34 = v1 + 13;
  v33(v3, enum case for FontSource.useCase(_:), v0);
  uint64_t v32 = type metadata accessor for StaticDimension();
  v48[3] = v32;
  v48[4] = (uint64_t)&protocol witness table for StaticDimension;
  sub_1000808B8(v48);
  uint64_t v46 = v0;
  double v47 = &protocol witness table for FontSource;
  uint64_t v10 = sub_1000808B8(v45);
  uint64_t v31 = (void (*)(uint64_t *, char *, uint64_t))v1[2];
  v31(v10, v3, v0);
  unint64_t v25 = v1 + 2;
  StaticDimension.init(_:scaledLike:)();
  uint64_t v29 = (void (*)(char *, uint64_t))v1[1];
  v29(v3, v0);
  uint64_t v24 = v1 + 1;
  uint64_t v22 = v6;
  uint64_t v11 = v27;
  v27(v3, v7, v6);
  unsigned int v23 = v9;
  v33(v3, v9, v0);
  uint64_t v46 = v32;
  double v47 = &protocol witness table for StaticDimension;
  sub_1000808B8(v45);
  uint64_t v43 = (void *)v0;
  id v44 = &protocol witness table for FontSource;
  uint64_t v12 = sub_1000808B8(v42);
  v31(v12, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  v29(v3, v0);
  id v44 = &protocol witness table for Double;
  uint64_t v43 = &type metadata for Double;
  v42[0] = 0x4030000000000000;
  v11(v3, v30, v6);
  uint64_t v13 = v9;
  uint64_t v14 = v33;
  v33(v3, v13, v0);
  uint64_t v15 = v32;
  v41[3] = v32;
  v41[4] = (uint64_t)&protocol witness table for StaticDimension;
  sub_1000808B8(v41);
  uint64_t v39 = v0;
  uint64_t v40 = &protocol witness table for FontSource;
  uint64_t v16 = sub_1000808B8(v38);
  uint64_t v17 = v31;
  v31(v16, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  uint64_t v18 = v29;
  v29(v3, v0);
  v27(v3, v30, v22);
  v14(v3, v23, v0);
  uint64_t v39 = v15;
  uint64_t v40 = &protocol witness table for StaticDimension;
  sub_1000808B8(v38);
  double v36 = (void *)v0;
  double v37 = &protocol witness table for FontSource;
  uint64_t v19 = sub_1000808B8(v35);
  v17(v19, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  v18(v3, v0);
  double v37 = &protocol witness table for Double;
  double v36 = &type metadata for Double;
  v35[0] = 0x4034000000000000;
  return ProductAnnotationLayout.Metrics.init(disclosureSize:disclosureContentInsets:disclosureMargin:titleSpace:detailSpace:detailMargin:linkSpace:bottomSpace:horizontalSpacing:shouldDisclosureAlignWithContent:)();
}

uint64_t sub_1001260DC()
{
  uint64_t v0 = type metadata accessor for FontSource();
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ProductAnnotationLayout.Metrics();
  sub_100042444(v4, qword_1009E1278);
  uint64_t v29 = sub_100087728(v4, (uint64_t)qword_1009E1278);
  if (qword_10097E150 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_100984C60;
  [(id)qword_100984C60 size];
  [v5 contentInsets];
  v50[8] = (uint64_t)&type metadata for Double;
  v50[9] = (uint64_t)&protocol witness table for Double;
  v50[5] = 0x401C000000000000;
  if (qword_10097F360 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for FontUseCase();
  uint64_t v7 = sub_100087728(v6, (uint64_t)qword_1009E4478);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v28 = v7;
  id v33 = v9;
  uint64_t v10 = v8 + 16;
  ((void (*)(char *))v9)(v3);
  uint64_t v11 = (void (*)(void))v1[13];
  unsigned int v32 = enum case for FontSource.useCase(_:);
  double v34 = v1 + 13;
  uint64_t v12 = (void (*)(char *, void, uint64_t))v11;
  v11(v3);
  uint64_t v31 = type metadata accessor for StaticDimension();
  void v50[3] = v31;
  _DWORD v50[4] = (uint64_t)&protocol witness table for StaticDimension;
  sub_1000808B8(v50);
  uint64_t v48 = v0;
  id v49 = &protocol witness table for FontSource;
  uint64_t v13 = sub_1000808B8(v47);
  double v36 = (void (*)(uint64_t *, char *, uint64_t))v1[2];
  v36(v13, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  uint64_t v30 = (void (*)(char *, uint64_t))v1[1];
  double v35 = v1 + 1;
  v30(v3, v0);
  if (qword_10097F368 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100087728(v6, (uint64_t)qword_1009E4490);
  uint64_t v15 = v33;
  v33(v3, v14, v6);
  v26[1] = v10;
  uint64_t v27 = v12;
  uint64_t v16 = v32;
  v12(v3, v32, v0);
  uint64_t v48 = v31;
  id v49 = &protocol witness table for StaticDimension;
  sub_1000808B8(v47);
  uint64_t v45 = (void *)v0;
  uint64_t v46 = &protocol witness table for FontSource;
  uint64_t v17 = sub_1000808B8(v44);
  v36(v17, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  v30(v3, v0);
  uint64_t v46 = &protocol witness table for Double;
  uint64_t v45 = &type metadata for Double;
  v44[0] = 0x4030000000000000;
  uint64_t v18 = v28;
  v15(v3, v28, v6);
  uint64_t v19 = v16;
  uint64_t v20 = v27;
  v27(v3, v19, v0);
  uint64_t v21 = v31;
  v43[3] = v31;
  v43[4] = (uint64_t)&protocol witness table for StaticDimension;
  sub_1000808B8(v43);
  uint64_t v41 = v0;
  uint64_t v42 = &protocol witness table for FontSource;
  uint64_t v22 = sub_1000808B8(v40);
  v36(v22, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  unsigned int v23 = v30;
  v30(v3, v0);
  v33(v3, v18, v6);
  v20(v3, v32, v0);
  uint64_t v41 = v21;
  uint64_t v42 = &protocol witness table for StaticDimension;
  sub_1000808B8(v40);
  double v38 = (void *)v0;
  uint64_t v39 = &protocol witness table for FontSource;
  uint64_t v24 = sub_1000808B8(v37);
  v36(v24, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  v23(v3, v0);
  uint64_t v39 = &protocol witness table for Double;
  double v38 = &type metadata for Double;
  v37[0] = 0x4034000000000000;
  return ProductAnnotationLayout.Metrics.init(disclosureSize:disclosureContentInsets:disclosureMargin:titleSpace:detailSpace:detailMargin:linkSpace:bottomSpace:horizontalSpacing:shouldDisclosureAlignWithContent:)();
}

uint64_t sub_10012669C()
{
  uint64_t v0 = type metadata accessor for FontUseCase();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v7 = sub_100082C28((uint64_t *)&unk_100985790);
  sub_100042444(v7, qword_100984C00);
  sub_100087728(v7, (uint64_t)qword_100984C00);
  if (qword_10097F368 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100087728(v0, (uint64_t)qword_1009E4490);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_10097F360 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100087728(v0, (uint64_t)qword_1009E4478);
  v9(v3, v10, v0);
  sub_100082C28(&qword_100985B80);
  return Conditional<>.init(regularValue:compactValue:)();
}

uint64_t sub_10012686C()
{
  uint64_t v0 = type metadata accessor for ProductAnnotationLayout.Metrics();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - v5;
  uint64_t v7 = sub_100082C28(&qword_100984D00);
  sub_100042444(v7, qword_1009E1290);
  sub_100087728(v7, (uint64_t)qword_1009E1290);
  if (qword_10097E118 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100087728(v0, (uint64_t)qword_1009E1260);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v6, v8, v0);
  if (qword_10097E120 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100087728(v0, (uint64_t)qword_1009E1278);
  v9(v3, v10, v0);
  sub_100082C28(&qword_100985B80);
  return Conditional<>.init(regularValue:compactValue:)();
}

uint64_t sub_100126A3C(uint64_t a1)
{
  return sub_100126B58(a1, qword_100984C18);
}

uint64_t sub_100126A48()
{
  uint64_t v0 = sub_100082C28((uint64_t *)&unk_100984B00);
  sub_100042444(v0, qword_100984C30);
  sub_100087728(v0, (uint64_t)qword_100984C30);
  sub_100082C28(&qword_100985B80);
  type metadata accessor for NSTextAlignment(0);
  return Conditional.init(_:)();
}

uint64_t sub_100126AD4@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 traitCollection];
  char v4 = UITraitCollection.prefersRightToLeftLayouts.getter();

  uint64_t result = static ProductAnnotationLayout.isSummaryPlacedBelow(in:)();
  uint64_t v6 = 2;
  if (v4) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = 2;
  }
  if ((v4 & 1) == 0) {
    uint64_t v6 = 0;
  }
  if ((result & 1) == 0) {
    uint64_t v6 = v7;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_100126B4C(uint64_t a1)
{
  return sub_100126B58(a1, qword_100984C48);
}

uint64_t sub_100126B58(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100082C28((uint64_t *)&unk_100984B00);
  sub_100042444(v3, a2);
  sub_100087728(v3, (uint64_t)a2);
  sub_100082C28(&qword_100985B80);
  type metadata accessor for NSTextAlignment(0);
  return Conditional<>.init(regularValue:rightToLeftValue:)();
}

uint64_t sub_100126BE0()
{
  uint64_t v0 = type metadata accessor for SystemImage();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  char v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for SystemImage.chevronDown(_:), v0, v2);
  uint64_t v5 = static SystemImage.load(_:with:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_100984C60 = v5;
  return result;
}

char *sub_100126CD8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = sub_100082C28(&qword_100984CE0);
  __chkstk_darwin(v10);
  uint64_t v11 = &v4[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_itemLayoutContext];
  uint64_t v12 = type metadata accessor for ItemLayoutContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel] = 0;
  _s8ItemViewCMa();
  uint64_t v13 = v4;
  ViewRecycler.init()();
  sub_1000DD560(&qword_100984CE8, &qword_100984CE0);
  ReusePool.init(recycler:limit:)();
  *(void *)&v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_separatorLineView] = 0;
  v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isSeparatorDisplayed] = 0;
  v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] = 0;
  uint64_t v14 = &v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v15 = &v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  *(void *)&v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems] = _swiftEmptyArrayStorage;
  uint64_t v16 = &v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
  uint64_t v17 = sub_100082C28((uint64_t *)&unk_10098A9A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  if (qword_10097E150 != -1) {
    swift_once();
  }
  id v18 = [objc_allocWithZone((Class)UIImageView) initWithImage:qword_100984C60];
  *(void *)&v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView] = v18;
  type metadata accessor for DynamicTypeLabel();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v20 = [objc_allocWithZone(ObjCClassFromMetadata) init];
  *(void *)&v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel] = v20;
  id v21 = [objc_allocWithZone(ObjCClassFromMetadata) init];
  *(void *)&v13[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel] = v21;

  v47.receiver = v13;
  v47.super_class = ObjectType;
  uint64_t v22 = (char *)[v47 initWithFrame:a1, a2, a3, a4];
  id v23 = [v22 contentView];
  sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  uint64_t v24 = (void *)static UIColor.defaultBackground.getter();
  [v23 setBackgroundColor:v24];

  id v25 = [v22 contentView];
  [v25 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];

  uint64_t v26 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView;
  id v27 = *(id *)&v22[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView];
  uint64_t v28 = (void *)static UIColor.secondaryText.getter();
  [v27 setTintColor:v28];

  id v29 = [v22 contentView];
  [v29 addSubview:*(void *)&v22[v26]];

  uint64_t v30 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel;
  id v31 = *(id *)&v22[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter();

  unsigned int v32 = *(void **)&v22[v30];
  [v32 setNumberOfLines:1];
  id v33 = v32;
  double v34 = (void *)static UIColor.secondaryText.getter();
  [v33 setTextColor:v34];

  id v35 = *(id *)&v22[v30];
  double v36 = (void *)static UIColor.defaultBackground.getter();
  [v35 setBackgroundColor:v36];

  id v37 = [v22 contentView];
  [v37 addSubview:*(void *)&v22[v30]];

  uint64_t v38 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel;
  id v39 = *(id *)&v22[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter();

  uint64_t v40 = *(void **)&v22[v38];
  [v40 setNumberOfLines:1];
  id v41 = v40;
  uint64_t v42 = (void *)static UIColor.primaryText.getter();
  [v41 setTextColor:v42];

  id v43 = *(id *)&v22[v38];
  id v44 = (void *)static UIColor.defaultBackground.getter();
  [v43 setBackgroundColor:v44];

  id v45 = [v22 contentView];
  [v45 addSubview:*(void *)&v22[v38]];

  sub_100127264();
  return v22;
}

void sub_100127264()
{
  uint64_t v1 = v0;
  __n128 v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel);
  if (qword_10097E138 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_100082C28((uint64_t *)&unk_100984B00);
  sub_100087728(v3, (uint64_t)qword_100984C18);
  Conditional.evaluate(with:)();
  [v2 setTextAlignment:v8, v0];
  char v4 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel);
  if (qword_10097E140 != -1) {
    swift_once();
  }
  sub_100087728(v3, (uint64_t)qword_100984C30);
  Conditional.evaluate(with:)();
  [v4 setTextAlignment:v8, v0];
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel);
  if (v5)
  {
    uint64_t v6 = qword_10097E148;
    id v7 = v5;
    if (v6 != -1) {
      swift_once();
    }
    sub_100087728(v3, (uint64_t)qword_100984C48);
    Conditional.evaluate(with:)();
    [v7 setTextAlignment:v8 v1];
  }
}

uint64_t sub_100127464()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_100082C28(&qword_10098D120);
  *(void *)&double v3 = __chkstk_darwin(v2 - 8).n128_u64[0];
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20.receiver = v0;
  v20.super_class = ObjectType;
  [super prepareForReuse:v3];
  uint64_t v6 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  swift_bridgeObjectRelease();
  id v7 = *(void **)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel];
  if (*((void *)v6 + 1))
  {
    swift_bridgeObjectRetain();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  [v7 setText:v8];

  [v0 setNeedsLayout];
  uint64_t v9 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  swift_bridgeObjectRelease();
  sub_100128684();
  [*(id *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView] setHidden:0];
  *(void *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v10 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews];
  swift_beginAccess();
  uint64_t v11 = *(void *)v10;
  if (!(*(void *)v10 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_6;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    *(void *)uint64_t v10 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_100082C28((uint64_t *)&unk_10098A9A0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
    uint64_t v18 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
    swift_beginAccess();
    sub_1000B054C((uint64_t)v5, v18);
    swift_endAccess();
    sub_100128818();
    return sub_100082BCC((uint64_t)v5, &qword_10098D120);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_13;
  }
LABEL_6:
  if (v12 >= 1)
  {
    for (uint64_t i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(v11 + 8 * i + 32);
      }
      uint64_t v16 = v15;
      [v15 removeFromSuperview];
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100127788@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  if ((unint64_t)Annotation.items.getter() >> 62) {
    _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = _s8ItemViewCMa();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = a1;
  uint64_t v6 = type metadata accessor for LayoutViewPlaceholder();
  swift_allocObject();
  swift_retain();
  uint64_t result = LayoutViewPlaceholder.init(measureWith:)();
  a2[3] = v6;
  a2[4] = (uint64_t)&protocol witness table for LayoutViewPlaceholder;
  *a2 = result;
  return result;
}

uint64_t sub_100127864()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v59 = type metadata accessor for Separator.Position();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  double v61 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for Separator();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v65 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for LayoutRect();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for ProductAnnotationLayout();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  double v62 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for ProductAnnotationLayout.Metrics();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v52 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v68 = (char *)&v50 - v9;
  uint64_t v10 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FontUseCase();
  uint64_t v14 = *(void *)(v13 - 8);
  *(void *)&double v15 = __chkstk_darwin(v13).n128_u64[0];
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83.receiver = v1;
  v83.super_class = ObjectType;
  [super layoutSubviews:v15];
  id v18 = [v1 contentView];
  sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
  LayoutMarginsAware<>.layoutFrame.getter();

  if (qword_10097E128 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100082C28((uint64_t *)&unk_100985790);
  sub_100087728(v19, (uint64_t)qword_100984C00);
  uint64_t v80 = v1;
  Conditional.evaluate(with:)();
  uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleLabel];
  id v21 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v21(v12, v17, v13);
  uint64_t v60 = v14;
  uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  v22(v12, 0, 1, v13);
  uint64_t v51 = v20;
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter();
  id v23 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel];
  v21(v12, v17, v13);
  v22(v12, 0, 1, v13);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter();
  uint64_t v50 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel;
  uint64_t v24 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel];
  if (v24)
  {
    v21(v12, v17, v13);
    v22(v12, 0, 1, v13);
    id v25 = v24;
    dispatch thunk of DynamicTypeLabel.fontUseCase.setter();
  }
  uint64_t v56 = v13;
  uint64_t v57 = v17;
  uint64_t v26 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded;
  [v23 setHidden:v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] v50];
  id v27 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView];
  if (v1[v26]) {
    LOBYTE(v28) = 1;
  }
  else {
    BOOL v28 = !sub_100125334();
  }
  id v29 = v52;
  [v27 setHidden:v28];
  if (qword_10097E130 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_100082C28(&qword_100984D00);
  sub_100087728(v30, (uint64_t)qword_1009E1290);
  uint64_t v80 = v1;
  id v31 = v68;
  Conditional.evaluate(with:)();
  ProductAnnotationLayout.Metrics.disclosureSize.getter();
  id v32 = [v1 traitCollection];
  _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection();

  CGSize.scaled(_:)();
  ProductAnnotationLayout.Metrics.disclosureSize.setter();
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v29, v31, v70);
  uint64_t v33 = type metadata accessor for DynamicTypeLabel();
  uint64_t v81 = v33;
  CGRect v82 = &protocol witness table for UILabel;
  double v34 = (void *)v51;
  unsigned int v79 = &protocol witness table for UILabel;
  uint64_t v80 = (char *)v51;
  uint64_t v78 = v33;
  uint64_t v77 = v23;
  swift_beginAccess();
  id v35 = v34;
  id v36 = v23;
  unint64_t v37 = swift_bridgeObjectRetain();
  sub_100308194(v37);
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void **)&v1[v50];
  if (v38)
  {
    uint64_t v76 = &protocol witness table for UIView;
    *((void *)&v75 + 1) = v33;
    *(void *)&long long v74 = v38;
  }
  else
  {
    uint64_t v76 = 0;
    long long v75 = 0u;
    long long v74 = 0u;
  }
  uint64_t v39 = v60;
  uint64_t v40 = sub_100084CF0(0, (unint64_t *)&qword_10098A7F0);
  uint64_t v73 = &protocol witness table for UIView;
  uint64_t v72 = v40;
  uint64_t v71 = v27;
  id v41 = v27;
  id v42 = v38;
  id v43 = v62;
  ProductAnnotationLayout.init(metrics:titleText:summaryText:detailViews:linkText:disclosureView:isExpanded:)();
  id v44 = v53;
  ProductAnnotationLayout.placeChildren(relativeTo:in:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v55);
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v61, enum case for Separator.Position.bottom(_:), v59);
  uint64_t v81 = type metadata accessor for ZeroDimension();
  CGRect v82 = &protocol witness table for ZeroDimension;
  sub_1000808B8((uint64_t *)&v80);
  static ZeroDimension.zero.getter();
  id v45 = v65;
  Separator.init(position:leadingInset:trailingInset:verticalOutset:)();
  uint64_t v46 = (void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_separatorLineView];
  swift_beginAccess();
  objc_super v47 = *v46;
  if (v47)
  {
    swift_endAccess();
    id v48 = v47;
    Separator.frame(forBoundingRect:in:)();
    [v48 setFrame:];

    (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v67);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v43, v64);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v57, v56);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v67);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v43, v64);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v57, v56);
    return swift_endAccess();
  }
}

id sub_100128364()
{
  if (v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] != 1)
  {
    [v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView] setHidden:0];
    return [v0 setNeedsLayout];
  }
  uint64_t v14 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems;
  unint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems];
  if (v1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (!v2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    [*(id *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_disclosureView] setHidden:1 v13];
    return [v0 setNeedsLayout];
  }
  while (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews];
    unint64_t v13 = v1 & 0xC000000000000001;
    while (1)
    {
      if (v13)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v6 = *(void *)(v1 + 8 * v4 + 32);
        swift_retain();
      }
      swift_beginAccess();
      sub_100082C28(&qword_100984D08);
      ReusePool.dequeue(or:)();
      swift_endAccess();
      unint64_t v7 = *(void *)&v0[v14];
      if (v7 >> 62) {
        break;
      }
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v9 = v8 - 1;
      if (__OFSUB__(v8, 1)) {
        goto LABEL_19;
      }
LABEL_11:
      sub_1001C7C00(v6, v4 == v9);
      id v10 = [v0 contentView];
      [v10 addSubview:v15];

      swift_beginAccess();
      id v11 = v15;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      ++v4;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();

      swift_release();
      if (v2 == v4) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v9 = v12 - 1;
    if (!__OFSUB__(v12, 1)) {
      goto LABEL_11;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = (uint64_t)result;
    if (!result) {
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

id sub_100128638@<X0>(void *a1@<X8>)
{
  id result = [objc_allocWithZone((Class)_s8ItemViewCMa()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *a1 = result;
  return result;
}

id sub_100128684()
{
  unint64_t v1 = v0;
  if (!*(void *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary + 8])
  {
    uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel];
    unint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems];
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      if (result)
      {
LABEL_5:
        if ((v5 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          swift_retain();
        }
        swift_bridgeObjectRelease();
        AnnotationItem_V2.text.getter();
        uint64_t v9 = v8;
        swift_release();
        if (v9)
        {
          NSString v3 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
LABEL_13:
          [v4 setText:v3];
          goto LABEL_14;
        }
LABEL_12:
        NSString v3 = 0;
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (v6) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_summaryLabel];
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v3];
LABEL_14:

  return [v1 setNeedsLayout];
}

void sub_100128818()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_100082C28((uint64_t *)&unk_10098A9A0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] != 1) {
    goto LABEL_3;
  }
  uint64_t v6 = &v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
  swift_beginAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2)) {
    goto LABEL_3;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v6, v2);
  ObjectGraphPair.value.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  Action.title.getter();
  uint64_t v11 = v10;
  swift_release();
  if (v11)
  {
    type metadata accessor for DynamicTypeLabel();
    id v12 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setText:v13];

    sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
    id v14 = v12;
    double v15 = (void *)static UIColor.appTint.getter();
    [v14 setTextColor:v15];

    id v16 = v14;
    uint64_t v17 = (void *)static UIColor.defaultBackground.getter();
    [v16 setBackgroundColor:v17];

    [v16 setUserInteractionEnabled:1];
    id v18 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"linkLabelTapped:"];
    [v16 addGestureRecognizer:v18];

    id v19 = [v1 contentView];
    [v19 addSubview:v16];

    uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel];
    *(void *)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel] = v16;
    id v9 = v16;

    [v1 setNeedsLayout];
  }
  else
  {
LABEL_3:
    uint64_t v7 = OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel;
    uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel];
    if (v8)
    {
      [v8 removeFromSuperview];
      id v9 = *(id *)&v1[v7];
    }
    else
    {
      id v9 = 0;
    }
    *(void *)&v1[v7] = 0;
  }
}

void sub_100128B94(uint64_t a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  [super traitCollectionDidChange:a1];
  id v3 = [v1 traitCollection];
  char v4 = UITraitCollection.prefersRightToLeftLayouts.getter();

  if (!a1 || (UITraitCollection.prefersRightToLeftLayouts.getter() & 1) != (v4 & 1)) {
    sub_100127264();
  }
}

void *sub_100128D00()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems);
  if (v1 >> 62) {
    goto LABEL_44;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v3 = 0;
    unint64_t v46 = v1 & 0xC000000000000001;
    unint64_t v42 = v1 + 32;
    uint64_t v43 = v1 & 0xFFFFFFFFFFFFFF8;
    char v4 = _swiftEmptyArrayStorage;
    uint64_t v44 = v2;
    unint64_t v45 = v1;
    while (v46)
    {
      unint64_t v1 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v5 = __OFADD__(v3, 1);
      unint64_t v6 = v3 + 1;
      if (v5) {
        goto LABEL_41;
      }
LABEL_10:
      sub_100082C28((uint64_t *)&unk_100984E80);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1007BF710;
      *(void *)(inited + 32) = AnnotationItem_V2.heading.getter();
      *(void *)(inited + 40) = v8;
      *(void *)(inited + 48) = AnnotationItem_V2.text.getter();
      *(void *)(inited + 56) = v9;
      *(void *)(inited + 64) = AnnotationItem_V2.listText.getter();
      *(void *)(inited + 72) = v10;
      unint64_t v11 = AnnotationItem_V2.textPairs.getter();
      unint64_t v12 = v11;
      objc_super v47 = v4;
      if (v11 >> 62) {
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      }
      else {
        uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v48 = v6;
      if (v13)
      {
        if (v13 < 1) {
          goto LABEL_42;
        }
        uint64_t v14 = 0;
        do
        {
          if ((v12 & 0xC000000000000001) != 0) {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            swift_retain();
          }
          uint64_t v15 = AnnotationItem_V2.TextPair.leadingText.getter();
          uint64_t v17 = v16;
          unint64_t v19 = *(void *)(inited + 16);
          unint64_t v18 = *(void *)(inited + 24);
          if (v19 >= v18 >> 1) {
            uint64_t inited = (uint64_t)sub_1000ACBA0((void *)(v18 > 1), v19 + 1, 1, (void *)inited);
          }
          *(void *)(inited + 16) = v19 + 1;
          uint64_t v20 = inited + 16 * v19;
          *(void *)(v20 + 32) = v15;
          *(void *)(v20 + 40) = v17;
          uint64_t v21 = AnnotationItem_V2.TextPair.trailingText.getter();
          uint64_t v23 = v22;
          unint64_t v25 = *(void *)(inited + 16);
          unint64_t v24 = *(void *)(inited + 24);
          if (v25 >= v24 >> 1) {
            uint64_t inited = (uint64_t)sub_1000ACBA0((void *)(v24 > 1), v25 + 1, 1, (void *)inited);
          }
          ++v14;
          *(void *)(inited + 16) = v25 + 1;
          uint64_t v26 = inited + 16 * v25;
          *(void *)(v26 + 32) = v21;
          *(void *)(v26 + 40) = v23;
          swift_release();
        }
        while (v13 != v14);
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(inited + 16);
      if (v27)
      {
        swift_bridgeObjectRetain_n();
        BOOL v28 = (uint64_t *)(inited + 40);
        id v29 = _swiftEmptyArrayStorage;
        char v4 = v47;
        do
        {
          uint64_t v31 = *v28;
          if (*v28)
          {
            uint64_t v32 = *(v28 - 1);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v29 = sub_1000864FC(0, v29[2] + 1, 1, v29);
            }
            unint64_t v34 = v29[2];
            unint64_t v33 = v29[3];
            if (v34 >= v33 >> 1) {
              id v29 = sub_1000864FC((void *)(v33 > 1), v34 + 1, 1, v29);
            }
            void v29[2] = v34 + 1;
            uint64_t v30 = &v29[2 * v34];
            v30[4] = v32;
            v30[5] = v31;
          }
          v28 += 2;
          --v27;
        }
        while (v27);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v4 = v47;
      }
      swift_bridgeObjectRelease();
      sub_100082C28((uint64_t *)&unk_100984E90);
      sub_1000DD560((unint64_t *)&qword_10098C670, (uint64_t *)&unk_100984E90);
      uint64_t v35 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v4 = sub_1000864FC(0, v4[2] + 1, 1, v4);
      }
      unint64_t v39 = v4[2];
      unint64_t v38 = v4[3];
      if (v39 >= v38 >> 1) {
        char v4 = sub_1000864FC((void *)(v38 > 1), v39 + 1, 1, v4);
      }
      v4[2] = v39 + 1;
      uint64_t v40 = &v4[2 * v39];
      v40[4] = v35;
      _OWORD v40[5] = v37;
      swift_release();
      unint64_t v1 = v45;
      unint64_t v3 = v48;
      if (v48 == v44)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    if (v3 >= *(void *)(v43 + 16)) {
      goto LABEL_43;
    }
    unint64_t v1 = *(void *)(v42 + 8 * v3);
    swift_retain();
    BOOL v5 = __OFADD__(v3, 1);
    unint64_t v6 = v3 + 1;
    if (!v5) {
      goto LABEL_10;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100129370()
{
  return type metadata accessor for AnnotationCollectionViewCell();
}

uint64_t type metadata accessor for AnnotationCollectionViewCell()
{
  uint64_t result = qword_100984CC0;
  if (!qword_100984CC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001293C4()
{
  sub_1000A1880();
  if (v0 <= 0x3F)
  {
    sub_10012950C();
    if (v1 <= 0x3F)
    {
      sub_1000F3038();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10012950C()
{
  if (!qword_100984CD8)
  {
    sub_100078F30(&qword_100984CE0);
    sub_1000DD560(&qword_100984CE8, &qword_100984CE0);
    unint64_t v0 = type metadata accessor for ReusePool();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100984CD8);
    }
  }
}

uint64_t sub_1001295A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100047768(a1, a2, a3, (void *)*v3, &qword_100981630, (uint64_t *)&unk_100984D30);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001295D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100129B3C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001295F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100047768(a1, a2, a3, (void *)*v3, &qword_1009815E8, &qword_100984DE0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129620(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100129CC8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100129640(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012B3C0(a1, a2, a3, (void *)*v3, &qword_100984D80, &qword_100984D88);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129670(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012B3C0(a1, a2, a3, (void *)*v3, &qword_100984D90, &qword_100984D98);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001296A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100010E98(a1, a2, a3, (void *)*v3, &qword_100984DA0, &qword_100984DA8);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001296D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012AE98(a1, a2, a3, (void *)*v3, &qword_100984DB0, (uint64_t (*)(void))&type metadata accessor for AdamId);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10012970C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A11C(a1, a2, a3, (void *)*v3, &qword_1009815C8, &qword_100984D60);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10012973C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100129E50(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_10012975C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100129FBC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_10012977C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A11C(a1, a2, a3, (void *)*v3, &qword_100981608, (uint64_t *)&unk_1009838D0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001297AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A2AC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001297CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A438(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001297EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A598(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_10012980C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100047768(a1, a2, a3, (void *)*v3, &qword_100984D58, (uint64_t *)&unk_100983890);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10012983C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A6F8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_10012985C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A870(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10012987C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012AE98(a1, a2, a3, (void *)*v3, &qword_100984EA8, (uint64_t (*)(void))&type metadata accessor for PageFacets.Facet.Option);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001298B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A9F4(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001298D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012AB60(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1001298F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100047768(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100984DF0, (uint64_t *)&unk_10098C580);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129928(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100047768(a1, a2, a3, (void *)*v3, &qword_100981640, (uint64_t *)&unk_100984D40);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129958(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012ACEC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129978(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012AE98(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100984E00, (uint64_t (*)(void))&type metadata accessor for SponsoredSearchAdvert);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001299B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012B3C0(a1, a2, a3, (void *)*v3, &qword_100984ED0, &qword_100984ED8);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001299E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012AE98(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100984EF0, (uint64_t (*)(void))&type metadata accessor for DebugMetricsEvent);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129A20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012B3C0(a1, a2, a3, (void *)*v3, &qword_100984E30, &qword_100984E38);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129A50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012AE98(a1, a2, a3, (void *)*v3, &qword_100984E60, (uint64_t (*)(void))&type metadata accessor for IndexPath);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129A8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012B0E0(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129AAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012B264(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129ACC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012B3C0(a1, a2, a3, (void *)*v3, &qword_100984EE0, &qword_100984EE8);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129AFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012B600(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129B1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012B76C(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100129B3C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984D70);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    _OWORD v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_100082C28(&qword_100984D78);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100129CC8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984D68);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100129E50(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_1009816B0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100129FBC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28((uint64_t *)&unk_100984DD0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012A11C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_100082C28(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_100082C28(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012A2AC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984DB8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    _OWORD v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100082C28((uint64_t *)&unk_100984DC0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012A438(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_1009955C0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012A598(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984D50);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012A6F8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984E68);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012A870(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28((uint64_t *)&unk_100984E20);
    int64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  unint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012A9F4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100981650);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012AB60(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984DE8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012ACEC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28((uint64_t *)&unk_100984E80);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    _OWORD v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100082C28(&qword_100981720);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012AE78(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10012AE98(a1, a2, a3, a4, &qword_100984E60, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

uint64_t sub_10012AE98(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100082C28(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  uint64_t v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012B0E0(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984EB8);
    int64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012B264(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984E58);
    int64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012B3C0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100082C28(a5);
  uint64_t v13 = *(void *)(sub_100082C28(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  uint64_t v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_100082C28(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012B600(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984EB0);
    int64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012B76C(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100082C28(&qword_100984E40);
    int64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double sub_10012B8F0(uint64_t a1, int a2, void *a3)
{
  int v65 = a2;
  uint64_t v75 = a1;
  uint64_t v4 = type metadata accessor for ProductAnnotationLayout();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  __chkstk_darwin(v4);
  uint64_t v68 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for ProductAnnotationLayout.Metrics();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v64 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v66 = (char *)&v58 - v8;
  uint64_t v9 = type metadata accessor for LabelPlaceholderCompatibility();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v9 - 8);
  uint64_t v73 = v9;
  __chkstk_darwin(v9);
  uint64_t v63 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FontUseCase();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084CF0(0, (unint64_t *)&qword_100984D10);
  if (qword_10097E128 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100082C28((uint64_t *)&unk_100985790);
  sub_100087728(v15, (uint64_t)qword_100984C00);
  v87[0] = (uint64_t)a3;
  Conditional.evaluate(with:)();
  id v16 = [a3 traitCollection];
  uint64_t v74 = (uint64_t)a3;
  id v17 = v16;
  uint64_t v18 = static UIFont.preferredFont(forUseWith:compatibleWith:)();

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  Annotation.title.getter();
  uint64_t v19 = type metadata accessor for Feature();
  v87[3] = v19;
  uint64_t v20 = sub_10012C794((unint64_t *)&qword_100984AA0, (void (*)(uint64_t))&type metadata accessor for Feature);
  v87[4] = v20;
  uint64_t v21 = sub_1000808B8(v87);
  uint64_t v22 = enum case for Feature.measurement_with_labelplaceholder(_:);
  uint64_t v23 = *(void *)(v19 - 8);
  double v62 = *(void (**)(uint64_t *, void, uint64_t))(v23 + 104);
  uint64_t v24 = v23 + 104;
  v62(v21, enum case for Feature.measurement_with_labelplaceholder(_:), v19);
  double v61 = (void (*)(char *, uint64_t))(id)v18;
  LOBYTE(v18) = isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v87);
  LOBYTE(v56) = v18 & 1;
  unint64_t v25 = v63;
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)();
  LabelPlaceholderCompatibility.layoutTextView.getter();
  uint64_t v26 = v73;
  uint64_t v27 = (void (*)(char *, uint64_t))*((void *)v72 + 1);
  v27(v25, v73);
  Annotation.summary.getter();
  uint64_t v72 = (void (*)(char *, uint64_t))v28;
  v86[3] = v19;
  v86[4] = v20;
  uint64_t v60 = v20;
  id v29 = sub_1000808B8(v86);
  unsigned int v59 = v22;
  uint64_t v30 = v22;
  uint64_t v31 = v62;
  uint64_t v58 = v24;
  v62(v29, v30, v19);
  uint64_t v32 = v61;
  isFeatureEnabled(_:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v86);
  uint64_t v72 = v32;
  LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)();
  LabelPlaceholderCompatibility.layoutTextView.getter();
  double v61 = v27;
  v27(v25, v26);
  uint64_t v33 = v75;
  uint64_t v34 = Annotation.items_V2.getter();
  __chkstk_darwin(v34);
  uint64_t v56 = v33;
  uint64_t v57 = v74;
  sub_10012C2A4(v35, (void (*)(void *__return_ptr, unint64_t, uint64_t))sub_10012C74C, (uint64_t)(&v58 - 4));
  swift_bridgeObjectRelease();
  uint64_t v85 = 0;
  memset(v84, 0, sizeof(v84));
  if (Annotation.linkAction.getter())
  {
    Action.title.getter();
    uint64_t v37 = v36;
    swift_release();
    if (v37)
    {
      v83[3] = v19;
      v83[4] = v60;
      unint64_t v38 = sub_1000808B8(v83);
      v31(v38, v59, v19);
      unint64_t v39 = v72;
      char v40 = isFeatureEnabled(_:)();
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v83);
      LOBYTE(v56) = v40 & 1;
      LabelPlaceholderCompatibility.init(text:font:textAlignment:lineBreakMode:lineSpacing:numberOfLines:isLanguageAware:shouldUseLabelPlaceholder:)();
      LabelPlaceholderCompatibility.layoutTextView.getter();
      v61(v25, v73);
      sub_100082BCC((uint64_t)v84, (uint64_t *)&unk_100990B70);
      sub_10006413C((uint64_t)v83, (uint64_t)v84);
    }
  }
  uint64_t v41 = v67;
  if (qword_10097E130 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_100082C28(&qword_100984D00);
  sub_100087728(v42, (uint64_t)qword_1009E1290);
  uint64_t v43 = (void *)v74;
  v83[0] = v74;
  uint64_t v44 = v66;
  Conditional.evaluate(with:)();
  ProductAnnotationLayout.Metrics.disclosureSize.getter();
  id v45 = [v43 traitCollection];
  _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection();

  CGSize.scaled(_:)();
  ProductAnnotationLayout.Metrics.disclosureSize.setter();
  uint64_t v46 = v69;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v64, v44, v69);
  sub_100082C6C((uint64_t)v87, (uint64_t)v83);
  sub_100082C6C((uint64_t)v86, (uint64_t)&v82);
  sub_100082B68((uint64_t)v84, (uint64_t)&v76, (uint64_t *)&unk_100990B70);
  uint64_t v47 = *((void *)&v77 + 1);
  if (*((void *)&v77 + 1))
  {
    uint64_t v48 = v78;
    id v49 = sub_100081D90(&v76, *((uint64_t *)&v77 + 1));
    *((void *)&v80 + 1) = v47;
    uint64_t v81 = *(void *)(v48 + 8);
    uint64_t v50 = sub_1000808B8((uint64_t *)&v79);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v50, v49, v47);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v76);
  }
  else
  {
    sub_100082BCC((uint64_t)&v76, (uint64_t *)&unk_100990B70);
    long long v79 = 0u;
    long long v80 = 0u;
    uint64_t v81 = 0;
  }
  uint64_t v78 = 0;
  long long v76 = 0u;
  long long v77 = 0u;
  uint64_t v51 = v68;
  ProductAnnotationLayout.init(metrics:titleText:summaryText:detailViews:linkText:disclosureView:isExpanded:)();
  sub_10012C794((unint64_t *)&unk_100984D20, (void (*)(uint64_t))&type metadata accessor for ProductAnnotationLayout);
  uint64_t v52 = v71;
  dispatch thunk of Measurable.measurements(fitting:in:)();
  double v54 = v53;

  (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v52);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v46);
  sub_100082BCC((uint64_t)v84, (uint64_t *)&unk_100990B70);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v86);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v87);
  return v54;
}

uint64_t sub_10012C20C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_1000808B8((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_100081DD4(&v12, v10 + 40 * a1 + 32);
}

void *sub_10012C2A4(unint64_t a1, void (*a2)(void *__return_ptr, unint64_t, uint64_t), uint64_t a3)
{
  void (*v22)(void *__return_ptr, unint64_t, uint64_t);
  uint64_t v23;
  void v24[3];
  uint64_t v25;
  uint64_t v26;
  void *v27;

  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v27 = _swiftEmptyArrayStorage;
  sub_1001295A0(0, 0, 0);
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      uint64_t v20 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v21 = a1 & 0xC000000000000001;
      while (v21)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v8 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_15;
        }
LABEL_7:
        v22(v24, v6, v7);
        swift_release();
        uint64_t v27 = v4;
        unint64_t v10 = v4[2];
        unint64_t v9 = v4[3];
        if (v10 >= v9 >> 1) {
          sub_1001295A0(v9 > 1, v10 + 1, 1);
        }
        uint64_t v11 = v25;
        uint64_t v12 = v26;
        uint64_t v13 = sub_100071F4C((uint64_t)v24, v25);
        __n128 v14 = __chkstk_darwin(v13);
        id v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
        sub_10012C20C(v10, (uint64_t)v16, (uint64_t *)&v27, v11, v12);
        _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v24);
        uint64_t v4 = v27;
        ++v6;
        if (v8 == v5) {
          goto LABEL_17;
        }
      }
      if (v6 < *(void *)(v20 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5) {
        goto LABEL_17;
      }
    }
    uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
    swift_retain();
    unint64_t v8 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_15;
    }
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10012C4EC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    *uint64_t v1 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      ++v5;
      swift_beginAccess();
      sub_100082C28(&qword_100984D08);
      ReusePool.recycle(_:)();
      swift_endAccess();
    }
    while (v3 != v5);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

id sub_10012C63C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (id *)&v1[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_separatorLineView];
  swift_beginAccess();
  if (*v4)
  {
    [*v4 removeFromSuperview];
    id v5 = *v4;
  }
  else
  {
    id v5 = 0;
  }
  *uint64_t v4 = a1;
  id v6 = a1;

  id v7 = *v4;
  if (*v4)
  {
    sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
    id v8 = v7;
    unint64_t v9 = (void *)static UIColor.defaultLine.getter();
    [v8 setBackgroundColor:v9];

    id v10 = [v2 contentView];
    [v10 addSubview:v8];
  }
  return [v2 setNeedsLayout];
}

uint64_t sub_10012C74C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_100127788(a1, a2);
}

uint64_t sub_10012C754()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

double sub_10012C78C(void *a1)
{
  return sub_1001C91E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10012C794(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10012C7DC()
{
  uint64_t v1 = sub_100082C28(&qword_100984CE0);
  __chkstk_darwin(v1);
  uint64_t v2 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_itemLayoutContext];
  uint64_t v3 = type metadata accessor for ItemLayoutContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkLabel] = 0;
  _s8ItemViewCMa();
  ViewRecycler.init()();
  sub_1000DD560(&qword_100984CE8, &qword_100984CE0);
  ReusePool.init(recycler:limit:)();
  *(void *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailViews] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_separatorLineView] = 0;
  v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isSeparatorDisplayed] = 0;
  v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_isExpanded] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_titleText];
  *uint64_t v4 = 0;
  v4[1] = 0;
  id v5 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_explicitSummary];
  *id v5 = 0;
  v5[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_detailItems] = _swiftEmptyArrayStorage;
  id v6 = &v0[OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction];
  uint64_t v7 = sub_100082C28((uint64_t *)&unk_10098A9A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10012CA04()
{
  uint64_t v1 = type metadata accessor for Dependency();
  uint64_t v44 = *(void *)(v1 - 8);
  uint64_t v45 = v1;
  __chkstk_darwin(v1);
  uint64_t v41 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for MetricsFieldsContext();
  uint64_t v3 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  id v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v36 - v7;
  uint64_t v9 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  __chkstk_darwin(v9);
  char v40 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100082C28(&qword_10098D120);
  __chkstk_darwin(v14 - 8);
  id v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100082C28((uint64_t *)&unk_10098A9A0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v0 + OBJC_IVAR____TtC8AppStore28AnnotationCollectionViewCell_linkAction;
  swift_beginAccess();
  sub_100082B68(v21, (uint64_t)v16, &qword_10098D120);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    uint64_t v22 = &qword_10098D120;
    uint64_t v23 = (uint64_t)v16;
    return sub_100082BCC(v23, v22);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  ObjectGraphPair.objectGraph.getter();
  ObjectGraph.actionDispatcher.getter();
  swift_release();
  uint64_t v24 = sub_100082C28((uint64_t *)&unk_100984530);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v13, 1, v24) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v22 = &qword_1009875B0;
    uint64_t v23 = (uint64_t)v13;
    return sub_100082BCC(v23, v22);
  }
  uint64_t v38 = v24;
  ObjectGraphPair.value.getter();
  uint64_t v27 = ObjectGraphPair.objectGraph.getter();
  uint64_t v28 = v46[5];
  v46[3] = type metadata accessor for Action();
  v46[4] = sub_10012C794((unint64_t *)&qword_1009875D0, (void (*)(uint64_t))&type metadata accessor for Action);
  v46[0] = v28;
  swift_retain();
  uint64_t v36 = v27;
  sub_1005365D0();
  id v29 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v37 = v25;
  uint64_t v30 = v39;
  v29(v5, v8, v39);
  uint64_t v31 = v41;
  Dependency.init<A>(satisfying:with:)();
  dispatch thunk of BaseObjectGraph.adding(dependency:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v45);
  uint64_t v32 = v40;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v40, v8, v30);
  uint64_t v34 = v42;
  uint64_t v33 = v43;
  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v32, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v43);
  uint64_t v35 = v38;
  ActionDispatcher.perform(_:withMetrics:asPartOf:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v46);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v13, v35);
}

uint64_t sub_10012CFFC()
{
  uint64_t v1 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Badge();
  sub_10012D454(&qword_100984F00, (void (*)(uint64_t))&type metadata accessor for Badge);
  uint64_t result = ItemLayoutContext.typedModel<A>(as:)();
  uint64_t v6 = v11;
  if (v11)
  {
    uint64_t v7 = ItemLayoutContext.index.getter();
    swift_getKeyPath();
    ItemLayoutContext.subscript.getter();
    swift_release();
    swift_getKeyPath();
    ReadOnlyLens.subscript.getter();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v8 = *(void *)(v11 + 16);
    swift_bridgeObjectRelease();
    type metadata accessor for ObjectGraph();
    uint64_t v9 = swift_dynamicCastClassUnconditional();
    sub_1000F5EF0(v6, v7, 0, v8, 0, v9);
    [*(id *)&v0[OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_topSeparatorView] setHidden:1];
    [*(id *)&v0[OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_bottomSeparatorView] setHidden:1];
    [*(id *)&v0[OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_verticalSeparatorView] setHidden:1];
    [v0 setNeedsLayout];
    return swift_release();
  }
  return result;
}

uint64_t sub_10012D244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  return sub_1000E70A0(v3, a1);
}

uint64_t sub_10012D29C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore23BadgeCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  sub_1000E7038(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_10012D2FC())()
{
  return j__swift_endAccess;
}

uint64_t sub_10012D35C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  [super prepareForReuse];
  return sub_1005226C8();
}

uint64_t sub_10012D3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10012D454(&qword_100984F08, (void (*)(uint64_t))type metadata accessor for BadgeCollectionViewCell);

  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

uint64_t sub_10012D454(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10012D49C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v6) {
      break;
    }
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v9 = *(void *)(a3 + 8 * v8 + 32);
        swift_retain();
      }
      uint64_t v10 = v9;
      a1(&v11, &v10);
      swift_release();
      if (v3) {
        return (void *)swift_release();
      }
      ++v8;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v6 == v8) {
        return v12;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10012D614(void (*a1)(_OWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_1001298D8(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    for (uint64_t i = a3 + 32; ; i += 40)
    {
      a1(v17, i);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v19 = v6;
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1)
      {
        sub_1001298D8(v10 > 1, v11 + 1, 1);
        uint64_t v6 = v19;
      }
      long long v6[2] = v11 + 1;
      uint64_t v12 = &v6[9 * v11];
      *((_OWORD *)v12 + 2) = v17[0];
      long long v13 = v17[1];
      long long v14 = v17[2];
      long long v15 = v17[3];
      v12[12] = v18;
      *((_OWORD *)v12 + 4) = v14;
      *((_OWORD *)v12 + 5) = v15;
      *((_OWORD *)v12 + 3) = v13;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

void PageTraitEnvironment.pageColumnMargin.getter()
{
  [v0 pageContainerSize];
  double v2 = v1;
  double v4 = v3;
  id v5 = [v0 traitCollection];
  char v6 = UITraitCollection.isRegularPad.getter();

  if ((v6 & 1) == 0)
  {
    if (v4 < v2)
    {
LABEL_5:
      JUScreenClassGetLandscapeWidth();
      return;
    }
LABEL_9:
    JUScreenClassGetPortraitWidth();
    return;
  }
  if (v4 >= v2)
  {
    JUScreenClassGetPortraitWidth();
    if (v2 <= v8) {
      return;
    }
    goto LABEL_9;
  }
  if (v2 != 1133.0)
  {
    JUScreenClassGetLandscapeWidth();
    if (v2 > v7) {
      goto LABEL_5;
    }
  }
}

void (*sub_10012DA34(uint64_t *a1))(id *a1, char a2)
{
  uint64_t v2 = OBJC_IVAR____TtC8AppStore16AppPromotionView_appPromotionCardView;
  a1[1] = *(void *)(v1 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView);
  a1[2] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong();
  return sub_10012DAA8;
}

void sub_10012DAA8(id *a1, char a2)
{
  id v4 = *a1;
  if (a2)
  {
    id v2 = v4;
    sub_10068A220();

    double v3 = v2;
  }
  else
  {
    sub_10068A220();
    double v3 = v4;
  }
}

uint64_t sub_10012DB1C(void *a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView)
                 + OBJC_IVAR____TtC8AppStore16AppPromotionView_appPromotionCardView);
  id v3 = [a1 superview];
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC8AppStore20AppPromotionCardView_mediaContentView);
  sub_10003A33C();
  id v6 = v5;
  id v7 = v4;
  char v8 = static NSObject.== infix(_:_:)();

  return v8 & 1;
}

id sub_10012DBCC()
{
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  [super prepareForReuse];
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView];
  sub_100322CC8();
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC8AppStore16AppPromotionView_appPromotionCardView];
  sub_100687220();
  id v3 = &v1[OBJC_IVAR____TtC8AppStore16AppPromotionView_initialLongPressLocation];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  [*(id *)&v1[OBJC_IVAR____TtC8AppStore16AppPromotionView_longPressGestureRecognizer] setEnabled:1];
  return [v1 addSubview:v2];
}

uint64_t sub_10012DD2C()
{
  return type metadata accessor for AppPromotionOfferCollectionViewCell();
}

uint64_t type metadata accessor for AppPromotionOfferCollectionViewCell()
{
  uint64_t result = qword_100984F38;
  if (!qword_100984F38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10012DD80()
{
  sub_1000A1880();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10012DE1C()
{
  return swift_unknownObjectWeakLoadStrong();
}

void sub_10012DE4C(void *a1)
{
  sub_10068A220();
}

uint64_t (*sub_10012DEA8(uint64_t **a1))()
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_10012DA34(v2);
  return sub_100090DB4;
}

void sub_10012DF00()
{
}

id sub_10012DF3C()
{
  return objc_retain(*(id *)(*(void *)(*v0
                                       + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView)
                           + OBJC_IVAR____TtC8AppStore16AppPromotionView_appPromotionCardView));
}

id sub_10012DF60()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView);
}

double sub_10012DF74()
{
  [*(id *)(*(void *)(*v0 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView)+ OBJC_IVAR____TtC8AppStore16AppPromotionView_availabilityLabelView) frame];
  CGRectGetMaxY(v2);
  type metadata accessor for AppPromotionView();
  LayoutMarginsAware<>.layoutFrame.getter();
  CGRectGetHeight(v3);
  LayoutMarginsAware<>.layoutFrame.getter();
  CGRectGetWidth(v4);
  return 0.0;
}

CGFloat sub_10012E000()
{
  uint64_t v1 = *(char **)(*v0 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView);
  [*(id *)&v1[OBJC_IVAR____TtC8AppStore16AppPromotionView_availabilityLabelView] frame];
  CGRectGetMaxY(v3);
  type metadata accessor for AppPromotionView();
  LayoutMarginsAware<>.layoutFrame.getter();
  CGRectGetHeight(v4);
  [v1 bounds];
  return CGRectGetWidth(v5) * 0.5;
}

uint64_t sub_10012E090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  return sub_1000E70A0(v3, a1);
}

uint64_t sub_10012E0E4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  sub_1000E7038(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_10012E140())()
{
  return j__swift_endAccess;
}

uint64_t sub_10012E1A0(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_100704288);
}

uint64_t sub_10012E1CC(uint64_t a1, uint64_t a2)
{
  return sub_10012E76C(a1, a2, (void (*)(unsigned char *, char *, char *, char *, id))sub_100705838);
}

uint64_t sub_10012E1E4(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_10070425C);
}

uint64_t sub_10012E1FC(uint64_t a1, uint64_t a2)
{
  return sub_10012EAD0(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *, id))sub_1006FAB6C);
}

uint64_t sub_10012E214(uint64_t a1, uint64_t a2)
{
  return sub_10012E40C(a1, a2, (void (*)(unsigned char *, char *, char *, char *))sub_100704754);
}

uint64_t sub_10012E22C(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_100704D68);
}

uint64_t sub_10012E244(uint64_t a1, uint64_t a2)
{
  return sub_10012E76C(a1, a2, (void (*)(unsigned char *, char *, char *, char *, id))sub_100705100);
}

uint64_t sub_10012E25C(uint64_t a1, uint64_t a2)
{
  return sub_10012E40C(a1, a2, (void (*)(unsigned char *, char *, char *, char *))sub_100704ABC);
}

uint64_t sub_10012E274(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_100705F78);
}

uint64_t sub_10012E28C(uint64_t a1, uint64_t a2)
{
  return sub_10012EAD0(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *, id))sub_1006FADD8);
}

uint64_t sub_10012E2A4(uint64_t a1, uint64_t a2)
{
  return sub_10012E40C(a1, a2, (void (*)(unsigned char *, char *, char *, char *))sub_10070512C);
}

uint64_t sub_10012E2BC(uint64_t a1, uint64_t a2)
{
  return sub_10012EAD0(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *, id))sub_1006FA8C0);
}

uint64_t sub_10012E2D4(uint64_t a1, uint64_t a2)
{
  return sub_10012EAD0(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *, id))sub_1006FA894);
}

uint64_t sub_10012E2EC(uint64_t a1, uint64_t a2)
{
  return sub_10012EAD0(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *, id))sub_1006FAB98);
}

uint64_t sub_10012E304(uint64_t a1, uint64_t a2)
{
  return sub_10012E76C(a1, a2, (void (*)(unsigned char *, char *, char *, char *, id))sub_100704CE4);
}

uint64_t sub_10012E31C(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_100704728);
}

uint64_t sub_10012E334(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_100704D3C);
}

uint64_t sub_10012E34C(uint64_t a1, uint64_t a2)
{
  return sub_10012E40C(a1, a2, (void (*)(unsigned char *, char *, char *, char *))sub_100705D58);
}

uint64_t sub_10012E364(uint64_t a1, uint64_t a2)
{
  return sub_10012E40C(a1, a2, (void (*)(unsigned char *, char *, char *, char *))sub_100705340);
}

uint64_t sub_10012E37C(uint64_t a1, uint64_t a2)
{
  return sub_10012E40C(a1, a2, (void (*)(unsigned char *, char *, char *, char *))sub_100705600);
}

uint64_t sub_10012E394(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_100704D94);
}

uint64_t sub_10012E3AC(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_1007050D4);
}

uint64_t sub_10012E3C4(uint64_t a1, uint64_t a2)
{
  return sub_10012E40C(a1, a2, (void (*)(unsigned char *, char *, char *, char *))sub_100704D10);
}

uint64_t sub_10012E3DC(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_1007046FC);
}

uint64_t sub_10012E3F4(uint64_t a1, uint64_t a2)
{
  return sub_10012E40C(a1, a2, (void (*)(unsigned char *, char *, char *, char *))sub_1007055A8);
}

uint64_t sub_10012E40C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, char *, char *, char *))
{
  uint64_t v21 = a3;
  uint64_t v16 = a2;
  uint64_t v20 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v19 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  CGRect v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ComponentLayoutOptions();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100082C28((uint64_t *)&unk_10098FE00);
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28((uint64_t *)&unk_100991050);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter();
  ReadOnlyLens.value.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  ItemLayoutContext.mutableState.getter();
  type metadata accessor for ObjectGraph();
  swift_dynamicCastClassUnconditional();
  ItemLayoutContext.componentLayoutOptions.getter();
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  sub_1000F3FC0();
  v21(v22, v10, v7, v4);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v20);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v22);
}

uint64_t sub_10012E754(uint64_t a1, uint64_t a2)
{
  return sub_10012E76C(a1, a2, (void (*)(unsigned char *, char *, char *, char *, id))sub_100704A90);
}

uint64_t sub_10012E76C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, char *, char *, char *, id))
{
  uint64_t v22 = a3;
  uint64_t v17 = a2;
  uint64_t v21 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v20 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  CGRect v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ComponentLayoutOptions();
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100082C28((uint64_t *)&unk_10098FE00);
  uint64_t v8 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28((uint64_t *)&unk_100991050);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter();
  ReadOnlyLens.value.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  ItemLayoutContext.mutableState.getter();
  type metadata accessor for ObjectGraph();
  swift_dynamicCastClassUnconditional();
  ItemLayoutContext.componentLayoutOptions.getter();
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  id v15 = sub_1000F3FC0();
  v22(v23, v10, v7, v4, v15);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v23);
}

uint64_t sub_10012EAB8(uint64_t a1, uint64_t a2)
{
  return sub_10012EAD0(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *, id))sub_1006FAB40);
}

uint64_t sub_10012EAD0(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, char *, uint64_t, char *, char *, id))
{
  uint64_t v23 = a3;
  uint64_t v18 = a2;
  uint64_t v22 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v21 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  CGRect v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ComponentLayoutOptions();
  uint64_t v5 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100082C28((uint64_t *)&unk_10098FE00);
  uint64_t v8 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28((uint64_t *)&unk_100991050);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter();
  ReadOnlyLens.value.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  ItemLayoutContext.mutableState.getter();
  type metadata accessor for ObjectGraph();
  uint64_t v15 = swift_dynamicCastClassUnconditional();
  ItemLayoutContext.componentLayoutOptions.getter();
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  id v16 = sub_1000F3FC0();
  v23(v24, v10, v15, v7, v4, v16);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v22);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v24);
}

uint64_t sub_10012EE28(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_1007055D4);
}

uint64_t sub_10012EE40(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_100703BC4);
}

uint64_t sub_10012EE58(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_100705A70);
}

uint64_t sub_10012EE70(uint64_t a1, uint64_t a2)
{
  return sub_10012EE88(a1, a2, (void (*)(unsigned char *, char *, uint64_t, char *, char *))sub_10070404C);
}

uint64_t sub_10012EE88(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, char *, uint64_t, char *, char *))
{
  uint64_t v22 = a3;
  uint64_t v17 = a2;
  uint64_t v21 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v20 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  CGRect v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ComponentLayoutOptions();
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100082C28((uint64_t *)&unk_10098FE00);
  uint64_t v8 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28((uint64_t *)&unk_100991050);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.item.getter();
  ReadOnlyLens.value.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  ItemLayoutContext.mutableState.getter();
  type metadata accessor for ObjectGraph();
  uint64_t v15 = swift_dynamicCastClassUnconditional();
  ItemLayoutContext.componentLayoutOptions.getter();
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  sub_1000F3FC0();
  v22(v23, v10, v15, v7, v4);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v23);
}

uint64_t sub_10012F1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100131568(&qword_100984F70, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);

  return static ConfigurableCell<>.dequeueConfiguredCell(in:collectionView:asPartOf:)(a1, a2, a3, v5, a5, v10);
}

void sub_10012F274(uint64_t a1@<X8>)
{
}

void sub_10012F290(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  CGRect v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PageGrid();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.componentMeasuringSize(spanning:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v8, v5);
  ShelfLayoutContext.shelf.getter();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  LODWORD(v1) = v28;
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.containerWidth.getter();
  uint64_t v11 = v10;
  v9(v8, v5);
  uint64_t v12 = ShelfLayoutContext.traitCollection.getter();
  uint64_t v13 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  long long v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = &v14[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)uint64_t v15 = v11;
  *((void *)v15 + 1) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)&v14[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v12;
  v27.receiver = v14;
  v27.super_class = v13;
  [super init];
  uint64_t v17 = v16;
  if (v1 == 1)
  {
    id v18 = [v16 traitCollection];
    char v19 = UITraitCollection.isRegularPad.getter();

    if (v19)
    {
      [v17 pageContainerSize];
      sub_1004B66EC(v20, v21);
      PageTraitEnvironment.pageColumnMargin.getter();
    }
    else
    {
      [v17 pageMarginInsets];
      [v17 pageContainerSize];
    }
    PageTraitEnvironment.pageColumnMargin.getter();
    uint64_t v22 = qword_10097E1E8;
  }
  else
  {
    uint64_t v22 = qword_10097E1E8;
  }
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for AspectRatio();
  sub_100087728(v23, (uint64_t)qword_1009E1528);
  AspectRatio.height(fromWidth:)();
  uint64_t v24 = v26;
  ComponentPrefetchSizing.init(size:contentMode:)();
  uint64_t v25 = type metadata accessor for ComponentPrefetchSizing();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
}

void sub_10012F640(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  CGRect v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PageGrid();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.componentMeasuringSize(spanning:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v8, v5);
  ShelfLayoutContext.shelf.getter();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.containerWidth.getter();
  uint64_t v11 = v10;
  v9(v8, v5);
  uint64_t v12 = ShelfLayoutContext.traitCollection.getter();
  uint64_t v13 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  long long v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = &v14[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)uint64_t v15 = v11;
  *((void *)v15 + 1) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)&v14[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v12;
  v23.receiver = v14;
  v23.super_class = v13;
  id v16 = [super init];
  id v17 = [v16 traitCollection];
  LOBYTE(v1) = UITraitCollection.isRegularPad.getter();

  if (v1)
  {
    [v16 pageContainerSize];
    sub_1004B66EC(v18, v19);
    PageTraitEnvironment.pageColumnMargin.getter();
  }
  else
  {
    [v16 pageMarginInsets];
    [v16 pageContainerSize];
  }
  PageTraitEnvironment.pageColumnMargin.getter();
  uint64_t v20 = v22;
  ComponentPrefetchSizing.init(size:contentMode:)();
  uint64_t v21 = type metadata accessor for ComponentPrefetchSizing();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
}

void sub_10012F97C(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v1 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  CGRect v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PageGrid();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.componentMeasuringSize(spanning:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v8, v5);
  ShelfLayoutContext.shelf.getter();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.containerWidth.getter();
  uint64_t v11 = v10;
  v9(v8, v5);
  uint64_t v12 = ShelfLayoutContext.traitCollection.getter();
  uint64_t v13 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  long long v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = &v14[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)uint64_t v15 = v11;
  *((void *)v15 + 1) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)&v14[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v12;
  v21.receiver = v14;
  v21.super_class = v13;
  id v16 = [super init];
  if (qword_100980610 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for SmallLockupLayout.Metrics();
  sub_100087728(v17, (uint64_t)qword_1009E7358);
  SmallLockupLayout.Metrics.artworkSize.getter();
  uint64_t v18 = v20;
  ComponentPrefetchSizing.init(size:contentMode:)();
  uint64_t v19 = type metadata accessor for ComponentPrefetchSizing();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
}

void sub_10012FC6C(uint64_t a1@<X8>)
{
}

void sub_10012FC84(uint64_t a1@<X8>)
{
}

void sub_10012FC9C(void (*a1)(uint64_t, id, double, double)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v23 = a2;
  uint64_t v2 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PageGrid();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.componentMeasuringSize(spanning:)();
  double v11 = v10;
  double v13 = v12;
  long long v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  ShelfLayoutContext.shelf.getter();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v15 = v26;
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.containerWidth.getter();
  uint64_t v17 = v16;
  v14(v9, v6);
  uint64_t v18 = ShelfLayoutContext.traitCollection.getter();
  uint64_t v19 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  uint64_t v20 = (char *)objc_allocWithZone(v19);
  objc_super v21 = &v20[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)objc_super v21 = v17;
  *((void *)v21 + 1) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)&v20[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v18;
  v25.receiver = v20;
  v25.super_class = v19;
  [super init];
  v24(v15, v22, v11, v13);
}

void sub_10012FF28(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v1 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PageGrid();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.componentMeasuringSize(spanning:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v8, v5);
  ShelfLayoutContext.shelf.getter();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.containerWidth.getter();
  uint64_t v11 = v10;
  v9(v8, v5);
  uint64_t v12 = ShelfLayoutContext.traitCollection.getter();
  double v13 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  long long v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = &v14[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)uint64_t v15 = v11;
  *((void *)v15 + 1) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)&v14[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v12;
  v19.receiver = v14;
  v19.super_class = v13;
  [super init];
  uint64_t v17 = type metadata accessor for ComponentPrefetchSizing();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v18, 1, 1, v17);
}

uint64_t sub_1001301BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001308B8(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_100131510);
}

uint64_t sub_1001301E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001308B8(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1001315B0);
}

uint64_t sub_100130200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100130258(a1, a2, a3, (void (*)(char *, uint64_t))sub_10012F290, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1001315B0);
}

uint64_t sub_10013022C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100130258(a1, a2, a3, (void (*)(char *, uint64_t))sub_10012F640, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1001315B0);
}

uint64_t sub_100130258(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t), void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  void (*v22)(uint64_t *__return_ptr, uint64_t *);
  void (*v23)(char *, uint64_t);

  id v22 = a5;
  uint64_t v23 = a4;
  uint64_t v21 = a2;
  uint64_t v6 = type metadata accessor for ShelfLayoutContext();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100082C28(&qword_100984F78);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ComponentPrefetchSizing();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter();
  v23(v9, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_100082BCC((uint64_t)v12, &qword_100984F78);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  uint64_t v18 = sub_100130F34();
  __chkstk_darwin(v18);
  *(&v21 - 2) = (uint64_t)v16;
  v19._rawValue = sub_10012D49C(v22, (uint64_t)(&v21 - 4), (unint64_t)v18);
  swift_bridgeObjectRelease();
  if ((unint64_t)v19._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v20) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (*(void *)(((unint64_t)v19._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_5:
  }
    ArtworkLoader.prefetchArtwork(using:)(v19);
LABEL_6:
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100130548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100130258(a1, a2, a3, (void (*)(char *, uint64_t))sub_10012F97C, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1001315B0);
}

uint64_t sub_100130574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001305A0(a1, a2, a3, (void (*)(uint64_t, id, double, double))sub_1004DFC2C, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1001315B0);
}

uint64_t sub_1001305A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, id, double, double), void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  void (*v21)(uint64_t *__return_ptr, uint64_t *);
  void (*v22)(uint64_t, id, double, double);

  uint64_t v21 = a5;
  id v22 = a4;
  uint64_t v20 = a2;
  uint64_t v5 = type metadata accessor for ShelfLayoutContext();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100082C28(&qword_100984F78);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ComponentPrefetchSizing();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter();
  sub_10012FC9C(v22, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_100082BCC((uint64_t)v11, &qword_100984F78);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  uint64_t v17 = sub_100130F34();
  __chkstk_darwin(v17);
  *(&v20 - 2) = (uint64_t)v15;
  v18._rawValue = sub_10012D49C(v21, (uint64_t)(&v20 - 4), (unint64_t)v17);
  swift_bridgeObjectRelease();
  if ((unint64_t)v18._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v19) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (*(void *)(((unint64_t)v18._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_5:
  }
    ArtworkLoader.prefetchArtwork(using:)(v18);
LABEL_6:
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_10013088C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001305A0(a1, a2, a3, (void (*)(uint64_t, id, double, double))sub_1004FE73C, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1001315B0);
}

uint64_t sub_1001308B8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *))
{
  void (*v20)(uint64_t *__return_ptr, uint64_t *);

  uint64_t v20 = a4;
  v19[1] = a2;
  uint64_t v4 = type metadata accessor for ShelfLayoutContext();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28(&qword_100984F78);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ComponentPrefetchSizing();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter();
  sub_10012FF28((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_100082BCC((uint64_t)v10, &qword_100984F78);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  id v16 = sub_100130F34();
  __chkstk_darwin(v16);
  v19[-2] = v14;
  v17._rawValue = sub_10012D49C(v20, (uint64_t)&v19[-4], (unint64_t)v16);
  swift_bridgeObjectRelease();
  if ((unint64_t)v17._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v18) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (*(void *)(((unint64_t)v17._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_5:
  }
    ArtworkLoader.prefetchArtwork(using:)(v17);
LABEL_6:
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100130BA0()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_100131568(&qword_100984F88, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);

  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_100130C14(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_100131568(&qword_100984F88, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);

  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

uint64_t (*sub_100130CA0(void *a1))()
{
  swift_getObjectType();
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_100131568(&qword_100984F88, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);
  v2[4] = VideoViewProviding.someVideoView.modify();
  return sub_100090DB4;
}

id sub_100130D48()
{
  return [v0 frame];
}

uint64_t sub_100130D58()
{
  return sub_100131568(&qword_100984F48, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);
}

uint64_t sub_100130DA0()
{
  return sub_100131568(&qword_100984F50, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);
}

uint64_t sub_100130DE8()
{
  return sub_100131568(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
}

uint64_t sub_100130E30(void *a1)
{
  a1[1] = sub_100131568(&qword_100984F58, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);
  a1[2] = sub_100131568(&qword_100984F60, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);
  a1[3] = sub_100131568(&qword_100984F68, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);
  uint64_t result = sub_100131568(&qword_100984F70, (void (*)(uint64_t))type metadata accessor for AppPromotionOfferCollectionViewCell);
  a1[4] = result;
  return result;
}

uint64_t sub_100130F04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

void *sub_100130F34()
{
  uint64_t v0 = type metadata accessor for Shelf.ContentType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Shelf.ContentType.todayCard(_:), v0);
  sub_100131568((unint64_t *)&qword_100986D20, (void (*)(uint64_t))&type metadata accessor for Shelf.ContentType);
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  v12(v6, v0);
  if (v11) {
    return _swiftEmptyArrayStorage;
  }
  sub_100082C28((uint64_t *)&unk_1009A4400);
  ItemLayoutContext.typedModel<A>(as:)();
  if (!v19)
  {
    sub_100082BCC((uint64_t)&v18, &qword_100984F80);
    return _swiftEmptyArrayStorage;
  }
  sub_100081DD4(&v18, (uint64_t)v20);
  sub_100081D90(v20, v20[3]);
  uint64_t v13 = dispatch thunk of ArtworkModelProtocol.artwork.getter();
  if (!v13)
  {
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v20);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v14 = v13;
  sub_100082C28(&qword_100982B50);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1007BEA80;
  *(void *)(v15 + 32) = v14;
  *(void *)&long long v18 = v15;
  specialized Array._endMutation()();
  uint64_t v16 = v18;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v20);
  return (void *)v16;
}

char *sub_100131260()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for AutomationSemantics();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v0[OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_itemLayoutContext];
  uint64_t v7 = type metadata accessor for ItemLayoutContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  id v8 = objc_allocWithZone((Class)type metadata accessor for AppPromotionView());
  uint64_t v9 = v0;
  id v10 = [v8 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v9[OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView] = v10;

  v21.receiver = v9;
  v21.super_class = ObjectType;
  char v11 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC8AppStore35AppPromotionOfferCollectionViewCell_appPromotionView;
  memset(v20, 0, sizeof(v20));
  memset(v19, 0, sizeof(v19));
  uint64_t v13 = v11;
  static AutomationSemantics.shelfItemSubComponent(itemKind:id:parentId:)();
  sub_100082BCC((uint64_t)v19, (uint64_t *)&unk_100982B40);
  sub_100082BCC((uint64_t)v20, (uint64_t *)&unk_100982B40);
  UIView.setAutomationSemantics(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v14 = [v13 contentView];
  [v14 setClipsToBounds:0];

  id v15 = [v13 contentView];
  [v15 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];

  id v16 = [v13 contentView];
  id v17 = *(id *)&v11[v12];
  [v16 addSubview:v17];

  return v13;
}

uint64_t sub_100131510@<X0>(uint64_t *a1@<X8>)
{
  return sub_1004B70CC(a1);
}

uint64_t sub_100131538@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = Shelf.isHorizontal.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100131568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001315B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100131510(a1);
}

char *sub_1001315CC(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v5[qword_1009E12F8] = 0;
  *(void *)&v5[qword_1009E1300] = 0;
  uint64_t v14 = qword_1009E1308;
  id v15 = objc_allocWithZone((Class)type metadata accessor for ArtworkGrid());
  id v16 = v5;
  *(void *)&v5[v14] = [v15 initWithFrame:0.0, 0.0, 0.0, 0.0];
  type metadata accessor for PaletteBackgroundView();
  *(void *)&v16[qword_1009E1310] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];

  v34.receiver = v16;
  v34.super_class = ObjectType;
  id v17 = (char *)objc_msgSendSuper2(&v34, "initWithFrame:", a1, a2, a3, a4);
  long long v18 = *(void **)&v17[qword_1009E2458];
  uint64_t v19 = v17;
  [v18 setNumberOfLines:2];
  uint64_t v20 = qword_10097F620;
  id v21 = v18;
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for FontUseCase();
  uint64_t v23 = sub_100087728(v22, (uint64_t)qword_1009E4CB8);
  uint64_t v24 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v13, v23, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v22);
  dispatch thunk of DynamicTypeLabel.fontUseCase.setter();

  objc_super v25 = *(void **)&v19[qword_1009E1308];
  [v25 setClipsToBounds:1];
  [v25 _setContinuousCornerRadius:14.0];
  unsigned __int8 v26 = v19;
  id v27 = v25;
  id v28 = [v26 backgroundView];
  [v28 addSubview:v27];

  id v29 = *(void **)&v26[qword_1009E1310];
  [v29 _setCornerRadius:1 continuous:3 maskedCorners:14.0];
  uint64_t v30 = v26;
  id v31 = v29;
  id v32 = [v30 backgroundView];
  [v32 addSubview:v31];

  return v30;
}

char *sub_100131900(double a1, double a2, double a3, double a4)
{
  return sub_1001315CC(a1, a2, a3, a4);
}

id sub_100131924()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 areAnimationsEnabled];
  [v2 setAnimationsEnabled:0];
  id v4 = [v0 backgroundView];
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 bounds];
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;

    v22.id receiver = *(id *)&v1[qword_1009E1308];
    id receiver = v22.receiver;
    v22.super_class = (Class)type metadata accessor for ArtworkGrid();
    [super setFrame:v7, v9, v11, v13];
    sub_1006CA3F4();
    [receiver setNeedsLayout];
    [receiver layoutIfNeeded];
  }
  id v15 = *(void **)&v1[qword_1009E1310];
  [v1 bounds];
  CGRectGetWidth(v23);
  [*(id *)&v1[qword_1009E2458] frame];
  CGRectGetMaxY(v24);
  if (qword_10097FC28 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for StaticDimension();
  sub_100087728(v16, (uint64_t)qword_1009E5D78);
  id v17 = [v1 traitCollection];
  type metadata accessor for TraitEnvironmentPlaceholder();
  sub_100082C28(&qword_100982B50);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1007BEA80;
  *(void *)(v18 + 32) = v17;
  id v19 = v17;
  uint64_t v20 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)();
  dispatch thunk of AnyDimension.rawValue(in:)();

  [v15 frame];
  [v15 setFrame:];
  [v15 layoutIfNeeded];
  return [v2 setAnimationsEnabled:v3];
}

void sub_100131BB4(void *a1, uint64_t a2, char a3)
{
  swift_getObjectType();
  uint64_t v7 = a3 & 1;
  sub_10060AF70(a1, a2, v7);
  uint64_t v8 = swift_dynamicCastClass();
  if (v8 && !v7)
  {
    uint64_t v9 = *(void *)(v8 + qword_1009E1308);
    uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC8AppStore11ArtworkGrid_expectedNumberOfArtworkImages);
    double v11 = *(unsigned char **)(v3 + qword_1009E1308);
    v11[OBJC_IVAR____TtC8AppStore11ArtworkGrid_gridType] = *(unsigned char *)(v9
                                                                    + OBJC_IVAR____TtC8AppStore11ArtworkGrid_gridType);
    id v16 = a1;
    sub_1006CA3F4();
    [v11 setNeedsLayout];
    *(void *)&v11[OBJC_IVAR____TtC8AppStore11ArtworkGrid_expectedNumberOfArtworkImages] = v10;
    sub_1006CA640();
    if (v10 < 0)
    {
LABEL_16:
      __break(1u);
      return;
    }
    if (v10)
    {
      uint64_t v12 = v9 + OBJC_IVAR____TtC8AppStore11ArtworkGrid_artworkImages;
      swift_beginAccess();
      unint64_t v13 = 0;
      while (v13 < *(void *)(*(void *)v12 + 16))
      {
        uint64_t v14 = *(void **)(*(void *)v12 + 8 * v13 + 32);
        if (v14)
        {
          id v15 = v14;
          sub_1006C9A68(v15, v13);
        }
        if (v10 == ++v13)
        {

          return;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
  }
}

uint64_t sub_100131D34()
{
  sub_10060B2C8();
  TodayCard.media.getter();
  type metadata accessor for TodayCardMediaGrid();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for ArtworkLoader();
    uint64_t v3 = inject(_:from:)();
    sub_10061FCFC(v2, v3, *(unsigned char **)(v0 + qword_1009E1308));
    swift_release();
  }

  return swift_release();
}

void sub_100131DDC(void *a1)
{
  v2.id receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  id v1 = v2.receiver;
  [super prepareForReuse];
  sub_1006C9BD4();
}

void sub_100131E3C()
{
  sub_10060E388();
  uint64_t v1 = OBJC_IVAR____TtC8AppStore31BaseTodayCardCollectionViewCell_isExpanded;
  uint64_t v2 = *(void *)(v0 + qword_1009E1308);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8AppStore31BaseTodayCardCollectionViewCell_isExpanded)) {
    double v3 = 0.0;
  }
  else {
    double v3 = 14.0;
  }
  [*(id *)(v0 + qword_1009E1308) _setContinuousCornerRadius:v3];
  [*(id *)(v0 + qword_1009E1310) _setCornerRadius:1 continuous:3 maskedCorners:v3];
  int v4 = *(unsigned __int8 *)(v0 + v1);
  int v5 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8AppStore11ArtworkGrid_isLazyLayoutEnabled);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8AppStore11ArtworkGrid_isLazyLayoutEnabled) = v4 ^ 1;
  if (v4 == v5) {
    sub_1006CB1D4();
  }
}

void sub_100131EFC()
{
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v1 = *(void **)(v0 + qword_1009E1310);
}

void sub_100131F5C(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v2 = *(void **)(a1 + qword_1009E1310);
}

uint64_t type metadata accessor for GridTodayCardCollectionViewCell()
{
  uint64_t result = qword_100984FB8;
  if (!qword_100984FB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100132014()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100132068()
{
  return type metadata accessor for GridTodayCardCollectionViewCell();
}

Swift::Int sub_1001320A0()
{
  Hasher.init(_seed:)();
  sub_10007AEA0((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1001320E4()
{
  Hasher.init(_seed:)();
  sub_10007AEA0((uint64_t)v1);
  return Hasher._finalize()();
}

void sub_10013214C(void *a1)
{
  uint64_t v46 = a1;
  uint64_t v2 = type metadata accessor for OSLogger();
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  __chkstk_darwin(v2);
  id v49 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DynamicTextAppearance();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v45 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v42 - v7;
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for LabelPlaceholder();
  uint64_t v47 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SystemImage();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Accessory();
  __chkstk_darwin(v17);
  id v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v1;
  sub_10007B6D4(v1, (uint64_t)v19);
  EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      CGRect v24 = v8;
      uint64_t v25 = v43;
      uint64_t v26 = v44;
      uint64_t v51 = v10;
      id v27 = v45;
      DynamicTextAppearance.init()();
      if (qword_10097F150 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for FontUseCase();
      sub_100087728(v28, (uint64_t)qword_1009E3E60);
      DynamicTextAppearance.withFontUseCase(_:)();
      id v29 = *(void (**)(char *, uint64_t))(v25 + 8);
      v29(v27, v26);
      DynamicTextAppearance.withNumberOfLines(_:)();
      v29(v24, v26);
      LabelPlaceholder.Options.init(rawValue:)();
      uint64_t v30 = v12;
      LabelPlaceholder.init(_:with:where:)();
      type metadata accessor for TraitEnvironmentPlaceholder();
      sub_100082C28(&qword_100982B50);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1007BEA80;
      id v32 = v46;
      *(void *)(v31 + 32) = v46;
      id v33 = v32;
      objc_super v34 = (void *)TraitEnvironmentPlaceholder.__allocating_init(_:)();
      uint64_t v35 = v51;
      dispatch thunk of Measurable.measurements(fitting:in:)();

      (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v35);
      break;
    case 10:
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for SystemImage.chevronForward(_:), v13);
      uint64_t v36 = (void *)static SystemImage.load(_:with:)();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      [v36 size];

      break;
    case 9:
      id v21 = self;
      NSString v22 = String._bridgeToObjectiveC()();
      id v23 = [v21 kitImageNamed:v22];

      if (v23)
      {
        [v23 size];
      }
      else
      {
        __break(1u);
      }
      break;
    default:
      if (qword_10097E340 != -1) {
        swift_once();
      }
      uint64_t v37 = v51;
      uint64_t v38 = sub_100087728(v51, (uint64_t)qword_1009E1810);
      char v40 = v49;
      uint64_t v39 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v38, v37);
      sub_100082C28((uint64_t *)&unk_100984540);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BF710;
      LogMessage.init(stringLiteral:)();
      v52[3] = v17;
      uint64_t v41 = sub_1000808B8(v52);
      sub_10007B6D4(v48, (uint64_t)v41);
      static LogMessage.safe(_:)();
      sub_100082BCC((uint64_t)v52, (uint64_t *)&unk_100982B40);
      LogMessage.init(stringLiteral:)();
      Logger.debug(_:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v37);
      sub_1000925BC((uint64_t)v19);
      break;
  }
}

uint64_t sub_100132868()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_1001328B0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v9 = (void *)a2[2];
        uint64_t v8 = a2[3];
        a1[2] = v9;
        a1[3] = v8;
        a1[4] = a2[4];
        swift_bridgeObjectRetain();
        id v10 = v9;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        swift_bridgeObjectRetain();
        uint64_t v14 = *(int *)(sub_100082C28(&qword_1009853F8) + 48);
        uint64_t v15 = (char *)a1 + v14;
        id v16 = (char *)a2 + v14;
        uint64_t v17 = type metadata accessor for FontUseCase();
        uint64_t v18 = *(void *)(v17 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
          goto LABEL_15;
        }
        uint64_t v19 = sub_100082C28(&qword_100984B10);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        goto LABEL_16;
      case 2u:
        uint64_t v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        NSString v22 = (void *)a2[2];
        uint64_t v21 = a2[3];
        a1[2] = v22;
        a1[3] = v21;
        swift_bridgeObjectRetain();
        id v23 = v22;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v24 = *(int *)(sub_100082C28((uint64_t *)&unk_100982B60) + 48);
        uint64_t v15 = (char *)a1 + v24;
        id v16 = (char *)a2 + v24;
        uint64_t v17 = type metadata accessor for StoreTab();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v25 = sub_100082C28((uint64_t *)&unk_10098B5B0);
          memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
LABEL_15:
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        id v29 = (void *)a2[2];
        uint64_t v28 = a2[3];
        a1[2] = v29;
        a1[3] = v28;
        uint64_t v31 = (void *)a2[4];
        uint64_t v30 = a2[5];
        a1[4] = v31;
        a1[5] = v30;
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        id v32 = v29;
        id v33 = v31;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void *sub_100132D04(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000925BC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v6 = (void *)a2[2];
        a1[2] = v6;
        a1[3] = a2[3];
        a1[4] = a2[4];
        swift_bridgeObjectRetain();
        id v7 = v6;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v8 = *(int *)(sub_100082C28(&qword_1009853F8) + 48);
        uint64_t v9 = (char *)a1 + v8;
        id v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for FontUseCase();
        uint64_t v12 = *(void *)(v11 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
          goto LABEL_13;
        }
        uint64_t v13 = sub_100082C28(&qword_100984B10);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_14;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v14 = (void *)a2[2];
        a1[2] = v14;
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        id v15 = v14;
        goto LABEL_14;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v16 = *(int *)(sub_100082C28((uint64_t *)&unk_100982B60) + 48);
        uint64_t v9 = (char *)a1 + v16;
        id v10 = (char *)a2 + v16;
        uint64_t v11 = type metadata accessor for StoreTab();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          uint64_t v17 = sub_100082C28((uint64_t *)&unk_10098B5B0);
          memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
LABEL_13:
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        goto LABEL_14;
      case 4u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 6u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        swift_retain();
        goto LABEL_14;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v18 = (void *)a2[2];
        a1[2] = v18;
        a1[3] = a2[3];
        uint64_t v19 = (void *)a2[4];
        a1[4] = v19;
        a1[5] = a2[5];
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        id v20 = v18;
        id v21 = v19;
        swift_bridgeObjectRetain();
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *sub_100133118(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    *a1 = *a2;
    uint64_t v13 = *(int *)(sub_100082C28((uint64_t *)&unk_100982B60) + 48);
    uint64_t v14 = &a1[v13];
    id v15 = &a2[v13];
    uint64_t v16 = type metadata accessor for StoreTab();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_100082C28((uint64_t *)&unk_10098B5B0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(sub_100082C28(&qword_1009853F8) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for FontUseCase();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100082C28(&qword_100984B10);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *sub_10013338C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000925BC((uint64_t)a1);
    EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      uint64_t v13 = *(int *)(sub_100082C28((uint64_t *)&unk_100982B60) + 48);
      uint64_t v14 = &a1[v13];
      id v15 = &a2[v13];
      uint64_t v16 = type metadata accessor for StoreTab();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_100082C28((uint64_t *)&unk_10098B5B0);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      goto LABEL_12;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = *(int *)(sub_100082C28(&qword_1009853F8) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for FontUseCase();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100082C28(&qword_100984B10);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *storeEnumTagSinglePayload for NavigationAccessory.Location(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001336DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationAccessory.Location()
{
  return &type metadata for NavigationAccessory.Location;
}

unint64_t sub_100133718()
{
  unint64_t result = qword_1009854B8;
  if (!qword_1009854B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009854B8);
  }
  return result;
}

uint64_t sub_10013376C(uint64_t a1, uint64_t a2)
{
  uint64_t v167 = (uint64_t *)a1;
  uint64_t v168 = (char *)a2;
  uint64_t v158 = type metadata accessor for StoreTab();
  uint64_t v156 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  double v151 = (char *)&v150 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_100082C28(&qword_1009854C8);
  __chkstk_darwin(v155);
  uint64_t v157 = (uint64_t)&v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_10098B5B0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v152 = (uint64_t)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v165 = (uint64_t)&v150 - v8;
  __chkstk_darwin(v7);
  uint64_t v163 = (uint64_t)&v150 - v9;
  uint64_t v154 = type metadata accessor for FontUseCase();
  uint64_t v159 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v150 = (char *)&v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_100082C28(&qword_1009854D0);
  __chkstk_darwin(v153);
  CGFloat v161 = (char *)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28(&qword_100984B10);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v160 = (char *)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v164 = (uint64_t)&v150 - v16;
  __chkstk_darwin(v15);
  uint64_t v162 = (uint64_t)&v150 - v17;
  uint64_t v18 = type metadata accessor for Accessory();
  uint64_t v19 = __chkstk_darwin(v18);
  id v21 = (uint64_t *)((char *)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v166 = (double *)((char *)&v150 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (uint64_t *)((char *)&v150 - v25);
  uint64_t v27 = __chkstk_darwin(v24);
  id v29 = (uint64_t *)((char *)&v150 - v28);
  uint64_t v30 = __chkstk_darwin(v27);
  id v32 = (unsigned __int8 *)&v150 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v150 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (uint64_t *)((char *)&v150 - v37);
  __chkstk_darwin(v36);
  char v40 = (uint64_t *)((char *)&v150 - v39);
  uint64_t v41 = sub_100082C28(&qword_1009854D8);
  uint64_t v42 = __chkstk_darwin(v41 - 8);
  uint64_t v44 = (char *)&v150 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = (uint64_t)&v44[*(int *)(v42 + 56)];
  sub_10007B6D4((uint64_t)v167, (uint64_t)v44);
  uint64_t v167 = (uint64_t *)v45;
  sub_10007B6D4((uint64_t)v168, v45);
  uint64_t v168 = v44;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v52 = (uint64_t)v168;
      sub_10007B6D4((uint64_t)v168, (uint64_t)v38);
      uint64_t v54 = *v38;
      uint64_t v53 = v38[1];
      uint64_t v55 = *(int *)(sub_100082C28(&qword_1009853F8) + 48);
      uint64_t v56 = (uint64_t)v38 + v55;
      uint64_t v57 = v167;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_100082BCC(v56, &qword_100984B10);
        goto LABEL_45;
      }
      uint64_t v59 = *v57;
      uint64_t v58 = v57[1];
      uint64_t v60 = v162;
      sub_100082CD0(v56, v162, &qword_100984B10);
      uint64_t v61 = v164;
      sub_100082CD0((uint64_t)v57 + v55, v164, &qword_100984B10);
      if (!v53)
      {
        uint64_t v63 = (uint64_t)v160;
        uint64_t v62 = (uint64_t)v161;
        if (!v58) {
          goto LABEL_89;
        }
        goto LABEL_74;
      }
      uint64_t v63 = (uint64_t)v160;
      uint64_t v62 = (uint64_t)v161;
      if (!v58)
      {
LABEL_74:
        swift_bridgeObjectRelease();
        goto LABEL_75;
      }
      if (v54 != v59 || v53 != v58)
      {
        char v130 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v130) {
          goto LABEL_89;
        }
LABEL_75:
        long long v77 = &qword_100984B10;
        sub_100082BCC(v61, &qword_100984B10);
        uint64_t v78 = v60;
        goto LABEL_76;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_89:
      uint64_t v131 = v62 + *(int *)(v153 + 48);
      sub_100082B68(v60, v62, &qword_100984B10);
      sub_100082B68(v61, v131, &qword_100984B10);
      uint64_t v132 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48);
      uint64_t v133 = v154;
      if (v132(v62, 1, v154) == 1)
      {
        sub_100082BCC(v61, &qword_100984B10);
        sub_100082BCC(v60, &qword_100984B10);
        if (v132(v131, 1, v133) == 1)
        {
          uint64_t v120 = &qword_100984B10;
LABEL_92:
          sub_100082BCC(v62, v120);
          goto LABEL_42;
        }
        goto LABEL_95;
      }
      sub_100082B68(v62, v63, &qword_100984B10);
      if (v132(v131, 1, v133) == 1)
      {
        sub_100082BCC(v61, &qword_100984B10);
        sub_100082BCC(v60, &qword_100984B10);
        (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v63, v133);
LABEL_95:
        uint64_t v127 = &qword_1009854D0;
LABEL_96:
        uint64_t v78 = v62;
        goto LABEL_97;
      }
      uint64_t v144 = v159;
      id v145 = v150;
      (*(void (**)(char *, uint64_t, uint64_t))(v159 + 32))(v150, v131, v133);
      sub_10007BB18(&qword_1009854E8, (void (*)(uint64_t))&type metadata accessor for FontUseCase);
      uint64_t v146 = v133;
      char v140 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v147 = *(void (**)(char *, uint64_t))(v144 + 8);
      v147(v145, v133);
      uint64_t v142 = &qword_100984B10;
      sub_100082BCC(v164, &qword_100984B10);
      sub_100082BCC(v60, &qword_100984B10);
      v147((char *)v63, v146);
LABEL_116:
      sub_100082BCC(v62, v142);
      if ((v140 & 1) == 0) {
        goto LABEL_98;
      }
LABEL_42:
      uint64_t v109 = v52;
LABEL_43:
      sub_1000925BC(v109);
      return 1;
    case 2u:
      uint64_t v52 = (uint64_t)v168;
      sub_10007B6D4((uint64_t)v168, (uint64_t)v35);
      uint64_t v65 = *(void *)v35;
      uint64_t v64 = *((void *)v35 + 1);
      uint64_t v66 = (void *)*((void *)v35 + 2);
      double v67 = *((double *)v35 + 3);
      uint64_t v68 = (uint64_t)v167;
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();

        goto LABEL_51;
      }
      uint64_t v69 = *(void **)(v68 + 16);
      double v70 = *(double *)(v68 + 24);
      if (v65 == *(void *)v68 && v64 == *(void *)(v68 + 8))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v114 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v114 & 1) == 0)
        {

          goto LABEL_98;
        }
      }
      sub_100084CF0(0, (unint64_t *)&qword_10098A0B0);
      char v115 = static NSObject.== infix(_:_:)();

      if ((v115 & 1) == 0) {
        goto LABEL_98;
      }
      BOOL v90 = v67 == v70;
      sub_1000925BC(v52);
      return v90;
    case 3u:
      uint64_t v52 = (uint64_t)v168;
      sub_10007B6D4((uint64_t)v168, (uint64_t)v32);
      uint64_t v71 = *(int *)(sub_100082C28((uint64_t *)&unk_100982B60) + 48);
      uint64_t v72 = (unsigned __int8 *)v167;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_100082BCC((uint64_t)&v32[v71], (uint64_t *)&unk_10098B5B0);
        goto LABEL_51;
      }
      int v73 = *v32;
      int v74 = *v72;
      uint64_t v75 = v163;
      sub_100082CD0((uint64_t)&v32[v71], v163, (uint64_t *)&unk_10098B5B0);
      uint64_t v76 = v165;
      sub_100082CD0((uint64_t)&v72[v71], v165, (uint64_t *)&unk_10098B5B0);
      if (v73 != v74)
      {
        long long v77 = (uint64_t *)&unk_10098B5B0;
        sub_100082BCC(v76, (uint64_t *)&unk_10098B5B0);
        uint64_t v78 = v75;
LABEL_76:
        uint64_t v127 = v77;
LABEL_97:
        sub_100082BCC(v78, v127);
LABEL_98:
        uint64_t v129 = v52;
        goto LABEL_99;
      }
      uint64_t v62 = v157;
      uint64_t v116 = v157 + *(int *)(v155 + 48);
      sub_100082B68(v75, v157, (uint64_t *)&unk_10098B5B0);
      sub_100082B68(v76, v116, (uint64_t *)&unk_10098B5B0);
      uint64_t v117 = v156;
      long long v118 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48);
      uint64_t v119 = v158;
      if (v118(v62, 1, v158) == 1)
      {
        sub_100082BCC(v76, (uint64_t *)&unk_10098B5B0);
        sub_100082BCC(v75, (uint64_t *)&unk_10098B5B0);
        if (v118(v116, 1, v119) == 1)
        {
          uint64_t v120 = (uint64_t *)&unk_10098B5B0;
          goto LABEL_92;
        }
      }
      else
      {
        uint64_t v128 = v152;
        sub_100082B68(v62, v152, (uint64_t *)&unk_10098B5B0);
        if (v118(v116, 1, v119) != 1)
        {
          uint64_t v139 = v151;
          (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v151, v116, v119);
          sub_10007BB18(&qword_1009854E0, (void (*)(uint64_t))&type metadata accessor for StoreTab);
          char v140 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v141 = *(void (**)(char *, uint64_t))(v117 + 8);
          v141(v139, v119);
          uint64_t v142 = (uint64_t *)&unk_10098B5B0;
          sub_100082BCC(v165, (uint64_t *)&unk_10098B5B0);
          sub_100082BCC(v75, (uint64_t *)&unk_10098B5B0);
          v141((char *)v128, v119);
          goto LABEL_116;
        }
        sub_100082BCC(v165, (uint64_t *)&unk_10098B5B0);
        sub_100082BCC(v75, (uint64_t *)&unk_10098B5B0);
        (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v128, v119);
      }
      uint64_t v127 = &qword_1009854C8;
      goto LABEL_96;
    case 4u:
      uint64_t v52 = (uint64_t)v168;
      sub_10007B6D4((uint64_t)v168, (uint64_t)v29);
      uint64_t v80 = *v29;
      uint64_t v79 = v29[1];
      uint64_t v81 = v167;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_45;
      }
      uint64_t v82 = v81[1];
      if (v79) {
        goto LABEL_19;
      }
      goto LABEL_25;
    case 5u:
      uint64_t v52 = (uint64_t)v168;
      sub_10007B6D4((uint64_t)v168, (uint64_t)v26);
      uint64_t v80 = *v26;
      uint64_t v79 = v26[1];
      uint64_t v81 = v167;
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v82 = v81[1];
        if (v79)
        {
LABEL_19:
          if (v82)
          {
            if (v80 == *v81 && v79 == v82)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_42;
            }
            char v126 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v126) {
              goto LABEL_42;
            }
            goto LABEL_98;
          }
        }
        else
        {
LABEL_25:
          if (!v82) {
            goto LABEL_42;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_98;
      }
LABEL_45:
      swift_bridgeObjectRelease();
      goto LABEL_51;
    case 6u:
      objc_super v83 = v166;
      sub_10007B6D4((uint64_t)v168, (uint64_t)v166);
      double v85 = v83[1];
      double v84 = v83[2];
      uint64_t v86 = (uint64_t)v167;
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        swift_release();
        goto LABEL_50;
      }
      double v88 = *(double *)(v86 + 8);
      double v87 = *(double *)(v86 + 16);
      type metadata accessor for Artwork();
      char v89 = static Artwork.== infix(_:_:)();
      swift_release();
      swift_release();
      if ((v89 & 1) == 0) {
        goto LABEL_87;
      }
      BOOL v90 = v84 == v87 && v85 == v88;
      sub_1000925BC((uint64_t)v168);
      return v90;
    case 7u:
      sub_10007B6D4((uint64_t)v168, (uint64_t)v21);
      uint64_t v92 = *v21;
      uint64_t v91 = v21[1];
      uint64_t v94 = (void *)v21[2];
      uint64_t v93 = v21[3];
      unint64_t v95 = (char *)v21[4];
      uint64_t v96 = v21[5];
      uint64_t v97 = v21[6];
      uint64_t v98 = v167;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
      uint64_t v165 = v96;
      uint64_t v166 = (double *)v95;
      uint64_t v99 = *v98;
      uint64_t v100 = v98[1];
      uint64_t v102 = (void *)v98[2];
      uint64_t v101 = v98[3];
      uint64_t v103 = v98;
      uint64_t v104 = (void *)v98[4];
      uint64_t v105 = v103[6];
      uint64_t v164 = v103[5];
      if (v92 == v99 && v91 == v100)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v121 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v121 & 1) == 0) {
          goto LABEL_85;
        }
      }
      sub_100084CF0(0, (unint64_t *)&qword_10098A0B0);
      long long v122 = v102;
      if ((static NSObject.== infix(_:_:)() & 1) != 0 && v93 == v101)
      {
        if (v166)
        {
          if (!v104)
          {

            goto LABEL_127;
          }
          sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
          id v123 = v104;
          long long v124 = v166;
          char v125 = static NSObject.== infix(_:_:)();

          long long v122 = v102;
          if ((v125 & 1) == 0)
          {

LABEL_127:
            swift_bridgeObjectRelease();
            goto LABEL_128;
          }
        }
        else if (v104)
        {

          swift_bridgeObjectRelease();
LABEL_128:
          swift_bridgeObjectRelease();

          goto LABEL_86;
        }
        if (v97)
        {
          if (!v105)
          {
            swift_bridgeObjectRelease();

            goto LABEL_86;
          }
          if (v165 == v164 && v97 == v105)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

LABEL_139:
            uint64_t v109 = (uint64_t)v168;
            goto LABEL_43;
          }
          char v149 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v149) {
            goto LABEL_139;
          }
LABEL_87:
          uint64_t v129 = (uint64_t)v168;
LABEL_99:
          sub_1000925BC(v129);
          return 0;
        }

        if (!v105) {
          goto LABEL_139;
        }
LABEL_133:
        swift_bridgeObjectRelease();
        goto LABEL_87;
      }
LABEL_85:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_86:

      goto LABEL_87;
    case 8u:
      EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
      uint64_t v52 = (uint64_t)v168;
      if (EnumCaseMultiPayload == 8) {
        goto LABEL_42;
      }
      goto LABEL_51;
    case 9u:
      int v107 = swift_getEnumCaseMultiPayload();
      uint64_t v52 = (uint64_t)v168;
      if (v107 == 9) {
        goto LABEL_42;
      }
      goto LABEL_51;
    case 0xAu:
      int v108 = swift_getEnumCaseMultiPayload();
      uint64_t v52 = (uint64_t)v168;
      if (v108 == 10) {
        goto LABEL_42;
      }
      goto LABEL_51;
    default:
      sub_10007B6D4((uint64_t)v168, (uint64_t)v40);
      uint64_t v47 = *v40;
      uint64_t v46 = v40[1];
      id v49 = (void *)v40[2];
      uint64_t v48 = v40[3];
      uint64_t v50 = v40[4];
      uint64_t v51 = v167;
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
LABEL_50:
        uint64_t v52 = (uint64_t)v168;
LABEL_51:
        sub_100082BCC(v52, &qword_1009854D8);
        return 0;
      }
      uint64_t v110 = v51[1];
      objc_super v111 = (void *)v51[2];
      uint64_t v113 = v51[3];
      uint64_t v112 = v51[4];
      if (v46)
      {
        if (v110)
        {
          if (v47 == *v51 && v46 == v110)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_103:
            if (!v49)
            {
              if (v111)
              {
                swift_bridgeObjectRelease();

                goto LABEL_133;
              }
              goto LABEL_110;
            }
            if (v111)
            {
              sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
              id v136 = v111;
              id v137 = v49;
              char v138 = static NSObject.== infix(_:_:)();

              if ((v138 & 1) == 0)
              {

                swift_bridgeObjectRelease();
                goto LABEL_133;
              }
LABEL_110:
              if (v50)
              {
                if (v112)
                {
                  if (v48 == v113 && v50 == v112)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    uint64_t v143 = (uint64_t)v168;
LABEL_135:
                    uint64_t v109 = v143;
                    goto LABEL_43;
                  }
                  char v148 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  uint64_t v143 = (uint64_t)v168;
                  if (v148) {
                    goto LABEL_135;
                  }
                }
                else
                {
                  swift_bridgeObjectRelease();

                  uint64_t v143 = (uint64_t)v168;
                }
              }
              else
              {

                uint64_t v143 = (uint64_t)v168;
                if (!v112) {
                  goto LABEL_135;
                }
                swift_bridgeObjectRelease();
              }
              uint64_t v129 = v143;
              goto LABEL_99;
            }
            swift_bridgeObjectRelease();
LABEL_80:
            swift_bridgeObjectRelease();

            goto LABEL_87;
          }
          char v135 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v135) {
            goto LABEL_103;
          }
LABEL_79:
          swift_bridgeObjectRelease();

          goto LABEL_80;
        }
      }
      else if (!v110)
      {
        goto LABEL_103;
      }
      swift_bridgeObjectRelease();
      goto LABEL_79;
  }
}

void sub_1001349E8()
{
  qword_100985500 = 0x4014000000000000;
}

void sub_1001349F8()
{
  qword_100985508 = 0x4034000000000000;
}

char *sub_100134A08()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label;
  id v3 = objc_allocWithZone((Class)UILabel);
  uint64_t v4 = v0;
  *(void *)&v0[v2] = [v3 init];
  uint64_t v5 = OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_backgroundView;
  *(void *)&v4[v5] = [objc_allocWithZone((Class)UIView) init];

  v26.id receiver = v4;
  v26.super_class = ObjectType;
  uint64_t v6 = (char *)[v26 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v7 = OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_backgroundView;
  uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_backgroundView];
  uint64_t v9 = self;
  id v10 = v8;
  id v11 = [v9 systemBlueColor];
  [v10 setBackgroundColor:v11];

  id v12 = [*(id *)&v6[v7] layer];
  [v12 setCornerRadius:13.0];

  id v13 = [*(id *)&v6[v7] layer];
  [v13 setCornerCurve:kCACornerCurveCircular];

  [v6 addSubview:*(void *)&v6[v7]];
  uint64_t v14 = OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label;
  id v15 = *(id *)&v6[OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label];
  id v16 = [v9 whiteColor];
  [v15 setTextColor:v16];

  uint64_t v17 = *(void **)&v6[v14];
  uint64_t v18 = self;
  id v19 = v17;
  id v20 = [v18 systemFontOfSize:32.0];
  [v19 setFont:v20];

  id v21 = *(id *)&v6[v14];
  v22._object = (void *)0x8000000100808560;
  v22._countAndFlagsBits = 0xD00000000000001FLL;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  localizedString(_:comment:)(v22, v23);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v21 setText:v24];

  [v6 addSubview:*(void *)&v6[v14]];
  return v6;
}

id sub_100134DB4()
{
  v7.id receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_backgroundView];
  [v0 bounds];
  [v1 setFrame:];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label];
  [v2 sizeToFit];
  if (qword_10097E160 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_100985508;
  if (qword_10097E158 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_100985500;
  [v2 frame];
  double Width = CGRectGetWidth(v8);
  [v2 frame];
  return [v2 setFrame:v3, v4, Width, CGRectGetHeight(v9)];
}

uint64_t type metadata accessor for OnboardingAdPrivacyHeaderIconView()
{
  return self;
}

double sub_100135034()
{
  uint64_t v1 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = __chkstk_darwin(v1).n128_u64[0];
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore33OnboardingAdPrivacyHeaderIconView_label);
  [v6 sizeToFit:v3];
  [v6 frame];
  if (qword_10097E160 != -1) {
    swift_once();
  }
  if (qword_10097E158 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for FloatingPointRoundingRule.up(_:), v1);
  CGSize.rounded(_:)();
  double v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v8;
}

Swift::Int sub_1001351F8()
{
  return Hasher._finalize()();
}

uint64_t sub_100135280()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100135304()
{
  return Hasher._finalize()();
}

uint64_t sub_100135388(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t sub_10013542C()
{
  sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  uint64_t result = static UIColor.secondaryText.getter();
  qword_1009E1318 = result;
  return result;
}

uint64_t sub_100135470()
{
  uint64_t v0 = type metadata accessor for SystemImage();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for SystemImage.chevronDown(_:), v0, v2);
  uint64_t v5 = static SystemImage.load(_:with:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_100985548 = v5;
  return result;
}

uint64_t sub_100135568()
{
  uint64_t v34 = type metadata accessor for PlatformSelectorViewLayout.Metrics.AccessoryAlignment();
  uint64_t v33 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v35 = (char *)&v25 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = type metadata accessor for FontSource();
  __n128 v2 = *(void **)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticDimension();
  __chkstk_darwin(v5 - 8);
  uint64_t v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v38 = (char *)&v25 - v8;
  __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v25 - v10;
  uint64_t v11 = type metadata accessor for PlatformSelectorViewLayout.Metrics();
  sub_100042444(v11, qword_100985550);
  uint64_t v32 = sub_100087728(v11, (uint64_t)qword_100985550);
  uint64_t v46 = &type metadata for Double;
  uint64_t v47 = &protocol witness table for Double;
  uint64_t v45 = 0x4024000000000000;
  if (qword_10097F2C8 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for FontUseCase();
  uint64_t v13 = sub_100087728(v12, (uint64_t)qword_1009E42B0);
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v36 = v14 + 16;
  uint64_t v28 = v13;
  v30(v4, v13, v12);
  unsigned int v29 = enum case for FontSource.useCase(_:);
  id v15 = (void (*)(char *))v2[13];
  v15(v4);
  uint64_t v43 = (void *)v1;
  uint64_t v44 = &protocol witness table for FontSource;
  id v16 = sub_1000808B8(v42);
  uint64_t v17 = (void (*)(uint64_t *, char *, uint64_t))v2[2];
  v17(v16, v4, v1);
  uint64_t v27 = v17;
  StaticDimension.init(_:scaledLike:)();
  objc_super v26 = (void (*)(char *, uint64_t))v2[1];
  v26(v4, v1);
  uint64_t v18 = v13;
  id v19 = v30;
  v30(v4, v18, v12);
  uint64_t v20 = v29;
  ((void (*)(char *, void, uint64_t))v15)(v4, v29, v1);
  uint64_t v43 = (void *)v1;
  uint64_t v44 = &protocol witness table for FontSource;
  id v21 = sub_1000808B8(v42);
  v17(v21, v4, v1);
  StaticDimension.init(_:scaledLike:)();
  Swift::String v22 = v26;
  v26(v4, v1);
  v19(v4, v28, v12);
  ((void (*)(char *, uint64_t, uint64_t))v15)(v4, v20, v1);
  uint64_t v43 = (void *)v1;
  uint64_t v44 = &protocol witness table for FontSource;
  Swift::String v23 = sub_1000808B8(v42);
  v27(v23, v4, v1);
  StaticDimension.init(_:scaledLike:)();
  v22(v4, v1);
  uint64_t v44 = &protocol witness table for Double;
  uint64_t v43 = &type metadata for Double;
  v42[0] = 0x4024000000000000;
  if (qword_10097E170 != -1) {
    swift_once();
  }
  [(id)qword_100985548 contentInsets];
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v35, enum case for PlatformSelectorViewLayout.Metrics.AccessoryAlignment.inline(_:), v34);
  char v40 = &type metadata for Double;
  uint64_t v41 = &protocol witness table for Double;
  uint64_t v39 = 0x402C000000000000;
  return PlatformSelectorViewLayout.Metrics.init(badgeHorizontalPadding:textSpaceWhenInline:textSpaceWhenExclusiveLine:badgeSpaceExclusiveLine:accessoryHorizontalPadding:accessoryContentInsets:accessoryAlignment:bottomSpacer:)();
}

char *sub_100135AF8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_numberOfBadges] = 0;
  id v16 = &v4[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_didSelectHandler];
  *(void *)id v16 = 0;
  *((void *)v16 + 1) = 0;
  uint64_t v17 = qword_10097F2C8;
  uint64_t v64 = v4;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for FontUseCase();
  uint64_t v19 = sub_100087728(v18, (uint64_t)qword_1009E42B0);
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v63(v15, v19, v18);
  Swift::String v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
  id v21 = (id)(v20 + 56);
  uint64_t v68 = v22;
  v22(v15, 0, 1, v18);
  unsigned int v66 = enum case for DirectionalTextAlignment.none(_:);
  uint64_t v62 = *(void (**)(char *))(v10 + 104);
  v62(v12);
  Swift::String v23 = (objc_class *)type metadata accessor for DynamicTypeLabel();
  uint64_t v61 = v9;
  Class v67 = v23;
  id v24 = objc_allocWithZone(v23);
  uint64_t v25 = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  uint64_t v60 = v10 + 104;
  uint64_t v27 = v63;
  objc_super v26 = v64;
  *(void *)&v64[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel] = v25;
  v27(v15, v19, v18);
  v68(v15, 0, 1, v18);
  uint64_t v28 = v9;
  unsigned int v29 = v62;
  ((void (*)(char *, void, uint64_t))v62)(v12, v66, v28);
  id v30 = objc_allocWithZone(v67);
  *(void *)&v26[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  v27(v15, v19, v18);
  v68(v15, 0, 1, v18);
  ((void (*)(char *, void, uint64_t))v29)(v12, v66, v61);
  id v31 = objc_allocWithZone(v67);
  *(void *)&v26[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  id v32 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v26[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_accessoryImageView] = v32;

  v70.id receiver = v26;
  v70.super_class = ObjectType;
  uint64_t v33 = (char *)[super initWithFrame:a1 a2:a2 a3:a3 a4:a4];
  sub_100082C28(&qword_100982B50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007C0090;
  uint64_t v35 = *(uint64_t **)&v33[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel];
  *(void *)(inited + 32) = v35;
  uint64_t v36 = *(void **)&v33[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel];
  *(void *)(inited + 40) = v36;
  uint64_t v37 = *(void **)&v33[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel];
  *(void *)(inited + 48) = v37;
  uint64_t v69 = inited;
  specialized Array._endMutation()();
  uint64_t v38 = v69;
  unint64_t v39 = v69 & 0xC000000000000001;
  if ((v69 & 0xC000000000000001) != 0)
  {
    uint64_t v56 = v33;
    uint64_t v57 = v35;
    id v58 = v36;
    id v59 = v37;
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_6:
    uint64_t v35 = &qword_10097E000;
    if (qword_10097E168 == -1) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
  if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    id v21 = *(id *)(v69 + 32);
    char v40 = v33;
    uint64_t v41 = v35;
    id v42 = v36;
    id v43 = v37;
    goto LABEL_6;
  }
  __break(1u);
LABEL_20:
  swift_once();
LABEL_7:
  [v21 setTextColor:qword_1009E1318];
  [v33 addSubview:v21];

  if (v39) {
    id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v44 = *(id *)(v38 + 40);
  }
  uint64_t v45 = v44;
  if (v35[45] != -1) {
    swift_once();
  }
  [v45 setTextColor:qword_1009E1318];
  [v33 addSubview:v45];

  if (v39) {
    id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v46 = *(id *)(v38 + 48);
  }
  uint64_t v47 = v46;
  if (v35[45] != -1) {
    swift_once();
  }
  [v47 setTextColor:qword_1009E1318];
  [v33 addSubview:v47];
  swift_bridgeObjectRelease();

  uint64_t v48 = *(void **)&v33[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_accessoryImageView];
  [v48 setTintColor:qword_1009E1318];
  [v33 addSubview:v48];
  id v49 = v33;
  [v49 layoutMargins];
  double v51 = v50;
  [v49 layoutMargins];
  double v53 = v52;
  [v49 layoutMargins];
  [v49 setLayoutMargins:v51, 0.0, v53];

  id v54 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v49 action:"didTapSelectorView"];
  [v49 addGestureRecognizer:v54];

  return v49;
}

uint64_t sub_10013631C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for LayoutRect();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  __chkstk_darwin(v2);
  unsigned int v29 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PlatformSelectorViewLayout.Metrics();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PlatformSelectorViewLayout();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for BadgeDisplayStyle();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v16 = __chkstk_darwin(v15).n128_u64[0];
  uint64_t v18 = (char *)&v26 - v17;
  v38.id receiver = v0;
  v38.super_class = ObjectType;
  uint64_t v28 = ObjectType;
  [super layoutSubviews:v16];
  static BadgeDisplayStyle.style(forBadgeCount:pageTraits:indentForBadges:)();
  id v19 = sub_100136704((uint64_t)v18);
  sub_1001368A4();
  if (qword_10097E178 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100087728(v4, (uint64_t)qword_100985550);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v20, v4);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v18, v11);
  uint64_t v36 = type metadata accessor for DynamicTypeLabel();
  uint64_t v37 = &protocol witness table for UILabel;
  id v35 = v19;
  id v21 = *(void **)&v0[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_accessoryImageView];
  uint64_t v33 = sub_100084CF0(0, (unint64_t *)&qword_10098A7F0);
  uint64_t v34 = &protocol witness table for UIView;
  id v32 = v21;
  id v22 = v19;
  id v23 = v21;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)();
  LayoutMarginsAware<>.layoutFrame.getter();
  id v24 = v29;
  PlatformSelectorViewLayout.placeChildren(relativeTo:in:)();

  (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v11);
}

id sub_100136704(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BadgeDisplayStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v8 == enum case for BadgeDisplayStyle.left(_:))
  {
    uint64_t v9 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel;
  }
  else if (v8 == enum case for BadgeDisplayStyle.above(_:))
  {
    uint64_t v9 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel;
  }
  else
  {
    if (v8 != enum case for BadgeDisplayStyle.inline(_:))
    {
      uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
      id v13 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel);
      v12(v7, v3);
      return v13;
    }
    uint64_t v9 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel;
  }
  uint64_t v10 = *(void **)(v1 + v9);

  return v10;
}

id sub_1001368A4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel);
  type metadata accessor for DynamicTypeLabel();
  id v2 = v1;
  char v3 = static NSObject.== infix(_:_:)();

  [v2 setHidden:(v3 & 1) == 0];
  id v4 = *(id *)(v0 + OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel);
  char v5 = static NSObject.== infix(_:_:)();

  [v4 setHidden:(v5 & 1) == 0];
  id v6 = *(id *)(v0 + OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel);
  char v7 = static NSObject.== infix(_:_:)();

  return [v6 setHidden:(v7 & 1) == 0];
}

uint64_t sub_1001369F0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001369FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PlatformSelectorView()
{
  return self;
}

uint64_t sub_100136BC4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_100136C64(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100136D48(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100084CF0(0, (unint64_t *)&qword_100984D10);
  if (qword_10097F2C8 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for FontUseCase();
  sub_100087728(v9, (uint64_t)qword_1009E42B0);
  id v10 = [a2 traitCollection];
  unint64_t v11 = (void *)static UIFont.preferredFont(forUseWith:compatibleWith:)();

  v23[0] = sub_100084CF0(0, &qword_100991840);
  v23[1] = a1;
  swift_bridgeObjectRetain();
  id v12 = [a2 traitCollection];
  if (qword_10097E178 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for PlatformSelectorViewLayout.Metrics();
  sub_100087728(v13, (uint64_t)qword_100985550);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter();
  sub_100081D90(v24, v24[3]);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100082C28((uint64_t *)&unk_100986D50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007BF1D0;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 40) = v11;
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  uint64_t v15 = qword_10097E168;
  double v16 = NSFontAttributeName;
  id v17 = v11;
  uint64_t v18 = NSForegroundColorAttributeName;
  if (v15 != -1) {
    swift_once();
  }
  id v19 = (void *)qword_1009E1318;
  *(void *)(inited + 104) = sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
  *(void *)(inited + 80) = v19;
  id v20 = v19;
  sub_10005A234(inited);
  uint64_t v21 = NSAttributedString.init(images:for:adjustsImageSizeForAccessibilityContentSizeCategory:interItemSpacing:defaultAttributes:imagesShouldRenderAsTemplates:)();

  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v24);
  return v21;
}

double sub_100137090(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7, void *a8, uint64_t a9, void *a10)
{
  id v73 = a8;
  id v71 = a5;
  uint64_t v58 = a4;
  uint64_t v57 = a3;
  uint64_t v14 = type metadata accessor for PlatformSelectorViewLayout.Metrics();
  uint64_t v64 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v65 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PlatformSelectorViewLayout();
  uint64_t v69 = *(void *)(v16 - 8);
  uint64_t v70 = v16;
  __chkstk_darwin(v16);
  uint64_t v68 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v62 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v19 - 8);
  id v59 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for BadgeDisplayStyle();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v63 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v72 = (char *)&v57 - v23;
  uint64_t v24 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a7)
  {
    if (qword_10097E170 != -1) {
      swift_once();
    }
    [qword_100985548 size:v57, v58];
  }
  else
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v28 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v28 > 1)
    {
      type metadata accessor for MediaPlatform();
      sub_100082C28(&qword_100982B50);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1007BEA80;
      *(void *)(v29 + 32) = a1;
      v77[0] = v29;
      specialized Array._endMutation()();
      swift_retain();
      unint64_t v30 = static MediaPlatform.systemImages(platforms:)();
      swift_bridgeObjectRelease();
      id v71 = v57;
      goto LABEL_10;
    }
  }
  uint64_t v58 = a6;
  type metadata accessor for MediaPlatform();
  unint64_t v30 = static MediaPlatform.systemImages(platforms:)();
LABEL_10:
  uint64_t v57 = a10;
  if (qword_10097E178 != -1) {
    swift_once();
  }
  uint64_t v31 = v14;
  uint64_t v32 = sub_100087728(v14, (uint64_t)qword_100985550);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter();
  sub_100081D90(v77, (uint64_t)v78);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  double v34 = v33;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  sub_100138520(v30, v34);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v77);
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  id v35 = v73;
  static BadgeDisplayStyle.style(forBadgeCount:pageTraits:indentForBadges:)();
  uint64_t v36 = (void *)sub_100136D48(v30, v35);
  swift_bridgeObjectRelease();
  id v71 = v36;
  uint64_t v37 = (char *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)();
  uint64_t v38 = v31;
  if (qword_10097F2C8 != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for FontUseCase();
  uint64_t v40 = sub_100087728(v39, (uint64_t)qword_1009E42B0);
  uint64_t v41 = *(void *)(v39 - 8);
  id v42 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v59, v40, v39);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v39);
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v62, enum case for DirectionalTextAlignment.none(_:), v61);
  id v43 = (objc_class *)type metadata accessor for DynamicTypeLabel();
  id v44 = objc_allocWithZone(v43);
  uint64_t v45 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  [v45 setAttributedText:v37, v57];
  uint64_t v62 = v37;
  if (qword_10097E170 != -1) {
    swift_once();
  }
  [(id)qword_100985548 size];
  uint64_t v46 = type metadata accessor for LayoutViewPlaceholder();
  swift_allocObject();
  uint64_t v47 = LayoutViewPlaceholder.init(representing:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v65, v32, v38);
  uint64_t v48 = v66;
  id v49 = v72;
  uint64_t v50 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v72, v67);
  uint64_t v78 = v43;
  uint64_t v79 = &protocol witness table for UILabel;
  v77[0] = v45;
  uint64_t v75 = v46;
  uint64_t v76 = &protocol witness table for LayoutViewPlaceholder;
  uint64_t v74 = v47;
  id v51 = v45;
  swift_retain();
  double v52 = v68;
  PlatformSelectorViewLayout.init(metrics:style:descriptionLabel:accessoryImageView:)();
  [v73 pageMarginInsets];
  CGSize.subtracting(insets:)();
  sub_10013861C();
  uint64_t v53 = v70;
  dispatch thunk of Measurable.measurements(fitting:in:)();
  CGSize.adding(outsets:)();
  double v55 = v54;

  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v52, v53);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  return v55;
}

uint64_t sub_100137A14(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, unsigned __int8 a9, char *a10)
{
  uint64_t v98 = a6;
  uint64_t v99 = a5;
  uint64_t v104 = a10;
  id ObjectType = (id)swift_getObjectType();
  uint64_t v88 = type metadata accessor for AutomationSemantics();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  double v84 = (char *)v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  double v85 = (char *)v82 - v18;
  __chkstk_darwin(v19);
  uint64_t v86 = (char *)v82 - v20;
  uint64_t v103 = type metadata accessor for BadgeDisplayStyle();
  uint64_t v90 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v105 = (char *)v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v82 - v23;
  uint64_t v96 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v94 = (char *)v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v26 = a7;
  if (a7) {
    goto LABEL_6;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v28 > 1) {
      goto LABEL_4;
    }
LABEL_6:
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 1) {
    goto LABEL_6;
  }
LABEL_4:
  sub_100082C28(&qword_100982B50);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1007BEA80;
  *(void *)(v27 + 32) = a1;
  *(void *)&long long v107 = v27;
  specialized Array._endMutation()();
  a2 = v107;
  swift_retain();
  uint64_t v98 = a4;
  uint64_t v99 = a3;
LABEL_7:
  uint64_t v29 = sub_100138674(a2);
  swift_bridgeObjectRelease();
  unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
  *(void *)&long long v107 = _swiftEmptyArrayStorage;
  uint64_t v31 = v29[2];
  char v89 = v29;
  if (v31)
  {
    uint64_t v32 = self;
    swift_bridgeObjectRetain();
    double v33 = v29 + 7;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSString v34 = String._bridgeToObjectiveC()();
      id v35 = [v32 _systemImageNamed:v34];

      if (v35)
      {
        id v36 = [v35 imageWithRenderingMode:2];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v36)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v33 += 4;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    unint64_t v30 = v107;
  }
  uint64_t v37 = *(void **)&v104[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_accessoryImageView];
  if (v26)
  {
    if (qword_10097E170 != -1) {
      swift_once();
    }
    id v38 = (id)qword_100985548;
  }
  else
  {
    id v38 = 0;
  }
  [v37 setImage:v38];

  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v102 = v24;
  *(void *)&v104[OBJC_IVAR____TtC8AppStore20PlatformSelectorView_numberOfBadges] = v39;
  id ObjectType = (id)sub_100136D48(v30, a8);
  if (qword_10097E178 != -1) {
    swift_once();
  }
  int v83 = a9;
  uint64_t v40 = type metadata accessor for PlatformSelectorViewLayout.Metrics();
  uint64_t v97 = sub_100087728(v40, (uint64_t)qword_100985550);
  PlatformSelectorViewLayout.Metrics.badgeHorizontalPadding.getter();
  sub_100081D90(&v107, *((uint64_t *)&v108 + 1));
  uint64_t v41 = v94;
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  id v100 = a8;
  AnyDimension.value(in:rounded:)();
  double v43 = v42;
  (*(void (**)(char *, uint64_t))(v95 + 8))(v41, v96);
  sub_100138520(v30, v43);
  uint64_t v45 = v44;
  swift_bridgeObjectRelease();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v107);
  sub_100082C28(&qword_1009855C8);
  uint64_t v46 = v90;
  uint64_t v47 = *(void *)(v90 + 72);
  unint64_t v48 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1007BF710;
  v82[2] = v49;
  unint64_t v50 = v49 + v48;
  id v51 = *(void (**)(void))(v46 + 104);
  LODWORD(v94) = enum case for BadgeDisplayStyle.above(_:);
  uint64_t v52 = v103;
  ((void (*)(unint64_t))v51)(v49 + v48);
  uint64_t v96 = v47;
  int v91 = enum case for BadgeDisplayStyle.inline(_:);
  ((void (*)(unint64_t))v51)(v50 + v47);
  unint64_t v53 = v50 + 2 * v47;
  *(void *)unint64_t v53 = v45;
  *(unsigned char *)(v53 + 8) = 0;
  LODWORD(v95) = enum case for BadgeDisplayStyle.left(_:);
  v51();
  uint64_t v92 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesAsHeadingLabel;
  uint64_t v93 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithTwoColumnsLabel;
  double v55 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v46 += 16;
  double v54 = v55;
  uint64_t v56 = (uint64_t (**)(char *, uint64_t))(v46 + 72);
  uint64_t v90 = OBJC_IVAR____TtC8AppStore20PlatformSelectorView_descriptionWithBadgesInlineLabel;
  uint64_t v57 = (void (**)(char *, uint64_t))(v46 - 8);
  uint64_t v58 = v52;
  uint64_t v59 = 3;
  v82[1] = v50;
  uint64_t v60 = v102;
  v55(v102, (char *)v50, v52);
  while (1)
  {
    uint64_t v65 = v105;
    v54(v105, v60, v58);
    int v66 = (*v56)(v65, v58);
    if (v66 == v95)
    {
      uint64_t v61 = v104;
      uint64_t v62 = &v111;
LABEL_28:
      id v63 = *(id *)&v61[*(v62 - 32)];
      goto LABEL_29;
    }
    if (v66 == v94)
    {
      uint64_t v61 = v104;
      uint64_t v62 = &v110;
      goto LABEL_28;
    }
    if (v66 == v91)
    {
      uint64_t v61 = v104;
      uint64_t v62 = &v109;
      goto LABEL_28;
    }
    uint64_t v67 = *v57;
    id v63 = *(id *)&v104[v92];
    v67(v105, v58);
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v60 = v102;
    uint64_t v64 = (void *)static PlatformSelectorViewLayout.makeFullPlatformString(descriptiveText:badgeString:metrics:style:in:)();
    swift_bridgeObjectRelease();
    [v63 setAttributedText:v64];

    uint64_t v58 = v103;
    (*v57)(v60, v103);
    v50 += v96;
    if (!--v59) {
      break;
    }
    v54(v60, (char *)v50, v58);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (v83)
  {
    [v100 pageMarginInsets];
    [v104 setLayoutMargins];
  }
  [v104 setNeedsLayout];
  long long v107 = 0u;
  long long v108 = 0u;
  memset(v106, 0, sizeof(v106));
  uint64_t v68 = v84;
  static AutomationSemantics.productPage(elementName:id:parentId:)();
  sub_100089384((uint64_t)v106);
  sub_100089384((uint64_t)&v107);
  uint64_t v69 = v89;
  *(void *)&long long v107 = v89;
  *((void *)&v107 + 1) = sub_1001369F0;
  *(void *)&long long v108 = 0;
  swift_bridgeObjectRetain();
  sub_100082C28(&qword_1009855D0);
  sub_100138B94();
  uint64_t v70 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v72 = v71;
  swift_bridgeObjectRelease();
  *((void *)&v108 + 1) = &type metadata for String;
  *(void *)&long long v107 = v70;
  *((void *)&v107 + 1) = v72;
  id v73 = v85;
  AutomationSemantics.attribute(key:value:)();
  uint64_t v74 = *(void (**)(char *, uint64_t))(v87 + 8);
  uint64_t v75 = v68;
  uint64_t v76 = v88;
  v74(v75, v88);
  sub_100089384((uint64_t)&v107);
  *(void *)&long long v107 = v69;
  *((void *)&v107 + 1) = sub_1001369FC;
  *(void *)&long long v108 = 0;
  uint64_t v77 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v79 = v78;
  swift_bridgeObjectRelease();
  *((void *)&v108 + 1) = &type metadata for String;
  *(void *)&long long v107 = v77;
  *((void *)&v107 + 1) = v79;
  uint64_t v80 = v86;
  AutomationSemantics.attribute(key:value:)();
  v74(v73, v76);
  sub_100089384((uint64_t)&v107);
  UIView.setAutomationSemantics(_:)();

  return ((uint64_t (*)(char *, uint64_t))v74)(v80, v76);
}

uint64_t sub_100138520(unint64_t a1, double a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    double v7 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      ++v6;
      [v8 size];
      double v11 = v10;

      double v7 = v7 + v11 + a2;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_10013861C()
{
  unint64_t result = qword_1009855C0;
  if (!qword_1009855C0)
  {
    type metadata accessor for PlatformSelectorViewLayout();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009855C0);
  }
  return result;
}

void *sub_100138674(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for SupplementaryAppPlatform();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v61 = v2;
  uint64_t v62 = v3;
  __chkstk_darwin(v2);
  uint64_t v60 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v59 = (char *)&v47 - v6;
  uint64_t v53 = type metadata accessor for AppPlatform();
  uint64_t v7 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v52 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = _swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_3;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  if (!v9) {
    goto LABEL_34;
  }
LABEL_3:
  uint64_t v10 = 0;
  unint64_t v47 = a1 + 32;
  unint64_t v48 = a1;
  unint64_t v50 = (void (**)(char *, uint64_t))(v7 + 8);
  unint64_t v51 = a1 & 0xC000000000000001;
  uint64_t v57 = v62 + 32;
  uint64_t v58 = v62 + 16;
  uint64_t v56 = v62 + 8;
  uint64_t v49 = v9;
  while (1)
  {
    if (v51)
    {
      uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v12 = __OFADD__(v10, 1);
      uint64_t v13 = v10 + 1;
      if (v12) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v11 = *(void *)(v47 + 8 * v10);
      swift_retain();
      BOOL v12 = __OFADD__(v10, 1);
      uint64_t v13 = v10 + 1;
      if (v12)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    uint64_t v14 = v52;
    MediaPlatform.appPlatform.getter();
    uint64_t v7 = AppPlatform.rawValue.getter();
    uint64_t v16 = v15;
    (*v50)(v14, v53);
    uint64_t v17 = MediaPlatform.systemImageName.getter();
    uint64_t v19 = v18;
    uint64_t v20 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_1000ACCB0(0, v20[2] + 1, 1, v20);
    }
    unint64_t v22 = v20[2];
    unint64_t v21 = v20[3];
    uint64_t v55 = v13;
    if (v22 >= v21 >> 1) {
      uint64_t v20 = sub_1000ACCB0((void *)(v21 > 1), v22 + 1, 1, v20);
    }
    objc_super v20[2] = v22 + 1;
    uint64_t v23 = &v20[4 * v22];
    void v23[4] = v7;
    v23[5] = v16;
    v23[6] = v17;
    v23[7] = v19;
    uint64_t v67 = v20;
    uint64_t v54 = v11;
    uint64_t v24 = dispatch thunk of MediaPlatform.supplementaryAppPlatforms.getter();
    int64_t v25 = *(void *)(v24 + 16);
    if (v25) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v40 = _swiftEmptyArrayStorage;
LABEL_4:
    sub_1000E3998((uint64_t)v40);
    swift_release();
    uint64_t v10 = v55;
    if (v55 == v49)
    {
      swift_bridgeObjectRelease();
      return v67;
    }
  }
  int v66 = _swiftEmptyArrayStorage;
  sub_1001298B8(0, v25, 0);
  unint64_t result = (void *)sub_100136BC4(v24);
  a1 = (unint64_t)result;
  uint64_t v7 = v27;
  char v29 = v28 & 1;
  uint64_t v63 = v24;
  uint64_t v64 = v24 + 56;
  while ((v29 & 1) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0 || (uint64_t)a1 >= 1 << *(unsigned char *)(v24 + 32))
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (((*(void *)(v64 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a1) & 1) == 0) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(v24 + 36) != v7) {
      goto LABEL_31;
    }
    uint64_t v30 = *(void *)(v24 + 48);
    uint64_t v31 = v61;
    uint64_t v32 = v62;
    double v33 = v59;
    (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v59, v30 + *(void *)(v62 + 72) * a1, v61);
    NSString v34 = v60;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v60, v33, v31);
    uint64_t v35 = SupplementaryAppPlatform.rawValue.getter();
    uint64_t v65 = v36;
    uint64_t v37 = SupplementaryAppPlatform.systemImageName.getter();
    uint64_t v39 = v38;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    uint64_t v40 = v66;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1001298B8(0, v40[2] + 1, 1);
      uint64_t v40 = v66;
    }
    unint64_t v42 = v40[2];
    unint64_t v41 = v40[3];
    if (v42 >= v41 >> 1)
    {
      sub_1001298B8(v41 > 1, v42 + 1, 1);
      uint64_t v40 = v66;
    }
    void v40[2] = v42 + 1;
    double v43 = &v40[4 * v42];
    uint64_t v44 = v65;
    v43[4] = v35;
    uint64_t v43[5] = v44;
    v43[6] = v37;
    v43[7] = v39;
    uint64_t v24 = v63;
    unint64_t result = (void *)sub_100136C64(a1, v7, 0, v63);
    a1 = (unint64_t)result;
    uint64_t v7 = v45;
    char v29 = v46 & 1;
    if (!--v25)
    {
      sub_100138C64((uint64_t)result, v45, v29);
      swift_bridgeObjectRelease();
      a1 = v48;
      goto LABEL_4;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100138B94()
{
  unint64_t result = qword_1009855D8;
  if (!qword_1009855D8)
  {
    sub_100078F30(&qword_1009855D0);
    sub_100138C08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009855D8);
  }
  return result;
}

unint64_t sub_100138C08()
{
  unint64_t result = qword_1009855E0;
  if (!qword_1009855E0)
  {
    sub_100078F30(&qword_1009855E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009855E0);
  }
  return result;
}

uint64_t sub_100138C64(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for PlatformSelectorView.Item(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PlatformSelectorView.Item(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PlatformSelectorView.Item(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlatformSelectorView.Item(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatformSelectorView.Item(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatformSelectorView.Item()
{
  return &type metadata for PlatformSelectorView.Item;
}

unint64_t sub_100138E04()
{
  unint64_t result = qword_1009855F0;
  if (!qword_1009855F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009855F0);
  }
  return result;
}

uint64_t sub_100138E58()
{
  return sub_10013A0A4(&qword_1009855F8, (void (*)(uint64_t))type metadata accessor for PlaceholderCollectionViewCell);
}

uint64_t sub_100138EA0()
{
  return Shelf.placeholderContentType.getter();
}

double sub_100138EC8(uint64_t a1)
{
  uint64_t v85 = type metadata accessor for SmallStoryCardLayout.Metrics();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (uint64_t)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for AspectRatio();
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v80 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout.Metrics();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v91 = *(void *)(v5 - 8);
  uint64_t v92 = v5;
  __chkstk_darwin(v5);
  uint64_t v90 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v89 = (char *)&v80 - v8;
  uint64_t v9 = type metadata accessor for BrickLayout.Metrics();
  uint64_t v94 = *(void *)(v9 - 8);
  uint64_t v95 = v9;
  __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ShelfLayoutContext();
  uint64_t v97 = *(void *)(v11 - 8);
  uint64_t v98 = v11;
  __chkstk_darwin(v11);
  uint64_t v96 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MediumLockupLayout.Metrics();
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  __chkstk_darwin(v13);
  uint64_t v99 = (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PageGrid();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v103 = v15;
  uint64_t v104 = v16;
  __chkstk_darwin(v15);
  uint64_t v102 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100082C28((uint64_t *)&unk_1009A35C0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100082C28((uint64_t *)&unk_100986D30);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Shelf.ContentType();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  char v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v80 - v30;
  swift_getKeyPath();
  uint64_t v105 = a1;
  ItemLayoutContext.subscript.getter();
  swift_release();
  swift_getKeyPath();
  ReadOnlyLens.subscript.getter();
  uint64_t v32 = v26;
  swift_release();
  uint64_t v33 = v21;
  uint64_t v34 = v25;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v20, 1, v25) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v31, v20, v25);
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v28, v31, v25);
    int v36 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v28, v25);
    uint64_t v37 = v31;
    if (v36 == enum case for Shelf.ContentType.smallLockup(_:))
    {
      swift_getKeyPath();
      uint64_t v38 = v102;
      ItemLayoutContext.subscript.getter();
      swift_release();
      PageGrid.componentMeasuringSize(spanning:)();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v38, v103);
      if (qword_100980610 != -1) {
        swift_once();
      }
      uint64_t v39 = type metadata accessor for SmallLockupLayout.Metrics();
      sub_100087728(v39, (uint64_t)qword_1009E7358);
      sub_1000F3FC0();
      type metadata accessor for SmallLockupLayout();
      uint64_t v40 = (unint64_t *)&unk_100985620;
      unint64_t v41 = &type metadata accessor for SmallLockupLayout;
LABEL_14:
      sub_10013A0A4(v40, (void (*)(uint64_t))v41);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)();
      double v35 = v48;
LABEL_15:
      swift_unknownObjectRelease();
      goto LABEL_16;
    }
    if (v36 == enum case for Shelf.ContentType.mediumLockup(_:))
    {
      swift_getKeyPath();
      unint64_t v42 = v102;
      ItemLayoutContext.subscript.getter();
      swift_release();
      PageGrid.componentMeasuringSize(spanning:)();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v42, v103);
      type metadata accessor for MediumLockupCollectionViewCell();
      swift_getKeyPath();
      ItemLayoutContext.subscript.getter();
      swift_release();
      double v43 = v106;
      uint64_t v44 = v99;
      sub_10065BA5C(v99);

      sub_1000F3FC0();
      type metadata accessor for MediumLockupLayout();
      sub_10013A0A4(&qword_100985618, (void (*)(uint64_t))&type metadata accessor for MediumLockupLayout);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)();
      double v35 = v45;
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v44, v101);
      goto LABEL_16;
    }
    if (v36 == enum case for Shelf.ContentType.largeLockup(_:))
    {
      swift_getKeyPath();
      char v46 = v102;
      ItemLayoutContext.subscript.getter();
      swift_release();
      PageGrid.componentMeasuringSize(spanning:)();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v46, v103);
      if (qword_10097E770 != -1) {
        swift_once();
      }
      uint64_t v47 = type metadata accessor for LargeLockupLayout.Metrics();
      sub_100087728(v47, (uint64_t)qword_1009E2020);
      sub_1000F3FC0();
      type metadata accessor for LargeLockupLayout();
      uint64_t v40 = (unint64_t *)&unk_100985610;
      unint64_t v41 = &type metadata accessor for LargeLockupLayout;
      goto LABEL_14;
    }
    if (v36 == enum case for Shelf.ContentType.ribbonBar(_:))
    {
      unint64_t v50 = v96;
      ItemLayoutContext.parentShelfLayoutContext.getter();
      double v35 = sub_1006A9B54();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v50, v98);
      goto LABEL_16;
    }
    if (v36 == enum case for Shelf.ContentType.videoCard(_:))
    {
      swift_getKeyPath();
      unint64_t v51 = v102;
      ItemLayoutContext.subscript.getter();
      swift_release();
      PageGrid.componentMeasuringSize(spanning:)();
      double v53 = v52;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v51, v103);
      if (qword_10097E4E0 != -1) {
        swift_once();
      }
      sub_1000F3FC0();
      swift_getObjectType();
      type metadata accessor for VideoCardView();
      sub_10022F000(v53);
      double v35 = v54;
      goto LABEL_15;
    }
    if (v36 == enum case for Shelf.ContentType.brick(_:))
    {
      swift_getKeyPath();
      uint64_t v55 = v89;
      ItemLayoutContext.subscript.getter();
      swift_release();
      uint64_t v56 = v90;
      static Shelf.PresentationHints.showSupplementaryText.getter();
      sub_10013A0A4((unint64_t *)&unk_100982850, (void (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints);
      uint64_t v57 = v92;
      char v58 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      uint64_t v59 = *(void (**)(char *, uint64_t))(v91 + 8);
      v59(v56, v57);
      v59(v55, v57);
      if (v58)
      {
        if (qword_10097E1F0 != -1) {
          swift_once();
        }
        uint64_t v60 = qword_1009E1540;
      }
      else
      {
        if (qword_10097E1F8 != -1) {
          swift_once();
        }
        uint64_t v60 = qword_1009E1558;
      }
      uint64_t v64 = v95;
      uint64_t v65 = sub_100087728(v95, (uint64_t)v60);
      uint64_t v67 = v93;
      uint64_t v66 = v94;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v65, v64);
      swift_getKeyPath();
      uint64_t v68 = v102;
      ItemLayoutContext.subscript.getter();
      swift_release();
      PageGrid.componentMeasuringSize(spanning:)();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v68, v103);
      sub_1000F3FC0();
      type metadata accessor for BrickLayout();
      sub_10013A0A4(&qword_100985608, (void (*)(uint64_t))&type metadata accessor for BrickLayout);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)();
      double v35 = v69;
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v64);
      goto LABEL_16;
    }
    if (v36 == enum case for Shelf.ContentType.categoryBrick(_:))
    {
      swift_getKeyPath();
      uint64_t v61 = v102;
      ItemLayoutContext.subscript.getter();
      swift_release();
      PageGrid.componentMeasuringSize(spanning:)();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v61, v103);
      uint64_t v62 = v86;
      static ChartOrCategoryBrickStyle.tileMetrics.getter();
      sub_1000F3FC0();
      type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout();
      sub_10013A0A4(&qword_100985600, (void (*)(uint64_t))&type metadata accessor for ChartOrCategoryBrickCollectionViewCellLayout);
      dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)();
      double v35 = v63;
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v62, v88);
      goto LABEL_16;
    }
    if (v36 == enum case for Shelf.ContentType.appTrailerLockup(_:))
    {
      type metadata accessor for AppTrailerLockupCollectionViewCell();
    }
    else
    {
      if (v36 != enum case for Shelf.ContentType.screenshotsLockup(_:))
      {
        if (v36 == enum case for Shelf.ContentType.smallStoryCard(_:))
        {
          swift_getKeyPath();
          uint64_t v71 = v102;
          ItemLayoutContext.subscript.getter();
          swift_release();
          PageGrid.componentMeasuringSize(spanning:)();
          (*(void (**)(char *, uint64_t))(v104 + 8))(v71, v103);
          swift_getKeyPath();
          ItemLayoutContext.subscript.getter();
          swift_release();
          uint64_t v72 = v106;
          uint64_t v73 = v83;
          sub_1001F5980(v106, v83);
          static SmallStoryCardLayout.estimatedMeasurements(fitting:using:with:)();
          double v35 = v74;
          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v73, v85);
        }
        else if (v36 == enum case for Shelf.ContentType.posterLockup(_:))
        {
          uint64_t v75 = v96;
          ItemLayoutContext.parentShelfLayoutContext.getter();
          uint64_t v76 = v80;
          static PosterLockupLayout.aspectRatio.getter();
          uint64_t v77 = v102;
          ShelfLayoutContext.contentPageGrid.getter();
          PageGrid.smallestPossibleColumnWidth.getter();
          (*(void (**)(char *, uint64_t))(v104 + 8))(v77, v103);
          AspectRatio.height(fromWidth:)();
          double v35 = v78;
          (*(void (**)(char *, uint64_t))(v81 + 8))(v76, v82);
          (*(void (**)(char *, uint64_t))(v97 + 8))(v75, v98);
        }
        else
        {
          if (v36 != enum case for Shelf.ContentType.appPromotion(_:))
          {
            uint64_t v79 = *(void (**)(char *, uint64_t))(v26 + 8);
            v79(v31, v25);
            v79(v28, v25);
            return 0.0;
          }
          double v35 = sub_10013E4BC(v105, 1);
        }
LABEL_16:
        (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v34);
        return v35;
      }
      type metadata accessor for ScreenshotsLockupCollectionViewCell();
    }
    uint64_t v70 = v96;
    ItemLayoutContext.parentShelfLayoutContext.getter();
    double v35 = sub_100112C98();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v70, v98);
    goto LABEL_16;
  }
  sub_10013A038((uint64_t)v20);
  return 0.0;
}

uint64_t sub_10013A014()
{
  return Shelf.placeholderContentType.getter();
}

uint64_t sub_10013A038(uint64_t a1)
{
  uint64_t v2 = sub_100082C28((uint64_t *)&unk_1009A35C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10013A0A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013A0EC()
{
  uint64_t v0 = type metadata accessor for AspectRatio();
  sub_100042444(v0, qword_1009E1320);
  sub_100087728(v0, (uint64_t)qword_1009E1320);
  return AspectRatio.init(_:_:)();
}

char *sub_10013A140()
{
  id ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_isCollapsing] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView;
  id v3 = objc_allocWithZone((Class)UIImageView);
  uint64_t v4 = v0;
  *(void *)&v0[v2] = [v3 init];
  uint64_t v5 = OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView;
  if (qword_100980098 != -1) {
    swift_once();
  }
  v17[2] = xmmword_1009E66D0;
  v17[3] = unk_1009E66E0;
  uint64_t v18 = qword_1009E66F0;
  v17[0] = xmmword_1009E66B0;
  v17[1] = unk_1009E66C0;
  id v6 = objc_allocWithZone((Class)type metadata accessor for AppPromotionIAPFallbackView());
  *(void *)&v4[v5] = sub_1005E94B4(v17, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit();
  uint64_t v7 = &v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_mediaOverlayStyle];
  uint64_t v8 = enum case for MediaOverlayStyle.matchSystem(_:);
  uint64_t v9 = type metadata accessor for MediaOverlayStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = &v4[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;

  v16.id receiver = v4;
  v16.super_class = ObjectType;
  uint64_t v11 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = *(void **)&v11[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
  uint64_t v13 = v11;
  [v12 setContentMode:2];
  [v12 setClipsToBounds:1];
  [v12 setAccessibilityIgnoresInvertColors:1];
  [v13 addSubview:v12];
  uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView];
  [v14 setContentMode:2];
  [v14 setClipsToBounds:1];
  [v13 addSubview:v14];

  return v13;
}

void sub_10013A500()
{
  id ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  id v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32.id receiver = v0;
  v32.super_class = ObjectType;
  [super frame:v4];
  uint64_t v7 = enum case for FloatingPointRoundingRule.up(_:);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v8(v6, enum case for FloatingPointRoundingRule.up(_:), v2);
  CGRect.rounded(_:)();
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v6, v2);
  v8(v6, v7, v2);
  CGRect.rounded(_:)();
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  v17(v6, v2);
  v33.origin.CGFloat x = v10;
  v33.origin.CGFloat y = v12;
  v33.size.CGFloat width = v14;
  v33.size.CGFloat height = v16;
  v34.origin.CGFloat x = v19;
  v34.origin.CGFloat y = v21;
  v34.size.CGFloat width = v23;
  v34.size.CGFloat height = v25;
  if (!CGRectEqualToRect(v33, v34)
    && (v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_isCollapsing] & 1) == 0)
  {
    uint64_t v26 = *(void (**)(double, double))&v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
    if (v26)
    {
      swift_retain();
      [v0 bounds];
      v8(v6, v7, v2);
      CGSize.rounded(_:)();
      double v28 = v27;
      double v30 = v29;
      v17(v6, v2);
      id v31 = [v0 traitCollection];
      v26(v28, v30);
      sub_10006012C((uint64_t)v26);
    }
  }
}

id sub_10013A7D0()
{
  v34.id receiver = v0;
  v34.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  int v1 = v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_isCollapsing];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = (void *)Strong;
  if (v1 == 1)
  {
    if (Strong)
    {
      [v0 bounds];
      double v5 = v4;
      double v7 = v6;
      uint64_t v8 = swift_unknownObjectWeakLoadStrong();
      if (v8
        && (double v9 = (void *)v8,
            id v10 = *(id *)(v8 + qword_10099B108),
            v9,
            id v11 = [v10 image],
            v10,
            v11))
      {
        [v11 size];
        double v13 = v12;
        double v15 = v14;
      }
      else
      {
        [v0 bounds];
        double v13 = v18;
        double v15 = v19;
      }
      [v3 setFrame:v5, v7, v13, v15];
    }
    double v20 = *(void **)&v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    [v0 bounds];
    double v22 = v21;
    double v24 = v23;
    id v25 = [v20 image];
    if (v25)
    {
      uint64_t v26 = v25;
      [v25 size];
      double v28 = v27;
      double v30 = v29;
    }
    else
    {
      [v0 bounds];
      double v28 = v31;
      double v30 = v32;
    }
    [v20 setFrame:v22, v24, v28, v30];
    uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView];
    [v20 frame];
  }
  else
  {
    if (Strong)
    {
      [v0 bounds];
      [v3 setFrame:];
    }
    CGFloat v16 = *(void **)&v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    [v0 bounds];
    [v16 setFrame:];
    uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView];
    [v0 bounds];
  }
  return [v17 setFrame:];
}

void sub_10013AA84()
{
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v1 = *(void **)&Strong[qword_10099B130];
    if (v1)
    {
      id v5 = Strong;
      uint64_t v2 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_10013CCB8;
      aBlock[5] = v2;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100506FB4;
      aBlock[3] = &unk_1008BD908;
      uint64_t v3 = _Block_copy(aBlock);
      id v4 = v1;
      swift_release();
      [v4 enterFullScreenAnimated:1 completionHandler:v3];
      _Block_release(v3);
    }
    else
    {
    }
  }
}

void sub_10013AC10()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10042EF38(0, 0);
    swift_unknownObjectRelease();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + qword_10099B130);
    id v3 = v2;

    if (v2)
    {
      [v3 setShowsPlaybackControls:1];
    }
  }
}

void *sub_10013ACD4()
{
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v1 = [result traitCollection];
    char v2 = UITraitCollection.isSizeClassRegular.getter();

    if (v2)
    {
      return (void *)swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v3 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v3;
      *(void *)(v4 + 24) = 0x3FF0000000000000;
      id v5 = self;
      v7[4] = sub_10013C620;
      v7[5] = v4;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      void v7[2] = sub_1000162D4;
      v7[3] = &unk_1008BD840;
      double v6 = _Block_copy(v7);
      swift_retain();
      swift_release();
      [v5 animateWithDuration:4 delay:v6 options:0 animations:0.3 completion:0.0];
      swift_release();
      _Block_release(v6);
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_10013AE84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100082C28((uint64_t *)&unk_1009856B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v59 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v58 = (char *)&v54 - v9;
  uint64_t v10 = sub_100082C28((uint64_t *)&unk_100991FE0);
  __chkstk_darwin(v10 - 8);
  uint64_t v57 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for VideoControls();
  __chkstk_darwin(v12 - 8);
  __chkstk_darwin(v13);
  uint64_t v14 = sub_100082C28((uint64_t *)&unk_1009856C0);
  __chkstk_darwin(v14 - 8);
  CGFloat v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for VideoFillMode();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  double v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for VideoConfiguration();
  __n128 v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v54 = v23;
    uint64_t v55 = v22;
    uint64_t v56 = a2;
    double v27 = *(void (**)(char *, void, uint64_t, __n128))(v18 + 104);
    uint64_t v60 = v26;
    v27(v20, enum case for VideoFillMode.scaleAspectFill(_:), v17, v24);
    swift_retain();
    Video.preview.getter();
    Artwork.size.getter();
    AspectRatio.init(_:_:)();
    swift_release();
    uint64_t v28 = type metadata accessor for AspectRatio();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v16, 0, 1, v28);
    Video.playbackControls.getter();
    Video.autoPlayPlaybackControls.getter();
    Video.canPlayFullScreen.getter();
    Video.allowsAutoPlay.getter();
    Video.looping.getter();
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)();
    type metadata accessor for VideoViewManager();
    BaseObjectGraph.inject<A>(_:)();
    Video.playbackId.getter();
    uint64_t v29 = (uint64_t)v57;
    Video.videoUrl.getter();
    uint64_t v30 = type metadata accessor for URL();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
    uint64_t v31 = (uint64_t)v58;
    Video.templateMediaEvent.getter();
    uint64_t v32 = (uint64_t)v59;
    Video.templateClickEvent.getter();
    type metadata accessor for VideoView();
    sub_10013C118(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
    CGRect v33 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)();
    sub_100082BCC(v32, (uint64_t *)&unk_1009856B0);
    sub_100082BCC(v31, (uint64_t *)&unk_1009856B0);
    sub_100082BCC(v29, (uint64_t *)&unk_100991FE0);
    sub_100082BCC((uint64_t)v61, &qword_100981560);
    sub_10013C354();

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v35 = (void *)Strong;
      Video.preview.getter();
      int v36 = (void *)Artwork.backgroundColor.getter();
      swift_release();
      [v35 setBackgroundColor:v36];
    }
    Video.preview.getter();
    uint64_t v37 = (void *)Artwork.backgroundColor.getter();
    swift_release();
    if (!v37)
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      uint64_t v37 = (void *)static UIColor.placeholderBackground.getter();
    }
    a2 = v56;
    [v3 setBackgroundColor:v37];
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v54 + 8))(v60, v55);
    uint64_t v38 = (id *)&v3[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    BOOL v39 = a2 == 0;
  }
  else if (a2)
  {
    swift_retain();
    uint64_t v40 = Artwork.backgroundColor.getter();
    if (!v40)
    {
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      uint64_t v40 = static UIColor.placeholderBackground.getter();
    }
    unint64_t v41 = (void *)v40;
    [v3 setBackgroundColor:v40];

    swift_release();
    BOOL v39 = 0;
    uint64_t v38 = (id *)&v3[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
  }
  else
  {
    uint64_t v38 = (id *)&v3[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    BOOL v39 = 1;
  }
  [*v38 setHidden:v39];
  unint64_t v42 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v42)
  {
    double v43 = v42;
    [v42 setHidden:a1 == 0];
  }
  [*(id *)&v3[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView] setHidden:1];
  uint64_t v44 = sub_10013B5F0(a2, a1);
  double v45 = (void (**)(double, double))&v3[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
  uint64_t v46 = *(void *)&v3[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
  *double v45 = (void (*)(double, double))v44;
  v45[1] = v47;
  sub_10006012C(v46);
  double v48 = *v45;
  if (*v45)
  {
    swift_retain();
    [v3 bounds];
    double v50 = v49;
    double v52 = v51;
    id v53 = [v3 traitCollection];
    v48(v50, v52);
    sub_10006012C((uint64_t)v48);
  }
}

void (*sub_10013B5F0(uint64_t a1, uint64_t a2))(uint64_t a1, double a2, double a3)
{
  uint64_t ObjectType = swift_getObjectType();
  if (a2)
  {
    a1 = Video.preview.getter();
LABEL_5:
    BOOL v5 = a2 != 0;
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = swift_allocObject();
    *(unsigned char *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v6;
    *(void *)(v8 + 32) = v7;
    *(void *)(v8 + 40) = a1;
    *(void *)(v8 + 48) = ObjectType;
    return sub_10013C6AC;
  }
  if (a1)
  {
    swift_retain();
    goto LABEL_5;
  }
  return 0;
}

uint64_t sub_10013B6EC()
{
  id v1 = v0;
  uint64_t v2 = ObjectGraph.artworkLoader.getter();
  if (!v2) {
    goto LABEL_4;
  }
  uint64_t v3 = v2;
  uint64_t v4 = OfferItemDetailPage.artwork.getter();
  swift_release();
  if (v4)
  {
    swift_release();
LABEL_4:
    uint64_t v5 = OfferItemDetailPage.video.getter();
    uint64_t v6 = OfferItemDetailPage.artwork.getter();
    sub_10013AE84(v5, v6);
    goto LABEL_6;
  }
  [*(id *)&v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView] setHidden:1];
  uint64_t v7 = *(char **)&v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView];
  OfferItemDetailPage.offerItem.getter();
  sub_1005E9E6C();
  swift_release();
  uint64_t v8 = OfferItemDetailPage.offerItem.getter();
  [v1 bounds];
  sub_10013C724(v8, v3, v7);
LABEL_6:
  swift_release();

  return swift_release();
}

void sub_10013B80C(double a1, double a2, uint64_t a3, char a4)
{
  uint64_t v7 = type metadata accessor for Artwork.Crop();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a4 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = (char *)Strong;
      uint64_t v13 = &OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView;
LABEL_7:
      id v11 = *(id *)&v12[*v13];

      if (a1 != 0.0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
    id v11 = 0;
    goto LABEL_10;
  }
  swift_beginAccess();
  id v11 = (id)swift_unknownObjectWeakLoadStrong();
  if (!v11)
  {
LABEL_10:
    if (a1 != 0.0) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  uint64_t v12 = (char *)swift_unknownObjectWeakLoadStrong();

  if (v12)
  {
    uint64_t v13 = &qword_10099B108;
    goto LABEL_7;
  }
  id v11 = 0;
  if (a1 != 0.0) {
    goto LABEL_14;
  }
LABEL_11:
  if (a2 == 0.0) {
    goto LABEL_12;
  }
LABEL_14:
  if (!v11) {
    return;
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
LABEL_12:

    return;
  }
  id v11 = v11;
  uint64_t v15 = ObjectGraph.artworkLoader.getter();
  swift_release();
  if (!v15)
  {

    goto LABEL_12;
  }
  if (qword_10097E180 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for AspectRatio();
  sub_100087728(v16, (uint64_t)qword_1009E1320);
  AspectRatio.height(fromWidth:)();
  Artwork.crop.getter();
  uint64_t v17 = Artwork.Crop.preferredContentMode.getter();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  Artwork.config(_:mode:prefersLayeredImage:)();
  [v11 setContentMode:v17];
  sub_100084CF0(0, (unint64_t *)&qword_10098A7F0);
  sub_10013C6BC();
  ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();

  swift_release();
  swift_release();
}

uint64_t sub_10013BBE8()
{
  return type metadata accessor for AppPromotionMediaContainerView();
}

uint64_t type metadata accessor for AppPromotionMediaContainerView()
{
  uint64_t result = qword_100985688;
  if (!qword_100985688) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10013BC3C()
{
  uint64_t result = type metadata accessor for MediaOverlayStyle();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10013BD04()
{
  return swift_unknownObjectWeakLoadStrong();
}

void sub_10013BD14(void *a1)
{
  sub_10013C354();
}

void (*sub_10013BD4C(uint64_t *a1))(id *a1, char a2)
{
  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong();
  return sub_10013BDA0;
}

void sub_10013BDA0(id *a1, char a2)
{
  id v4 = *a1;
  if (a2)
  {
    id v2 = v4;
    sub_10013C354();

    uint64_t v3 = v2;
  }
  else
  {
    sub_10013C354();
    uint64_t v3 = v4;
  }
}

uint64_t sub_10013BE14()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_10013C118(&qword_1009856A8, (void (*)(uint64_t))type metadata accessor for AppPromotionMediaContainerView);

  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_10013BE88(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_10013C118(&qword_1009856A8, (void (*)(uint64_t))type metadata accessor for AppPromotionMediaContainerView);

  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

void (*sub_10013BF14(void *a1))(void *a1)
{
  swift_getObjectType();
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_10013C118(&qword_1009856A8, (void (*)(uint64_t))type metadata accessor for AppPromotionMediaContainerView);
  v2[4] = VideoViewProviding.someVideoView.modify();
  return sub_1000D8184;
}

uint64_t sub_10013BFB8(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v2 = [a1 superview];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
  id v4 = v1;
  id v5 = v3;
  char v6 = static NSObject.== infix(_:_:)();

  return v6 & 1;
}

id sub_10013C050()
{
  v2.id receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super frame];
}

uint64_t sub_10013C088()
{
  return sub_10013C118(&qword_100985698, (void (*)(uint64_t))type metadata accessor for AppPromotionMediaContainerView);
}

uint64_t sub_10013C0D0()
{
  return sub_10013C118(&qword_1009856A0, (void (*)(uint64_t))type metadata accessor for AppPromotionMediaContainerView);
}

uint64_t sub_10013C118(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013C160()
{
  return sub_10013C118(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
}

void sub_10013C1A8()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_isCollapsing] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkFallbackView;
  if (qword_100980098 != -1) {
    swift_once();
  }
  v9[2] = xmmword_1009E66D0;
  _OWORD v9[3] = unk_1009E66E0;
  uint64_t v10 = qword_1009E66F0;
  v9[0] = xmmword_1009E66B0;
  v9[1] = unk_1009E66C0;
  id v4 = objc_allocWithZone((Class)type metadata accessor for AppPromotionIAPFallbackView());
  *(void *)&v1[v3] = sub_1005E94B4(v9, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit();
  id v5 = &v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_mediaOverlayStyle];
  uint64_t v6 = enum case for MediaOverlayStyle.matchSystem(_:);
  uint64_t v7 = type metadata accessor for MediaOverlayStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = &v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_refetchArtworkBlock];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10013C354()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_10013C118(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
    id v4 = [v3 superview];
    if (v4)
    {
      id v5 = v4;
      sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
      uint64_t v6 = v1;
      id v7 = v5;
      LOBYTE(v5) = static NSObject.== infix(_:_:)();

      if (v5)
      {
        uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v8)
        {
          uint64_t v9 = v8;
          [v8 removeFromSuperview];
        }
        [*(id *)&v6[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView] setHidden:0];
      }
    }
    else
    {
    }
  }
  swift_unknownObjectWeakAssign();
  uint64_t v10 = swift_unknownObjectWeakLoadStrong();
  if (v10)
  {
    id v11 = *(void **)&v1[OBJC_IVAR____TtC8AppStore30AppPromotionMediaContainerView_artworkView];
    uint64_t v15 = (unsigned char *)v10;
    [v11 setHidden:1];
    v15[qword_1009E5B38] = 1;
    *(void *)&v15[qword_10099B0F8 + 8] = &off_1008BD7D8;
    swift_unknownObjectWeakAssign();
    id v12 = [v1 traitCollection];
    char v13 = UITraitCollection.isSizeClassRegular.getter();

    double v14 = 8.0;
    if (v13) {
      double v14 = 12.0;
    }
    [v15 _setCornerRadius:v14];
    [v1 insertSubview:v15 aboveSubview:v11];
    [v1 setNeedsLayout];
  }
}

uint64_t sub_10013C5B0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013C5E8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10013C620()
{
  sub_10042F154(*(double *)(v0 + 24));
}

uint64_t sub_10013C62C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013C664()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10013C6AC(uint64_t a1, double a2, double a3)
{
  sub_10013B80C(a2, a3, a1, *(unsigned char *)(v3 + 16));
}

unint64_t sub_10013C6BC()
{
  unint64_t result = qword_1009856D0;
  if (!qword_1009856D0)
  {
    sub_100084CF0(255, (unint64_t *)&qword_10098A7F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009856D0);
  }
  return result;
}

uint64_t sub_10013C724(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = type metadata accessor for Artwork.Style();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for Artwork.Crop();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[3] = type metadata accessor for OfferItem();
  v34[4] = &protocol witness table for AppPromotion;
  v34[0] = a1;
  sub_100082C6C((uint64_t)v34, (uint64_t)v33);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_10098D100);
  if (swift_dynamicCast())
  {
    uint64_t v11 = v32;
    uint64_t v12 = OfferItem.iapArtwork.getter();
    OfferItem.offerLockup.getter();
    type metadata accessor for InAppPurchaseLockup();
    uint64_t v13 = swift_dynamicCastClass();
    uint64_t v29 = v11;
    if (v13)
    {
      InAppPurchaseLockup.parent.getter();
      uint64_t v14 = Lockup.icon.getter();
      swift_release();
    }
    else
    {
      swift_release();
      OfferItem.offerLockup.getter();
      uint64_t v14 = Lockup.icon.getter();
    }
    swift_release();
    uint64_t v30 = a2;
    if (v14)
    {
      swift_retain();
      Artwork.crop.getter();
      Artwork.Crop.preferredContentMode.getter();
      uint64_t v31 = v8;
      uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
      v15(v10, v7);
      Artwork.config(_:mode:prefersLayeredImage:)();
      uint64_t v28 = a3;
      uint64_t v16 = *(void **)&a3[qword_1009A0498];
      Artwork.style.getter();
      ArtworkView.style.setter();
      [v16 setContentMode:Artwork.contentMode.getter()];
      ArtworkLoaderConfig.size.getter();
      ArtworkView.imageSize.setter();
      if (!Artwork.backgroundColor.getter())
      {
        sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
        static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter();
      Artwork.crop.getter();
      uint64_t v17 = Artwork.Crop.preferredContentMode.getter();
      v15(v10, v7);
      [v16 setContentMode:v17];
      type metadata accessor for ArtworkView();
      sub_10013C118((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
      swift_release();
      swift_release();
      uint64_t v8 = v31;
      a3 = v28;
    }
    if (v12)
    {
      swift_retain();
      Artwork.crop.getter();
      Artwork.Crop.preferredContentMode.getter();
      uint64_t v18 = *(char **)(v8 + 8);
      uint64_t v31 = v8 + 8;
      uint64_t v28 = v18;
      ((void (*)(char *, uint64_t))v18)(v10, v7);
      Artwork.config(_:mode:prefersLayeredImage:)();
      uint64_t v19 = *(void *)&a3[qword_1009A0490];
      uint64_t v20 = OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView;
      id v21 = *(id *)(v19 + OBJC_IVAR____TtC8AppStore17InAppPurchaseView_artworkView);
      Artwork.style.getter();
      ArtworkView.style.setter();
      [v21 setContentMode:Artwork.contentMode.getter()];
      ArtworkLoaderConfig.size.getter();
      ArtworkView.imageSize.setter();
      if (!Artwork.backgroundColor.getter())
      {
        sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
        static UIColor.placeholderBackground.getter();
      }
      ArtworkView.backgroundColor.setter();

      id v22 = *(id *)(v19 + v20);
      Artwork.crop.getter();
      uint64_t v23 = Artwork.Crop.preferredContentMode.getter();
      ((void (*)(char *, uint64_t))v28)(v10, v7);
      [v22 setContentMode:v23];

      __n128 v24 = *(void **)(v19 + v20);
      type metadata accessor for ArtworkView();
      sub_10013C118((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
      id v25 = v24;
      ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
      swift_release();
      swift_release();

      swift_release_n();
    }
    else
    {
      swift_release();
    }
    swift_release();
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v34);
}

void sub_10013CCB8()
{
}

BOOL sub_10013CCD0(void **a1, char **a2)
{
  return sub_10013E190(*a1, *a2);
}

id sub_10013CCDC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode] = 1;
  v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_isCollapsing] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_mediaOverlayStyle];
  uint64_t v3 = enum case for MediaOverlayStyle.matchSystem(_:);
  uint64_t v4 = type metadata accessor for MediaOverlayStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104))(v2, v3, v4);
  *(void *)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView] = 0;
  v7.id receiver = v0;
  v7.super_class = ObjectType;
  id v5 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10013CDE8(2);
  sub_10013CDE8(0);
  sub_10013CF2C();
  sub_10013D0D8();

  return v5;
}

void sub_10013CDE8(uint64_t a1)
{
  if (a1 != 1)
  {
    uint64_t v2 = v1;
    if (a1 == 2)
    {
      uint64_t v3 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView;
      if (*(void *)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView]) {
        return;
      }
      id v4 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:0];
      id v5 = *(void **)&v1[v3];
      *(void *)&v1[v3] = v4;

      uint64_t v6 = *(void **)&v1[v3];
      if (!v6) {
        return;
      }
      id v7 = v6;
      [v2 bounds];
      [v7 setFrame:];

      uint64_t v8 = *(void **)&v2[v3];
      if (!v8) {
        return;
      }
    }
    else
    {
      uint64_t v3 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView;
      if (*(void *)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView]) {
        return;
      }
      [v1 bounds];
      id v9 = objc_allocWithZone((Class)type metadata accessor for MediaOverlayGradientBlurView());
      uint64_t v10 = sub_1002B66A4(0);
      uint64_t v11 = *(void **)&v1[v3];
      *(void *)&v1[v3] = v10;

      uint64_t v8 = *(void **)&v1[v3];
      if (!v8) {
        return;
      }
    }
    [v8 setUserInteractionEnabled:0];
    if (*(void *)&v2[v3])
    {
      [v2 insertSubview:atIndex:];
    }
  }
}

void sub_10013CF2C()
{
  uint64_t v1 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode);
  sub_10013E168(v2);
  sub_10013CDE8((uint64_t)v2);
  sub_10013E17C(v2);
  uint64_t v3 = *(void *)(v0 + v1);
  if (v3 == 2)
  {
    id v5 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView);
    if (v5) {
      [v5 setAlpha:0.0];
    }
    uint64_t v6 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView;
    id v7 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView);
    if (v7)
    {
      id v8 = [v7 effect];
      if (!v8)
      {
        id v9 = *(void **)(v0 + v6);
        if (!v9) {
          return;
        }
        uint64_t v10 = self;
        id v11 = v9;
        id v14 = [v10 effectWithStyle:7];
        [v11 setEffect:v14];

        id v8 = v14;
      }
    }
  }
  else
  {
    if (v3 == 1)
    {
      id v4 = *(void **)(v0
                    + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView);
      if (v4) {
        [v4 setAlpha:0.0];
      }
    }
    else
    {
      uint64_t v12 = *(void **)(v0
                     + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView);
      if (v12) {
        [v12 setAlpha:1.0];
      }
    }
    uint64_t v13 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView);
    if (v13)
    {
      [v13 setEffect:0];
    }
  }
}

void sub_10013D0D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MediaOverlayStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_mediaOverlayStyle];
  swift_beginAccess();
  id v7 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v7(v5, v6, v2);
  uint64_t v8 = MediaOverlayStyle.userInterfaceStyle.getter();
  id v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  [v1 setOverrideUserInterfaceStyle:v8];
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView];
  if (v10)
  {
    v7(v5, v6, v2);
    id v11 = v10;
    uint64_t v12 = MediaOverlayStyle.userInterfaceStyle.getter();
    v9(v5, v2);
    [v11 setOverrideUserInterfaceStyle:v12];
  }
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView];
  if (v13)
  {
    v7(v5, v6, v2);
    id v14 = v13;
    uint64_t v15 = MediaOverlayStyle.userInterfaceStyle.getter();
    v9(v5, v2);
    [v14 setOverrideUserInterfaceStyle:v15];
  }
}

void sub_10013D3F4()
{
  if ((v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_isCollapsing] & 1) == 0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode];
    if ((unint64_t)v2 >= 3)
    {
      id v3 = v2;
      [v3 frame];
      double v5 = v4;
      double v7 = v6;
      double v9 = v8;
      double v11 = v10;
      id v12 = [v3 superview];
      [v1 convertRect:v12 fromView:v5];
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      CGFloat v18 = v17;
      CGFloat v20 = v19;

      [v1 bounds];
      double Height = CGRectGetHeight(v58);
      v59.origin.CGFloat x = v14;
      v59.origin.CGFloat y = v16;
      v59.size.CGFloat width = v18;
      v59.size.CGFloat height = v20;
      double MinY = CGRectGetMinY(v59);
      uint64_t v23 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView;
      __n128 v24 = *(char **)&v1[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView];
      if (!v24) {
        goto LABEL_11;
      }
      double v25 = Height - (Height - MinY);
      double v26 = (v25 + -100.0) / Height;
      uint64_t v27 = OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_colorGradientStartY;
      *(double *)&v24[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_colorGradientStartY] = v26;
      uint64_t v28 = *(void **)&v24[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_colorGradientView];
      uint64_t v29 = v24;
      id v30 = [v28 layer];
      self;
      [(id)swift_dynamicCastObjCClassUnconditional() startPoint];
      double v32 = v31;

      double v33 = *(double *)&v24[v27];
      id v34 = [v28 layer];
      self;
      [swift_dynamicCastObjCClassUnconditional() setStartPoint:v32, v33];

      id v35 = [*(id *)&v29[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_secondaryColorGradientView] layer];
      self;
      [swift_dynamicCastObjCClassUnconditional() setStartPoint:v32, v33];

      int v36 = *(char **)&v1[v23];
      if (!v36) {
        goto LABEL_11;
      }
      uint64_t v37 = OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientStartY;
      *(double *)&v36[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientStartY] = v26;
      uint64_t v38 = *(void **)&v36[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientMaskView];
      BOOL v39 = v36;
      id v40 = [v38 layer];
      self;
      [(id)swift_dynamicCastObjCClassUnconditional() startPoint];
      double v42 = v41;

      double v43 = *(double *)&v36[v37];
      id v44 = [v38 layer];
      self;
      [swift_dynamicCastObjCClassUnconditional() setStartPoint:v42, v43];

      double v45 = *(void **)&v1[v23];
      if (!v45) {
        goto LABEL_11;
      }
      double v46 = (v25 + 30.0) / Height;
      id v47 = v45;
      sub_1002B576C(v46);

      double v48 = *(char **)&v1[v23];
      if (v48)
      {
        uint64_t v49 = OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientEndY;
        *(double *)&v48[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientEndY] = v46;
        double v50 = *(void **)&v48[OBJC_IVAR____TtC8AppStore28MediaOverlayGradientBlurView_blurGradientMaskView];
        uint64_t v56 = v48;
        id v51 = [v50 layer];
        self;
        [(id)swift_dynamicCastObjCClassUnconditional() endPoint];
        double v53 = v52;

        double v54 = *(double *)&v48[v49];
        id v55 = [v50 layer];
        self;
        [swift_dynamicCastObjCClassUnconditional() setEndPoint:v53, v54];

        sub_10013E17C(v2);
        sub_10013E17C(v2);
      }
      else
      {
LABEL_11:
        sub_10013E17C(v2);
        sub_10013E17C(v2);
      }
    }
  }
}

void sub_10013D8DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode;
  double v5 = *(char **)(v2 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode);
  *(void *)(v2 + OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode) = a1;
  sub_10013E168(v5);
  sub_10013E168(a1);
  sub_10013E17C(v5);
  double v6 = *(void **)(v2 + v4);
  if (v6 == (void *)2)
  {
    if (v5 != (char *)2) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v6 == (void *)1)
    {
      if (v5 == (char *)1) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    if ((unint64_t)(v5 - 1) < 2) {
      goto LABEL_14;
    }
    if (!v6)
    {
      if (!v5) {
        goto LABEL_15;
      }
      sub_10013E17C(0);
      goto LABEL_14;
    }
    if (!v5
      || (sub_100084CF0(0, (unint64_t *)&qword_1009828E0),
          sub_10013E168(v5),
          sub_10013E168(v6),
          char v7 = static NSObject.== infix(_:_:)(),
          sub_10013E17C(v5),
          sub_10013E17C(v6),
          (v7 & 1) == 0))
    {
LABEL_14:
      sub_10013CF2C();
    }
  }
LABEL_15:
  sub_10013D3F4();
  sub_10013E17C(a1);

  sub_10013E17C(v5);
}

void sub_10013DA04()
{
  v5.id receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_contentBasedProtectionView];
  if (v1)
  {
    id v2 = v1;
    [v0 bounds];
    [v2 setFrame:];
  }
  id v3 = *(void **)&v0[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_fullProtectionView];
  if (v3)
  {
    id v4 = v3;
    [v0 bounds];
    [v4 setFrame:];
  }
  sub_10013D3F4();
}

id sub_10013DB08(uint64_t a1, double a2, double a3)
{
  v29.id receiver = v3;
  v29.super_class = (Class)swift_getObjectType();
  [super hitTest:a1 withEvent:a2];
  if (v7)
  {
    double v8 = *(char **)&v3[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode];
    if ((unint64_t)(v8 - 1) >= 2)
    {
      if (v8)
      {
        sub_10013E168(*(id *)&v3[OBJC_IVAR____TtC8AppStore42AppPromotionScrollableContentContainerView_protectionMode]);
        double v9 = v8;
        [v9 frame];
        double v11 = v10;
        double v13 = v12;
        double v15 = v14;
        double v17 = v16;
        id v18 = [v9 superview];
        [v3 convertRect:v18 fromView:v11 toView:v13];
        CGFloat v20 = v19;
        CGFloat v22 = v21;
        CGFloat v24 = v23;
        CGFloat v26 = v25;

        v30.origin.CGFloat x = v20;
        v30.origin.CGFloat y = v22;
        v30.size.CGFloat width = v24;
        v30.size.CGFloat height = v26;
        double MaxY = CGRectGetMaxY(v30);
        sub_10013E17C(v8);
        sub_10013E17C(v8);
        LOBYTE(v8) = MaxY < a3;
      }
    }
    else
    {
      LOBYTE(v8) = 1;
    }
    sub_100084CF0(0, (unint64_t *)&qword_10098A0B0);
    if ((static NSObject.== infix(_:_:)() & 1) != 0 && (v8 & 1) == 0)
    {

      return 0;
    }
  }
  return v7;
}

uint64_t sub_10013DDF0()
{
  return type metadata accessor for AppPromotionScrollableContentContainerView();
}

uint64_t type metadata accessor for AppPromotionScrollableContentContainerView()
{
  uint64_t result = qword_100985710;
  if (!qword_100985710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10013DE44()
{
  uint64_t result = type metadata accessor for MediaOverlayStyle();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AppPromotionScrollableContentContainerView.ProtectionMode(void *a1, void **a2)
{
  id v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    id v4 = *a2;
  }
  if ((int)v4 - 1 < 0) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for AppPromotionScrollableContentContainerView.ProtectionMode(void **a1)
{
  unint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if (v2 - 1 < 0) {
}
  }

void **assignWithCopy for AppPromotionScrollableContentContainerView.ProtectionMode(void **a1, void **a2)
{
  id v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v5) = -1;
  }
  else {
    id v5 = *a1;
  }
  int v6 = v5 - 1;
  id v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    id v4 = *a2;
  }
  int v8 = v4 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      *a1 = v7;
      id v12 = v7;

      return a1;
    }

    id v7 = *a2;
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;
  id v9 = v7;
  return a1;
}

void *initializeWithTake for AppPromotionScrollableContentContainerView.ProtectionMode(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void **assignWithTake for AppPromotionScrollableContentContainerView.ProtectionMode(void **a1, unint64_t *a2)
{
  id v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    id v4 = *a1;
  }
  unint64_t v5 = *a2;
  if ((int)v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF) {
      unint64_t v6 = *a2;
    }
    if ((int)v6 - 1 < 0)
    {
      *a1 = (void *)v5;

      return a1;
    }
  }
  *a1 = (void *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for AppPromotionScrollableContentContainerView.ProtectionMode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 1;
  if (v5 >= 3) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AppPromotionScrollableContentContainerView.ProtectionMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_10013E10C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_10013E130(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2) {
LABEL_5:
  }
    *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppPromotionScrollableContentContainerView.ProtectionMode()
{
  return &type metadata for AppPromotionScrollableContentContainerView.ProtectionMode;
}

id sub_10013E168(id result)
{
  if ((char *)result - 1 >= (char *)2) {
    return result;
  }
  return result;
}

void sub_10013E17C(id a1)
{
  if ((char *)a1 - 1 >= (char *)2) {
}
  }

BOOL sub_10013E190(void *a1, char *a2)
{
  if (a1 == (void *)2) {
    return a2 == (char *)2;
  }
  if (a1 != (void *)1)
  {
    if ((unint64_t)(a2 - 1) < 2) {
      return 0;
    }
    if (a1)
    {
      if (a2)
      {
        sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
        sub_10013E168(a2);
        sub_10013E168(a1);
        char v5 = static NSObject.== infix(_:_:)();
        sub_10013E17C(a2);
        sub_10013E17C(a1);
        if (v5) {
          return 1;
        }
      }
      return 0;
    }
    if (a2)
    {
      sub_10013E17C(0);
      return 0;
    }
    return 1;
  }
  return a2 == (char *)1;
}

uint64_t sub_10013E268()
{
  return sub_10013E694(&qword_100985720, (void (*)(uint64_t))type metadata accessor for AppEventCollectionViewCell);
}

double sub_10013E2B4()
{
  uint64_t v0 = type metadata accessor for PageGrid();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppEvent();
  sub_10013E694(&qword_100985728, (void (*)(uint64_t))&type metadata accessor for AppEvent);
  ItemLayoutContext.typedModel<A>(as:)();
  uint64_t v4 = v15;
  if (!v15) {
    return 0.0;
  }
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  PageGrid.componentMeasuringSize(spanning:)();
  double v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v7 = sub_1000F3FC0();
  uint64_t v8 = type metadata accessor for AppEventView();
  uint64_t ObjectType = swift_getObjectType();
  type metadata accessor for ObjectGraph();
  uint64_t v10 = swift_dynamicCastClassUnconditional();
  swift_unknownObjectRetain();
  sub_1001D53D4(v6, v4, v7, v10, v8, ObjectType);
  double v12 = v11;
  swift_unknownObjectRelease_n();
  swift_release();
  return v12;
}

double sub_10013E4BC(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for PageGrid();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  PageGrid.componentMeasuringSize(spanning:)();
  double v8 = v7;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v9 = sub_1000F3FC0();
  uint64_t v10 = type metadata accessor for AppEventView();
  type metadata accessor for Placeholder();
  uint64_t v11 = static Placeholder.appEventTitleText.getter();
  double v13 = v12;
  uint64_t v14 = static Placeholder.appEventKindText.getter();
  double v16 = v15;
  uint64_t v17 = static Placeholder.appEventSubtitleText.getter();
  uint64_t v19 = v18;
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1001D551C(v11, v13, v14, v16, v17, v19, a2, v9, v8, v10, ObjectType);
  double v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  return v22;
}

uint64_t sub_10013E694(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10013E6DC(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_10013E6E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a2 + 2);
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    BOOL v6 = *((void *)a1 + 1) == *((void *)a2 + 1) && v4 == v5;
    if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_10013E758()
{
  v3.id receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  [super prepareForReuse];
  uint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_appStateMachine];
  if (*(void *)&v0[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_appStateMachine])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)();
    swift_unknownObjectRelease();
  }
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_10013E850(uint64_t a1, uint64_t a2)
{
  uint64_t v211 = a2;
  uint64_t v165 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v164 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v163 = (char *)&v162 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for ProductPageTheme();
  uint64_t v198 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v197 = (char *)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100082C28((uint64_t *)&unk_100985730);
  __chkstk_darwin(v5 - 8);
  double v7 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = type metadata accessor for OfferButtonSubtitlePosition();
  uint64_t v191 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v192 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_100082C28((uint64_t *)&unk_100981AC0);
  uint64_t v194 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  unint64_t v193 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100082C28((uint64_t *)&unk_100981A90);
  __chkstk_darwin(v10 - 8);
  uint64_t v189 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_100982860);
  __chkstk_darwin(v12 - 8);
  id v190 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = type metadata accessor for OfferButtonPresenterViewAlignment();
  uint64_t v207 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  uint64_t v188 = (char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v173 = (char *)&v162 - v16;
  __chkstk_darwin(v17);
  uint64_t v206 = (char *)&v162 - v18;
  uint64_t v19 = sub_100082C28((uint64_t *)&unk_100985740);
  __chkstk_darwin(v19 - 8);
  uint64_t v177 = (char *)&v162 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100082C28((uint64_t *)&unk_10098AC10);
  __chkstk_darwin(v21 - 8);
  uint64_t v176 = (char *)&v162 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100082C28((uint64_t *)&unk_100981A80);
  __chkstk_darwin(v23 - 8);
  uint64_t v175 = (char *)&v162 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100082C28((uint64_t *)&unk_100995F00);
  __chkstk_darwin(v25 - 8);
  uint64_t v174 = (char *)&v162 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for LegacyAppState();
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  double v185 = (char *)&v162 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = type metadata accessor for OfferTitleType();
  uint64_t v201 = *(void *)(v202 - 8);
  __chkstk_darwin(v202);
  uint64_t v181 = (char *)&v162 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = type metadata accessor for AdamId();
  uint64_t v183 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  CGFloat v182 = (char *)&v162 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = type metadata accessor for OfferLabelStyle();
  uint64_t v200 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  uint64_t v172 = (char *)&v162 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v171 = (char *)&v162 - v32;
  uint64_t v208 = (void *)type metadata accessor for PageGrid.Direction();
  uint64_t v33 = *(v208 - 1);
  __chkstk_darwin(v208);
  CGRect v205 = (char *)&v162 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v162 - v36;
  uint64_t v38 = type metadata accessor for PageGrid();
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  CGRect v210 = (char *)&v162 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  double v43 = (char *)&v162 - v42;
  __chkstk_darwin(v44);
  double v46 = (char *)&v162 - v45;
  type metadata accessor for ProductTopLockup();
  sub_100143794((unint64_t *)&unk_100985750, (void (*)(uint64_t))&type metadata accessor for ProductTopLockup);
  uint64_t v47 = a1;
  uint64_t result = ItemLayoutContext.typedModel<A>(as:)();
  uint64_t v49 = v213;
  if (!(void)v213) {
    return result;
  }
  uint64_t v166 = v7;
  uint64_t v204 = (uint64_t)v37;
  swift_getKeyPath();
  uint64_t v212 = v49;
  ItemLayoutContext.subscript.getter();
  swift_release();
  PageGrid.containerWidth.getter();
  double v50 = *(void (**)(char *, uint64_t))(v39 + 8);
  v50(v46, v38);
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  PageGrid.containerHeight.getter();
  v50(v43, v38);
  uint64_t v51 = v204;
  double v52 = v208;
  (*(void (**)(uint64_t, void, void *))(v33 + 104))(v204, enum case for PageGrid.Direction.vertical(_:), v208);
  swift_getKeyPath();
  ItemLayoutContext.subscript.getter();
  swift_release();
  PageGrid.safeAreaInsets.getter();
  uint64_t v169 = v38;
  uint64_t v168 = v39 + 8;
  uint64_t v167 = (uint64_t (*)(char *, uint64_t))v50;
  v50(v46, v38);
  (*(void (**)(char *, uint64_t, void *))(v33 + 16))(v205, v51, v52);
  sub_10007473C(0.0);
  PageGrid.init(name:direction:containerSize:safeAreaInsets:requiresAdditionalSafeAreaMargins:breakpoints:)();
  (*(void (**)(uint64_t, void *))(v33 + 8))(v51, v52);
  uint64_t v208 = sub_1000F3FC0();
  double v53 = sub_1004BDE78();
  double v54 = v180;
  id v55 = &v180[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_iconSize];
  *(double *)id v55 = v53;
  *((void *)v55 + 1) = v56;
  sub_100082C28(&qword_100999640);
  uint64_t v57 = type metadata accessor for BaseObjectGraph();
  inject<A, B>(_:from:)();
  uint64_t v178 = *((void *)&v213 + 1);
  CGRect v205 = (char *)v213;
  CGRect v58 = *(void **)&v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_titleLabel];
  ProductTopLockup.title.getter();
  if (v59)
  {
    NSString v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v60 = 0;
  }
  [v58 setText:v60];

  uint64_t v61 = *(void **)&v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_taglineLabel];
  ProductTopLockup.subtitle.getter();
  if (v62)
  {
    NSString v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v63 = 0;
  }
  [v61 setText:v63];

  uint64_t v64 = *(void **)&v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_developerLabel];
  ProductTopLockup.developerName.getter();
  if (v65)
  {
    NSString v66 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v66 = 0;
  }
  [v64 setText:v66];

  uint64_t v204 = ProductTopLockup.offerDisplayProperties.getter();
  uint64_t v67 = ProductTopLockup.expandedOfferTitles.getter();
  uint64_t v170 = v47;
  if (v68 == 1)
  {
    sub_10044E880(0, 0);
    uint64_t v71 = 0;
    uint64_t v72 = 0;
  }
  else
  {
    uint64_t v73 = v67;
    uint64_t v74 = v68;
    uint64_t v71 = v69;
    uint64_t v72 = v70;
    swift_bridgeObjectRetain();
    sub_10044E880(v73, v74);
    swift_bridgeObjectRelease();
  }
  sub_10044E894(v71, v72);
  char v75 = ProductTopLockup.hasExpandedOffer.getter();
  char v76 = v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer];
  uint64_t v179 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer;
  v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer] = v75 & 1;
  sub_100451740(v76);
  char v77 = ProductTopLockup.hasExpandedOfferDetails.getter();
  uint64_t v78 = v204;
  uint64_t v79 = v182;
  if ((v77 & 1) != 0 && v204)
  {
    uint64_t v162 = v57;
    swift_retain();
    uint64_t v80 = v171;
    OfferDisplayProperties.offerLabelStyle.getter();
    uint64_t v81 = v200;
    uint64_t v82 = v172;
    uint64_t v83 = v203;
    (*(void (**)(char *, void, uint64_t))(v200 + 104))(v172, enum case for OfferLabelStyle.none(_:), v203);
    sub_100143794(&qword_100999FD0, (void (*)(uint64_t))&type metadata accessor for OfferLabelStyle);
    char v84 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v85 = *(void (**)(char *, uint64_t))(v81 + 8);
    v85(v82, v83);
    v85(v80, v83);
    if ((v84 & 1) == 0)
    {
      swift_retain();
      OfferDisplayProperties.adamId.getter();
      type metadata accessor for ASKBagContract();
      swift_unknownObjectRetain();
      inject<A, B>(_:from:)();
      ASKBagContract.arePreordersCancellable.getter();
      swift_release();
      uint64_t v86 = type metadata accessor for OfferLabelPresenter();
      swift_allocObject();
      uint64_t v87 = OfferLabelPresenter.init(offerDisplayProperties:adamId:appStateController:arePreordersCancellable:)();
      *((void *)&v214 + 1) = v86;
      *(void *)&long long v213 = v87;
      uint64_t v88 = (uint64_t)&v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerLabelPresenter];
      swift_beginAccess();
      swift_retain();
      sub_10006D1F8((uint64_t)&v213, v88, (uint64_t *)&unk_100982B40);
      swift_endAccess();
      sub_100143794(&qword_100985770, (void (*)(uint64_t))type metadata accessor for ProductLockupCollectionViewCell);
      swift_unknownObjectRetain();
      OfferLabelPresenter.view.setter();
      swift_release();
    }
    swift_release();
  }
  uint64_t v89 = ProductTopLockup.offerSubtitlesOverride.getter();
  if (v89)
  {
    uint64_t v90 = v89;
    uint64_t v91 = v209;
    uint64_t v92 = v207;
    uint64_t v93 = v202;
    uint64_t v94 = v201;
    uint64_t v95 = (uint64_t)v181;
    goto LABEL_23;
  }
  uint64_t v91 = v209;
  uint64_t v92 = v207;
  uint64_t v93 = v202;
  uint64_t v94 = v201;
  uint64_t v95 = (uint64_t)v181;
  if (v78)
  {
    swift_retain();
    uint64_t v90 = OfferDisplayProperties.subtitles.getter();
    swift_release();
LABEL_23:
    (*(void (**)(uint64_t, void, uint64_t))(v94 + 104))(v95, enum case for OfferTitleType.standard(_:), v93);
    if (*(void *)(v90 + 16) && (unint64_t v96 = sub_100407158(v95), (v97 & 1) != 0))
    {
      uint64_t v98 = (uint64_t *)(*(void *)(v90 + 56) + 16 * v96);
      uint64_t v99 = v98[1];
      uint64_t v202 = *v98;
      uint64_t v201 = v99;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v202 = 0;
      uint64_t v201 = 0;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v95, v93);
    goto LABEL_28;
  }
  uint64_t v202 = 0;
  uint64_t v201 = 0;
LABEL_28:
  swift_getObjectType();
  char v100 = v54[v179];
  uint64_t v101 = (void *)swift_unknownObjectRetain();
  uint64_t v102 = sub_100459B14(v101, v100);
  swift_unknownObjectRelease();
  swift_getObjectType();
  ProductTopLockup.adamId.getter();
  uint64_t v103 = dispatch thunk of AppStateController.stateMachine(forApp:)();
  uint64_t v105 = v104;
  (*(void (**)(char *, uint64_t))(v183 + 8))(v79, v184);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v107 = (uint64_t)v185;
  CGFloat v182 = (char *)v103;
  uint64_t v183 = ObjectType;
  uint64_t v184 = v105;
  dispatch thunk of AppStateMachine.currentState.getter();
  sub_10014042C(v107, v202, v201, v102);
  (*(void (**)(uint64_t, uint64_t))(v186 + 8))(v107, v187);
  if (v78)
  {
    swift_retain();
    sub_10066DEE4((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v108 = type metadata accessor for OfferStyle();
    uint64_t v109 = (uint64_t)v174;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v174, 1, 1, v108);
    uint64_t v110 = type metadata accessor for OfferEnvironment();
    uint64_t v111 = (uint64_t)v175;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v175, 1, 1, v110);
    uint64_t v112 = type metadata accessor for OfferTint();
    uint64_t v113 = v102;
    uint64_t v114 = v92;
    char v115 = v176;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v176, 1, 1, v112);
    uint64_t v116 = (uint64_t)v177;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v200 + 56))(v177, 1, 1, v203);
    long long v213 = 0u;
    long long v214 = 0u;
    uint64_t v203 = dispatch thunk of OfferDisplayProperties.newOfferDisplayPropertiesChanging(titles:titleSymbolNames:subtitles:style:environment:tint:isDeletableSystemApp:isFree:isPreorder:offerLabelStyle:hasDiscount:contentRating:offerToken:subscriptionFamilyId:overrideLocale:useAdsLocale:priceFormatted:isStreamlinedBuy:appCapabilities:)();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100082BCC((uint64_t)&v213, (uint64_t *)&unk_100982B40);
    sub_100082BCC(v116, (uint64_t *)&unk_100985740);
    uint64_t v117 = (uint64_t)v115;
    uint64_t v92 = v114;
    uint64_t v102 = v113;
    uint64_t v91 = v209;
    sub_100082BCC(v117, (uint64_t *)&unk_10098AC10);
    sub_100082BCC(v111, (uint64_t *)&unk_100981A80);
    sub_100082BCC(v109, (uint64_t *)&unk_100995F00);
  }
  else
  {
    uint64_t v203 = 0;
  }
  long long v118 = v206;
  char v119 = ProductTopLockup.wantsInlineUberPresentationStyle.getter();
  uint64_t v120 = *(void (**)(char *, void, uint64_t))(v92 + 104);
  uint64_t v181 = (char *)v102;
  if (v119)
  {
    v120(v118, enum case for OfferButtonPresenterViewAlignment.center(_:), v91);
  }
  else
  {
    if (v54[v179]) {
      char v121 = (unsigned int *)&enum case for OfferButtonPresenterViewAlignment.right(_:);
    }
    else {
      char v121 = (unsigned int *)&enum case for OfferButtonPresenterViewAlignment.left(_:);
    }
    long long v122 = v173;
    v120(v173, *v121, v91);
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v118, v122, v91);
  }
  uint64_t v123 = (uint64_t)v182;
  uint64_t v124 = ProductTopLockup.offerAction.getter();
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v188, v118, v91);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v189, 1, 1, v91);
  sub_100143794((unint64_t *)&unk_100981AB0, (void (*)(uint64_t))&type metadata accessor for OfferButtonPresenterViewAlignment);
  uint64_t v125 = (uint64_t)v190;
  AccessibilityConditional.init(value:axValue:)();
  uint64_t v126 = sub_100082C28((uint64_t *)&unk_10098AC20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v125, 0, 1, v126);
  uint64_t v200 = type metadata accessor for ObjectGraph();
  uint64_t v127 = swift_dynamicCastClassUnconditional();
  uint64_t v128 = v191;
  uint64_t v129 = v195;
  (*(void (**)(char *, void, uint64_t))(v191 + 104))(v192, enum case for OfferButtonSubtitlePosition.below(_:), v195);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v128 + 56))(v166, 1, 1, v129);
  sub_100143794((unint64_t *)&qword_100985760, (void (*)(uint64_t))&type metadata accessor for OfferButtonSubtitlePosition);
  uint64_t v130 = (uint64_t)v193;
  AccessibilityConditional.init(value:axValue:)();
  sub_100070F60(v203, v124, 0, v125, v130, v127, 0, 0);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v130, v196);
  sub_100082BCC(v125, (uint64_t *)&unk_100982860);
  uint64_t v131 = (uint64_t *)&v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_appStateMachine];
  if (*(void *)&v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_appStateMachine])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of AppStateMachine.removeStateTransitionActions(for:)();
    swift_unknownObjectRelease();
  }
  uint64_t v132 = v181;
  uint64_t v133 = v184;
  *uint64_t v131 = v123;
  v131[1] = v133;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v134 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v135 = (void *)swift_allocObject();
  uint64_t v136 = v202;
  v135[2] = v134;
  v135[3] = v136;
  v135[4] = v201;
  v135[5] = v132;
  swift_retain();
  dispatch thunk of AppStateMachine.addStateTransitionObserver(_:action:)();
  swift_release();
  swift_release();
  id v137 = [v54 contentView];
  PageGrid.horizontalMargins.getter();
  [v137 setLayoutMargins:];

  char v138 = v197;
  uint64_t v139 = v212;
  ProductTopLockup.theme.getter();
  char v140 = &v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_theme];
  swift_beginAccess();
  uint64_t v141 = v198;
  uint64_t v142 = v199;
  (*(void (**)(char *, char *, uint64_t))(v198 + 24))(v140, v138, v199);
  swift_endAccess();
  sub_100450518();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v138, v142);
  uint64_t v143 = v211;
  uint64_t v144 = swift_dynamicCastClassUnconditional();
  uint64_t v145 = v170;
  sub_100140650(v170, v144);
  sub_100141B30(v139, v123, v133, v145, v143);
  *(double *)&v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_secondaryBannerViewHeight] = sub_1004BE45C();
  uint64_t v146 = ProductTopLockup.secondaryBanner.getter();
  if (v146)
  {
    uint64_t v147 = v146;
    double v148 = 0.0;
    id v149 = [objc_allocWithZone((Class)type metadata accessor for BannerCollectionViewCell(0)) initWithFrame:0.0, 0.0, 0.0, 0.0];
    sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
    id v150 = v149;
    double v151 = (void *)static UIColor.defaultBackground.getter();
    [v150 setBackgroundColor:v151];

    if ((ProductTopLockup.wantsInlineUberPresentationStyle.getter() & 1) == 0)
    {
      if (qword_10097EBB0 != -1) {
        swift_once();
      }
      sub_100081D90(qword_1009E2EC0, qword_1009E2ED8);
      uint64_t v152 = v163;
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
      AnyDimension.value(in:rounded:)();
      double v148 = v153;
      (*(void (**)(char *, uint64_t))(v164 + 8))(v152, v165);
    }
    char v154 = ProductTopLockup.wantsInlineUberPresentationStyle.getter();
    swift_dynamicCastClassUnconditional();
    sub_100752CE8(v148, 0.0, 0.0, v147, v154 & 1, v208);
    swift_release();
  }
  else
  {
    id v150 = 0;
  }
  uint64_t v155 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_secondaryBannerView;
  uint64_t v156 = *(void **)&v54[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_secondaryBannerView];
  uint64_t v157 = v207;
  uint64_t v158 = v54;
  uint64_t v159 = v169;
  if (v156)
  {
    [v156 removeFromSuperview];
    uint64_t v160 = *(void **)&v158[v155];
  }
  else
  {
    uint64_t v160 = 0;
  }
  *(void *)&v158[v155] = v150;
  id v161 = v150;

  if (*(void *)&v158[v155]) {
    [v158 addSubview:];
  }

  [v158 setNeedsLayout];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v206, v209);
  return v167(v210, v159);
}

id sub_10014042C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  char v8 = LegacyAppState.isBuyable.getter();
  uint64_t v9 = *(void **)&v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerSubtitleLabel];
  if ((v8 & 1) != 0 && a3)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    [v9 setText:v10];

    [v9 setHidden:0];
    [v9 setTextAlignment:a4];
  }
  else
  {
    [*(id *)&v5[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_offerSubtitleLabel] setHidden:1];
  }

  return [v5 setNeedsLayout];
}

uint64_t sub_10014050C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = type metadata accessor for LegacyAppState();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v14 = (void *)result;
    swift_getObjectType();
    dispatch thunk of AppStateMachine.currentState.getter();
    sub_10014042C((uint64_t)v12, a4, a5, a6);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

void sub_100140650(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v166 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v157 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v7 = (char *)&v144 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v8 - 8);
  uint64_t v156 = (char *)&v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_100082C28(&qword_100990DE0);
  uint64_t v154 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  double v153 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_100082C28((uint64_t *)&unk_100985790);
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  id v150 = (char *)&v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FontUseCase();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Wordmark();
  uint64_t v160 = *(void *)(v16 - 8);
  uint64_t v161 = v16;
  __chkstk_darwin(v16);
  uint64_t v159 = (char *)&v144 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100082C28(&qword_100993520);
  __chkstk_darwin(v18 - 8);
  uint64_t v158 = (char *)&v144 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PageGrid();
  uint64_t v162 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v144 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ProductTopLockup();
  sub_100143794((unint64_t *)&unk_100985750, (void (*)(uint64_t))&type metadata accessor for ProductTopLockup);
  uint64_t v165 = a1;
  ItemLayoutContext.typedModel<A>(as:)();
  uint64_t v23 = v170;
  if (!v170)
  {
    sub_10044E968(0);
    v2[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber] = 0;
    sub_100143278(v2, (uint64_t)v2);
    sub_100451170();
    sub_1004513C4();
    return;
  }
  double v148 = v15;
  id v149 = v7;
  uint64_t v164 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_uberView;
  uint64_t v24 = *(void *)&v2[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_uberView];
  uint64_t v147 = v12;
  uint64_t v146 = v13;
  uint64_t v145 = v5;
  if (!v24)
  {
    uint64_t v27 = ProductTopLockup.uber.getter();
LABEL_8:
    if (!v27)
    {
      char v28 = 1;
      goto LABEL_11;
    }
LABEL_10:
    swift_release();
    char v28 = 0;
    goto LABEL_11;
  }
  uint64_t v25 = *(void **)(v24 + OBJC_IVAR____TtC8AppStore14UberHeaderView_uber);
  swift_retain();
  uint64_t v26 = ProductTopLockup.uber.getter();
  uint64_t v27 = v26;
  if (!v25) {
    goto LABEL_8;
  }
  uint64_t v170 = v25;
  if (!v26) {
    goto LABEL_10;
  }
  uint64_t v167 = v26;
  type metadata accessor for Uber();
  sub_100143794(&qword_1009857A0, (void (*)(uint64_t))&type metadata accessor for Uber);
  swift_retain();
  char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
LABEL_11:
  uint64_t v29 = *(char **)&v2[v164];
  if (v29
    && (uint64_t v30 = *(void *)&v29[OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView],
        uint64_t v31 = OBJC_IVAR____TtC8AppStore9MediaView_contentContainer,
        (uint64_t v32 = *(void **)(*(void *)(v30 + OBJC_IVAR____TtC8AppStore9MediaView_contentContainer)
                        + OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents)) != 0)
    && (type metadata accessor for VideoView(), (uint64_t v33 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v34 = (void *)v33;
    sub_100143794(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
    uint64_t v35 = v29;
    id v36 = v32;
    id v37 = [v34 superview];
    if (v37)
    {
      uint64_t v38 = *(void **)(v30 + v31);
      sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
      uint64_t v144 = v23;
      id v39 = v38;
      id v40 = v37;
      uint64_t v23 = v144;
      LOBYTE(v37) = static NSObject.== infix(_:_:)();

      uint64_t v35 = (char *)v40;
      uint64_t v34 = v39;
    }

    char v41 = v37 ^ 1;
  }
  else
  {
    char v41 = 0;
  }
  if (ProductTopLockup.uber.getter())
  {
    if (v41 & 1 | ((v28 & 1) == 0))
    {
      char v42 = ProductTopLockup.wantsInlineUberPresentationStyle.getter();
      uint64_t v43 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber;
      v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber] = v42 & 1;
      sub_100143278(v3, (uint64_t)v3);
      sub_100451170();
      sub_1004513C4();
      id v44 = objc_allocWithZone((Class)type metadata accessor for UberHeaderView());
      uint64_t v45 = v166;
      swift_retain();
      uint64_t v46 = swift_retain();
      uint64_t v47 = sub_1001751C0(v46, v45);
      sub_10044E968(v47);
      double v48 = *(void **)&v3[v164];
      if (v48)
      {
        swift_getKeyPath();
        uint64_t v49 = v48;
        ItemLayoutContext.subscript.getter();
        swift_release();
        PageGrid.horizontalMargins.getter();
        double v51 = v50;
        double v53 = v52;
        double v55 = v54;
        double v57 = v56;
        (*(void (**)(char *, uint64_t))(v162 + 8))(v22, v20);
        CGRect v58 = *(void **)&v49[OBJC_IVAR____TtC8AppStore14UberHeaderView_titleView];
        [v58 layoutMargins];
        if (v51 != v62 || v53 != v59 || v55 != v60 || v57 != v61)
        {
          [v58 setLayoutMargins:v51, v53, v55, v57];
          [v49 invalidateIntrinsicContentSize];
          NSString v63 = *(void (**)(uint64_t))&v49[OBJC_IVAR____TtC8AppStore14UberHeaderView_sizeChangeObserver];
          if (v63)
          {
            uint64_t v64 = swift_retain();
            v63(v64);
            sub_10006012C((uint64_t)v63);
          }
        }
      }
      uint64_t v65 = v165;
      double v66 = sub_1004B73E0(v165, v166);
      if (v3[v43] == 1)
      {
        uint64_t v144 = v23;
        id v67 = [v3 contentView];
        [v67 setOverrideUserInterfaceStyle:2];

        uint64_t v68 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_shadowView];
        if (qword_10097EEC8 != -1) {
          swift_once();
        }
        uint64_t v69 = type metadata accessor for Shadow();
        uint64_t v70 = sub_100087728(v69, (uint64_t)qword_1009E3568);
        uint64_t v71 = *(void *)(v69 - 8);
        uint64_t v72 = v158;
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v158, v70, v69);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v72, 0, 1, v69);
        dispatch thunk of ShadowView.shadow.setter();
        id v73 = [v68 layer];
        uint64_t v74 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_iconView];
        id v75 = [v74 layer];
        id v76 = [v75 maskedCorners];

        [v73 setMaskedCorners:v76];
        [v74 _continuousCornerRadius];
        [v68 _setContinuousCornerRadius:];
        [v68 setAutoresizingMask:18];
        char v77 = *(void **)&v3[v164];
        if (v77)
        {
          id v78 = v77;
          id v79 = [v3 contentView];
          uint64_t v80 = *(void *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_blurView];
          [v79 insertSubview:v80 aboveSubview:v78];
        }
        else
        {
          id v79 = [v3 contentView];
          uint64_t v80 = *(void *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_blurView];
          [v79 insertSubview:v80 atIndex:0];
        }

        id v81 = [v3 contentView];
        [v81 insertSubview:v68 aboveSubview:v80];

        id v82 = [v3 contentView];
        [v82 insertSubview:*(void *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_keylineView] aboveSubview:v80];

        uint64_t v83 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_disclosureArrow;
        if (!*(void *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_disclosureArrow])
        {
          id v84 = [objc_allocWithZone((Class)type metadata accessor for ChevronView()) init];
          [v84 setOverrideUserInterfaceStyle:2];
          uint64_t v85 = *(void **)&v3[v83];
          id v86 = v84;
          if (v85)
          {
            [v85 removeFromSuperview];
            uint64_t v85 = *(void **)&v3[v83];
          }
          *(void *)&v3[v83] = v84;
          id v87 = v84;

          if (*(void *)&v3[v83]) {
            [v3 addSubview:];
          }
        }
        uint64_t v88 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView];
        uint64_t v90 = v159;
        uint64_t v89 = v160;
        uint64_t v91 = v161;
        (*(void (**)(char *, void, uint64_t))(v160 + 104))(v159, enum case for Wordmark.arcade(_:), v161);
        swift_getKeyPath();
        ItemLayoutContext.subscript.getter();
        swift_release();
        uint64_t v92 = v170;
        WordmarkView.show(wordmark:with:)();

        (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v91);
        [v88 setHidden:0];
        [*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_developerLabel] setHidden:1];
        uint64_t v93 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_taglineLabel];
        id v94 = [v93 text];
        id v95 = v94;
        if (v94) {

        }
        [v93 setHidden:v95 == 0];
        sub_100459B7C(0);
        id v96 = [v3 contentView];
        [v96 overrideUserInterfaceStyle];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v97 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v98 = [*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_shareButton] imageView];
        if (v98)
        {
          uint64_t v99 = v98;
          id v100 = [v98 layer];

          [v100 setCompositingFilter:v97];
        }
        id v101 = [v93 layer];
        [v101 setCompositingFilter:v97];

        id v102 = [v88 layer];
        [v102 setCompositingFilter:v97];

        uint64_t v103 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferTitleLabel];
        if (v103) {
          [v103 setHidden:1];
        }
        uint64_t v104 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferSubtitleLabel];
        if (v104)
        {
          id v105 = [v104 layer];
          [v105 setCompositingFilter:v97];
        }
        uint64_t v106 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_downloadProgressLabel];
        uint64_t v65 = v165;
        if (v106)
        {
          id v107 = [v106 layer];
          [v107 setCompositingFilter:v97];
        }
      }
      type metadata accessor for ArtworkLoader();
      uint64_t v108 = inject(_:from:)();
      sub_100142918(v65, v108, v66);
      swift_release();
    }
    swift_release();
  }
  if (v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber]) {
    goto LABEL_79;
  }
  id v109 = [v3 contentView];
  [v109 setOverrideUserInterfaceStyle:0];

  uint64_t v110 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_disclosureArrow;
  uint64_t v111 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_disclosureArrow];
  if (v111)
  {
    [v111 removeFromSuperview];
    uint64_t v112 = *(void **)&v3[v110];
  }
  else
  {
    uint64_t v112 = 0;
  }
  uint64_t v113 = v149;
  *(void *)&v3[v110] = 0;

  if (*(void *)&v3[v110]) {
    [v3 addSubview:];
  }
  ProductTopLockup.tertiaryTitle.getter();
  char v114 = static String.isNilOrEmpty(_:)();
  swift_bridgeObjectRelease();
  if ((v114 & 1) == 0)
  {
    char v115 = (void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_tertiaryTitleLabel];
    swift_beginAccess();
    uint64_t v116 = *v115;
    if (!*v115)
    {
      if (qword_10097EB88 != -1) {
        swift_once();
      }
      uint64_t v120 = v152;
      uint64_t v121 = sub_100087728(v152, (uint64_t)qword_1009E2E28);
      uint64_t v122 = v151;
      uint64_t v123 = v150;
      (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v121, v120);
      swift_getKeyPath();
      ItemLayoutContext.subscript.getter();
      swift_release();
      uint64_t v169 = v167;
      Conditional.evaluate(with:)();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v120);
      if (qword_10097ECD0 != -1) {
        swift_once();
      }
      uint64_t v124 = v155;
      uint64_t v125 = sub_100087728(v155, (uint64_t)qword_1009E31D0);
      uint64_t v126 = v154;
      uint64_t v127 = v153;
      (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v153, v125, v124);
      swift_getKeyPath();
      ItemLayoutContext.subscript.getter();
      swift_release();
      uint64_t v168 = v169;
      Conditional.evaluate(with:)();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v124);
      uint64_t v128 = v146;
      uint64_t v129 = v156;
      uint64_t v130 = v148;
      uint64_t v131 = v147;
      (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v156, v148, v147);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v129, 0, 1, v131);
      (*(void (**)(char *, void, uint64_t))(v157 + 104))(v113, enum case for DirectionalTextAlignment.leading(_:), v145);
      id v132 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
      uint64_t v133 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
      sub_100459B7C(v133);

      swift_beginAccess();
      uint64_t v134 = *v115;
      if (*v115)
      {
        swift_endAccess();
        sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
        id v135 = v134;
        uint64_t v136 = (void *)static UIColor.tertiaryText.getter();
        [v135 setTextColor:v136];

        (*(void (**)(char *, uint64_t))(v128 + 8))(v130, v131);
        uint64_t v116 = *v115;
        if (!*v115) {
          goto LABEL_74;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v128 + 8))(v130, v131);
        swift_endAccess();
        uint64_t v116 = *v115;
        if (!*v115) {
          goto LABEL_74;
        }
      }
    }
    id v117 = v116;
    ProductTopLockup.tertiaryTitle.getter();
    if (v118)
    {
      NSString v119 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v119 = 0;
    }
    [v117 setText:v119];

    goto LABEL_74;
  }
  sub_100459B7C(0);
LABEL_74:
  id v137 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_wordmarkView];
  [v137 setHidden:1];
  [*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_blurView] removeFromSuperview];
  [*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_shadowView] removeFromSuperview];
  id v138 = [*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_shareButton] layer];
  [v138 setCompositingFilter:0];

  id v139 = [*(id *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_taglineLabel] layer];
  [v139 setCompositingFilter:0];

  id v140 = [v137 layer];
  [v140 setCompositingFilter:0];

  uint64_t v141 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferTitleLabel];
  if (v141) {
    [v141 setHidden:0];
  }
  uint64_t v142 = *(void **)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferSubtitleLabel];
  if (v142)
  {
    id v143 = [v142 layer];
    [v143 setCompositingFilter:0];
  }
  sub_10044EA2C();
LABEL_79:
  [v3 setNeedsLayout];
  swift_release();
}

uint64_t sub_100141B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v27[1] = a3;
  uint64_t v28 = a4;
  uint64_t v8 = type metadata accessor for LegacyAppState();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28(&qword_100985778);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v27 - v16;
  type metadata accessor for ObjectGraph();
  v27[0] = swift_dynamicCastClassUnconditional();
  swift_getObjectType();
  uint64_t v29 = a5;
  swift_retain();
  dispatch thunk of AppStateMachine.currentState.getter();
  ProductTopLockup.primaryBanner(for:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  char v18 = ProductTopLockup.wantsInlineUberPresentationStyle.getter();
  sub_100141DC4((uint64_t)v17, (uint64_t)v14);
  int v19 = v18 & 1;
  uint64_t v20 = v28;
  *(double *)&v6[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerViewHeight] = sub_1004BE73C((uint64_t)v14, v19, v28);
  uint64_t v21 = sub_1001423A0((uint64_t)v14, v19, v20, v27[0]);
  uint64_t v22 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView;
  uint64_t v23 = *(void **)&v6[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView];
  if (v23)
  {
    [v23 removeFromSuperview];
    uint64_t v24 = *(void **)&v6[v22];
  }
  else
  {
    uint64_t v24 = 0;
  }
  *(void *)&v6[v22] = v21;
  uint64_t v25 = v21;

  if (*(void *)&v6[v22]) {
    [v6 addSubview:];
  }

  [v6 setNeedsLayout];
  swift_release();
  sub_100082BCC((uint64_t)v14, &qword_100985778);
  return sub_100082BCC((uint64_t)v17, &qword_100985778);
}

uint64_t sub_100141DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100082C28(&qword_100985778);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = sub_100082C28((uint64_t *)&unk_100985780);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082B68(a1, (uint64_t)v9, &qword_100985778);
  uint64_t v13 = type metadata accessor for ProductTopLockup.PrimaryBanner();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v9, 1, v13) == 1)
  {
    sub_100082BCC((uint64_t)v9, &qword_100985778);
  }
  else
  {
    uint64_t v24 = a2;
    ProductTopLockup.PrimaryBanner.hideCriteria.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    uint64_t v16 = type metadata accessor for HideCriteria();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
    {
      sub_100082BCC((uint64_t)v12, (uint64_t *)&unk_100985780);
      a2 = v24;
    }
    else
    {
      char v18 = HideCriteria.isHidden.getter();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
      a2 = v24;
      if (v18)
      {
        if (qword_10097E370 == -1) {
          goto LABEL_10;
        }
        goto LABEL_15;
      }
    }
  }
  sub_100082B68(a1, (uint64_t)v6, &qword_100985778);
  if (v15(v6, 1, v13) == 1)
  {
    sub_100082BCC((uint64_t)v6, &qword_100985778);
    if (qword_10097E370 == -1)
    {
LABEL_10:
      uint64_t v19 = type metadata accessor for OSLogger();
      sub_100087728(v19, (uint64_t)qword_1009E18A0);
      sub_100082C28((uint64_t *)&unk_100984540);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
      LogMessage.init(stringLiteral:)();
      Logger.info(_:)();
      uint64_t v20 = 1;
      goto LABEL_14;
    }
LABEL_15:
    swift_once();
    goto LABEL_10;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v6, v13);
  if (qword_10097E370 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for OSLogger();
  sub_100087728(v21, (uint64_t)qword_1009E18A0);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
  LogMessage.init(stringLiteral:)();
  Logger.info(_:)();
  uint64_t v20 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v20, 1, v13);
}

char *sub_1001423A0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  v41[0] = a3;
  v41[1] = a4;
  uint64_t v7 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100082C28(&qword_100985778);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (void *)((char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v41 - v15;
  sub_100082B68(a1, (uint64_t)v41 - v15, &qword_100985778);
  uint64_t v17 = type metadata accessor for ProductTopLockup.PrimaryBanner();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    sub_100082B68((uint64_t)v16, (uint64_t)v13, &qword_100985778);
    int v20 = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 88))(v13, v17);
    if (v20 == enum case for ProductTopLockup.PrimaryBanner.linkableText(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v18 + 96))(v13, v17);
      uint64_t v21 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView);
      if (v21 && (type metadata accessor for LinkableHeaderCollectionViewCell(), (uint64_t v22 = swift_dynamicCastClass()) != 0))
      {
        id v23 = (id)v22;
        id v24 = v21;
      }
      else
      {
        id v23 = [objc_allocWithZone((Class)type metadata accessor for LinkableHeaderCollectionViewCell()) initWithFrame:0.0, 0.0, 0.0, 0.0];
      }
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      uint64_t v19 = (char *)v23;
      uint64_t v30 = (void *)static UIColor.defaultBackground.getter();
      [v19 setBackgroundColor:v30];

      sub_1000F3FC0();
      id v31 = objc_retain(*(id *)(*(void *)&v19[OBJC_IVAR____TtC8AppStore32LinkableHeaderCollectionViewCell_headerView]
                              + OBJC_IVAR____TtC8AppStore18LinkableHeaderView_label));
      uint64_t v32 = LinkableText.linkedSubstrings.getter();
      uint64_t v33 = sub_100143478(v32, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10014375C);
      swift_bridgeObjectRelease();
      uint64_t v34 = LinkableText.styledText.getter();
      sub_10034EEAC(v34, 0, (uint64_t)v33);

      swift_bridgeObjectRelease();
      swift_release();
      [v19 setNeedsLayout];
      swift_unknownObjectRelease();
LABEL_19:
      swift_release();
      goto LABEL_20;
    }
    if (v20 == enum case for ProductTopLockup.PrimaryBanner.banner(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v18 + 96))(v13, v17);
      uint64_t v25 = *v13;
      uint64_t v26 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_bannerView);
      if (v26 && (type metadata accessor for BannerCollectionViewCell(0), (uint64_t v27 = swift_dynamicCastClass()) != 0))
      {
        id v28 = (id)v27;
        id v29 = v26;
      }
      else
      {
        id v28 = [objc_allocWithZone((Class)type metadata accessor for BannerCollectionViewCell(0)) initWithFrame:0.0, 0.0, 0.0, 0.0];
      }
      char v35 = a2;
      id v36 = sub_1000F3FC0();
      double v37 = 0.0;
      if ((v35 & 1) == 0)
      {
        v41[0] = v25;
        if (qword_10097EBA8 != -1) {
          swift_once();
        }
        sub_100081D90(qword_1009E2E98, qword_1009E2EB0);
        j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
        AnyDimension.value(in:rounded:)();
        double v37 = v38;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t v25 = v41[0];
      }
      sub_100084CF0(0, (unint64_t *)&qword_100981AA0);
      uint64_t v19 = (char *)v28;
      id v39 = (void *)static UIColor.defaultBackground.getter();
      [v19 setBackgroundColor:v39];

      sub_100752CE8(v37, 0.0, v37, v25, v35 & 1, v36);
      swift_unknownObjectRelease();
      goto LABEL_19;
    }
    (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v13, v17);
    uint64_t v19 = 0;
  }
LABEL_20:
  sub_100082BCC((uint64_t)v16, &qword_100985778);
  return v19;
}

void sub_100142918(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v7 = type metadata accessor for Uber.AssetType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)&v3[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_uberView])
  {
    swift_retain();
    Uber.assetType.getter();
    int v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
    if (v11 == enum case for Uber.AssetType.artwork(_:))
    {
      id v12 = [v3 traitCollection];
      char v13 = UITraitCollection.isSizeClassCompact.getter();

      if (v13)
      {
        if (!Uber.compactArtwork.getter()) {
          goto LABEL_13;
        }
        goto LABEL_10;
      }
      if (Uber.artwork.getter())
      {
LABEL_10:
        uint64_t v14 = swift_retain();
        sub_100142B60(v14, a3, a1, a2);
        swift_release();
        swift_release();
      }
    }
    else
    {
      if (v11 != enum case for Uber.AssetType.video(_:))
      {
        if (v11 != enum case for Uber.AssetType.icon(_:)) {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        }
        goto LABEL_13;
      }
      if (Uber.video.getter())
      {
        Video.preview.getter();
        swift_release();
        goto LABEL_10;
      }
    }
LABEL_13:
    swift_release();
  }
}

uint64_t sub_100142B34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShelfLayoutContext.traitEnvironment.getter();
  *a1 = result;
  return result;
}

void sub_100142B60(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Uber.Style();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v45 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v45 - v16;
  uint64_t v18 = type metadata accessor for PageGrid();
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v50 = v4;
  id v23 = *(char **)&v4[OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_uberView];
  if (v23)
  {
    uint64_t v47 = a1;
    uint64_t v48 = v20;
    v45[0] = v19;
    v45[1] = a4;
    uint64_t v49 = *(void *)&v23[OBJC_IVAR____TtC8AppStore14UberHeaderView_uber];
    swift_retain();
    id v24 = v23;
    id v25 = [v24 backgroundColor];
    uint64_t v46 = v24;
    uint64_t v26 = *(char **)&v24[OBJC_IVAR____TtC8AppStore14UberHeaderView_contentView];
    uint64_t v27 = (objc_class *)type metadata accessor for MediaView();
    v56.id receiver = v26;
    v56.super_class = v27;
    [super setBackgroundColor:v25];
    [*(id *)(*(void *)&v26[OBJC_IVAR____TtC8AppStore9MediaView_contentContainer]+ OBJC_IVAR____TtC8AppStoreP33_ECECB79BEF5D802E6E21EF3AE112F28D20UberContentContainer_contents) setBackgroundColor:v25];
    id v28 = *(void **)&v26[OBJC_IVAR____TtC8AppStore9MediaView_reflectionView];
    if (v28)
    {
      id v29 = v28;
      [v29 setBackgroundColor:v25];
    }
    swift_getKeyPath();
    ItemLayoutContext.subscript.getter();
    swift_release();
    PageGrid.containerHeight.getter();
    double v31 = v30;
    PageGrid.safeAreaInsets.getter();
    double v33 = v31 - v32;
    swift_getKeyPath();
    ItemLayoutContext.subscript.getter();
    swift_release();
    uint64_t v34 = v55;
    char v35 = UITraitCollection.isSizeClassCompact.getter();

    if (v35)
    {
      Uber.style.getter();
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v14, enum case for Uber.Style.inline(_:), v8);
      sub_100143794(&qword_1009857B0, (void (*)(uint64_t))&type metadata accessor for Uber.Style);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (v53 == v51 && v54 == v52)
      {
        swift_bridgeObjectRelease_n();
        id v36 = *(void (**)(char *, uint64_t))(v9 + 8);
        v36(v14, v8);
        v36(v17, v8);
        uint64_t v37 = v45[0];
        double v38 = v50;
LABEL_10:
        double v33 = v33 - a2;
        goto LABEL_11;
      }
      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v40 = *(void (**)(char *, uint64_t))(v9 + 8);
      v40(v14, v8);
      v40(v17, v8);
      uint64_t v37 = v45[0];
      double v38 = v50;
      if (v39) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v37 = v45[0];
      double v38 = v50;
    }
LABEL_11:
    Uber.style.getter();
    PageGrid.componentMeasuringSize(spanning:)();
    double v42 = v41;
    id v43 = [v38 traitCollection];
    sub_1000D825C(v33, v42, v47, (uint64_t)v11, v43);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    type metadata accessor for UberHeaderView();
    sub_100143794(&qword_1009857A8, (void (*)(uint64_t))type metadata accessor for UberHeaderView);
    id v44 = v46;
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v22, v37);
  }
}

uint64_t sub_1001430A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  return sub_100082B68(v3, a1, &qword_100984EA0);
}

uint64_t sub_100143100(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_itemLayoutContext;
  swift_beginAccess();
  sub_10006D1F8(a1, v3, &qword_100984EA0);
  return swift_endAccess();
}

uint64_t (*sub_100143168())()
{
  return j__swift_endAccess;
}

uint64_t sub_1001431D0(uint64_t result, uint64_t a2)
{
  uint64_t v4 = result;
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferTitleText);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_expandedOfferTitleText + 8);
  if (!v6)
  {
    if (!a2) {
      return result;
    }
    goto LABEL_10;
  }
  if (!a2
    || ((result = *v5, *v5 == v4) ? (BOOL v7 = v6 == a2) : (BOOL v7 = 0),
        !v7 && (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0)))
  {
LABEL_10:
    swift_bridgeObjectRetain();
    return (uint64_t)sub_10044E880(v4, a2);
  }
  return result;
}

void sub_100143278(void *a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber;
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasInlineUber) == 1)
  {
    UILabel.alignment.setter();
  }
  else
  {
    if (qword_10097EB98 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_100082C28((uint64_t *)&unk_100984B00);
    sub_100087728(v5, (uint64_t)qword_1009E2E58);
    uint64_t v15 = a1;
    Conditional.evaluate(with:)();
  }
  UILabel.alignment.setter();
  uint64_t v6 = OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer;
  int v7 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_hasExpandedOffer);
  id v8 = [a1 traitCollection];
  if (v7 == 1 && (UITraitCollection.isSizeClassRegular.getter() & 1) == 0)
  {
  }
  else
  {
    UITraitCollection.prefersRightToLeftLayouts.getter();
  }
  UILabel.alignment.setter();
  uint64_t v9 = *(void **)(a2 + OBJC_IVAR____TtC8AppStore31ProductLockupCollectionViewCell_downloadProgressLabel);
  if (v9)
  {
    char v10 = *(unsigned char *)(a2 + v6);
    id v11 = v9;
    id v12 = [a1 traitCollection];
    if ((*(unsigned char *)(a2 + v4) & 1) != 0 || (v10 & 1) != 0 && (UITraitCollection.isSizeClassRegular.getter() & 1) == 0)
    {

      uint64_t v13 = 1;
    }
    else
    {
      char v14 = UITraitCollection.prefersRightToLeftLayouts.getter();

      if (v14) {
        uint64_t v13 = 2;
      }
      else {
        uint64_t v13 = 0;
      }
    }
    [v11 setTextAlignment:v13, v15];
  }
}

void *sub_100143478(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_1001295D0(0, v2, 0);
  uint64_t result = (void *)sub_1005196E8(a1);
  uint64_t v6 = (uint64_t)result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v29 = v2;
  int v30 = v5;
  uint64_t v31 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    id v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v16 = a2(v13, v14, v15);
    uint64_t v34 = v17;
    uint64_t v35 = v16;
    uint64_t v33 = v18;
    uint64_t v20 = v19;
    swift_release();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    unint64_t v22 = _swiftEmptyArrayStorage[2];
    unint64_t v21 = _swiftEmptyArrayStorage[3];
    if (v22 >= v21 >> 1) {
      uint64_t result = (void *)sub_1001295D0(v21 > 1, v22 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v22 + 1;
    id v23 = &_swiftEmptyArrayStorage[4 * v22];
    void v23[4] = v35;
    v23[5] = v34;
    v23[6] = v33;
    v23[7] = v20;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v24 = *(void *)(v31 + 8 * v11);
    if ((v24 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v30;
    if (*(_DWORD *)(a1 + 36) != v30) {
      goto LABEL_27;
    }
    unint64_t v25 = v24 & (-2 << (v6 & 0x3F));
    if (v25)
    {
      int64_t v9 = __clz(__rbit64(v25)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v29;
    }
    else
    {
      unint64_t v26 = v11 + 1;
      unint64_t v27 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v29;
      if (v11 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v31 + 8 * v26);
        if (v28)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v11)
          {
            unint64_t v28 = *(void *)(a1 + 80 + 8 * v11++);
            if (v28)
            {
              unint64_t v26 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1001436D8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100143710()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100143750(uint64_t a1, uint64_t a2)
{
  return sub_10014050C(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_10014375C(uint64_t a1)
{
  return sub_100768D68(a1);
}

uint64_t sub_100143764@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShelfLayoutContext.traitEnvironment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100143794(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s5StateVwxx_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s5StateVwCP_0_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5StateVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for TodayCardOverlayReusePool.Scrap(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s5StateVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s5StateVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *_s5StateVMa_0()
{
  return &_s5StateVN_0;
}

unint64_t sub_100143980()
{
  unint64_t result = qword_1009857B8;
  if (!qword_1009857B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009857B8);
  }
  return result;
}

unint64_t sub_1001439D8()
{
  unint64_t result = qword_1009857C0;
  if (!qword_1009857C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009857C0);
  }
  return result;
}

uint64_t sub_100143A2C(uint64_t a1, uint64_t a2)
{
  return sub_100143A94(a1, a2, 0x6157747265766461, 0xEF646563616C5073, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.placed(_:));
}

uint64_t sub_100143A64(uint64_t a1, uint64_t a2)
{
  return sub_100143A94(a1, a2, 0xD000000000000012, 0x8000000100808AE0, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.onScreen(_:));
}

uint64_t sub_100143A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v7 = type metadata accessor for OSLogger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097E358 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100087728(v7, (uint64_t)qword_1009E1858);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007C2170;
  static LogMessage.identity(_:)();
  LogMessage.init(stringLiteral:)();
  LogMessage.init(stringLiteral:)();
  v15[3] = &type metadata for String;
  v15[0] = a1;
  v15[1] = a2;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100082BCC((uint64_t)v15, (uint64_t *)&unk_100982B40);
  Logger.info(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v14(a1, a2);
}

uint64_t sub_100143D18(uint64_t a1, uint64_t a2)
{
  return sub_100143A94(a1, a2, 0xD000000000000011, 0x8000000100808AC0, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.offScreen(_:));
}

void sub_100143D48(uint64_t a1, void *a2, uint64_t a3)
{
  unint64_t v26 = a2;
  uint64_t v27 = a1;
  uint64_t v4 = type metadata accessor for OSLogger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100082C28(&qword_100985870);
  __chkstk_darwin(v8 - 8);
  int64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AdvertVisibilityCalculator.VisibilityThreshold();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100144D78(a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for AdvertVisibilityCalculator.VisibilityThreshold.fullyOffScreen(_:), v11);
    sub_100082BCC((uint64_t)v10, &qword_100985870);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  }
  uint64_t v15 = sub_100144230();
  char v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = sub_100144230();
    if ((v19 & 1) == 0 && v18 != v15)
    {
      Swift::Int v25 = v18;
      if (qword_10097E358 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_100087728(v4, (uint64_t)qword_1009E1858);
      uint64_t v24 = v5;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v20, v4);
      sub_100082C28((uint64_t *)&unk_100984540);
      v23[1] = 8 * *(void *)(*(void *)(type metadata accessor for LogMessage() - 8) + 72);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007C2180;
      static LogMessage.identity(_:)();
      LogMessage.init(stringLiteral:)();
      LogMessage.init(stringLiteral:)();
      int64_t v29 = &type metadata for String;
      v28[0] = v27;
      v28[1] = v26;
      swift_bridgeObjectRetain();
      static LogMessage.safe(_:)();
      sub_100082BCC((uint64_t)v28, (uint64_t *)&unk_100982B40);
      LogMessage.init(stringLiteral:)();
      int64_t v29 = &type metadata for Int;
      v28[0] = v15;
      static LogMessage.safe(_:)();
      sub_100082BCC((uint64_t)v28, (uint64_t *)&unk_100982B40);
      LogMessage.init(stringLiteral:)();
      int64_t v29 = &type metadata for Int;
      Swift::Int v21 = v25;
      v28[0] = v25;
      static LogMessage.safe(_:)();
      sub_100082BCC((uint64_t)v28, (uint64_t *)&unk_100982B40);
      Logger.info(_:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
      v22._object = v26;
      v22._countAndFlagsBits = v27;
      AppStoreMetricManager.trackVisibility(_:threshold:)(v22, v21);
    }
  }
}

uint64_t sub_100144230()
{
  uint64_t v0 = type metadata accessor for AdvertVisibilityCalculator.VisibilityThreshold();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void (**)(char *, void, uint64_t, __n128))(v1 + 104);
  v5(v4, enum case for AdvertVisibilityCalculator.VisibilityThreshold.fullyOnScreen(_:), v0, v2);
  sub_100144DE0(&qword_100985878);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v7 = v13[0];
  uint64_t v6 = v13[1];
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  if (v6 == v7) {
    return 100;
  }
  ((void (*)(char *, void, uint64_t))v5)(v4, enum case for AdvertVisibilityCalculator.VisibilityThreshold.moreThanHalfOnScreen(_:), v0);
  sub_100144DE0((unint64_t *)&unk_100985880);
  char v10 = dispatch thunk of static Comparable.< infix(_:_:)();
  v8(v4, v0);
  if ((v10 & 1) == 0) {
    return 50;
  }
  ((void (*)(char *, void, uint64_t))v5)(v4, enum case for AdvertVisibilityCalculator.VisibilityThreshold.fullyOffScreen(_:), v0);
  char v11 = dispatch thunk of static Comparable.< infix(_:_:)();
  v8(v4, v0);
  if ((v11 & 1) == 0) {
    return 0;
  }
  if (qword_10097E358 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for OSLogger();
  sub_100087728(v12, (uint64_t)qword_1009E1858);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BF1D0;
  static LogMessage.identity(_:)();
  LogMessage.init(stringLiteral:)();
  Logger.error(_:)();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1001445A4(uint64_t a1, uint64_t a2)
{
  return sub_100143A94(a1, a2, 0xD000000000000010, 0x8000000100808A40, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.completed(_:));
}

void sub_1001445D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v5 = type metadata accessor for AdvertDiscardReason();
  uint64_t v34 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v32 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AppStoreMetricDiscardReason();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  id v36 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OSLogger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097E358 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100087728(v9, (uint64_t)qword_1009E1858);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  sub_100082C28((uint64_t *)&unk_100984540);
  uint64_t v31 = v10;
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BFA20;
  static LogMessage.identity(_:)();
  LogMessage.init(stringLiteral:)();
  LogMessage.init(stringLiteral:)();
  double v41 = &type metadata for String;
  uint64_t v39 = a1;
  v40[0] = a1;
  v40[1] = a2;
  uint64_t v35 = (void *)a2;
  swift_bridgeObjectRetain();
  static LogMessage.safe(_:)();
  sub_100082BCC((uint64_t)v40, (uint64_t *)&unk_100982B40);
  LogMessage.init(stringLiteral:)();
  double v41 = (void *)v5;
  uint64_t v14 = sub_1000808B8(v40);
  uint64_t v15 = v34;
  char v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v34 + 16);
  uint64_t v17 = v33;
  v16(v14, v33, v5);
  static LogMessage.safe(_:)();
  sub_100082BCC((uint64_t)v40, (uint64_t *)&unk_100982B40);
  Logger.info(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v9);
  uint64_t v18 = v32;
  v16((uint64_t *)v32, v17, v5);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v18, v5);
  if (v19 != enum case for AdvertDiscardReason.searchLandingPageLoadFailed(_:))
  {
    id v23 = v35;
    Swift::Int v21 = v36;
    uint64_t v20 = v37;
    uint64_t v22 = v38;
    if (v19 == enum case for AdvertDiscardReason.advertDataMalformed(_:))
    {
      (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for AppStoreMetricDiscardReason.metadataLoadFailure(_:), v38);
      uint64_t v24 = v39;
      goto LABEL_13;
    }
    Swift::Int v25 = v18;
    uint64_t v24 = v39;
    if (v19 == enum case for AdvertDiscardReason.insufficientAssets(_:))
    {
      unint64_t v26 = (unsigned int *)&enum case for AppStoreMetricDiscardReason.insufficientAssetsFailure(_:);
    }
    else
    {
      if (v19 != enum case for AdvertDiscardReason.cppAssetsMissing(_:))
      {
        unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 104);
        if (v19 != enum case for AdvertDiscardReason.localizationNotAvailable(_:))
        {
          v28(v36, enum case for AppStoreMetricDiscardReason.metadataLoadFailure(_:), v38);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v5);
          goto LABEL_13;
        }
        uint64_t v27 = enum case for AppStoreMetricDiscardReason.localizationNotAvailable(_:);
        goto LABEL_12;
      }
      unint64_t v26 = (unsigned int *)&enum case for AppStoreMetricDiscardReason.assetsMissingFailure(_:);
    }
    uint64_t v27 = *v26;
    unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 104);
LABEL_12:
    v28(v36, v27, v38);
    goto LABEL_13;
  }
  Swift::Int v21 = v36;
  uint64_t v20 = v37;
  uint64_t v22 = v38;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for AppStoreMetricDiscardReason.slpLoadFailure(_:), v38);
  id v23 = v35;
  uint64_t v24 = v39;
LABEL_13:
  AppStoreMetricManager.discarded(_:reasonCode:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
  v29._countAndFlagsBits = v24;
  v29._object = v23;
  AppStoreMetricManager.completed(_:)(v29);
}

uint64_t sub_100144BB0()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100144BE8(uint64_t a1, uint64_t a2)
{
  return sub_100143A94(a1, a2, 0x6157747265766461, 0xEF646563616C5073, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.placed(_:));
}

uint64_t sub_100144C40(uint64_t a1, uint64_t a2)
{
  return sub_100143A94(a1, a2, 0xD000000000000012, 0x8000000100808AE0, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.onScreen(_:));
}

uint64_t sub_100144C90(uint64_t a1, uint64_t a2)
{
  return sub_100143A94(a1, a2, 0xD000000000000011, 0x8000000100808AC0, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.offScreen(_:));
}

void sub_100144CE0(uint64_t a1, void *a2, uint64_t a3)
{
}

uint64_t sub_100144D04(uint64_t a1, uint64_t a2)
{
  return sub_100143A94(a1, a2, 0xD000000000000010, 0x8000000100808A40, (uint64_t (*)(uint64_t, uint64_t))&AppStoreMetricManager.completed(_:));
}

void sub_100144D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100144D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100985870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100144DE0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AdvertVisibilityCalculator.VisibilityThreshold();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100144E24(uint64_t a1)
{
  return sub_100144E54(a1, &qword_1009E1358[3], &qword_1009E1358[4], qword_1009E1358);
}

uint64_t sub_100144E3C(uint64_t a1)
{
  return sub_100144E54(a1, &qword_1009E1380[3], &qword_1009E1380[4], qword_1009E1380);
}

uint64_t sub_100144E54(uint64_t a1, uint64_t *a2, void *a3, uint64_t *a4)
{
  uint64_t v7 = type metadata accessor for FontSource();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097F700 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for FontUseCase();
  uint64_t v12 = sub_100087728(v11, (uint64_t)qword_1009E4F58);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v12, v11);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for FontSource.useCase(_:), v7);
  *a2 = type metadata accessor for StaticDimension();
  *a3 = &protocol witness table for StaticDimension;
  sub_1000808B8(a4);
  uint64_t v16[3] = v7;
  void v16[4] = (uint64_t)&protocol witness table for FontSource;
  uint64_t v13 = sub_1000808B8(v16);
  (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  StaticDimension.init(_:scaledLike:)();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100145040()
{
  return AspectRatio.init(_:_:)();
}

uint64_t sub_10014504C@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v6 = sub_100082C28(&qword_100984688);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MixedMediaLockupLayout.LockupPosition();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v29[-1] - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v29[-1] - v17;
  sub_100146884(a2, (uint64_t)v8);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (v19 == 1)
  {
    (*(void (**)(uint64_t))(v3 + 208))(v19);
    sub_100082BCC((uint64_t)v8, &qword_100984688);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
  }
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v20(v15, v18, v9);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (v21 == enum case for MixedMediaLockupLayout.LockupPosition.top(_:))
  {
    if (qword_10097E190 != -1) {
      swift_once();
    }
    sub_100082C6C((uint64_t)qword_1009E1380, (uint64_t)v31);
  }
  else if (v21 == enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:))
  {
    if (qword_10097E188 != -1) {
      swift_once();
    }
    sub_100082C6C((uint64_t)qword_1009E1358, (uint64_t)v31);
  }
  else
  {
    if (qword_10097E190 != -1) {
      swift_once();
    }
    sub_100082C6C((uint64_t)qword_1009E1380, (uint64_t)v31);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  v20(v12, v18, v9);
  sub_100082C6C((uint64_t)v31, (uint64_t)v30);
  sub_100084CF0(0, (unint64_t *)&qword_100984D10);
  if (qword_10097F700 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for FontUseCase();
  sub_100087728(v22, (uint64_t)qword_1009E4F58);
  id v23 = [a1 traitCollection:v28];
  static UIFont.preferredFont(forUseWith:compatibleWith:)();

  if (qword_10097FC20 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for StaticDimension();
  uint64_t v25 = sub_100087728(v24, (uint64_t)qword_1009E5D60);
  void v29[3] = v24;
  v29[4] = (uint64_t)&protocol witness table for StaticDimension;
  unint64_t v26 = sub_1000808B8(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v26, v25, v24);
  MixedMediaLockupLayout.Metrics.init(lockupPosition:taglineNumberOfLines:taglineSpace:taglineFont:alwaysIncludeTaglineSpace:verticalSpacing:layoutMargins:)();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v31);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v18, v9);
}

char *sub_10014551C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &v4[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_itemLayoutContext];
  uint64_t v17 = type metadata accessor for ItemLayoutContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView;
  id v19 = objc_allocWithZone((Class)type metadata accessor for SmallLockupView());
  uint64_t v20 = v4;
  *(void *)&v4[v18] = [v19 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v21 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView;
  *(void *)&v20[v21] = [objc_allocWithZone((Class)type metadata accessor for LockupMediaView()) init];
  uint64_t v22 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel;
  if (qword_10097F700 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for FontUseCase();
  uint64_t v24 = sub_100087728(v23, (uint64_t)qword_1009E4F58);
  uint64_t v25 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v15, v24, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v23);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DirectionalTextAlignment.none(_:), v9);
  id v26 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
  *(void *)&v20[v22] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  *(void *)&v20[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_pageTraits] = 0;
  uint64_t v27 = &v20[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  uint64_t v28 = type metadata accessor for MixedMediaLockupLayout.LockupPosition();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v20[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = 1;
  *(void *)&v20[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_searchAdTransparencyButton] = 0;

  Swift::String v29 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell();
  v37.id receiver = v20;
  v37.super_class = v29;
  uint64_t v30 = (char *)[super initWithFrame:a1, a2, a3, a4];
  id v31 = [v30 contentView];
  [v31 addSubview:*(void *)&v30[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView]];

  id v32 = [v30 contentView];
  [v32 addSubview:*(void *)&v30[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView]];

  uint64_t v33 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel;
  id v34 = *(id *)&v30[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel];
  dispatch thunk of DynamicTypeLabel.wantsFastBaselineMeasurement.setter();

  id v35 = [v30 contentView];
  [v35 addSubview:*(void *)&v30[v33]];

  [v30 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  return v30;
}

uint64_t sub_1001459D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for MixedMediaLockupLayout.LockupPosition.bottom(_:);
  uint64_t v3 = type metadata accessor for MixedMediaLockupLayout.LockupPosition();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_100145A44(void *a1)
{
  if (a1)
  {
    id v3 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView);
    id v4 = [a1 superview];
    if (v4)
    {
      sub_100084CF0(0, (unint64_t *)&qword_1009828E0);
      id v5 = v3;
      id v6 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)();
    }
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

void (*sub_100145B04(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = swift_unknownObjectWeakLoadStrong();
  return sub_100145B68;
}

void sub_100145B68(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 8) + *(void *)(a1 + 16));
  id v7 = *(id *)a1;
  if (a2)
  {
    id v3 = v7;
    id v4 = v2;
    sub_1002278D8();

    id v5 = v4;
  }
  else
  {
    id v6 = v2;
    sub_1002278D8();

    id v5 = v7;
  }
}

uint64_t sub_100145BF4()
{
  v24[1] = swift_getObjectType();
  uint64_t v29 = type metadata accessor for LayoutRect();
  uint64_t v28 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v27 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for MixedMediaLockupLayout();
  uint64_t v25 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100082C28(&qword_100984688);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MixedMediaLockupLayout.Metrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v24 - v12;
  uint64_t v14 = (objc_class *)type metadata accessor for MixedMediaLockupCollectionViewCell();
  v39.id receiver = v0;
  v39.super_class = v14;
  [super layoutSubviews];
  uint64_t v15 = (uint64_t)&v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  swift_beginAccess();
  sub_100146884(v15, (uint64_t)v6);
  sub_10014504C(v0, (uint64_t)v6, (uint64_t)v13);
  sub_100082BCC((uint64_t)v6, &qword_100984688);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView];
  uint64_t v37 = type metadata accessor for SmallLockupView();
  uint64_t v38 = &protocol witness table for UIView;
  id v36 = v16;
  uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView];
  uint64_t v34 = type metadata accessor for LockupMediaView();
  id v35 = &protocol witness table for UIView;
  uint64_t v33 = v17;
  uint64_t v18 = *(void **)&v0[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel];
  id v19 = v16;
  id v20 = v17;
  if ([v18 hasContent])
  {
    *(void *)&long long v32 = type metadata accessor for DynamicTypeLabel();
    *((void *)&v32 + 1) = &protocol witness table for UILabel;
    id v21 = v18;
  }
  else
  {
    uint64_t v18 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
  }
  uint64_t v30 = v18;
  MixedMediaLockupLayout.init(metrics:lockupView:media:tagline:)();
  LayoutMarginsAware<>.layoutFrame.getter();
  uint64_t v22 = v27;
  MixedMediaLockupLayout.placeChildren(relativeTo:in:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v29);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_100146048@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_100223CA4(a1, a2, a3, a4);
}

uint64_t sub_100146050()
{
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  if (v1 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_15:
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 144);
    return v14();
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      return static AspectRatio.square.getter();
    }
  }

  return AspectRatio.init(_:_:)();
}

uint64_t sub_1001461D8()
{
  uint64_t result = Lockup.editorialTagline.getter();
  if (!v1) {
    return Lockup.developerTagline.getter();
  }
  return result;
}

id sub_1001462E8()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for MixedMediaLockupCollectionViewCell();
  return [super dealloc];
}

uint64_t sub_1001463CC()
{
  return type metadata accessor for MixedMediaLockupCollectionViewCell();
}

uint64_t type metadata accessor for MixedMediaLockupCollectionViewCell()
{
  uint64_t result = qword_1009858B8;
  if (!qword_1009858B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100146420()
{
  sub_100006840(319, (unint64_t *)&qword_100984CD0, (void (*)(uint64_t))&type metadata accessor for ItemLayoutContext);
  if (v0 <= 0x3F)
  {
    sub_100006840(319, &qword_1009858D0, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockupLayout.LockupPosition);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100146548()
{
  return swift_unknownObjectWeakLoadStrong();
}

void sub_100146568(void *a1)
{
  id v2 = *(id *)(v1 + OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView);
  sub_1002278D8();
}

uint64_t (*sub_1001465C4(uint64_t **a1))()
{
  id v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_100145B04(v2);
  return sub_100090DB4;
}

uint64_t sub_10014661C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return VideoViewProviding.someVideoView.getter(a1, WitnessTable);
}

uint64_t sub_100146670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return VideoViewProviding.someVideoView.setter(a1, a2, a3, WitnessTable);
}

uint64_t (*sub_1001466DC(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  swift_getWitnessTable();
  v2[4] = VideoViewProviding.someVideoView.modify();
  return sub_100090DB4;
}

uint64_t sub_100146764()
{
  return sub_10014683C(&qword_1009858D8, (void (*)(uint64_t))type metadata accessor for MixedMediaLockupCollectionViewCell);
}

uint64_t sub_1001467AC()
{
  return sub_10014683C((unint64_t *)&unk_1009858E0, (void (*)(uint64_t))type metadata accessor for MixedMediaLockupCollectionViewCell);
}

uint64_t sub_1001467F4()
{
  return sub_10014683C(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
}

uint64_t sub_10014683C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100146884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100984688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1001468EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = &v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_itemLayoutContext];
  uint64_t v10 = type metadata accessor for ItemLayoutContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_lockupView;
  *(void *)&v1[v11] = [objc_allocWithZone((Class)type metadata accessor for SmallLockupView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_mediaView;
  *(void *)&v1[v12] = [objc_allocWithZone((Class)type metadata accessor for LockupMediaView()) init];
  uint64_t v13 = OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_taglineLabel;
  if (qword_10097F700 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for FontUseCase();
  uint64_t v15 = sub_100087728(v14, (uint64_t)qword_1009E4F58);
  uint64_t v16 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, v15, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
  id v17 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
  *(void *)&v1[v13] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  *(void *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_pageTraits] = 0;
  uint64_t v18 = &v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_overrideLockupPosition];
  uint64_t v19 = type metadata accessor for MixedMediaLockupLayout.LockupPosition();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_alwaysIncludeTaglineSpace] = 1;
  *(void *)&v1[OBJC_IVAR____TtC8AppStore34MixedMediaLockupCollectionViewCell_searchAdTransparencyButton] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100146C58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (!dispatch thunk of SearchResultsPresenter.result(at:)()) {
    return;
  }
  id v8 = [a1 traitCollection];
  char v9 = dispatch thunk of SearchResultsPresenter.shouldResultHaveCondensedAppearance(at:in:)();

  type metadata accessor for AppSearchResult();
  if (swift_dynamicCastClass())
  {
    type metadata accessor for ContentSearchResultCollectionViewCell();
    uint64_t v10 = swift_dynamicCastClass();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      swift_retain();
      id v12 = a2;
      AppSearchResult.lockup.getter();
      uint64_t v13 = sub_100210BA0(v9 & 1);
      swift_release();
      sub_100147D80(v13, v11, a3, a1);

LABEL_5:
      swift_release();
LABEL_6:
      swift_release_n();
      return;
    }
    goto LABEL_70;
  }
  type metadata accessor for BundleSearchResult();
  if (swift_dynamicCastClass())
  {
    type metadata accessor for BundleSearchResultCollectionViewCell();
    if (swift_dynamicCastClass())
    {
      swift_retain();
      id v163 = a2;
      uint64_t v14 = BundleSearchResult.lockup.getter();
      uint64_t v15 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
      id v16 = [(id)swift_unknownObjectRetain() traitCollection];
      id v17 = [v16 horizontalSizeClass];

      if (v17 == (id)1)
      {
        [*(id *)(v4 + v15) pageMarginInsets];
      }
      else
      {
        double top = UIEdgeInsetsZero.top;
        double left = UIEdgeInsetsZero.left;
        double bottom = UIEdgeInsetsZero.bottom;
        double right = UIEdgeInsetsZero.right;
      }
      sub_100566DA8(v14, *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph), top, left, bottom, right);
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v40 = BundleSearchResult.lockup.getter();
      sub_100566B18(v40, *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader));
      swift_release();
      uint64_t v41 = BundleSearchResult.lockup.getter();
      sub_100149448(v41, v163, v4);
      swift_release();
      swift_release_n();

      return;
    }
LABEL_70:
    goto LABEL_72;
  }
  type metadata accessor for AdvertsSearchResult();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for EditorialSearchResult();
    uint64_t v42 = swift_dynamicCastClass();
    if (v42)
    {
      uint64_t v43 = v42;
      type metadata accessor for EditorialSearchResultCollectionViewCell();
      uint64_t v44 = swift_dynamicCastClass();
      if (v44)
      {
        uint64_t v45 = (void *)v44;
        uint64_t v46 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
        uint64_t v47 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits);
        swift_getObjectType();
        swift_retain();
        id v158 = a2;
        id v48 = [(id)swift_unknownObjectRetain() traitCollection];
        id v49 = [v48 horizontalSizeClass];

        if (v49 == (id)1)
        {
          [*(id *)(v4 + v46) pageMarginInsets];
          double v51 = v50;
          double v53 = v52;
          double v55 = v54;
          double v57 = v56;
        }
        else
        {
          double v51 = UIEdgeInsetsZero.top;
          double v53 = UIEdgeInsetsZero.left;
          double v55 = UIEdgeInsetsZero.bottom;
          double v57 = UIEdgeInsetsZero.right;
        }
        id v67 = (id)ASKDeviceTypeGetCurrent();
        sub_100412BDC(v43, v47, *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph), *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkIconFetcher), *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader), v45, v51, v53, v55, v57);
        swift_unknownObjectRelease();

        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          type metadata accessor for VideoPlaybackCoordinator();
          id v165 = (id)inject(_:from:)();
          uint64_t v69 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v69) {
            sub_100150520(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
          }
          sub_100150520(&qword_100985A10, (void (*)(uint64_t))type metadata accessor for EditorialSearchResultCollectionViewCell);
          id v113 = v158;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)();
        }
        else
        {
        }
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_1001498E8(v43, a2, v4);
      goto LABEL_6;
    }
    type metadata accessor for InAppPurchaseSearchResult();
    if (swift_dynamicCastClass())
    {
      type metadata accessor for InAppPurchaseSearchResultCollectionViewCell();
      uint64_t v58 = swift_dynamicCastClass();
      swift_retain();
      if (v58)
      {
        id v164 = a2;
        uint64_t v59 = InAppPurchaseSearchResult.lockup.getter();
        uint64_t v60 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
        id v159 = [*(id *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits) traitCollection];
        id v61 = [*(id *)(v3 + v60) traitCollection];
        id v62 = [v61 horizontalSizeClass];

        if (v62 == (id)1)
        {
          [*(id *)(v4 + v60) pageMarginInsets];
        }
        else
        {
          double v63 = UIEdgeInsetsZero.top;
          double v64 = UIEdgeInsetsZero.left;
          double v65 = UIEdgeInsetsZero.bottom;
          double v66 = UIEdgeInsetsZero.right;
        }
        sub_1003DDB24(v59, *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph), *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader), v63, v64, v65, v66);

        swift_release();
      }
      uint64_t v114 = InAppPurchaseSearchResult.lockup.getter();
      sub_100149D88(v114, a2, v4);
      goto LABEL_5;
    }
    type metadata accessor for LockupCollectionSearchResult();
    uint64_t v84 = swift_dynamicCastClass();
    if (v84)
    {
      uint64_t v85 = v84;
      type metadata accessor for SearchLockupListCollectionViewCell();
      if (swift_dynamicCastClass())
      {
        uint64_t v161 = *(void *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph);
        id v166 = *(id *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
        uint64_t v86 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
        id v87 = *(void **)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits);
        swift_retain();
        id v157 = a2;
        id v88 = [(id)swift_unknownObjectRetain() traitCollection];
        id v89 = [v88 horizontalSizeClass];

        if (v89 == (id)1)
        {
          [*(id *)(v3 + v86) pageMarginInsets];
        }
        else
        {
          double v90 = UIEdgeInsetsZero.top;
          double v91 = UIEdgeInsetsZero.left;
          double v92 = UIEdgeInsetsZero.bottom;
          double v93 = UIEdgeInsetsZero.right;
        }
        sub_1006461F8(v85, (uint64_t)v166, v161, v87, v90, v91, v92, v93);

        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain();
      }
      swift_retain();
      sub_10014A228(v85, a2, v3);
      goto LABEL_6;
    }
    type metadata accessor for AppEventSearchResult();
    uint64_t v115 = swift_dynamicCastClass();
    if (v115)
    {
      uint64_t v116 = v115;
      type metadata accessor for AppEventSearchResultCollectionViewCell();
      uint64_t v117 = swift_dynamicCastClass();
      if (v117)
      {
        id v167 = (id)v117;
        uint64_t v118 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
        NSString v119 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits);
        swift_retain();
        id v162 = a2;
        [v119 pageMarginInsets];
        double v121 = v120;
        id v122 = [*(id *)(v4 + v118) traitCollection];
        id v123 = [v122 horizontalSizeClass];

        if (v123 == (id)1)
        {
          [*(id *)(v4 + v118) pageMarginInsets];
          double v125 = v124;
          double v127 = v126;
          double v129 = v128;
          double v131 = v130;
        }
        else
        {
          double v125 = UIEdgeInsetsZero.top;
          double v127 = UIEdgeInsetsZero.left;
          double v129 = UIEdgeInsetsZero.bottom;
          double v131 = UIEdgeInsetsZero.right;
        }
        uint64_t v136 = v116;
        uint64_t v137 = *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph);
        swift_unknownObjectRetain();
        sub_1001FDBB0(v116, v137, v121, v125, v127, v129, v131);
        swift_unknownObjectRelease();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v139 = [a1 layoutAttributesForItemAtIndexPath:isa];

        if (v139)
        {
          [v139 frame];
          uint64_t v141 = v140;
          uint64_t v143 = v142;
          uint64_t v145 = v144;
          uint64_t v147 = v146;
        }
        else
        {
          uint64_t v141 = 0;
          uint64_t v143 = 0;
          uint64_t v145 = 0;
          uint64_t v147 = 0;
        }
        uint64_t v169 = v141;
        uint64_t v170 = v143;
        uint64_t v171 = v145;
        uint64_t v172 = v147;
        BOOL v173 = v139 == 0;
        uint64_t v148 = *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
        swift_unknownObjectRetain();
        sub_1001FDE40(v136, (uint64_t)&v169, v148);
        swift_unknownObjectRelease();
        id v149 = (void *)swift_unknownObjectWeakLoadStrong();

        if (v149)
        {
          type metadata accessor for VideoPlaybackCoordinator();
          id v150 = (void *)inject(_:from:)();
          uint64_t v151 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v151) {
            sub_100150520(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
          }
          sub_100150520(&qword_1009859A8, (void (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell);
          id v152 = v162;
          dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)();
        }
        swift_retain();
        sub_10014A6C8(v136, v167, v4);

        goto LABEL_6;
      }
      type metadata accessor for ContentSearchResultCollectionViewCell();
      uint64_t v132 = swift_dynamicCastClass();
      if (v132)
      {
        uint64_t v133 = (void *)v132;
        swift_retain();
        id v134 = a2;
        AppEventSearchResult.lockup.getter();
        uint64_t v135 = sub_100210BA0(v9 & 1);
        swift_release();
        sub_100147D80(v135, v133, a3, a1);

        goto LABEL_5;
      }
    }
    goto LABEL_70;
  }
  type metadata accessor for AdvertSearchResultCollectionViewCell();
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22) {
    goto LABEL_70;
  }
  uint64_t v23 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController;
  if (!*(void *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController))
  {
LABEL_72:
    swift_release();
    return;
  }
  uint64_t v24 = (char *)v22;
  id v25 = a2;
  swift_retain();
  dispatch thunk of AdvertRotationController.currentAdvert.getter();
  swift_release();
  sub_100082C28(&qword_1009A4AB0);
  type metadata accessor for MixedMediaLockup();
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_72;
  }
  uint64_t v154 = v23;
  uint64_t v155 = v25;
  uint64_t v26 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
  [*(id *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits) pageMarginInsets];
  double v28 = v27;
  uint64_t v29 = (void *)swift_unknownObjectRetain();
  id v30 = [v29 traitCollection];
  id v31 = [v30 horizontalSizeClass];

  uint64_t v153 = v26;
  if (v31 == (id)1)
  {
    [*(id *)(v4 + v26) pageMarginInsets];
    double v33 = v32;
    double v35 = v34;
    double v37 = v36;
    double v39 = v38;
  }
  else
  {
    double v33 = UIEdgeInsetsZero.top;
    double v35 = UIEdgeInsetsZero.left;
    double v37 = UIEdgeInsetsZero.bottom;
    double v39 = UIEdgeInsetsZero.right;
  }
  id v70 = (id)ASKDeviceTypeGetCurrent();
  uint64_t v71 = *(void **)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph);
  uint64_t v156 = OBJC_IVAR____TtC8AppStore36AdvertSearchResultCollectionViewCell_advertsContentView;
  id v72 = *(id *)&v24[OBJC_IVAR____TtC8AppStore36AdvertSearchResultCollectionViewCell_advertsContentView];
  id v73 = [v29 traitCollection];
  uint64_t v160 = (uint64_t)v71;
  sub_1006D9120(v168, (uint64_t)v73, (uint64_t)v70, v71, v28, v33, v35, v37, v39);

  [v24 setNeedsLayout];
  swift_unknownObjectRelease();

  Class v74 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v75 = [a1 layoutAttributesForItemAtIndexPath:v74];

  if (v75)
  {
    [v75 frame];
    uint64_t v77 = v76;
    uint64_t v79 = v78;
    uint64_t v81 = v80;
    uint64_t v83 = v82;
  }
  else
  {
    uint64_t v77 = 0;
    uint64_t v79 = 0;
    uint64_t v81 = 0;
    uint64_t v83 = 0;
  }
  uint64_t v169 = v77;
  uint64_t v170 = v79;
  uint64_t v171 = v81;
  uint64_t v172 = v83;
  BOOL v173 = v75 == 0;
  uint64_t v94 = *(void *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
  id v95 = *(void **)(v4 + v153);
  id v96 = *(void **)&v24[v156];
  swift_unknownObjectRetain();
  id v97 = v96;
  id v98 = [v95 traitCollection];
  sub_1006D97B4(v168, (uint64_t)&v169, v94, v98);
  swift_unknownObjectRelease();

  type metadata accessor for VideoPlaybackCoordinator();
  uint64_t v99 = inject(_:from:)();
  id v100 = *(void **)&v24[v156];
  id v101 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v101) {
    sub_100150520(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
  }
  sub_100150520(&qword_100985A18, (void (*)(uint64_t))type metadata accessor for AdvertsSearchResultContentView);
  id v102 = v100;
  uint64_t v103 = (void *)v99;
  dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)();

  uint64_t v104 = swift_retain();
  sub_100149448(v104, v155, v4);
  uint64_t v105 = Lockup.searchAd.getter();
  swift_release();
  uint64_t v106 = *(void **)&v24[v156];
  if (v105)
  {
    id v107 = self;
    id v108 = v106;
    id v109 = [v107 clearColor];
    [v108 setBackgroundColor:v109];
  }
  else
  {
    id v110 = v106;
  }
  sub_1002E0D9C(v105, v160);
  [v106 setNeedsLayout];

  [v24 setNeedsLayout];
  swift_release();
  uint64_t v111 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1004C0C54((uint64_t)sub_100150518, v111);
  swift_release();
  if (*(void *)(v4 + v154))
  {
    sub_100150520((unint64_t *)&unk_100985998, (void (*)(uint64_t))type metadata accessor for AdvertSearchResultCollectionViewCell);
    id v112 = v155;
    swift_retain();
    dispatch thunk of AdvertRotationController.didApplyCell(_:in:)();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
  }
}

void sub_100147CF4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController);
    swift_retain();

    if (v2)
    {
      dispatch thunk of AdvertRotationController.didInteractWithAdvert()();
      swift_release();
    }
  }
}

void sub_100147D80(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
  [*(id *)(v4 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits) pageMarginInsets];
  double v11 = v10;
  id v12 = *(void **)(v4 + v9);
  id v13 = [(id)swift_unknownObjectRetain() traitCollection];
  id v14 = [v13 horizontalSizeClass];

  if (v14 == (id)1)
  {
    [*(id *)(v5 + v9) pageMarginInsets];
    double top = v15;
    double left = v17;
    double bottom = v19;
    double right = v21;
  }
  else
  {
    double top = UIEdgeInsetsZero.top;
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
  }
  id v23 = (id)ASKDeviceTypeGetCurrent();
  sub_1004E357C(a1, v12, (uint64_t)v23, *(void *)(v5 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_objectGraph), v11, top, left, bottom, right);
  swift_unknownObjectRelease();

  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v25 = [a4 layoutAttributesForItemAtIndexPath:isa];

  if (v25)
  {
    [v25 frame];
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v29 = 0;
    uint64_t v31 = 0;
    uint64_t v33 = 0;
  }
  v39[0] = v27;
  v39[1] = v29;
  v39[2] = v31;
  v39[3] = v33;
  BOOL v40 = v25 == 0;
  uint64_t v34 = *(void *)(v5 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
  double v35 = *(void **)(v5 + v9);
  swift_unknownObjectRetain();
  sub_1004E3C8C(a1, (uint64_t)v39, v34, v35);
  swift_unknownObjectRelease();
  type metadata accessor for VideoPlaybackCoordinator();
  id v38 = (id)inject(_:from:)();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {
    sub_100150520(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
  }
  sub_100150520(&qword_1009859C0, (void (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell);
  dispatch thunk of VideoPlaybackCoordinator.register(videoView:videoContainer:)();

  uint64_t v37 = swift_retain();
  sub_100149448(v37, a2, v5);
  swift_release();
}

uint64_t sub_100148090(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  type metadata accessor for ContentSearchResultCollectionViewCell();
  uint64_t v5 = swift_dynamicCastClass();
  double v56 = a2;
  if (!v5) {
    goto LABEL_16;
  }
  uint64_t v6 = v5;
  uint64_t v54 = v2;
  uint64_t v7 = (uint64_t *)(*(void *)(v5 + OBJC_IVAR____TtC8AppStore37ContentSearchResultCollectionViewCell_screenshots)
                 + OBJC_IVAR____TtC8AppStore15LockupMediaView_imageViews);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
    id v18 = a2;
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v10 = a2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_4:
      if (v9 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v12 = 0;
      do
      {
        if ((v8 & 0xC000000000000001) != 0) {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v13 = *(id *)(v8 + 8 * v12 + 32);
        }
        id v14 = v13;
        ++v12;
        type metadata accessor for BorderedScreenshotView();
        sub_100150520(&qword_1009859B8, (void (*)(uint64_t))type metadata accessor for BorderedScreenshotView);
        double v15 = v14;
        AnyHashable.init<A>(_:)();
        ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)();
        sub_1000E2D1C((uint64_t)v57);
        id v16 = *(id *)&v15[OBJC_IVAR____TtC8AppStore22BorderedScreenshotView_artworkView];
        v58.value.super.Class isa = 0;
        v58.is_nil = 0;
        ArtworkView.setImage(image:animated:)(v58, v17);
      }
      while (v9 != v12);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = (void *)Strong;
    [*(id *)(Strong + qword_10099B108) setImage:0];
    type metadata accessor for VideoView();
    sub_100150520((unint64_t *)&qword_1009859C8, (void (*)(uint64_t))type metadata accessor for VideoView);
    id v21 = v20;
    AnyHashable.init<A>(_:)();
    ArtworkLoader.forgetFetch(forHandlerKey:deprioritizingFetch:)();

    sub_1000E2D1C((uint64_t)v57);
  }
  uint64_t v22 = *(void *)(v6 + OBJC_IVAR____TtC8AppStore37ContentSearchResultCollectionViewCell_lockupView);
  uint64_t v23 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
  id v24 = *(id *)(v22 + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView);
  v59.value.super.Class isa = 0;
  v59.is_nil = 0;
  ArtworkView.setImage(image:animated:)(v59, v25);

  uint64_t v26 = *(void **)(v22 + v23);
  type metadata accessor for ArtworkView();
  sub_100150520((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
  id v27 = v26;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)();

  type metadata accessor for VideoPlaybackCoordinator();
  uint64_t v3 = v54;
  uint64_t v28 = (void *)inject(_:from:)();
  uint64_t v29 = (void *)swift_unknownObjectWeakLoadStrong();
  a2 = v56;
  if (v29) {
    sub_100150520(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
  }
  sub_100150520(&qword_1009859C0, (void (*)(uint64_t))type metadata accessor for ContentSearchResultCollectionViewCell);
  id v30 = v56;
  dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)();

LABEL_16:
  uint64_t result = dispatch thunk of SearchResultsPresenter.result(at:)();
  if (!result) {
    return result;
  }
  type metadata accessor for AppEventSearchResultCollectionViewCell();
  uint64_t v31 = swift_dynamicCastClass();
  if (v31)
  {
    uint64_t v32 = *(void *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
    uint64_t v33 = *(void *)(v31 + OBJC_IVAR____TtC8AppStore38AppEventSearchResultCollectionViewCell_lockupView);
    uint64_t v34 = OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView;
    double v35 = *(void **)(v33 + OBJC_IVAR____TtC8AppStore14BaseLockupView_artworkView);
    id v55 = a2;
    id v36 = v35;
    v60.value.super.Class isa = 0;
    v60.is_nil = 0;
    ArtworkView.setImage(image:animated:)(v60, v37);

    id v38 = *(void **)(v33 + v34);
    type metadata accessor for ArtworkView();
    sub_100150520((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
    id v39 = v38;
    ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)();

    sub_1004FFECC(v32, 1, v40);
    type metadata accessor for VideoPlaybackCoordinator();
    uint64_t v41 = (void *)inject(_:from:)();
    uint64_t v42 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v42) {
      sub_100150520(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
    }
    sub_100150520(&qword_1009859A8, (void (*)(uint64_t))type metadata accessor for AppEventSearchResultCollectionViewCell);
    id v43 = v55;
    dispatch thunk of VideoPlaybackCoordinator.unregister(videoView:videoContainer:pausingPlayback:)();

    a2 = v56;
  }
  type metadata accessor for AdvertSearchResultCollectionViewCell();
  if (swift_dynamicCastClass()
    && *(void *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController))
  {
    sub_100150520((unint64_t *)&unk_100985998, (void (*)(uint64_t))type metadata accessor for AdvertSearchResultCollectionViewCell);
    id v44 = a2;
    swift_retain();
    dispatch thunk of AdvertRotationController.didEndDisplaying(_:in:)();
    swift_release();
  }
  type metadata accessor for AppSearchResult();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for AdvertsSearchResult();
    if (swift_dynamicCastClass())
    {
      if (*(void *)(v3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_advertRotationController))
      {
        swift_retain();
        dispatch thunk of AdvertRotationController.currentAdvert.getter();
        swift_release();
        sub_100082C28(&qword_1009A4AB0);
        type metadata accessor for MixedMediaLockup();
        if (swift_dynamicCast())
        {
          uint64_t v46 = swift_retain();
          sub_10014B2EC(v46, v3);
          swift_release();
          return swift_release_n();
        }
      }
    }
    else
    {
      type metadata accessor for EditorialSearchResult();
      uint64_t v47 = swift_dynamicCastClass();
      if (v47)
      {
        uint64_t v48 = v47;
        swift_retain();
        sub_10014B544(v48, v3);
        return swift_release_n();
      }
      type metadata accessor for InAppPurchaseSearchResult();
      if (swift_dynamicCastClass())
      {
        swift_retain();
        uint64_t v49 = InAppPurchaseSearchResult.lockup.getter();
        sub_10014B79C(v49, v3);
        goto LABEL_27;
      }
      type metadata accessor for BundleSearchResult();
      if (swift_dynamicCastClass())
      {
        swift_retain();
        uint64_t v45 = BundleSearchResult.lockup.getter();
        goto LABEL_26;
      }
      type metadata accessor for LockupCollectionSearchResult();
      uint64_t v50 = swift_dynamicCastClass();
      if (v50)
      {
        uint64_t v51 = v50;
        swift_retain();
        sub_10014B9F4(v51, v3);
        return swift_release_n();
      }
      type metadata accessor for AppEventSearchResult();
      uint64_t v52 = swift_dynamicCastClass();
      if (v52)
      {
        uint64_t v53 = v52;
        swift_retain();
        if (dispatch thunk of SearchResultsPresenter.shouldDisplayAppEvent(for:)())
        {
          swift_retain();
          sub_10014BC4C(v53, v3);
          return swift_release_n();
        }
        uint64_t v45 = AppEventSearchResult.lockup.getter();
        goto LABEL_26;
      }
    }
    return swift_release();
  }
  swift_retain();
  uint64_t v45 = AppSearchResult.lockup.getter();
LABEL_26:
  sub_10014B2EC(v45, v3);
LABEL_27:
  swift_release();
  return swift_release_n();
}

uint64_t sub_1001489B4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, char *))
{
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = a3;
  id v15 = a4;
  id v16 = a1;
  a6(v14, v15, v13);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_100148F28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  type metadata accessor for AdvertSearchResultCollectionViewCell();
  if (swift_dynamicCastClass())
  {
    sub_1000A3B70(a3, (uint64_t)v32);
    id v11 = a1;
    sub_100082C28(&qword_1009A4AB0);
    type metadata accessor for MixedMediaLockup();
    if (swift_dynamicCast())
    {
      sub_1000A3B70(a4, (uint64_t)v32);
      if (swift_dynamicCast())
      {
        uint64_t v12 = swift_retain();
        sub_10014B2EC(v12, v6);
        swift_release();
        uint64_t v13 = swift_retain();
        sub_100149448(v13, v11, v6);
        swift_release();
        uint64_t v14 = OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits;
        [*(id *)(v6 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_pageTraits) pageMarginInsets];
        double v16 = v15;
        id v30 = [*(id *)(v6 + v14) traitCollection];
        id v17 = [*(id *)(v6 + v14) traitCollection];
        id v18 = [v17 horizontalSizeClass];

        if (v18 == (id)1)
        {
          [*(id *)(v6 + v14) pageMarginInsets];
          double top = v19;
          double left = v21;
          double bottom = v23;
          double right = v25;
        }
        else
        {
          double top = UIEdgeInsetsZero.top;
          double left = UIEdgeInsetsZero.left;
          double bottom = UIEdgeInsetsZero.bottom;
          double right = UIEdgeInsetsZero.right;
        }
        id v27 = (id)ASKDeviceTypeGetCurrent();
        uint64_t v28 = *(void *)(v6 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_artworkLoader);
        type metadata accessor for ObjectGraph();
        uint64_t v29 = (void *)swift_dynamicCastClassUnconditional();
        sub_1006D89A4(v31, v30, (uint64_t)v27, v28, v29, a6 & 1, v16, top, left, bottom, right);

        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
    }
  }
}

id sub_1001491DC()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsCollectionViewDelegate();
  return [super dealloc];
}

uint64_t sub_100149308()
{
  return type metadata accessor for SearchResultsCollectionViewDelegate();
}

uint64_t type metadata accessor for SearchResultsCollectionViewDelegate()
{
  uint64_t result = qword_100985950;
  if (!qword_100985950) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10014935C()
{
  sub_10000800C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100149448(uint64_t a1, void *a2, uint64_t a3)
{
  id v30 = a2;
  uint64_t v5 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for ImpressionMetrics();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v28 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  double v16 = (char *)&v27 - v15;
  uint64_t v29 = type metadata accessor for MixedMediaLockup();
  v32[3] = v29;
  v32[4] = sub_100150520(&qword_100985978, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockup);
  v32[0] = a1;
  sub_100082B68(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_100985970);
  id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v17(v10, 1, v11) == 1)
  {
    swift_retain();
    sub_100082BCC((uint64_t)v10, &qword_100985970);
    uint64_t v18 = a3;
    id v19 = v30;
    uint64_t v20 = v12;
  }
  else
  {
    uint64_t v27 = v12;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    uint64_t v18 = a3;
    if (*(void *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      swift_retain();
      id v19 = v30;
      [v30 frame];
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)();
    }
    else
    {
      swift_retain();
      id v19 = v30;
    }
    uint64_t v20 = v27;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v11);
  }
  sub_100082C6C((uint64_t)v32, (uint64_t)v31);
  sub_100150520(&qword_100985980, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockup);
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if (v17(v7, 1, v11) == 1)
  {
    sub_100082BCC((uint64_t)v7, &qword_100985970);
  }
  else
  {
    double v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v7, v11);
    uint64_t v22 = *(void *)(v18 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v22)
    {
      [v19 frame];
      ImpressionsCalculator.addElement(_:at:)();
    }
    [v19 frame];
    double v23 = sub_100081D90(v31, v31[3]);
    sub_10014C0FC(*v23, v22);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v31);
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v24 = v19;
  }
  else {
    id v24 = 0;
  }
  if (v24)
  {
    id v25 = v19;
    [v25 frame];
    sub_10014B008(v32[0], v18, (void (*)(void, __n128))&type metadata accessor for MixedMediaLockup, &qword_100985980, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockup);
    swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter();
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v32);
}

uint64_t sub_1001498E8(uint64_t a1, void *a2, uint64_t a3)
{
  id v30 = a2;
  uint64_t v5 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for ImpressionMetrics();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v28 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  double v16 = (char *)&v27 - v15;
  uint64_t v29 = type metadata accessor for EditorialSearchResult();
  v32[3] = v29;
  v32[4] = sub_100150520(&qword_1009859D0, (void (*)(uint64_t))&type metadata accessor for EditorialSearchResult);
  v32[0] = a1;
  sub_100082B68(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_100985970);
  id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v17(v10, 1, v11) == 1)
  {
    swift_retain();
    sub_100082BCC((uint64_t)v10, &qword_100985970);
    uint64_t v18 = a3;
    id v19 = v30;
    uint64_t v20 = v12;
  }
  else
  {
    uint64_t v27 = v12;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    uint64_t v18 = a3;
    if (*(void *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      swift_retain();
      id v19 = v30;
      [v30 frame];
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)();
    }
    else
    {
      swift_retain();
      id v19 = v30;
    }
    uint64_t v20 = v27;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v11);
  }
  sub_100082C6C((uint64_t)v32, (uint64_t)v31);
  sub_100150520(&qword_1009859D8, (void (*)(uint64_t))&type metadata accessor for EditorialSearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if (v17(v7, 1, v11) == 1)
  {
    sub_100082BCC((uint64_t)v7, &qword_100985970);
  }
  else
  {
    double v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v7, v11);
    uint64_t v22 = *(void *)(v18 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v22)
    {
      [v19 frame];
      ImpressionsCalculator.addElement(_:at:)();
    }
    [v19 frame];
    double v23 = sub_100081D90(v31, v31[3]);
    sub_10014C7E4(*v23, v22);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v31);
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v24 = v19;
  }
  else {
    id v24 = 0;
  }
  if (v24)
  {
    id v25 = v19;
    [v25 frame];
    sub_10014B008(v32[0], v18, (void (*)(void, __n128))&type metadata accessor for EditorialSearchResult, &qword_1009859D8, (void (*)(uint64_t))&type metadata accessor for EditorialSearchResult);
    swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter();
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v32);
}

uint64_t sub_100149D88(uint64_t a1, void *a2, uint64_t a3)
{
  id v30 = a2;
  uint64_t v5 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for ImpressionMetrics();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v28 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  double v16 = (char *)&v27 - v15;
  uint64_t v29 = type metadata accessor for InAppPurchaseLockup();
  v32[3] = v29;
  v32[4] = sub_100150520(&qword_1009859E0, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup);
  v32[0] = a1;
  sub_100082B68(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_100985970);
  id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v17(v10, 1, v11) == 1)
  {
    swift_retain();
    sub_100082BCC((uint64_t)v10, &qword_100985970);
    uint64_t v18 = a3;
    id v19 = v30;
    uint64_t v20 = v12;
  }
  else
  {
    uint64_t v27 = v12;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    uint64_t v18 = a3;
    if (*(void *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      swift_retain();
      id v19 = v30;
      [v30 frame];
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)();
    }
    else
    {
      swift_retain();
      id v19 = v30;
    }
    uint64_t v20 = v27;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v11);
  }
  sub_100082C6C((uint64_t)v32, (uint64_t)v31);
  sub_100150520(&qword_1009859E8, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup);
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if (v17(v7, 1, v11) == 1)
  {
    sub_100082BCC((uint64_t)v7, &qword_100985970);
  }
  else
  {
    double v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v7, v11);
    uint64_t v22 = *(void *)(v18 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v22)
    {
      [v19 frame];
      ImpressionsCalculator.addElement(_:at:)();
    }
    [v19 frame];
    double v23 = sub_100081D90(v31, v31[3]);
    sub_10014CECC(*v23, v22);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v31);
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v24 = v19;
  }
  else {
    id v24 = 0;
  }
  if (v24)
  {
    id v25 = v19;
    [v25 frame];
    sub_10014B008(v32[0], v18, (void (*)(void, __n128))&type metadata accessor for InAppPurchaseLockup, &qword_1009859E8, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup);
    swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter();
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v32);
}

uint64_t sub_10014A228(uint64_t a1, void *a2, uint64_t a3)
{
  id v30 = a2;
  uint64_t v5 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for ImpressionMetrics();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v28 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  double v16 = (char *)&v27 - v15;
  uint64_t v29 = type metadata accessor for LockupCollectionSearchResult();
  v32[3] = v29;
  v32[4] = sub_100150520(&qword_1009859F0, (void (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult);
  v32[0] = a1;
  sub_100082B68(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_100985970);
  id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v17(v10, 1, v11) == 1)
  {
    swift_retain();
    sub_100082BCC((uint64_t)v10, &qword_100985970);
    uint64_t v18 = a3;
    id v19 = v30;
    uint64_t v20 = v12;
  }
  else
  {
    uint64_t v27 = v12;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    uint64_t v18 = a3;
    if (*(void *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      swift_retain();
      id v19 = v30;
      [v30 frame];
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)();
    }
    else
    {
      swift_retain();
      id v19 = v30;
    }
    uint64_t v20 = v27;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v11);
  }
  sub_100082C6C((uint64_t)v32, (uint64_t)v31);
  sub_100150520(&qword_1009859F8, (void (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if (v17(v7, 1, v11) == 1)
  {
    sub_100082BCC((uint64_t)v7, &qword_100985970);
  }
  else
  {
    double v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v7, v11);
    uint64_t v22 = *(void *)(v18 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v22)
    {
      [v19 frame];
      ImpressionsCalculator.addElement(_:at:)();
    }
    [v19 frame];
    double v23 = sub_100081D90(v31, v31[3]);
    sub_10014D5B4(*v23, v22);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v31);
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v24 = v19;
  }
  else {
    id v24 = 0;
  }
  if (v24)
  {
    id v25 = v19;
    [v25 frame];
    sub_10014B008(v32[0], v18, (void (*)(void, __n128))&type metadata accessor for LockupCollectionSearchResult, &qword_1009859F8, (void (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult);
    swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter();
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v32);
}

uint64_t sub_10014A6C8(uint64_t a1, void *a2, uint64_t a3)
{
  id v30 = a2;
  uint64_t v5 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for ImpressionMetrics();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v28 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  double v16 = (char *)&v27 - v15;
  uint64_t v29 = type metadata accessor for AppEventSearchResult();
  v32[3] = v29;
  v32[4] = sub_100150520((unint64_t *)&qword_100985A00, (void (*)(uint64_t))&type metadata accessor for AppEventSearchResult);
  v32[0] = a1;
  sub_100082B68(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_100985970);
  id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v17(v10, 1, v11) == 1)
  {
    swift_retain();
    sub_100082BCC((uint64_t)v10, &qword_100985970);
    uint64_t v18 = a3;
    id v19 = v30;
    uint64_t v20 = v12;
  }
  else
  {
    uint64_t v27 = v12;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    uint64_t v18 = a3;
    if (*(void *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      swift_retain();
      id v19 = v30;
      [v30 frame];
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)();
    }
    else
    {
      swift_retain();
      id v19 = v30;
    }
    uint64_t v20 = v27;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v11);
  }
  sub_100082C6C((uint64_t)v32, (uint64_t)v31);
  sub_100150520(&qword_100985A08, (void (*)(uint64_t))&type metadata accessor for AppEventSearchResult);
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if (v17(v7, 1, v11) == 1)
  {
    sub_100082BCC((uint64_t)v7, &qword_100985970);
  }
  else
  {
    double v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v7, v11);
    uint64_t v22 = *(void *)(v18 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v22)
    {
      [v19 frame];
      ImpressionsCalculator.addElement(_:at:)();
    }
    [v19 frame];
    double v23 = sub_100081D90(v31, v31[3]);
    sub_10014DC9C(*v23, v22);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v31);
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v24 = v19;
  }
  else {
    id v24 = 0;
  }
  if (v24)
  {
    id v25 = v19;
    [v25 frame];
    sub_10014B008(v32[0], v18, (void (*)(void, __n128))&type metadata accessor for AppEventSearchResult, &qword_100985A08, (void (*)(uint64_t))&type metadata accessor for AppEventSearchResult);
    swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter();
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v32);
}

uint64_t sub_10014AB68(uint64_t a1, void *a2, uint64_t a3)
{
  id v30 = a2;
  uint64_t v5 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for ImpressionMetrics();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v28 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  double v16 = (char *)&v27 - v15;
  uint64_t v29 = type metadata accessor for LinkableText();
  v32[3] = v29;
  v32[4] = sub_100150520((unint64_t *)&qword_100985A20, (void (*)(uint64_t))&type metadata accessor for LinkableText);
  v32[0] = a1;
  sub_100082B68(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_containerImpressionMetrics, (uint64_t)v10, &qword_100985970);
  id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v17(v10, 1, v11) == 1)
  {
    swift_retain();
    sub_100082BCC((uint64_t)v10, &qword_100985970);
    uint64_t v18 = a3;
    id v19 = v30;
    uint64_t v20 = v12;
  }
  else
  {
    uint64_t v27 = v12;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    uint64_t v18 = a3;
    if (*(void *)(a3 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
    {
      swift_retain();
      id v19 = v30;
      [v30 frame];
      ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)();
    }
    else
    {
      swift_retain();
      id v19 = v30;
    }
    uint64_t v20 = v27;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v11);
  }
  sub_100082C6C((uint64_t)v32, (uint64_t)v31);
  sub_100150520(&qword_100985A28, (void (*)(uint64_t))&type metadata accessor for LinkableText);
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if (v17(v7, 1, v11) == 1)
  {
    sub_100082BCC((uint64_t)v7, &qword_100985970);
  }
  else
  {
    double v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v7, v11);
    uint64_t v22 = *(void *)(v18 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v22)
    {
      [v19 frame];
      ImpressionsCalculator.addElement(_:at:)();
    }
    [v19 frame];
    double v23 = sub_100081D90(v31, v31[3]);
    sub_100150568(*v23, v22);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v11);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v31);
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v24 = v19;
  }
  else {
    id v24 = 0;
  }
  if (v24)
  {
    id v25 = v19;
    [v25 frame];
    sub_10014B008(v32[0], v18, (void (*)(void, __n128))&type metadata accessor for LinkableText, &qword_100985A28, (void (*)(uint64_t))&type metadata accessor for LinkableText);
    swift_getObjectType();
    dispatch thunk of NestedModelImpressionsRecording.impressionsCalculator.setter();
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v32);
}

uint64_t sub_10014B008(uint64_t a1, uint64_t a2, void (*a3)(void, __n128), unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v24 = a2;
  uint64_t v9 = type metadata accessor for ImpressionMetrics.ID();
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ImpressionMetrics();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = __chkstk_darwin(v15);
  id v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  a3(0, v17);
  sub_100150520(a4, a5);
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100082BCC((uint64_t)v14, &qword_100985970);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  if (!*(void *)(v24 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator))
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    return 0;
  }
  ImpressionsCalculator.addElement(_:at:)();
  ImpressionMetrics.id.getter();
  uint64_t v20 = ImpressionsCalculator.makeChildCalculator(for:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v23);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  return v20;
}

uint64_t sub_10014B2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImpressionMetrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = type metadata accessor for MixedMediaLockup();
  void v15[4] = sub_100150520(&qword_100985978, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockup);
  v15[0] = a1;
  sub_100082C6C((uint64_t)v15, (uint64_t)v14);
  sub_100150520(&qword_100985980, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockup);
  swift_retain();
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100082BCC((uint64_t)v6, &qword_100985970);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v11) {
      ImpressionsCalculator.removeElement(_:)();
    }
    uint64_t v12 = sub_100081D90(v14, v14[3]);
    sub_10014E384(*v12, v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v14);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v15);
}

uint64_t sub_10014B544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImpressionMetrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = type metadata accessor for EditorialSearchResult();
  void v15[4] = sub_100150520(&qword_1009859D0, (void (*)(uint64_t))&type metadata accessor for EditorialSearchResult);
  v15[0] = a1;
  sub_100082C6C((uint64_t)v15, (uint64_t)v14);
  sub_100150520(&qword_1009859D8, (void (*)(uint64_t))&type metadata accessor for EditorialSearchResult);
  swift_retain();
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100082BCC((uint64_t)v6, &qword_100985970);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v11) {
      ImpressionsCalculator.removeElement(_:)();
    }
    uint64_t v12 = sub_100081D90(v14, v14[3]);
    sub_10014EA30(*v12, v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v14);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v15);
}

uint64_t sub_10014B79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImpressionMetrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = type metadata accessor for InAppPurchaseLockup();
  void v15[4] = sub_100150520(&qword_1009859E0, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup);
  v15[0] = a1;
  sub_100082C6C((uint64_t)v15, (uint64_t)v14);
  sub_100150520(&qword_1009859E8, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup);
  swift_retain();
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100082BCC((uint64_t)v6, &qword_100985970);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v11) {
      ImpressionsCalculator.removeElement(_:)();
    }
    uint64_t v12 = sub_100081D90(v14, v14[3]);
    sub_10014F0DC(*v12, v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v14);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v15);
}

uint64_t sub_10014B9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImpressionMetrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = type metadata accessor for LockupCollectionSearchResult();
  void v15[4] = sub_100150520(&qword_1009859F0, (void (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult);
  v15[0] = a1;
  sub_100082C6C((uint64_t)v15, (uint64_t)v14);
  sub_100150520(&qword_1009859F8, (void (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult);
  swift_retain();
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100082BCC((uint64_t)v6, &qword_100985970);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v11) {
      ImpressionsCalculator.removeElement(_:)();
    }
    uint64_t v12 = sub_100081D90(v14, v14[3]);
    sub_10014F788(*v12, v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v14);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v15);
}

uint64_t sub_10014BC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImpressionMetrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = type metadata accessor for AppEventSearchResult();
  void v15[4] = sub_100150520((unint64_t *)&qword_100985A00, (void (*)(uint64_t))&type metadata accessor for AppEventSearchResult);
  v15[0] = a1;
  sub_100082C6C((uint64_t)v15, (uint64_t)v14);
  sub_100150520(&qword_100985A08, (void (*)(uint64_t))&type metadata accessor for AppEventSearchResult);
  swift_retain();
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100082BCC((uint64_t)v6, &qword_100985970);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v11) {
      ImpressionsCalculator.removeElement(_:)();
    }
    uint64_t v12 = sub_100081D90(v14, v14[3]);
    sub_10014FE34(*v12, v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v14);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v15);
}

uint64_t sub_10014BEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ImpressionMetrics();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = type metadata accessor for LinkableText();
  void v15[4] = sub_100150520((unint64_t *)&qword_100985A20, (void (*)(uint64_t))&type metadata accessor for LinkableText);
  v15[0] = a1;
  sub_100082C6C((uint64_t)v15, (uint64_t)v14);
  sub_100150520(&qword_100985A28, (void (*)(uint64_t))&type metadata accessor for LinkableText);
  swift_retain();
  dispatch thunk of ViewModel.impressionMetrics.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100082BCC((uint64_t)v6, &qword_100985970);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC8AppStore35SearchResultsCollectionViewDelegate_impressionsCalculator);
    if (v11) {
      ImpressionsCalculator.removeElement(_:)();
    }
    uint64_t v12 = sub_100081D90(v14, v14[3]);
    sub_100150E10(*v12, v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v14);
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v15);
}

uint64_t sub_10014C0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for MixedMediaLockup();
  v55[3] = v19;
  v55[4] = sub_100150520(&qword_100985978, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockup);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_100985980, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockup);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.addElement(_:at:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_10014C7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for EditorialSearchResult();
  v55[3] = v19;
  v55[4] = sub_100150520(&qword_1009859D0, (void (*)(uint64_t))&type metadata accessor for EditorialSearchResult);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_1009859D8, (void (*)(uint64_t))&type metadata accessor for EditorialSearchResult);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.addElement(_:at:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_10014CECC(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for InAppPurchaseLockup();
  v55[3] = v19;
  v55[4] = sub_100150520(&qword_1009859E0, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_1009859E8, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.addElement(_:at:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_10014D5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for LockupCollectionSearchResult();
  v55[3] = v19;
  v55[4] = sub_100150520(&qword_1009859F0, (void (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_1009859F8, (void (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.addElement(_:at:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_10014DC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for AppEventSearchResult();
  v55[3] = v19;
  v55[4] = sub_100150520((unint64_t *)&qword_100985A00, (void (*)(uint64_t))&type metadata accessor for AppEventSearchResult);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_100985A08, (void (*)(uint64_t))&type metadata accessor for AppEventSearchResult);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.addElement(_:at:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_10014E384(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for MixedMediaLockup();
  v55[3] = v19;
  v55[4] = sub_100150520(&qword_100985978, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockup);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_100985980, (void (*)(uint64_t))&type metadata accessor for MixedMediaLockup);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.removeElement(_:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_10014EA30(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for EditorialSearchResult();
  v55[3] = v19;
  v55[4] = sub_100150520(&qword_1009859D0, (void (*)(uint64_t))&type metadata accessor for EditorialSearchResult);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_1009859D8, (void (*)(uint64_t))&type metadata accessor for EditorialSearchResult);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.removeElement(_:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_10014F0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for InAppPurchaseLockup();
  v55[3] = v19;
  v55[4] = sub_100150520(&qword_1009859E0, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_1009859E8, (void (*)(uint64_t))&type metadata accessor for InAppPurchaseLockup);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.removeElement(_:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_10014F788(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for LockupCollectionSearchResult();
  v55[3] = v19;
  v55[4] = sub_100150520(&qword_1009859F0, (void (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_1009859F8, (void (*)(uint64_t))&type metadata accessor for LockupCollectionSearchResult);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.removeElement(_:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_10014FE34(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for AppEventSearchResult();
  v55[3] = v19;
  v55[4] = sub_100150520((unint64_t *)&qword_100985A00, (void (*)(uint64_t))&type metadata accessor for AppEventSearchResult);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_100985A08, (void (*)(uint64_t))&type metadata accessor for AppEventSearchResult);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.removeElement(_:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

uint64_t sub_1001504E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100150518()
{
}

uint64_t sub_100150520(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100150568(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for LinkableText();
  v55[3] = v19;
  v55[4] = sub_100150520((unint64_t *)&qword_100985A20, (void (*)(uint64_t))&type metadata accessor for LinkableText);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_100985A28, (void (*)(uint64_t))&type metadata accessor for LinkableText);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.addElement(_:at:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

void sub_100150C50(void *a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SearchTransparencyView();
  if (static UICollectionReusableView.elementKind.getter() == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return;
    }
  }
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    id v16 = a1;
    if (dispatch thunk of SearchResultsPresenter.transparencyLink.getter())
    {
      uint64_t v12 = LinkableText.linkedSubstrings.getter();
      uint64_t v13 = sub_100143478(v12, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10014375C);
      swift_bridgeObjectRelease();
      uint64_t v14 = LinkableText.styledText.getter();
      sub_10034EEAC(v14, 0, (uint64_t)v13);
      swift_bridgeObjectRelease();
      swift_release();
      [v11 setNeedsLayout];
      uint64_t v15 = swift_retain();
      sub_10014AB68(v15, v16, v3);
      swift_release_n();
    }
    else
    {
    }
  }
}

uint64_t sub_100150E10(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100082C28(&qword_1009A4330);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v39 - v7;
  uint64_t v8 = sub_100082C28(&qword_100985970);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImpressionMetrics();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v44 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for LinkableText();
  v55[3] = v19;
  v55[4] = sub_100150520((unint64_t *)&qword_100985A20, (void (*)(uint64_t))&type metadata accessor for LinkableText);
  v55[0] = a1;
  sub_100082C6C((uint64_t)v55, (uint64_t)v53);
  swift_retain();
  sub_100082C28((uint64_t *)&unk_100983890);
  sub_100082C28(&qword_100985988);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v5;
    sub_100081DD4(v51, (uint64_t)v54);
    sub_100081D90(v54, v54[3]);
    uint64_t v20 = dispatch thunk of ComponentModelContainer.children.getter();
    if (v20)
    {
      uint64_t v40 = v20;
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v22 = v40 + 32;
        uint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        uint64_t v45 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v47 = (void (**)(uint64_t, uint64_t))(v14 + 8);
        uint64_t v41 = v13;
        id v43 = v18;
        uint64_t v42 = v19;
        do
        {
          sub_100082C6C(v22, (uint64_t)v53);
          uint64_t v24 = v23;
          sub_100081D90(v53, v53[3]);
          dispatch thunk of ViewModel.impressionMetrics.getter();
          uint64_t v25 = *v23;
          if ((*v23)(v12, 1, v13) == 1)
          {
            sub_100082BCC((uint64_t)v12, &qword_100985970);
          }
          else
          {
            (*v45)(v18, v12, v13);
            sub_100150520(&qword_100985A28, (void (*)(uint64_t))&type metadata accessor for LinkableText);
            uint64_t v26 = v49;
            dispatch thunk of ViewModel.impressionMetrics.getter();
            if (v25((char *)v26, 1, v13) == 1)
            {
              sub_100082BCC(v49, &qword_100985970);
              uint64_t v27 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v50, 1, 1, v27);
            }
            else
            {
              uint64_t v28 = v50;
              uint64_t v29 = v49;
              ImpressionMetrics.id.getter();
              (*v47)(v29, v13);
              uint64_t v30 = type metadata accessor for ImpressionMetrics.ID();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 0, 1, v30);
            }
            uint64_t v31 = (uint64_t)v46;
            if (v48)
            {
              sub_100082B68(v50, (uint64_t)v46, &qword_1009A4330);
              uint64_t v32 = type metadata accessor for ImpressionMetrics.ID();
              uint64_t v33 = *(void *)(v32 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
              {
                sub_100082BCC(v31, &qword_1009A4330);
              }
              else
              {
                ImpressionMetrics.ID.element.getter();
                uint64_t v13 = v41;
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
              }
              uint64_t v34 = v44;
              double v35 = v43;
              ImpressionMetrics.withParentId(_:)();
              swift_bridgeObjectRelease();
              ImpressionsCalculator.removeElement(_:)();
              id v36 = *v47;
              Swift::Bool v37 = v34;
              uint64_t v18 = v35;
              (*v47)((uint64_t)v37, v13);
              sub_100082BCC(v50, &qword_1009A4330);
              v36((uint64_t)v35, v13);
            }
            else
            {
              sub_100082BCC(v50, &qword_1009A4330);
              (*v47)((uint64_t)v18, v13);
            }
            uint64_t v23 = v24;
          }
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v53);
          v22 += 40;
          --v21;
        }
        while (v21);
      }
      swift_bridgeObjectRelease();
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v54);
  }
  else
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_100082BCC((uint64_t)v51, &qword_100985990);
  }
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v55);
}

void sub_1001514BC(uint64_t a1)
{
}

void sub_1001514D0()
{
  uint64_t v0 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FontUseCase();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v25 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100042444(v16, qword_1009E1430);
  uint64_t v17 = sub_100087728(v16, (uint64_t)qword_1009E1430);
  if (qword_10097F760 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100087728(v3, (uint64_t)qword_1009E5078);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19(v15, v18, v3);
  if (qword_10097F770 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100087728(v3, (uint64_t)qword_1009E50A8);
  v19(v12, v20, v3);
  if (qword_10097F778 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100087728(v3, (uint64_t)qword_1009E50C0);
  v19(v2, v21, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if (qword_10097F788 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100087728(v3, (uint64_t)qword_1009E50F0);
  v19(v9, v22, v3);
  if (qword_10097F790 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100087728(v3, (uint64_t)qword_1009E5108);
  v19(v6, v23, v3);
  uint64_t v24 = UIContentSizeCategoryExtraExtraExtraLarge;
  sub_1001B21BC((uint64_t)v15, (uint64_t)v12, 3, 0, (uint64_t)v2, (uint64_t)v9, (uint64_t)v6, 0, v17, 16.0, 40.0, 10.0, 36.0, 30.0, 24.0, 0.0, 0, 0, 0,
    0,
    0,
    0,
    1,
    (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge,
    0);
}

void sub_1001518C0()
{
  uint64_t v0 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FontUseCase();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100042444(v16, qword_1009E1448);
  uint64_t v17 = sub_100087728(v16, (uint64_t)qword_1009E1448);
  if (qword_10097F760 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100087728(v3, (uint64_t)qword_1009E5078);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19(v15, v18, v3);
  if (qword_10097F780 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100087728(v3, (uint64_t)qword_1009E50D8);
  v19(v12, v20, v3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  if (qword_10097F788 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100087728(v3, (uint64_t)qword_1009E50F0);
  v19(v9, v21, v3);
  if (qword_10097F790 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100087728(v3, (uint64_t)qword_1009E5108);
  v19(v6, v22, v3);
  uint64_t v23 = UIContentSizeCategoryExtraExtraExtraLarge;
  sub_1001B21BC((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v2, (uint64_t)v9, (uint64_t)v6, 0, v17, 16.0, 40.0, 10.0, 42.0, 30.0, 24.0, 0.0, 0, 0, 0,
    0,
    0,
    0,
    1,
    (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge,
    0);
}

void sub_100151C58(uint64_t a1)
{
}

void sub_100151C6C(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FontUseCase();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v29 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v21 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100042444(v21, a3);
  uint64_t v22 = sub_100087728(v21, (uint64_t)a3);
  if (qword_10097F760 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100087728(v8, (uint64_t)qword_1009E5078);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v24(v20, v23, v8);
  if (qword_10097F768 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_100087728(v8, (uint64_t)qword_1009E5090);
  v24(v17, v25, v8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  if (qword_10097F788 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_100087728(v8, (uint64_t)qword_1009E50F0);
  v24(v14, v26, v8);
  if (qword_10097F790 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_100087728(v8, (uint64_t)qword_1009E5108);
  v24(v11, v27, v8);
  uint64_t v28 = UIContentSizeCategoryExtraExtraExtraLarge;
  sub_1001B21BC((uint64_t)v20, (uint64_t)v17, 0, 1, (uint64_t)v7, (uint64_t)v14, (uint64_t)v11, 0, v22, 16.0, a1, 28.0, 26.0, 24.0, 24.0, 20.0, 0, 0, 0,
    0,
    1,
    0,
    1,
    (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge,
    0);
}

void sub_100152004()
{
  uint64_t v0 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FontUseCase();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100042444(v16, qword_1009E1478);
  uint64_t v17 = sub_100087728(v16, (uint64_t)qword_1009E1478);
  if (qword_10097F798 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100087728(v3, (uint64_t)qword_1009E5120);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19(v15, v18, v3);
  if (qword_10097F7C0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100087728(v3, (uint64_t)qword_1009E5198);
  v19(v12, v20, v3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  if (qword_10097F7D0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100087728(v3, (uint64_t)qword_1009E51C8);
  v19(v9, v21, v3);
  if (qword_10097F790 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100087728(v3, (uint64_t)qword_1009E5108);
  v19(v6, v22, v3);
  sub_10008E8A0();
  uint64_t v23 = static UIColor.primaryText.getter();
  uint64_t v24 = static UIColor.primaryText.getter();
  uint64_t v25 = static UIColor.secondaryText.getter();
  uint64_t v26 = static UIColor.secondaryText.getter();
  sub_1001B21BC((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v2, (uint64_t)v9, (uint64_t)v6, v23, v17, 16.0, 36.0, 16.0, 39.0, 34.0, 24.0, 0.0, v24, v25, v26,
    0,
    0,
    0,
    0,
    0,
    1);
}

void sub_1001523BC()
{
  uint64_t v0 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FontUseCase();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = type metadata accessor for BreakoutDetailsView.Config(0);
  sub_100042444(v16, qword_1009E1490);
  uint64_t v17 = sub_100087728(v16, (uint64_t)qword_1009E1490);
  if (qword_10097F798 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100087728(v3, (uint64_t)qword_1009E5120);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v19(v15, v18, v3);
  if (qword_10097F7C8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100087728(v3, (uint64_t)qword_1009E51B0);
  v19(v12, v20, v3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  if (qword_10097F7D8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100087728(v3, (uint64_t)qword_1009E51E0);
  v19(v9, v21, v3);
  if (qword_10097F790 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100087728(v3, (uint64_t)qword_1009E5108);
  v19(v6, v22, v3);
  sub_10008E8A0();
  uint64_t v23 = static UIColor.primaryText.getter();
  uint64_t v24 = static UIColor.primaryText.getter();
  uint64_t v25 = static UIColor.secondaryText.getter();
  uint64_t v26 = static UIColor.secondaryText.getter();
  sub_1001B21BC((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v2, (uint64_t)v9, (uint64_t)v6, v23, v17, 13.0, 13.0, 16.0, 31.0, 26.0, 24.0, 0.0, v24, v25, v26,
    0,
    0,
    0,
    0,
    0,
    1);
}

uint64_t AXArcadeSubscribePageLayout.init(metrics:headerView:contentView:detailsView:offerButton:dismissButton:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, long long *a6@<X5>, void *a7@<X8>)
{
  memcpy(a7, __src, 0x190uLL);
  sub_100068700(a2, (uint64_t)a7 + 400);
  sub_100068700(a3, (uint64_t)a7 + 440);
  sub_100081DD4(a4, (uint64_t)a7 + 480);
  sub_100081DD4(a5, (uint64_t)a7 + 520);

  return sub_100081DD4(a6, (uint64_t)a7 + 560);
}

uint64_t ProductLockupAccessibilityLayout.iconView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.contentMinimumHeight.setter(long long *a1)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v1);

  return sub_100081DD4(a1, v1);
}

uint64_t ProductLockupAccessibilityLayout.titleText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 40, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.contentMaximumHeight.setter(long long *a1)
{
  uint64_t v3 = v1 + 40;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);

  return sub_100081DD4(a1, v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.contentMaximumHeight.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ProductLockupAccessibilityLayout.developerText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 80, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.contentTopSpace.setter(long long *a1)
{
  uint64_t v3 = v1 + 80;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);

  return sub_100081DD4(a1, v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.contentTopSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ProductLockupAccessibilityLayout.taglineText.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 120, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsTopMargin.setter(long long *a1)
{
  uint64_t v3 = v1 + 120;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);

  return sub_100081DD4(a1, v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.detailsTopMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsHorizontalMargin.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 160, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsHorizontalMargin.setter(long long *a1)
{
  uint64_t v3 = v1 + 160;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);

  return sub_100081DD4(a1, v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.detailsHorizontalMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ProductLockupAccessibilityLayout.offerButton.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 200, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.detailsBottomMargin.setter(long long *a1)
{
  uint64_t v3 = v1 + 200;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);

  return sub_100081DD4(a1, v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.detailsBottomMargin.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t ProductLockupAccessibilityLayout.shareButton.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 240, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.offerButtonHeight.setter(long long *a1)
{
  uint64_t v3 = v1 + 240;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);

  return sub_100081DD4(a1, v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.offerButtonHeight.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

double AXArcadeSubscribePageLayout.Metrics.offerButtonMargins.getter()
{
  return *(double *)(v0 + 280);
}

void AXArcadeSubscribePageLayout.Metrics.offerButtonMargins.setter(double a1, double a2, double a3, double a4)
{
  v4[35] = a1;
  v4[36] = a2;
  v4[37] = a3;
  v4[38] = a4;
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.offerButtonMargins.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.isOfferButtonFullWidth.getter()
{
  return *(unsigned __int8 *)(v0 + 312);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.isOfferButtonFullWidth.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 312) = result;
  return result;
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.isOfferButtonFullWidth.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.buttonsSpacing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 320, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.buttonsSpacing.setter(long long *a1)
{
  uint64_t v3 = v1 + 320;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);

  return sub_100081DD4(a1, v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.buttonsSpacing.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.bottomSpace.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 360, a1);
}

uint64_t AXArcadeSubscribePageLayout.Metrics.bottomSpace.setter(long long *a1)
{
  uint64_t v3 = v1 + 360;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v3);

  return sub_100081DD4(a1, v3);
}

uint64_t (*AXArcadeSubscribePageLayout.Metrics.bottomSpace.modify())()
{
  return static CondensedEditorialSearchResultContentView.prefetchArtwork(for:with:asPartOf:);
}

uint64_t AXArcadeSubscribePageLayout.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100152CF4(v1, a1);
}

uint64_t sub_100152CF4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AXArcadeSubscribePageLayout.headerView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10005BDC8(v1 + 400, a1);
}

uint64_t AXArcadeSubscribePageLayout.contentView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10005BDC8(v1 + 440, a1);
}

uint64_t AXArcadeSubscribePageLayout.detailsView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 480, a1);
}

uint64_t AXArcadeSubscribePageLayout.offerButton.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 520, a1);
}

uint64_t AXArcadeSubscribePageLayout.dismissButton.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100082C6C(v1 + 560, a1);
}

double AXArcadeSubscribePageLayout.contentViewSize(fitting:in:)(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100081D90(v3, v3[3]);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v8 + 8);
  v11(v10, v7);
  uint64_t ObjectType = swift_getObjectType();
  sub_100154A40(a1, (uint64_t)v3, ObjectType, a2, a3);
  sub_100081D90(v3 + 5, v3[8]);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  v11(v10, v7);
  return a2;
}

uint64_t AXArcadeSubscribePageLayout.placeChildren(relativeTo:in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v7 = v6;
  uint64_t v87 = a2;
  uint64_t v13 = type metadata accessor for LayoutRect();
  uint64_t v88 = *(void *)(v13 - 8);
  uint64_t v89 = v13;
  __chkstk_darwin(v13);
  uint64_t v84 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&uint64_t v15 = COERCE_DOUBLE(type metadata accessor for FloatingPointRoundingRule());
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100081D90((void *)(v6 + 80), *(void *)(v6 + 104));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  double v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v16 + 8);
  v21(v18, v15);
  sub_100081D90((void *)v7, *(void *)(v7 + 24));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  double v23 = v22;
  v21(v18, v15);
  sub_100081D90((void *)(v7 + 40), *(void *)(v7 + 64));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  double v25 = v24;
  CGFloat v85 = *(double *)&v15;
  *(void *)&long long v86 = v21;
  v21(v18, v15);
  uint64_t ObjectType = swift_getObjectType();
  double v27 = sub_100154A40(a1, v7, ObjectType, a5, a6);
  if (v23 > v27) {
    double v27 = v23;
  }
  if (v27 >= v25) {
    double v28 = v25;
  }
  else {
    double v28 = v27;
  }
  sub_10005BDC8(v7 + 400, (uint64_t)&v97);
  uint64_t v29 = v99;
  uint64_t v83 = ObjectType;
  CGFloat v90 = v28;
  CGFloat height = v20;
  if (v99)
  {
    sub_100081DD4(&v97, (uint64_t)v92);
    sub_100081D90(v92, v93);
    Measurable.measuredSize(fitting:in:)();
    double v31 = v30;
    double v33 = v32;
    v106.origin.CGFloat x = a3;
    v106.origin.CGFloat y = a4;
    v106.size.CGFloat width = a5;
    v106.size.CGFloat height = a6;
    double v34 = CGRectGetMidX(v106) + v31 * -0.5;
    v107.origin.CGFloat x = a3;
    v107.origin.CGFloat y = a4;
    v107.size.CGFloat width = a5;
    v107.size.CGFloat height = a6;
    double MinY = CGRectGetMinY(v107);
    sub_100081D90(v92, v93);
    CGRect.withLayoutDirection(in:relativeTo:)();
    dispatch thunk of LayoutView.frame.setter();
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v92);
  }
  else
  {
    sub_100082BCC((uint64_t)&v97, (uint64_t *)&unk_1009932D0);
    double v34 = 0.0;
    double MinY = 0.0;
    double v31 = 0.0;
    double v33 = 0.0;
  }
  sub_10005BDC8(v7 + 440, (uint64_t)&v97);
  CGFloat v91 = a4;
  if (v99)
  {
    sub_100081DD4(&v97, (uint64_t)v92);
    if (v29)
    {
      v108.origin.CGFloat x = v34;
      v108.origin.CGFloat y = MinY;
      v108.size.CGFloat width = v31;
      v108.size.CGFloat height = v33;
      double MaxY = CGRectGetMaxY(v108);
    }
    else
    {
      v109.origin.CGFloat x = a3;
      v109.origin.CGFloat y = a4;
      v109.size.CGFloat width = a5;
      v109.size.CGFloat height = a6;
      double MaxY = CGRectGetMinY(v109);
    }
    CGFloat v41 = height + MaxY;
    v110.origin.CGFloat x = a3;
    v110.origin.CGFloat y = a4;
    v110.size.CGFloat width = a5;
    v110.size.CGFloat height = a6;
    CGFloat MinX = CGRectGetMinX(v110);
    v111.origin.CGFloat x = a3;
    v111.origin.CGFloat y = a4;
    v111.size.CGFloat width = a5;
    v111.size.CGFloat height = a6;
    CGFloat Width = CGRectGetWidth(v111);
    sub_100081D90(v92, v93);
    CGFloat v78 = MinX;
    CGFloat v79 = v41;
    CGFloat v77 = Width;
    CGRect.withLayoutDirection(in:relativeTo:)();
    dispatch thunk of LayoutView.frame.setter();
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v92);
  }
  else
  {
    sub_100082BCC((uint64_t)&v97, (uint64_t *)&unk_1009932D0);
    double v37 = 0.0;
    if (v29) {
      double v38 = v31;
    }
    else {
      double v38 = 0.0;
    }
    if (v29) {
      double v37 = v33;
    }
    CGFloat v90 = v37;
    if (v29) {
      double v39 = v34;
    }
    else {
      double v39 = a3;
    }
    CGFloat v77 = v38;
    CGFloat v78 = v39;
    if (v29) {
      double v40 = MinY;
    }
    else {
      double v40 = a4;
    }
    CGFloat v79 = v40;
  }
  sub_100081D90((void *)(v7 + 160), *(void *)(v7 + 184));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  uint64_t v45 = v44;
  CGFloat v46 = v85;
  uint64_t v47 = (void (*)(char *, void))v86;
  ((void (*)(char *, void))v86)(v18, *(void *)&v85);
  sub_100081D90((void *)(v7 + 120), *(void *)(v7 + 144));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  uint64_t v49 = v48;
  v47(v18, *(void *)&v46);
  sub_100081D90((void *)(v7 + 200), *(void *)(v7 + 224));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  uint64_t v51 = v50;
  v47(v18, *(void *)&v46);
  sub_100082C6C(v7 + 240, (uint64_t)v100);
  long long v86 = *(_OWORD *)(v7 + 280);
  uint64_t v52 = *(void *)(v7 + 296);
  uint64_t v53 = *(void *)(v7 + 304);
  char v54 = *(unsigned char *)(v7 + 312);
  sub_100082C6C(v7 + 320, (uint64_t)&v104);
  sub_100082C6C(v7 + 360, (uint64_t)&v105);
  *(void *)&long long v97 = v49;
  *((void *)&v97 + 1) = v45;
  uint64_t v98 = v51;
  uint64_t v99 = v45;
  *(_OWORD *)&v100[40] = v86;
  uint64_t v101 = v52;
  uint64_t v102 = v53;
  char v103 = v54;
  sub_100154DD0((uint64_t)&v97, (uint64_t)v92);
  sub_100082C6C(v7 + 480, (uint64_t)&v94);
  sub_100082C6C(v7 + 520, (uint64_t)&v95);
  sub_100082C6C(v7 + 560, (uint64_t)&v96);
  v112.origin.CGFloat x = a3;
  CGFloat v55 = v91;
  v112.origin.CGFloat y = v91;
  v112.size.CGFloat width = a5;
  v112.size.CGFloat height = a6;
  CGFloat v81 = CGRectGetMinX(v112);
  CGFloat v56 = a5;
  CGFloat v57 = v78;
  CGFloat v58 = v79;
  v113.origin.CGFloat x = v78;
  v113.origin.CGFloat y = v79;
  CGFloat v59 = v77;
  v113.size.CGFloat width = v77;
  CGFloat v60 = v90;
  v113.size.CGFloat height = v90;
  CGFloat v80 = CGRectGetMaxY(v113);
  v114.origin.CGFloat x = a3;
  v114.origin.CGFloat y = v55;
  v114.size.CGFloat width = v56;
  v114.size.CGFloat height = a6;
  CGFloat v61 = CGRectGetWidth(v114);
  CGFloat v85 = a3;
  *(CGFloat *)&long long v86 = v56;
  v115.origin.CGFloat x = a3;
  double v62 = v61;
  v115.size.CGFloat height = a6;
  CGFloat v63 = v81;
  v115.origin.CGFloat y = v55;
  v115.size.CGFloat width = v56;
  CGFloat height = v115.size.height;
  double v64 = CGRectGetMaxY(v115);
  v116.origin.CGFloat x = v57;
  CGFloat v65 = v80;
  v116.origin.CGFloat y = v58;
  v116.size.CGFloat width = v59;
  v116.size.CGFloat height = v60;
  double v66 = v64 - CGRectGetMaxY(v116);
  sub_100154E08(a1, v92, v62);
  double v68 = v67;
  v117.origin.CGFloat x = v63;
  v117.origin.CGFloat y = v65;
  v117.size.CGFloat width = v62;
  v117.size.CGFloat height = v66;
  if (v68 <= CGRectGetHeight(v117))
  {
    uint64_t v69 = v84;
    sub_1001537B8(v84, v63, v65, v62, v66);
  }
  else
  {
    uint64_t v69 = v84;
    sub_100153CD4(a1, v84, v63, v65, v62, v66);
  }
  uint64_t v70 = v89;
  LayoutRect.origin.getter();
  LayoutRect.size.getter();
  CGFloat v72 = v85;
  CGFloat v71 = *(double *)&v86;
  v118.origin.CGFloat x = v85;
  CGFloat v73 = v91;
  v118.origin.CGFloat y = v91;
  *(void *)&v118.size.CGFloat width = v86;
  CGFloat v74 = height;
  v118.size.CGFloat height = height;
  CGRectGetHeight(v118);
  v119.origin.CGFloat x = v72;
  v119.origin.CGFloat y = v73;
  v119.size.CGFloat width = v71;
  v119.size.CGFloat height = v74;
  CGRectGetMinX(v119);
  v120.origin.CGFloat x = v72;
  v120.origin.CGFloat y = v73;
  v120.size.CGFloat width = v71;
  v120.size.CGFloat height = v74;
  CGRectGetMinY(v120);
  v121.origin.CGFloat x = v72;
  v121.origin.CGFloat y = v73;
  v121.size.CGFloat width = v71;
  v121.size.CGFloat height = v74;
  CGRectGetWidth(v121);
  LayoutRect.init(representing:)();
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v69, v70);
  sub_100155170((uint64_t)v92);
  return sub_1001551A0((uint64_t)&v97);
}

uint64_t sub_1001537B8@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v6 = (void *)v5;
  uint64_t v25 = a1;
  uint64_t v11 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = *(double *)(v5 + 8);
  double v16 = *(double *)(v5 + 24);
  sub_100081D90((void *)(v5 + 112), *(void *)(v5 + 136));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  v23[0] = v17;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v14, v11);
  v26.origin.CGFloat x = a2;
  v26.origin.CGFloat y = a3;
  v26.size.CGFloat width = a4;
  v26.size.CGFloat height = a5;
  CGFloat v19 = CGRectGetWidth(v26) - v15 - v16;
  v27.origin.CGFloat x = a2;
  v27.origin.CGFloat y = a3;
  v27.size.CGFloat width = a4;
  v27.size.CGFloat height = a5;
  CGRectGetHeight(v27);
  sub_100081D90(v6 + 24, v6[27]);
  *(CGFloat *)&v23[1] = v19;
  Measurable.measuredSize(fitting:in:)();
  v28.origin.CGFloat x = a2;
  v28.origin.CGFloat y = a3;
  v28.size.CGFloat width = a4;
  v28.size.CGFloat height = a5;
  CGRectGetMidX(v28);
  v29.origin.CGFloat x = a2;
  v29.origin.CGFloat y = a3;
  v29.size.CGFloat width = a4;
  v29.size.CGFloat height = a5;
  CGRectGetMinY(v29);
  sub_100081D90(v6 + 24, v6[27]);
  CGRect.withLayoutDirection(in:relativeTo:)();
  dispatch thunk of LayoutView.frame.setter();
  v30.origin.CGFloat x = a2;
  v30.origin.CGFloat y = a3;
  v30.size.CGFloat width = a4;
  v30.size.CGFloat height = a5;
  CGRectGetMaxY(v30);
  sub_100081D90(v6 + 19, v6[22]);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  double v24 = v18;
  v18(v14, v11);
  sub_100081D90(v6 + 34, v6[37]);
  char v20 = dispatch thunk of LayoutView.isHidden.getter();
  sub_100081D90(v6 + 34, v6[37]);
  if ((v20 & 1) == 0)
  {
    Measurable.measuredSize(fitting:in:)();
    v31.origin.CGFloat x = a2;
    v31.origin.CGFloat y = a3;
    v31.size.CGFloat width = a4;
    v31.size.CGFloat height = a5;
    CGRectGetMidX(v31);
    sub_100081D90((void *)(v5 + 272), *(void *)(v5 + 296));
    CGRect.withLayoutDirection(in:relativeTo:)();
  }
  dispatch thunk of LayoutView.frame.setter();
  uint64_t v21 = (void *)(v5 + 232);
  sub_100081D90((void *)(v5 + 232), *(void *)(v5 + 256));
  if (dispatch thunk of LayoutView.isHidden.getter())
  {
    sub_100081D90(v21, *(void *)(v5 + 256));
  }
  else
  {
    v32.origin.CGFloat x = a2;
    v32.origin.CGFloat y = a3;
    v32.size.CGFloat width = a4;
    v32.size.CGFloat height = a5;
    CGRectGetWidth(v32);
    sub_100081D90((void *)(v5 + 32), *(void *)(v5 + 56));
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
    AnyDimension.value(in:rounded:)();
    v24(v14, v11);
    v33.origin.CGFloat x = a2;
    v33.origin.CGFloat y = a3;
    v33.size.CGFloat width = a4;
    v33.size.CGFloat height = a5;
    CGRectGetMidX(v33);
    sub_100081D90(v21, *(void *)(v5 + 256));
    CGRect.withLayoutDirection(in:relativeTo:)();
  }
  dispatch thunk of LayoutView.frame.setter();
  return LayoutRect.init(representing:)();
}

uint64_t sub_100153CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v7 = v6;
  uint64_t v62 = a1;
  uint64_t v68 = a2;
  uint64_t v88 = type metadata accessor for _VerticalFlowLayout.ExclusionCondition();
  uint64_t v79 = *(void *)(v88 - 8);
  uint64_t v92 = v79;
  __chkstk_darwin(v88);
  uint64_t v87 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for _VerticalFlowLayout.Child.HorizontalAlignment();
  uint64_t v94 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  CGFloat v59 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for _VerticalFlowLayout.Child.Placement();
  uint64_t v93 = *(void *)(v91 - 8);
  uint64_t v14 = v93;
  __chkstk_darwin(v91);
  CGFloat v72 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for _VerticalFlowLayout();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  CGFloat v65 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)v6;
  double v63 = *(double *)(v6 + 8);
  double v21 = v63;
  uint64_t v23 = *(void *)(v6 + 16);
  double v24 = *(double *)(v6 + 24);
  v103.origin.CGFloat x = a3;
  v103.origin.CGFloat y = a4;
  v103.size.CGFloat width = a5;
  v103.size.CGFloat height = a6;
  CGFloat v64 = CGRectGetWidth(v103) - v21 - v24;
  v104.origin.CGFloat x = a3;
  v104.origin.CGFloat y = a4;
  v104.size.CGFloat width = a5;
  v104.size.CGFloat height = a6;
  CGRectGetWidth(v104);
  sub_100081D90((void *)(v6 + 32), *(void *)(v6 + 56));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_100082C28(&qword_100981750);
  uint64_t v25 = *(void *)(type metadata accessor for _VerticalFlowLayout.Child() - 8);
  uint64_t v58 = *(void *)(v25 + 72);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v60 = 2 * v58;
  uint64_t v27 = swift_allocObject();
  long long v89 = xmmword_1007BF710;
  uint64_t v61 = v27;
  *(_OWORD *)(v27 + 16) = xmmword_1007BF710;
  unint64_t v70 = v27 + v26;
  id v75 = (void (*)(char *, uint64_t))(v6 + 192);
  unsigned int v84 = enum case for _VerticalFlowLayout.Child.Placement.top(_:);
  CGRect v28 = *(void (**)(void))(v14 + 104);
  uint64_t v85 = v14 + 104;
  long long v86 = (void (*)(char *, void, uint64_t))v28;
  CGRect v29 = v72;
  v28(v72);
  unsigned int v83 = enum case for _VerticalFlowLayout.Child.HorizontalAlignment.center(_:);
  uint64_t v30 = v94;
  CGRect v31 = *(void (**)(void))(v94 + 104);
  uint64_t v81 = v94 + 104;
  uint64_t v82 = (void (*)(char *, void, uint64_t))v31;
  CGRect v32 = v59;
  uint64_t v33 = v90;
  v31(v59);
  uint64_t v101 = &type metadata for CGFloat;
  uint64_t v102 = &protocol witness table for CGFloat;
  uint64_t v100 = v22;
  uint64_t v98 = &type metadata for CGFloat;
  uint64_t v99 = &protocol witness table for CGFloat;
  uint64_t v97 = v23;
  uint64_t v80 = sub_100082C28((uint64_t *)&unk_100990B80);
  uint64_t v71 = *(void *)(v79 + 72);
  uint64_t v34 = v92;
  uint64_t v35 = *(unsigned __int8 *)(v92 + 80);
  uint64_t v69 = (v35 + 32) & ~v35;
  uint64_t v79 = v35 | 7;
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1007BEDF0;
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter();
  uint64_t v96 = v36;
  unint64_t v77 = sub_100156ACC();
  uint64_t v76 = sub_100082C28(&qword_100990B90);
  unint64_t v78 = sub_100156B24();
  double v37 = v87;
  uint64_t v38 = v88;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v39 = v70;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)();
  double v40 = *(void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v92 = v34 + 8;
  CGFloat v73 = v40;
  v40(v37, v38);
  CGFloat v41 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v94 = v30 + 8;
  id v75 = v41;
  uint64_t v42 = v33;
  v41(v32, v33);
  id v43 = *(void (**)(char *, uint64_t))(v93 + 8);
  v93 += 8;
  CGFloat v74 = v43;
  uint64_t v44 = v29;
  uint64_t v45 = v91;
  v43(v29, v91);
  sub_100082BCC((uint64_t)&v97, &qword_10098B900);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v100);
  v58 += v39;
  sub_100081D90((void *)(v7 + 232), *(void *)(v7 + 256));
  LayoutView.withMeasurements(representing:)();
  v86(v29, v84, v45);
  v82(v32, v83, v42);
  uint64_t v46 = type metadata accessor for ZeroDimension();
  uint64_t v98 = (void *)v46;
  uint64_t v99 = &protocol witness table for ZeroDimension;
  sub_1000808B8(&v97);
  static ZeroDimension.zero.getter();
  sub_100082C6C(v7 + 112, (uint64_t)&v96);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v89;
  static _VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter();
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter();
  uint64_t v95 = v47;
  uint64_t v48 = v87;
  uint64_t v49 = v88;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)();
  v73(v48, v49);
  sub_100082BCC((uint64_t)&v96, &qword_10098B900);
  uint64_t v50 = v90;
  v75(v32, v90);
  uint64_t v51 = v91;
  v74(v44, v91);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v100);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v97);
  v70 += v60;
  uint64_t v60 = v7 + 272;
  uint64_t v52 = v44;
  uint64_t v53 = v51;
  v86(v52, v84, v51);
  v82(v32, v83, v50);
  uint64_t v101 = (void *)v46;
  uint64_t v102 = &protocol witness table for ZeroDimension;
  sub_1000808B8(&v100);
  static ZeroDimension.zero.getter();
  sub_100082C6C(v7 + 152, (uint64_t)&v97);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = v89;
  static _VerticalFlowLayout.ExclusionCondition.isHidden.getter();
  static _VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter();
  static _VerticalFlowLayout.ExclusionCondition.hasNoContent.getter();
  uint64_t v96 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  CGFloat v55 = v72;
  static _VerticalFlowLayout.Child.make(forView:placement:horizontalAlignment:topSpace:bottomSpace:excludeWhen:)();
  v73(v48, v49);
  sub_100082BCC((uint64_t)&v97, &qword_10098B900);
  v75(v32, v90);
  v74(v55, v53);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v100);
  CGFloat v56 = v65;
  _VerticalFlowLayout.init(expandChildrenToFit:children:)();
  v105.origin.CGFloat x = a3;
  v105.origin.CGFloat y = a4;
  v105.size.CGFloat width = a5;
  v105.size.CGFloat height = a6;
  CGRectGetMinX(v105);
  v106.origin.CGFloat x = a3;
  v106.origin.CGFloat y = a4;
  v106.size.CGFloat width = a5;
  v106.size.CGFloat height = a6;
  CGRectGetMinY(v106);
  v107.origin.CGFloat x = a3;
  v107.origin.CGFloat y = a4;
  v107.size.CGFloat width = a5;
  v107.size.CGFloat height = a6;
  CGRectGetHeight(v107);
  _VerticalFlowLayout.placeChildren(relativeTo:in:)();
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v56, v67);
}

uint64_t sub_1001548EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, double a5@<D2>, CGFloat a6@<D3>)
{
  swift_getObjectType();
  sub_100154E08(a1, v6, a5);
  double v14 = v13;
  v17.origin.CGFloat x = a3;
  v17.origin.CGFloat y = a4;
  v17.size.CGFloat width = a5;
  v17.size.CGFloat height = a6;
  if (v14 <= CGRectGetHeight(v17))
  {
    return sub_1001537B8(a2, a3, a4, a5, a6);
  }
  else
  {
    return sub_100153CD4(a1, a2, a3, a4, a5, a6);
  }
}

double sub_1001549E4(uint64_t a1, double a2)
{
  swift_getObjectType();

  return sub_100154E08(a1, v2, a2);
}

double sub_100154A40(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v31 = a3;
  uint64_t v9 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100081D90((void *)(a2 + 160), *(void *)(a2 + 184));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v10 + 8);
  v15(v12, v9);
  sub_100081D90((void *)(a2 + 120), *(void *)(a2 + 144));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  uint64_t v17 = v16;
  v15(v12, v9);
  sub_100081D90((void *)(a2 + 200), *(void *)(a2 + 224));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  uint64_t v19 = v18;
  v15(v12, v9);
  sub_100082C6C(a2 + 240, (uint64_t)v40);
  long long v30 = *(_OWORD *)(a2 + 280);
  uint64_t v20 = *(void *)(a2 + 296);
  uint64_t v21 = *(void *)(a2 + 304);
  char v22 = *(unsigned char *)(a2 + 312);
  sub_100082C6C(a2 + 320, (uint64_t)&v44);
  sub_100082C6C(a2 + 360, (uint64_t)&v45);
  v39[0] = v17;
  v39[1] = v14;
  v39[2] = v19;
  v39[3] = v14;
  *(_OWORD *)&v40[40] = v30;
  uint64_t v41 = v20;
  uint64_t v42 = v21;
  char v43 = v22;
  sub_100154DD0((uint64_t)v39, (uint64_t)v35);
  sub_100082C6C(a2 + 480, (uint64_t)&v36);
  sub_100082C6C(a2 + 520, (uint64_t)&v37);
  sub_100082C6C(a2 + 560, (uint64_t)&v38);
  sub_100081D90((void *)(a2 + 80), *(void *)(a2 + 104));
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  double v24 = v23;
  v15(v12, v9);
  sub_100154E08(a1, v35, a4);
  double v26 = a5 - v24 - v25;
  sub_10005BDC8(a2 + 400, (uint64_t)&v32);
  if (v33)
  {
    sub_100081DD4(&v32, (uint64_t)v34);
    sub_100081D90(v34, v34[3]);
    Measurable.measuredSize(fitting:in:)();
    double v28 = v27;
    sub_100155170((uint64_t)v35);
    sub_1001551A0((uint64_t)v39);
    double v26 = v26 - v28;
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v34);
  }
  else
  {
    sub_100155170((uint64_t)v35);
    sub_1001551A0((uint64_t)v39);
    sub_100082BCC((uint64_t)&v32, (uint64_t *)&unk_1009932D0);
  }
  return v26;
}

uint64_t sub_100154DD0(uint64_t a1, uint64_t a2)
{
  return a2;
}

double sub_100154E08(uint64_t a1, void *a2, double a3)
{
  uint64_t v6 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100081D90(a2 + 24, a2[27]);
  Measurable.measuredSize(fitting:in:)();
  sub_100081D90(a2 + 19, a2[22]);
  j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
  AnyDimension.value(in:rounded:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v7 + 8);
  v10(v9, v6);
  uint64_t v11 = a2[32];
  uint64_t v20 = a2 + 29;
  sub_100081D90(a2 + 29, v11);
  char v12 = dispatch thunk of LayoutView.isHidden.getter();
  v19[1] = a1;
  uint64_t v22 = v7 + 8;
  double v23 = v10;
  uint64_t v21 = v9;
  if (v12)
  {
    uint64_t v13 = v6;
  }
  else
  {
    sub_100081D90(a2 + 4, a2[7]);
    j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
    AnyDimension.value(in:rounded:)();
    uint64_t v13 = v6;
    v10(v9, v6);
  }
  sub_100081D90(a2 + 34, a2[37]);
  if ((dispatch thunk of LayoutView.isHidden.getter() & 1) == 0)
  {
    sub_100081D90(a2 + 34, a2[37]);
    Measurable.measuredSize(fitting:in:)();
  }
  uint64_t v14 = v21;
  sub_100081D90(v20, a2[32]);
  char v15 = dispatch thunk of LayoutView.isHidden.getter();
  sub_100156B80((uint64_t)a2, (uint64_t)v24);
  uint64_t v16 = v23;
  if (v15)
  {
    sub_100155170((uint64_t)v24);
  }
  else
  {
    sub_100081D90(v25, v25[3]);
    char v17 = dispatch thunk of LayoutView.isHidden.getter();
    sub_100155170((uint64_t)v24);
    if ((v17 & 1) == 0)
    {
      sub_100081D90(a2 + 14, a2[17]);
      j___s5JetUI10DimensionsV19defaultRoundingRules013FloatingPointeF0OvgZ();
      AnyDimension.value(in:rounded:)();
      v16(v14, v13);
    }
  }
  return a3;
}

uint64_t sub_100155170(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001551A0(uint64_t a1)
{
  return a1;
}

uint64_t destroy for AXArcadeSubscribePageLayout(uint64_t a1)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 40);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 80);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 120);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 160);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 200);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 240);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 320);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 360);
  if (*(void *)(a1 + 424)) {
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 400);
  }
  if (*(void *)(a1 + 464)) {
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 440);
  }
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 480);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 520);

  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 560);
}

uint64_t initializeWithCopy for AXArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  long long v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  uint64_t v10 = *(void *)(a2 + 264);
  uint64_t v11 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v10;
  *(void *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  long long v12 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  uint64_t v13 = *(void *)(a2 + 344);
  uint64_t v14 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = v13;
  *(void *)(a1 + 352) = v14;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 320, a2 + 320);
  long long v15 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 384) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 360, a2 + 360);
  uint64_t v16 = (_OWORD *)(a1 + 400);
  char v17 = (_OWORD *)(a2 + 400);
  uint64_t v18 = *(void *)(a2 + 424);
  if (v18)
  {
    uint64_t v19 = *(void *)(a2 + 432);
    *(void *)(a1 + 424) = v18;
    *(void *)(a1 + 432) = v19;
    (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 416);
    *uint64_t v16 = *v17;
    *(_OWORD *)(a1 + 416) = v20;
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
  }
  uint64_t v21 = (_OWORD *)(a1 + 440);
  uint64_t v22 = (_OWORD *)(a2 + 440);
  uint64_t v23 = *(void *)(a2 + 464);
  if (v23)
  {
    uint64_t v24 = *(void *)(a2 + 472);
    *(void *)(a1 + 464) = v23;
    *(void *)(a1 + 472) = v24;
    (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v21, v22);
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 456);
    *uint64_t v21 = *v22;
    *(_OWORD *)(a1 + 456) = v25;
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
  }
  uint64_t v26 = *(void *)(a2 + 504);
  uint64_t v27 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = v26;
  *(void *)(a1 + 512) = v27;
  (**(void (***)(uint64_t, uint64_t))(v26 - 8))(a1 + 480, a2 + 480);
  long long v28 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 544) = v28;
  (**(void (***)(uint64_t, uint64_t))(v28 - 8))(a1 + 520, a2 + 520);
  uint64_t v29 = *(void *)(a2 + 584);
  *(void *)(a1 + 584) = v29;
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  (**(void (***)(uint64_t, uint64_t))(v29 - 8))(a1 + 560, a2 + 560);
  return a1;
}

uint64_t assignWithCopy for AXArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  sub_100062A2C((uint64_t *)a1, (uint64_t *)a2);
  sub_100062A2C((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  sub_100062A2C((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  sub_100062A2C((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
  sub_100062A2C((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
  sub_100062A2C((uint64_t *)(a1 + 200), (uint64_t *)(a2 + 200));
  sub_100062A2C((uint64_t *)(a1 + 240), (uint64_t *)(a2 + 240));
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  sub_100062A2C((uint64_t *)(a1 + 320), (uint64_t *)(a2 + 320));
  sub_100062A2C((uint64_t *)(a1 + 360), (uint64_t *)(a2 + 360));
  uint64_t v4 = *(void *)(a2 + 424);
  if (*(void *)(a1 + 424))
  {
    if (v4)
    {
      sub_100062A2C((uint64_t *)(a1 + 400), (uint64_t *)(a2 + 400));
      goto LABEL_8;
    }
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 400);
  }
  else if (v4)
  {
    *(void *)(a1 + 424) = v4;
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 400, a2 + 400);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 400);
  long long v6 = *(_OWORD *)(a2 + 416);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(_OWORD *)(a1 + 400) = v5;
  *(_OWORD *)(a1 + 416) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 464);
  if (!*(void *)(a1 + 464))
  {
    if (v7)
    {
      *(void *)(a1 + 464) = v7;
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 440, a2 + 440);
      goto LABEL_15;
    }
LABEL_14:
    long long v8 = *(_OWORD *)(a2 + 440);
    long long v9 = *(_OWORD *)(a2 + 456);
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(_OWORD *)(a1 + 440) = v8;
    *(_OWORD *)(a1 + 456) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 440);
    goto LABEL_14;
  }
  sub_100062A2C((uint64_t *)(a1 + 440), (uint64_t *)(a2 + 440));
LABEL_15:
  sub_100062A2C((uint64_t *)(a1 + 480), (uint64_t *)(a2 + 480));
  sub_100062A2C((uint64_t *)(a1 + 520), (uint64_t *)(a2 + 520));
  sub_100062A2C((uint64_t *)(a1 + 560), (uint64_t *)(a2 + 560));
  return a1;
}

void *initializeWithTake for AXArcadeSubscribePageLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x258uLL);
}

uint64_t assignWithTake for AXArcadeSubscribePageLayout(uint64_t a1, uint64_t a2)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 240);
  long long v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  uint64_t v8 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v8;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 320);
  long long v9 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v9;
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 360);
  long long v10 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v10;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  if (*(void *)(a1 + 424)) {
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 400);
  }
  long long v11 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v11;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  if (*(void *)(a1 + 464)) {
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 440);
  }
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  long long v12 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v12;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 480);
  long long v13 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v13;
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 520);
  long long v14 = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 536) = v14;
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 560);
  long long v15 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v15;
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXArcadeSubscribePageLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 600)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXArcadeSubscribePageLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 600) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 600) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXArcadeSubscribePageLayout()
{
  return &type metadata for AXArcadeSubscribePageLayout;
}

uint64_t destroy for AXArcadeSubscribePageLayout.Metrics(uint64_t a1)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 40);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 80);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 120);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 160);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 200);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 240);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 320);

  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 360);
}

uint64_t initializeWithCopy for AXArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 144) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 120, a2 + 120);
  long long v8 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 160, a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 200, a2 + 200);
  uint64_t v10 = *(void *)(a2 + 264);
  uint64_t v11 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = v10;
  *(void *)(a1 + 272) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 240, a2 + 240);
  long long v12 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v12;
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  uint64_t v13 = *(void *)(a2 + 344);
  uint64_t v14 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = v13;
  *(void *)(a1 + 352) = v14;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 320, a2 + 320);
  long long v15 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 384) = v15;
  (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 360, a2 + 360);
  return a1;
}

uint64_t assignWithCopy for AXArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  sub_100062A2C((uint64_t *)(a1 + 320), (uint64_t *)(a2 + 320));
  sub_100062A2C((uint64_t *)(a1 + 360), (uint64_t *)(a2 + 360));
  return a1;
}

void *initializeWithTake for AXArcadeSubscribePageLayout.Metrics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x190uLL);
}

uint64_t assignWithTake for AXArcadeSubscribePageLayout.Metrics(uint64_t a1, uint64_t a2)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 240);
  long long v7 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v7;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  uint64_t v8 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v8;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 320);
  long long v9 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v9;
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 360);
  long long v10 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v10;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXArcadeSubscribePageLayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 400)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXArcadeSubscribePageLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 400) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 400) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXArcadeSubscribePageLayout.Metrics()
{
  return &type metadata for AXArcadeSubscribePageLayout.Metrics;
}

uint64_t destroy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 32);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 112);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 152);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 192);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 232);

  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 272);
}

uint64_t initializeWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 112, a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 176) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 152, a2 + 152);
  long long v8 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 216) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 192, a2 + 192);
  long long v9 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 256) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 232, a2 + 232);
  uint64_t v10 = *(void *)(a2 + 296);
  uint64_t v11 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = v10;
  *(void *)(a1 + 304) = v11;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 272, a2 + 272);
  return a1;
}

uint64_t assignWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_100062A2C((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  sub_100062A2C((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  sub_100062A2C((uint64_t *)(a1 + 152), (uint64_t *)(a2 + 152));
  sub_100062A2C((uint64_t *)(a1 + 192), (uint64_t *)(a2 + 192));
  sub_100062A2C((uint64_t *)(a1 + 232), (uint64_t *)(a2 + 232));
  sub_100062A2C((uint64_t *)(a1 + 272), (uint64_t *)(a2 + 272));
  return a1;
}

void *initializeWithTake for AXArcadeSubscribePageLayout.OfferDetailsSublayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 32);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 112);
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 152);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 192);
  long long v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 232);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 272);
  long long v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 312)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXArcadeSubscribePageLayout.OfferDetailsSublayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 312) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 312) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXArcadeSubscribePageLayout.OfferDetailsSublayout()
{
  return &type metadata for AXArcadeSubscribePageLayout.OfferDetailsSublayout;
}

uint64_t destroy for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1)
{
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 32);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 112);

  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 152);
}

uint64_t initializeWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 112, a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 176) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 152, a2 + 152);
  return a1;
}

uint64_t assignWithCopy for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_100062A2C((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  sub_100062A2C((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  sub_100062A2C((uint64_t *)(a1 + 152), (uint64_t *)(a2 + 152));
  return a1;
}

__n128 initializeWithTake for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 32);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 112);
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(a1 + 152);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics()
{
  return &type metadata for AXArcadeSubscribePageLayout.OfferDetailsSublayout.Metrics;
}

unint64_t sub_100156ACC()
{
  unint64_t result = qword_100985A30;
  if (!qword_100985A30)
  {
    type metadata accessor for _VerticalFlowLayout.ExclusionCondition();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100985A30);
  }
  return result;
}

unint64_t sub_100156B24()
{
  unint64_t result = qword_100985A38;
  if (!qword_100985A38)
  {
    sub_100078F30(&qword_100990B90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100985A38);
  }
  return result;
}

uint64_t sub_100156B80(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_100156BB8()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for OSLogger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097E368 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100087728(v2, (uint64_t)qword_1009E1888);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x2074736554;
  v7._object = (void *)0xE500000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v7);
  uint64_t v8 = PerformanceTestCase.name.getter();
  v13[3] = &type metadata for String;
  v13[0] = v8;
  v13[1] = v9;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100089384((uint64_t)v13);
  v10._object = (void *)0x8000000100808F00;
  v10._countAndFlagsBits = 0xD000000000000046;
  LogMessage.StringInterpolation.appendLiteral(_:)(v10);
  LogMessage.init(stringInterpolation:)();
  Logger.info(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  PerformanceTestCase.name.getter();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v12 = PerformanceTestCase.scrollIterations.getter();
  [v0 _performScrollTest:v11 iterations:v12 delta:PerformanceTestCase.scrollDelta.getter()];
}

void UIScrollView.perform(_:using:)(void *a1, void *a2)
{
  uint64_t v69 = a2;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v61 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OSLogger();
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  __chkstk_darwin(v5);
  uint64_t v62 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PerformanceTestType();
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PerformanceTestCase();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  CGFloat v65 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v15 = (char *)&v61 - v14;
  id v66 = self;
  unsigned int v16 = [v66 isRecapAvailable];
  char v17 = *(void (**)(char *, void *, uint64_t))(v11 + 16);
  uint64_t v18 = a1;
  v17(v15, a1, v10);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    goto LABEL_9;
  }
  char v19 = PerformanceTestCase.useNatural.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  if ((v19 & 1) == 0)
  {
LABEL_9:
    sub_100156BB8();
    return;
  }
  PerformanceTestCase.type.getter();
  uint64_t v21 = v67;
  uint64_t v20 = v68;
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v67 + 88))(v9, v68);
  if (v22 == enum case for PerformanceTestType.scroll(_:))
  {
    uint64_t v69 = (void *)PerformanceTestCase.name.getter();
    uint64_t v23 = v65;
    v17(v65, v18, v10);
    unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v25 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v25 + v24, v23, v10);
    id v26 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    id v27 = v70;
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v75 = sub_100157BC8;
    uint64_t v76 = v25;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v72 = 1107296256;
    CGFloat v73 = sub_1000162D4;
    CGFloat v74 = &unk_1008BDD80;
    uint64_t v29 = _Block_copy(&aBlock);
    swift_release();
    id v30 = [v26 initWithTestName:v28 scrollView:v27 completionHandler:v29];

    _Block_release(v29);
    [v30 setIterationDurationFactor:0.8];
    PerformanceTestCase.name.getter();
    v31._countAndFlagsBits = 0xD000000000000013;
    v31._object = (void *)0x8000000100808E60;
    LOBYTE(v29) = String.hasPrefix(_:)(v31);
    swift_bridgeObjectRelease();
    [v30 direction];
    RPTAxisFromScrollDirection();
    if (v29)
    {
      _RPTAmplitudeFromPagesOfView();
      double v33 = v32;
      [v30 scrollingContentLength];
      if (v34 >= v33) {
        double v34 = v33;
      }
    }
    else
    {
      _RPTAmplitudeFromPagesOfView();
    }
    uint64_t v54 = v63;
    uint64_t v53 = v64;
    CGFloat v55 = v62;
    [v30 setScrollingContentLength:v34];
    if (qword_10097E368 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_100087728(v53, (uint64_t)qword_1009E1888);
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, v56, v53);
    sub_100082C28((uint64_t *)&unk_100984540);
    type metadata accessor for LogMessage();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v57._countAndFlagsBits = 0x2074736554;
    v57._object = (void *)0xE500000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    uint64_t v58 = PerformanceTestCase.name.getter();
    CGFloat v74 = &type metadata for String;
    CGAffineTransform aBlock = (void **)v58;
    uint64_t v72 = v59;
    LogMessage.StringInterpolation.appendInterpolation(safe:)();
    sub_100089384((uint64_t)&aBlock);
    v60._object = (void *)0x8000000100808E80;
    v60._countAndFlagsBits = 0xD000000000000036;
    LogMessage.StringInterpolation.appendLiteral(_:)(v60);
    LogMessage.init(stringInterpolation:)();
    Logger.info(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
    [v66 runTestWithParameters:v30];
  }
  else if (v22 == enum case for PerformanceTestType.resize(_:))
  {
    id v35 = [v70 window];
    if (v35)
    {
      uint64_t v36 = v35;
      PerformanceTestCase.name.getter();
      uint64_t v37 = v65;
      id v70 = v18;
      v17(v65, v18, v10);
      unint64_t v38 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      uint64_t v39 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v39 + v38, v37, v10);
      id v40 = objc_allocWithZone((Class)RPTResizeTestParameters);
      id v41 = v36;
      NSString v42 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v75 = sub_100157B8C;
      uint64_t v76 = v39;
      CGAffineTransform aBlock = _NSConcreteStackBlock;
      uint64_t v72 = 1107296256;
      CGFloat v73 = sub_1000162D4;
      CGFloat v74 = &unk_1008BDD30;
      char v43 = _Block_copy(&aBlock);
      swift_release();
      id v44 = [v40 initWithTestName:v42 window:v41 completionHandler:v43];

      _Block_release(v43);
      if (qword_10097E368 != -1) {
        swift_once();
      }
      uint64_t v45 = v64;
      uint64_t v46 = sub_100087728(v64, (uint64_t)qword_1009E1888);
      uint64_t v48 = v62;
      uint64_t v47 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v46, v45);
      sub_100082C28((uint64_t *)&unk_100984540);
      type metadata accessor for LogMessage();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v49._countAndFlagsBits = 0x2074736554;
      v49._object = (void *)0xE500000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      uint64_t v50 = PerformanceTestCase.name.getter();
      CGFloat v74 = &type metadata for String;
      CGAffineTransform aBlock = (void **)v50;
      uint64_t v72 = v51;
      LogMessage.StringInterpolation.appendInterpolation(safe:)();
      sub_100089384((uint64_t)&aBlock);
      v52._object = (void *)0x8000000100808E20;
      v52._countAndFlagsBits = 0xD000000000000036;
      LogMessage.StringInterpolation.appendLiteral(_:)(v52);
      LogMessage.init(stringInterpolation:)();
      Logger.info(_:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v45);
      [v66 runTestWithParameters:v44];
    }
    else
    {
      sub_100081D90(v69, v69[3]);
      dispatch thunk of PerformanceTestRunner.failed(_:reason:)();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
}

uint64_t sub_1001578F0(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for OSLogger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097E368 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100087728(v4, (uint64_t)qword_1009E1888);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_100082C28((uint64_t *)&unk_100984540);
  type metadata accessor for LogMessage();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1007BEDF0;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x2074736554;
  v9._object = (void *)0xE500000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v9);
  uint64_t v10 = PerformanceTestCase.name.getter();
  v14[3] = &type metadata for String;
  v14[0] = v10;
  v14[1] = v11;
  LogMessage.StringInterpolation.appendInterpolation(safe:)();
  sub_100089384((uint64_t)v14);
  v12._countAndFlagsBits = 0xD000000000000012;
  v12._object = a2;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  LogMessage.init(stringInterpolation:)();
  Logger.info(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100157B8C()
{
  return sub_100157BDC((void *)0x8000000100808EE0);
}

void sub_100157BA0(void *a1, void *a2)
{
}

uint64_t sub_100157BC8()
{
  return sub_100157BDC((void *)0x8000000100808EC0);
}

uint64_t sub_100157BDC(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PerformanceTestCase() - 8);
  return sub_1001578F0(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_100157C40()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100157C98()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100157CD0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100157D08()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100157D48()
{
  uint64_t v1 = type metadata accessor for ArcadeStateChange();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_100157E04()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100157E44(uint64_t a1)
{
  return sub_100157E80(a1, qword_1009E14C0);
}

uint64_t sub_100157E54(uint64_t a1)
{
  return sub_100157E80(a1, qword_1009E14D8);
}

uint64_t sub_100157E68(uint64_t a1)
{
  return sub_100157E80(a1, qword_1009E14F0);
}

uint64_t sub_100157E80(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for FontSource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (UIFontTextStyle *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for StaticDimension();
  sub_100042444(v7, a2);
  sub_100087728(v7, (uint64_t)a2);
  *unint64_t v6 = UIFontTextStyleBody;
  (*(void (**)(UIFontTextStyle *, void, uint64_t))(v4 + 104))(v6, enum case for FontSource.textStyle(_:), v3);
  v12[3] = v3;
  v12[4] = (uint64_t)&protocol witness table for FontSource;
  uint64_t v8 = sub_1000808B8(v12);
  (*(void (**)(uint64_t *, UIFontTextStyle *, uint64_t))(v4 + 16))(v8, v6, v3);
  Swift::String v9 = UIFontTextStyleBody;
  StaticDimension.init(_:scaledLike:)();
  return (*(uint64_t (**)(UIFontTextStyle *, uint64_t))(v4 + 8))(v6, v3);
}

double sub_100157FF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100759048(*a1, a6);
}

unint64_t sub_100158000(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100158370(*a1, a2, a3);
}

uint64_t sub_100158008()
{
  uint64_t v0 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100980750 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for StaticDimension();
  sub_100087728(v4, (uint64_t)qword_1009E7588);
  static Dimensions.defaultRoundingRule.getter();
  AnyDimension.value(in:rounded:)();
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_100158150()
{
  uint64_t v0 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100980748 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for StaticDimension();
  sub_100087728(v4, (uint64_t)qword_1009E7570);
  static Dimensions.defaultRoundingRule.getter();
  AnyDimension.value(in:rounded:)();
  uint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_100158298()
{
  return sub_100158328((unint64_t *)&unk_100985B20, (void (*)(uint64_t))&type metadata accessor for TitledButtonStack);
}

uint64_t sub_1001582E0()
{
  return sub_100158328(&qword_1009A9C80, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_100158328(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100158370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = type metadata accessor for IndexSet();
  __chkstk_darwin(v20);
  v19[0] = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100082C28(&qword_100985B78);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100757C74();
  v19[1] = a1;
  unint64_t result = TitledButtonStack.buttons.getter();
  unint64_t v13 = result;
  if (!(result >> 62))
  {
    uint64_t v14 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    TitledButtonStack.regularLineBreaks.getter();
    TitledButtonStack.compactLineBreaks.getter();
    sub_100082C28(&qword_100985B80);
    Conditional<>.init(regularValue:compactValue:)();
    uint64_t v17 = sub_100082C28(&qword_100985B88);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
    uint64_t v18 = (uint64_t)v3 + OBJC_IVAR____TtC8AppStore35TitledButtonStackCollectionViewCell_lineBreaks;
    swift_beginAccess();
    sub_1001585EC((uint64_t)v11, v18);
    swift_endAccess();
    return (unint64_t)[v4 setNeedsLayout];
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v14 >= 1)
  {
    for (uint64_t i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v16 = *(void *)(v13 + 8 * i + 32);
        swift_retain();
      }
      sub_100757E00(v16, a3);
      swift_release();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001585EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28(&qword_100985B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100158654(void *a1)
{
  uint64_t v2 = v1;
  if (a1) {
    id v3 = [a1 superview];
  }
  else {
    id v3 = 0;
  }
  id v4 = [v2 contentView];
  uint64_t v5 = v4;
  if (v3)
  {
    if (v4)
    {
      sub_10003A33C();
      id v6 = v3;
      char v7 = static NSObject.== infix(_:_:)();
    }
    else
    {
      char v7 = 0;
      uint64_t v5 = v3;
    }
  }
  else
  {
    if (!v4)
    {
      char v7 = 1;
      return v7 & 1;
    }
    char v7 = 0;
  }

  return v7 & 1;
}

id sub_100158718(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[qword_1009E1508];
  uint64_t v11 = qword_10097F9A0;
  Swift::String v12 = v4;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for AspectRatio();
  uint64_t v14 = sub_100087728(v13, (uint64_t)qword_1009E5638);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v14, v13);
  swift_unknownObjectWeakInit();

  v22.id receiver = v12;
  v22.super_class = ObjectType;
  [super initWithFrame:a1, a2, a3, a4];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v17 = v15;
  if (Strong)
  {
    [Strong _setContinuousCornerRadius:5.0];
  }
  uint64_t v18 = swift_unknownObjectWeakLoadStrong();
  if (v18)
  {
    char v19 = (void *)v18;
    id v20 = [v17 contentView];
    [v20 addSubview:v19];
  }
  return v17;
}

id sub_1001588C4(double a1, double a2, double a3, double a4)
{
  return sub_100158718(a1, a2, a3, a4);
}

void sub_1001588E8(void *a1)
{
  v4.id receiver = a1;
  v4.super_class = (Class)swift_getObjectType();
  uint64_t v1 = (char *)v4.receiver;
  [super layoutSubviews];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (char *)Strong;
    [v1[qword_1009E1AA0] bounds];
    [v3 setFrame:];

    uint64_t v1 = v3;
  }
}

void sub_100158984(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v51 = a5;
  uint64_t v52 = a3;
  uint64_t v50 = a2;
  uint64_t v8 = sub_100082C28((uint64_t *)&unk_1009856B0);
  __chkstk_darwin(v8 - 8);
  Swift::String v49 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v48 = (char *)&v40 - v11;
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_100991FE0);
  __chkstk_darwin(v12 - 8);
  uint64_t v47 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for VideoControls();
  __chkstk_darwin(v14 - 8);
  char v43 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  NSString v42 = (char *)&v40 - v17;
  uint64_t v18 = sub_100082C28((uint64_t *)&unk_1009856C0);
  __chkstk_darwin(v18 - 8);
  id v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for VideoFillMode();
  uint64_t v21 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for VideoConfiguration();
  uint64_t v45 = *(void *)(v24 - 8);
  uint64_t v46 = v24;
  __chkstk_darwin(v24);
  id v44 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for AspectRatio();
  uint64_t v27 = *(void *)(v26 - 8);
  __n128 v28 = __chkstk_darwin(v26);
  id v30 = (char *)&v40 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006201E0(a1, a4, v28);
  v53[0] = v52;
  id v31 = [a4 traitCollection];
  type metadata accessor for TodayCardMediaVideo();
  uint64_t v32 = TodayCardMediaWithArtwork.video(for:)();

  if (v32)
  {
    Video.preview.getter();
    Artwork.size.getter();
    AspectRatio.init(_:_:)();
    uint64_t v40 = v5;
    uint64_t v33 = v5 + qword_1009E1508;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 40))(v33, v30, v26);
    swift_endAccess();
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for VideoFillMode.scaleAspectFill(_:), v41);
    Artwork.size.getter();
    AspectRatio.init(_:_:)();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v20, 0, 1, v26);
    Video.playbackControls.getter();
    Video.autoPlayPlaybackControls.getter();
    Video.canPlayFullScreen.getter();
    Video.allowsAutoPlay.getter();
    Video.looping.getter();
    double v34 = v44;
    VideoConfiguration.init(fillMode:aspectRatio:playbackControls:autoPlayPlaybackControls:canPlayFullScreen:allowsAutoPlay:looping:roundedCorners:deviceCornerRadiusFactor:)();
    type metadata accessor for VideoViewManager();
    BaseObjectGraph.inject<A>(_:)();
    Video.playbackId.getter();
    uint64_t v35 = (uint64_t)v47;
    Video.videoUrl.getter();
    uint64_t v36 = type metadata accessor for URL();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    uint64_t v37 = (uint64_t)v48;
    Video.templateMediaEvent.getter();
    uint64_t v38 = (uint64_t)v49;
    Video.templateClickEvent.getter();
    type metadata accessor for VideoView();
    sub_100159974(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
    uint64_t v39 = (void *)dispatch thunk of VideoViewManager.videoView<A>(with:videoUrl:configuration:templateMediaEvent:templateClickEvent:asPartOf:)();
    sub_100082BCC(v38, (uint64_t *)&unk_1009856B0);
    sub_100082BCC(v37, (uint64_t *)&unk_1009856B0);
    sub_100082BCC(v35, (uint64_t *)&unk_100991FE0);
    sub_100082BCC((uint64_t)v53, &qword_100981560);
    sub_100159834();

    sub_100158FC4();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v46);
  }
}

void sub_100158FC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AspectRatio();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Video.preview.getter();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v7 = (void *)Strong;
    uint64_t v8 = &v0[qword_1009E1508];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    LOBYTE(v8) = AspectRatio.isPortrait.getter();
    uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
    v9(v5, v2);
    if (v8)
    {
      if (qword_10097F998 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_1009E5620;
    }
    else
    {
      if (qword_10097F990 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_1009E5608;
    }
    sub_100087728(v2, (uint64_t)v10);
    [v1 bounds];
    AspectRatio.maxSize(fitting:)();
    Artwork.size.getter();
    AspectRatio.init(_:_:)();
    AspectRatio.maxSize(filling:)();
    v9(v5, v2);
    Artwork.config(_:mode:prefersLayeredImage:)();
    type metadata accessor for VideoView();
    sub_100159974(&qword_1009932F0, (void (*)(uint64_t))type metadata accessor for VideoView);
    ArtworkLoader.fetchArtwork<A>(using:forReason:closestMatch:into:)();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_1001592C4()
{
  uint64_t v1 = v0 + qword_1009E1508;
  uint64_t v2 = type metadata accessor for AspectRatio();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_100159340(uint64_t a1)
{
  uint64_t v1 = a1 + qword_1009E1508;
  uint64_t v2 = type metadata accessor for AspectRatio();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_unknownObjectWeakDestroy();
}

uint64_t type metadata accessor for VideoTodayBrickCollectionViewCell()
{
  uint64_t result = qword_100985BB8;
  if (!qword_100985BB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10015940C()
{
  uint64_t result = type metadata accessor for AspectRatio();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001594A4()
{
  return type metadata accessor for VideoTodayBrickCollectionViewCell();
}

uint64_t sub_1001594AC()
{
  return swift_unknownObjectWeakLoadStrong();
}

void sub_1001594BC(void *a1)
{
  sub_100159834();
}

void (*sub_1001594F4(uint64_t *a1))(id *a1, char a2)
{
  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong();
  return sub_100159548;
}

void sub_100159548(id *a1, char a2)
{
  id v4 = *a1;
  if (a2)
  {
    id v2 = v4;
    sub_100159834();

    uint64_t v3 = v2;
  }
  else
  {
    sub_100159834();
    uint64_t v3 = v4;
  }
}

uint64_t sub_1001595B4()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_100159974(&qword_100985CF0, (void (*)(uint64_t))type metadata accessor for VideoTodayBrickCollectionViewCell);

  return VideoViewProviding.someVideoView.getter(ObjectType, v1);
}

uint64_t sub_100159628(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_100159974(&qword_100985CF0, (void (*)(uint64_t))type metadata accessor for VideoTodayBrickCollectionViewCell);

  return VideoViewProviding.someVideoView.setter(a1, a2, ObjectType, v5);
}

void (*sub_1001596B4(void *a1))(void *a1)
{
  swift_getObjectType();
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_100159974(&qword_100985CF0, (void (*)(uint64_t))type metadata accessor for VideoTodayBrickCollectionViewCell);
  v2[4] = VideoViewProviding.someVideoView.modify();
  return sub_1000D8184;
}

uint64_t sub_10015975C()
{
  return sub_100159974(&qword_100985CE0, (void (*)(uint64_t))type metadata accessor for VideoTodayBrickCollectionViewCell);
}

uint64_t sub_1001597A4()
{
  return sub_100159974(&qword_100985CE8, (void (*)(uint64_t))type metadata accessor for VideoTodayBrickCollectionViewCell);
}

uint64_t sub_1001597EC()
{
  return sub_100159974(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
}

void sub_100159834()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v2 = Strong;
  if (Strong)
  {
    sub_100159974(&qword_1009859B0, (void (*)(uint64_t))type metadata accessor for VideoView);
    uint64_t Strong = v2;
  }
  char v3 = sub_100158654(Strong);

  if (v3)
  {
    id v4 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      uint64_t v5 = v4;
      [v4 removeFromSuperview];
    }
  }
  swift_unknownObjectWeakAssign();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    id v8 = (id)v6;
    id v7 = [v0 contentView];
    [v7 addSubview:v8];

    [v0 setNeedsLayout];
  }
}

uint64_t sub_100159974(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001599BC()
{
  return sub_100159E78(&qword_100985D00, (void (*)(uint64_t))type metadata accessor for ArcadeFooterCollectionViewCell);
}

double sub_100159A04()
{
  uint64_t v0 = type metadata accessor for ShelfLayoutContext();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ItemLayoutContext.parentShelfLayoutContext.getter();
  double v4 = sub_100159AE4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

double sub_100159AE4()
{
  uint64_t v0 = type metadata accessor for ArcadeFooterLayout.Metrics();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = type metadata accessor for PageGrid();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.componentMeasuringSize(spanning:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v8 + 8);
  v11(v10, v7);
  ShelfLayoutContext.contentPageGrid.getter();
  PageGrid.containerWidth.getter();
  uint64_t v13 = v12;
  v11(v10, v7);
  uint64_t v14 = ShelfLayoutContext.traitCollection.getter();
  uint64_t v15 = (objc_class *)type metadata accessor for SnapshotPageTraitEnvironment();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  uint64_t v17 = &v16[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_pageContainerSize];
  *(void *)uint64_t v17 = v13;
  *((void *)v17 + 1) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)&v16[OBJC_IVAR____TtC8AppStore28SnapshotPageTraitEnvironment_traitCollection] = v14;
  v25.id receiver = v16;
  v25.super_class = v15;
  [super init];
  if (qword_100980168 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100087728(v0, (uint64_t)qword_1009A22D0);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v19, v0);
  __chkstk_darwin(v20);
  *((void *)&v25 - 2) = v18;
  Copyable.copyWithOverrides(in:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v1 + 8);
  v21(v3, v0);

  ShelfLayoutContext.traitEnvironment.getter();
  type metadata accessor for ArcadeFooterLayout();
  sub_100159E78(&qword_100985D08, (void (*)(uint64_t))&type metadata accessor for ArcadeFooterLayout);
  dispatch thunk of static EstimatedMeasurable.estimatedMeasurements(fitting:using:in:)();
  double v23 = v22;
  swift_unknownObjectRelease();
  v21(v6, v0);
  return v23;
}

uint64_t sub_100159E70(uint64_t a1)
{
  return sub_10062ED4C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100159E78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ProductReviewSelectionHandlerCollectionElementsObserver()
{
  uint64_t result = qword_100985D28;
  if (!qword_100985D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100159F0C()
{
  return swift_initClassMetadata2();
}

id sub_100159F6C()
{
  uint64_t v1 = qword_100985D20;
  uint64_t v2 = *(void **)(v0 + qword_100985D20);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_100985D20);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for ComponentViewOverflowTransitioning()) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_100159FE0(uint64_t a1, objc_class *a2, uint64_t a3, uint64_t a4)
{
  Class v139 = a2;
  uint64_t v140 = a4;
  uint64_t v136 = a1;
  uint64_t v137 = a3;
  uint64_t v124 = type metadata accessor for Dependency();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  CGRect v119 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for MetricsFieldsContext();
  uint64_t v118 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  CGRect v115 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  CGRect v116 = (char *)&v95 - v8;
  uint64_t v122 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v120 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  CGRect v117 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for FlowOrigin();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  CGRect v114 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for FlowAnimationBehavior();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  CGRect v113 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for FlowPresentationContext();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  CGRect v110 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ActionMetrics();
  __chkstk_darwin(v13 - 8);
  CGRect v107 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100082C28((uint64_t *)&unk_100993950);
  __chkstk_darwin(v15 - 8);
  CGRect v106 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100082C28((uint64_t *)&unk_100991FE0);
  __chkstk_darwin(v17 - 8);
  CGRect v103 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for FlowPage();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  double v128 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v20 - 8);
  uint64_t v132 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100082C28((uint64_t *)&unk_10098ABB0);
  __chkstk_darwin(v22 - 8);
  double v127 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for ItemLayoutContext();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  double v126 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v135 = (char *)&v95 - v26;
  uint64_t v27 = type metadata accessor for ProductReview.ReviewSource();
  uint64_t v133 = *(void *)(v27 - 8);
  uint64_t v134 = v27;
  __chkstk_darwin(v27);
  double v125 = (char *)&v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  id v31 = (char *)&v95 - v30;
  uint64_t v32 = type metadata accessor for PageGrid();
  uint64_t v129 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  double v34 = (char *)&v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Shelf.PresentationHints();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v95 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v95 - v40;
  uint64_t v138 = v4;
  sub_100081D90((void *)(v4 + qword_100985D18), *(void *)(v4 + qword_100985D18 + 24));
  Class v42 = v139;
  uint64_t v43 = dispatch thunk of ShelfComponentTypeMappingProvider.componentType(for:asPartOf:)();
  if (!v43) {
    goto LABEL_8;
  }
  uint64_t v96 = v46;
  uint64_t v97 = v45;
  uint64_t v98 = v44;
  uint64_t v99 = v43;
  type metadata accessor for ProductReview();
  sub_10015B5C0(&qword_100983790, (void (*)(uint64_t))&type metadata accessor for ProductReview);
  ItemLayoutContext.typedModel<A>(as:)();
  uint64_t v47 = v143;
  if (!(void)v143) {
    goto LABEL_8;
  }
  type metadata accessor for ObjectGraph();
  uint64_t v48 = swift_dynamicCastClass();
  if (!v48)
  {
    swift_release();
LABEL_8:
    type metadata accessor for SelectionHandlerCollectionElementsObserver();
    uint64_t v56 = (uint64_t (*)(uint64_t, Class, uint64_t, uint64_t))method lookup function for SelectionHandlerCollectionElementsObserver();
    return v56(v136, v42, v137, v140);
  }
  uint64_t v95 = v48;
  uint64_t v100 = v47;
  swift_getKeyPath();
  swift_retain();
  ItemLayoutContext.subscript.getter();
  swift_release();
  static Shelf.PresentationHints.isSeeAllContext.getter();
  sub_10015B5C0((unint64_t *)&unk_100982850, (void (*)(uint64_t))&type metadata accessor for Shelf.PresentationHints);
  char v49 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v36 + 8);
  v50(v38, v35);
  v50(v41, v35);
  if (v49)
  {
    swift_getKeyPath();
    ItemLayoutContext.subscript.getter();
    swift_release();
    PageGrid.columnCount.getter();
    double v52 = v51;
    (*(void (**)(char *, uint64_t))(v129 + 8))(v34, v32);
    uint64_t v53 = v134;
    uint64_t v54 = v135;
    uint64_t v55 = v133;
    if (v52 <= 1.0) {
      goto LABEL_16;
    }
  }
  else
  {
    ProductReview.source.getter();
    uint64_t v55 = v133;
    uint64_t v53 = v134;
    int v58 = (*(uint64_t (**)(char *, uint64_t))(v133 + 88))(v31, v134);
    uint64_t v54 = v135;
    if (v58 == enum case for ProductReview.ReviewSource.editorsChoice(_:))
    {
      (*(void (**)(char *, uint64_t))(v55 + 96))(v31, v53);
      swift_release();
      uint64_t v59 = type metadata accessor for Feature.iOS();
      *((void *)&v144 + 1) = v59;
      uint64_t v145 = sub_10015B5C0((unint64_t *)&qword_10098A9B0, (void (*)(uint64_t))&type metadata accessor for Feature.iOS);
      Swift::String v60 = sub_1000808B8((uint64_t *)&v143);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v59 - 8) + 104))(v60, enum case for Feature.iOS.review_summarization(_:), v59);
      LOBYTE(v59) = isFeatureEnabled(_:)();
      _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v143);
      if (v59) {
        goto LABEL_16;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v53);
    }
    swift_getKeyPath();
    ItemLayoutContext.subscript.getter();
    swift_release();
    uint64_t v61 = (void *)v143;
    char v62 = UITraitCollection.isSizeClassRegular.getter();

    if ((v62 & 1) == 0)
    {
LABEL_16:
      type metadata accessor for SelectionHandlerCollectionElementsObserver();
      uint64_t v69 = (void (*)(uint64_t, Class, uint64_t, uint64_t))method lookup function for SelectionHandlerCollectionElementsObserver();
      v69(v136, v42, v137, v95);
      swift_release();
      return swift_release();
    }
  }
  uint64_t v63 = v125;
  ProductReview.source.getter();
  int v64 = (*(uint64_t (**)(char *, uint64_t))(v55 + 88))(v63, v53);
  int v65 = enum case for ProductReview.ReviewSource.reviewSummary(_:);
  uint64_t v66 = v131;
  uint64_t v67 = (uint64_t)v132;
  uint64_t v68 = v130;
  if (v64 == enum case for ProductReview.ReviewSource.reviewSummary(_:))
  {
    (*(void (**)(char *, uint64_t))(v55 + 96))(v63, v53);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v63, v53);
  }
  ItemLayoutContext.withUpdatedLayoutOptions(_:)();
  uint64_t v70 = (uint64_t)v126;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v126, v54, v66);
  uint64_t v71 = v68;
  uint64_t v72 = sub_1000773C0(v95, 0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000011, 0x8000000100809220);
  Class v139 = (Class)type metadata accessor for ProductPageReviewsOverflowViewController();
  id v73 = objc_allocWithZone(v139);
  id v74 = sub_1001FAE1C(v70, v99, v98, v97, v96, v72, v64 == v65);
  swift_release();
  id v75 = sub_100159F6C();
  uint64_t v76 = (uint64_t)v127;
  ItemLayoutContext.indexPath.getter();
  uint64_t v77 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v76, 0, 1, v77);
  uint64_t v78 = (uint64_t)&v75[OBJC_IVAR____TtC8AppStore34ComponentViewOverflowTransitioning_selectedIndexPath];
  swift_beginAccess();
  sub_10015B558(v76, v78);
  swift_endAccess();
  v75[OBJC_IVAR____TtC8AppStore34ComponentViewOverflowTransitioning_isTransitioningFromContainer] = 1;
  [v74 setTransitioningDelegate:v75];
  [v74 setModalPresentationStyle:4];
  ObjectGraph.actionDispatcher.getter();
  uint64_t v79 = sub_100082C28((uint64_t *)&unk_100984530);
  uint64_t v80 = *(void *)(v79 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v67, 1, v79) == 1)
  {
    (*(void (**)(char *, uint64_t))(v71 + 8))(v54, v66);

    swift_release();
    swift_release();
    return sub_1000B59E0(v67);
  }
  else
  {
    uint64_t v145 = 0;
    long long v143 = 0u;
    long long v144 = 0u;
    (*(void (**)(char *, void, uint64_t))(v101 + 104))(v128, enum case for FlowPage.viewController(_:), v102);
    uint64_t v81 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v103, 1, 1, v81);
    uint64_t v82 = type metadata accessor for ReferrerData();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v106, 1, 1, v82);
    Class v142 = v139;
    id v141 = v74;
    Class v139 = (Class)v74;
    static ActionMetrics.notInstrumented.getter();
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v110, enum case for FlowPresentationContext.infer(_:), v105);
    unsigned int v83 = *(void (**)(char *, void, uint64_t))(v108 + 104);
    uint64_t v137 = v79;
    v83(v113, enum case for FlowAnimationBehavior.infer(_:), v109);
    (*(void (**)(char *, void, uint64_t))(v111 + 104))(v114, enum case for FlowOrigin.inapp(_:), v112);
    static FlowActionPresentation.stackPush.getter();
    uint64_t v138 = v80;
    uint64_t v84 = type metadata accessor for FlowAction();
    swift_allocObject();
    uint64_t v85 = FlowAction.init(id:title:artwork:page:url:referrerUrl:referrerData:pageData:actionMetrics:presentationContext:animationBehavior:origin:presentationStyle:presentation:)();
    *((void *)&v144 + 1) = v84;
    uint64_t v145 = sub_10015B5C0((unint64_t *)&qword_100993960, (void (*)(uint64_t))&type metadata accessor for FlowAction);
    *(void *)&long long v143 = v85;
    swift_retain();
    long long v86 = v116;
    uint64_t v87 = v132;
    sub_1005365D0();
    uint64_t v88 = v118;
    uint64_t v89 = v121;
    (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v115, v86, v121);
    uint64_t v90 = v119;
    Dependency.init<A>(satisfying:with:)();
    dispatch thunk of BaseObjectGraph.adding(dependency:)();
    (*(void (**)(char *, uint64_t))(v123 + 8))(v90, v124);
    uint64_t v91 = v117;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v117, v86, v89);
    uint64_t v92 = v120;
    uint64_t v93 = v122;
    (*(void (**)(char *, void, uint64_t))(v120 + 104))(v91, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v122);
    uint64_t v94 = v137;
    ActionDispatcher.perform(_:withMetrics:asPartOf:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)&v143);

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v135, v131);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v87, v94);
  }
}

uint64_t sub_10015B320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ComponentLayoutOptions();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - v9;
  static ComponentLayoutOptions.overflowed.getter();
  sub_1001793C8(v10, (uint64_t)v7);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  v11(v10, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
}

void sub_10015B458()
{
}

void sub_10015B488()
{
  swift_unknownObjectWeakDestroy();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v0 + qword_100985D18);
  uint64_t v1 = *(void **)(v0 + qword_100985D20);
}

uint64_t sub_10015B4D8()
{
  uint64_t v0 = SelectionHandlerCollectionElementsObserver.deinit();
  swift_unknownObjectWeakDestroy();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0(v0 + qword_100985D18);

  return swift_deallocClassInstance();
}

uint64_t sub_10015B548()
{
  return type metadata accessor for ProductReviewSelectionHandlerCollectionElementsObserver();
}

uint64_t sub_10015B558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_10098ABB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015B5C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10015B60C(char *a1, char a2, void *a3)
{
  [a1 setNeedsLayout];
  if (a2)
  {
    return [a1 layoutIfNeeded];
  }
  else
  {
    v8.id receiver = a1;
    v8.super_class = (Class)type metadata accessor for OfferButton();
    [super invalidateIntrinsicContentSize];
    uint64_t v7 = &a1[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize];
    *(void *)uint64_t v7 = 0;
    *((void *)v7 + 1) = 0;
    v7[16] = 1;
    [a3 setNeedsLayout];
    return [a3 layoutIfNeeded];
  }
}

id sub_10015BA44(void *a1, uint64_t a2, SEL *a3)
{
  v5.id receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  return [super *a3];
}

uint64_t sub_10015BB0C(char a1)
{
  swift_getObjectType();
  LODWORD(v3) = 1057971241;
  if (a1)
  {
    *(float *)&double v3 = 1.0;
    double v4 = 1.0;
  }
  else
  {
    double v4 = 0.25;
  }
  if (a1) {
    double v5 = 1.0;
  }
  else {
    double v5 = 0.56;
  }
  [*(id *)(v1 + OBJC_IVAR____TtC8AppStore11OfferButton_outlineShape) setOpacity:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC8AppStore11OfferButton_imageView) setAlpha:v4];
  [*(id *)(v1 + OBJC_IVAR____TtC8AppStore11OfferButton_label) setAlpha:v5];
  uint64_t v6 = v1 + OBJC_IVAR____TtC8AppStore11OfferButton__configuration;
  swift_beginAccess();
  sub_100082C6C(v6, (uint64_t)v8);
  sub_100081D90(v8, v8[3]);
  sub_100055230();
  dispatch thunk of OfferButtonConfiguration.reapply<A>(colorsTo:)();
  return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v8);
}

id sub_10015BC5C()
{
  id v1 = [v0 tintColor];

  return v1;
}

id sub_10015BC94()
{
  return [v0 overrideUserInterfaceStyle];
}

id sub_10015BCA4(uint64_t a1)
{
  return [v1 setOverrideUserInterfaceStyle:a1];
}

id (*sub_10015BCB8(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = [v1 overrideUserInterfaceStyle];
  return sub_10015BD0C;
}

id sub_10015BD0C(uint64_t a1)
{
  return [*(id *)(a1 + 8) setOverrideUserInterfaceStyle:*(void *)a1];
}

uint64_t sub_10015BD20(void *a1)
{
  id v2 = [a1 traitCollection];
  int v3 = UITraitCollection.prefersAccessibilityLayouts.getter() & 1;

  uint64_t result = UITraitCollection.prefersAccessibilityLayouts.getter();
  if (v3 != (result & 1))
  {
    uint64_t v5 = (uint64_t)a1 + OBJC_IVAR____TtC8AppStore11OfferButton_presenter;
    uint64_t result = swift_beginAccess();
    if (*(void *)(v5 + 24))
    {
      sub_100082C6C(v5, (uint64_t)v6);
      sub_100081D90(v6, v6[3]);
      dispatch thunk of OfferButtonPresenter.update(ignoringCache:)();
      return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v6);
    }
  }
  return result;
}

void sub_10015BDEC()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v31 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC8AppStore11OfferButton_effectShape;
  *(void *)&v1[v8] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v9 = OBJC_IVAR____TtC8AppStore11OfferButton_outlineShape;
  *(void *)&v1[v9] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v10 = OBJC_IVAR____TtC8AppStore11OfferButton_imageView;
  *(void *)&v1[v10] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v28 = OBJC_IVAR____TtC8AppStore11OfferButton_label;
  if (qword_10097F560 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for FontUseCase();
  uint64_t v12 = sub_100087728(v11, (uint64_t)qword_1009E4A78);
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v27(v7, v12, v11);
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  v26(v7, 0, 1, v11);
  uint64_t v14 = enum case for DirectionalTextAlignment.none(_:);
  uint64_t v15 = v3 + 104;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  uint64_t v29 = v15;
  uint64_t v30 = v2;
  v16(v31, enum case for DirectionalTextAlignment.none(_:), v2);
  uint64_t v17 = (objc_class *)type metadata accessor for DynamicTypeLabel();
  id v18 = objc_allocWithZone(v17);
  *(void *)&v1[v28] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  uint64_t v19 = OBJC_IVAR____TtC8AppStore11OfferButton_subtitleLabel;
  if (qword_10097F570 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100087728(v11, (uint64_t)qword_1009E4AA8);
  v27(v7, v20, v11);
  v26(v7, 0, 1, v11);
  static OfferButtonStyling.maxNumberOfLinesForSubtitle.getter();
  v16(v31, v14, v30);
  id v21 = objc_allocWithZone(v17);
  *(void *)&v1[v19] = DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
  uint64_t v22 = &v1[OBJC_IVAR____TtC8AppStore11OfferButton_presenter];
  *((void *)v22 + 4) = 0;
  *(_OWORD *)uint64_t v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  swift_weakInit();
  swift_unknownObjectWeakInit();
  uint64_t v23 = &v1[OBJC_IVAR____TtC8AppStore11OfferButton_isEnabledObserver];
  *uint64_t v23 = 0u;
  v23[1] = 0u;
  v1[OBJC_IVAR____TtC8AppStore11OfferButton_isConfigurationLayoutEnabled] = 1;
  uint64_t v24 = (uint64_t *)&v1[OBJC_IVAR____TtC8AppStore11OfferButton__configuration];
  void v24[3] = type metadata accessor for EmptyConfiguration();
  void v24[4] = (uint64_t)&protocol witness table for EmptyConfiguration;
  sub_1000808B8(v24);
  EmptyConfiguration.init()();
  uint64_t v25 = &v1[OBJC_IVAR____TtC8AppStore11OfferButton_cachedIntrinsicContentSize];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v25[16] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10015C24C()
{
  uint64_t v1 = type metadata accessor for OfferButtonMetrics();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10015C318()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10015C328()
{
  uint64_t v0 = type metadata accessor for AspectRatio();
  sub_100042444(v0, qword_1009E1528);
  sub_100087728(v0, (uint64_t)qword_1009E1528);
  return AspectRatio.init(_:_:)();
}

uint64_t sub_10015C37C()
{
  uint64_t v0 = sub_100082C28(&qword_100985E68);
  __chkstk_darwin(v0 - 8);
  uint64_t v20 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for FontSource();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AspectRatio();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BrickLayout.Metrics();
  sub_100042444(v10, qword_1009E1540);
  void v19[2] = sub_100087728(v10, (uint64_t)qword_1009E1540);
  if (qword_10097E1E8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100087728(v6, (uint64_t)qword_1009E1528);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  v19[1] = v9;
  if (qword_10097F720 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for FontUseCase();
  v19[0] = sub_100087728(v12, (uint64_t)qword_1009E4FB8);
  uint64_t v13 = *(void (**)(char *, void, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v5, v19[0], v12);
  uint64_t v14 = enum case for FontSource.useCase(_:);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v15(v5, enum case for FontSource.useCase(_:), v2);
  v22[3] = type metadata accessor for StaticDimension();
  void v22[4] = (uint64_t)&protocol witness table for StaticDimension;
  sub_1000808B8(v22);
  v21[3] = v2;
  void v21[4] = (uint64_t)&protocol witness table for FontSource;
  uint64_t v16 = sub_1000808B8(v21);
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v16, v5, v2);
  StaticDimension.init(_:scaledLike:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v17 = v20;
  v13(v20, v19[0], v12);
  v15(v17, v14, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v17, 0, 1, v2);
  return BrickLayout.Metrics.init(artworkAspectRatio:labelSpace:labelFontSource:isLabelFullWidth:numberOfLines:)();
}

uint64_t sub_10015C71C()
{
  uint64_t v0 = sub_100082C28(&qword_100985E68);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AspectRatio();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BrickLayout.Metrics();
  sub_100042444(v7, qword_1009E1558);
  sub_100087728(v7, (uint64_t)qword_1009E1558);
  if (qword_10097E1E8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100087728(v3, (uint64_t)qword_1009E1528);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  uint64_t v9 = type metadata accessor for FontSource();
  memset(v11, 0, sizeof(v11));
  uint64_t v12 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  return BrickLayout.Metrics.init(artworkAspectRatio:labelSpace:labelFontSource:isLabelFullWidth:numberOfLines:)();
}

char *sub_10015C900(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_itemLayoutContext];
  uint64_t v11 = type metadata accessor for ItemLayoutContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabel] = 0;
  uint64_t v12 = &v4[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText];
  type metadata accessor for ArtworkView();
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = v4;
  *(void *)&v13[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView] = static ArtworkView.brickArtworkView.getter();

  v19.id receiver = v13;
  v19.super_class = ObjectType;
  uint64_t v14 = (char *)[super initWithFrame:a1, a2, a3, a4];
  id v15 = [v14 contentView];
  [v15 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];

  id v16 = [v14 contentView];
  id v17 = *(id *)&v14[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView];
  [v16 addSubview:v17];

  return v14;
}

id sub_10015CB9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DirectionalTextAlignment();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100082C28(&qword_100984B10);
  *(void *)&double v7 = __chkstk_darwin(v6 - 8).n128_u64[0];
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText + 8];
  if (v10)
  {
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabelText] & 0xFFFFFFFFFFFFLL;
    }
    if (v11)
    {
      uint64_t v12 = OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabel;
      uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabel];
      if (v13)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v16 = qword_10097F720;
        swift_bridgeObjectRetain();
        if (v16 != -1) {
          swift_once();
        }
        uint64_t v17 = type metadata accessor for FontUseCase();
        uint64_t v18 = sub_100087728(v17, (uint64_t)qword_1009E4FB8);
        uint64_t v19 = *(void *)(v17 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v9, v18, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v9, 0, 1, v17);
        (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DirectionalTextAlignment.none(_:), v2);
        id v20 = objc_allocWithZone((Class)type metadata accessor for DynamicTypeLabel());
        id v21 = (void *)DynamicTypeLabel.init(useCase:numberOfLines:lineBreakMode:isUserInteractionEnabled:directionalTextAlignment:contentSizeCategoryMapping:)();
        sub_10015D86C(v21);

        uint64_t v13 = *(void **)&v1[v12];
        if (!v13) {
          goto LABEL_17;
        }
      }
      [v13 setHidden:0];
      uint64_t v22 = *(void **)&v1[v12];
      if (v22)
      {
        id v23 = v22;
        NSString v24 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v23 setText:v24];

        return [v1 setNeedsLayout];
      }
LABEL_17:
      swift_bridgeObjectRelease();
      return [v1 setNeedsLayout];
    }
  }
  uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabel];
  if (v14) {
    [v14 setHidden:1 v7];
  }

  return [v1 setNeedsLayout:v7];
}

uint64_t sub_10015CEE8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for LayoutRect();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BrickLayout.Metrics();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v31 = type metadata accessor for BrickLayout();
  uint64_t v13 = *(void *)(v31 - 8);
  *(void *)&double v14 = __chkstk_darwin(v31).n128_u64[0];
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40.id receiver = v1;
  v40.super_class = ObjectType;
  [super layoutSubviews:v14];
  uint64_t v17 = OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabel;
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabel];
  if (!v18) {
    goto LABEL_4;
  }
  id v19 = v18;
  if ([v19 isHidden])
  {

LABEL_4:
    if (qword_10097E1F8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_100087728(v6, (uint64_t)qword_1009E1558);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v6);
    id v21 = *(void **)&v1[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView];
    uint64_t v38 = type metadata accessor for ArtworkView();
    uint64_t v39 = &protocol witness table for UIView;
    uint64_t v37 = v21;
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    id v22 = v21;
    BrickLayout.init(metrics:artworkView:labelView:)();
    goto LABEL_13;
  }
  if (qword_10097E1F0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100087728(v6, (uint64_t)qword_1009E1540);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v23, v6);
  NSString v24 = *(void **)&v1[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView];
  uint64_t v38 = type metadata accessor for ArtworkView();
  uint64_t v39 = &protocol witness table for UIView;
  uint64_t v37 = v24;
  uint64_t v25 = *(void **)&v1[v17];
  if (v25)
  {
    *((void *)&v35 + 1) = type metadata accessor for DynamicTypeLabel();
    uint64_t v36 = &protocol witness table for UILabel;
    *(void *)&long long v34 = v25;
  }
  else
  {
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
  }
  id v26 = v24;
  id v27 = v25;
  BrickLayout.init(metrics:artworkView:labelView:)();

LABEL_13:
  id v28 = [v1 contentView];
  sub_10003A33C();
  LayoutMarginsAware<>.layoutFrame.getter();

  BrickLayout.placeChildren(relativeTo:in:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v31);
}

uint64_t sub_10015D43C()
{
  return type metadata accessor for BrickCollectionViewCell();
}

uint64_t type metadata accessor for BrickCollectionViewCell()
{
  uint64_t result = qword_100985E50;
  if (!qword_100985E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10015D490()
{
  sub_1000A1880();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

id sub_10015D540()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView);
}

double sub_10015D550()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AspectRatio();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10097E1E8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100087728(v2, (uint64_t)qword_1009E1528);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  id v7 = [v0 contentView];
  sub_10003A33C();
  LayoutMarginsAware<>.layoutFrame.getter();

  AspectRatio.height(fromWidth:)();
  id v8 = [v1 contentView];
  LayoutMarginsAware<>.layoutFrame.getter();
  double v10 = v9;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

void sub_10015D6FC()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_artworkView);
  ArtworkView.isImageHidden.setter();

  type metadata accessor for ArtworkView();
  sub_10015D824((unint64_t *)&qword_1009828D0, (void (*)(uint64_t))&type metadata accessor for ArtworkView);
  id v2 = v1;
  ArtworkLoader.forgetFetch<A>(forView:deprioritizingFetch:)();
}

uint64_t sub_10015D7CC(uint64_t a1)
{
  uint64_t result = sub_10015D824(&qword_100985E60, (void (*)(uint64_t))type metadata accessor for BrickCollectionViewCell);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10015D824(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10015D86C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabel;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8AppStore23BrickCollectionViewCell_shortDescriptionLabel];
  if (v4)
  {
    [v4 removeFromSuperview];
    uint64_t v5 = *(void **)&v1[v3];
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(void *)&v1[v3] = a1;
  id v6 = a1;

  id v7 = *(void **)&v1[v3];
  if (v7)
  {
    id v9 = v7;
    id v8 = [v1 contentView];
    [v8 addSubview:v9];

    [v1 setNeedsLayout];
  }
}

uint64_t type metadata accessor for TodayCardVideoView()
{
  uint64_t result = qword_100985E70;
  if (!qword_100985E70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10015D994()
{
  return swift_initClassMetadata2();
}

char *sub_10015D9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v15 = objc_allocWithZone(v7);
  return sub_10015DA64(a1, a2, a3, a4, a5, a6, a7);
}

char *sub_10015DA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v39 = a5;
  uint64_t v40 = a3;
  uint64_t v32 = a4;
  uint64_t v38 = a2;
  uint64_t v9 = sub_100082C28((uint64_t *)&unk_1009856B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  double v14 = (char *)&v32 - v13;
  uint64_t v15 = type metadata accessor for VideoConfiguration();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v7 + qword_1009E1588) = 7;
  *(unsigned char *)(v7 + qword_1009E1590) = 0;
  uint64_t v37 = a1;
  sub_10008A8F4(a1, (uint64_t)v42);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v35 = v19;
  v23(v22, v38, v19);
  NSString v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v25 = v32;
  uint64_t v36 = v15;
  v24(v18, v40, v15);
  sub_100082B68(v25, (uint64_t)v14, (uint64_t *)&unk_1009856B0);
  sub_100082B68(v39, (uint64_t)v11, (uint64_t *)&unk_1009856B0);
  uint64_t v26 = v33;
  sub_100082B68(v33, (uint64_t)v41, &qword_10099B240);
  id v27 = sub_10050AD18((uint64_t)v42, (uint64_t)v22, (uint64_t)v18, (uint64_t)v14, (uint64_t)v11, (uint64_t)v41, v34);
  id v28 = v27;
  int v29 = v27[qword_10099B120];
  v27[qword_10099B120] = 1;
  if (v29 == 1)
  {
    swift_release();
  }
  else
  {
    uint64_t v30 = v27;
    sub_1005045E4();
    swift_release();
  }
  sub_100082BCC(v26, &qword_10099B240);
  sub_100082BCC(v39, (uint64_t *)&unk_1009856B0);
  sub_100082BCC(v25, (uint64_t *)&unk_1009856B0);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v40, v36);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v38, v35);
  sub_1000E2D1C(v37);
  return v28;
}

void sub_10015DDA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = qword_1009E1588;
  int v3 = *(unsigned __int8 *)(v0 + qword_1009E1588);
  if (v3 == 4)
  {
    char v5 = *(unsigned char *)(v0 + qword_1009E1590);
    char v6 = *(unsigned char *)(v0 + qword_10099B120);
    *(unsigned char *)(v0 + qword_10099B120) = v5 ^ 1;
    if (v5 & 1) != 0 || (v6) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  if (v3 != 7)
  {
    *(unsigned char *)(v0 + qword_10099B120) = 0;
    goto LABEL_9;
  }
  char v4 = *(unsigned char *)(v0 + qword_10099B120);
  *(unsigned char *)(v0 + qword_10099B120) = 1;
  if ((v4 & 1) == 0) {
LABEL_7:
  }
    sub_1005045E4();
LABEL_9:
  uint64_t v7 = qword_10099B128;
  id v8 = *(void **)(v0 + qword_10099B128);
  if (v8)
  {
    id v9 = v8;
    char v10 = dispatch thunk of VideoPlayer.isPlaying.getter();

    if ((v10 & 1) != 0
      || (uint64_t v11 = *(void **)(v1 + v7)) != 0
      && (id v12 = v11,
          char v13 = dispatch thunk of VideoPlayer.shouldBePlaying.getter(),
          v12,
          (v13 & 1) != 0))
    {
      if ((*(unsigned char *)(v1 + qword_1009E1590) & 1) == 0)
      {
        int v14 = *(unsigned __int8 *)(v1 + v2);
        if (v14 == 7 || v14 == 4)
        {
          uint64_t v16 = *(void **)(v1 + v7);
          if (v16)
          {
            id v17 = v16;
            if (dispatch thunk of VideoPlayer.shouldBePlaying.getter()) {
              [v17 pause];
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10015DF24()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for VideoConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + qword_1009E5B30;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  LOBYTE(v6) = VideoConfiguration.allowsAutoPlay.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0 || (dispatch thunk of AutoPlayVideoSettingsManager.isAutoPlayEnabled.getter() & 1) == 0) {
    return 0;
  }
  int v7 = *(unsigned __int8 *)(v1 + qword_1009E1588);
  if (v7 == 7 || v7 == 4) {
    return *(unsigned __int8 *)(v1 + qword_1009E1590);
  }
  else {
    return 1;
  }
}

void sub_10015E084()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for VideoConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = qword_1009E1588;
  int v7 = *(unsigned __int8 *)(v0 + qword_1009E1588);
  if (v7 == 4)
  {
    char v9 = *(unsigned char *)(v0 + qword_1009E1590);
    char v10 = *(unsigned char *)(v0 + qword_10099B120);
    *(unsigned char *)(v0 + qword_10099B120) = v9 ^ 1;
    if (v9 & 1) != 0 || (v10) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  if (v7 != 7)
  {
    *(unsigned char *)(v0 + qword_10099B120) = 0;
    goto LABEL_9;
  }
  char v8 = *(unsigned char *)(v0 + qword_10099B120);
  *(unsigned char *)(v0 + qword_10099B120) = 1;
  if ((v8 & 1) == 0) {
LABEL_7:
  }
    sub_1005045E4();
LABEL_9:
  uint64_t v11 = qword_1009E1590;
  if (*(unsigned char *)(v0 + qword_1009E1590) == 1
    && (uint64_t v12 = v0 + qword_1009E5B30,
        swift_beginAccess(),
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2),
        LOBYTE(v12) = VideoConfiguration.allowsAutoPlay.getter(),
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2),
        (v12 & 1) != 0)
    && (dispatch thunk of AutoPlayVideoSettingsManager.isAutoPlayEnabled.getter() & 1) != 0
    && ((int v13 = *(unsigned __int8 *)(v1 + v6), v13 != 7) && v13 != 4 || *(unsigned char *)(v1 + v11) == 1))
  {
    sub_1005033D4();
  }
  else
  {
    uint64_t v14 = qword_10099B128;
    uint64_t v15 = *(void **)(v1 + qword_10099B128);
    if (v15)
    {
      id v16 = v15;
      char v17 = dispatch thunk of VideoPlayer.isPlaying.getter();

      if ((v17 & 1) != 0
        || (uint64_t v18 = *(void **)(v1 + v14)) != 0
        && (id v19 = v18,
            char v20 = dispatch thunk of VideoPlayer.shouldBePlaying.getter(),
            v19,
            (v20 & 1) != 0))
      {
        if ((*(unsigned char *)(v1 + v11) & 1) == 0)
        {
          int v21 = *(unsigned __int8 *)(v1 + v6);
          if (v21 == 7 || v21 == 4)
          {
            uint64_t v23 = *(void **)(v1 + v14);
            if (v23)
            {
              id v24 = v23;
              if (dispatch thunk of VideoPlayer.shouldBePlaying.getter()) {
                [v24 pause];
              }
            }
          }
        }
      }
    }
  }
}

void sub_10015E30C()
{
  int v1 = *(unsigned __int8 *)(v0 + qword_1009E1588);
  BOOL v2 = v1 == 7 || v1 == 4;
  if (!v2 || *(unsigned char *)(v0 + qword_1009E1590) == 1) {
    sub_1005033D4();
  }
}

uint64_t sub_10015E340()
{
  return type metadata accessor for TodayCardVideoView();
}

double sub_10015E348(uint64_t *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_10015E444(a2, *a1, a4, a6, a7);
}

void sub_10015E35C()
{
}

uint64_t sub_10015E36C()
{
  return sub_10015E3FC(&qword_100985EC0, (void (*)(uint64_t))&type metadata accessor for HorizontalRule);
}

uint64_t sub_10015E3B4()
{
  return sub_10015E3FC(&qword_1009A9C80, (void (*)(uint64_t))&type metadata accessor for NilState);
}

uint64_t sub_10015E3FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_10015E444(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = type metadata accessor for HorizontalRule.Style();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((HorizontalRule.isFullWidth.getter() & 1) == 0)
  {
    [a5 pageMarginInsets];
    a1 = a1 - v11 - v12;
  }
  HorizontalRule.style.getter();
  id v13 = [a5 traitCollection];
  HorizontalRule.Style.lineThickness(traitCollection:)();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return a1;
}

void sub_10015E57C()
{
  int v1 = v0;
  uint64_t v2 = type metadata accessor for HorizontalRule.Style();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  HorizontalRule.style.getter();
  sub_100769FF8((uint64_t)v5);
  uint64_t v6 = (void *)HorizontalRule.color.getter();
  uint64_t v7 = OBJC_IVAR____TtC8AppStore32HorizontalRuleCollectionViewCell_lineColor;
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC8AppStore32HorizontalRuleCollectionViewCell_lineColor];
  *(void *)&v1[OBJC_IVAR____TtC8AppStore32HorizontalRuleCollectionViewCell_lineColor] = v6;
  id v9 = v6;

  char v10 = &v1[OBJC_IVAR____TtC8AppStore32HorizontalRuleCollectionViewCell_style];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v10, v2);
  v11.super.super.Class isa = *(Class *)&v1[OBJC_IVAR____TtC8AppStore32HorizontalRuleCollectionViewCell_lineLayer];
  double v12 = (CGColor *)[*(id *)&v1[v7] CGColor];
  id v13 = [v1 traitCollection];
  HorizontalRule.Style.applyStyle(to:lineColor:traitCollection:)(v11, v12, (UITraitCollection)v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  [v1 setNeedsDisplay];
}

void sub_10015E74C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_100082C28(&qword_100984B10);
  __chkstk_darwin(v9 - 8);
  CAShapeLayer v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupDataSource] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_objectGraph] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupCollectionView] = 0;
  swift_weakInit();
  double v12 = &v4[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsUpdateBlock];
  *(void *)double v12 = 0;
  *((void *)v12 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsCoordinator] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsScrollObserver] = 0;
  uint64_t v13 = OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_compoundScrollObserver;
  id v14 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver());
  uint64_t v15 = v4;
  *(void *)&v4[v13] = CompoundScrollObserver.init(children:)();
  id v16 = &v15[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_listConfiguration];
  *id v16 = 0;
  *((void *)v16 + 1) = 1;
  id v17 = [objc_allocWithZone((Class)type metadata accessor for ImageHeadingView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v18 = OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_iconHeadingView;
  *(void *)&v15[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_iconHeadingView] = v17;
  uint64_t v19 = qword_10097E200;
  char v20 = (char *)v17;
  if (v19 != -1) {
    swift_once();
  }
  int v21 = *(void **)&v20[OBJC_IVAR____TtC8AppStore16ImageHeadingView_imageView];
  id v22 = (id)qword_100985F10;
  id v23 = [v21 image];
  if (!v23) {
    goto LABEL_5;
  }
  id v24 = v23;
  sub_100084CF0(0, (unint64_t *)&qword_1009860A0);
  id v25 = v22;
  id v26 = v24;
  LOBYTE(v24) = static NSObject.== infix(_:_:)();

  if ((v24 & 1) == 0)
  {
LABEL_5:
    [v21 setImage:v22];
    [v20 setNeedsLayout];
  }

  if (qword_10097E208 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for FontUseCase();
  uint64_t v28 = sub_100087728(v27, (uint64_t)qword_100985F18);
  uint64_t v29 = *(void *)(v27 - 8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v30(v11, v28, v27);
  uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56);
  v31(v11, 0, 1, v27);
  sub_1006E7ABC((uint64_t)v11);
  uint64_t v32 = *(void **)&v15[v18];
  if (qword_10097E210 != -1) {
    swift_once();
  }
  sub_100162080((uint64_t)&qword_100985F30, (uint64_t)v69);
  uint64_t v33 = (uint64_t)v32 + OBJC_IVAR____TtC8AppStore16ImageHeadingView_metrics;
  swift_beginAccess();
  sub_1001620DC((uint64_t)v69, v33);
  swift_endAccess();
  [v32 setNeedsLayout];
  sub_100162138((uint64_t)v69);
  [*(id *)(*(void *)&v15[v18] + OBJC_IVAR____TtC8AppStore16ImageHeadingView_headingLabel) setNumberOfLines:1];
  id v34 = [objc_allocWithZone((Class)type metadata accessor for SearchHeadingView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v35 = OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_titleHeadingView;
  *(void *)&v15[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_titleHeadingView] = v34;
  if (qword_10097E218 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_100087728(v27, (uint64_t)qword_100985F58);
  v30(v11, v36, v27);
  v31(v11, 0, 1, v27);
  sub_1004687E4((uint64_t)v11);
  uint64_t v37 = *(char **)&v15[v35];
  uint64_t v38 = *(void **)&v37[OBJC_IVAR____TtC8AppStore17SearchHeadingView_headingLabel];
  uint64_t v39 = v37;
  [v38 setNumberOfLines:2];

  uint64_t v40 = (objc_class *)type metadata accessor for SearchLockupListCollectionViewCell();
  v68.id receiver = v15;
  v68.super_class = v40;
  uint64_t v41 = (char *)[super initWithFrame:a1, a2, a3, a4];
  id v42 = sub_10015FF58();
  id v43 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v42 collectionViewLayout:a1, a2, a3, a4];

  uint64_t v44 = OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupCollectionView;
  uint64_t v45 = *(void **)&v41[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupCollectionView];
  *(void *)&v41[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupCollectionView] = v43;

  uint64_t v46 = *(void **)&v41[v44];
  if (!v46)
  {
    __break(1u);
    goto LABEL_20;
  }
  type metadata accessor for NestedCollectionViewImpressionsCoordinator();
  swift_allocObject();
  id v47 = v46;
  *(void *)&v41[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsCoordinator] = NestedCollectionViewImpressionsCoordinator.init(collectionView:)();
  swift_release();
  id v48 = [v41 contentView];
  [v48 addSubview:*(void *)&v41[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_iconHeadingView]];

  id v49 = [v41 contentView];
  [v49 addSubview:*(void *)&v41[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_titleHeadingView]];

  uint64_t v50 = *(void **)&v41[v44];
  if (!v50)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  [v50 setDelegate:v41];
  double v51 = *(void **)&v41[v44];
  if (!v51)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  double v52 = self;
  id v53 = v51;
  id v54 = [v52 clearColor];
  [v53 setBackgroundColor:v54];

  uint64_t v55 = *(void **)&v41[v44];
  if (!v55)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  type metadata accessor for SmallSearchLockupCollectionViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v57 = v55;
  static UICollectionReusableView.defaultReuseIdentifier.getter();
  NSString v58 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v57 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v58];

  uint64_t v59 = *(void **)&v41[v44];
  if (!v59)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  type metadata accessor for SeparatorSpacerReusableView();
  uint64_t v60 = swift_getObjCClassFromMetadata();
  id v61 = v59;
  static UICollectionReusableView.defaultReuseIdentifier.getter();
  NSString v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  static UICollectionReusableView.defaultReuseIdentifier.getter();
  NSString v63 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v61 registerClass:v60 forSupplementaryViewOfKind:v62 withReuseIdentifier:v63];

  id v64 = [v41 contentView];
  int v65 = *(void **)&v41[v44];
  if (v65)
  {
    uint64_t v66 = v64;
    id v67 = v65;
    [v66 addSubview:v67];

    return;
  }
LABEL_24:
  __break(1u);
}

void (*sub_10015EF3C(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsCalculator;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_10015EFC0;
}

void sub_10015EFC0(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    uint64_t v4 = v3[4];
    swift_endAccess();
    swift_release();
    if (!*(void *)(v4 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsCoordinator))
    {
      __break(1u);
      return;
    }
    swift_weakLoadStrong();
    swift_retain();
    dispatch thunk of NestedCollectionViewImpressionsCoordinator.impressionsCalculator.setter();
    swift_release();
    if (swift_weakLoadStrong())
    {
      uint64_t v5 = v3[4];
      type metadata accessor for ImpressionsScrollObserver();
      swift_allocObject();
      swift_retain();
      *(void *)(v5 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsScrollObserver) = ImpressionsScrollObserver.init(_:)();
      swift_release();
      swift_release();
    }
  }

  free(v3);
}

uint64_t sub_10015F0DC()
{
  uint64_t v0 = type metadata accessor for SystemImage();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, enum case for SystemImage.appstore(_:), v0, v2);
  uint64_t v5 = static SystemImage.load(_:with:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  qword_100985F10 = v5;
  return result;
}

id sub_10015F1D4(uint64_t a1)
{
  return sub_10015F224(a1, qword_100985F18, (id *)&UIFontTextStyleCaption2);
}

void sub_10015F1E8()
{
  qword_100985F48 = (uint64_t)&type metadata for CGFloat;
  unk_100985F50 = &protocol witness table for CGFloat;
  qword_100985F30 = 0x4008000000000000;
}

id sub_10015F210(uint64_t a1)
{
  return sub_10015F224(a1, qword_100985F58, (id *)&UIFontTextStyleTitle3);
}

id sub_10015F224(uint64_t a1, uint64_t *a2, id *a3)
{
  uint64_t v5 = type metadata accessor for FontUseCase();
  sub_100042444(v5, a2);
  uint64_t v6 = sub_100087728(v5, (uint64_t)a2);
  id v8 = *a3;
  *(void *)uint64_t v6 = *a3;
  *(UIFontWeight *)(v6 + 8) = UIFontWeightSemibold;
  (*(void (**)(void))(*(void *)(v5 - 8) + 104))();

  return v8;
}

uint64_t sub_10015F2E0()
{
  uint64_t v0 = type metadata accessor for FontUseCase();
  sub_100042444(v0, qword_100985F70);
  uint64_t v1 = sub_100087728(v0, (uint64_t)qword_100985F70);
  if (qword_10097F148 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100087728(v0, (uint64_t)qword_1009E3E48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10015F3A8()
{
  uint64_t v0 = type metadata accessor for FontSource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = &type metadata for CGFloat;
  uint64_t v15 = &protocol witness table for CGFloat;
  *(void *)&long long v13 = 0x4010000000000000;
  if (qword_10097E220 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for FontUseCase();
  uint64_t v5 = sub_100087728(v4, (uint64_t)qword_100985F70);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, v5, v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for FontSource.useCase(_:), v0);
  uint64_t v11 = type metadata accessor for StaticDimension();
  double v12 = &protocol witness table for StaticDimension;
  sub_1000808B8((uint64_t *)&v10);
  _OWORD v9[3] = v0;
  long long v9[4] = (uint64_t)&protocol witness table for FontSource;
  uint64_t v6 = sub_1000808B8(v9);
  (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v6, v3, v0);
  StaticDimension.init(_:scaledLike:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100081DD4(&v13, (uint64_t)&unk_100985F88);
  return sub_100081DD4(&v10, (uint64_t)&unk_100985FB0);
}

BOOL sub_10015F5A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
}

id sub_10015F5D0(id result, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_listConfiguration];
  if (((result ^ v2[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_listConfiguration]) & 1) == 0
    && *((void *)v3 + 1) == a2)
  {
    return result;
  }
  int v4 = result & 1;
  char *v3 = result & 1;
  *((void *)v3 + 1) = a2;
  uint64_t v5 = OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupCollectionView;
  uint64_t result = *(id *)&v2[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupCollectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v6 = [result collectionViewLayout];
  [v6 invalidateLayout];

  uint64_t result = *(id *)&v2[v5];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  [result setScrollEnabled:v4 == 0];

  return [v2 setNeedsLayout];
}

void sub_10015F6AC()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = type metadata accessor for LayoutRect();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (objc_class *)type metadata accessor for SearchLockupListCollectionViewCell();
  v25.id receiver = v0;
  v25.super_class = v6;
  [super layoutSubviews];
  id v7 = [v0 contentView];
  [v7 bounds];
  v20[1] = v8;
  v20[0] = v9;

  id v10 = [v1 contentView];
  [v10 layoutMargins];

  uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_listConfiguration + 8];
  if (qword_100980610 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for SmallLockupLayout.Metrics();
  uint64_t v13 = sub_100087728(v12, (uint64_t)qword_1009E7358);
  id v14 = [v1 traitCollection];
  sub_100709D3C(v13);

  if (qword_10097E230 == -1)
  {
    if (!__OFSUB__(v11, 1)) {
      goto LABEL_5;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  swift_once();
  if (__OFSUB__(v11, 1)) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_iconHeadingView];
  uint64_t v23[3] = type metadata accessor for ImageHeadingView();
  void v23[4] = &protocol witness table for UIView;
  v23[0] = v15;
  id v16 = *(void **)&v1[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_titleHeadingView];
  uint64_t v17 = type metadata accessor for SearchHeadingView();
  void v22[4] = &protocol witness table for UIView;
  v22[3] = v17;
  v22[0] = v16;
  if (*(void *)&v1[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupCollectionView])
  {
    v24[0] = *(void *)&v1[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupCollectionView];
    sub_100084CF0(0, (unint64_t *)&qword_100986090);
    id v18 = v15;
    id v19 = v16;
    LayoutView.withMeasurements(representing:)();
    sub_10015FA7C((uint64_t)v23, (uint64_t)v22, (uint64_t)v21, v24);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v21);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v22);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v23);
    sub_100081D90(v24, v24[3]);
    dispatch thunk of Layout.placeChildren(relativeTo:in:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v24);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_10015FA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v6 = type metadata accessor for FontSource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SearchLockupListLayout.Metrics();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v16 = (char *)&v23 - v15;
  void v29[3] = type metadata accessor for ZeroDimension();
  v29[4] = (uint64_t)&protocol witness table for ZeroDimension;
  sub_1000808B8(v29);
  static ZeroDimension.zero.getter();
  if (qword_10097E218 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for FontUseCase();
  uint64_t v18 = sub_100087728(v17, (uint64_t)qword_100985F58);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v9, v18, v17);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for FontSource.useCase(_:), v6);
  void v28[3] = type metadata accessor for StaticDimension();
  v28[4] = (uint64_t)&protocol witness table for StaticDimension;
  sub_1000808B8(v28);
  id v26 = (void *)v6;
  uint64_t v27 = &protocol witness table for FontSource;
  id v19 = sub_1000808B8(v25);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v19, v9, v6);
  StaticDimension.init(_:scaledLike:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v26 = &type metadata for CGFloat;
  uint64_t v27 = &protocol witness table for CGFloat;
  v25[0] = 0x4030000000000000;
  SearchLockupListLayout.Metrics.init(headingLeadingSpace:titleLeadingSpace:lockupCollectionViewTopSpace:layoutMargins:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  sub_100082C6C(a1, (uint64_t)v29);
  sub_100082C6C(v23, (uint64_t)v28);
  sub_100082C6C(v24, (uint64_t)v25);
  uint64_t v20 = type metadata accessor for SearchLockupListLayout();
  swift_allocObject();
  uint64_t v21 = SearchLockupListLayout.init(metrics:iconHeadingView:titleHeadingView:lockupCollectionView:)();
  a4[3] = v20;
  a4[4] = sub_100162038((unint64_t *)&unk_10098ABD0, (void (*)(uint64_t))&type metadata accessor for SearchLockupListLayout);
  a4[5] = sub_100162038((unint64_t *)&unk_100986070, (void (*)(uint64_t))&type metadata accessor for SearchLockupListLayout);
  *a4 = v21;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
}

void sub_10015FF38()
{
  qword_100985FD8 = 0x4030000000000000;
}

void sub_10015FF48()
{
  qword_100985FE0 = 0x4020000000000000;
}

id sub_10015FF58()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = ObjectType;
  id v3 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v7[4] = sub_10016122C;
  v7[5] = v2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = sub_10004DF80;
  v7[3] = &unk_1008BE128;
  uint64_t v4 = _Block_copy(v7);
  swift_retain();
  id v5 = [v3 initWithSectionProvider:v4];
  _Block_release(v4);
  swift_release();
  swift_release();
  return v5;
}

id sub_100160084(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  char v4 = Strong[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_listConfiguration];
  uint64_t v5 = *(void *)&Strong[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_listConfiguration + 8];

  swift_beginAccess();
  uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  id v8 = [v6 contentView];

  if (!v8) {
    return 0;
  }
  [v8 layoutMargins];
  id v11 = sub_100161234(v4, v5, a2, v9, v10);
  if (v11)
  {
    uint64_t v12 = swift_allocObject();
    swift_beginAccess();
    uint64_t v13 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();
    id v14 = v11;

    aBlock[4] = sub_100161768;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10043587C;
    aBlock[3] = &unk_1008BE150;
    uint64_t v15 = _Block_copy(aBlock);
    swift_release();
    [v14 setVisibleItemsInvalidationHandler:v15];

    _Block_release(v15);
    id v8 = v14;
  }

  return v11;
}

void sub_100160260()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsScrollObserver);
    swift_retain();

    if (v2)
    {
      type metadata accessor for ImpressionsScrollObserver();
      ScrollObserver.didScroll(visibleItems:layoutEnvironment:contentOffset:)();
      swift_release();
    }
  }
}

id sub_100160528()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchLockupListCollectionViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for SearchLockupListCollectionViewCell()
{
  return self;
}

uint64_t getEnumTagSinglePayload for SearchLockupListCollectionViewCell.ListConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchLockupListCollectionViewCell.ListConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchLockupListCollectionViewCell.ListConfiguration()
{
  return &type metadata for SearchLockupListCollectionViewCell.ListConfiguration;
}

uint64_t sub_1001606E4()
{
  return swift_weakLoadStrong();
}

uint64_t sub_100160730()
{
  sub_100160E48();

  return swift_release();
}

void (*sub_100160768(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10015EF3C(v2);
  return sub_1000D8184;
}

uint64_t sub_1001607C0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_100060050(*v1);
  return v2;
}

uint64_t sub_10016081C(uint64_t a1, uint64_t a2)
{
  int v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsUpdateBlock);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *int v5 = a1;
  v5[1] = a2;
  return sub_10006012C(v6);
}

uint64_t (*sub_10016087C())()
{
  return j__swift_endAccess;
}

double sub_1001608E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v42 = a8;
  int v36 = a7;
  uint64_t v40 = a6;
  uint64_t v39 = a5;
  uint64_t v38 = a4;
  uint64_t v37 = a3;
  uint64_t v41 = a2;
  uint64_t v34 = a1;
  uint64_t v11 = type metadata accessor for FontUseCase();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = type metadata accessor for ImageHeadingView();
  if (qword_10097E200 != -1) {
    swift_once();
  }
  id v19 = (void *)qword_100985F10;
  if (qword_10097E208 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100087728(v11, (uint64_t)qword_100985F18);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v21(v17, v20, v11);
  if (qword_10097E210 != -1) {
    swift_once();
  }
  uint64_t v35 = a11;
  uint64_t v41 = sub_1006E97A4(v19, v34, v41, (uint64_t)v17, 1, (uint64_t)&qword_100985F30, a9, v18);
  id v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v17, v11);
  type metadata accessor for SearchHeadingView();
  if (qword_10097E218 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100087728(v11, (uint64_t)qword_100985F58);
  v21(v17, v23, v11);
  if (qword_10097E220 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_100087728(v11, (uint64_t)qword_100985F70);
  v21(v14, v24, v11);
  if (qword_10097E228 != -1) {
    swift_once();
  }
  char v25 = v36 & 1;
  uint64_t v26 = sub_10046AACC(v37, v38, (uint64_t)v17, 2, v39, v40, (uint64_t)v14, (uint64_t)&unk_100985F88, a9);
  v22(v14, v11);
  v22(v17, v11);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a10;
  *(unsigned char *)(v27 + 24) = v25;
  *(void *)(v27 + 32) = v42;
  uint64_t v28 = type metadata accessor for LayoutViewPlaceholder();
  swift_allocObject();
  uint64_t v29 = LayoutViewPlaceholder.init(measureWith:)();
  uint64_t v45[3] = v28;
  v45[4] = &protocol witness table for LayoutViewPlaceholder;
  void v44[4] = &protocol witness table for LayoutViewPlaceholder;
  v45[0] = v41;
  uint64_t v44[3] = v28;
  v44[0] = v26;
  v43[4] = &protocol witness table for LayoutViewPlaceholder;
  v43[3] = v28;
  v43[0] = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10015FA7C((uint64_t)v45, (uint64_t)v44, (uint64_t)v43, v46);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v43);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v44);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v45);
  sub_100081D90(v46, v46[3]);
  Measurable.measuredSize(fitting:in:)();
  double v31 = v30;
  swift_release();
  swift_release();
  swift_release();
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v46);
  return v31;
}

uint64_t sub_100160E48()
{
  swift_beginAccess();
  uint64_t result = swift_weakAssign();
  if (*(void *)(v0 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsCoordinator))
  {
    swift_weakLoadStrong();
    swift_retain();
    dispatch thunk of NestedCollectionViewImpressionsCoordinator.impressionsCalculator.setter();
    swift_release();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      type metadata accessor for ImpressionsScrollObserver();
      swift_allocObject();
      swift_retain();
      *(void *)(v0 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsScrollObserver) = ImpressionsScrollObserver.init(_:)();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100160F34()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100160F44(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  swift_getObjectType();
  sub_1001610A0(v3, a1);
}

void sub_100160FAC()
{
  *(void *)&v0[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupDataSource] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_objectGraph] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupCollectionView] = 0;
  swift_weakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsUpdateBlock];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsCoordinator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsScrollObserver] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_compoundScrollObserver;
  id v3 = objc_allocWithZone((Class)type metadata accessor for CompoundScrollObserver());
  *(void *)&v0[v2] = CompoundScrollObserver.init(children:)();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001610A0(uint64_t a1, void *a2)
{
  type metadata accessor for SmallLockupView();
  if (qword_100980610 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for SmallLockupLayout.Metrics();
  uint64_t v5 = sub_100087728(v4, (uint64_t)qword_1009E7358);
  sub_10070A038(v5, a2);
  if (qword_10097E230 == -1)
  {
    if (!__OFSUB__(a1, 1)) {
      return;
    }
LABEL_8:
    __break(1u);
    return;
  }
  swift_once();
  if (__OFSUB__(a1, 1)) {
    goto LABEL_8;
  }
}

uint64_t sub_1001611BC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001611F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_10016122C(uint64_t a1, void *a2)
{
  return sub_100160084(a1, a2);
}

id sub_100161234(char a1, uint64_t a2, void *a3, double a4, double a5)
{
  if (qword_10097E230 != -1) {
    swift_once();
  }
  int v44 = a1 & 1;
  double v9 = *(double *)&qword_100985FD8;
  id v10 = [self layoutAnchorWithEdges:4 absoluteOffset:0.0 *(double *)&qword_100985FD8];
  uint64_t v11 = self;
  double v12 = 1.0;
  id v13 = [v11 fractionalWidthDimension:1.0];
  id v14 = [v11 absoluteDimension:v9];
  uint64_t v15 = self;
  id v16 = [v15 sizeWithWidthDimension:v13 heightDimension:v14];

  type metadata accessor for SeparatorSpacerReusableView();
  static UICollectionReusableView.defaultReuseIdentifier.getter();
  id v17 = v10;
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [self supplementaryItemWithLayoutSize:v16 elementKind:v18 containerAnchor:v17];

  id v43 = v17;
  id v20 = [v11 fractionalWidthDimension:1.0];
  uint64_t v21 = a2;
  id v22 = [v11 fractionalHeightDimension:1.0 / (double)a2];
  id v23 = [v15 sizeWithWidthDimension:v20 heightDimension:v22];

  sub_100082C28(&qword_100982B50);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1007BEA80;
  *(void *)(v24 + 32) = v19;
  specialized Array._endMutation()();
  sub_100084CF0(0, &qword_100983960);
  id v25 = v19;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v27 = [self itemWithLayoutSize:v23 supplementaryItems:isa];

  objc_msgSend(objc_msgSend(a3, "container"), "contentSize");
  double v29 = v28;
  swift_unknownObjectRelease();
  if (v29 <= 0.0)
  {
    uint64_t v32 = &selRef_estimatedDimension_;
    int v31 = v44;
  }
  else
  {
    objc_msgSend(objc_msgSend(a3, "container"), "contentSize");
    double v12 = v30;
    swift_unknownObjectRelease();
    int v31 = v44;
    if (!v44) {
      double v12 = v12 - a4 - a5;
    }
    uint64_t v32 = &selRef_absoluteDimension_;
  }
  id v33 = [v11 *v32 v12 a3];
  uint64_t v34 = self;
  id v35 = v33;
  id v36 = [v11 fractionalHeightDimension:1.0];
  id v37 = [v15 sizeWithWidthDimension:v35 heightDimension:v36];

  id v38 = [v34 verticalGroupWithLayoutSize:v37 subitem:v27 count:v21];
  id v39 = [self fixedSpacing:*(double *)&qword_100985FD8];
  [v38 setInterItemSpacing:v39];

  id v40 = [self sectionWithGroup:v38];
  if (qword_10097E238 != -1) {
    swift_once();
  }
  [v40 setInterGroupSpacing:*(double *)&qword_100985FE0];
  [v40 setContentInsets:0.0, a4, 0.0, a5];
  [v40 setOrthogonalScrollingBehavior:(4 * v31) ^ 4u];

  return v40;
}

void sub_100161768()
{
}

void sub_100161770()
{
  uint64_t v1 = type metadata accessor for Dependency();
  uint64_t v46 = *(void *)(v1 - 8);
  uint64_t v47 = v1;
  __chkstk_darwin(v1);
  uint64_t v42 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for MetricsFieldsContext();
  uint64_t v41 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v45 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  id v40 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_10098ABA0);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100082C28((uint64_t *)&unk_100986080);
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = __chkstk_darwin(v15);
  id v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_objectGraph))
  {
    id v20 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupDataSource);
    if (v20)
    {
      swift_retain();
      id v21 = v20;
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
        DiffableLens.value.getter();
        uint64_t v24 = Lockup.clickAction.getter();
        swift_release();
        if (!v24)
        {
          (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
          swift_release();
          return;
        }
        ObjectGraph.actionDispatcher.getter();
        uint64_t v25 = sub_100082C28((uint64_t *)&unk_100984530);
        uint64_t v26 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, v25) != 1)
        {
          v48[3] = type metadata accessor for Action();
          v48[4] = sub_100162038((unint64_t *)&qword_1009875D0, (void (*)(uint64_t))&type metadata accessor for Action);
          v48[0] = v24;
          swift_retain_n();
          uint64_t v36 = v25;
          sub_1005365D0();
          uint64_t v37 = v24;
          uint64_t v27 = v41;
          double v28 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
          id v39 = v11;
          uint64_t v29 = v44;
          v28(v4, v7, v44);
          uint64_t v38 = v26;
          double v30 = v42;
          Dependency.init<A>(satisfying:with:)();
          dispatch thunk of BaseObjectGraph.adding(dependency:)();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v47);
          int v31 = v40;
          (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v40, v7, v29);
          uint64_t v32 = v43;
          uint64_t v33 = v45;
          (*(void (**)(char *, void, uint64_t))(v43 + 104))(v31, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v45);
          uint64_t v34 = v36;
          ActionDispatcher.perform(_:withMetrics:asPartOf:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
          _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v48);
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
          swift_release();
          (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v34);
          return;
        }
        (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
        swift_release();
        swift_release();
        id v22 = &qword_1009875B0;
        uint64_t v23 = (uint64_t)v11;
        goto LABEL_7;
      }
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v16 + 56))(v14, 1, 1, v15, v17);
    }
    id v22 = (uint64_t *)&unk_10098ABA0;
    uint64_t v23 = (uint64_t)v14;
LABEL_7:
    sub_100082BCC(v23, v22);
  }
}

uint64_t sub_100161DDC()
{
  uint64_t v1 = sub_100082C28((uint64_t *)&unk_10098ABA0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v4 = sub_100082C28((uint64_t *)&unk_100986080);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_lockupDataSource);
  if (!v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, 1, 1, v4, v6);
    return sub_100082BCC((uint64_t)v3, (uint64_t *)&unk_10098ABA0);
  }
  id v10 = v9;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_100082BCC((uint64_t)v3, (uint64_t *)&unk_10098ABA0);
  }
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  if (*(void *)(v0 + OBJC_IVAR____TtC8AppStore34SearchLockupListCollectionViewCell_impressionsCoordinator))
  {
    uint64_t v14 = type metadata accessor for Lockup();
    uint64_t v15 = sub_100162038((unint64_t *)&qword_100993740, (void (*)(uint64_t))&type metadata accessor for Lockup);
    swift_retain();
    DiffableLens.value.getter();
    dispatch thunk of NestedCollectionViewImpressionsCoordinator.register(model:for:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100162038(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100162080(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001620DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100162138(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SearchLockupListCollectionViewCell.ListConfiguration.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100162258);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchLockupListCollectionViewCell.ListConfiguration.Mode()
{
  return &type metadata for SearchLockupListCollectionViewCell.ListConfiguration.Mode;
}

unint64_t sub_100162294()
{
  unint64_t result = qword_1009860A8;
  if (!qword_1009860A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009860A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscriptionStateActionImplementation()
{
  return &type metadata for ArcadeSubscriptionStateActionImplementation;
}

uint64_t sub_100162300()
{
  return sub_100162BE0(&qword_1009860B0, (void (*)(uint64_t))&type metadata accessor for ArcadeSubscriptionStateAction);
}

Swift::Int sub_100162334()
{
  return Hasher._finalize()();
}

void sub_100162378()
{
}

Swift::Int sub_1001623A0()
{
  return Hasher._finalize()();
}

uint64_t sub_1001623F0()
{
  return sub_1001628AC();
}

uint64_t sub_1001623F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Dependency();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v29 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsFieldsContext();
  uint64_t v28 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100082C28((uint64_t *)&unk_100984530);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1;
  swift_retain();
  BaseObjectGraph.optional<A>(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000B59E0((uint64_t)v14);
    sub_100082C28(&qword_100988220);
    sub_1000B5A40();
    swift_allocError();
    *id v19 = 1;
    uint64_t v20 = Promise.__allocating_init(error:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    uint64_t v35[3] = type metadata accessor for Action();
    v35[4] = sub_100162BE0((unint64_t *)&qword_1009875D0, (void (*)(uint64_t))&type metadata accessor for Action);
    v35[0] = v34;
    swift_retain();
    sub_1005365D0();
    uint64_t v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v27, v8, v4);
    id v22 = v29;
    Dependency.init<A>(satisfying:with:)();
    dispatch thunk of BaseObjectGraph.adding(dependency:)();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v33);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v11, v8, v4);
    uint64_t v24 = v30;
    uint64_t v23 = v31;
    (*(void (**)(char *, void, uint64_t))(v30 + 104))(v11, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v31);
    uint64_t v20 = ActionDispatcher.perform(_:withMetrics:asPartOf:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v23);
    _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v35);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  swift_release();
  return v20;
}

uint64_t sub_1001628AC()
{
  uint64_t v0 = type metadata accessor for ArcadeState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (id *)((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100082C28(&qword_100988220);
  uint64_t v4 = Promise.__allocating_init()();
  type metadata accessor for ArcadeSubscriptionManager();
  uint64_t v5 = (void *)inject(_:from:)();
  ArcadeSubscriptionManager.subscriptionState.getter();
  int v6 = (*(uint64_t (**)(id *, uint64_t))(v1 + 88))(v3, v0);
  if (v6 == enum case for ArcadeState.notSubscribed(_:))
  {
    (*(void (**)(id *, uint64_t))(v1 + 96))(v3, v0);
    uint64_t v7 = ArcadeSubscriptionStateAction.notSubscribedAction.getter();
    uint64_t v8 = type metadata accessor for ArcadeIntroOfferState();
LABEL_7:
    (*(void (**)(id *, uint64_t))(*(void *)(v8 - 8) + 8))(v3, v8);
    goto LABEL_8;
  }
  int v9 = v6;
  if (v6 == enum case for ArcadeState.purchasing(_:))
  {
    (*(void (**)(id *, uint64_t))(v1 + 96))(v3, v0);
    swift_release();
    uint64_t v7 = ArcadeSubscriptionStateAction.purchasingAction.getter();
    goto LABEL_8;
  }
  if (v6 == enum case for ArcadeState.subscribed(_:))
  {
    (*(void (**)(id *, uint64_t))(v1 + 96))(v3, v0);

    uint64_t v3 = (id *)((char *)v3 + *(int *)(sub_100082C28(&qword_100985B08) + 48));
    uint64_t v7 = ArcadeSubscriptionStateAction.subscribedAction.getter();
    uint64_t v8 = type metadata accessor for ArcadeTrialEnrolledState();
    goto LABEL_7;
  }
  int v12 = enum case for ArcadeState.unknown(_:);
  uint64_t v7 = ArcadeSubscriptionStateAction.unknownAction.getter();
  if (v9 != v12) {
    (*(void (**)(id *, uint64_t))(v1 + 8))(v3, v0);
  }
LABEL_8:
  if (v7)
  {
    uint64_t v10 = swift_retain();
    sub_1001623F8(v10);
    swift_release();
    Promise.pipe(to:)();

    swift_release();
    swift_release();
  }
  else
  {
    sub_100162B8C();
    swift_allocError();
    Promise.reject(_:)();

    swift_errorRelease();
  }
  return v4;
}

unint64_t sub_100162B8C()
{
  unint64_t result = qword_1009860B8;
  if (!qword_1009860B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009860B8);
  }
  return result;
}

uint64_t sub_100162BE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ArcadeSubscriptionStateActionImplementation.ArcadeSubscriptionStateActionImplementationError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for ArcadeSubscriptionStateActionImplementation.ArcadeSubscriptionStateActionImplementationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100162D24);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcadeSubscriptionStateActionImplementation.ArcadeSubscriptionStateActionImplementationError()
{
  return &type metadata for ArcadeSubscriptionStateActionImplementation.ArcadeSubscriptionStateActionImplementationError;
}

unint64_t sub_100162D60()
{
  unint64_t result = qword_1009860C0;
  if (!qword_1009860C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009860C0);
  }
  return result;
}

uint64_t sub_100162DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v2 = type metadata accessor for Dependency();
  uint64_t v28 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v25 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsFieldsContext();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectGraph.actionDispatcher.getter();
  uint64_t v17 = sub_100082C28((uint64_t *)&unk_100984530);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
    return sub_100082BCC((uint64_t)v16, &qword_1009875B0);
  }
  v30[3] = type metadata accessor for Action();
  v30[4] = sub_100165CD8((unint64_t *)&qword_1009875D0, (void (*)(uint64_t))&type metadata accessor for Action);
  uint64_t v23 = v2;
  v30[0] = v29;
  swift_retain_n();
  uint64_t v24 = v18;
  sub_1005365D0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  uint64_t v20 = v25;
  Dependency.init<A>(satisfying:with:)();
  dispatch thunk of BaseObjectGraph.adding(dependency:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v23);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v10, v4);
  uint64_t v22 = v26;
  uint64_t v21 = v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v13, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v27);
  ActionDispatcher.perform(_:withMetrics:asPartOf:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v21);
  _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v30);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v17);
}

uint64_t sub_1001631E4(uint64_t (*a1)(void))
{
  return a1();
}

void sub_10016320C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v3 = type metadata accessor for Dependency();
  uint64_t v35 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MetricsFieldsContext();
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_100082C28((uint64_t *)&unk_100984520);
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100082C28(&qword_1009875B0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v19 = (void *)Strong;
    ContingentOffer.offerLockup.getter();
    uint64_t v20 = Lockup.clickAction.getter();
    swift_release();
    if (v20)
    {
      uint64_t v31 = v3;
      ObjectGraph.actionDispatcher.getter();
      uint64_t v21 = sub_100082C28((uint64_t *)&unk_100984530);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21) == 1)
      {
        swift_release();

        sub_100082BCC((uint64_t)v17, &qword_1009875B0);
      }
      else
      {
        uint64_t v37[3] = type metadata accessor for Action();
        v37[4] = sub_100165CD8((unint64_t *)&qword_1009875D0, (void (*)(uint64_t))&type metadata accessor for Action);
        uint64_t v29 = v20;
        v37[0] = v20;
        swift_retain_n();
        uint64_t v28 = v21;
        sub_1005365D0();
        uint64_t v30 = v22;
        uint64_t v23 = v32;
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v8, v11, v6);
        Dependency.init<A>(satisfying:with:)();
        dispatch thunk of BaseObjectGraph.adding(dependency:)();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v31);
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v14, v11, v6);
        uint64_t v25 = v33;
        uint64_t v24 = v34;
        (*(void (**)(char *, void, uint64_t))(v33 + 104))(v14, enum case for ActionDispatcher.MetricsBehavior.fromAction<A>(_:), v34);
        uint64_t v26 = v28;
        ActionDispatcher.perform(_:withMetrics:asPartOf:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v24);
        _s8AppStore27ProductRatingsRegularLayoutV7MetricsVwxx_0((uint64_t)v37);
        swift_release_n();

        swift_release();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v26);
      }
    }
    else
    {
    }
  }
}