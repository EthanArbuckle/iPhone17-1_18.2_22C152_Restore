void sub_1000052CC(id a1)
{
  +[MPMediaQuery setFilteringDisabled:1];
}

id sub_1000054E4()
{
  if (qword_10012FF70 != -1) {
    dispatch_once(&qword_10012FF70, &stru_10011FBB8);
  }
  v0 = (void *)qword_10012FF68;

  return v0;
}

void sub_100005538(id a1)
{
  qword_10012FF68 = (uint64_t)os_log_create("com.apple.tv.TVUpNext", "Default");

  _objc_release_x1();
}

id sub_10000557C()
{
  if (qword_10012FF80 != -1) {
    dispatch_once(&qword_10012FF80, &stru_10011FBD8);
  }
  v0 = (void *)qword_10012FF78;

  return v0;
}

void sub_1000055D0(id a1)
{
  qword_10012FF78 = (uint64_t)os_log_create("com.apple.tv.SportsWidget", "Default");

  _objc_release_x1();
}

void sub_1000056C0(id a1)
{
  v15[0] = @"NextEpisode";
  v14 = +[NSBundle mainBundle];
  v13 = [v14 localizedStringForKey:@"TV.UpNext.NextEpisode" value:&stru_100124688 table:0];
  v16[0] = v13;
  v15[1] = @"NextChapter";
  v1 = +[NSBundle mainBundle];
  v2 = [v1 localizedStringForKey:@"TV.UpNext.NextChapter" value:&stru_100124688 table:0];
  v16[1] = v2;
  v15[2] = @"NextSeason";
  v3 = +[NSBundle mainBundle];
  v4 = [v3 localizedStringForKey:@"TV.UpNext.NextSeason" value:&stru_100124688 table:0];
  v16[2] = v4;
  v15[3] = @"NewEpisode";
  v5 = +[NSBundle mainBundle];
  v6 = [v5 localizedStringForKey:@"TV.UpNext.NewEpisode" value:&stru_100124688 table:0];
  v16[3] = v6;
  v15[4] = @"NewChapter";
  v7 = +[NSBundle mainBundle];
  v8 = [v7 localizedStringForKey:@"TV.UpNext.NewChapter" value:&stru_100124688 table:0];
  v16[4] = v8;
  v15[5] = @"NewSeason";
  v9 = +[NSBundle mainBundle];
  v10 = [v9 localizedStringForKey:@"TV.UpNext.NewSeason" value:&stru_100124688 table:0];
  v16[5] = v10;
  uint64_t v11 = +[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:6];
  v12 = (void *)qword_10012FF88;
  qword_10012FF88 = v11;
}

void sub_100005E04(id a1)
{
  v1 = sub_1000054E4();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Registering widget", v2, 2u);
  }

  notify_post("com.apple.tv.TVWidgetExtension.Register");
}

void sub_100005E78(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v7 = sub_1000054E4();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8 = +[NSDate date];
    [v8 timeIntervalSinceDate:*(void *)(a1 + 32)];
    int v12 = 134217984;
    uint64_t v13 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - End FetchUpNextWidget - elapsed time: %.5f", (uint8_t *)&v12, 0xCu);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  if (v10)
  {
    (*(void (**)(uint64_t, id, id))(v10 + 16))(v10, v5, v6);
  }
  else
  {
    uint64_t v11 = sub_1000054E4();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v12) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - No completion block provided", (uint8_t *)&v12, 2u);
    }
  }
}

void sub_100005FCC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    goto LABEL_15;
  }
  v7 = [v5 features];

  if (!v7) {
    goto LABEL_5;
  }
  id v8 = WLKServerConfigurationResponseKeyFeaturesUNW;
  uint64_t v9 = [v5 features];
  unsigned __int8 v10 = [v9 wlk_BOOLForKey:v8 defaultValue:1];

  if (v10)
  {

LABEL_5:
    if (+[WLKUpNextWidgetCacheManager consumePendingInvalidation])
    {
      uint64_t v11 = sub_1000054E4();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Ignoring cache", buf, 2u);
      }

      uint64_t v12 = 9;
    }
    else
    {
      uint64_t v12 = 1;
    }
    id v13 = [objc_alloc((Class)WLKUpNextWidgetRequestOperation) initWithQueryParameters:0 options:v12];
    objc_initWeak((id *)buf, v13);
    v19 = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472;
    v21 = sub_100006294;
    v22 = &unk_10011FCB8;
    objc_copyWeak(v24, (id *)buf);
    id v14 = *(id *)(a1 + 32);
    v15 = *(void **)(a1 + 40);
    v16 = *(void **)(a1 + 48);
    id v23 = v14;
    v24[1] = v15;
    v24[2] = v16;
    [v13 setCompletionBlock:&v19];
    v17 = +[NSOperationQueue wlkDefaultQueue];
    [v17 addOperation:v13];

    objc_destroyWeak(v24);
    objc_destroyWeak((id *)buf);

    goto LABEL_15;
  }
  v18 = sub_1000054E4();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v26 = v8;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Bailing early. UTS has disabled the feature %@", buf, 0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
LABEL_15:
}

void sub_10000626C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100006294(uint64_t a1)
{
  v2 = sub_1000054E4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Network request complete", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  *(void *)buf = 0;
  v35 = buf;
  uint64_t v36 = 0x3032000000;
  v37 = sub_100006638;
  v38 = sub_100006648;
  id v39 = 0;
  v4 = [WeakRetained error];

  if (v4)
  {
    uint64_t v5 = [WeakRetained error];
    id v6 = (void *)*((void *)v35 + 5);
    *((void *)v35 + 5) = v5;

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    v7 = [WeakRetained itemCollection];
    id v8 = [v7 items];
    id v9 = [v8 mutableCopy];

    unsigned __int8 v10 = [v7 items];

    if (!v10)
    {
      id v11 = objc_alloc_init((Class)NSMutableArray);

      id v9 = v11;
    }
    uint64_t v12 = [WeakRetained originalExpirationDate];
    if ([WeakRetained resourceFetchType] == (id)1)
    {
      id v13 = sub_1000054E4();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Request was a Network load", v33, 2u);
      }

      id v14 = +[WLKUpNextDeltaStore sharedInstance];
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_100006650;
      v26[3] = &unk_10011FC68;
      uint64_t v31 = *(void *)(a1 + 48);
      id v15 = v9;
      uint64_t v16 = *(void *)(a1 + 56);
      id v27 = v15;
      uint64_t v32 = v16;
      id v28 = v12;
      id v29 = *(id *)(a1 + 32);
      v30 = buf;
      [v14 delete:v26];
      v17 = &v27;
      v18 = &v28;
    }
    else
    {
      v19 = sub_1000054E4();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Request was a Cache hit", v33, 2u);
      }

      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_1000067F8;
      v21[3] = &unk_10011FC90;
      uint64_t v20 = *(void *)(a1 + 56);
      id v24 = *(id *)(a1 + 48);
      uint64_t v25 = v20;
      id v22 = v12;
      v23[0] = *(id *)(a1 + 32);
      v23[1] = buf;
      [v24 _processContinuationsDelta:v9 withCompletion:v21];
      v17 = &v22;
      v18 = (id *)v23;
    }
  }
  _Block_object_dispose(buf, 8);
}

void sub_10000660C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100006638(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100006648(uint64_t a1)
{
}

void sub_100006650(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = sub_1000054E4();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    if (v4)
    {
      id v6 = [v4 description];
    }
    else
    {
      id v6 = &stru_100124688;
    }
    int v11 = 138412290;
    uint64_t v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Done deleting delta (fresh load) %@", (uint8_t *)&v11, 0xCu);
    if (v4) {
  }
    }
  v7 = [*(id *)(a1 + 64) _contentGroupWithContinuations:*(void *)(a1 + 32) widgetSize:*(void *)(a1 + 72) expiration:*(void *)(a1 + 40)];
  id v8 = sub_1000054E4();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = [v7 items];
    +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v9 count]);
    unsigned __int8 v10 = (__CFString *)objc_claimAutoreleasedReturnValue();
    int v11 = 138412290;
    uint64_t v12 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - End processing up next. Returning items:[%@]", (uint8_t *)&v11, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1000067F8(uint64_t a1, uint64_t a2)
{
  v3 = [*(id *)(a1 + 56) _contentGroupWithContinuations:a2 widgetSize:*(void *)(a1 + 64) expiration:*(void *)(a1 + 32)];
  id v4 = sub_1000054E4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = [v3 items];
    id v6 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v5 count]);
    int v7 = 138412290;
    id v8 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - End processing up next. Returning items:[%@]", (uint8_t *)&v7, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100006B90(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = sub_1000054E4();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = +[NSDate date];
    [v8 timeIntervalSinceDate:a1[4]];
    *(_DWORD *)buf = 138412546;
    id v56 = v5;
    __int16 v57 = 2048;
    id v58 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Done fetching delta %@ elapsed:%.5f", buf, 0x16u);
  }
  if (v6)
  {
    unsigned __int8 v10 = sub_1000054E4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v56 = v6;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Continuing after Up Next delta error: %@", buf, 0xCu);
    }
  }
  int v11 = sub_1000054E4();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    id v39 = v6;
    if (v12)
    {
      *(_DWORD *)buf = 138412290;
      id v56 = v5;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Parsing Up Next delta: %@", buf, 0xCu);
    }

    int v11 = WLKRestrictionsMaximumEffectiveTVShowRanking();
    id v13 = WLKRestrictionsMaximumEffectiveMovieRanking();
    long long v49 = 0u;
    long long v50 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    v40 = v5;
    id v14 = [v5 additions];
    id v15 = &MPMediaItemPropertyStoreID_ptr;
    id v44 = [v14 countByEnumeratingWithState:&v49 objects:v61 count:16];
    if (v44)
    {
      uint64_t v16 = *(void *)v50;
      v42 = v11;
      v43 = a1;
      uint64_t v41 = *(void *)v50;
      do
      {
        for (i = 0; i != v44; i = (char *)i + 1)
        {
          if (*(void *)v50 != v16) {
            objc_enumerationMutation(v14);
          }
          v18 = *(void **)(*((void *)&v49 + 1) + 8 * i);
          v19 = [v18 movieOrShowContent:v39];
          uint64_t v20 = [v19 contentRating];

          if (v11 && [v20 systemType] == (id)2)
          {
            id v21 = [v20 ratingValue];
            id v22 = v11;
          }
          else
          {
            if (!v13 || [v20 systemType] != (id)1)
            {
LABEL_25:
              [v15[39] add:v18 toCollection:a1[5]];
              goto LABEL_26;
            }
            id v21 = [v20 ratingValue];
            id v22 = v13;
          }
          if ((unint64_t)v21 <= [v22 unsignedIntValue]) {
            goto LABEL_25;
          }
          id v23 = sub_1000054E4();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
          {
            id v24 = [v20 name];
            uint64_t v25 = v13;
            id v26 = [v20 ratingValue];
            id v27 = [v18 movieOrShowContent];
            [v27 canonicalID];
            id v28 = v14;
            v30 = id v29 = v15;
            *(_DWORD *)buf = 138412802;
            id v56 = v24;
            __int16 v57 = 2048;
            id v58 = v26;
            id v13 = v25;
            __int16 v59 = 2112;
            v60 = v30;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Up Next delta content not allowed by current restrictions: %@-%lu, %@", buf, 0x20u);

            id v15 = v29;
            id v14 = v28;
            uint64_t v16 = v41;

            int v11 = v42;
            a1 = v43;
          }

LABEL_26:
        }
        id v44 = [v14 countByEnumeratingWithState:&v49 objects:v61 count:16];
      }
      while (v44);
    }

    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    id v5 = v40;
    uint64_t v31 = [v40 removals];
    id v32 = [v31 countByEnumeratingWithState:&v45 objects:v54 count:16];
    if (v32)
    {
      id v33 = v32;
      uint64_t v34 = *(void *)v46;
      do
      {
        for (j = 0; j != v33; j = (char *)j + 1)
        {
          if (*(void *)v46 != v34) {
            objc_enumerationMutation(v31);
          }
          [v15[39] remove:*((void *)(*((void *)&v45 + 1) + 8 * j)) fromCollection:a1[5] inCollection:v39];
        }
        id v33 = [v31 countByEnumeratingWithState:&v45 objects:v54 count:16];
      }
      while (v33);
    }

    uint64_t v36 = (void *)a1[5];
    v37 = +[NSSortDescriptor sortDescriptorWithKey:@"timestamp" ascending:0];
    v53 = v37;
    v38 = +[NSArray arrayWithObjects:&v53 count:1];
    [v36 sortUsingDescriptors:v38];

    id v6 = v39;
  }
  else if (v12)
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Up Next delta is nil", buf, 2u);
  }

  (*(void (**)(void))(a1[6] + 16))();
}

void sub_1000071E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100007200(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v6 = v3;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;
  id v8 = 0;
  if (![v3 isRental]) {
    goto LABEL_16;
  }
  if (v5)
  {
    id v9 = [v5 playable];
    id v8 = [v9 externalID];
  }
  else if (v7)
  {
    id v8 = [v7 adamID];
  }
  else
  {
    id v8 = 0;
  }
  if ([v8 length])
  {
    uint64_t v10 = +[TVUNRentalUtilities validRentalWithIdentifier:inRentals:](TVUNRentalUtilities, "validRentalWithIdentifier:inRentals:", [v8 longLongValue], *(void *)(a1 + 32));
    if (v10)
    {
      int v11 = (void *)v10;

      id v8 = v11;
LABEL_16:
      BOOL v12 = [*(id *)(a1 + 56) _contentItemWithContinuation:v3 mediaItem:v8 widgetSize:*(void *)(a1 + 64) itemPosition:*(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
      if (v12)
      {
        [*(id *)(a1 + 40) addObject:v12];
      }
      else
      {
        id v13 = sub_1000054E4();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          int v14 = 138412290;
          id v15 = v3;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - No content item returned for %@", (uint8_t *)&v14, 0xCu);
        }
      }
      ++*(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
      goto LABEL_24;
    }
  }
  BOOL v12 = sub_1000054E4();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = 138412546;
    id v15 = v8;
    __int16 v16 = 2112;
    id v17 = v3;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "TVUNUpNextWidgetDataSource - Skipping Up Next rental. Lacks valid DB item %@ - %@", (uint8_t *)&v14, 0x16u);
  }
LABEL_24:
}

BOOL sub_100007DD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100007DEC()
{
  Swift::UInt v1 = *v0;
  sub_1000E5E00();
  sub_1000E5E10(v1);
  return sub_1000E5E20();
}

void sub_100007E34()
{
  sub_1000E5E10(*v0);
}

Swift::Int sub_100007E60()
{
  Swift::UInt v1 = *v0;
  sub_1000E5E00();
  sub_1000E5E10(v1);
  return sub_1000E5E20();
}

uint64_t sub_100007EA4()
{
  uint64_t v0 = sub_1000E41D0();
  sub_100008434(v0, qword_100141D08);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100141D08);
  uint64_t v2 = enum case for DynamicTypeSize.large(_:);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_100007F2C()
{
  return 1;
}

uint64_t sub_100007F34(long long *a1)
{
  long long v2 = *a1;
  if (sub_1000E32BC(2, 17, 0, 0)) {
    return swift_getOpaqueTypeMetadata2();
  }
  else {
    return v2;
  }
}

uint64_t sub_100007FA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (sub_1000E32BC(2, 17, 0, 0)) {
    return swift_getOpaqueTypeConformance2();
  }
  return v1;
}

uint64_t sub_100008014()
{
  sub_1000082B4(&qword_100129EB8);
  sub_1000082F8();

  return sub_1000E4670();
}

void sub_100008074(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_10000807C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_100008090@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1000080A4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1000080B8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1000080E8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100008114@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_100008138(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10000814C(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_100008160(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_100008174@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100008188(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10000819C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1000081B0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1000081C4()
{
  return *v0 == 0;
}

uint64_t sub_1000081D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_1000081EC(void *result)
{
  *v1 &= ~*result;
  return result;
}

BOOL sub_100008200(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100008214@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10000827C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_100008254@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_100008260@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100008270(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10000827C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1000082B4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1000082F8()
{
  unint64_t result = qword_100129EC0;
  if (!qword_100129EC0)
  {
    sub_100008354(&qword_100129EB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100129EC0);
  }
  return result;
}

uint64_t sub_100008354(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

__n128 initializeWithTake for SportsWidgetClockViewLayout(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchVStack(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WatchVStack(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t *sub_100008434(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100008498(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

__n128 initializeWithTake for SportsWidgetScoreViewModel(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1000084DC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000084FC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for SportsWidgetClockViewLayout(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SportsWidgetClockViewLayout()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SportsWidgetClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SportsWidgetClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetClockViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetClockViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetClockViewLayout()
{
  return &type metadata for SportsWidgetClockViewLayout;
}

unsigned char *initializeBufferWithCopyOfBuffer for SportsWidgetClockViewLayoutStyle(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SportsWidgetClockViewLayoutStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SportsWidgetClockViewLayoutStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000088F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_10000891C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100008928(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetClockViewLayoutStyle()
{
  return &type metadata for SportsWidgetClockViewLayoutStyle;
}

unint64_t sub_100008944()
{
  unint64_t result = qword_100129EF0;
  if (!qword_100129EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100129EF0);
  }
  return result;
}

void type metadata accessor for Unit(uint64_t a1)
{
}

void sub_1000089AC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1000089F4()
{
  return sub_100008A5C(&qword_100129F00);
}

uint64_t sub_100008A28()
{
  return sub_100008A5C(&qword_100129F08);
}

uint64_t sub_100008A5C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Unit(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100008AA0()
{
  return sub_100008A5C(&qword_100129F10);
}

uint64_t sub_100008AD4()
{
  return sub_100008A5C(&qword_100129F18);
}

void *sub_100008B18(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    id v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 20);
    int v11 = a1;
    BOOL v12 = (char *)a1 + v10;
    id v13 = v11;
    v114 = v11;
    int v14 = (char *)a2 + v10;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = a3;
    uint64_t v112 = a3;
    char v17 = v14[8];
    sub_10000954C(*(void *)v14, v17);
    *(void *)BOOL v12 = v15;
    v12[8] = v17;
    uint64_t v18 = *(int *)(v16 + 24);
    uint64_t v19 = (uint64_t)v13 + v18;
    uint64_t v20 = (char *)a2 + v18;
    long long v21 = *(_OWORD *)((char *)a2 + v18 + 16);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)((char *)a2 + v18);
    *(_OWORD *)(v19 + 16) = v21;
    long long v22 = *(_OWORD *)((char *)a2 + v18 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)((char *)a2 + v18 + 32);
    *(_OWORD *)(v19 + 48) = v22;
    long long v23 = *(_OWORD *)((char *)a2 + v18 + 80);
    *(_OWORD *)(v19 + 64) = *(_OWORD *)((char *)a2 + v18 + 64);
    *(_OWORD *)(v19 + 80) = v23;
    *(_OWORD *)(v19 + 96) = *(_OWORD *)((char *)a2 + v18 + 96);
    uint64_t v24 = *(void *)((char *)a2 + v18 + 120);
    *(void *)(v19 + 112) = *(void *)((char *)a2 + v18 + 112);
    *(void *)(v19 + 120) = v24;
    *(void *)(v19 + 128) = *(void *)((char *)a2 + v18 + 128);
    *(_OWORD *)(v19 + 136) = *(_OWORD *)((char *)a2 + v18 + 136);
    *(unsigned char *)(v19 + 152) = *((unsigned char *)a2 + v18 + 152);
    *(void *)(v19 + 160) = *(void *)((char *)a2 + v18 + 160);
    *(_OWORD *)(v19 + 168) = *(_OWORD *)((char *)a2 + v18 + 168);
    uint64_t v25 = *(void *)((char *)a2 + v18 + 192);
    *(void *)(v19 + 184) = *(void *)((char *)a2 + v18 + 184);
    *(void *)(v19 + 192) = v25;
    uint64_t v26 = *(void *)((char *)a2 + v18 + 208);
    *(void *)(v19 + 200) = *(void *)((char *)a2 + v18 + 200);
    *(void *)(v19 + 208) = v26;
    id v27 = (int *)type metadata accessor for SportsWidgetContentViewLayout();
    uint64_t v28 = v27[29];
    v109 = &v20[v28];
    __dsta = (void *)(v19 + v28);
    v106 = a2;
    uint64_t v29 = sub_1000E4CF0();
    v104 = *(void (**)(void *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v104(__dsta, v109, v29);
    *(void *)(v19 + v27[30]) = *(void *)&v20[v27[30]];
    *(void *)(v19 + v27[31]) = *(void *)&v20[v27[31]];
    *(void *)(v19 + v27[32]) = *(void *)&v20[v27[32]];
    *(void *)(v19 + v27[33]) = *(void *)&v20[v27[33]];
    *(void *)(v19 + v27[34]) = *(void *)&v20[v27[34]];
    *(void *)(v19 + v27[35]) = *(void *)&v20[v27[35]];
    *(void *)(v19 + v27[36]) = *(void *)&v20[v27[36]];
    *(void *)(v19 + v27[37]) = *(void *)&v20[v27[37]];
    *(void *)(v19 + v27[38]) = *(void *)&v20[v27[38]];
    *(void *)(v19 + v27[39]) = *(void *)&v20[v27[39]];
    *(unsigned char *)(v19 + v27[40]) = v20[v27[40]];
    *(void *)(v19 + v27[41]) = *(void *)&v20[v27[41]];
    uint64_t v30 = *(int *)(v112 + 28);
    uint64_t v31 = (uint64_t)v114 + v30;
    id v32 = (char *)v106 + v30;
    uint64_t v33 = *(void *)((char *)v106 + v30 + 8);
    *(void *)uint64_t v31 = *(void *)((char *)v106 + v30);
    *(void *)(v31 + 8) = v33;
    uint64_t v34 = *(void *)((char *)v106 + v30 + 24);
    *(void *)(v31 + 16) = *(void *)((char *)v106 + v30 + 16);
    *(void *)(v31 + 24) = v34;
    uint64_t v35 = *(void *)((char *)v106 + v30 + 40);
    *(void *)(v31 + 32) = *(void *)((char *)v106 + v30 + 32);
    *(void *)(v31 + 40) = v35;
    uint64_t v36 = *(void *)((char *)v106 + v30 + 56);
    *(void *)(v31 + 48) = *(void *)((char *)v106 + v30 + 48);
    *(void *)(v31 + 56) = v36;
    uint64_t v37 = *(void *)((char *)v106 + v30 + 72);
    *(void *)(v31 + 64) = *(void *)((char *)v106 + v30 + 64);
    *(void *)(v31 + 72) = v37;
    uint64_t v38 = *(void *)((char *)v106 + v30 + 88);
    *(void *)(v31 + 80) = *(void *)((char *)v106 + v30 + 80);
    *(void *)(v31 + 88) = v38;
    *(unsigned char *)(v31 + 96) = *((unsigned char *)v106 + v30 + 96);
    *(void *)(v31 + 104) = *(void *)((char *)v106 + v30 + 104);
    *(unsigned char *)(v31 + 112) = *((unsigned char *)v106 + v30 + 112);
    uint64_t v39 = *(void *)((char *)v106 + v30 + 128);
    *(void *)(v31 + 120) = *(void *)((char *)v106 + v30 + 120);
    *(void *)(v31 + 128) = v39;
    uint64_t v40 = *(void *)((char *)v106 + v30 + 144);
    *(void *)(v31 + 136) = *(void *)((char *)v106 + v30 + 136);
    *(void *)(v31 + 144) = v40;
    uint64_t v41 = *(void *)((char *)v106 + v30 + 160);
    *(void *)(v31 + 152) = *(void *)((char *)v106 + v30 + 152);
    *(void *)(v31 + 160) = v41;
    uint64_t v42 = *(void *)((char *)v106 + v30 + 176);
    *(void *)(v31 + 168) = *(void *)((char *)v106 + v30 + 168);
    *(void *)(v31 + 176) = v42;
    uint64_t v43 = *(void *)((char *)v106 + v30 + 192);
    *(void *)(v31 + 184) = *(void *)((char *)v106 + v30 + 184);
    *(void *)(v31 + 192) = v43;
    uint64_t v44 = *(void *)((char *)v106 + v30 + 208);
    *(void *)(v31 + 200) = *(void *)((char *)v106 + v30 + 200);
    *(void *)(v31 + 208) = v44;
    *(unsigned char *)(v31 + 216) = *((unsigned char *)v106 + v30 + 216);
    *(void *)(v31 + 224) = *(void *)((char *)v106 + v30 + 224);
    *(unsigned char *)(v31 + 232) = *((unsigned char *)v106 + v30 + 232);
    v113 = (int *)type metadata accessor for SportsWidgetContentViewModel(0);
    uint64_t v45 = v113[6];
    long long v46 = (void *)(v31 + v45);
    long long v47 = &v32[v45];
    type metadata accessor for SportsWidgetClock(0);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v52 = *((void *)v47 + 1);
      *long long v46 = *(void *)v47;
      v46[1] = v52;
      uint64_t v53 = *((void *)v47 + 3);
      v46[2] = *((void *)v47 + 2);
      v46[3] = v53;
      uint64_t v54 = *((void *)v47 + 5);
      v46[4] = *((void *)v47 + 4);
      v46[5] = v54;
      uint64_t v55 = *((void *)v47 + 7);
      v46[6] = *((void *)v47 + 6);
      v46[7] = v55;
      id v56 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v57 = v56[8];
      v100 = &v47[v57];
      v102 = (char *)v46 + v57;
      uint64_t v58 = sub_1000E3EE0();
      uint64_t v98 = *(void *)(v58 - 8);
      __int16 v59 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59(v102, v100, v58);
      uint64_t v60 = sub_1000082B4(&qword_100129F28);
      v107 = v59;
      v59(&v102[*(int *)(v60 + 36)], &v100[*(int *)(v60 + 36)], v58);
      uint64_t v61 = v56[9];
      v62 = (char *)v46 + v61;
      v63 = &v47[v61];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(&v47[v61], 1, v58))
      {
        uint64_t v64 = sub_1000082B4(&qword_100129F30);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        v107(v62, v63, v58);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v62, 0, 1, v58);
      }
      *((unsigned char *)v46 + v56[10]) = v47[v56[10]];
      *((unsigned char *)v46 + v56[11]) = v47[v56[11]];
      uint64_t v78 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v46 + *(int *)(v78 + 20)) = *(void *)&v47[*(int *)(v78 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v49 = *((void *)v47 + 1);
      *long long v46 = *(void *)v47;
      v46[1] = v49;
      uint64_t v50 = *((void *)v47 + 3);
      v46[2] = *((void *)v47 + 2);
      v46[3] = v50;
      uint64_t v51 = *((void *)v47 + 5);
      v46[4] = *((void *)v47 + 4);
      v46[5] = v51;
      *((unsigned char *)v46 + 48) = v47[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v65 = *((void *)v47 + 1);
      *long long v46 = *(void *)v47;
      v46[1] = v65;
      uint64_t v66 = *((void *)v47 + 3);
      v46[2] = *((void *)v47 + 2);
      v46[3] = v66;
      uint64_t v67 = *((void *)v47 + 5);
      v46[4] = *((void *)v47 + 4);
      v46[5] = v67;
      uint64_t v68 = *((void *)v47 + 7);
      v46[6] = *((void *)v47 + 6);
      v46[7] = v68;
      v69 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v70 = v69[8];
      v101 = &v47[v70];
      v103 = (char *)v46 + v70;
      uint64_t v71 = sub_1000E3EE0();
      uint64_t v99 = *(void *)(v71 - 8);
      v72 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v72(v103, v101, v71);
      uint64_t v73 = sub_1000082B4(&qword_100129F28);
      v105 = v72;
      v72(&v103[*(int *)(v73 + 36)], &v101[*(int *)(v73 + 36)], v71);
      uint64_t v74 = v69[9];
      v75 = (char *)v46 + v74;
      v76 = &v47[v74];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(&v47[v74], 1, v71))
      {
        uint64_t v77 = sub_1000082B4(&qword_100129F30);
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        v105(v75, v76, v71);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v75, 0, 1, v71);
      }
      *((unsigned char *)v46 + v69[10]) = v47[v69[10]];
      *((unsigned char *)v46 + v69[11]) = v47[v69[11]];
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v79 = v113[7];
    v80 = (void *)(v31 + v79);
    v81 = &v32[v79];
    uint64_t v82 = *((void *)v81 + 1);
    void *v80 = *(void *)v81;
    v80[1] = v82;
    uint64_t v108 = *((void *)v81 + 3);
    v80[2] = *((void *)v81 + 2);
    v80[3] = v108;
    uint64_t v83 = v113[8];
    uint64_t v84 = v31 + v83;
    v85 = &v32[v83];
    uint64_t v86 = *((void *)v85 + 1);
    *(void *)uint64_t v84 = *(void *)v85;
    *(void *)(v84 + 8) = v86;
    *(unsigned char *)(v84 + 16) = v85[16];
    *(void *)(v84 + 24) = *((void *)v85 + 3);
    *(unsigned char *)(v84 + 32) = v85[32];
    *(void *)(v84 + 40) = *((void *)v85 + 5);
    *(unsigned char *)(v84 + 48) = v85[48];
    *(unsigned char *)(v31 + v113[9]) = v32[v113[9]];
    *(unsigned char *)(v31 + v113[10]) = v32[v113[10]];
    *(unsigned char *)(v31 + v113[11]) = v32[v113[11]];
    *(unsigned char *)(v31 + v113[12]) = v32[v113[12]];
    uint64_t v87 = v113[13];
    __dst = (void *)(v31 + v87);
    v88 = &v32[v87];
    uint64_t v89 = sub_1000E3E00();
    uint64_t v90 = *(void *)(v89 - 8);
    v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v91(v88, 1, v89))
    {
      uint64_t v92 = sub_1000082B4(&qword_100129F38);
      memcpy(__dst, v88, *(void *)(*(void *)(v92 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v90 + 16))(__dst, v88, v89);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56))(__dst, 0, 1, v89);
    }
    id v9 = v114;
    *(unsigned char *)(v31 + v113[14]) = v32[v113[14]];
    uint64_t v93 = v113[15];
    v94 = (void *)(v31 + v93);
    v95 = &v32[v93];
    uint64_t v96 = *((void *)v95 + 1);
    void *v94 = *(void *)v95;
    v94[1] = v96;
    swift_bridgeObjectRetain();
  }
  return v9;
}

uint64_t sub_10000954C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100009558(uint64_t a1, int *a2)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_100009A3C(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for SportsWidgetContentViewLayout() + 116);
  uint64_t v7 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  uint64_t v8 = a1 + a2[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = type metadata accessor for SportsWidgetContentViewModel(0);
  uint64_t v10 = v8 + *(int *)(v9 + 24);
  type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v20 = v10 + *(int *)(v19 + 32);
      uint64_t v21 = sub_1000E3EE0();
      uint64_t v22 = *(void *)(v21 - 8);
      long long v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v23(v20, v21);
      uint64_t v24 = sub_1000082B4(&qword_100129F28);
      v23(v20 + *(int *)(v24 + 36), v21);
      uint64_t v25 = v10 + *(int *)(v19 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v25, 1, v21)) {
        v23(v25, v21);
      }
      type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      goto LABEL_13;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v13 = v10 + *(int *)(v12 + 32);
      uint64_t v14 = sub_1000E3EE0();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v16(v13, v14);
      uint64_t v17 = sub_1000082B4(&qword_100129F28);
      v16(v13 + *(int *)(v17 + 36), v14);
      uint64_t v18 = v10 + *(int *)(v12 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v18, 1, v14)) {
        v16(v18, v14);
      }
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v26 = v8 + *(int *)(v9 + 52);
  uint64_t v27 = sub_1000E3E00();
  uint64_t v28 = *(void *)(v27 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100009A3C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void *sub_100009A48(void *a1, void *a2, int *a3)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E41D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1;
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = v8;
  uint64_t v112 = v8;
  int v11 = (char *)a2 + v7;
  uint64_t v12 = *(void *)v11;
  uint64_t v13 = a3;
  __dsta = a3;
  char v14 = v11[8];
  sub_10000954C(*(void *)v11, v14);
  *(void *)uint64_t v9 = v12;
  v9[8] = v14;
  uint64_t v15 = v13[6];
  uint64_t v16 = a2;
  v110 = a2;
  uint64_t v17 = (uint64_t)v10 + v15;
  uint64_t v18 = (char *)v16 + v15;
  long long v19 = *(_OWORD *)((char *)v16 + v15 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)v16 + v15);
  *(_OWORD *)(v17 + 16) = v19;
  long long v20 = *(_OWORD *)((char *)v16 + v15 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)((char *)v16 + v15 + 32);
  *(_OWORD *)(v17 + 48) = v20;
  long long v21 = *(_OWORD *)((char *)v16 + v15 + 80);
  *(_OWORD *)(v17 + 64) = *(_OWORD *)((char *)v16 + v15 + 64);
  *(_OWORD *)(v17 + 80) = v21;
  *(_OWORD *)(v17 + 96) = *(_OWORD *)((char *)v16 + v15 + 96);
  uint64_t v22 = *(void *)((char *)v16 + v15 + 120);
  *(void *)(v17 + 112) = *(void *)((char *)v16 + v15 + 112);
  *(void *)(v17 + 120) = v22;
  *(void *)(v17 + 128) = *(void *)((char *)v16 + v15 + 128);
  *(_OWORD *)(v17 + 136) = *(_OWORD *)((char *)v16 + v15 + 136);
  *(unsigned char *)(v17 + 152) = *((unsigned char *)v16 + v15 + 152);
  *(void *)(v17 + 160) = *(void *)((char *)v16 + v15 + 160);
  *(_OWORD *)(v17 + 168) = *(_OWORD *)((char *)v16 + v15 + 168);
  uint64_t v23 = *(void *)((char *)v16 + v15 + 192);
  *(void *)(v17 + 184) = *(void *)((char *)v16 + v15 + 184);
  *(void *)(v17 + 192) = v23;
  uint64_t v24 = *(void *)((char *)v16 + v15 + 208);
  *(void *)(v17 + 200) = *(void *)((char *)v16 + v15 + 200);
  *(void *)(v17 + 208) = v24;
  uint64_t v25 = (int *)type metadata accessor for SportsWidgetContentViewLayout();
  uint64_t v26 = v25[29];
  v104 = &v18[v26];
  uint64_t v107 = v17 + v26;
  uint64_t v27 = sub_1000E4CF0();
  v102 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v102(v107, v104, v27);
  *(void *)(v17 + v25[30]) = *(void *)&v18[v25[30]];
  *(void *)(v17 + v25[31]) = *(void *)&v18[v25[31]];
  *(void *)(v17 + v25[32]) = *(void *)&v18[v25[32]];
  *(void *)(v17 + v25[33]) = *(void *)&v18[v25[33]];
  *(void *)(v17 + v25[34]) = *(void *)&v18[v25[34]];
  *(void *)(v17 + v25[35]) = *(void *)&v18[v25[35]];
  *(void *)(v17 + v25[36]) = *(void *)&v18[v25[36]];
  *(void *)(v17 + v25[37]) = *(void *)&v18[v25[37]];
  *(void *)(v17 + v25[38]) = *(void *)&v18[v25[38]];
  *(void *)(v17 + v25[39]) = *(void *)&v18[v25[39]];
  *(unsigned char *)(v17 + v25[40]) = v18[v25[40]];
  *(void *)(v17 + v25[41]) = *(void *)&v18[v25[41]];
  uint64_t v28 = __dsta[7];
  uint64_t v29 = (uint64_t)v112 + v28;
  uint64_t v30 = (char *)v110 + v28;
  uint64_t v31 = *(void *)((char *)v110 + v28 + 8);
  *(void *)uint64_t v29 = *(void *)((char *)v110 + v28);
  *(void *)(v29 + 8) = v31;
  uint64_t v32 = *(void *)((char *)v110 + v28 + 24);
  *(void *)(v29 + 16) = *(void *)((char *)v110 + v28 + 16);
  *(void *)(v29 + 24) = v32;
  uint64_t v33 = *(void *)((char *)v110 + v28 + 40);
  *(void *)(v29 + 32) = *(void *)((char *)v110 + v28 + 32);
  *(void *)(v29 + 40) = v33;
  uint64_t v34 = *(void *)((char *)v110 + v28 + 56);
  *(void *)(v29 + 48) = *(void *)((char *)v110 + v28 + 48);
  *(void *)(v29 + 56) = v34;
  uint64_t v35 = *(void *)((char *)v110 + v28 + 72);
  *(void *)(v29 + 64) = *(void *)((char *)v110 + v28 + 64);
  *(void *)(v29 + 72) = v35;
  uint64_t v36 = *(void *)((char *)v110 + v28 + 88);
  *(void *)(v29 + 80) = *(void *)((char *)v110 + v28 + 80);
  *(void *)(v29 + 88) = v36;
  *(unsigned char *)(v29 + 96) = *((unsigned char *)v110 + v28 + 96);
  *(void *)(v29 + 104) = *(void *)((char *)v110 + v28 + 104);
  *(unsigned char *)(v29 + 112) = *((unsigned char *)v110 + v28 + 112);
  uint64_t v37 = *(void *)((char *)v110 + v28 + 128);
  *(void *)(v29 + 120) = *(void *)((char *)v110 + v28 + 120);
  *(void *)(v29 + 128) = v37;
  uint64_t v38 = *(void *)((char *)v110 + v28 + 144);
  *(void *)(v29 + 136) = *(void *)((char *)v110 + v28 + 136);
  *(void *)(v29 + 144) = v38;
  uint64_t v39 = *(void *)((char *)v110 + v28 + 160);
  *(void *)(v29 + 152) = *(void *)((char *)v110 + v28 + 152);
  *(void *)(v29 + 160) = v39;
  uint64_t v40 = *(void *)((char *)v110 + v28 + 176);
  *(void *)(v29 + 168) = *(void *)((char *)v110 + v28 + 168);
  *(void *)(v29 + 176) = v40;
  uint64_t v41 = *(void *)((char *)v110 + v28 + 192);
  *(void *)(v29 + 184) = *(void *)((char *)v110 + v28 + 184);
  *(void *)(v29 + 192) = v41;
  uint64_t v42 = *(void *)((char *)v110 + v28 + 208);
  *(void *)(v29 + 200) = *(void *)((char *)v110 + v28 + 200);
  *(void *)(v29 + 208) = v42;
  *(unsigned char *)(v29 + 216) = *((unsigned char *)v110 + v28 + 216);
  *(void *)(v29 + 224) = *(void *)((char *)v110 + v28 + 224);
  *(unsigned char *)(v29 + 232) = *((unsigned char *)v110 + v28 + 232);
  v111 = (int *)type metadata accessor for SportsWidgetContentViewModel(0);
  uint64_t v43 = v111[6];
  uint64_t v44 = (void *)(v29 + v43);
  uint64_t v45 = &v30[v43];
  type metadata accessor for SportsWidgetClock(0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v50 = *((void *)v45 + 1);
    *uint64_t v44 = *(void *)v45;
    v44[1] = v50;
    uint64_t v51 = *((void *)v45 + 3);
    v44[2] = *((void *)v45 + 2);
    v44[3] = v51;
    uint64_t v52 = *((void *)v45 + 5);
    v44[4] = *((void *)v45 + 4);
    v44[5] = v52;
    uint64_t v53 = *((void *)v45 + 7);
    v44[6] = *((void *)v45 + 6);
    v44[7] = v53;
    uint64_t v54 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v55 = v54[8];
    uint64_t v98 = &v45[v55];
    v100 = (char *)v44 + v55;
    uint64_t v56 = sub_1000E3EE0();
    uint64_t v96 = *(void *)(v56 - 8);
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57(v100, v98, v56);
    uint64_t v58 = sub_1000082B4(&qword_100129F28);
    v105 = v57;
    v57(&v100[*(int *)(v58 + 36)], &v98[*(int *)(v58 + 36)], v56);
    uint64_t v59 = v54[9];
    uint64_t v60 = (char *)v44 + v59;
    uint64_t v61 = &v45[v59];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(&v45[v59], 1, v56))
    {
      uint64_t v62 = sub_1000082B4(&qword_100129F30);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      v105(v60, v61, v56);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v60, 0, 1, v56);
    }
    *((unsigned char *)v44 + v54[10]) = v45[v54[10]];
    *((unsigned char *)v44 + v54[11]) = v45[v54[11]];
    uint64_t v76 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v44 + *(int *)(v76 + 20)) = *(void *)&v45[*(int *)(v76 + 20)];
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v47 = *((void *)v45 + 1);
    *uint64_t v44 = *(void *)v45;
    v44[1] = v47;
    uint64_t v48 = *((void *)v45 + 3);
    v44[2] = *((void *)v45 + 2);
    v44[3] = v48;
    uint64_t v49 = *((void *)v45 + 5);
    v44[4] = *((void *)v45 + 4);
    v44[5] = v49;
    *((unsigned char *)v44 + 48) = v45[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v63 = *((void *)v45 + 1);
    *uint64_t v44 = *(void *)v45;
    v44[1] = v63;
    uint64_t v64 = *((void *)v45 + 3);
    v44[2] = *((void *)v45 + 2);
    v44[3] = v64;
    uint64_t v65 = *((void *)v45 + 5);
    v44[4] = *((void *)v45 + 4);
    v44[5] = v65;
    uint64_t v66 = *((void *)v45 + 7);
    v44[6] = *((void *)v45 + 6);
    v44[7] = v66;
    uint64_t v67 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v68 = v67[8];
    uint64_t v99 = &v45[v68];
    v101 = (char *)v44 + v68;
    uint64_t v69 = sub_1000E3EE0();
    uint64_t v97 = *(void *)(v69 - 8);
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70(v101, v99, v69);
    uint64_t v71 = sub_1000082B4(&qword_100129F28);
    v103 = v70;
    v70(&v101[*(int *)(v71 + 36)], &v99[*(int *)(v71 + 36)], v69);
    uint64_t v72 = v67[9];
    uint64_t v73 = (char *)v44 + v72;
    uint64_t v74 = &v45[v72];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(&v45[v72], 1, v69))
    {
      uint64_t v75 = sub_1000082B4(&qword_100129F30);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      v103(v73, v74, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v73, 0, 1, v69);
    }
    *((unsigned char *)v44 + v67[10]) = v45[v67[10]];
    *((unsigned char *)v44 + v67[11]) = v45[v67[11]];
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v77 = v111[7];
  uint64_t v78 = (void *)(v29 + v77);
  uint64_t v79 = &v30[v77];
  uint64_t v80 = *((void *)v79 + 1);
  *uint64_t v78 = *(void *)v79;
  v78[1] = v80;
  uint64_t v106 = *((void *)v79 + 3);
  v78[2] = *((void *)v79 + 2);
  v78[3] = v106;
  uint64_t v81 = v111[8];
  uint64_t v82 = v29 + v81;
  uint64_t v83 = &v30[v81];
  uint64_t v84 = *((void *)v83 + 1);
  *(void *)uint64_t v82 = *(void *)v83;
  *(void *)(v82 + 8) = v84;
  *(unsigned char *)(v82 + 16) = v83[16];
  *(void *)(v82 + 24) = *((void *)v83 + 3);
  *(unsigned char *)(v82 + 32) = v83[32];
  *(void *)(v82 + 40) = *((void *)v83 + 5);
  *(unsigned char *)(v82 + 48) = v83[48];
  *(unsigned char *)(v29 + v111[9]) = v30[v111[9]];
  *(unsigned char *)(v29 + v111[10]) = v30[v111[10]];
  *(unsigned char *)(v29 + v111[11]) = v30[v111[11]];
  *(unsigned char *)(v29 + v111[12]) = v30[v111[12]];
  uint64_t v85 = v111[13];
  __dst = (void *)(v29 + v85);
  uint64_t v86 = &v30[v85];
  uint64_t v87 = sub_1000E3E00();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v89(v86, 1, v87))
  {
    uint64_t v90 = sub_1000082B4(&qword_100129F38);
    memcpy(__dst, v86, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v88 + 16))(__dst, v86, v87);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(__dst, 0, 1, v87);
  }
  *(unsigned char *)(v29 + v111[14]) = v30[v111[14]];
  uint64_t v91 = v111[15];
  uint64_t v92 = (void *)(v29 + v91);
  uint64_t v93 = &v30[v91];
  uint64_t v94 = *((void *)v93 + 1);
  *uint64_t v92 = *(void *)v93;
  v92[1] = v94;
  swift_bridgeObjectRetain();
  return v112;
}

void *sub_10000A42C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E41D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_10000954C(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_100009A3C(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(void *)uint64_t v15 = *(void *)((char *)a2 + v14);
  *((void *)v15 + 1) = *(void *)((char *)a2 + v14 + 8);
  *((void *)v15 + 2) = *(void *)((char *)a2 + v14 + 16);
  *((void *)v15 + 3) = *(void *)((char *)a2 + v14 + 24);
  *((void *)v15 + 4) = *(void *)((char *)a2 + v14 + 32);
  *((void *)v15 + 5) = *(void *)((char *)a2 + v14 + 40);
  *((void *)v15 + 6) = *(void *)((char *)a2 + v14 + 48);
  *((void *)v15 + 7) = *(void *)((char *)a2 + v14 + 56);
  *((void *)v15 + 8) = *(void *)((char *)a2 + v14 + 64);
  *((void *)v15 + 9) = *(void *)((char *)a2 + v14 + 72);
  *((void *)v15 + 10) = *(void *)((char *)a2 + v14 + 80);
  *((void *)v15 + 11) = *(void *)((char *)a2 + v14 + 88);
  *((void *)v15 + 12) = *(void *)((char *)a2 + v14 + 96);
  *((void *)v15 + 13) = *(void *)((char *)a2 + v14 + 104);
  *((void *)v15 + 14) = *(void *)((char *)a2 + v14 + 112);
  swift_retain();
  swift_release();
  *((void *)v15 + 15) = *((void *)v16 + 15);
  swift_retain();
  swift_release();
  *((void *)v15 + 16) = *((void *)v16 + 16);
  swift_retain();
  swift_release();
  *((void *)v15 + 17) = *((void *)v16 + 17);
  *((void *)v15 + 18) = *((void *)v16 + 18);
  v15[152] = v16[152];
  *((void *)v15 + 20) = *((void *)v16 + 20);
  *((void *)v15 + 21) = *((void *)v16 + 21);
  *((void *)v15 + 22) = *((void *)v16 + 22);
  *((void *)v15 + 23) = *((void *)v16 + 23);
  *((void *)v15 + 24) = *((void *)v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v15 + 25) = *((void *)v16 + 25);
  swift_retain();
  swift_release();
  *((void *)v15 + 26) = *((void *)v16 + 26);
  swift_retain();
  swift_release();
  uint64_t v17 = (int *)type metadata accessor for SportsWidgetContentViewLayout();
  uint64_t v18 = v17[29];
  long long v19 = &v15[v18];
  long long v20 = &v16[v18];
  uint64_t v21 = sub_1000E4CF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(void *)&v15[v17[30]] = *(void *)&v16[v17[30]];
  *(void *)&v15[v17[31]] = *(void *)&v16[v17[31]];
  *(void *)&v15[v17[32]] = *(void *)&v16[v17[32]];
  *(void *)&v15[v17[33]] = *(void *)&v16[v17[33]];
  *(void *)&v15[v17[34]] = *(void *)&v16[v17[34]];
  *(void *)&v15[v17[35]] = *(void *)&v16[v17[35]];
  *(void *)&v15[v17[36]] = *(void *)&v16[v17[36]];
  *(void *)&v15[v17[37]] = *(void *)&v16[v17[37]];
  swift_retain();
  swift_release();
  *(void *)&v15[v17[38]] = *(void *)&v16[v17[38]];
  swift_retain();
  swift_release();
  *(void *)&v15[v17[39]] = *(void *)&v16[v17[39]];
  v15[v17[40]] = v16[v17[40]];
  *(void *)&v15[v17[41]] = *(void *)&v16[v17[41]];
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  *(void *)uint64_t v23 = *(void *)((char *)a2 + v22);
  *((void *)v23 + 1) = *(void *)((char *)a2 + v22 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 2) = *((void *)v24 + 2);
  *((void *)v23 + 3) = *((void *)v24 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 4) = *((void *)v24 + 4);
  *((void *)v23 + 5) = *((void *)v24 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 6) = *((void *)v24 + 6);
  *((void *)v23 + 7) = *((void *)v24 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 8) = *((void *)v24 + 8);
  *((void *)v23 + 9) = *((void *)v24 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 10) = *((void *)v24 + 10);
  *((void *)v23 + 11) = *((void *)v24 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[96] = v24[96];
  *((void *)v23 + 13) = *((void *)v24 + 13);
  swift_retain();
  swift_release();
  v23[112] = v24[112];
  *((void *)v23 + 15) = *((void *)v24 + 15);
  *((void *)v23 + 16) = *((void *)v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 17) = *((void *)v24 + 17);
  *((void *)v23 + 18) = *((void *)v24 + 18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 19) = *((void *)v24 + 19);
  *((void *)v23 + 20) = *((void *)v24 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 21) = *((void *)v24 + 21);
  *((void *)v23 + 22) = *((void *)v24 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 23) = *((void *)v24 + 23);
  *((void *)v23 + 24) = *((void *)v24 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v23 + 25) = *((void *)v24 + 25);
  *((void *)v23 + 26) = *((void *)v24 + 26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[216] = v24[216];
  *((void *)v23 + 28) = *((void *)v24 + 28);
  swift_retain();
  swift_release();
  v23[232] = v24[232];
  uint64_t v25 = type metadata accessor for SportsWidgetContentViewModel(0);
  uint64_t v26 = (int *)v25;
  uint64_t v78 = a1;
  if (a1 != a2)
  {
    uint64_t v27 = *(int *)(v25 + 24);
    uint64_t v28 = &v23[v27];
    uint64_t v29 = &v24[v27];
    sub_1000146F4((uint64_t)&v23[v27], type metadata accessor for SportsWidgetClock);
    type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      *((void *)v28 + 2) = *((void *)v29 + 2);
      *((void *)v28 + 3) = *((void *)v29 + 3);
      *((void *)v28 + 4) = *((void *)v29 + 4);
      *((void *)v28 + 5) = *((void *)v29 + 5);
      *((void *)v28 + 6) = *((void *)v29 + 6);
      *((void *)v28 + 7) = *((void *)v29 + 7);
      uint64_t v31 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v32 = *(int *)(v31 + 32);
      uint64_t v33 = &v28[v32];
      uint64_t v68 = (int *)v31;
      uint64_t v70 = &v29[v32];
      uint64_t v34 = sub_1000E3EE0();
      uint64_t v76 = *(void *)(v34 - 8);
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v33, v70, v34);
      uint64_t v36 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      uint64_t v72 = v35;
      v35(&v33[v36], &v70[v36], v34);
      uint64_t v37 = v68[9];
      __dst = &v28[v37];
      uint64_t v38 = &v29[v37];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(&v29[v37], 1, v34))
      {
        uint64_t v39 = sub_1000082B4(&qword_100129F30);
        memcpy(__dst, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        v72(__dst, v38, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v34);
      }
      v28[v68[10]] = v29[v68[10]];
      v28[v68[11]] = v29[v68[11]];
      uint64_t v48 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)&v28[*(int *)(v48 + 20)] = *(void *)&v29[*(int *)(v48 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      *((void *)v28 + 2) = *((void *)v29 + 2);
      *((void *)v28 + 3) = *((void *)v29 + 3);
      *((void *)v28 + 4) = *((void *)v29 + 4);
      *((void *)v28 + 5) = *((void *)v29 + 5);
      v28[48] = v29[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      *((void *)v28 + 2) = *((void *)v29 + 2);
      *((void *)v28 + 3) = *((void *)v29 + 3);
      *((void *)v28 + 4) = *((void *)v29 + 4);
      *((void *)v28 + 5) = *((void *)v29 + 5);
      *((void *)v28 + 6) = *((void *)v29 + 6);
      *((void *)v28 + 7) = *((void *)v29 + 7);
      uint64_t v77 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v40 = v77[8];
      uint64_t v69 = &v28[v40];
      uint64_t v41 = &v29[v40];
      uint64_t v42 = sub_1000E3EE0();
      __dsta = *(void **)(v42 - 8);
      uint64_t v43 = (void (*)(char *, char *, uint64_t))__dsta[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43(v69, v41, v42);
      uint64_t v44 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      uint64_t v71 = v43;
      v43(&v69[v44], &v41[v44], v42);
      uint64_t v45 = v77[9];
      uint64_t v73 = &v28[v45];
      long long v46 = &v29[v45];
      if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])(&v29[v45], 1, v42))
      {
        uint64_t v47 = sub_1000082B4(&qword_100129F30);
        memcpy(v73, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        v71(v73, v46, v42);
        ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v73, 0, 1, v42);
      }
      v28[v77[10]] = v29[v77[10]];
      v28[v77[11]] = v29[v77[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v49 = v26[7];
  uint64_t v50 = &v23[v49];
  uint64_t v51 = &v24[v49];
  *(void *)uint64_t v50 = *(void *)&v24[v49];
  *((void *)v50 + 1) = *(void *)&v24[v49 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v50 + 2) = *((void *)v51 + 2);
  *((void *)v50 + 3) = *((void *)v51 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v52 = v26[8];
  uint64_t v53 = &v23[v52];
  uint64_t v54 = &v24[v52];
  *(void *)uint64_t v53 = *(void *)&v24[v52];
  *((void *)v53 + 1) = *(void *)&v24[v52 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53[16] = v54[16];
  *((void *)v53 + 3) = *((void *)v54 + 3);
  swift_retain();
  swift_release();
  v53[32] = v54[32];
  *((void *)v53 + 5) = *((void *)v54 + 5);
  swift_retain();
  swift_release();
  v53[48] = v54[48];
  v23[v26[9]] = v24[v26[9]];
  v23[v26[10]] = v24[v26[10]];
  v23[v26[11]] = v24[v26[11]];
  v23[v26[12]] = v24[v26[12]];
  uint64_t v55 = v26[13];
  uint64_t v56 = &v23[v55];
  uint64_t v57 = &v24[v55];
  uint64_t v58 = sub_1000E3E00();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  int v61 = v60(v56, 1, v58);
  int v62 = v60(v57, 1, v58);
  if (!v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v56, v57, v58);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
    goto LABEL_24;
  }
  if (v62)
  {
LABEL_24:
    uint64_t v63 = sub_1000082B4(&qword_100129F38);
    memcpy(v56, v57, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
LABEL_25:
  v23[v26[14]] = v24[v26[14]];
  uint64_t v64 = v26[15];
  uint64_t v65 = &v23[v64];
  uint64_t v66 = &v24[v64];
  *(void *)uint64_t v65 = *(void *)v66;
  *((void *)v65 + 1) = *((void *)v66 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v78;
}

char *sub_10000B09C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E41D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  long long v14 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)&a2[v9];
  *((_OWORD *)v12 + 1) = v14;
  long long v15 = *(_OWORD *)&a2[v9 + 48];
  *((_OWORD *)v12 + 2) = *(_OWORD *)&a2[v9 + 32];
  *((_OWORD *)v12 + 3) = v15;
  long long v16 = *(_OWORD *)&a2[v9 + 80];
  *((_OWORD *)v12 + 4) = *(_OWORD *)&a2[v9 + 64];
  *((_OWORD *)v12 + 5) = v16;
  long long v17 = *(_OWORD *)&a2[v9 + 112];
  *((_OWORD *)v12 + 6) = *(_OWORD *)&a2[v9 + 96];
  *((_OWORD *)v12 + 7) = v17;
  *((_OWORD *)v12 + 8) = *(_OWORD *)&a2[v9 + 128];
  *((void *)v12 + 18) = *(void *)&a2[v9 + 144];
  v12[152] = a2[v9 + 152];
  *((void *)v12 + 20) = *(void *)&a2[v9 + 160];
  *(_OWORD *)(v12 + 168) = *(_OWORD *)&a2[v9 + 168];
  *(_OWORD *)(v12 + 184) = *(_OWORD *)&a2[v9 + 184];
  *(_OWORD *)(v12 + 200) = *(_OWORD *)&a2[v9 + 200];
  uint64_t v18 = (int *)type metadata accessor for SportsWidgetContentViewLayout();
  uint64_t v19 = v18[29];
  long long v20 = &v12[v19];
  uint64_t v21 = &v13[v19];
  uint64_t v22 = sub_1000E4CF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  *(void *)&v12[v18[30]] = *(void *)&v13[v18[30]];
  *(void *)&v12[v18[31]] = *(void *)&v13[v18[31]];
  *(void *)&v12[v18[32]] = *(void *)&v13[v18[32]];
  *(void *)&v12[v18[33]] = *(void *)&v13[v18[33]];
  *(void *)&v12[v18[34]] = *(void *)&v13[v18[34]];
  *(void *)&v12[v18[35]] = *(void *)&v13[v18[35]];
  *(void *)&v12[v18[36]] = *(void *)&v13[v18[36]];
  *(void *)&v12[v18[37]] = *(void *)&v13[v18[37]];
  *(void *)&v12[v18[38]] = *(void *)&v13[v18[38]];
  *(void *)&v12[v18[39]] = *(void *)&v13[v18[39]];
  v12[v18[40]] = v13[v18[40]];
  *(void *)&v12[v18[41]] = *(void *)&v13[v18[41]];
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  long long v26 = *(_OWORD *)&a2[v23 + 80];
  *((_OWORD *)v24 + 4) = *(_OWORD *)&a2[v23 + 64];
  *((_OWORD *)v24 + 5) = v26;
  *((_OWORD *)v24 + 6) = *(_OWORD *)&a2[v23 + 96];
  v24[112] = a2[v23 + 112];
  long long v27 = *(_OWORD *)&a2[v23 + 16];
  *(_OWORD *)uint64_t v24 = *(_OWORD *)&a2[v23];
  *((_OWORD *)v24 + 1) = v27;
  long long v28 = *(_OWORD *)&a2[v23 + 48];
  *((_OWORD *)v24 + 2) = *(_OWORD *)&a2[v23 + 32];
  *((_OWORD *)v24 + 3) = v28;
  long long v29 = *(_OWORD *)&a2[v23 + 120];
  long long v30 = *(_OWORD *)&a2[v23 + 136];
  long long v31 = *(_OWORD *)&a2[v23 + 152];
  *(_OWORD *)(v24 + 168) = *(_OWORD *)&a2[v23 + 168];
  *(_OWORD *)(v24 + 152) = v31;
  *(_OWORD *)(v24 + 136) = v30;
  *(_OWORD *)(v24 + 120) = v29;
  long long v32 = *(_OWORD *)&a2[v23 + 184];
  long long v33 = *(_OWORD *)&a2[v23 + 200];
  long long v34 = *(_OWORD *)&a2[v23 + 216];
  v24[232] = a2[v23 + 232];
  *(_OWORD *)(v24 + 216) = v34;
  *(_OWORD *)(v24 + 200) = v33;
  *(_OWORD *)(v24 + 184) = v32;
  uint64_t v35 = (int *)type metadata accessor for SportsWidgetContentViewModel(0);
  uint64_t v36 = v35[6];
  uint64_t v37 = &v24[v36];
  uint64_t v38 = &v25[v36];
  uint64_t v39 = type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v88 = a1;
    long long v53 = *((_OWORD *)v38 + 1);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v53;
    long long v54 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v54;
    uint64_t v87 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v55 = v87[8];
    uint64_t v56 = &v37[v55];
    uint64_t v57 = &v38[v55];
    uint64_t v58 = sub_1000E3EE0();
    uint64_t v85 = *(void *)(v58 - 8);
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
    v59(v56, v57, v58);
    uint64_t v60 = sub_1000082B4(&qword_100129F28);
    uint64_t v83 = v59;
    v59(&v56[*(int *)(v60 + 36)], &v57[*(int *)(v60 + 36)], v58);
    uint64_t v61 = v87[9];
    int v62 = &v37[v61];
    uint64_t v63 = &v38[v61];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(&v38[v61], 1, v58))
    {
      uint64_t v64 = sub_1000082B4(&qword_100129F30);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      v83(v62, v63, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v62, 0, 1, v58);
    }
    v37[v87[10]] = v38[v87[10]];
    v37[v87[11]] = v38[v87[11]];
    uint64_t v65 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)&v37[*(int *)(v65 + 20)] = *(void *)&v38[*(int *)(v65 + 20)];
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      goto LABEL_16;
    }
    uint64_t v88 = a1;
    long long v41 = *((_OWORD *)v38 + 1);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v41;
    long long v42 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v42;
    uint64_t v86 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v43 = v86[8];
    uint64_t v44 = &v37[v43];
    uint64_t v45 = &v38[v43];
    uint64_t v46 = sub_1000E3EE0();
    uint64_t v84 = *(void *)(v46 - 8);
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
    v47(v44, v45, v46);
    uint64_t v48 = sub_1000082B4(&qword_100129F28);
    uint64_t v82 = v47;
    v47(&v44[*(int *)(v48 + 36)], &v45[*(int *)(v48 + 36)], v46);
    uint64_t v49 = v86[9];
    uint64_t v50 = &v37[v49];
    uint64_t v51 = &v38[v49];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(&v38[v49], 1, v46))
    {
      uint64_t v52 = sub_1000082B4(&qword_100129F30);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      v82(v50, v51, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v50, 0, 1, v46);
    }
    v37[v86[10]] = v38[v86[10]];
    v37[v86[11]] = v38[v86[11]];
  }
  swift_storeEnumTagMultiPayload();
  a1 = v88;
LABEL_16:
  uint64_t v66 = v35[7];
  uint64_t v67 = &v24[v66];
  uint64_t v68 = &v25[v66];
  long long v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  uint64_t v70 = v35[8];
  uint64_t v71 = &v24[v70];
  uint64_t v72 = &v25[v70];
  v71[48] = v72[48];
  long long v73 = *((_OWORD *)v72 + 2);
  long long v74 = *(_OWORD *)v72;
  *((_OWORD *)v71 + 1) = *((_OWORD *)v72 + 1);
  *((_OWORD *)v71 + 2) = v73;
  *(_OWORD *)uint64_t v71 = v74;
  v24[v35[9]] = v25[v35[9]];
  v24[v35[10]] = v25[v35[10]];
  v24[v35[11]] = v25[v35[11]];
  v24[v35[12]] = v25[v35[12]];
  uint64_t v75 = v35[13];
  uint64_t v76 = &v24[v75];
  uint64_t v77 = &v25[v75];
  uint64_t v78 = sub_1000E3E00();
  uint64_t v79 = *(void *)(v78 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
  {
    uint64_t v80 = sub_1000082B4(&qword_100129F38);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  }
  v24[v35[14]] = v25[v35[14]];
  *(_OWORD *)&v24[v35[15]] = *(_OWORD *)&v25[v35[15]];
  return a1;
}

char *sub_10000B81C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    uint64_t v6 = sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_100009A3C(v12, v13);
  uint64_t v14 = a3[6];
  long long v15 = &a1[v14];
  long long v16 = &a2[v14];
  *(void *)long long v15 = *(void *)&a2[v14];
  *((void *)v15 + 1) = *(void *)&a2[v14 + 8];
  long long v17 = *(_OWORD *)&a2[v14 + 32];
  *((_OWORD *)v15 + 1) = *(_OWORD *)&a2[v14 + 16];
  *((_OWORD *)v15 + 2) = v17;
  long long v18 = *(_OWORD *)&a2[v14 + 64];
  *((_OWORD *)v15 + 3) = *(_OWORD *)&a2[v14 + 48];
  *((_OWORD *)v15 + 4) = v18;
  *((_OWORD *)v15 + 5) = *(_OWORD *)&a2[v14 + 80];
  *((void *)v15 + 12) = *(void *)&a2[v14 + 96];
  *((void *)v15 + 13) = *(void *)&a2[v14 + 104];
  *((void *)v15 + 14) = *(void *)&a2[v14 + 112];
  swift_release();
  *((void *)v15 + 15) = *((void *)v16 + 15);
  swift_release();
  *((void *)v15 + 16) = *((void *)v16 + 16);
  swift_release();
  *((void *)v15 + 17) = *((void *)v16 + 17);
  *((void *)v15 + 18) = *((void *)v16 + 18);
  v15[152] = v16[152];
  *((void *)v15 + 20) = *((void *)v16 + 20);
  *(_OWORD *)(v15 + 168) = *(_OWORD *)(v16 + 168);
  uint64_t v19 = *((void *)v16 + 24);
  *((void *)v15 + 23) = *((void *)v16 + 23);
  *((void *)v15 + 24) = v19;
  swift_bridgeObjectRelease();
  *((void *)v15 + 25) = *((void *)v16 + 25);
  swift_release();
  *((void *)v15 + 26) = *((void *)v16 + 26);
  swift_release();
  long long v20 = (int *)type metadata accessor for SportsWidgetContentViewLayout();
  uint64_t v21 = v20[29];
  uint64_t v22 = &v15[v21];
  uint64_t v23 = &v16[v21];
  uint64_t v24 = sub_1000E4CF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  *(void *)&v15[v20[30]] = *(void *)&v16[v20[30]];
  *(void *)&v15[v20[31]] = *(void *)&v16[v20[31]];
  *(void *)&v15[v20[32]] = *(void *)&v16[v20[32]];
  *(void *)&v15[v20[33]] = *(void *)&v16[v20[33]];
  *(void *)&v15[v20[34]] = *(void *)&v16[v20[34]];
  *(void *)&v15[v20[35]] = *(void *)&v16[v20[35]];
  *(void *)&v15[v20[36]] = *(void *)&v16[v20[36]];
  *(void *)&v15[v20[37]] = *(void *)&v16[v20[37]];
  swift_release();
  *(void *)&v15[v20[38]] = *(void *)&v16[v20[38]];
  swift_release();
  *(void *)&v15[v20[39]] = *(void *)&v16[v20[39]];
  v15[v20[40]] = v16[v20[40]];
  *(void *)&v15[v20[41]] = *(void *)&v16[v20[41]];
  uint64_t v25 = a3[7];
  long long v26 = &a1[v25];
  long long v27 = &a2[v25];
  uint64_t v28 = *(void *)&a2[v25 + 8];
  *(void *)long long v26 = *(void *)&a2[v25];
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *((void *)v27 + 3);
  *((void *)v26 + 2) = *((void *)v27 + 2);
  *((void *)v26 + 3) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *((void *)v27 + 5);
  *((void *)v26 + 4) = *((void *)v27 + 4);
  *((void *)v26 + 5) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *((void *)v27 + 7);
  *((void *)v26 + 6) = *((void *)v27 + 6);
  *((void *)v26 + 7) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *((void *)v27 + 9);
  *((void *)v26 + 8) = *((void *)v27 + 8);
  *((void *)v26 + 9) = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *((void *)v27 + 11);
  *((void *)v26 + 10) = *((void *)v27 + 10);
  *((void *)v26 + 11) = v33;
  swift_bridgeObjectRelease();
  v26[96] = v27[96];
  *((void *)v26 + 13) = *((void *)v27 + 13);
  swift_release();
  v26[112] = v27[112];
  uint64_t v34 = *((void *)v27 + 16);
  *((void *)v26 + 15) = *((void *)v27 + 15);
  *((void *)v26 + 16) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *((void *)v27 + 18);
  *((void *)v26 + 17) = *((void *)v27 + 17);
  *((void *)v26 + 18) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *((void *)v27 + 20);
  *((void *)v26 + 19) = *((void *)v27 + 19);
  *((void *)v26 + 20) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *((void *)v27 + 22);
  *((void *)v26 + 21) = *((void *)v27 + 21);
  *((void *)v26 + 22) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *((void *)v27 + 24);
  *((void *)v26 + 23) = *((void *)v27 + 23);
  *((void *)v26 + 24) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *((void *)v27 + 26);
  *((void *)v26 + 25) = *((void *)v27 + 25);
  *((void *)v26 + 26) = v39;
  swift_bridgeObjectRelease();
  v26[216] = v27[216];
  *((void *)v26 + 28) = *((void *)v27 + 28);
  swift_release();
  v26[232] = v27[232];
  uint64_t v40 = type metadata accessor for SportsWidgetContentViewModel(0);
  long long v41 = (int *)v40;
  v102 = a1;
  if (a1 != a2)
  {
    uint64_t v42 = *(int *)(v40 + 24);
    uint64_t v43 = &v26[v42];
    uint64_t v44 = &v27[v42];
    sub_1000146F4((uint64_t)&v26[v42], type metadata accessor for SportsWidgetClock);
    uint64_t v45 = type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v59 = *((_OWORD *)v44 + 1);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v59;
      long long v60 = *((_OWORD *)v44 + 3);
      *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
      *((_OWORD *)v43 + 3) = v60;
      v101 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v61 = v101[8];
      int v62 = &v43[v61];
      uint64_t v63 = &v44[v61];
      uint64_t v64 = sub_1000E3EE0();
      uint64_t v99 = *(void *)(v64 - 8);
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
      v65(v62, v63, v64);
      uint64_t v66 = sub_1000082B4(&qword_100129F28);
      uint64_t v97 = v65;
      v65(&v62[*(int *)(v66 + 36)], &v63[*(int *)(v66 + 36)], v64);
      uint64_t v67 = v101[9];
      uint64_t v68 = &v43[v67];
      long long v69 = &v44[v67];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(&v44[v67], 1, v64))
      {
        uint64_t v70 = sub_1000082B4(&qword_100129F30);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        v97(v68, v69, v64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v68, 0, 1, v64);
      }
      v43[v101[10]] = v44[v101[10]];
      v43[v101[11]] = v44[v101[11]];
      uint64_t v71 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)&v43[*(int *)(v71 + 20)] = *(void *)&v44[*(int *)(v71 + 20)];
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        goto LABEL_18;
      }
      long long v47 = *((_OWORD *)v44 + 1);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v47;
      long long v48 = *((_OWORD *)v44 + 3);
      *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
      *((_OWORD *)v43 + 3) = v48;
      v100 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v49 = v100[8];
      uint64_t v50 = &v43[v49];
      uint64_t v51 = &v44[v49];
      uint64_t v52 = sub_1000E3EE0();
      uint64_t v98 = *(void *)(v52 - 8);
      long long v53 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
      v53(v50, v51, v52);
      uint64_t v54 = sub_1000082B4(&qword_100129F28);
      uint64_t v96 = v53;
      v53(&v50[*(int *)(v54 + 36)], &v51[*(int *)(v54 + 36)], v52);
      uint64_t v55 = v100[9];
      uint64_t v56 = &v43[v55];
      uint64_t v57 = &v44[v55];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(&v44[v55], 1, v52))
      {
        uint64_t v58 = sub_1000082B4(&qword_100129F30);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        v96(v56, v57, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v56, 0, 1, v52);
      }
      v43[v100[10]] = v44[v100[10]];
      v43[v100[11]] = v44[v100[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_18:
  uint64_t v72 = v41[7];
  long long v73 = &v26[v72];
  long long v74 = &v27[v72];
  uint64_t v75 = *(void *)&v27[v72 + 8];
  *(void *)long long v73 = *(void *)&v27[v72];
  *((void *)v73 + 1) = v75;
  swift_bridgeObjectRelease();
  uint64_t v76 = *((void *)v74 + 3);
  *((void *)v73 + 2) = *((void *)v74 + 2);
  *((void *)v73 + 3) = v76;
  swift_bridgeObjectRelease();
  uint64_t v77 = v41[8];
  uint64_t v78 = &v26[v77];
  uint64_t v79 = &v27[v77];
  uint64_t v80 = *(void *)&v27[v77 + 8];
  *(void *)uint64_t v78 = *(void *)&v27[v77];
  *((void *)v78 + 1) = v80;
  swift_bridgeObjectRelease();
  v78[16] = v79[16];
  *((void *)v78 + 3) = *((void *)v79 + 3);
  swift_release();
  v78[32] = v79[32];
  *((void *)v78 + 5) = *((void *)v79 + 5);
  swift_release();
  v78[48] = v79[48];
  v26[v41[9]] = v27[v41[9]];
  v26[v41[10]] = v27[v41[10]];
  v26[v41[11]] = v27[v41[11]];
  v26[v41[12]] = v27[v41[12]];
  uint64_t v81 = v41[13];
  uint64_t v82 = &v26[v81];
  uint64_t v83 = &v27[v81];
  uint64_t v84 = sub_1000E3E00();
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v86 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48);
  int v87 = v86(v82, 1, v84);
  int v88 = v86(v83, 1, v84);
  if (!v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 40))(v82, v83, v84);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v84);
    goto LABEL_23;
  }
  if (v88)
  {
LABEL_23:
    uint64_t v89 = sub_1000082B4(&qword_100129F38);
    memcpy(v82, v83, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v82, v83, v84);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
LABEL_24:
  v26[v41[14]] = v27[v41[14]];
  uint64_t v90 = v41[15];
  uint64_t v91 = &v26[v90];
  uint64_t v92 = &v27[v90];
  uint64_t v94 = *(void *)v92;
  uint64_t v93 = *((void *)v92 + 1);
  *(void *)uint64_t v91 = v94;
  *((void *)v91 + 1) = v93;
  swift_bridgeObjectRelease();
  return v102;
}

uint64_t sub_10000C1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000C1C4);
}

uint64_t sub_10000C1C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 254)
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v11 > 1) {
      return (v11 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v13 = type metadata accessor for SportsWidgetContentViewLayout();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v10 = a1 + a3[6];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for SportsWidgetContentViewModel(0);
  long long v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[7];

  return v16(v18, a2, v17);
}

uint64_t sub_10000C344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000C358);
}

uint64_t sub_10000C358(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000082B4(&qword_100129F40);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[5] + 8) = -(char)a2;
    return result;
  }
  uint64_t v13 = type metadata accessor for SportsWidgetContentViewLayout();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for SportsWidgetContentViewModel(0);
  long long v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for SportsWidgetContentView()
{
  uint64_t result = qword_100129FA0;
  if (!qword_100129FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10000C528()
{
  sub_10000C634();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsWidgetContentViewLayout();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SportsWidgetContentViewModel(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10000C634()
{
  if (!qword_100129FB0)
  {
    sub_1000E41D0();
    unint64_t v0 = sub_1000E3FF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100129FB0);
    }
  }
}

uint64_t sub_10000C68C()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_10000C6A8()
{
  uint64_t v1 = type metadata accessor for SportsWidgetContentView();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)(v0 + *(int *)(v2 + 28));
  uint64_t v6 = v5[9];
  unint64_t v7 = v5[11];
  if (v7
    && ((v8 = v5[10] & 0xFFFFFFFFFFFFLL, (v7 & 0x2000000000000000) != 0) ? (uint64_t v9 = HIBYTE(v7) & 0xF) : (uint64_t v9 = v8), v9))
  {
    sub_10001468C(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SportsWidgetContentView);
  }
  else
  {
    sub_10001468C(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SportsWidgetContentView);
    if (!v6)
    {
      BOOL v15 = 0;
      goto LABEL_16;
    }
  }
  uint64_t v10 = &v4[*(int *)(v1 + 28)];
  uint64_t v11 = *((void *)v10 + 24);
  unint64_t v12 = *((void *)v10 + 26);
  BOOL v15 = v12
     && ((uint64_t v13 = *((void *)v10 + 25) & 0xFFFFFFFFFFFFLL, (v12 & 0x2000000000000000) != 0)
       ? (uint64_t v14 = HIBYTE(v12) & 0xF)
       : (uint64_t v14 = v13),
         v14)
     || v11 != 0;
LABEL_16:
  sub_1000146F4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SportsWidgetContentView);
  return v15;
}

uint64_t sub_10000C7F4()
{
  uint64_t v0 = sub_1000E41D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - v5;
  id v7 = [self mainScreen];
  [v7 bounds];
  double v9 = v8;

  sub_1000C1F94((uint64_t)v6);
  if (v9 <= 291.0)
  {
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for DynamicTypeSize.xLarge(_:), v0);
    sub_100014CF0((unint64_t *)&qword_10012A0D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    char v10 = sub_1000E5930() ^ 1;
    uint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
    v11(v4, v0);
    v11(v6, v0);
  }
  else
  {
    char v10 = sub_1000E41B0();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  }
  return v10 & 1;
}

uint64_t sub_10000C9E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v37 = sub_1000082B4(&qword_100129FE8);
  __chkstk_darwin(v37);
  uint64_t v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000082B4(&qword_100129FF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000082B4(&qword_100129FF8);
  __chkstk_darwin(v7);
  double v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000082B4(&qword_10012A000);
  __chkstk_darwin(v10);
  unint64_t v12 = (int8x16_t *)((char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1000082B4(&qword_10012A008);
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  long long v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v35 = (char *)v32 - v17;
  if (sub_10000C7F4())
  {
    v32[0] = v10;
    v32[1] = v4;
    uint64_t v33 = v13;
    uint64_t v34 = v6;
    uint64_t v18 = v7;
    uint64_t v19 = type metadata accessor for SportsWidgetContentView();
    int8x16_t *v12 = vextq_s8(*(int8x16_t *)(v1 + *(int *)(v19 + 24)), *(int8x16_t *)(v1 + *(int *)(v19 + 24)), 8uLL);
    v12[1].i8[0] = 0;
    uint64_t v20 = sub_1000082B4(&qword_10012A048);
    sub_10000DC38(v1, (uint64_t)v12->i64 + *(int *)(v20 + 44));
    uint64_t v21 = enum case for DynamicTypeSize.accessibility3(_:);
    uint64_t v22 = sub_1000E41D0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v9, v21, v22);
    sub_100014CF0(&qword_10012A050, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    uint64_t result = sub_1000E5970();
    if (result)
    {
      uint64_t v24 = sub_100014AC4(&qword_10012A010, &qword_10012A000);
      uint64_t v25 = sub_100014AC4(&qword_10012A018, &qword_100129FF8);
      uint64_t v26 = v32[0];
      sub_1000E4B00();
      sub_1000147B8((uint64_t)v9, &qword_100129FF8);
      sub_1000147B8((uint64_t)v12, &qword_10012A000);
      uint64_t v28 = v35;
      uint64_t v27 = v36;
      uint64_t v29 = v33;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v16, v33);
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v34, v28, v29);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v26;
      uint64_t v40 = v18;
      uint64_t v41 = v24;
      uint64_t v42 = v25;
      swift_getOpaqueTypeConformance2();
      sub_100013BD4();
      sub_1000E4690();
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v29);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_10000CF30((uint64_t)v3);
    sub_100014754((uint64_t)v3, (uint64_t)v6, &qword_100129FE8);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = sub_100014AC4(&qword_10012A010, &qword_10012A000);
    uint64_t v31 = sub_100014AC4(&qword_10012A018, &qword_100129FF8);
    uint64_t v39 = v10;
    uint64_t v40 = v7;
    uint64_t v41 = v30;
    uint64_t v42 = v31;
    swift_getOpaqueTypeConformance2();
    sub_100013BD4();
    sub_1000E4690();
    return sub_1000147B8((uint64_t)v3, &qword_100129FE8);
  }
  return result;
}

uint64_t sub_10000CF30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v2 = sub_1000082B4(&qword_10012A040);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (int8x16_t *)((char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1000082B4(&qword_10012A030);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_100129FE8);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SportsWidgetContentView();
  int8x16_t *v4 = vextq_s8(*(int8x16_t *)(v1 + *(int *)(v13 + 24)), *(int8x16_t *)(v1 + *(int *)(v13 + 24)), 8uLL);
  v4[1].i8[0] = 0;
  uint64_t v14 = sub_1000082B4(&qword_10012A298);
  sub_10000D19C(v1, (uint64_t)v4->i64 + *(int *)(v14 + 44));
  char v15 = sub_1000E4760();
  type metadata accessor for SportsWidgetContentViewModel(0);
  sub_1000E3FB0();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  sub_100014754((uint64_t)v4, (uint64_t)v8, &qword_10012A040);
  uint64_t v24 = &v8[*(int *)(v6 + 44)];
  *uint64_t v24 = v15;
  *((void *)v24 + 1) = v17;
  *((void *)v24 + 2) = v19;
  *((void *)v24 + 3) = v21;
  *((void *)v24 + 4) = v23;
  v24[40] = 0;
  sub_1000147B8((uint64_t)v4, &qword_10012A040);
  char v25 = sub_1000E4770();
  sub_1000E3FB0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_100014754((uint64_t)v8, (uint64_t)v12, &qword_10012A030);
  uint64_t v34 = &v12[*(int *)(v10 + 44)];
  *uint64_t v34 = v25;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_1000147B8((uint64_t)v8, &qword_10012A030);
  return sub_100014B08((uint64_t)v12, v37, &qword_100129FE8);
}

uint64_t sub_10000D19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = sub_1000082B4(&qword_10012A080);
  __chkstk_darwin(v3 - 8);
  uint64_t v67 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A2A0);
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  __chkstk_darwin(v5);
  uint64_t v66 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000082B4(&qword_10012A2A8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v75 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v73 = (char *)&v65 - v10;
  uint64_t v11 = sub_1000082B4(&qword_10012A060);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v74 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v70 = (char *)&v65 - v14;
  uint64_t v15 = sub_1000082B4(&qword_10012A2B0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000082B4(&qword_10012A2B8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (uint64_t)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000082B4(&qword_10012A2C0);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000082B4(&qword_10012A2C8);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v28 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v65 - v29;
  *(void *)uint64_t v17 = sub_1000E4510();
  *((void *)v17 + 1) = 0;
  v17[16] = 1;
  uint64_t v31 = sub_1000082B4(&qword_10012A2D0);
  sub_10000FA2C(a1, &v17[*(int *)(v31 + 44)]);
  uint64_t v32 = (int *)type metadata accessor for SportsWidgetContentView();
  uint64_t v33 = a1 + v32[6];
  double v34 = *(double *)(v33 + 16);
  double v35 = *(double *)(v33 + 24);
  uint64_t v36 = sub_1000E4F50();
  sub_1000B6050(0.0, 1, 0.0, 1, v35, 0, 0.0, 1, v20, 0.0, 1, v34, 0, v36, v37);
  sub_1000147B8((uint64_t)v17, &qword_10012A2B0);
  uint64_t v38 = a1 + v32[7];
  uint64_t v68 = type metadata accessor for SportsWidgetContentViewModel(0);
  uint64_t v69 = v38;
  uint64_t v39 = (uint64_t *)(v38 + *(int *)(v68 + 60));
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  sub_100014754(v20, (uint64_t)v24, &qword_10012A2B8);
  uint64_t v42 = &v24[*(int *)(v22 + 44)];
  *(void *)uint64_t v42 = v41;
  *((void *)v42 + 1) = v40;
  swift_bridgeObjectRetain();
  sub_1000147B8(v20, &qword_10012A2B8);
  uint64_t v43 = sub_1000E4F50();
  sub_1000B60AC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v28, 0.0, 1, INFINITY, 0, v43, v44);
  sub_1000147B8((uint64_t)v24, &qword_10012A2C0);
  uint64_t v45 = (uint64_t)v28;
  uint64_t v46 = (uint64_t)v28;
  uint64_t v47 = (uint64_t)v30;
  sub_100014B08(v46, (uint64_t)v30, &qword_10012A2C8);
  uint64_t v48 = a1 + v32[5];
  uint64_t v49 = *(void *)v48;
  LOBYTE(v32) = *(unsigned char *)(v48 + 8);
  sub_10000954C(*(void *)v48, (char)v32);
  LOBYTE(v20) = sub_1000C1FD4(v49, (char)v32);
  sub_100009A3C(v49, (char)v32);
  if (v20)
  {
    uint64_t v50 = (uint64_t)v70;
    sub_1000E4E90();
    uint64_t v51 = sub_1000E4EA0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 0, 1, v51);
  }
  else
  {
    uint64_t v52 = sub_1000E4EA0();
    uint64_t v50 = (uint64_t)v70;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v70, 1, 1, v52);
  }
  uint64_t v53 = 1;
  uint64_t v54 = (uint64_t)v73;
  if (*(unsigned char *)(v69 + *(int *)(v68 + 48)) == 1)
  {
    uint64_t v55 = v67;
    sub_10000D8C4(v67);
    uint64_t v56 = sub_1000E4F50();
    uint64_t v57 = v66;
    sub_1000B62D8(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v66, 0.0, 1, INFINITY, 0, v56, v58);
    sub_1000147B8(v55, &qword_10012A080);
    sub_100014B08(v57, v54, &qword_10012A2A0);
    uint64_t v53 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v54, v53, 1, v72);
  sub_100014754(v47, v45, &qword_10012A2C8);
  uint64_t v59 = v74;
  sub_100014754(v50, v74, &qword_10012A060);
  uint64_t v60 = v75;
  sub_100014754(v54, v75, &qword_10012A2A8);
  uint64_t v61 = v76;
  sub_100014754(v45, v76, &qword_10012A2C8);
  uint64_t v62 = v50;
  uint64_t v63 = sub_1000082B4(&qword_10012A2D8);
  sub_100014754(v59, v61 + *(int *)(v63 + 48), &qword_10012A060);
  sub_100014754(v60, v61 + *(int *)(v63 + 64), &qword_10012A2A8);
  sub_1000147B8(v54, &qword_10012A2A8);
  sub_1000147B8(v62, &qword_10012A060);
  sub_1000147B8(v47, &qword_10012A2C8);
  sub_1000147B8(v60, &qword_10012A2A8);
  sub_1000147B8(v59, &qword_10012A060);
  return sub_1000147B8(v45, &qword_10012A2C8);
}

uint64_t sub_10000D8C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SportsWidgetPlayByPlayLayout();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsWidgetPlayByPlayView();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1000082B4(&qword_10012A090);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v1 + *(int *)(type metadata accessor for SportsWidgetContentView() + 28);
  uint64_t v13 = type metadata accessor for SportsWidgetContentViewModel(0);
  if (*(unsigned char *)(v12 + *(int *)(v13 + 56)) == 1)
  {
    sub_1000459B8((uint64_t)v30);
    long long v14 = v30[1];
    *(_OWORD *)(v11 + 8) = v30[0];
    *(_OWORD *)(v11 + 24) = v14;
    long long v15 = v30[3];
    *(_OWORD *)(v11 + 40) = v30[2];
    uint64_t v16 = v31;
    uint64_t v17 = v33;
    *uint64_t v11 = 2;
    *(_OWORD *)(v11 + 56) = v15;
    *((void *)v11 + 9) = v16;
    *((_OWORD *)v11 + 5) = v32;
    *((void *)v11 + 12) = v17;
    swift_storeEnumTagMultiPayload();
    sub_10001409C();
    sub_100014CF0(&qword_10012A0A0, (void (*)(uint64_t))type metadata accessor for SportsWidgetPlayByPlayView);
    return sub_1000E4690();
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v12 + *(int *)(v13 + 32));
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v29 = a1;
    char v22 = *((unsigned char *)v19 + 16);
    uint64_t v23 = v19[3];
    int v24 = *((unsigned __int8 *)v19 + 32);
    uint64_t v25 = v19[5];
    int v27 = *((unsigned __int8 *)v19 + 48);
    int v28 = v24;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000C533C((uint64_t)v5, 34.0, 20.0);
    uint64_t *v8 = swift_getKeyPath();
    sub_1000082B4(&qword_100129F20);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = (char *)v8 + *(int *)(v6 + 20);
    *(void *)uint64_t v26 = v21;
    *((void *)v26 + 1) = v20;
    v26[16] = v22;
    *((void *)v26 + 3) = v23;
    v26[32] = v28;
    *((void *)v26 + 5) = v25;
    v26[48] = v27;
    sub_1000140F0((uint64_t)v5, (uint64_t)v8 + *(int *)(v6 + 24), (uint64_t (*)(void))type metadata accessor for SportsWidgetPlayByPlayLayout);
    sub_10001468C((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SportsWidgetPlayByPlayView);
    swift_storeEnumTagMultiPayload();
    sub_10001409C();
    sub_100014CF0(&qword_10012A0A0, (void (*)(uint64_t))type metadata accessor for SportsWidgetPlayByPlayView);
    sub_1000E4690();
    return sub_1000146F4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SportsWidgetPlayByPlayView);
  }
}

uint64_t sub_10000DC38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_1000082B4(&qword_10012A058);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v51 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v48 = (uint64_t)&v46 - v6;
  uint64_t v7 = sub_1000082B4(&qword_10012A060);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v49 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v46 - v10;
  uint64_t v11 = sub_1000082B4(&qword_10012A068);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000082B4(&qword_10012A070);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v46 - v19;
  *(void *)uint64_t v13 = sub_1000E45C0();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v21 = sub_1000082B4(&qword_10012A078);
  sub_10000E11C(a1, &v13[*(int *)(v21 + 44)]);
  uint64_t v22 = type metadata accessor for SportsWidgetContentView();
  uint64_t v23 = a1 + *(int *)(v22 + 28);
  uint64_t v24 = type metadata accessor for SportsWidgetContentViewModel(0);
  uint64_t v25 = *(int *)(v24 + 60);
  uint64_t v47 = v23;
  uint64_t v26 = (uint64_t *)(v23 + v25);
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  sub_100014754((uint64_t)v13, (uint64_t)v18, &qword_10012A068);
  uint64_t v29 = &v18[*(int *)(v15 + 44)];
  *(void *)uint64_t v29 = v27;
  *((void *)v29 + 1) = v28;
  swift_bridgeObjectRetain();
  sub_1000147B8((uint64_t)v13, &qword_10012A068);
  sub_100014B08((uint64_t)v18, (uint64_t)v20, &qword_10012A070);
  uint64_t v30 = a1 + *(int *)(v22 + 20);
  uint64_t v31 = *(void *)v30;
  LOBYTE(v13) = *(unsigned char *)(v30 + 8);
  sub_10000954C(*(void *)v30, (char)v13);
  LOBYTE(v22) = sub_1000C1FD4(v31, (char)v13);
  sub_100009A3C(v31, (char)v13);
  if (v22)
  {
    uint64_t v32 = (uint64_t)v46;
    sub_1000E4E90();
    uint64_t v33 = sub_1000E4EA0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
  }
  else
  {
    uint64_t v34 = sub_1000E4EA0();
    uint64_t v32 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v46, 1, 1, v34);
  }
  uint64_t v35 = v48;
  if (*(unsigned char *)(v47 + *(int *)(v24 + 48)) == 1)
  {
    sub_10000D8C4(v48);
    uint64_t v36 = sub_1000082B4(&qword_10012A080);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
  else
  {
    uint64_t v37 = sub_1000082B4(&qword_10012A080);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v35, 1, 1, v37);
  }
  uint64_t v38 = (uint64_t)v20;
  sub_100014754((uint64_t)v20, (uint64_t)v18, &qword_10012A070);
  uint64_t v39 = v49;
  sub_100014754(v32, v49, &qword_10012A060);
  uint64_t v40 = v32;
  uint64_t v41 = v51;
  sub_100014754(v35, v51, &qword_10012A058);
  uint64_t v42 = v50;
  sub_100014754((uint64_t)v18, v50, &qword_10012A070);
  uint64_t v43 = v35;
  uint64_t v44 = sub_1000082B4(&qword_10012A088);
  sub_100014754(v39, v42 + *(int *)(v44 + 48), &qword_10012A060);
  sub_100014754(v41, v42 + *(int *)(v44 + 64), &qword_10012A058);
  sub_1000147B8(v43, &qword_10012A058);
  sub_1000147B8(v40, &qword_10012A060);
  sub_1000147B8(v38, &qword_10012A070);
  sub_1000147B8(v41, &qword_10012A058);
  sub_1000147B8(v39, &qword_10012A060);
  return sub_1000147B8((uint64_t)v18, &qword_10012A070);
}

uint64_t sub_10000E11C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v104 = a2;
  uint64_t v87 = sub_1000082B4(&qword_10012A0A8);
  __chkstk_darwin(v87);
  uint64_t v93 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000082B4(&qword_10012A0B0);
  __chkstk_darwin(v86);
  uint64_t v84 = (uint64_t)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SportsWidgetClock(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v92 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for SportsWidgetClockView();
  uint64_t v7 = __chkstk_darwin(v85);
  uint64_t v91 = (uint64_t *)((char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v83 = (uint64_t)&v76 - v9;
  uint64_t v10 = sub_1000082B4(&qword_10012A0B8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  int v88 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v89 = (uint64_t)&v76 - v13;
  uint64_t v14 = sub_1000E41D0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v76 - v19;
  uint64_t v21 = sub_1000082B4(&qword_10012A0C0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v94 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v76 - v24;
  uint64_t v26 = sub_1000082B4(&qword_10012A0C8);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v103 = (uint64_t)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v76 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v76 - v32;
  uint64_t v90 = type metadata accessor for SportsWidgetContentView();
  uint64_t v95 = a1 + *(int *)(v90 + 24);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v96 = v105;
  int v34 = v106;
  uint64_t v100 = v107;
  int v99 = v108;
  uint64_t v98 = v109;
  uint64_t v97 = v110;
  *(void *)uint64_t v31 = sub_1000E4510();
  *((void *)v31 + 1) = 0;
  v31[16] = 1;
  uint64_t v35 = sub_1000082B4(&qword_10012A0D0);
  sub_10000EE50(a1, &v31[*(int *)(v35 + 44)]);
  v102 = v33;
  sub_100014B08((uint64_t)v31, (uint64_t)v33, &qword_10012A0C8);
  uint64_t v36 = a1;
  sub_1000C1F94((uint64_t)v20);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, enum case for DynamicTypeSize.accessibility2(_:), v14);
  sub_100014CF0((unint64_t *)&qword_10012A0D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  LOBYTE(a1) = sub_1000E5930();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v15 + 8);
  v37(v18, v14);
  v37(v20, v14);
  int v101 = v34;
  if (a1)
  {
    uint64_t v38 = v91;
    uint64_t v39 = (uint64_t)v92;
    uint64_t v40 = (uint64_t)v93;
    type metadata accessor for SportsWidgetContentViewLayout();
    sub_1000E4F50();
    sub_1000E40A0();
    uint64_t v82 = v111;
    int v81 = v112;
    uint64_t v80 = v113;
    int v79 = v114;
    uint64_t v78 = v115;
    uint64_t v77 = v116;
    uint64_t v41 = v36 + *(int *)(v90 + 28);
    uint64_t v42 = (int *)type metadata accessor for SportsWidgetContentViewModel(0);
    if (*(unsigned char *)(v41 + v42[9]) == 1)
    {
      uint64_t v43 = v39;
      sub_10001468C(v41 + v42[6], v39, type metadata accessor for SportsWidgetClock);
      uint64_t v44 = sub_1000E48A0();
      id v45 = [self labelColor];
      uint64_t v46 = sub_1000E4BD0();
      uint64_t v47 = sub_1000E48A0();
      uint64_t *v38 = swift_getKeyPath();
      sub_1000082B4(&qword_100129F20);
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = v85;
      sub_1000140F0(v43, (uint64_t)v38 + *(int *)(v85 + 20), type metadata accessor for SportsWidgetClock);
      uint64_t v49 = (char *)v38 + *(int *)(v48 + 24);
      *uint64_t v49 = 1;
      *((void *)v49 + 1) = v44;
      *((void *)v49 + 2) = v46;
      *((void *)v49 + 3) = v47;
      uint64_t v50 = v83;
      sub_1000140F0((uint64_t)v38, v83, (uint64_t (*)(void))type metadata accessor for SportsWidgetClockView);
      sub_10001468C(v50, v84, (uint64_t (*)(void))type metadata accessor for SportsWidgetClockView);
      swift_storeEnumTagMultiPayload();
      sub_100014CF0(&qword_10012A108, (void (*)(uint64_t))type metadata accessor for SportsWidgetClockView);
      sub_100014AC4(&qword_10012A110, &qword_10012A0A8);
      uint64_t v51 = (uint64_t)v88;
      sub_1000E4690();
      sub_1000146F4(v50, (uint64_t (*)(void))type metadata accessor for SportsWidgetClockView);
      uint64_t v52 = sub_1000082B4(&qword_10012A0F0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 0, 1, v52);
      uint64_t v53 = v89;
      sub_100014B08(v51, v89, &qword_10012A0B8);
      uint64_t v54 = (uint64_t)v25;
      uint64_t v55 = (uint64_t)v94;
    }
    else
    {
      uint64_t v54 = (uint64_t)v25;
      uint64_t v51 = (uint64_t)v88;
      uint64_t v55 = (uint64_t)v94;
      uint64_t v53 = v89;
      if (*(unsigned char *)(v41 + v42[10]) == 1)
      {
        *(void *)uint64_t v40 = sub_1000E45C0();
        *(void *)(v40 + 8) = 0;
        *(unsigned char *)(v40 + 16) = 1;
        uint64_t v59 = sub_1000082B4(&qword_10012A100);
        sub_100011978(v36, v40 + *(int *)(v59 + 44));
        sub_100014754(v40, v84, &qword_10012A0A8);
        swift_storeEnumTagMultiPayload();
        sub_100014CF0(&qword_10012A108, (void (*)(uint64_t))type metadata accessor for SportsWidgetClockView);
        sub_100014AC4(&qword_10012A110, &qword_10012A0A8);
        sub_1000E4690();
        sub_1000147B8(v40, &qword_10012A0A8);
        uint64_t v60 = sub_1000082B4(&qword_10012A0F0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v51, 0, 1, v60);
        sub_100014B08(v51, v53, &qword_10012A0B8);
      }
      else
      {
        uint64_t v61 = sub_1000082B4(&qword_10012A0F0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v53, 1, 1, v61);
      }
    }
    sub_100014754(v53, v51, &qword_10012A0B8);
    *(void *)uint64_t v55 = 0;
    *(unsigned char *)(v55 + 8) = 1;
    *(void *)(v55 + 16) = v82;
    *(unsigned char *)(v55 + 24) = v81;
    *(void *)(v55 + 32) = v80;
    *(unsigned char *)(v55 + 40) = v79;
    uint64_t v62 = v77;
    *(void *)(v55 + 48) = v78;
    *(void *)(v55 + 56) = v62;
    uint64_t v63 = sub_1000082B4(&qword_10012A0F8);
    sub_100014754(v51, v55 + *(int *)(v63 + 48), &qword_10012A0B8);
    sub_1000147B8(v53, &qword_10012A0B8);
    sub_1000147B8(v51, &qword_10012A0B8);
    uint64_t v64 = sub_1000082B4(&qword_10012A0E0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v55, 0, 1, v64);
    sub_100014B08(v55, v54, &qword_10012A0C0);
    uint64_t v57 = v55;
    uint64_t v58 = v96;
  }
  else
  {
    uint64_t v56 = sub_1000082B4(&qword_10012A0E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v25, 1, 1, v56);
    uint64_t v57 = (uint64_t)v94;
    uint64_t v54 = (uint64_t)v25;
    uint64_t v58 = v96;
  }
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v96 = v117;
  LODWORD(v95) = v118;
  uint64_t v65 = v119;
  char v66 = v120;
  uint64_t v94 = v121;
  uint64_t v93 = v122;
  uint64_t v68 = (uint64_t)v102;
  uint64_t v67 = v103;
  sub_100014754((uint64_t)v102, v103, &qword_10012A0C8);
  sub_100014754(v54, v57, &qword_10012A0C0);
  uint64_t v69 = v54;
  uint64_t v70 = v104;
  void *v104 = 0;
  *((unsigned char *)v70 + 8) = 1;
  v70[2] = v58;
  *((unsigned char *)v70 + 24) = v101;
  v70[4] = v100;
  *((unsigned char *)v70 + 40) = v99;
  uint64_t v71 = v97;
  v70[6] = v98;
  v70[7] = v71;
  uint64_t v72 = (int *)sub_1000082B4(&qword_10012A0E8);
  sub_100014754(v67, (uint64_t)v70 + v72[12], &qword_10012A0C8);
  sub_100014754(v57, (uint64_t)v70 + v72[16], &qword_10012A0C0);
  long long v73 = (char *)v70 + v72[20];
  *(void *)long long v73 = 0;
  v73[8] = 1;
  *((void *)v73 + 2) = v96;
  v73[24] = v95;
  *((void *)v73 + 4) = v65;
  v73[40] = v66;
  uint64_t v74 = v93;
  *((void *)v73 + 6) = v94;
  *((void *)v73 + 7) = v74;
  sub_1000147B8(v69, &qword_10012A0C0);
  sub_1000147B8(v68, &qword_10012A0C8);
  sub_1000147B8(v57, &qword_10012A0C0);
  return sub_1000147B8(v67, &qword_10012A0C8);
}

uint64_t sub_10000EE50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v3 = sub_1000082B4(&qword_10012A178);
  __chkstk_darwin(v3 - 8);
  uint64_t v86 = (uint64_t *)((char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v111 = sub_1000082B4(&qword_10012A180);
  uint64_t v103 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v85 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000082B4(&qword_10012A188);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v108 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v114 = (uint64_t)&v84 - v9;
  uint64_t v10 = sub_1000082B4(&qword_10012A190);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000082B4(&qword_10012A198);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v107 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v113 = (uint64_t)&v84 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v84 - v19;
  __chkstk_darwin(v18);
  uint64_t v112 = (uint64_t)&v84 - v21;
  uint64_t v22 = sub_1000E41D0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v104 = (uint64_t)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v95 = (uint64_t)&v84 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v87 = (char *)&v84 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v110 = (uint64_t)&v84 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  int v34 = (char *)&v84 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v84 - v35;
  sub_1000C1F94((uint64_t)&v84 - v35);
  LODWORD(v117) = enum case for DynamicTypeSize.accessibility3(_:);
  uint64_t v115 = *(void (**)(char *))(v23 + 104);
  uint64_t v116 = v23 + 104;
  v115(v34);
  sub_1000E41C0();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  uint64_t v84 = v37;
  v37((uint64_t)v34, v22);
  v37((uint64_t)v36, v22);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v102 = v118;
  int v101 = v119;
  uint64_t v100 = v120;
  int v99 = v121;
  uint64_t v97 = v123;
  uint64_t v98 = v122;
  uint64_t v38 = type metadata accessor for SportsWidgetContentView();
  uint64_t v39 = a1 + *(int *)(v38 + 28);
  long long v40 = *(_OWORD *)(v39 + 80);
  v144[4] = *(_OWORD *)(v39 + 64);
  v144[5] = v40;
  v144[6] = *(_OWORD *)(v39 + 96);
  char v145 = *(unsigned char *)(v39 + 112);
  long long v41 = *(_OWORD *)(v39 + 48);
  v144[2] = *(_OWORD *)(v39 + 32);
  v144[3] = v41;
  long long v42 = *(_OWORD *)(v39 + 16);
  v144[0] = *(_OWORD *)v39;
  v144[1] = v42;
  *(void *)uint64_t v12 = sub_1000E45C0();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v88 = sub_1000082B4(&qword_10012A1A0);
  sub_100011F68(a1, v144, (uint64_t)&v12[*(int *)(v88 + 44)]);
  uint64_t v109 = a1 + *(int *)(v38 + 24);
  double v43 = *(double *)(v109 + 80);
  uint64_t v44 = sub_1000E4F50();
  sub_1000B6334(0.0, 1, 0.0, 1, v43, 0, 0.0, 1, (uint64_t)v20, 0.0, 1, 0.0, 1, v44, v45);
  uint64_t v96 = (uint64_t *)v12;
  sub_1000147B8((uint64_t)v12, &qword_10012A190);
  unsigned __int8 v106 = v20;
  sub_100014B08((uint64_t)v20, v112, &qword_10012A198);
  uint64_t v46 = v110;
  uint64_t v47 = a1;
  sub_1000C1F94(v110);
  ((void (*)(char *, void, uint64_t))v115)(v34, v117, v22);
  sub_1000E41C0();
  uint64_t v48 = v84;
  v84((uint64_t)v34, v22);
  v48(v46, v22);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v94 = v124;
  int v93 = v125;
  uint64_t v92 = v126;
  int v91 = v127;
  uint64_t v89 = v129;
  uint64_t v90 = v128;
  uint64_t v110 = v47;
  sub_1000C1F94((uint64_t)v34);
  uint64_t v49 = v87;
  ((void (*)(char *, void, uint64_t))v115)(v87, v117, v22);
  LOBYTE(v43) = sub_1000E41C0();
  v48((uint64_t)v49, v22);
  v48((uint64_t)v34, v22);
  uint64_t v50 = 1;
  if (LOBYTE(v43))
  {
    uint64_t v51 = sub_1000E45C0();
    uint64_t v52 = (uint64_t)v86;
    *uint64_t v86 = v51;
    *(void *)(v52 + 8) = 0;
    *(unsigned char *)(v52 + 16) = 1;
    uint64_t v53 = sub_1000082B4(&qword_10012A1B0);
    sub_100010AF0(v110, v52 + *(int *)(v53 + 44));
    uint64_t v54 = *(void *)(v109 + *(int *)(type metadata accessor for SportsWidgetContentViewLayout() + 140));
    uint64_t v55 = v85;
    sub_100014754(v52, v85, &qword_10012A178);
    *(void *)(v55 + *(int *)(v111 + 36)) = v54;
    sub_1000147B8(v52, &qword_10012A178);
    sub_100014B08(v55, v114, &qword_10012A180);
    uint64_t v50 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v114, v50, 1, v111);
  uint64_t v56 = v95;
  uint64_t v57 = v110;
  sub_1000C1F94(v95);
  ((void (*)(char *, void, uint64_t))v115)(v34, v117, v22);
  sub_1000E41C0();
  uint64_t v58 = (void (*)(char *, uint64_t))v48;
  v48((uint64_t)v34, v22);
  v48(v56, v22);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v111 = v130;
  LODWORD(v103) = v131;
  uint64_t v95 = v132;
  LODWORD(v87) = v133;
  uint64_t v85 = v135;
  uint64_t v86 = v134;
  long long v59 = *(_OWORD *)(v39 + 200);
  v142[4] = *(_OWORD *)(v39 + 184);
  v142[5] = v59;
  v142[6] = *(_OWORD *)(v39 + 216);
  char v143 = *(unsigned char *)(v39 + 232);
  long long v60 = *(_OWORD *)(v39 + 136);
  v142[0] = *(_OWORD *)(v39 + 120);
  v142[1] = v60;
  long long v61 = *(_OWORD *)(v39 + 168);
  v142[2] = *(_OWORD *)(v39 + 152);
  v142[3] = v61;
  uint64_t v62 = sub_1000E45C0();
  uint64_t v63 = (uint64_t)v96;
  *uint64_t v96 = v62;
  *(void *)(v63 + 8) = 0;
  *(unsigned char *)(v63 + 16) = 1;
  sub_100011F68(v57, v142, v63 + *(int *)(v88 + 44));
  double v64 = *(double *)(v109 + 80);
  uint64_t v65 = sub_1000E4F50();
  uint64_t v66 = (uint64_t)v106;
  sub_1000B6334(0.0, 1, 0.0, 1, v64, 0, 0.0, 1, (uint64_t)v106, 0.0, 1, 0.0, 1, v65, v67);
  sub_1000147B8(v63, &qword_10012A190);
  uint64_t v68 = v113;
  sub_100014B08(v66, v113, &qword_10012A198);
  uint64_t v69 = v104;
  sub_1000C1F94(v104);
  ((void (*)(char *, void, uint64_t))v115)(v34, v117, v22);
  sub_1000E41C0();
  v58(v34, v22);
  v58((char *)v69, v22);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v117 = v136;
  LODWORD(v116) = v137;
  uint64_t v115 = v138;
  LODWORD(v110) = v139;
  uint64_t v109 = v140;
  uint64_t v104 = v141;
  uint64_t v70 = v112;
  sub_100014754(v112, v66, &qword_10012A198);
  uint64_t v71 = v114;
  uint64_t v72 = v108;
  sub_100014754(v114, v108, &qword_10012A188);
  uint64_t v73 = v107;
  sub_100014754(v68, v107, &qword_10012A198);
  uint64_t v74 = v105;
  *uint64_t v105 = 0;
  *((unsigned char *)v74 + 8) = 1;
  v74[2] = v102;
  *((unsigned char *)v74 + 24) = v101;
  v74[4] = v100;
  *((unsigned char *)v74 + 40) = v99;
  uint64_t v75 = v97;
  v74[6] = v98;
  v74[7] = v75;
  uint64_t v76 = (int *)sub_1000082B4(&qword_10012A1A8);
  sub_100014754(v66, (uint64_t)v74 + v76[12], &qword_10012A198);
  uint64_t v77 = (char *)v74 + v76[16];
  *(void *)uint64_t v77 = 0;
  v77[8] = 1;
  *((void *)v77 + 2) = v94;
  v77[24] = v93;
  *((void *)v77 + 4) = v92;
  v77[40] = v91;
  uint64_t v78 = v89;
  *((void *)v77 + 6) = v90;
  *((void *)v77 + 7) = v78;
  sub_100014754(v72, (uint64_t)v74 + v76[20], &qword_10012A188);
  int v79 = (char *)v74 + v76[24];
  *(void *)int v79 = 0;
  v79[8] = 1;
  *((void *)v79 + 2) = v111;
  v79[24] = v103;
  *((void *)v79 + 4) = v95;
  v79[40] = (char)v87;
  uint64_t v80 = v85;
  *((void *)v79 + 6) = v86;
  *((void *)v79 + 7) = v80;
  sub_100014754(v73, (uint64_t)v74 + v76[28], &qword_10012A198);
  int v81 = (char *)v74 + v76[32];
  *(void *)int v81 = 0;
  v81[8] = 1;
  *((void *)v81 + 2) = v117;
  v81[24] = v116;
  *((void *)v81 + 4) = v115;
  v81[40] = v110;
  uint64_t v82 = v104;
  *((void *)v81 + 6) = v109;
  *((void *)v81 + 7) = v82;
  sub_1000147B8(v113, &qword_10012A198);
  sub_1000147B8(v71, &qword_10012A188);
  sub_1000147B8(v70, &qword_10012A198);
  sub_1000147B8(v73, &qword_10012A198);
  sub_1000147B8(v72, &qword_10012A188);
  return sub_1000147B8(v66, &qword_10012A198);
}

uint64_t sub_10000FA2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v128 = a2;
  uint64_t v3 = sub_1000082B4(&qword_10012A2E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v107 = (uint64_t *)((char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1000082B4(&qword_10012A2E8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v131 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v130 = (uint64_t)&v99 - v8;
  uint64_t v129 = sub_1000082B4(&qword_10012A2F0);
  __chkstk_darwin(v129);
  uint64_t v10 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000082B4(&qword_10012A1F0);
  uint64_t v117 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v100 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  int v101 = (char *)&v99 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v99 - v17;
  __chkstk_darwin(v16);
  uint64_t v114 = (char *)&v99 - v19;
  uint64_t v20 = sub_1000082B4(&qword_10012A2F8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v126 = (uint64_t)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v127 = (uint64_t)&v99 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v99 - v26;
  __chkstk_darwin(v25);
  uint64_t v132 = (uint64_t)&v99 - v28;
  uint64_t v29 = type metadata accessor for SportsWidgetContentView();
  uint64_t v30 = a1 + *(int *)(v29 + 24);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v123 = v142;
  int v122 = v143;
  uint64_t v121 = v144;
  int v120 = v145;
  uint64_t v119 = v146;
  uint64_t v118 = v147;
  BOOL v31 = sub_10000C6A8();
  unsigned __int8 v125 = v27;
  uint64_t v124 = v11;
  uint64_t v116 = v30;
  uint64_t v115 = a1;
  uint64_t v108 = v29;
  if (v31)
  {
    uint64_t v32 = (void *)(a1 + *(int *)(v29 + 28));
    uint64_t v34 = v32[6];
    uint64_t v33 = v32[7];
    uint64_t v35 = v32[9];
    uint64_t v113 = v32[8];
    uint64_t v36 = v32[11];
    uint64_t v112 = v32[10];
    uint64_t v37 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v38 = [v37 labelColor];
    uint64_t v39 = sub_1000E4BD0();
    *(void *)&long long v133 = 0x4049000000000000;
    *((void *)&v133 + 1) = v39;
    uint64_t v134 = v34;
    *(void *)&long long v135 = v33;
    *((void *)&v135 + 1) = v113;
    uint64_t v136 = v35;
    uint64_t v137 = v112;
    uint64_t v138 = v36;
    unint64_t v40 = sub_100014448();
    sub_1000E4A20();
    uint64_t v41 = v117;
    swift_bridgeObjectRelease();
    uint64_t v42 = v124;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    double v43 = v114;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v114, v18, v42);
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v10, v43, v42);
    swift_storeEnumTagMultiPayload();
    sub_1000082B4(&qword_10012A248);
    *(void *)&long long v133 = &type metadata for SportsWidgetLogoView;
    *((void *)&v133 + 1) = v40;
    uint64_t v30 = v116;
    swift_getOpaqueTypeConformance2();
    sub_10001449C();
    sub_1000E4690();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v42);
  }
  else
  {
    sub_100010914((uint64_t)&v133);
    char v44 = v134;
    uint64_t v45 = v136;
    char v46 = v137;
    uint64_t v47 = v138;
    char v48 = v139;
    uint64_t v49 = v140;
    uint64_t v50 = v141;
    long long v51 = v135;
    *(_OWORD *)uint64_t v10 = v133;
    v10[16] = v44;
    *(_OWORD *)(v10 + 24) = v51;
    *((void *)v10 + 5) = v45;
    v10[48] = v46;
    *((void *)v10 + 7) = v47;
    v10[64] = v48;
    *((void *)v10 + 9) = v49;
    *((void *)v10 + 10) = v50;
    swift_storeEnumTagMultiPayload();
    sub_1000082B4(&qword_10012A248);
    unint64_t v52 = sub_100014448();
    *(void *)&long long v133 = &type metadata for SportsWidgetLogoView;
    *((void *)&v133 + 1) = v52;
    swift_getOpaqueTypeConformance2();
    sub_10001449C();
    sub_1000E4690();
  }
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v114 = v148;
  LODWORD(v113) = v149;
  uint64_t v112 = v150;
  int v111 = v151;
  uint64_t v110 = v152;
  uint64_t v109 = v153;
  uint64_t v53 = sub_1000E4510();
  uint64_t v54 = (uint64_t)v107;
  *uint64_t v107 = v53;
  *(void *)(v54 + 8) = 0;
  *(unsigned char *)(v54 + 16) = 1;
  uint64_t v55 = sub_1000082B4(&qword_10012A300);
  uint64_t v56 = v115;
  sub_100011314(v115, v54 + *(int *)(v55 + 44));
  double v57 = *(double *)(v30 + *(int *)(type metadata accessor for SportsWidgetContentViewLayout() + 136));
  uint64_t v58 = sub_1000E4F50();
  uint64_t v59 = v131;
  sub_1000B6390(0.0, 1, 0.0, 1, v57, 0, 0.0, 1, v131, 0.0, 1, 0.0, 1, v58, v60);
  sub_1000147B8(v54, &qword_10012A2E0);
  sub_100014B08(v59, v130, &qword_10012A2E8);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v107 = v154;
  int v106 = v155;
  uint64_t v105 = v156;
  int v104 = v157;
  uint64_t v103 = v158;
  uint64_t v102 = v159;
  if (sub_10000C6A8())
  {
    long long v61 = (void *)(v56 + *(int *)(v108 + 28));
    uint64_t v63 = v61[21];
    uint64_t v62 = v61[22];
    uint64_t v64 = v61[24];
    uint64_t v115 = v61[23];
    uint64_t v65 = v61[26];
    uint64_t v108 = v61[25];
    uint64_t v66 = self;
    swift_bridgeObjectRetain();
    uint64_t v67 = v117;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v68 = [v66 labelColor];
    uint64_t v69 = sub_1000E4BD0();
    *(void *)&long long v133 = 0x4049000000000000;
    *((void *)&v133 + 1) = v69;
    uint64_t v134 = v63;
    *(void *)&long long v135 = v62;
    *((void *)&v135 + 1) = v115;
    uint64_t v136 = v64;
    uint64_t v137 = v108;
    uint64_t v138 = v65;
    unint64_t v70 = sub_100014448();
    uint64_t v71 = v100;
    sub_1000E4A20();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v72 = v101;
    uint64_t v73 = v124;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v101, v71, v124);
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v10, v72, v73);
    swift_storeEnumTagMultiPayload();
    sub_1000082B4(&qword_10012A248);
    *(void *)&long long v133 = &type metadata for SportsWidgetLogoView;
    *((void *)&v133 + 1) = v70;
    swift_getOpaqueTypeConformance2();
    sub_10001449C();
    uint64_t v74 = (uint64_t)v125;
    sub_1000E4690();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v72, v73);
  }
  else
  {
    sub_100010914((uint64_t)&v133);
    char v75 = v134;
    uint64_t v76 = v136;
    char v77 = v137;
    uint64_t v78 = v138;
    char v79 = v139;
    uint64_t v80 = v140;
    uint64_t v81 = v141;
    long long v82 = v135;
    *(_OWORD *)uint64_t v10 = v133;
    v10[16] = v75;
    *(_OWORD *)(v10 + 24) = v82;
    *((void *)v10 + 5) = v76;
    v10[48] = v77;
    *((void *)v10 + 7) = v78;
    v10[64] = v79;
    *((void *)v10 + 9) = v80;
    *((void *)v10 + 10) = v81;
    swift_storeEnumTagMultiPayload();
    sub_1000082B4(&qword_10012A248);
    unint64_t v83 = sub_100014448();
    *(void *)&long long v133 = &type metadata for SportsWidgetLogoView;
    *((void *)&v133 + 1) = v83;
    swift_getOpaqueTypeConformance2();
    sub_10001449C();
    uint64_t v74 = (uint64_t)v125;
    sub_1000E4690();
  }
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v129 = v133;
  LODWORD(v124) = BYTE8(v133);
  uint64_t v117 = v134;
  LODWORD(v116) = v135;
  uint64_t v115 = *((void *)&v135 + 1);
  uint64_t v108 = v136;
  uint64_t v84 = v127;
  sub_100014754(v132, v127, &qword_10012A2F8);
  uint64_t v85 = v130;
  uint64_t v86 = v131;
  sub_100014754(v130, v131, &qword_10012A2E8);
  uint64_t v87 = v126;
  sub_100014754(v74, v126, &qword_10012A2F8);
  uint64_t v88 = v74;
  uint64_t v89 = v128;
  *uint64_t v128 = 0;
  *((unsigned char *)v89 + 8) = 1;
  v89[2] = v123;
  *((unsigned char *)v89 + 24) = v122;
  v89[4] = v121;
  *((unsigned char *)v89 + 40) = v120;
  uint64_t v90 = v118;
  v89[6] = v119;
  v89[7] = v90;
  int v91 = (int *)sub_1000082B4(&qword_10012A308);
  sub_100014754(v84, (uint64_t)v89 + v91[12], &qword_10012A2F8);
  uint64_t v92 = (char *)v89 + v91[16];
  *(void *)uint64_t v92 = 0;
  v92[8] = 1;
  *((void *)v92 + 2) = v114;
  v92[24] = v113;
  *((void *)v92 + 4) = v112;
  v92[40] = v111;
  uint64_t v93 = v109;
  *((void *)v92 + 6) = v110;
  *((void *)v92 + 7) = v93;
  sub_100014754(v86, (uint64_t)v89 + v91[20], &qword_10012A2E8);
  uint64_t v94 = (char *)v89 + v91[24];
  *(void *)uint64_t v94 = 0;
  v94[8] = 1;
  *((void *)v94 + 2) = v107;
  v94[24] = v106;
  *((void *)v94 + 4) = v105;
  v94[40] = v104;
  uint64_t v95 = v102;
  *((void *)v94 + 6) = v103;
  *((void *)v94 + 7) = v95;
  sub_100014754(v87, (uint64_t)v89 + v91[28], &qword_10012A2F8);
  uint64_t v96 = (char *)v89 + v91[32];
  *(void *)uint64_t v96 = 0;
  v96[8] = 1;
  *((void *)v96 + 2) = v129;
  v96[24] = v124;
  *((void *)v96 + 4) = v117;
  v96[40] = v116;
  uint64_t v97 = v108;
  *((void *)v96 + 6) = v115;
  *((void *)v96 + 7) = v97;
  sub_1000147B8(v88, &qword_10012A2F8);
  sub_1000147B8(v85, &qword_10012A2E8);
  sub_1000147B8(v132, &qword_10012A2F8);
  sub_1000147B8(v87, &qword_10012A2F8);
  sub_1000147B8(v86, &qword_10012A2E8);
  return sub_1000147B8(v84, &qword_10012A2F8);
}

uint64_t sub_100010914@<X0>(uint64_t a1@<X8>)
{
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1000E4A00();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  uint64_t v31 = v1 + *(int *)(type metadata accessor for SportsWidgetContentView() + 24);
  uint64_t v8 = sub_1000E4940();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_1000141AC(v3, v5, v7);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1000E4970();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_1000141AC(v8, v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1000E4920();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  sub_1000141AC(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v31 + 144);
  uint64_t KeyPath = swift_getKeyPath();
  char v27 = *(unsigned char *)(v31 + 152);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = *(void *)(v31 + 160);
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v20;
  *(unsigned char *)(a1 + 16) = v22 & 1;
  *(void *)(a1 + 24) = v24;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = v25;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v28;
  *(unsigned char *)(a1 + 64) = v27;
  *(void *)(a1 + 72) = result;
  *(void *)(a1 + 80) = v29;
  return result;
}

uint64_t sub_100010AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v55 = sub_1000082B4(&qword_10012A0A8);
  __chkstk_darwin(v55);
  long long v51 = (void *)((char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for SportsWidgetClock(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v53 = (uint64_t)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsWidgetClockView();
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v52 = (void *)((char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v54 = (uint64_t)v50 - v9;
  uint64_t v10 = sub_1000082B4(&qword_10012A1B8);
  __chkstk_darwin(v10);
  char v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000082B4(&qword_10012A1C0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000082B4(&qword_10012A1C8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000082B4(&qword_10012A1D0);
  __chkstk_darwin(v19 - 8);
  char v21 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1;
  uint64_t v23 = a1 + *(int *)(type metadata accessor for SportsWidgetContentView() + 28);
  uint64_t v24 = (int *)type metadata accessor for SportsWidgetContentViewModel(0);
  if (*(unsigned char *)(v23 + v24[14]) == 1)
  {
    sub_1000459B8((uint64_t)v57);
    long long v25 = v57[1];
    *(_OWORD *)(v15 + 8) = v57[0];
    *(_OWORD *)(v15 + 24) = v25;
    long long v26 = v57[3];
    *(_OWORD *)(v15 + 40) = v57[2];
    uint64_t v27 = v58;
    uint64_t v28 = v60;
    char *v15 = 1;
    *(_OWORD *)(v15 + 56) = v26;
    *((void *)v15 + 9) = v27;
    *((_OWORD *)v15 + 5) = v59;
    *((void *)v15 + 12) = v28;
    swift_storeEnumTagMultiPayload();
    sub_1000143B8((uint64_t)v57);
    sub_10001409C();
    sub_100014CF0(&qword_10012A108, (void (*)(uint64_t))type metadata accessor for SportsWidgetClockView);
    sub_1000E4690();
    sub_100014754((uint64_t)v18, (uint64_t)v12, &qword_10012A1C8);
    swift_storeEnumTagMultiPayload();
    sub_10001430C();
    sub_100014AC4(&qword_10012A110, &qword_10012A0A8);
    sub_1000E4690();
    sub_1000147B8((uint64_t)v18, &qword_10012A1C8);
    sub_100014400((uint64_t)v57);
LABEL_5:
    uint64_t v39 = sub_1000082B4(&qword_10012A1D8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v21, 0, 1, v39);
    uint64_t v40 = (uint64_t)v21;
    return sub_100014B08(v40, v56, &qword_10012A1D0);
  }
  v50[0] = v18;
  v50[1] = v13;
  v50[2] = v10;
  v50[3] = v16;
  if (*(unsigned char *)(v23 + v24[9]) == 1)
  {
    uint64_t v29 = v53;
    sub_10001468C(v23 + v24[6], v53, type metadata accessor for SportsWidgetClock);
    uint64_t v30 = sub_1000E48A0();
    id v31 = [self labelColor];
    uint64_t v32 = sub_1000E4BD0();
    uint64_t v33 = sub_1000E48A0();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v35 = (uint64_t)v52;
    *unint64_t v52 = KeyPath;
    sub_1000082B4(&qword_100129F20);
    swift_storeEnumTagMultiPayload();
    sub_1000140F0(v29, v35 + *(int *)(v6 + 20), type metadata accessor for SportsWidgetClock);
    uint64_t v36 = v35 + *(int *)(v6 + 24);
    *(unsigned char *)uint64_t v36 = 1;
    *(void *)(v36 + 8) = v30;
    *(void *)(v36 + 16) = v32;
    *(void *)(v36 + 24) = v33;
    uint64_t v37 = v54;
    sub_1000140F0(v35, v54, (uint64_t (*)(void))type metadata accessor for SportsWidgetClockView);
    sub_10001468C(v37, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SportsWidgetClockView);
    swift_storeEnumTagMultiPayload();
    sub_10001409C();
    sub_100014CF0(&qword_10012A108, (void (*)(uint64_t))type metadata accessor for SportsWidgetClockView);
    uint64_t v38 = v50[0];
    sub_1000E4690();
    sub_100014754(v38, (uint64_t)v12, &qword_10012A1C8);
    swift_storeEnumTagMultiPayload();
    sub_10001430C();
    sub_100014AC4(&qword_10012A110, &qword_10012A0A8);
    sub_1000E4690();
    sub_1000147B8(v38, &qword_10012A1C8);
    sub_1000146F4(v37, (uint64_t (*)(void))type metadata accessor for SportsWidgetClockView);
    goto LABEL_5;
  }
  if (*(unsigned char *)(v23 + v24[10]) == 1)
  {
    uint64_t v42 = sub_1000E45C0();
    uint64_t v43 = (uint64_t)v51;
    *long long v51 = v42;
    *(void *)(v43 + 8) = 0;
    *(unsigned char *)(v43 + 16) = 1;
    uint64_t v44 = sub_1000082B4(&qword_10012A100);
    sub_100011978(v22, v43 + *(int *)(v44 + 44));
    sub_100014754(v43, (uint64_t)v12, &qword_10012A0A8);
    swift_storeEnumTagMultiPayload();
    sub_10001430C();
    sub_100014AC4(&qword_10012A110, &qword_10012A0A8);
    sub_1000E4690();
    sub_1000147B8(v43, &qword_10012A0A8);
    uint64_t v45 = sub_1000082B4(&qword_10012A1D8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v21, 0, 1, v45);
    uint64_t v40 = (uint64_t)v21;
    return sub_100014B08(v40, v56, &qword_10012A1D0);
  }
  uint64_t v46 = sub_1000082B4(&qword_10012A1D8);
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
  uint64_t v48 = v46;
  uint64_t v49 = v56;

  return v47(v49, 1, 1, v48);
}

uint64_t sub_100011314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v3 = sub_1000082B4(&qword_10012A178);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000082B4(&qword_10012A180) - 8;
  uint64_t v6 = __chkstk_darwin(v63);
  uint64_t v76 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v71 = (uint64_t)&v57 - v8;
  uint64_t v9 = sub_1000082B4(&qword_10012A310);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000082B4(&qword_10012A318);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v73 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v72 = (uint64_t)&v57 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v57 - v18;
  __chkstk_darwin(v17);
  char v21 = (char *)&v57 - v20;
  uint64_t v64 = (uint64_t)&v57 - v20;
  uint64_t v22 = type metadata accessor for SportsWidgetContentView();
  uint64_t v23 = a1 + *(int *)(v22 + 28);
  long long v24 = *(_OWORD *)(v23 + 48);
  v91[2] = *(_OWORD *)(v23 + 32);
  v91[3] = v24;
  char v92 = *(unsigned char *)(v23 + 112);
  long long v25 = *(_OWORD *)(v23 + 96);
  long long v26 = *(_OWORD *)(v23 + 64);
  v91[5] = *(_OWORD *)(v23 + 80);
  v91[6] = v25;
  v91[4] = v26;
  long long v27 = *(_OWORD *)(v23 + 16);
  v91[0] = *(_OWORD *)v23;
  v91[1] = v27;
  uint64_t v28 = a1 + *(int *)(v22 + 24);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)(v28 + 96);
  v11[16] = 0;
  uint64_t v62 = sub_1000082B4(&qword_10012A320);
  sub_100012E98(a1, (uint64_t)v91, (uint64_t)&v11[*(int *)(v62 + 44)]);
  double v29 = *(double *)(v28 + 72);
  uint64_t v30 = sub_1000E4F50();
  char v75 = v19;
  sub_1000B63EC(0.0, 1, 0.0, 1, v29, 0, 0.0, 1, (uint64_t)v19, 0.0, 1, 0.0, 1, v30, v31);
  sub_1000147B8((uint64_t)v11, &qword_10012A310);
  sub_100014B08((uint64_t)v19, (uint64_t)v21, &qword_10012A318);
  uint64_t v32 = type metadata accessor for SportsWidgetContentViewLayout();
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v70 = v77;
  int v69 = v78;
  uint64_t v68 = v79;
  int v67 = v80;
  uint64_t v65 = v82;
  uint64_t v66 = v81;
  *(void *)uint64_t v5 = sub_1000E45C0();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v33 = sub_1000082B4(&qword_10012A1B0);
  sub_100010AF0(a1, (uint64_t)&v5[*(int *)(v33 + 44)]);
  uint64_t v34 = *(void *)(v28 + *(int *)(v32 + 144));
  uint64_t v35 = v76;
  sub_100014754((uint64_t)v5, v76, &qword_10012A178);
  *(void *)(v35 + *(int *)(v63 + 44)) = v34;
  sub_1000147B8((uint64_t)v5, &qword_10012A178);
  uint64_t v36 = v71;
  sub_100014B08(v35, v71, &qword_10012A180);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v63 = v83;
  int v61 = v84;
  uint64_t v60 = v85;
  int v59 = v86;
  uint64_t v57 = v88;
  uint64_t v58 = v87;
  long long v37 = *(_OWORD *)(v23 + 200);
  v89[4] = *(_OWORD *)(v23 + 184);
  v89[5] = v37;
  v89[6] = *(_OWORD *)(v23 + 216);
  char v90 = *(unsigned char *)(v23 + 232);
  long long v38 = *(_OWORD *)(v23 + 136);
  v89[0] = *(_OWORD *)(v23 + 120);
  v89[1] = v38;
  long long v39 = *(_OWORD *)(v23 + 168);
  v89[2] = *(_OWORD *)(v23 + 152);
  v89[3] = v39;
  *(_OWORD *)uint64_t v11 = *(_OWORD *)(v28 + 96);
  uint64_t v40 = (uint64_t)&v11[*(int *)(v62 + 44)];
  v11[16] = 0;
  sub_100012E98(a1, (uint64_t)v89, v40);
  double v41 = *(double *)(v28 + 72);
  uint64_t v42 = sub_1000E4F50();
  uint64_t v43 = v72;
  sub_1000B63EC(0.0, 1, 0.0, 1, v41, 0, 0.0, 1, v72, 0.0, 1, 0.0, 1, v42, v44);
  sub_1000147B8((uint64_t)v11, &qword_10012A310);
  uint64_t v45 = (uint64_t)v75;
  sub_100014B08(v43, (uint64_t)v75, &qword_10012A318);
  uint64_t v46 = v64;
  sub_100014754(v64, v43, &qword_10012A318);
  uint64_t v47 = v36;
  uint64_t v48 = v76;
  sub_100014754(v36, v76, &qword_10012A180);
  uint64_t v49 = v73;
  sub_100014754(v45, v73, &qword_10012A318);
  uint64_t v50 = v74;
  sub_100014754(v43, v74, &qword_10012A318);
  long long v51 = (int *)sub_1000082B4(&qword_10012A328);
  uint64_t v52 = v50 + v51[12];
  *(void *)uint64_t v52 = 0;
  *(unsigned char *)(v52 + 8) = 1;
  *(void *)(v52 + 16) = v70;
  *(unsigned char *)(v52 + 24) = v69;
  *(void *)(v52 + 32) = v68;
  *(unsigned char *)(v52 + 40) = v67;
  uint64_t v53 = v65;
  *(void *)(v52 + 48) = v66;
  *(void *)(v52 + 56) = v53;
  sub_100014754(v48, v50 + v51[16], &qword_10012A180);
  uint64_t v54 = v50 + v51[20];
  *(void *)uint64_t v54 = 0;
  *(unsigned char *)(v54 + 8) = 1;
  *(void *)(v54 + 16) = v63;
  *(unsigned char *)(v54 + 24) = v61;
  *(void *)(v54 + 32) = v60;
  *(unsigned char *)(v54 + 40) = v59;
  uint64_t v55 = v57;
  *(void *)(v54 + 48) = v58;
  *(void *)(v54 + 56) = v55;
  sub_100014754(v49, v50 + v51[24], &qword_10012A318);
  sub_1000147B8((uint64_t)v75, &qword_10012A318);
  sub_1000147B8(v47, &qword_10012A180);
  sub_1000147B8(v46, &qword_10012A318);
  sub_1000147B8(v49, &qword_10012A318);
  sub_1000147B8(v48, &qword_10012A180);
  return sub_1000147B8(v43, &qword_10012A318);
}

uint64_t sub_100011978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = sub_1000082B4(&qword_10012A118);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v77 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v75 = (uint64_t)&v71 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v74 = (char *)&v71 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v71 - v10;
  uint64_t v12 = type metadata accessor for SportsWidgetContentView();
  uint64_t v13 = a1 + *(int *)(v12 + 28);
  uint64_t v14 = (uint64_t *)(v13 + *(int *)(type metadata accessor for SportsWidgetContentViewModel(0) + 28));
  uint64_t v15 = v14[1];
  unsigned __int8 v78 = v11;
  uint64_t v72 = v12;
  uint64_t v73 = a1;
  if (v15)
  {
    uint64_t v79 = *v14;
    uint64_t v80 = v15;
    sub_100014158();
    uint64_t v71 = v14;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1000E4A00();
    uint64_t v18 = v17;
    char v20 = v19 & 1;
    uint64_t v21 = a1 + *(int *)(v12 + 24);
    uint64_t v22 = type metadata accessor for SportsWidgetContentViewLayout();
    uint64_t v23 = sub_1000E4940();
    uint64_t v25 = v24;
    char v27 = v26 & 1;
    sub_1000141AC(v16, v18, v20);
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1000E4970();
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    LOBYTE(v16) = v33 & 1;
    uint64_t v34 = v25;
    uint64_t v11 = v78;
    sub_1000141AC(v23, v34, v27);
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void *)(v21 + *(int *)(v22 + 156));
    uint64_t KeyPath = swift_getKeyPath();
    LOBYTE(v22) = *(unsigned char *)(v21 + *(int *)(v22 + 160));
    uint64_t v37 = swift_getKeyPath();
    uint64_t v79 = v28;
    uint64_t v80 = v30;
    char v81 = v16;
    uint64_t v82 = v32;
    uint64_t v83 = KeyPath;
    uint64_t v84 = v35;
    char v85 = 0;
    uint64_t v86 = v37;
    char v87 = v22;
    sub_1000082B4(&qword_10012A138);
    sub_1000141CC();
    sub_1000E4A20();
    uint64_t v14 = v71;
    sub_1000141AC(v28, v30, v16);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_1000082B4(&qword_10012A120);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v11, 0, 1, v38);
  }
  else
  {
    uint64_t v39 = sub_1000082B4(&qword_10012A120);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v11, 1, 1, v39);
  }
  uint64_t v40 = v14[3];
  if (v40)
  {
    uint64_t v79 = v14[2];
    uint64_t v80 = v40;
    sub_100014158();
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1000E4A00();
    uint64_t v43 = v42;
    char v45 = v44 & 1;
    uint64_t v46 = v73 + *(int *)(v72 + 24);
    uint64_t v47 = type metadata accessor for SportsWidgetContentViewLayout();
    uint64_t v48 = sub_1000E4940();
    uint64_t v50 = v49;
    char v52 = v51 & 1;
    sub_1000141AC(v41, v43, v45);
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_1000E4970();
    uint64_t v55 = v54;
    uint64_t v57 = v56;
    char v59 = v58 & 1;
    sub_1000141AC(v48, v50, v52);
    swift_bridgeObjectRelease();
    uint64_t v60 = *(void *)(v46 + *(int *)(v47 + 156));
    uint64_t v61 = swift_getKeyPath();
    LOBYTE(v47) = *(unsigned char *)(v46 + *(int *)(v47 + 160));
    uint64_t v62 = swift_getKeyPath();
    uint64_t v79 = v53;
    uint64_t v80 = v55;
    char v81 = v59;
    uint64_t v82 = v57;
    uint64_t v83 = v61;
    uint64_t v84 = v60;
    char v85 = 0;
    uint64_t v86 = v62;
    char v87 = v47;
    sub_1000082B4(&qword_10012A138);
    sub_1000141CC();
    uint64_t v63 = (uint64_t)v74;
    uint64_t v11 = v78;
    sub_1000E4A20();
    sub_1000141AC(v53, v55, v59);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_1000082B4(&qword_10012A120);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
  }
  else
  {
    uint64_t v65 = sub_1000082B4(&qword_10012A120);
    uint64_t v63 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v74, 1, 1, v65);
  }
  uint64_t v66 = v75;
  sub_100014754((uint64_t)v11, v75, &qword_10012A118);
  uint64_t v67 = v77;
  sub_100014754(v63, v77, &qword_10012A118);
  uint64_t v68 = v76;
  sub_100014754(v66, v76, &qword_10012A118);
  uint64_t v69 = sub_1000082B4(&qword_10012A128);
  sub_100014754(v67, v68 + *(int *)(v69 + 48), &qword_10012A118);
  sub_1000147B8(v63, &qword_10012A118);
  sub_1000147B8((uint64_t)v11, &qword_10012A118);
  sub_1000147B8(v67, &qword_10012A118);
  return sub_1000147B8(v66, &qword_10012A118);
}

uint64_t sub_100011F68@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v5 = sub_1000082B4(&qword_10012A1E8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = sub_1000082B4(&qword_10012A1F0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v50 - v16;
  __chkstk_darwin(v15);
  char v19 = (char *)&v50 - v18;
  uint64_t v20 = sub_1000082B4(&qword_10012A1F8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v50 - v24;
  if (sub_10000C6A8())
  {
    uint64_t v56 = v11;
    uint64_t v57 = v25;
    uint64_t v27 = a2[6];
    uint64_t v26 = a2[7];
    uint64_t v61 = a1;
    uint64_t v54 = a2[8];
    uint64_t v55 = v12;
    uint64_t v28 = a2[9];
    uint64_t v53 = a2[10];
    char v59 = v19;
    uint64_t v29 = a2[11];
    uint64_t v30 = self;
    swift_bridgeObjectRetain();
    char v58 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = [v30 labelColor];
    uint64_t v32 = sub_1000E4BD0();
    uint64_t v63 = 0x4049000000000000;
    uint64_t v64 = v32;
    uint64_t v65 = v27;
    uint64_t v66 = v26;
    uint64_t v67 = v54;
    uint64_t v68 = v28;
    uint64_t v69 = v53;
    uint64_t v70 = v29;
    sub_100014448();
    sub_1000E4A20();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v33 = v55;
    uint64_t v34 = v56;
    uint64_t v35 = v59;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v59, v17, v56);
    type metadata accessor for SportsWidgetContentView();
    sub_1000E4F50();
    sub_1000E40A0();
    uint64_t v54 = v63;
    LODWORD(v53) = v64;
    uint64_t v52 = v65;
    int v51 = v66;
    uint64_t v36 = v67;
    uint64_t v50 = v68;
    uint64_t v37 = v33;
    uint64_t v38 = v10;
    uint64_t v39 = a2;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    uint64_t v41 = v60;
    v40(v60, v35, v34);
    v40(v23, v41, v34);
    a2 = v39;
    uint64_t v10 = v38;
    uint64_t v42 = &v23[*(int *)(sub_1000082B4(&qword_10012A220) + 48)];
    *(void *)uint64_t v42 = 0;
    v42[8] = 1;
    *((void *)v42 + 2) = v54;
    v42[24] = v53;
    *((void *)v42 + 4) = v52;
    v42[40] = v51;
    *((void *)v42 + 6) = v36;
    uint64_t v25 = v57;
    uint64_t v8 = v58;
    *((void *)v42 + 7) = v50;
    uint64_t v43 = *(void (**)(char *, uint64_t))(v37 + 8);
    v43(v59, v34);
    v43(v41, v34);
    a1 = v61;
    uint64_t v44 = sub_1000082B4(&qword_10012A200);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v23, 0, 1, v44);
    sub_100014B08((uint64_t)v23, (uint64_t)v25, &qword_10012A1F8);
  }
  else
  {
    uint64_t v45 = sub_1000082B4(&qword_10012A200);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v25, 1, 1, v45);
  }
  *(_OWORD *)uint64_t v10 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for SportsWidgetContentView() + 24) + 96);
  v10[16] = 0;
  uint64_t v46 = sub_1000082B4(&qword_10012A208);
  sub_10001250C(a1, (uint64_t)a2, &v10[*(int *)(v46 + 44)]);
  sub_100014754((uint64_t)v25, (uint64_t)v23, &qword_10012A1F8);
  sub_100014754((uint64_t)v10, (uint64_t)v8, &qword_10012A1E8);
  uint64_t v47 = v62;
  sub_100014754((uint64_t)v23, v62, &qword_10012A1F8);
  uint64_t v48 = sub_1000082B4(&qword_10012A210);
  sub_100014754((uint64_t)v8, v47 + *(int *)(v48 + 48), &qword_10012A1E8);
  sub_1000147B8((uint64_t)v10, &qword_10012A1E8);
  sub_1000147B8((uint64_t)v25, &qword_10012A1F8);
  sub_1000147B8((uint64_t)v8, &qword_10012A1E8);
  return sub_1000147B8((uint64_t)v23, &qword_10012A1F8);
}

uint64_t sub_10001250C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v74 = a3;
  uint64_t v5 = sub_1000082B4(&qword_10012A228);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v80 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v73 = (uint64_t *)((char *)&v60 - v8);
  uint64_t v9 = sub_1000082B4(&qword_10012A230);
  uint64_t v71 = *(void *)(v9 - 8);
  uint64_t v72 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v69 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v60 - v12;
  uint64_t v13 = sub_1000082B4(&qword_10012A238);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v79 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v84 = (char *)&v60 - v16;
  uint64_t v17 = sub_1000082B4(&qword_10012A240);
  uint64_t v82 = *(void *)(v17 - 8);
  uint64_t v83 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  unsigned __int8 v78 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v60 - v21;
  __chkstk_darwin(v20);
  char v85 = (char *)&v60 - v23;
  uint64_t v24 = a1 + *(int *)(type metadata accessor for SportsWidgetContentView() + 28);
  uint64_t v66 = type metadata accessor for SportsWidgetContentViewModel(0);
  uint64_t v67 = v24;
  LODWORD(v77) = *(unsigned __int8 *)(v24 + *(int *)(v66 + 44));
  uint64_t v70 = a1;
  sub_100010914((uint64_t)&v92);
  uint64_t v25 = v92;
  uint64_t v26 = v93;
  LOBYTE(v24) = v94;
  uint64_t v75 = v96;
  uint64_t v76 = v95;
  uint64_t v86 = v92;
  *(void *)&long long v87 = v93;
  BYTE8(v87) = v94;
  *(void *)uint64_t v88 = v95;
  *(void *)&v88[8] = v96;
  *(void *)&v88[16] = v97;
  v88[24] = v98;
  *(void *)&v88[32] = v99;
  v88[40] = v100;
  uint64_t v81 = a2;
  int v65 = *(unsigned __int8 *)(a2 + 96);
  *(void *)&v88[48] = v101;
  *(void *)&long long v89 = v102;
  sub_1000082B4(&qword_10012A248);
  sub_10001449C();
  sub_1000E4A20();
  sub_1000141AC(v25, v26, v24);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = v82;
  uint64_t v28 = v22;
  uint64_t v29 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v85, v28, v83);
  if (v77)
  {
    if (*(unsigned char *)(v67 + *(int *)(v66 + 56)) == 1)
    {
      sub_1000459B8((uint64_t)v106);
      long long v87 = v106[0];
      *(_OWORD *)uint64_t v88 = v106[1];
      *(_OWORD *)&v88[16] = v106[2];
      uint64_t v86 = 0;
      *(_OWORD *)&v88[32] = v106[3];
      *(void *)&v88[48] = v107;
      long long v89 = v108;
      uint64_t v90 = v109;
      char v91 = 0;
    }
    else
    {
      uint64_t v39 = *(void *)(v81 + 16);
      uint64_t v38 = *(void *)(v81 + 24);
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1000E47B0();
      id v41 = [self labelColor];
      uint64_t v42 = sub_1000E4BD0();
      uint64_t v86 = v39;
      *(void *)&long long v87 = v38;
      *((void *)&v87 + 1) = v40;
      *(void *)uint64_t v88 = v42;
      *(int64x2_t *)&v88[8] = vdupq_n_s64(1uLL);
      *(_OWORD *)&v88[24] = xmmword_1000EE790;
      *(_OWORD *)&v88[40] = 0u;
      long long v89 = 0u;
      uint64_t v90 = 0;
      char v91 = 1;
    }
    sub_10001409C();
    sub_10001453C();
    sub_1000E4690();
    uint64_t v43 = v93;
    uint64_t v45 = v102;
    uint64_t v44 = v103;
    uint64_t v46 = v104;
    char v47 = v105;
    uint64_t v61 = v94;
    uint64_t v62 = v92;
    uint64_t v63 = v95;
    uint64_t v64 = v96;
    uint64_t v66 = v97;
    uint64_t v67 = v101;
    uint64_t v75 = v98;
    uint64_t v76 = v99;
    uint64_t v77 = v100;
    sub_1000082B4(&qword_10012A280);
    sub_100014590();
    uint64_t v48 = v69;
    sub_1000E4A20();
    sub_10001460C(v62, v43, v61, v63, v64, v66, v75, v76, v77, v67, v45, v44, v46, v47);
    uint64_t v37 = v71;
    uint64_t v36 = v72;
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
    uint64_t v50 = v68;
    v49(v68, v48, v72);
    uint64_t v34 = (uint64_t)v84;
    v49(v84, v50, v36);
    uint64_t v31 = 0;
    uint64_t v33 = v73;
    uint64_t v32 = v74;
    uint64_t v27 = v82;
    uint64_t v30 = v83;
    uint64_t v35 = v81;
  }
  else
  {
    uint64_t v30 = v29;
    uint64_t v31 = 1;
    uint64_t v33 = v73;
    uint64_t v32 = v74;
    uint64_t v34 = (uint64_t)v84;
    uint64_t v35 = v81;
    uint64_t v37 = v71;
    uint64_t v36 = v72;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v34, v31, 1, v36);
  if (*(unsigned char *)(v35 + 112))
  {
    sub_100012CFC(v33);
    uint64_t v52 = sub_1000082B4(&qword_10012A268);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v33, 0, 1, v52);
  }
  else
  {
    uint64_t v51 = sub_1000082B4(&qword_10012A268);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v33, 1, 1, v51);
  }
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v54 = v78;
  v53(v78, v85, v30);
  uint64_t v55 = v79;
  sub_100014754(v34, v79, &qword_10012A238);
  uint64_t v56 = v80;
  sub_100014754((uint64_t)v33, v80, &qword_10012A228);
  v53(v32, v54, v30);
  uint64_t v57 = sub_1000082B4(&qword_10012A270);
  sub_100014754(v55, (uint64_t)&v32[*(int *)(v57 + 48)], &qword_10012A238);
  sub_100014754(v56, (uint64_t)&v32[*(int *)(v57 + 64)], &qword_10012A228);
  sub_1000147B8((uint64_t)v33, &qword_10012A228);
  sub_1000147B8((uint64_t)v84, &qword_10012A238);
  char v58 = *(void (**)(char *, uint64_t))(v27 + 8);
  v58(v85, v30);
  sub_1000147B8(v56, &qword_10012A228);
  sub_1000147B8(v55, &qword_10012A238);
  return ((uint64_t (*)(char *, uint64_t))v58)(v54, v30);
}

uint64_t sub_100012CFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1000082B4(&qword_10012A290);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = v1 + *(int *)(type metadata accessor for SportsWidgetContentView() + 24);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1000E4CD0();
  uint64_t v9 = *(void *)(v7 + 208);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = *(void *)(v7 + 200);
  uint64_t v12 = swift_getKeyPath();
  uint64_t v13 = v7 + *(int *)(type metadata accessor for SportsWidgetContentViewLayout() + 116);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = (char *)v6 + *(int *)(v4 + 36);
  uint64_t v16 = sub_1000E4CF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, v13, v16);
  uint64_t *v6 = v14;
  uint64_t v17 = sub_1000082B4(&qword_10012A268);
  sub_100014754((uint64_t)v6, (uint64_t)a1 + *(int *)(v17 + 36), &qword_10012A290);
  *a1 = v8;
  a1[1] = KeyPath;
  a1[2] = v9;
  a1[3] = v12;
  a1[4] = v11;
  swift_retain();
  swift_retain();
  return sub_1000147B8((uint64_t)v6, &qword_10012A290);
}

uint64_t sub_100012E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v4 = sub_1000082B4(&qword_10012A330);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v37 - v8;
  uint64_t v10 = sub_1000082B4(&qword_10012A240);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v37 - v15;
  uint64_t v17 = sub_1000082B4(&qword_10012A338);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v37 - v21;
  if (sub_10000C6A8())
  {
    uint64_t v39 = v16;
    uint64_t v40 = v10;
    id v41 = v22;
    uint64_t v42 = v20;
    uint64_t v43 = v9;
    uint64_t v44 = v7;
    type metadata accessor for SportsWidgetContentView();
    type metadata accessor for SportsWidgetContentViewModel(0);
    uint64_t v38 = a1;
    sub_100010914((uint64_t)&v58);
    uint64_t v23 = v58;
    uint64_t v24 = v59;
    char v25 = v60;
    v37[1] = v61;
    v37[0] = v62;
    uint64_t v47 = v58;
    uint64_t v48 = v59;
    char v49 = v60;
    uint64_t v50 = v61;
    uint64_t v51 = v62;
    uint64_t v52 = v63;
    char v53 = v64;
    uint64_t v54 = v65;
    char v55 = v66;
    uint64_t v56 = v67;
    uint64_t v57 = v68;
    sub_1000082B4(&qword_10012A248);
    sub_10001449C();
    sub_1000E4A20();
    sub_1000141AC(v23, v24, v25);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v27 = v39;
    uint64_t v28 = v40;
    v26(v39, v14, v40);
    uint64_t v22 = v41;
    v26(v41, v27, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v28);
    a1 = v38;
    uint64_t v7 = v44;
    uint64_t v29 = v46;
    uint64_t v9 = v43;
    uint64_t v20 = v42;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v22, 1, 1, v10);
    uint64_t v29 = v46;
  }
  uint64_t v30 = type metadata accessor for SportsWidgetContentView();
  uint64_t v31 = a1 + *(int *)(v30 + 28);
  if (*(unsigned char *)(v31 + *(int *)(type metadata accessor for SportsWidgetContentViewModel(0) + 44)) == 1)
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)(a1 + *(int *)(v30 + 24) + 168);
    uint64_t v32 = sub_1000082B4(&qword_10012A350);
    sub_10001340C(a1, v45, &v9[*(int *)(v32 + 44)]);
    uint64_t v33 = sub_1000082B4(&qword_10012A340);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v9, 0, 1, v33);
  }
  else
  {
    uint64_t v34 = sub_1000082B4(&qword_10012A340);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v9, 1, 1, v34);
  }
  sub_100014754((uint64_t)v22, (uint64_t)v20, &qword_10012A338);
  sub_100014754((uint64_t)v9, (uint64_t)v7, &qword_10012A330);
  sub_100014754((uint64_t)v20, v29, &qword_10012A338);
  uint64_t v35 = sub_1000082B4(&qword_10012A348);
  sub_100014754((uint64_t)v7, v29 + *(int *)(v35 + 48), &qword_10012A330);
  sub_1000147B8((uint64_t)v9, &qword_10012A330);
  sub_1000147B8((uint64_t)v22, &qword_10012A338);
  sub_1000147B8((uint64_t)v7, &qword_10012A330);
  return sub_1000147B8((uint64_t)v20, &qword_10012A338);
}

uint64_t sub_10001340C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v86 = a3;
  uint64_t v76 = sub_1000082B4(&qword_10012A290);
  __chkstk_darwin(v76);
  uint64_t v77 = (uint64_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = sub_1000082B4(&qword_10012A268);
  __chkstk_darwin(v75);
  uint64_t v83 = (uint64_t *)((char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_1000082B4(&qword_10012A358);
  __chkstk_darwin(v80);
  uint64_t v81 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000082B4(&qword_10012A360);
  uint64_t v8 = __chkstk_darwin(v79);
  uint64_t v85 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v78 = (uint64_t)&v62 - v11;
  __chkstk_darwin(v10);
  uint64_t v84 = (uint64_t)&v62 - v12;
  uint64_t v13 = sub_1000082B4(&qword_10012A230);
  uint64_t v88 = *(void *)(v13 - 8);
  uint64_t v89 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v82 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t KeyPath = (char *)&v62 - v17;
  __chkstk_darwin(v16);
  long long v87 = (char *)&v62 - v18;
  uint64_t v72 = type metadata accessor for SportsWidgetContentView();
  uint64_t v19 = *(int *)(v72 + 28);
  uint64_t v74 = a1;
  if (*(unsigned char *)(a1 + v19 + *(int *)(type metadata accessor for SportsWidgetContentViewModel(0) + 56)) == 1)
  {
    sub_1000459B8((uint64_t)v110);
    long long v91 = v110[0];
    *(_OWORD *)uint64_t v92 = v110[1];
    *(_OWORD *)&v92[16] = v110[2];
    uint64_t v90 = 0;
    *(_OWORD *)&v92[32] = v110[3];
    *(void *)&v92[48] = v111;
    long long v93 = v112;
    uint64_t v94 = v113;
    char v95 = 0;
  }
  else
  {
    uint64_t v21 = *(void *)(a2 + 16);
    uint64_t v20 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1000E47B0();
    id v23 = [self labelColor];
    uint64_t v24 = sub_1000E4BD0();
    uint64_t v90 = v21;
    *(void *)&long long v91 = v20;
    *((void *)&v91 + 1) = v22;
    *(void *)uint64_t v92 = v24;
    *(int64x2_t *)&v92[8] = vdupq_n_s64(1uLL);
    *(_OWORD *)&v92[24] = xmmword_1000EE790;
    *(_OWORD *)&v92[40] = 0u;
    long long v93 = 0u;
    uint64_t v94 = 0;
    char v95 = 1;
  }
  sub_10001409C();
  sub_10001453C();
  sub_1000E4690();
  uint64_t v25 = v97;
  uint64_t v26 = v106;
  uint64_t v27 = v107;
  uint64_t v28 = v108;
  char v29 = v109;
  uint64_t v62 = v98;
  uint64_t v63 = v96;
  uint64_t v64 = v99;
  uint64_t v65 = v100;
  uint64_t v66 = v101;
  uint64_t v67 = v105;
  uint64_t v68 = v102;
  uint64_t v69 = v103;
  uint64_t v70 = v104;
  sub_1000082B4(&qword_10012A280);
  uint64_t v71 = a2;
  sub_100014590();
  uint64_t v30 = KeyPath;
  sub_1000E4A20();
  sub_10001460C(v63, v25, v62, v64, v65, v66, v68, v69, v70, v67, v26, v27, v28, v29);
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v87, v30, v89);
  uint64_t v31 = v74 + *(int *)(v72 + 24);
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_1000E4CD0();
  uint64_t v32 = *(void *)(v31 + 208);
  uint64_t KeyPath = (char *)swift_getKeyPath();
  uint64_t v33 = *(void *)(v31 + 200);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = type metadata accessor for SportsWidgetContentViewLayout();
  uint64_t v36 = v31 + *(int *)(v35 + 116);
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = v77;
  uint64_t v39 = (char *)v77 + *(int *)(v76 + 28);
  uint64_t v40 = sub_1000E4CF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v39, v36, v40);
  uint64_t *v38 = v37;
  id v41 = v83;
  sub_100014754((uint64_t)v38, (uint64_t)v83 + *(int *)(v75 + 36), &qword_10012A290);
  uint64_t v42 = KeyPath;
  *id v41 = v74;
  v41[1] = (uint64_t)v42;
  v41[2] = v32;
  v41[3] = v34;
  v41[4] = v33;
  swift_retain();
  swift_retain();
  sub_1000147B8((uint64_t)v38, &qword_10012A290);
  uint64_t v43 = *(void *)(v31 + *(int *)(v35 + 120));
  id v44 = [self preferredFontForTextStyle:UIFontTextStyleCaption2];
  [v44 pointSize];
  double v46 = v45;

  uint64_t v47 = v81;
  sub_100014754((uint64_t)v41, v81, &qword_10012A268);
  uint64_t v48 = v47 + *(int *)(v80 + 36);
  *(void *)uint64_t v48 = v43;
  *(double *)(v48 + 8) = v46 + -3.0;
  sub_1000147B8((uint64_t)v41, &qword_10012A268);
  if (*(unsigned char *)(v71 + 112)) {
    double v49 = 1.0;
  }
  else {
    double v49 = 0.0;
  }
  uint64_t v50 = v78;
  sub_100014754(v47, v78, &qword_10012A358);
  *(double *)(v50 + *(int *)(v79 + 36)) = v49;
  sub_1000147B8(v47, &qword_10012A358);
  uint64_t v51 = v84;
  sub_100014B08(v50, v84, &qword_10012A360);
  uint64_t v52 = v87;
  uint64_t v53 = v88;
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
  char v55 = v82;
  uint64_t v56 = v89;
  v54(v82, v87, v89);
  uint64_t v57 = v85;
  sub_100014754(v51, v85, &qword_10012A360);
  uint64_t v58 = v86;
  v54(v86, v55, v56);
  uint64_t v59 = sub_1000082B4(&qword_10012A368);
  sub_100014754(v57, (uint64_t)&v58[*(int *)(v59 + 48)], &qword_10012A360);
  sub_1000147B8(v51, &qword_10012A360);
  char v60 = *(void (**)(char *, uint64_t))(v53 + 8);
  v60(v52, v56);
  sub_1000147B8(v57, &qword_10012A360);
  return ((uint64_t (*)(char *, uint64_t))v60)(v55, v56);
}

uint64_t sub_100013BB4()
{
  return sub_1000E4AF0();
}

unint64_t sub_100013BD4()
{
  unint64_t result = qword_10012A020;
  if (!qword_10012A020)
  {
    sub_100008354(&qword_100129FE8);
    sub_100013C50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A020);
  }
  return result;
}

unint64_t sub_100013C50()
{
  unint64_t result = qword_10012A028;
  if (!qword_10012A028)
  {
    sub_100008354(&qword_10012A030);
    sub_100014AC4(&qword_10012A038, &qword_10012A040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A028);
  }
  return result;
}

uint64_t sub_100013CF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v5 = sub_1000E46F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012A380);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000082B4(&qword_10012A388);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v32 = v15;
    uint64_t v33 = v14;
    swift_bridgeObjectRetain();
    sub_1000E46D0();
    uint64_t v30 = v9;
    uint64_t v18 = sub_1000082B4(&qword_10012A390);
    uint64_t v31 = a3;
    uint64_t v19 = v18;
    uint64_t v20 = sub_100014AC4(&qword_10012A398, &qword_10012A390);
    sub_1000E4B60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v35 = v34;
    uint64_t v36 = a2;
    sub_100014158();
    uint64_t v21 = sub_1000E4A00();
    uint64_t v23 = v22;
    char v25 = v24 & 1;
    uint64_t v35 = v19;
    uint64_t v36 = v20;
    swift_getOpaqueTypeConformance2();
    uint64_t v26 = v30;
    sub_1000E4AE0();
    sub_1000141AC(v21, v23, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
    uint64_t v27 = v31;
    sub_100014B08((uint64_t)v17, v31, &qword_10012A388);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v33);
  }
  else
  {
    char v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 56);
    return v29(a3, 1, 1);
  }
}

uint64_t sub_100014070()
{
  return sub_1000E4080();
}

uint64_t sub_10001408C@<X0>(uint64_t a1@<X8>)
{
  return sub_100013CF0(*v1, v1[1], a1);
}

unint64_t sub_10001409C()
{
  unint64_t result = qword_10012A098;
  if (!qword_10012A098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A098);
  }
  return result;
}

uint64_t sub_1000140F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100014158()
{
  unint64_t result = qword_10012A130;
  if (!qword_10012A130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A130);
  }
  return result;
}

uint64_t sub_1000141AC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1000141CC()
{
  unint64_t result = qword_10012A140;
  if (!qword_10012A140)
  {
    sub_100008354(&qword_10012A138);
    sub_10001426C();
    sub_100014AC4(&qword_10012A168, &qword_10012A170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A140);
  }
  return result;
}

unint64_t sub_10001426C()
{
  unint64_t result = qword_10012A148;
  if (!qword_10012A148)
  {
    sub_100008354(&qword_10012A150);
    sub_100014AC4(&qword_10012A158, &qword_10012A160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A148);
  }
  return result;
}

unint64_t sub_10001430C()
{
  unint64_t result = qword_10012A1E0;
  if (!qword_10012A1E0)
  {
    sub_100008354(&qword_10012A1C8);
    sub_10001409C();
    sub_100014CF0(&qword_10012A108, (void (*)(uint64_t))type metadata accessor for SportsWidgetClockView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A1E0);
  }
  return result;
}

uint64_t sub_1000143B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100014400(uint64_t a1)
{
  return a1;
}

unint64_t sub_100014448()
{
  unint64_t result = qword_10012A218;
  if (!qword_10012A218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A218);
  }
  return result;
}

unint64_t sub_10001449C()
{
  unint64_t result = qword_10012A250;
  if (!qword_10012A250)
  {
    sub_100008354(&qword_10012A248);
    sub_1000141CC();
    sub_100014AC4(&qword_10012A258, &qword_10012A260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A250);
  }
  return result;
}

unint64_t sub_10001453C()
{
  unint64_t result = qword_10012A278;
  if (!qword_10012A278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A278);
  }
  return result;
}

unint64_t sub_100014590()
{
  unint64_t result = qword_10012A288;
  if (!qword_10012A288)
  {
    sub_100008354(&qword_10012A280);
    sub_10001409C();
    sub_10001453C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A288);
  }
  return result;
}

uint64_t sub_10001460C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a14) {
    swift_bridgeObjectRelease();
  }
  else {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t sub_10001468C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000146F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100014754(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000082B4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000147B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000082B4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for SportsWidgetScoreViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SportsWidgetScoreViewModel()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SportsWidgetScoreViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SportsWidgetScoreViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetContentViewVoiceOverModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetContentViewVoiceOverModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetContentViewVoiceOverModifier()
{
  return &type metadata for SportsWidgetContentViewVoiceOverModifier;
}

unint64_t sub_100014984()
{
  unint64_t result = qword_10012A370;
  if (!qword_10012A370)
  {
    sub_100008354(&qword_10012A378);
    sub_100008354(&qword_10012A000);
    sub_100008354(&qword_100129FF8);
    sub_100014AC4(&qword_10012A010, &qword_10012A000);
    sub_100014AC4(&qword_10012A018, &qword_100129FF8);
    swift_getOpaqueTypeConformance2();
    sub_100013BD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A370);
  }
  return result;
}

uint64_t sub_100014AA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100014AC4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100014B08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000082B4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100014B70()
{
  unint64_t result = qword_10012A3A0;
  if (!qword_10012A3A0)
  {
    sub_100008354(&qword_10012A3A8);
    sub_100014BE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A3A0);
  }
  return result;
}

unint64_t sub_100014BE4()
{
  unint64_t result = qword_10012A3B0;
  if (!qword_10012A3B0)
  {
    sub_100008354(&qword_10012A388);
    sub_100008354(&qword_10012A390);
    sub_100014AC4(&qword_10012A398, &qword_10012A390);
    swift_getOpaqueTypeConformance2();
    sub_100014CF0(&qword_10012A3B8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A3B0);
  }
  return result;
}

uint64_t sub_100014CF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100014D40()
{
  unint64_t result = qword_10012A3C0;
  if (!qword_10012A3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A3C0);
  }
  return result;
}

uint64_t sub_100014D94()
{
  return sub_100014AC4(&qword_10012A3C8, &qword_10012A3D0);
}

uint64_t sub_100014DD0()
{
  if (qword_100129D30 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_100017858(v0);
  uint64_t result = swift_bridgeObjectRelease();
  qword_100141D20 = (uint64_t)v1;
  return result;
}

uint64_t sub_100014E44()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100141D28);
  sub_100008498(v10, (uint64_t)qword_100141D28);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_100015130()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_100141D40);
  sub_100008498(v0, (uint64_t)qword_100141D40);
  return sub_1000E3D80();
}

uint64_t sub_100015194()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_100141D58);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100141D58);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10001524C()
{
  uint64_t result = swift_getKeyPath();
  qword_100141D70 = result;
  return result;
}

uint64_t sub_100015274()
{
  return swift_retain();
}

uint64_t sub_10001527C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  return _swift_task_switch(sub_1000152A0, 0, 0);
}

uint64_t sub_1000152A0()
{
  sub_1000E3A40();
  uint64_t v1 = v0[3];
  v0[5] = v0[2];
  uint64_t v2 = v0[4];
  v0[25] = v1;
  v0[26] = v2;
  v0[6] = v1;
  v0[7] = v2;
  sub_1000E3A40();
  v0[16] = v0[18];
  uint64_t v3 = v0[19];
  v0[27] = v3;
  v0[17] = v3;
  if (qword_100129BE8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_100141D70;
  v0[28] = qword_100141D70;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[29] = v5;
  uint64_t v6 = sub_100014AC4(&qword_10012A5A0, &qword_10012A5A8);
  v0[30] = v6;
  void *v5 = v0;
  v5[1] = sub_100015410;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 16, v4, &type metadata for String, v6);
}

uint64_t sub_100015410()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100015898;
  }
  else {
    uint64_t v2 = sub_1000155A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000155A4()
{
  sub_1000E3A40();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  v0[32] = v2;
  v0[33] = v3;
  v0[8] = v1;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v4 = qword_100141D70;
  v0[34] = qword_100141D70;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[35] = v5;
  void *v5 = v0;
  v5[1] = sub_10001568C;
  uint64_t v6 = v0[30];
  return AppEntity._value<A, B>(for:)(v0 + 14, v4, v6);
}

uint64_t sub_10001568C()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1000158B0;
  }
  else {
    uint64_t v2 = sub_1000157FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000157FC()
{
  uint64_t v1 = v0[15];
  v0[20] = v0[14];
  v0[21] = v1;
  sub_100018598();
  sub_1000E3A10();
  swift_bridgeObjectRelease();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100015898()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000158B0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

__n128 sub_1000158C8@<Q0>(uint64_t a1@<X8>)
{
  sub_1000E3A40();
  __n128 result = v4;
  *(void *)a1 = v3;
  *(__n128 *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10001590C()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_100015974(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000E3A30();
  return sub_1000159D0;
}

uint64_t sub_1000159D4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E3A40();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100015A10()
{
  return sub_1000E3A50();
}

uint64_t (*sub_100015A48(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000E3A30();
  return sub_1000159D0;
}

void sub_100015AA4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_100015AF0()
{
  if (qword_100129BE8 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100015B50()
{
  unint64_t result = qword_10012A3D8;
  if (!qword_10012A3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A3D8);
  }
  return result;
}

unint64_t sub_100015BA8()
{
  unint64_t result = qword_10012A3E0;
  if (!qword_10012A3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A3E0);
  }
  return result;
}

uint64_t sub_100015BFC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100015C30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100015C80@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129BD8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100141D40, a1);
}

uint64_t sub_100015CC8@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129BE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100141D58);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_100015D44(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100015DF8;
  *(_OWORD *)(v4 + 184) = *v1;
  *(void *)(v4 + 176) = a1;
  return _swift_task_switch(sub_1000152A0, 0, 0);
}

uint64_t sub_100015DF8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100015EEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100017E28();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100015F14()
{
  return 0xD000000000000036;
}

unint64_t sub_100015F34()
{
  unint64_t result = qword_10012A3F0;
  if (!qword_10012A3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A3F0);
  }
  return result;
}

unint64_t sub_100015F8C()
{
  unint64_t result = qword_10012A3F8;
  if (!qword_10012A3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A3F8);
  }
  return result;
}

uint64_t sub_100015FE0(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_100016000, 0, 0);
}

uint64_t sub_100016000()
{
  v0[2] = &type metadata for TVSettingsSelectedAudioLanguageEntity;
  sub_1000082B4(&qword_10012A588);
  uint64_t v1 = sub_1000E5A20();
  uint64_t v3 = v2;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1000354E4(v1, v3);
    if (v6) {
      char v7 = *(unsigned char *)(v4[7] + v5);
    }
    else {
      char v7 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_10006D92C(v7);
  sub_10007ACC0();
  uint64_t v9 = (uint64_t *)v0[5];
  uint64_t v10 = self;
  NSString v11 = sub_1000E5A00();
  NSString v12 = sub_1000E5A00();
  id v13 = [v10 userFacingLocalizedNameForLanguageCode:v11 autoString:v12];

  uint64_t v14 = sub_1000E5A10();
  uint64_t v16 = v15;

  swift_bridgeObjectRelease();
  uint64_t *v9 = v14;
  v9[1] = v16;
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1000161F0(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)(v2 + 40) = *a2;
  *(void *)(v2 + 48) = v3;
  return _swift_task_switch(sub_100016214, 0, 0);
}

uint64_t sub_100016214()
{
  sub_100017C20(*(void *)(v0 + 40), *(void **)(v0 + 48));
  uint64_t v1 = sub_10006DB4C();
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    sub_1000E5CC0(20);
    swift_bridgeObjectRelease();
    v15._countAndFlagsBits = v3;
    v15._object = v4;
    sub_1000E5A70(v15);
    sub_1000C725C(0xD000000000000012, (void *)0x80000001000E87F0);
    swift_bridgeObjectRelease();
    if (qword_100129DE0 != -1) {
      swift_once();
    }
    *(void *)(v0 + 16) = &type metadata for TVSettingsSelectedAudioLanguageEntity;
    sub_1000082B4(&qword_10012A588);
    uint64_t v5 = sub_1000E5A20();
    uint64_t v7 = v6;
    if (qword_100129DE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = off_10012DE48;
    if (*((void *)off_10012DE48 + 2))
    {
      swift_bridgeObjectRetain();
      unint64_t v9 = sub_1000354E4(v5, v7);
      if (v10) {
        char v11 = *(unsigned char *)(v8[7] + v9);
      }
      else {
        char v11 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v11 = 0;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1000C7AB4(v11, v3, (uint64_t)v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000E3910();
    sub_100018534();
    swift_allocError();
    sub_1000E38F0();
    swift_willThrow();
  }
  NSString v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100016470(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100016490, 0, 0);
}

uint64_t sub_100016490()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t *v1 = sub_100018268();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100016500()
{
  unint64_t result = qword_10012A408;
  if (!qword_10012A408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A408);
  }
  return result;
}

uint64_t sub_100016554(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000177F0();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_100016604(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

unint64_t sub_10001671C()
{
  unint64_t result = qword_10012A418;
  if (!qword_10012A418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A418);
  }
  return result;
}

unint64_t sub_100016774()
{
  unint64_t result = qword_10012A420;
  if (!qword_10012A420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A420);
  }
  return result;
}

unint64_t sub_1000167CC()
{
  unint64_t result = qword_10012A428[0];
  if (!qword_10012A428[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012A428);
  }
  return result;
}

uint64_t sub_100016820(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000177F0();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1000168D4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1000169D4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000177F0();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100016A88()
{
  unint64_t result = qword_10012A440;
  if (!qword_10012A440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A440);
  }
  return result;
}

unint64_t sub_100016AE0()
{
  unint64_t result = qword_10012A448;
  if (!qword_10012A448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A448);
  }
  return result;
}

unint64_t sub_100016B38()
{
  unint64_t result = qword_10012A450;
  if (!qword_10012A450)
  {
    sub_100008354(qword_10012A458);
    sub_100016AE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A450);
  }
  return result;
}

uint64_t sub_100016BAC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100016500();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100016C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100015DF8;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

ValueMetadata *type metadata accessor for TVSettingsSelectedAudioLanguageEntity.Query()
{
  return &type metadata for TVSettingsSelectedAudioLanguageEntity.Query;
}

uint64_t destroy for TVSettingsSelectedAudioLanguageEntity()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s17TVWidgetExtension37TVSettingsSelectedAudioLanguageEntityVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TVSettingsSelectedAudioLanguageEntity(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TVSettingsSelectedAudioLanguageEntity(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TVSettingsSelectedAudioLanguageEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TVSettingsSelectedAudioLanguageEntity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVSettingsSelectedAudioLanguageEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVSettingsSelectedAudioLanguageEntity()
{
  return &type metadata for TVSettingsSelectedAudioLanguageEntity;
}

uint64_t destroy for TVSettingsSelectedAudioLanguageEntity.UpdateIntent_value()
{
  swift_release();

  return swift_release();
}

void *_s17TVWidgetExtension37TVSettingsSelectedAudioLanguageEntityV18UpdateIntent_valueVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TVSettingsSelectedAudioLanguageEntity.UpdateIntent_value(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for TVSettingsSelectedAudioLanguageEntity.UpdateIntent_value(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TVSettingsSelectedAudioLanguageEntity.UpdateIntent_value(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVSettingsSelectedAudioLanguageEntity.UpdateIntent_value(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVSettingsSelectedAudioLanguageEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsSelectedAudioLanguageEntity.UpdateIntent_value;
}

uint64_t sub_1000170B4()
{
  return sub_100014AC4(&qword_10012A470, &qword_10012A478);
}

unint64_t sub_1000170F0()
{
  return 0xD000000000000015;
}

uint64_t sub_100017110@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001711C()
{
  sub_1000175C0();
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_1000171B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129BD0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100141D28, a1);
}

uint64_t sub_1000171E8@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100008498(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10001728C(uint64_t a1)
{
  unint64_t v2 = sub_1000167CC();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1000172D8(uint64_t a1)
{
  unint64_t v2 = sub_100015F8C();

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_100017324(uint64_t a1)
{
  unint64_t v2 = sub_1000173D8();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100017374()
{
  unint64_t result = qword_10012A480;
  if (!qword_10012A480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A480);
  }
  return result;
}

void *sub_1000173C8()
{
  return &protocol witness table for String;
}

unint64_t sub_1000173D8()
{
  unint64_t result = qword_10012A490;
  if (!qword_10012A490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A490);
  }
  return result;
}

unint64_t sub_100017430()
{
  unint64_t result = qword_10012A498;
  if (!qword_10012A498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A498);
  }
  return result;
}

unint64_t sub_100017488()
{
  unint64_t result = qword_10012A4A0;
  if (!qword_10012A4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A4A0);
  }
  return result;
}

unint64_t sub_1000174E0()
{
  unint64_t result = qword_10012A4A8;
  if (!qword_10012A4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A4A8);
  }
  return result;
}

unint64_t sub_100017534(void *a1)
{
  a1[1] = sub_10001756C();
  a1[2] = sub_1000175C0();
  unint64_t result = sub_100015F8C();
  a1[3] = result;
  return result;
}

unint64_t sub_10001756C()
{
  unint64_t result = qword_10012A4F8;
  if (!qword_10012A4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A4F8);
  }
  return result;
}

unint64_t sub_1000175C0()
{
  unint64_t result = qword_10012A500;
  if (!qword_10012A500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A500);
  }
  return result;
}

void *sub_100017614()
{
  return &protocol witness table for String;
}

unint64_t sub_100017620(uint64_t a1)
{
  unint64_t result = sub_100017648();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100017648()
{
  unint64_t result = qword_10012A548;
  if (!qword_10012A548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A548);
  }
  return result;
}

uint64_t sub_10001769C()
{
  return sub_100014AC4(&qword_10012A550, &qword_10012A558);
}

unint64_t sub_1000176DC()
{
  unint64_t result = qword_10012A560;
  if (!qword_10012A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A560);
  }
  return result;
}

unint64_t sub_100017734()
{
  unint64_t result = qword_10012A568;
  if (!qword_10012A568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A568);
  }
  return result;
}

unint64_t sub_10001778C()
{
  unint64_t result = qword_10012A570;
  if (!qword_10012A570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A570);
  }
  return result;
}

void *sub_1000177E0()
{
  return &protocol witness table for String;
}

unint64_t sub_1000177F0()
{
  unint64_t result = qword_10012A578;
  if (!qword_10012A578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A578);
  }
  return result;
}

uint64_t sub_100017844(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

void *sub_100017858(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptyArrayStorage;
  }
  sub_1000082B4(&qword_10012A5B8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_100017A20((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10001858C();
  if (v6 != v1)
  {
    __break(1u);
    return &_swiftEmptyArrayStorage;
  }
  return v3;
}

void sub_100017940(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        type metadata accessor for TVWidgetContentRefinedViewModel();
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      sub_1000082B4(&qword_10012A5F8);
      uint64_t v7 = (void *)swift_allocObject();
      int64_t v8 = j__malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 25;
      }
      v7[2] = v5;
      v7[3] = (2 * (v9 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t sub_100017A20(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  char v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 56) + 16 * v16);
    uint64_t v21 = v20[1];
    *char v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100017C20(uint64_t a1, void *a2)
{
  sub_1000082B4(&qword_10012A588);
  uint64_t v5 = sub_1000E5A20();
  uint64_t v7 = v6;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1000354E4(v5, v7);
    if (v10) {
      char v11 = *(unsigned char *)(v8[7] + v9);
    }
    else {
      char v11 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006D92C(v11);
  if (!v2)
  {
    if (qword_100129BC8 != -1) {
      swift_once();
    }
    uint64_t result = sub_10007AB88(a1, (uint64_t)a2, (void *)qword_100141D20);
    if ((result & 1) == 0)
    {
      sub_1000E5CC0(17);
      swift_bridgeObjectRelease();
      v13._countAndFlagsBits = a1;
      v13._object = a2;
      sub_1000E5A70(v13);
      sub_1000C725C(0x2064696C61766E69, (void *)0xEF203A65756C6176);
      swift_bridgeObjectRelease();
      sub_1000E3910();
      sub_100018534();
      swift_allocError();
      sub_1000E38B0();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_100017E28()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5C0);
  __chkstk_darwin(v0 - 8);
  char v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000E3B90();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  unint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v11 - 8);
  Swift::String v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1000E3DA0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_1000082B4(&qword_10012A5D0);
  sub_1000E3D80();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_1000E3A00();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  int64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  unint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  char v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1000167CC();
  int64_t v19 = v22;
  uint64_t v23 = sub_1000E3A70();
  sub_1000082B4(&qword_10012A5D8);
  sub_1000E3D80();
  v27(v19, 1, 1, v28);
  uint64_t v20 = sub_1000E5980();
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_1000E3A80();
  return v23;
}

uint64_t sub_100018268()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  __chkstk_darwin(v6 - 8);
  v9[1] = &type metadata for TVSettingsSelectedAudioLanguageEntity;
  sub_1000082B4(&qword_10012A588);
  uint64_t v7 = sub_1000E5A20();
  sub_1000082B4(&qword_10012A3D0);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012A5A0, &qword_10012A5A8);
  sub_1000E3C90();
  return v7;
}

unint64_t sub_100018534()
{
  unint64_t result = qword_10012A5B0;
  if (!qword_10012A5B0)
  {
    sub_1000E3910();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A5B0);
  }
  return result;
}

uint64_t sub_10001858C()
{
  return swift_release();
}

unint64_t sub_100018598()
{
  unint64_t result = qword_10012A5E8;
  if (!qword_10012A5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A5E8);
  }
  return result;
}

uint64_t sub_1000185EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

uint64_t sub_1000185F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000082B4(&qword_10012A5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100018668(uint64_t a1)
{
  uint64_t v2 = sub_1000082B4(&qword_10012A600);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_100129FF8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E41D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v28 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v24 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v24 - v15;
  int64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17((char *)v24 - v15, a1, v8);
  v17(v14, (uint64_t)v16, v8);
  unint64_t v18 = *(void (**)(char *, void, uint64_t))(v9 + 104);
  v18(v7, enum case for DynamicTypeSize.xxxLarge(_:), v8);
  uint64_t v27 = sub_100018A28(&qword_10012A050);
  uint64_t result = sub_1000E5970();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  char v25 = v18;
  unsigned int v26 = v4;
  v24[1] = sub_100018A28((unint64_t *)&qword_10012A0D8);
  char v20 = sub_1000E5950();
  sub_1000147B8((uint64_t)v7, &qword_100129FF8);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v14, v8);
  if (v20) {
    return ((uint64_t (*)(char *, uint64_t))v21)(v16, v8);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v16, v8);
  if (result != enum case for DynamicTypeSize.accessibility1(_:)
    && result != enum case for DynamicTypeSize.accessibility2(_:))
  {
    uint64_t v22 = v28;
    ((void (*)(char *, char *, uint64_t, double))v17)(v28, v16, v8, 10.0);
    uint64_t v23 = (uint64_t)v26;
    v25(v26, enum case for DynamicTypeSize.accessibility3(_:), v8);
    uint64_t result = sub_1000E5970();
    if (result)
    {
      sub_1000E5950();
      sub_1000147B8(v23, &qword_10012A600);
      v21(v22, v8);
      return ((uint64_t (*)(char *, uint64_t))v21)(v16, v8);
    }
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_100018A28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000E41D0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100018A6C(uint64_t a1)
{
  uint64_t v2 = sub_1000082B4(&qword_10012A600);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_100129FF8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E41D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v28 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v24 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v24 - v15;
  int64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17((char *)v24 - v15, a1, v8);
  v17(v14, (uint64_t)v16, v8);
  unint64_t v18 = *(void (**)(char *, void, uint64_t))(v9 + 104);
  v18(v7, enum case for DynamicTypeSize.xxxLarge(_:), v8);
  uint64_t v27 = sub_100018A28(&qword_10012A050);
  uint64_t result = sub_1000E5970();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  char v25 = v18;
  unsigned int v26 = v4;
  v24[1] = sub_100018A28((unint64_t *)&qword_10012A0D8);
  char v20 = sub_1000E5950();
  sub_1000147B8((uint64_t)v7, &qword_100129FF8);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v14, v8);
  if (v20) {
    return ((uint64_t (*)(char *, uint64_t))v21)(v16, v8);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v16, v8);
  if (result != enum case for DynamicTypeSize.accessibility1(_:)
    && result != enum case for DynamicTypeSize.accessibility2(_:))
  {
    uint64_t v22 = v28;
    ((void (*)(char *, char *, uint64_t, double))v17)(v28, v16, v8, 16.0);
    uint64_t v23 = (uint64_t)v26;
    v25(v26, enum case for DynamicTypeSize.accessibility3(_:), v8);
    uint64_t result = sub_1000E5970();
    if (result)
    {
      sub_1000E5950();
      sub_1000147B8(v23, &qword_10012A600);
      v21(v22, v8);
      return ((uint64_t (*)(char *, uint64_t))v21)(v16, v8);
    }
LABEL_10:
    __break(1u);
  }
  return result;
}

double sub_100018E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  v35[0] = a6;
  v35[1] = a1;
  v35[3] = a3;
  v35[4] = a4;
  v35[2] = a2;
  uint64_t v7 = sub_1000E41F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000E41D0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v36 = (char *)v35 - v16;
  if (qword_100129BC0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100008498(v11, (uint64_t)qword_100141D08);
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18(v15, v17, v11);
  sub_100018A28((unint64_t *)&qword_10012A0D8);
  if (sub_1000E5940())
  {
    int64_t v19 = v36;
    char v20 = v15;
  }
  else
  {
    int64_t v19 = v36;
    char v20 = a5;
  }
  v18(v19, (uint64_t)v20, v11);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v15, v11);
  uint64_t v22 = sub_10002BF1C();
  (*(void (**)(char *, void, uint64_t))(v8 + 16))(v10, v35[0], v7);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v23 != enum case for LegibilityWeight.regular(_:) && v23 != enum case for LegibilityWeight.bold(_:)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  id v24 = [self traitCollectionWithPreferredContentSizeCategory:v22];
  id v25 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:v24];
  unsigned int v26 = self;
  [v25 pointSize];
  id v27 = [v26 monospacedDigitSystemFontOfSize:];

  id v28 = v27;
  sub_1000E5A90();
  double v30 = v29;

  id v31 = v28;
  sub_1000E5A90();
  double v33 = v32;

  if (v30 <= v33) {
    double v30 = v33;
  }
  v21(v36, v11);
  return v30;
}

uint64_t destroy for SportsWidgetBaseballClockViewLayout()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SportsWidgetBaseballClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetBaseballClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

__n128 initializeWithTake for SportsWidgetBaseballClockViewLayout(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for SportsWidgetBaseballClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetBaseballClockViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetBaseballClockViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetBaseballClockViewLayout()
{
  return &type metadata for SportsWidgetBaseballClockViewLayout;
}

unint64_t sub_100019540()
{
  unint64_t result = qword_10012A608;
  if (!qword_10012A608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A608);
  }
  return result;
}

uint64_t sub_100019594()
{
  return sub_100014AC4(&qword_10012A610, &qword_10012A618);
}

void sub_1000195D0()
{
  qword_100141D78 = (uint64_t)&off_10011FEF0;
}

uint64_t sub_1000195E4()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100141D80);
  sub_100008498(v10, (uint64_t)qword_100141D80);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_1000198D0()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_100141D98);
  sub_100008498(v0, (uint64_t)qword_100141D98);
  return sub_1000E3D80();
}

uint64_t sub_100019934()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_100141DB0);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100141DB0);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1000199EC()
{
  uint64_t result = swift_getKeyPath();
  qword_100141DC8 = result;
  return result;
}

uint64_t sub_100019A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return _swift_task_switch(sub_100019A38, 0, 0);
}

uint64_t sub_100019A38()
{
  sub_1000E3A40();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  sub_1000E3A40();
  *(unsigned char *)(v0 + 225) = *(unsigned char *)(v0 + 226);
  if (qword_100129C10 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100141DC8;
  *(void *)(v0 + 152) = qword_100141DC8;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = sub_100014AC4(&qword_10012A7E0, &qword_10012A7E8);
  *(void *)(v0 + 168) = v5;
  void *v4 = v0;
  v4[1] = sub_100019B9C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 225, v3, &type metadata for Bool, v5);
}

uint64_t sub_100019B9C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FEC;
  }
  else {
    uint64_t v2 = sub_100019D0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100019D0C()
{
  sub_1000E3A40();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  v0[23] = v2;
  v0[24] = v3;
  v0[8] = v1;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v4 = qword_100141DC8;
  v0[25] = qword_100141DC8;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  void *v5 = v0;
  v5[1] = sub_100019DF4;
  uint64_t v6 = v0[21];
  return AppEntity._value<A, B>(for:)(v0 + 28, v4, v6);
}

uint64_t sub_100019DF4()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10001A004;
  }
  else {
    uint64_t v2 = sub_100019F64;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100019F64()
{
  *(unsigned char *)(v0 + 227) = *(unsigned char *)(v0 + 224);
  sub_10001C0C0();
  sub_1000E3A10();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100019FEC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001A004()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001A01C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000E3A40();
  *a1 = v3;
  return result;
}

uint64_t sub_10001A058()
{
  return sub_1000E3A50();
}

uint64_t sub_10001A090()
{
  if (qword_100129C10 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10001A0F0()
{
  unint64_t result = qword_10012A620;
  if (!qword_10012A620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A620);
  }
  return result;
}

unint64_t sub_10001A148()
{
  unint64_t result = qword_10012A628;
  if (!qword_10012A628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A628);
  }
  return result;
}

uint64_t sub_10001A19C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10001A1D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001A220@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129C00, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100141D98, a1);
}

uint64_t sub_10001A258@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129C08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100141DB0);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_10001A2D4(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100015DF8;
  *(_OWORD *)(v4 + 120) = *v1;
  *(void *)(v4 + 112) = a1;
  return _swift_task_switch(sub_100019A38, 0, 0);
}

uint64_t sub_10001A388@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10001B9B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10001A3B0()
{
  return 0xD000000000000034;
}

unint64_t sub_10001A3D0()
{
  unint64_t result = qword_10012A638;
  if (!qword_10012A638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A638);
  }
  return result;
}

unint64_t sub_10001A428()
{
  unint64_t result = qword_10012A640;
  if (!qword_10012A640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A640);
  }
  return result;
}

uint64_t sub_10001A47C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10001A49C, 0, 0);
}

uint64_t sub_10001A49C()
{
  **(unsigned char **)(v0 + 16) = sub_10007AEE8() & 1;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001A528(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10001A54C, 0, 0);
}

uint64_t sub_10001A54C()
{
  sub_10007BEA8(*(unsigned __int8 *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001A5C8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10001A5E8, 0, 0);
}

uint64_t sub_10001A5E8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t *v1 = sub_10001BDF4();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10001A658()
{
  unint64_t result = qword_10012A650;
  if (!qword_10012A650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A650);
  }
  return result;
}

uint64_t sub_10001A6AC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10001B238();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10001A760()
{
  unint64_t result = qword_10012A660;
  if (!qword_10012A660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A660);
  }
  return result;
}

unint64_t sub_10001A7B8()
{
  unint64_t result = qword_10012A668;
  if (!qword_10012A668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A668);
  }
  return result;
}

unint64_t sub_10001A810()
{
  unint64_t result = qword_10012A670[0];
  if (!qword_10012A670[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012A670);
  }
  return result;
}

uint64_t sub_10001A864(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001B238();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10001A918(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10001B238();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10001A9CC()
{
  unint64_t result = qword_10012A688;
  if (!qword_10012A688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A688);
  }
  return result;
}

unint64_t sub_10001AA24()
{
  unint64_t result = qword_10012A690;
  if (!qword_10012A690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A690);
  }
  return result;
}

unint64_t sub_10001AA7C()
{
  unint64_t result = qword_10012A698;
  if (!qword_10012A698)
  {
    sub_100008354(qword_10012A6A0);
    sub_10001AA24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A698);
  }
  return result;
}

uint64_t sub_10001AAF0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001A658();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackUseCellularEntity.Query()
{
  return &type metadata for TVSettingsPlaybackUseCellularEntity.Query;
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackUseCellularEntity()
{
  return &type metadata for TVSettingsPlaybackUseCellularEntity;
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackUseCellularEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsPlaybackUseCellularEntity.UpdateIntent_value;
}

uint64_t sub_10001ABD4()
{
  return sub_100014AC4(&qword_10012A6B8, &qword_10012A6C0);
}

uint64_t sub_10001AC14()
{
  sub_10001B010();
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_10001ACA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129BF8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100141D80, a1);
}

uint64_t sub_10001ACE0(uint64_t a1)
{
  unint64_t v2 = sub_10001A810();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10001AD2C(uint64_t a1)
{
  unint64_t v2 = sub_10001A428();

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10001AD78(uint64_t a1)
{
  unint64_t v2 = sub_10001AE20();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10001ADC8()
{
  unint64_t result = qword_10012A6C8;
  if (!qword_10012A6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A6C8);
  }
  return result;
}

unint64_t sub_10001AE20()
{
  unint64_t result = qword_10012A6D8;
  if (!qword_10012A6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A6D8);
  }
  return result;
}

unint64_t sub_10001AE78()
{
  unint64_t result = qword_10012A6E0;
  if (!qword_10012A6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A6E0);
  }
  return result;
}

unint64_t sub_10001AED0()
{
  unint64_t result = qword_10012A6E8;
  if (!qword_10012A6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A6E8);
  }
  return result;
}

unint64_t sub_10001AF30()
{
  unint64_t result = qword_10012A6F0;
  if (!qword_10012A6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A6F0);
  }
  return result;
}

unint64_t sub_10001AF84(void *a1)
{
  a1[1] = sub_10001AFBC();
  a1[2] = sub_10001B010();
  unint64_t result = sub_10001A428();
  a1[3] = result;
  return result;
}

unint64_t sub_10001AFBC()
{
  unint64_t result = qword_10012A740;
  if (!qword_10012A740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A740);
  }
  return result;
}

unint64_t sub_10001B010()
{
  unint64_t result = qword_10012A748;
  if (!qword_10012A748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A748);
  }
  return result;
}

void *sub_10001B064()
{
  return &protocol witness table for Bool;
}

unint64_t sub_10001B070(uint64_t a1)
{
  unint64_t result = sub_10001B098();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10001B098()
{
  unint64_t result = qword_10012A790;
  if (!qword_10012A790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A790);
  }
  return result;
}

uint64_t sub_10001B0EC()
{
  return sub_100014AC4(&qword_10012A798, &qword_10012A7A0);
}

unint64_t sub_10001B12C()
{
  unint64_t result = qword_10012A7A8;
  if (!qword_10012A7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A7A8);
  }
  return result;
}

unint64_t sub_10001B184()
{
  unint64_t result = qword_10012A7B0;
  if (!qword_10012A7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A7B0);
  }
  return result;
}

unint64_t sub_10001B1DC()
{
  unint64_t result = qword_10012A7B8;
  if (!qword_10012A7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A7B8);
  }
  return result;
}

unint64_t sub_10001B238()
{
  unint64_t result = qword_10012A7C0;
  if (!qword_10012A7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A7C0);
  }
  return result;
}

uint64_t sub_10001B28C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_1000082B4(&qword_10012A870);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A878);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012A880);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000082B4(&qword_10012A888);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  uint64_t v38 = v14;
  __chkstk_darwin(v13);
  double v30 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v40, "com.apple.tv.");
  HIWORD(v40[1]) = -4864;
  unint64_t v45 = (unint64_t)&type metadata for TVSettingsPlaybackUseCellularWidget;
  sub_1000082B4(&qword_10012A890);
  v47._countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v47);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1000082B4(&qword_10012A898);
  sub_10001A428();
  sub_100014AC4(&qword_10012A8A0, &qword_10012A898);
  sub_1000E56D0();
  v40[0] = &type metadata for TVSettingsPlaybackUseCellularWidget;
  v40[0] = sub_1000E5A20();
  v40[1] = v16;
  unint64_t v45 = 0x746567646957;
  unint64_t v46 = 0xE600000000000000;
  uint64_t v43 = 0x656C67676F54;
  unint64_t v44 = 0xE600000000000000;
  unint64_t v29 = sub_100014158();
  uint64_t v17 = sub_1000E5C70();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  v40[0] = v17;
  v40[1] = v19;
  uint64_t v20 = sub_100014AC4(&qword_10012A8A8, &qword_10012A870);
  uint64_t v21 = v31;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v21);
  unint64_t v45 = 0xD000000000000033;
  unint64_t v46 = 0x80000001000E8A70;
  v40[0] = v21;
  v40[1] = &type metadata for String;
  uint64_t v41 = v20;
  unint64_t v42 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v33;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v23);
  v40[0] = v23;
  v40[1] = &type metadata for String;
  uint64_t v41 = OpaqueTypeConformance2;
  unint64_t v42 = v29;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  id v25 = v30;
  uint64_t v26 = v35;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v26);
  v40[0] = v26;
  v40[1] = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v37;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v25, v27);
}

uint64_t sub_10001B82C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000082B4(&qword_10012A898);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0xD00000000000001FLL;
  v7[1] = 0x80000001000E8900;
  sub_100014158();
  sub_1000E4D30();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_10001B938@<X0>(uint64_t a1@<X8>)
{
  sub_100014158();
  uint64_t result = sub_1000E4A00();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10001B9B0()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A7F0);
  __chkstk_darwin(v0 - 8);
  unint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000E3B90();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  char v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1000E3DA0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_1000082B4(&qword_10012A7F8);
  sub_1000E3D80();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_1000E3A00();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  id v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10001A810();
  uint64_t v19 = v22;
  uint64_t v23 = sub_1000E3A70();
  sub_1000082B4(&qword_10012A800);
  sub_1000E3D80();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_1000E5B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_1000E3A90();
  return v23;
}

uint64_t sub_10001BDF4()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  __chkstk_darwin(v6 - 8);
  v9[1] = &type metadata for TVSettingsPlaybackUseCellularEntity;
  sub_1000082B4(&qword_10012A7C8);
  uint64_t v7 = sub_1000E5A20();
  sub_1000082B4(&qword_10012A618);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012A7E0, &qword_10012A7E8);
  sub_1000E3CA0();
  return v7;
}

unint64_t sub_10001C0C0()
{
  unint64_t result = qword_10012A810;
  if (!qword_10012A810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A810);
  }
  return result;
}

uint64_t sub_10001C114@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackUseCellularWidget()
{
  return &type metadata for TVSettingsPlaybackUseCellularWidget;
}

uint64_t sub_10001C130()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10001C14C(uint64_t a1)
{
  unint64_t result = sub_10001C174();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10001C174()
{
  unint64_t result = qword_10012A860;
  if (!qword_10012A860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A860);
  }
  return result;
}

unint64_t sub_10001C1C8(uint64_t a1)
{
  unint64_t result = sub_10001C1F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10001C1F0()
{
  unint64_t result = qword_10012A868;
  if (!qword_10012A868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A868);
  }
  return result;
}

uint64_t sub_10001C244()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001C394(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10001C69C(*a1, *a2);
}

uint64_t sub_10001C3A8(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1936943469;
    }
    else {
      uint64_t v2 = 1818324839;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1936943469;
      }
      else {
        uint64_t v5 = 1818324839;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE500000000000000;
    uint64_t v2 = 0x7974706D65;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE500000000000000;
  if (v2 != 0x7974706D65)
  {
LABEL_15:
    char v7 = sub_1000E5DC0();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10001C49C(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x6C61755174736542;
  }
  else {
    uint64_t v2 = 0x6C617551646F6F47;
  }
  if (a2) {
    uint64_t v3 = 0x6C61755174736542;
  }
  else {
    uint64_t v3 = 0x6C617551646F6F47;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1000E5DC0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_10001C534(char a1, char a2)
{
  if (a1) {
    unint64_t v2 = 0x80000001000E82E0;
  }
  else {
    unint64_t v2 = 0x80000001000E82C0;
  }
  if (a2) {
    unint64_t v3 = 0x80000001000E82E0;
  }
  else {
    unint64_t v3 = 0x80000001000E82C0;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1000E5DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_10001C5D4(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 48;
  }
  else {
    uint64_t v2 = 49;
  }
  if (a2) {
    uint64_t v3 = 48;
  }
  else {
    uint64_t v3 = 49;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1000E5DC0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_10001C638(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 49;
  }
  else {
    uint64_t v2 = 48;
  }
  if (a2) {
    uint64_t v3 = 49;
  }
  else {
    uint64_t v3 = 48;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1000E5DC0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_10001C69C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E69747563657865;
    }
    else {
      uint64_t v3 = 0x64656873696E6966;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000067;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E69747563657865;
      }
      else {
        uint64_t v6 = 0x64656873696E6966;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000067;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6C616974696E69;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6C616974696E69)
  {
LABEL_21:
    char v8 = sub_1000E5DC0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10001C7C0()
{
  return sub_1000E5E20();
}

uint64_t sub_10001C868()
{
  sub_1000E5A50();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10001C8FC()
{
  return sub_1000E5E20();
}

uint64_t sub_10001C9A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10001D6D4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10001C9D0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE900000000000067;
  uint64_t v5 = 0x6E69747563657865;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656873696E6966;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6C616974696E69;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10001CA9C()
{
  Swift::Int v0 = sub_10001D808((uint64_t)&off_10011FFD0);
  uint64_t result = swift_arrayDestroy();
  qword_10012A8B0 = v0;
  return result;
}

uint64_t sub_10001CB24()
{
  uint64_t v1 = (os_unfair_lock_s *)(v0 + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation_lock);
  swift_beginAccess();
  os_unfair_lock_lock(v1);
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__state);
  os_unfair_lock_unlock(v1);
  swift_endAccess();
  if (v2 != 1) {
    LOBYTE(v2) = sub_1000E5DC0();
  }
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10001CC38()
{
  if ([v0 isCancelled])
  {
    uint64_t v1 = (os_unfair_lock_s *)&v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation_lock];
    swift_beginAccess();
    os_unfair_lock_lock(v1);
    int v2 = v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__state];
    os_unfair_lock_unlock(v1);
    swift_endAccess();
    if (v2 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v3 = sub_1000E5DC0();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0)
      {
        char v6 = 1;
        return v6 & 1;
      }
    }
  }
  unint64_t v4 = (os_unfair_lock_s *)&v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation_lock];
  swift_beginAccess();
  os_unfair_lock_lock(v4);
  unsigned int v5 = v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__state];
  os_unfair_lock_unlock(v4);
  swift_endAccess();
  if (v5 > 1) {
    char v6 = 1;
  }
  else {
    char v6 = sub_1000E5DC0();
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_10001CE00()
{
  uint64_t v1 = v0;
  uint64_t result = (uint64_t)sub_1000054E4();
  if (result)
  {
    char v3 = (void *)result;
    sub_1000082B4(&qword_10012A900);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1000EF780;
    if (*(void *)&v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8])
    {
      uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
      uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
    }
    else
    {
      sub_10001D720();
      uint64_t v7 = (void *)sub_1000E5C10();
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1000EF780;
      *(void *)(v8 + 56) = type metadata accessor for TVWidgetAsyncOperation();
      *(void *)(v8 + 64) = sub_10001D760();
      *(void *)(v8 + 32) = v0;
      uint64_t v9 = v0;
      uint64_t v10 = (void *)sub_1000E5C20();

      uint64_t v5 = sub_1000E5A10();
      uint64_t v6 = v11;
    }
    *(void *)(v4 + 56) = &type metadata for String;
    *(void *)(v4 + 64) = sub_10001D7B4();
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v6;
    swift_bridgeObjectRetain();
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
    uint64_t result = (uint64_t)[v1 isCancelled];
    if ((result & 1) == 0)
    {
      if (qword_100129C18 != -1) {
        swift_once();
      }
      uint64_t v12 = v1;
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_10001D9AC(v13, v12, (SEL *)&selRef_willChangeValueForKey_);
      swift_bridgeObjectRelease();

      uint64_t v14 = (os_unfair_lock_s *)&v12[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation_lock];
      swift_beginAccess();
      os_unfair_lock_lock(v14);
      v12[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__state] = 1;
      os_unfair_lock_unlock(v14);
      swift_endAccess();
      uint64_t v15 = v12;
      uint64_t v16 = swift_bridgeObjectRetain();
      sub_10001D9AC(v16, v15, (SEL *)&selRef_didChangeValueForKey_);
      swift_bridgeObjectRelease();

      return (*(uint64_t (**)(void))((swift_isaMask & *(void *)v15) + 0xE0))();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10001D0F0()
{
}

void sub_10001D16C()
{
  uint64_t v1 = v0;
  int v2 = (os_unfair_lock_s *)&v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation_lock];
  swift_beginAccess();
  os_unfair_lock_lock(v2);
  uint64_t v3 = OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__state;
  int v4 = v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__state];
  os_unfair_lock_unlock(v2);
  swift_endAccess();
  if (v4 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = sub_1000E5DC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      return;
    }
  }
  id v6 = sub_1000054E4();
  if (v6)
  {
    uint64_t v7 = v6;
    sub_1000082B4(&qword_10012A900);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1000EF780;
    if (*(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8])
    {
      uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
      uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
    }
    else
    {
      sub_10001D720();
      uint64_t v11 = (void *)sub_1000E5C10();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1000EF780;
      *(void *)(v12 + 56) = type metadata accessor for TVWidgetAsyncOperation();
      *(void *)(v12 + 64) = sub_10001D760();
      *(void *)(v12 + 32) = v1;
      uint64_t v13 = v1;
      uint64_t v14 = (void *)sub_1000E5C20();

      uint64_t v9 = sub_1000E5A10();
      uint64_t v10 = v15;
    }
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_10001D7B4();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v10;
    swift_bridgeObjectRetain();
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
    if (qword_100129C18 != -1) {
      swift_once();
    }
    uint64_t v16 = v1;
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_10001D9AC(v17, v16, (SEL *)&selRef_willChangeValueForKey_);
    swift_bridgeObjectRelease();

    swift_beginAccess();
    os_unfair_lock_lock(v2);
    v1[v3] = 2;
    os_unfair_lock_unlock(v2);
    swift_endAccess();
    uint64_t v18 = v16;
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_10001D9AC(v19, v18, (SEL *)&selRef_didChangeValueForKey_);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

id sub_10001D47C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVWidgetAsyncOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for TVWidgetAsyncOperation()
{
  return self;
}

uint64_t getEnumTagSinglePayload for CompetitorShootoutsViewModel.ShootoutState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TVWidgetAsyncOperation.ExecutionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001D644);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetAsyncOperation.ExecutionState()
{
  return &type metadata for TVWidgetAsyncOperation.ExecutionState;
}

unint64_t sub_10001D680()
{
  unint64_t result = qword_10012A8F8;
  if (!qword_10012A8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A8F8);
  }
  return result;
}

uint64_t sub_10001D6D4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10011FF68;
  v6._object = a2;
  unint64_t v4 = sub_1000E5DA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

unint64_t sub_10001D720()
{
  unint64_t result = qword_10012A908;
  if (!qword_10012A908)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10012A908);
  }
  return result;
}

unint64_t sub_10001D760()
{
  unint64_t result = qword_10012A910;
  if (!qword_10012A910)
  {
    type metadata accessor for TVWidgetAsyncOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A910);
  }
  return result;
}

unint64_t sub_10001D7B4()
{
  unint64_t result = qword_10012A918;
  if (!qword_10012A918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A918);
  }
  return result;
}

Swift::Int sub_10001D808(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000082B4(&qword_10012A920);
    uint64_t v3 = sub_1000E5CB0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      Swift::String v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1000E5E00();
      swift_bridgeObjectRetain();
      sub_1000E5A50();
      Swift::Int result = sub_1000E5E20();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = sub_1000E5DC0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = sub_1000E5DC0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_10001D9AC(uint64_t a1, void *a2, SEL *a3)
{
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      v8 &= v8 - 1;
      goto LABEL_5;
    }
    int64_t v12 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v10;
    if (!v13)
    {
      int64_t v10 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_23;
      }
      uint64_t v13 = *(void *)(v5 + 8 * v10);
      if (!v13)
      {
        int64_t v10 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_23;
        }
        uint64_t v13 = *(void *)(v5 + 8 * v10);
        if (!v13)
        {
          int64_t v10 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_23;
          }
          uint64_t v13 = *(void *)(v5 + 8 * v10);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v8 = (v13 - 1) & v13;
LABEL_5:
    swift_bridgeObjectRetain();
    NSString v11 = sub_1000E5A00();
    [a2 *a3 v11];
    swift_bridgeObjectRelease();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9)
  {
LABEL_23:
    swift_release();
    return;
  }
  uint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v10 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v9) {
      goto LABEL_23;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_10001DB48@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1000E48A0();
  int v2 = self;
  id v3 = [v2 labelColor];
  *(void *)(a1 + 8) = sub_1000E4BD0();
  *(void *)(a1 + 16) = 1;
  *(unsigned char *)(a1 + 24) = 1;
  *(_OWORD *)(a1 + 32) = xmmword_1000EF880;
  *(void *)(a1 + 48) = sub_1000E4F40();
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = sub_1000E45C0();
  *(void *)(a1 + 72) = 0;
  id v5 = [v2 labelColor];
  *(void *)(a1 + 80) = sub_1000E4BD0();
  *(void *)(a1 + 88) = sub_1000E4880();
  *(void *)(a1 + 96) = sub_1000E4800();
  sub_1000E4840();
  *(void *)(a1 + 104) = v6;
  *(void *)(a1 + 112) = 1;
  *(unsigned char *)(a1 + 120) = 1;
  *(void *)(a1 + 128) = 0x3FE0000000000000;
  *(void *)(a1 + 136) = 0xD000000000000015;
  *(void *)(a1 + 144) = 0x80000001000E8BE0;
  *(void *)(a1 + 152) = sub_1000E4890();
  id v7 = [v2 labelColor];
  *(void *)(a1 + 160) = sub_1000E4BD0();
  uint64_t v8 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
  uint64_t v9 = a1 + *(int *)(v8 + 92);
  uint64_t v10 = enum case for Image.Scale.small(_:);
  uint64_t v11 = sub_1000E4CF0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  *(void *)(a1 + *(int *)(v8 + 96)) = 0;
  return result;
}

uint64_t type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout()
{
  uint64_t result = qword_10012A980;
  if (!qword_10012A980) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001DCFC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    long long v9 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    uint64_t v10 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v10;
    *(void *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    uint64_t v11 = a2[19];
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v11;
    uint64_t v12 = *(int *)(a3 + 92);
    uint64_t v17 = a1 + v12;
    uint64_t v16 = (uint64_t)a2 + v12;
    *(void *)(a1 + 160) = a2[20];
    uint64_t v13 = sub_1000E4CF0();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v15(v17, v16, v13);
    *(void *)(v7 + *(int *)(a3 + 96)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 96));
  }
  return v7;
}

uint64_t sub_10001DEA0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 92);
  uint64_t v5 = sub_1000E4CF0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_10001DF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  uint64_t v9 = *(int *)(a3 + 92);
  uint64_t v13 = a2 + v9;
  uint64_t v14 = a1 + v9;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v10 = sub_1000E4CF0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v12(v14, v13, v10);
  *(void *)(a1 + *(int *)(a3 + 96)) = *(void *)(a2 + *(int *)(a3 + 96));
  return a1;
}

uint64_t sub_10001E0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 92);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 96)) = *(void *)(a2 + *(int *)(a3 + 96));
  return a1;
}

uint64_t sub_10001E25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v8 = *(int *)(a3 + 92);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v11 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)(a1 + *(int *)(a3 + 96)) = *(void *)(a2 + *(int *)(a3 + 96));
  return a1;
}

uint64_t sub_10001E344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_release();
  uint64_t v8 = *(int *)(a3 + 92);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)(a1 + *(int *)(a3 + 96)) = *(void *)(a2 + *(int *)(a3 + 96));
  return a1;
}

uint64_t sub_10001E49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001E4B0);
}

uint64_t sub_10001E4B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000E4CF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 92);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10001E560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001E574);
}

void *sub_10001E574(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000E4CF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 92);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10001E61C()
{
  uint64_t result = sub_1000E4CF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for SportsWidgetMinimalViewLayout()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SportsWidgetMinimalViewLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SportsWidgetMinimalViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  return a1;
}

__n128 initializeWithTake for SportsWidgetMinimalViewLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SportsWidgetMinimalViewLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetMinimalViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetMinimalViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetMinimalViewLayout()
{
  return &type metadata for SportsWidgetMinimalViewLayout;
}

uint64_t destroy for SportsWidgetDynamicIslandCompactViewLayout()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SportsWidgetDynamicIslandCompactViewLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetDynamicIslandCompactViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

__n128 initializeWithTake for SportsWidgetDynamicIslandCompactViewLayout(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for SportsWidgetDynamicIslandCompactViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetDynamicIslandCompactViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetDynamicIslandCompactViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetDynamicIslandCompactViewLayout()
{
  return &type metadata for SportsWidgetDynamicIslandCompactViewLayout;
}

void *sub_10001ECC4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(void *)(a1 + 104) = a2[13];
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v12 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v12;
    uint64_t v13 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v13;
    uint64_t v14 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v14;
    uint64_t v15 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v15;
    uint64_t v16 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v16;
    uint64_t v17 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v17;
    *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
    uint64_t v18 = a2[28];
    *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
    uint64_t v19 = a3[6];
    uint64_t v74 = (void *)(a1 + v19);
    __dst = (char *)a2 + v19;
    *(void *)(a1 + 224) = v18;
    type metadata accessor for SportsWidgetClock(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v25 = *((void *)__dst + 1);
      *uint64_t v74 = *(void *)__dst;
      v74[1] = v25;
      uint64_t v26 = *((void *)__dst + 3);
      v74[2] = *((void *)__dst + 2);
      v74[3] = v26;
      uint64_t v27 = *((void *)__dst + 5);
      v74[4] = *((void *)__dst + 4);
      v74[5] = v27;
      uint64_t v28 = *((void *)__dst + 7);
      v74[6] = *((void *)__dst + 6);
      v74[7] = v28;
      uint64_t v81 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v29 = v81[8];
      uint64_t v78 = (char *)v74 + v29;
      uint64_t v76 = &__dst[v29];
      uint64_t v30 = sub_1000E3EE0();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v78, v76, v30);
      uint64_t v33 = sub_1000082B4(&qword_100129F28);
      uint64_t v79 = v32;
      v32(&v78[*(int *)(v33 + 36)], &v76[*(int *)(v33 + 36)], v30);
      uint64_t v34 = v81[9];
      uint64_t v35 = (char *)v74 + v34;
      uint64_t v36 = &__dst[v34];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&__dst[v34], 1, v30))
      {
        uint64_t v37 = sub_1000082B4(&qword_100129F30);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v79(v35, v36, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v35, 0, 1, v30);
      }
      *((unsigned char *)v74 + v81[10]) = __dst[v81[10]];
      *((unsigned char *)v74 + v81[11]) = __dst[v81[11]];
      uint64_t v51 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v74 + *(int *)(v51 + 20)) = *(void *)&__dst[*(int *)(v51 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = *((void *)__dst + 1);
      *uint64_t v74 = *(void *)__dst;
      v74[1] = v21;
      uint64_t v22 = *((void *)__dst + 3);
      v74[2] = *((void *)__dst + 2);
      v74[3] = v22;
      uint64_t v23 = *((void *)__dst + 5);
      v74[4] = *((void *)__dst + 4);
      v74[5] = v23;
      *((unsigned char *)v74 + 48) = __dst[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v38 = *((void *)__dst + 1);
      *uint64_t v74 = *(void *)__dst;
      v74[1] = v38;
      uint64_t v39 = *((void *)__dst + 3);
      v74[2] = *((void *)__dst + 2);
      v74[3] = v39;
      uint64_t v40 = *((void *)__dst + 5);
      v74[4] = *((void *)__dst + 4);
      v74[5] = v40;
      uint64_t v41 = *((void *)__dst + 7);
      v74[6] = *((void *)__dst + 6);
      v74[7] = v41;
      uint64_t v42 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v43 = *(int *)(v42 + 32);
      uint64_t v75 = &__dst[v43];
      uint64_t v77 = (char *)v74 + v43;
      uint64_t v44 = sub_1000E3EE0();
      uint64_t v73 = *(void *)(v44 - 8);
      unint64_t v45 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v77, v75, v44);
      uint64_t v46 = sub_1000082B4(&qword_100129F28);
      uint64_t v80 = v45;
      v45(&v77[*(int *)(v46 + 36)], &v75[*(int *)(v46 + 36)], v44);
      uint64_t v82 = v42;
      uint64_t v47 = *(int *)(v42 + 36);
      uint64_t v48 = (char *)v74 + v47;
      double v49 = &__dst[v47];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(&__dst[v47], 1, v44))
      {
        uint64_t v50 = sub_1000082B4(&qword_100129F30);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        v80(v48, v49, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v48, 0, 1, v44);
      }
      *((unsigned char *)v74 + *(int *)(v82 + 40)) = __dst[*(int *)(v82 + 40)];
      *((unsigned char *)v74 + *(int *)(v82 + 44)) = __dst[*(int *)(v82 + 44)];
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = a3[7];
    uint64_t v53 = a3[8];
    uint64_t v54 = (void *)((char *)v4 + v52);
    char v55 = (uint64_t *)((char *)a2 + v52);
    uint64_t v56 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v56;
    uint64_t v57 = v55[3];
    v54[2] = v55[2];
    v54[3] = v57;
    uint64_t v58 = (char *)v4 + v53;
    uint64_t v59 = (uint64_t)a2 + v53;
    uint64_t v60 = *(void *)(v59 + 8);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v60;
    v58[16] = *(unsigned char *)(v59 + 16);
    *((void *)v58 + 3) = *(void *)(v59 + 24);
    v58[32] = *(unsigned char *)(v59 + 32);
    *((void *)v58 + 5) = *(void *)(v59 + 40);
    v58[48] = *(unsigned char *)(v59 + 48);
    uint64_t v61 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v61) = *((unsigned char *)a2 + v61);
    uint64_t v62 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v4 + v62) = *((unsigned char *)a2 + v62);
    uint64_t v63 = a3[13];
    __dsta = (char *)v4 + v63;
    uint64_t v64 = (char *)a2 + v63;
    uint64_t v65 = sub_1000E3E00();
    uint64_t v66 = *(void *)(v65 - 8);
    uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v83(v64, 1, v65))
    {
      uint64_t v67 = sub_1000082B4(&qword_100129F38);
      memcpy(__dsta, v64, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(__dsta, v64, v65);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(__dsta, 0, 1, v65);
    }
    uint64_t v68 = a3[15];
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    uint64_t v69 = (void *)((char *)v4 + v68);
    uint64_t v70 = (uint64_t *)((char *)a2 + v68);
    uint64_t v71 = v70[1];
    void *v69 = *v70;
    v69[1] = v71;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t type metadata accessor for SportsWidgetClock(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012AC88);
}

uint64_t type metadata accessor for SportsWidgetGenericClockViewModel(uint64_t a1)
{
  return sub_10002B794(a1, (uint64_t *)&unk_10012AB20);
}

uint64_t type metadata accessor for SportsWidgetSoccerClockViewModel(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012ABE0);
}

uint64_t sub_10001F4D8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v14 = v4 + *(int *)(v13 + 32);
      uint64_t v15 = sub_1000E3EE0();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v17(v14, v15);
      uint64_t v18 = sub_1000082B4(&qword_100129F28);
      v17(v14 + *(int *)(v18 + 36), v15);
      uint64_t v19 = v4 + *(int *)(v13 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v19, 1, v15)) {
        v17(v19, v15);
      }
      type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      goto LABEL_10;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v7 = v4 + *(int *)(v6 + 32);
      uint64_t v8 = sub_1000E3EE0();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v10(v7, v8);
      uint64_t v11 = sub_1000082B4(&qword_100129F28);
      v10(v7 + *(int *)(v11 + 36), v8);
      uint64_t v12 = v4 + *(int *)(v6 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8)) {
        v10(v12, v8);
      }
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v20 = a1 + *(int *)(a2 + 52);
  uint64_t v21 = sub_1000E3E00();
  uint64_t v22 = *(void *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10001F894(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  uint64_t v17 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v18 = a3[6];
  uint64_t v72 = (void *)(a1 + v18);
  __dst = (char *)(a2 + v18);
  *(void *)(a1 + 224) = v17;
  type metadata accessor for SportsWidgetClock(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v23 = *((void *)__dst + 1);
    *uint64_t v72 = *(void *)__dst;
    v72[1] = v23;
    uint64_t v24 = *((void *)__dst + 3);
    v72[2] = *((void *)__dst + 2);
    v72[3] = v24;
    uint64_t v25 = *((void *)__dst + 5);
    v72[4] = *((void *)__dst + 4);
    v72[5] = v25;
    uint64_t v26 = *((void *)__dst + 7);
    v72[6] = *((void *)__dst + 6);
    v72[7] = v26;
    uint64_t v79 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v27 = v79[8];
    uint64_t v76 = (char *)v72 + v27;
    uint64_t v74 = &__dst[v27];
    uint64_t v28 = sub_1000E3EE0();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(v76, v74, v28);
    uint64_t v31 = sub_1000082B4(&qword_100129F28);
    uint64_t v77 = v30;
    v30(&v76[*(int *)(v31 + 36)], &v74[*(int *)(v31 + 36)], v28);
    uint64_t v32 = v79[9];
    uint64_t v33 = (char *)v72 + v32;
    uint64_t v34 = &__dst[v32];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(&__dst[v32], 1, v28))
    {
      uint64_t v35 = sub_1000082B4(&qword_100129F30);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v77(v33, v34, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
    }
    *((unsigned char *)v72 + v79[10]) = __dst[v79[10]];
    *((unsigned char *)v72 + v79[11]) = __dst[v79[11]];
    uint64_t v49 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v72 + *(int *)(v49 + 20)) = *(void *)&__dst[*(int *)(v49 + 20)];
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = *((void *)__dst + 1);
    *uint64_t v72 = *(void *)__dst;
    v72[1] = v20;
    uint64_t v21 = *((void *)__dst + 3);
    v72[2] = *((void *)__dst + 2);
    v72[3] = v21;
    uint64_t v22 = *((void *)__dst + 5);
    v72[4] = *((void *)__dst + 4);
    v72[5] = v22;
    *((unsigned char *)v72 + 48) = __dst[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v36 = *((void *)__dst + 1);
    *uint64_t v72 = *(void *)__dst;
    v72[1] = v36;
    uint64_t v37 = *((void *)__dst + 3);
    v72[2] = *((void *)__dst + 2);
    v72[3] = v37;
    uint64_t v38 = *((void *)__dst + 5);
    v72[4] = *((void *)__dst + 4);
    v72[5] = v38;
    uint64_t v39 = *((void *)__dst + 7);
    v72[6] = *((void *)__dst + 6);
    v72[7] = v39;
    uint64_t v40 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v41 = *(int *)(v40 + 32);
    uint64_t v73 = &__dst[v41];
    uint64_t v75 = (char *)v72 + v41;
    uint64_t v42 = sub_1000E3EE0();
    uint64_t v71 = *(void *)(v42 - 8);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43(v75, v73, v42);
    uint64_t v44 = sub_1000082B4(&qword_100129F28);
    uint64_t v78 = v43;
    v43(&v75[*(int *)(v44 + 36)], &v73[*(int *)(v44 + 36)], v42);
    uint64_t v80 = v40;
    uint64_t v45 = *(int *)(v40 + 36);
    uint64_t v46 = (char *)v72 + v45;
    uint64_t v47 = &__dst[v45];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(&__dst[v45], 1, v42))
    {
      uint64_t v48 = sub_1000082B4(&qword_100129F30);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      v78(v46, v47, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v46, 0, 1, v42);
    }
    *((unsigned char *)v72 + *(int *)(v80 + 40)) = __dst[*(int *)(v80 + 40)];
    *((unsigned char *)v72 + *(int *)(v80 + 44)) = __dst[*(int *)(v80 + 44)];
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = a3[7];
  uint64_t v51 = a3[8];
  uint64_t v52 = (void *)(a1 + v50);
  uint64_t v53 = (void *)(a2 + v50);
  uint64_t v54 = v53[1];
  *uint64_t v52 = *v53;
  v52[1] = v54;
  uint64_t v55 = v53[3];
  v52[2] = v53[2];
  v52[3] = v55;
  uint64_t v56 = a1 + v51;
  uint64_t v57 = a2 + v51;
  uint64_t v58 = *(void *)(v57 + 8);
  *(void *)uint64_t v56 = *(void *)v57;
  *(void *)(v56 + 8) = v58;
  *(unsigned char *)(v56 + 16) = *(unsigned char *)(v57 + 16);
  *(void *)(v56 + 24) = *(void *)(v57 + 24);
  *(unsigned char *)(v56 + 32) = *(unsigned char *)(v57 + 32);
  *(void *)(v56 + 40) = *(void *)(v57 + 40);
  *(unsigned char *)(v56 + 48) = *(unsigned char *)(v57 + 48);
  uint64_t v59 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v59) = *(unsigned char *)(a2 + v59);
  uint64_t v60 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v60) = *(unsigned char *)(a2 + v60);
  uint64_t v61 = a3[13];
  __dsta = (void *)(a1 + v61);
  uint64_t v62 = (const void *)(a2 + v61);
  uint64_t v63 = sub_1000E3E00();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v81 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v81(v62, 1, v63))
  {
    uint64_t v65 = sub_1000082B4(&qword_100129F38);
    memcpy(__dsta, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v64 + 16))(__dsta, v62, v63);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(__dsta, 0, 1, v63);
  }
  uint64_t v66 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (void *)(a2 + v66);
  uint64_t v69 = v68[1];
  *uint64_t v67 = *v68;
  v67[1] = v69;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10001FFF8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_10002090C(a1 + v6);
    type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      void *v7 = *(void *)v8;
      v7[1] = *((void *)v8 + 1);
      void v7[2] = *((void *)v8 + 2);
      v7[3] = *((void *)v8 + 3);
      v7[4] = *((void *)v8 + 4);
      v7[5] = *((void *)v8 + 5);
      v7[6] = *((void *)v8 + 6);
      v7[7] = *((void *)v8 + 7);
      uint64_t v10 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v11 = *(int *)(v10 + 32);
      uint64_t v12 = (char *)v7 + v11;
      uint64_t v13 = &v8[v11];
      uint64_t v14 = sub_1000E3EE0();
      uint64_t v55 = *(void *)(v14 - 8);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      uint64_t v16 = sub_1000082B4(&qword_100129F28);
      uint64_t v51 = v15;
      v15(&v12[*(int *)(v16 + 36)], &v13[*(int *)(v16 + 36)], v14);
      uint64_t v53 = v10;
      uint64_t v17 = *(int *)(v10 + 36);
      uint64_t v18 = (char *)v7 + v17;
      uint64_t v19 = &v8[v17];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(&v8[v17], 1, v14))
      {
        uint64_t v20 = sub_1000082B4(&qword_100129F30);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v51(v18, v19, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v18, 0, 1, v14);
      }
      *((unsigned char *)v7 + *(int *)(v53 + 40)) = v8[*(int *)(v53 + 40)];
      *((unsigned char *)v7 + *(int *)(v53 + 44)) = v8[*(int *)(v53 + 44)];
      uint64_t v30 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v7 + *(int *)(v30 + 20)) = *(void *)&v8[*(int *)(v30 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      void *v7 = *(void *)v8;
      v7[1] = *((void *)v8 + 1);
      void v7[2] = *((void *)v8 + 2);
      v7[3] = *((void *)v8 + 3);
      v7[4] = *((void *)v8 + 4);
      v7[5] = *((void *)v8 + 5);
      *((unsigned char *)v7 + 48) = v8[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      void *v7 = *(void *)v8;
      v7[1] = *((void *)v8 + 1);
      void v7[2] = *((void *)v8 + 2);
      v7[3] = *((void *)v8 + 3);
      v7[4] = *((void *)v8 + 4);
      v7[5] = *((void *)v8 + 5);
      v7[6] = *((void *)v8 + 6);
      v7[7] = *((void *)v8 + 7);
      uint64_t v56 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v21 = v56[8];
      uint64_t v22 = (char *)v7 + v21;
      uint64_t v50 = &v8[v21];
      uint64_t v23 = sub_1000E3EE0();
      uint64_t v54 = *(void *)(v23 - 8);
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v22, v50, v23);
      uint64_t v25 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      uint64_t v52 = v24;
      v24(&v22[v25], &v50[v25], v23);
      uint64_t v26 = v56[9];
      uint64_t v27 = (char *)v7 + v26;
      uint64_t v28 = &v8[v26];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(&v8[v26], 1, v23))
      {
        uint64_t v29 = sub_1000082B4(&qword_100129F30);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v52(v27, v28, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v27, 0, 1, v23);
      }
      *((unsigned char *)v7 + v56[10]) = v8[v56[10]];
      *((unsigned char *)v7 + v56[11]) = v8[v56[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = a3[7];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = a2 + v31;
  *uint64_t v32 = *(void *)(a2 + v31);
  v32[1] = *(void *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v32[2] = *(void *)(v33 + 16);
  v32[3] = *(void *)(v33 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(void *)uint64_t v35 = *(void *)(a2 + v34);
  *(void *)(v35 + 8) = *(void *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 16) = *(unsigned char *)(v36 + 16);
  *(void *)(v35 + 24) = *(void *)(v36 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(v35 + 32) = *(unsigned char *)(v36 + 32);
  *(void *)(v35 + 40) = *(void *)(v36 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(v35 + 48) = *(unsigned char *)(v36 + 48);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v37 = a3[13];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  uint64_t v40 = sub_1000E3E00();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 24))(v38, v39, v40);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
    goto LABEL_19;
  }
  if (v44)
  {
LABEL_19:
    uint64_t v45 = sub_1000082B4(&qword_100129F38);
    memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v41 + 16))(v38, v39, v40);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_20:
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v46 = a3[15];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002090C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsWidgetClock(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100020968(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 120);
  long long v10 = *(_OWORD *)(a2 + 136);
  long long v11 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v11;
  *(_OWORD *)(a1 + 136) = v10;
  *(_OWORD *)(a1 + 120) = v9;
  long long v12 = *(_OWORD *)(a2 + 184);
  long long v13 = *(_OWORD *)(a2 + 200);
  long long v14 = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v14;
  *(_OWORD *)(a1 + 200) = v13;
  uint64_t v15 = a3[6];
  uint64_t v16 = (_OWORD *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  *(_OWORD *)(a1 + 184) = v12;
  uint64_t v18 = type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v32 = *((_OWORD *)v17 + 1);
    _OWORD *v16 = *(_OWORD *)v17;
    v16[1] = v32;
    long long v33 = *((_OWORD *)v17 + 3);
    v16[2] = *((_OWORD *)v17 + 2);
    v16[3] = v33;
    uint64_t v68 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v34 = v68[8];
    uint64_t v35 = (char *)v16 + v34;
    uint64_t v36 = &v17[v34];
    uint64_t v37 = sub_1000E3EE0();
    uint64_t v66 = *(void *)(v37 - 8);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
    v38(v35, v36, v37);
    uint64_t v39 = sub_1000082B4(&qword_100129F28);
    uint64_t v64 = v38;
    v38(&v35[*(int *)(v39 + 36)], &v36[*(int *)(v39 + 36)], v37);
    uint64_t v40 = v68[9];
    uint64_t v41 = (char *)v16 + v40;
    uint64_t v42 = &v17[v40];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(&v17[v40], 1, v37))
    {
      uint64_t v43 = sub_1000082B4(&qword_100129F30);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      v64(v41, v42, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v41, 0, 1, v37);
    }
    *((unsigned char *)v16 + v68[10]) = v17[v68[10]];
    *((unsigned char *)v16 + v68[11]) = v17[v68[11]];
    uint64_t v44 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v16 + *(int *)(v44 + 20)) = *(void *)&v17[*(int *)(v44 + 20)];
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      goto LABEL_13;
    }
    long long v20 = *((_OWORD *)v17 + 1);
    _OWORD *v16 = *(_OWORD *)v17;
    v16[1] = v20;
    long long v21 = *((_OWORD *)v17 + 3);
    v16[2] = *((_OWORD *)v17 + 2);
    v16[3] = v21;
    uint64_t v67 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v22 = v67[8];
    uint64_t v23 = (char *)v16 + v22;
    uint64_t v24 = &v17[v22];
    uint64_t v25 = sub_1000E3EE0();
    uint64_t v65 = *(void *)(v25 - 8);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    v26(v23, v24, v25);
    uint64_t v27 = sub_1000082B4(&qword_100129F28);
    uint64_t v63 = v26;
    v26(&v23[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
    uint64_t v28 = v67[9];
    uint64_t v29 = (char *)v16 + v28;
    uint64_t v30 = &v17[v28];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(&v17[v28], 1, v25))
    {
      uint64_t v31 = sub_1000082B4(&qword_100129F30);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v63(v29, v30, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v29, 0, 1, v25);
    }
    *((unsigned char *)v16 + v67[10]) = v17[v67[10]];
    *((unsigned char *)v16 + v67[11]) = v17[v67[11]];
  }
  swift_storeEnumTagMultiPayload();
LABEL_13:
  uint64_t v45 = a3[7];
  uint64_t v46 = a3[8];
  uint64_t v47 = (_OWORD *)(a1 + v45);
  uint64_t v48 = (_OWORD *)(a2 + v45);
  long long v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = a1 + v46;
  uint64_t v51 = a2 + v46;
  long long v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(_OWORD *)(v50 + 32) = *(_OWORD *)(v51 + 32);
  *(unsigned char *)(v50 + 48) = *(unsigned char *)(v51 + 48);
  uint64_t v53 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v53) = *(unsigned char *)(a2 + v53);
  uint64_t v54 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v54) = *(unsigned char *)(a2 + v54);
  uint64_t v55 = a3[13];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = (const void *)(a2 + v55);
  uint64_t v58 = sub_1000E3E00();
  uint64_t v59 = *(void *)(v58 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    uint64_t v60 = sub_1000082B4(&qword_100129F38);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v59 + 32))(v56, v57, v58);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  uint64_t v61 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v61) = *(_OWORD *)(a2 + v61);
  return a1;
}

uint64_t sub_100020EC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_release();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  if (a1 != a2)
  {
    uint64_t v18 = a3[6];
    uint64_t v19 = (_OWORD *)(a1 + v18);
    long long v20 = (char *)(a2 + v18);
    sub_10002090C(a1 + v18);
    uint64_t v21 = type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v35 = *((_OWORD *)v20 + 1);
      _OWORD *v19 = *(_OWORD *)v20;
      v19[1] = v35;
      long long v36 = *((_OWORD *)v20 + 3);
      v19[2] = *((_OWORD *)v20 + 2);
      v19[3] = v36;
      uint64_t v79 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v37 = v79[8];
      uint64_t v38 = (char *)v19 + v37;
      uint64_t v39 = &v20[v37];
      uint64_t v40 = sub_1000E3EE0();
      uint64_t v77 = *(void *)(v40 - 8);
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
      v41(v38, v39, v40);
      uint64_t v42 = sub_1000082B4(&qword_100129F28);
      uint64_t v75 = v41;
      v41(&v38[*(int *)(v42 + 36)], &v39[*(int *)(v42 + 36)], v40);
      uint64_t v43 = v79[9];
      uint64_t v44 = (char *)v19 + v43;
      uint64_t v45 = &v20[v43];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(&v20[v43], 1, v40))
      {
        uint64_t v46 = sub_1000082B4(&qword_100129F30);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        v75(v44, v45, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v44, 0, 1, v40);
      }
      *((unsigned char *)v19 + v79[10]) = v20[v79[10]];
      *((unsigned char *)v19 + v79[11]) = v20[v79[11]];
      uint64_t v47 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v19 + *(int *)(v47 + 20)) = *(void *)&v20[*(int *)(v47 + 20)];
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        goto LABEL_14;
      }
      long long v23 = *((_OWORD *)v20 + 1);
      _OWORD *v19 = *(_OWORD *)v20;
      v19[1] = v23;
      long long v24 = *((_OWORD *)v20 + 3);
      v19[2] = *((_OWORD *)v20 + 2);
      v19[3] = v24;
      uint64_t v78 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v25 = v78[8];
      uint64_t v26 = (char *)v19 + v25;
      uint64_t v27 = &v20[v25];
      uint64_t v28 = sub_1000E3EE0();
      uint64_t v76 = *(void *)(v28 - 8);
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
      v29(v26, v27, v28);
      uint64_t v30 = sub_1000082B4(&qword_100129F28);
      uint64_t v74 = v29;
      v29(&v26[*(int *)(v30 + 36)], &v27[*(int *)(v30 + 36)], v28);
      uint64_t v31 = v78[9];
      long long v32 = (char *)v19 + v31;
      long long v33 = &v20[v31];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(&v20[v31], 1, v28))
      {
        uint64_t v34 = sub_1000082B4(&qword_100129F30);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        v74(v32, v33, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v32, 0, 1, v28);
      }
      *((unsigned char *)v19 + v78[10]) = v20[v78[10]];
      *((unsigned char *)v19 + v78[11]) = v20[v78[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  uint64_t v48 = a3[7];
  long long v49 = (void *)(a1 + v48);
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a2 + v48 + 8);
  *long long v49 = *(void *)(a2 + v48);
  v49[1] = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v50 + 24);
  v49[2] = *(void *)(v50 + 16);
  v49[3] = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[8];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = *(void *)(a2 + v53 + 8);
  *(void *)uint64_t v54 = *(void *)(a2 + v53);
  *(void *)(v54 + 8) = v56;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v54 + 16) = *(unsigned char *)(v55 + 16);
  *(void *)(v54 + 24) = *(void *)(v55 + 24);
  swift_release();
  *(unsigned char *)(v54 + 32) = *(unsigned char *)(v55 + 32);
  *(void *)(v54 + 40) = *(void *)(v55 + 40);
  swift_release();
  *(unsigned char *)(v54 + 48) = *(unsigned char *)(v55 + 48);
  uint64_t v57 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v57) = *(unsigned char *)(a2 + v57);
  uint64_t v58 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v58) = *(unsigned char *)(a2 + v58);
  uint64_t v59 = a3[13];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (void *)(a2 + v59);
  uint64_t v62 = sub_1000E3E00();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (!v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v60, v61, v62);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v60, v62);
    goto LABEL_19;
  }
  if (v66)
  {
LABEL_19:
    uint64_t v67 = sub_1000082B4(&qword_100129F38);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v60, v61, v62);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_20:
  uint64_t v68 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v69 = (void *)(a1 + v68);
  uint64_t v70 = (uint64_t *)(a2 + v68);
  uint64_t v72 = *v70;
  uint64_t v71 = v70[1];
  void *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100021588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002159C);
}

uint64_t sub_10002159C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SportsWidgetClock(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000082B4(&qword_100129F38);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 52);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000216CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000216E0);
}

uint64_t sub_1000216E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SportsWidgetClock(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000082B4(&qword_100129F38);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 52);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for SportsWidgetContentViewModel(uint64_t a1)
{
  return sub_10002B794(a1, (uint64_t *)&unk_10012AA60);
}

void sub_100021830()
{
  type metadata accessor for SportsWidgetClock(319);
  if (v0 <= 0x3F)
  {
    sub_100022D6C(319, (unint64_t *)&qword_10012AA70, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t destroy for SportsWidgetContender()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for SportsWidgetContender(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetContender(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

__n128 initializeWithTake for SportsWidgetContender(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SportsWidgetContender(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetContender(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetContender(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetContender()
{
  return &type metadata for SportsWidgetContender;
}

ValueMetadata *type metadata accessor for SportsWidgetScoreViewModel()
{
  return &type metadata for SportsWidgetScoreViewModel;
}

void *sub_100021D28(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *(void *)a2;
    void *v4 = *(void *)a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = *((void *)a2 + 5);
    a1[4] = *((void *)a2 + 4);
    a1[5] = v9;
    uint64_t v10 = *((void *)a2 + 7);
    uint64_t v11 = a3[8];
    long long v23 = &a2[v11];
    long long v24 = (char *)a1 + v11;
    a1[6] = *((void *)a2 + 6);
    a1[7] = v10;
    uint64_t v12 = sub_1000E3EE0();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v25 = a3;
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v24, v23, v12);
    uint64_t v15 = sub_1000082B4(&qword_100129F28);
    v14(&v24[*(int *)(v15 + 36)], &v23[*(int *)(v15 + 36)], v12);
    uint64_t v16 = v25[9];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = &a2[v16];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v16], 1, v12))
    {
      uint64_t v19 = sub_1000082B4(&qword_100129F30);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v14(v17, v18, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    uint64_t v21 = v25[11];
    *((unsigned char *)v4 + v25[10]) = a2[v25[10]];
    *((unsigned char *)v4 + v21) = a2[v21];
  }
  return v4;
}

uint64_t sub_100021F58(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1000E3EE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v4, v5);
  uint64_t v7 = sub_1000082B4(&qword_100129F28);
  v10(v4 + *(int *)(v7 + 36), v5);
  uint64_t v8 = a1 + *(int *)(a2 + 36);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v5);
  }
  return result;
}

void *sub_1000220A4(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v8 = *((void *)a2 + 7);
  uint64_t v9 = a3[8];
  uint64_t v21 = &a2[v9];
  uint64_t v22 = (char *)a1 + v9;
  a1[6] = *((void *)a2 + 6);
  a1[7] = v8;
  uint64_t v10 = sub_1000E3EE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v22, v21, v10);
  uint64_t v13 = sub_1000082B4(&qword_100129F28);
  v12(&v22[*(int *)(v13 + 36)], &v21[*(int *)(v13 + 36)], v10);
  uint64_t v14 = a3[9];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v14], 1, v10))
  {
    uint64_t v17 = sub_1000082B4(&qword_100129F30);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[11];
  *((unsigned char *)a1 + a3[10]) = a2[a3[10]];
  *((unsigned char *)a1 + v18) = a2[v18];
  return a1;
}

void *sub_100022280(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E3EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = sub_1000082B4(&qword_100129F28);
  v11(&v7[*(int *)(v12 + 36)], &v8[*(int *)(v12 + 36)], v9);
  uint64_t v21 = a3;
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (char *)a2 + v13;
  uint64_t v15 = *(uint64_t (**)(void))(v10 + 48);
  uint64_t v20 = (char *)a1 + v13;
  LODWORD(a3) = v15();
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v14, 1, v9);
  if (a3)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v14, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      goto LABEL_9;
    }
    size_t v17 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v18 = v20;
  }
  else
  {
    if (!v16)
    {
      v11(v20, v14, v9);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
    size_t v17 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v18 = v20;
  }
  memcpy(v18, v14, v17);
LABEL_9:
  *((unsigned char *)a1 + *(int *)(v21 + 40)) = *((unsigned char *)a2 + *(int *)(v21 + 40));
  *((unsigned char *)a1 + *(int *)(v21 + 44)) = *((unsigned char *)a2 + *(int *)(v21 + 44));
  return a1;
}

_OWORD *sub_100022524(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000E3EE0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  uint64_t v14 = sub_1000082B4(&qword_100129F28);
  v13(&v9[*(int *)(v14 + 36)], &v10[*(int *)(v14 + 36)], v11);
  uint64_t v15 = a3[9];
  int v16 = (char *)a1 + v15;
  size_t v17 = &a2[v15];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v15], 1, v11))
  {
    uint64_t v18 = sub_1000082B4(&qword_100129F30);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v13(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  uint64_t v19 = a3[11];
  *((unsigned char *)a1 + a3[10]) = a2[a3[10]];
  *((unsigned char *)a1 + v19) = a2[v19];
  return a1;
}

void *sub_1000226B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000E3EE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 40);
  v15(v11, v12, v13);
  uint64_t v16 = sub_1000082B4(&qword_100129F28);
  v15(&v11[*(int *)(v16 + 36)], &v12[*(int *)(v16 + 36)], v13);
  uint64_t v26 = a3;
  uint64_t v17 = *(int *)(a3 + 36);
  uint64_t v18 = (char *)a2 + v17;
  uint64_t v19 = *(uint64_t (**)(void))(v14 + 48);
  uint64_t v25 = (char *)a1 + v17;
  LODWORD(a3) = v19();
  int v20 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v18, 1, v13);
  if (a3)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v25, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v25, 0, 1, v13);
      goto LABEL_9;
    }
    size_t v21 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v22 = v25;
  }
  else
  {
    if (!v20)
    {
      v15(v25, v18, v13);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v13);
    size_t v21 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v22 = v25;
  }
  memcpy(v22, v18, v21);
LABEL_9:
  uint64_t v23 = *(int *)(v26 + 44);
  *((unsigned char *)a1 + *(int *)(v26 + 40)) = *((unsigned char *)a2 + *(int *)(v26 + 40));
  *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  return a1;
}

uint64_t sub_100022918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002292C);
}

uint64_t sub_10002292C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000082B4(&qword_100129F28);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000082B4(&qword_100129F30);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100022A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100022A74);
}

uint64_t sub_100022A74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000082B4(&qword_100129F28);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000082B4(&qword_100129F30);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100022BA8()
{
  sub_100022CB0();
  if (v0 <= 0x3F)
  {
    sub_100022D6C(319, (unint64_t *)&qword_10012AB40, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100022CB0()
{
  if (!qword_10012AB30)
  {
    sub_1000E3EE0();
    sub_100022D14();
    unint64_t v0 = sub_1000E5960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10012AB30);
    }
  }
}

unint64_t sub_100022D14()
{
  unint64_t result = qword_10012AB38;
  if (!qword_10012AB38)
  {
    sub_1000E3EE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AB38);
  }
  return result;
}

void sub_100022D6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000E5C50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for SportsWidgetBaseballClockViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsWidgetBaseballClockViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetBaseballClockViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for SportsWidgetBaseballClockViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SportsWidgetBaseballClockViewModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetBaseballClockViewModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetBaseballClockViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetBaseballClockViewModel()
{
  return &type metadata for SportsWidgetBaseballClockViewModel;
}

void *sub_100023048(void *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *(void *)a2;
    void *v4 = *(void *)a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v6;
    uint64_t v7 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v7;
    uint64_t v8 = *((void *)a2 + 5);
    a1[4] = *((void *)a2 + 4);
    a1[5] = v8;
    uint64_t v9 = *((void *)a2 + 7);
    a1[6] = *((void *)a2 + 6);
    a1[7] = v9;
    uint64_t v10 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v11 = *(int *)(v10 + 32);
    uint64_t v23 = (char *)v4 + v11;
    long long v24 = (int *)v10;
    uint64_t v22 = &a2[v11];
    uint64_t v12 = sub_1000E3EE0();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v23, v22, v12);
    uint64_t v15 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
    v14(&v23[v15], &v22[v15], v12);
    uint64_t v16 = v24[9];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = &a2[v16];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v16], 1, v12))
    {
      uint64_t v19 = sub_1000082B4(&qword_100129F30);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v14(v17, v18, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    *((unsigned char *)v4 + v24[10]) = a2[v24[10]];
    *((unsigned char *)v4 + v24[11]) = a2[v24[11]];
    *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(void *)&a2[*(int *)(a3 + 20)];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100023298(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v3 = a1 + *(int *)(v2 + 32);
  uint64_t v4 = sub_1000E3EE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  uint64_t v7 = sub_1000082B4(&qword_100129F28);
  v6(v3 + *(int *)(v7 + 36), v4);
  uint64_t v8 = a1 + *(int *)(v2 + 36);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4)) {
    v6(v8, v4);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1000233D4(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v8 = *((void *)a2 + 7);
  a1[6] = *((void *)a2 + 6);
  a1[7] = v8;
  uint64_t v9 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v10 = *(int *)(v9 + 32);
  size_t v21 = (char *)a1 + v10;
  uint64_t v22 = (int *)v9;
  uint64_t v20 = &a2[v10];
  uint64_t v11 = sub_1000E3EE0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v21, v20, v11);
  uint64_t v14 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
  v13(&v21[v14], &v20[v14], v11);
  uint64_t v15 = v22[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = &a2[v15];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v15], 1, v11))
  {
    uint64_t v18 = sub_1000082B4(&qword_100129F30);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v13(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  *((unsigned char *)a1 + v22[10]) = a2[v22[10]];
  *((unsigned char *)a1 + v22[11]) = a2[v22[11]];
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000235D4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v6 = *(int *)(v5 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E3EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = sub_1000082B4(&qword_100129F28);
  v11(&v7[*(int *)(v12 + 36)], &v8[*(int *)(v12 + 36)], v9);
  uint64_t v21 = v5;
  uint64_t v13 = *(int *)(v5 + 36);
  uint64_t v14 = (char *)a2 + v13;
  uint64_t v15 = *(uint64_t (**)(void))(v10 + 48);
  uint64_t v20 = (char *)a1 + v13;
  LODWORD(v5) = v15();
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v14, 1, v9);
  if (v5)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v14, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      goto LABEL_9;
    }
    size_t v17 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v18 = v20;
  }
  else
  {
    if (!v16)
    {
      v11(v20, v14, v9);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
    size_t v17 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v18 = v20;
  }
  memcpy(v18, v14, v17);
LABEL_9:
  *((unsigned char *)a1 + *(int *)(v21 + 40)) = *((unsigned char *)a2 + *(int *)(v21 + 40));
  *((unsigned char *)a1 + *(int *)(v21 + 44)) = *((unsigned char *)a2 + *(int *)(v21 + 44));
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1000238A4(_OWORD *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  long long v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  uint64_t v8 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v9 = v8[8];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1000E3EE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v14(v10, v11, v12);
  uint64_t v15 = sub_1000082B4(&qword_100129F28);
  v14(&v10[*(int *)(v15 + 36)], &v11[*(int *)(v15 + 36)], v12);
  uint64_t v16 = v8[9];
  size_t v17 = (char *)a1 + v16;
  uint64_t v18 = &a2[v16];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v16], 1, v12))
  {
    uint64_t v19 = sub_1000082B4(&qword_100129F30);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v14(v17, v18, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  *((unsigned char *)a1 + v8[10]) = a2[v8[10]];
  *((unsigned char *)a1 + v8[11]) = a2[v8[11]];
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

void *sub_100023A54(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000E3EE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 40);
  v15(v11, v12, v13);
  uint64_t v16 = sub_1000082B4(&qword_100129F28);
  v15(&v11[*(int *)(v16 + 36)], &v12[*(int *)(v16 + 36)], v13);
  uint64_t v25 = v9;
  uint64_t v17 = *(int *)(v9 + 36);
  uint64_t v18 = (char *)a2 + v17;
  uint64_t v19 = *(uint64_t (**)(void))(v14 + 48);
  long long v24 = (char *)a1 + v17;
  LODWORD(v9) = v19();
  int v20 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v18, 1, v13);
  if (v9)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v24, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v24, 0, 1, v13);
      goto LABEL_9;
    }
    size_t v21 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v22 = v24;
  }
  else
  {
    if (!v20)
    {
      v15(v24, v18, v13);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
    size_t v21 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v22 = v24;
  }
  memcpy(v22, v18, v21);
LABEL_9:
  *((unsigned char *)a1 + *(int *)(v25 + 40)) = *((unsigned char *)a2 + *(int *)(v25 + 40));
  *((unsigned char *)a1 + *(int *)(v25 + 44)) = *((unsigned char *)a2 + *(int *)(v25 + 44));
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100023CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100023CF0);
}

uint64_t sub_100023CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100023DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100023DD0);
}

uint64_t sub_100023DD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_100023E8C()
{
  uint64_t result = type metadata accessor for SportsWidgetGenericClockViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompetitorShootoutsViewModel()
{
  return &type metadata for CompetitorShootoutsViewModel;
}

unsigned char *storeEnumTagSinglePayload for CompetitorShootoutsViewModel.ShootoutState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100023FFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompetitorShootoutsViewModel.ShootoutState()
{
  return &type metadata for CompetitorShootoutsViewModel.ShootoutState;
}

uint64_t destroy for SportsWidgetEventInfoViewModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SportsWidgetEventInfoViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsWidgetEventInfoViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SportsWidgetEventInfoViewModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetEventInfoViewModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetEventInfoViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetEventInfoViewModel()
{
  return &type metadata for SportsWidgetEventInfoViewModel;
}

uint64_t destroy for SportsWidgetPlay(uint64_t a1, uint64_t a2)
{
  return sub_100025C7C(a1, a2, (uint64_t (*)(uint64_t))&_swift_release);
}

uint64_t initializeWithCopy for SportsWidgetPlay(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetPlay(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for SportsWidgetPlay(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetPlay(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetPlay(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetPlay()
{
  return &type metadata for SportsWidgetPlay;
}

void *sub_100024460(void *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v11;
      uint64_t v12 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v12;
      uint64_t v13 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v13;
      uint64_t v14 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v14;
      uint64_t v15 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v16 = v15[8];
      uint64_t v44 = &a2[v16];
      uint64_t v46 = (char *)a1 + v16;
      uint64_t v17 = sub_1000E3EE0();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = v18;
      size_t v21 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v46, v44, v17);
      uint64_t v22 = sub_1000082B4(&qword_100129F28);
      v19(&v46[*(int *)(v22 + 36)], &v44[*(int *)(v22 + 36)], v17);
      uint64_t v23 = v15[9];
      long long v24 = (char *)a1 + v23;
      uint64_t v25 = &a2[v23];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&a2[v23], 1, v17))
      {
        uint64_t v26 = sub_1000082B4(&qword_100129F30);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        v21(v24, v25, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v17);
      }
      *((unsigned char *)a1 + v15[10]) = a2[v15[10]];
      *((unsigned char *)a1 + v15[11]) = a2[v15[11]];
      uint64_t v42 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)a1 + *(int *)(v42 + 20)) = *(void *)&a2[*(int *)(v42 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v7;
      uint64_t v8 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v8;
      uint64_t v9 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v9;
      *((unsigned char *)a1 + 48) = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v27 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v27;
      uint64_t v28 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v28;
      uint64_t v29 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v29;
      uint64_t v30 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v30;
      uint64_t v31 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v32 = v31[8];
      uint64_t v45 = &a2[v32];
      uint64_t v47 = (char *)a1 + v32;
      uint64_t v33 = sub_1000E3EE0();
      uint64_t v34 = *(void *)(v33 - 8);
      long long v35 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v36 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v47, v45, v33);
      uint64_t v37 = sub_1000082B4(&qword_100129F28);
      v35(&v47[*(int *)(v37 + 36)], &v45[*(int *)(v37 + 36)], v33);
      uint64_t v38 = v31[9];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = &a2[v38];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(&a2[v38], 1, v33))
      {
        uint64_t v41 = sub_1000082B4(&qword_100129F30);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        v35(v39, v40, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v33);
      }
      *((unsigned char *)a1 + v31[10]) = a2[v31[10]];
      *((unsigned char *)a1 + v31[11]) = a2[v31[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000248DC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v10 = a1 + *(int *)(v9 + 32);
    uint64_t v11 = sub_1000E3EE0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v13(v10, v11);
    uint64_t v14 = sub_1000082B4(&qword_100129F28);
    v13(v10 + *(int *)(v14 + 36), v11);
    uint64_t v15 = a1 + *(int *)(v9 + 36);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v15, 1, v11)) {
      v13(v15, v11);
    }
    type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  }
  else
  {
    if (result != 1)
    {
      if (!result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v3 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
        uint64_t v4 = a1 + *(int *)(v3 + 32);
        uint64_t v5 = sub_1000E3EE0();
        uint64_t v6 = *(void *)(v5 - 8);
        uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v16(v4, v5);
        uint64_t v7 = sub_1000082B4(&qword_100129F28);
        v16(v4 + *(int *)(v7 + 36), v5);
        uint64_t v8 = a1 + *(int *)(v3 + 36);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
        if (!result)
        {
          return ((uint64_t (*)(uint64_t, uint64_t))v16)(v8, v5);
        }
      }
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *sub_100024B98(void *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v8;
    uint64_t v9 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v9;
    uint64_t v10 = *((void *)a2 + 5);
    a1[4] = *((void *)a2 + 4);
    a1[5] = v10;
    uint64_t v11 = *((void *)a2 + 7);
    a1[6] = *((void *)a2 + 6);
    a1[7] = v11;
    uint64_t v12 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v13 = v12[8];
    uint64_t v39 = &a2[v13];
    uint64_t v41 = (char *)a1 + v13;
    uint64_t v14 = sub_1000E3EE0();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    uint64_t v16 = *(void *)(v14 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v41, v39, v14);
    uint64_t v17 = sub_1000082B4(&qword_100129F28);
    v15(&v41[*(int *)(v17 + 36)], &v39[*(int *)(v17 + 36)], v14);
    uint64_t v18 = v12[9];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = &a2[v18];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&a2[v18], 1, v14))
    {
      uint64_t v21 = sub_1000082B4(&qword_100129F30);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v15(v19, v20, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v14);
    }
    *((unsigned char *)a1 + v12[10]) = a2[v12[10]];
    *((unsigned char *)a1 + v12[11]) = a2[v12[11]];
    uint64_t v36 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)a1 + *(int *)(v36 + 20)) = *(void *)&a2[*(int *)(v36 + 20)];
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v5;
    uint64_t v6 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v6;
    uint64_t v7 = *((void *)a2 + 5);
    a1[4] = *((void *)a2 + 4);
    a1[5] = v7;
    *((unsigned char *)a1 + 48) = a2[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v22 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v22;
    uint64_t v23 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v23;
    uint64_t v24 = *((void *)a2 + 5);
    a1[4] = *((void *)a2 + 4);
    a1[5] = v24;
    uint64_t v25 = *((void *)a2 + 7);
    a1[6] = *((void *)a2 + 6);
    a1[7] = v25;
    uint64_t v26 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v27 = *(int *)(v26 + 32);
    uint64_t v40 = (char *)a1 + v27;
    uint64_t v42 = (int *)v26;
    uint64_t v38 = &a2[v27];
    uint64_t v28 = sub_1000E3EE0();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(v40, v38, v28);
    uint64_t v31 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
    v30(&v40[v31], &v38[v31], v28);
    uint64_t v32 = v42[9];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = &a2[v32];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(&a2[v32], 1, v28))
    {
      uint64_t v35 = sub_1000082B4(&qword_100129F30);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v30(v33, v34, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
    }
    *((unsigned char *)a1 + v42[10]) = a2[v42[10]];
    *((unsigned char *)a1 + v42[11]) = a2[v42[11]];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100024FC0(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_10002090C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      uint64_t v5 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v6 = v5[8];
      uint64_t v28 = &a2[v6];
      uint64_t v30 = &a1[v6];
      uint64_t v7 = sub_1000E3EE0();
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
      uint64_t v9 = *(void *)(v7 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8(v30, v28, v7);
      uint64_t v10 = sub_1000082B4(&qword_100129F28);
      v8(&v30[*(int *)(v10 + 36)], &v28[*(int *)(v10 + 36)], v7);
      uint64_t v11 = v5[9];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a2[v11], 1, v7))
      {
        uint64_t v14 = sub_1000082B4(&qword_100129F30);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v8(v12, v13, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v7);
      }
      a1[v5[10]] = a2[v5[10]];
      a1[v5[11]] = a2[v5[11]];
      uint64_t v25 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)&a1[*(int *)(v25 + 20)] = *(void *)&a2[*(int *)(v25 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      a1[48] = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      uint64_t v15 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v16 = *(int *)(v15 + 32);
      uint64_t v29 = &a1[v16];
      uint64_t v31 = (int *)v15;
      uint64_t v27 = &a2[v16];
      uint64_t v17 = sub_1000E3EE0();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v29, v27, v17);
      uint64_t v20 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      v19(&v29[v20], &v27[v20], v17);
      uint64_t v21 = v31[9];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&a2[v21], 1, v17))
      {
        uint64_t v24 = sub_1000082B4(&qword_100129F30);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v19(v22, v23, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
      }
      a1[v31[10]] = a2[v31[10]];
      a1[v31[11]] = a2[v31[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10002544C(_OWORD *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v21 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v21;
    long long v22 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v22;
    uint64_t v23 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v24 = v23[8];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = &a2[v24];
    uint64_t v27 = sub_1000E3EE0();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v29(v25, v26, v27);
    uint64_t v30 = sub_1000082B4(&qword_100129F28);
    v29(&v25[*(int *)(v30 + 36)], &v26[*(int *)(v30 + 36)], v27);
    uint64_t v31 = v23[9];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = &a2[v31];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&a2[v31], 1, v27))
    {
      uint64_t v34 = sub_1000082B4(&qword_100129F30);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v29(v32, v33, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
    }
    *((unsigned char *)a1 + v23[10]) = a2[v23[10]];
    *((unsigned char *)a1 + v23[11]) = a2[v23[11]];
    uint64_t v35 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)&a2[*(int *)(v35 + 20)];
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v10 = v9[8];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_1000E3EE0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v15(v11, v12, v13);
    uint64_t v16 = sub_1000082B4(&qword_100129F28);
    v15(&v11[*(int *)(v16 + 36)], &v12[*(int *)(v16 + 36)], v13);
    uint64_t v17 = v9[9];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = &a2[v17];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&a2[v17], 1, v13))
    {
      uint64_t v20 = sub_1000082B4(&qword_100129F30);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      v15(v18, v19, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    *((unsigned char *)a1 + v9[10]) = a2[v9[10]];
    *((unsigned char *)a1 + v9[11]) = a2[v9[11]];
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1000257B8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002090C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v21 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v21;
      long long v22 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v22;
      uint64_t v23 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v24 = v23[8];
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = sub_1000E3EE0();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
      v29(v25, v26, v27);
      uint64_t v30 = sub_1000082B4(&qword_100129F28);
      v29(&v25[*(int *)(v30 + 36)], &v26[*(int *)(v30 + 36)], v27);
      uint64_t v31 = v23[9];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&a2[v31], 1, v27))
      {
        uint64_t v34 = sub_1000082B4(&qword_100129F30);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        v29(v32, v33, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
      }
      a1[v23[10]] = a2[v23[10]];
      a1[v23[11]] = a2[v23[11]];
      uint64_t v35 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)&a1[*(int *)(v35 + 20)] = *(void *)&a2[*(int *)(v35 + 20)];
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      long long v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v7;
      long long v8 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v8;
      uint64_t v9 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v10 = v9[8];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = sub_1000E3EE0();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v15(v11, v12, v13);
      uint64_t v16 = sub_1000082B4(&qword_100129F28);
      v15(&v11[*(int *)(v16 + 36)], &v12[*(int *)(v16 + 36)], v13);
      uint64_t v17 = v9[9];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&a2[v17], 1, v13))
      {
        uint64_t v20 = sub_1000082B4(&qword_100129F30);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v15(v18, v19, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
      }
      a1[v9[10]] = a2[v9[10]];
      a1[v9[11]] = a2[v9[11]];
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100025B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_100025B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_100025B88()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100025B98()
{
  uint64_t result = type metadata accessor for SportsWidgetGenericClockViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SportsWidgetSoccerClockViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for SportsWidgetLogoViewModel(uint64_t a1, uint64_t a2)
{
  return sub_100025C7C(a1, a2, (uint64_t (*)(uint64_t))&_swift_bridgeObjectRelease);
}

uint64_t sub_100025C7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_bridgeObjectRelease();
  a3(*(void *)(a1 + 24));
  uint64_t v4 = *(void *)(a1 + 40);

  return a3(v4);
}

void *initializeWithCopy for SportsWidgetLogoViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsWidgetLogoViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SportsWidgetLogoViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for SportsWidgetLogoViewModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetLogoViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetLogoViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetLogoViewModel()
{
  return &type metadata for SportsWidgetLogoViewModel;
}

uint64_t sub_100025ED4(char *a1, unsigned __int8 *a2)
{
  return sub_10001C3A8(*a1, *a2);
}

Swift::Int sub_100025EE0()
{
  return sub_1000E5E20();
}

uint64_t sub_100025F70()
{
  sub_1000E5A50();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100025FEC()
{
  return sub_1000E5E20();
}

uint64_t sub_100026078@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10002614C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000260A8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = 1936943469;
  if (v2 != 1) {
    uint64_t v4 = 1818324839;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x7974706D65;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

unint64_t sub_1000260F8()
{
  unint64_t result = qword_10012ACC0;
  if (!qword_10012ACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012ACC0);
  }
  return result;
}

uint64_t sub_10002614C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1001201B0;
  v6._object = a2;
  unint64_t v4 = sub_1000E5DA0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

void *sub_100026198(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(void *)(a1 + 104) = a2[13];
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v12 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v12;
    uint64_t v13 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v13;
    uint64_t v14 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v14;
    uint64_t v15 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v15;
    uint64_t v16 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v16;
    uint64_t v17 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v17;
    *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
    uint64_t v18 = a2[28];
    *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
    uint64_t v19 = a3[6];
    int v65 = (void *)(a1 + v19);
    uint64_t v75 = (char *)a2 + v19;
    *(void *)(a1 + 224) = v18;
    type metadata accessor for SportsWidgetClock(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v25 = *((void *)v75 + 1);
      *int v65 = *(void *)v75;
      v65[1] = v25;
      uint64_t v26 = *((void *)v75 + 3);
      v65[2] = *((void *)v75 + 2);
      v65[3] = v26;
      uint64_t v27 = *((void *)v75 + 5);
      v65[4] = *((void *)v75 + 4);
      v65[5] = v27;
      uint64_t v28 = *((void *)v75 + 7);
      v65[6] = *((void *)v75 + 6);
      v65[7] = v28;
      uint64_t v72 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v29 = v72[8];
      uint64_t v69 = (char *)v65 + v29;
      uint64_t v67 = &v75[v29];
      uint64_t v30 = sub_1000E3EE0();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v69, v67, v30);
      uint64_t v33 = sub_1000082B4(&qword_100129F28);
      uint64_t v70 = v32;
      v32(&v69[*(int *)(v33 + 36)], &v67[*(int *)(v33 + 36)], v30);
      uint64_t v34 = v72[9];
      uint64_t v35 = (char *)v65 + v34;
      uint64_t v36 = &v75[v34];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v75[v34], 1, v30))
      {
        uint64_t v37 = sub_1000082B4(&qword_100129F30);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v70(v35, v36, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v35, 0, 1, v30);
      }
      *((unsigned char *)v65 + v72[10]) = v75[v72[10]];
      *((unsigned char *)v65 + v72[11]) = v75[v72[11]];
      uint64_t v51 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v65 + *(int *)(v51 + 20)) = *(void *)&v75[*(int *)(v51 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = *((void *)v75 + 1);
      *int v65 = *(void *)v75;
      v65[1] = v21;
      uint64_t v22 = *((void *)v75 + 3);
      v65[2] = *((void *)v75 + 2);
      v65[3] = v22;
      uint64_t v23 = *((void *)v75 + 5);
      v65[4] = *((void *)v75 + 4);
      v65[5] = v23;
      *((unsigned char *)v65 + 48) = v75[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v38 = *((void *)v75 + 1);
      *int v65 = *(void *)v75;
      v65[1] = v38;
      uint64_t v39 = *((void *)v75 + 3);
      v65[2] = *((void *)v75 + 2);
      v65[3] = v39;
      uint64_t v40 = *((void *)v75 + 5);
      v65[4] = *((void *)v75 + 4);
      v65[5] = v40;
      uint64_t v41 = *((void *)v75 + 7);
      v65[6] = *((void *)v75 + 6);
      v65[7] = v41;
      uint64_t v42 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v43 = *(int *)(v42 + 32);
      int v66 = &v75[v43];
      uint64_t v68 = (char *)v65 + v43;
      uint64_t v44 = sub_1000E3EE0();
      uint64_t v64 = *(void *)(v44 - 8);
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v68, v66, v44);
      uint64_t v46 = sub_1000082B4(&qword_100129F28);
      uint64_t v71 = v45;
      v45(&v68[*(int *)(v46 + 36)], &v66[*(int *)(v46 + 36)], v44);
      uint64_t v73 = v42;
      uint64_t v47 = *(int *)(v42 + 36);
      uint64_t v48 = (char *)v65 + v47;
      long long v49 = &v75[v47];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(&v75[v47], 1, v44))
      {
        uint64_t v50 = sub_1000082B4(&qword_100129F30);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        v71(v48, v49, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v48, 0, 1, v44);
      }
      *((unsigned char *)v65 + *(int *)(v73 + 40)) = v75[*(int *)(v73 + 40)];
      *((unsigned char *)v65 + *(int *)(v73 + 44)) = v75[*(int *)(v73 + 44)];
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = a3[7];
    uint64_t v53 = a3[8];
    uint64_t v54 = (char *)v4 + v52;
    uint64_t v55 = (uint64_t)a2 + v52;
    uint64_t v56 = *(void *)(v55 + 8);
    *(void *)uint64_t v54 = *(void *)v55;
    *((void *)v54 + 1) = v56;
    v54[16] = *(unsigned char *)(v55 + 16);
    *((void *)v54 + 3) = *(void *)(v55 + 24);
    v54[32] = *(unsigned char *)(v55 + 32);
    *((void *)v54 + 5) = *(void *)(v55 + 40);
    v54[48] = *(unsigned char *)(v55 + 48);
    uint64_t v57 = (void *)((char *)v4 + v53);
    uint64_t v58 = (uint64_t *)((char *)a2 + v53);
    uint64_t v59 = v58[1];
    *uint64_t v57 = *v58;
    v57[1] = v59;
    uint64_t v60 = v58[3];
    v57[2] = v58[2];
    v57[3] = v60;
    uint64_t v61 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v61) = *((unsigned char *)a2 + v61);
    uint64_t v62 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v4 + v62) = *((unsigned char *)a2 + v62);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100026838(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v14 = v4 + *(int *)(v13 + 32);
      uint64_t v15 = sub_1000E3EE0();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v17(v14, v15);
      uint64_t v18 = sub_1000082B4(&qword_100129F28);
      v17(v14 + *(int *)(v18 + 36), v15);
      uint64_t v19 = v4 + *(int *)(v13 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v19, 1, v15)) {
        v17(v19, v15);
      }
      type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      goto LABEL_10;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v7 = v4 + *(int *)(v6 + 32);
      uint64_t v8 = sub_1000E3EE0();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v10(v7, v8);
      uint64_t v11 = sub_1000082B4(&qword_100129F28);
      v10(v7 + *(int *)(v11 + 36), v8);
      uint64_t v12 = v4 + *(int *)(v6 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8)) {
        v10(v12, v8);
      }
      break;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100026B68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  uint64_t v17 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v18 = a3[6];
  uint64_t v67 = (void *)(a1 + v18);
  uint64_t v75 = (char *)(a2 + v18);
  *(void *)(a1 + 224) = v17;
  type metadata accessor for SportsWidgetClock(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v24 = *((void *)v75 + 1);
    *uint64_t v67 = *(void *)v75;
    v67[1] = v24;
    uint64_t v25 = *((void *)v75 + 3);
    v67[2] = *((void *)v75 + 2);
    v67[3] = v25;
    uint64_t v26 = *((void *)v75 + 5);
    v67[4] = *((void *)v75 + 4);
    v67[5] = v26;
    uint64_t v27 = *((void *)v75 + 7);
    v67[6] = *((void *)v75 + 6);
    v67[7] = v27;
    uint64_t v28 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v29 = *(int *)(v28 + 32);
    uint64_t v30 = (char *)v67 + v29;
    uint64_t v68 = &v75[v29];
    uint64_t v31 = sub_1000E3EE0();
    uint64_t v70 = *(void *)(v31 - 8);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v30, v68, v31);
    uint64_t v33 = sub_1000082B4(&qword_100129F28);
    uint64_t v73 = v32;
    v32(&v30[*(int *)(v33 + 36)], &v68[*(int *)(v33 + 36)], v31);
    uint64_t v34 = v28;
    uint64_t v35 = *(int *)(v28 + 36);
    uint64_t v36 = (char *)v67 + v35;
    uint64_t v37 = &v75[v35];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(&v75[v35], 1, v31))
    {
      uint64_t v38 = sub_1000082B4(&qword_100129F30);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      v73(v36, v37, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v36, 0, 1, v31);
    }
    uint64_t v23 = a3;
    *((unsigned char *)v67 + *(int *)(v34 + 40)) = v75[*(int *)(v34 + 40)];
    *((unsigned char *)v67 + *(int *)(v34 + 44)) = v75[*(int *)(v34 + 44)];
    uint64_t v53 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v67 + *(int *)(v53 + 20)) = *(void *)&v75[*(int *)(v53 + 20)];
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = *((void *)v75 + 1);
    *uint64_t v67 = *(void *)v75;
    v67[1] = v20;
    uint64_t v21 = *((void *)v75 + 3);
    v67[2] = *((void *)v75 + 2);
    v67[3] = v21;
    uint64_t v22 = *((void *)v75 + 5);
    v67[4] = *((void *)v75 + 4);
    v67[5] = v22;
    *((unsigned char *)v67 + 48) = v75[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = a3;
  }
  else
  {
    uint64_t v39 = *((void *)v75 + 1);
    *uint64_t v67 = *(void *)v75;
    v67[1] = v39;
    uint64_t v40 = *((void *)v75 + 3);
    v67[2] = *((void *)v75 + 2);
    v67[3] = v40;
    uint64_t v41 = *((void *)v75 + 5);
    v67[4] = *((void *)v75 + 4);
    v67[5] = v41;
    uint64_t v42 = *((void *)v75 + 7);
    v67[6] = *((void *)v75 + 6);
    v67[7] = v42;
    uint64_t v43 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v44 = *(int *)(v43 + 32);
    uint64_t v69 = &v75[v44];
    uint64_t v71 = (char *)v67 + v44;
    uint64_t v45 = sub_1000E3EE0();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(v71, v69, v45);
    uint64_t v48 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
    uint64_t v72 = v47;
    v47(&v71[v48], &v69[v48], v45);
    uint64_t v74 = v43;
    uint64_t v49 = *(int *)(v43 + 36);
    uint64_t v50 = (char *)v67 + v49;
    uint64_t v51 = &v75[v49];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(&v75[v49], 1, v45))
    {
      uint64_t v52 = sub_1000082B4(&qword_100129F30);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      v72(v50, v51, v45);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v50, 0, 1, v45);
    }
    uint64_t v23 = a3;
    *((unsigned char *)v67 + *(int *)(v74 + 40)) = v75[*(int *)(v74 + 40)];
    *((unsigned char *)v67 + *(int *)(v74 + 44)) = v75[*(int *)(v74 + 44)];
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = v23[7];
  uint64_t v55 = v23[8];
  uint64_t v56 = a1 + v54;
  uint64_t v57 = a2 + v54;
  uint64_t v58 = *(void *)(v57 + 8);
  *(void *)uint64_t v56 = *(void *)v57;
  *(void *)(v56 + 8) = v58;
  *(unsigned char *)(v56 + 16) = *(unsigned char *)(v57 + 16);
  *(void *)(v56 + 24) = *(void *)(v57 + 24);
  *(unsigned char *)(v56 + 32) = *(unsigned char *)(v57 + 32);
  *(void *)(v56 + 40) = *(void *)(v57 + 40);
  *(unsigned char *)(v56 + 48) = *(unsigned char *)(v57 + 48);
  uint64_t v59 = (void *)(a1 + v55);
  uint64_t v60 = (void *)(a2 + v55);
  uint64_t v61 = v60[1];
  *uint64_t v59 = *v60;
  v59[1] = v61;
  uint64_t v62 = v60[3];
  v59[2] = v60[2];
  v59[3] = v62;
  uint64_t v63 = v23[10];
  *(unsigned char *)(a1 + v23[9]) = *(unsigned char *)(a2 + v23[9]);
  *(unsigned char *)(a1 + v63) = *(unsigned char *)(a2 + v63);
  uint64_t v64 = v23[12];
  *(unsigned char *)(a1 + v23[11]) = *(unsigned char *)(a2 + v23[11]);
  *(unsigned char *)(a1 + v64) = *(unsigned char *)(a2 + v64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000271C4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_10002090C(a1 + v6);
    type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      void *v7 = *(void *)v8;
      uint64_t v40 = a3;
      v7[1] = *((void *)v8 + 1);
      void v7[2] = *((void *)v8 + 2);
      v7[3] = *((void *)v8 + 3);
      v7[4] = *((void *)v8 + 4);
      v7[5] = *((void *)v8 + 5);
      v7[6] = *((void *)v8 + 6);
      v7[7] = *((void *)v8 + 7);
      uint64_t v10 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v11 = *(int *)(v10 + 32);
      uint64_t v12 = (char *)v7 + v11;
      uint64_t v13 = &v8[v11];
      uint64_t v14 = sub_1000E3EE0();
      uint64_t v44 = *(void *)(v14 - 8);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      uint64_t v16 = sub_1000082B4(&qword_100129F28);
      uint64_t v39 = v15;
      v15(&v12[*(int *)(v16 + 36)], &v13[*(int *)(v16 + 36)], v14);
      uint64_t v42 = v10;
      uint64_t v17 = *(int *)(v10 + 36);
      uint64_t v18 = (char *)v7 + v17;
      uint64_t v19 = &v8[v17];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(&v8[v17], 1, v14))
      {
        uint64_t v20 = sub_1000082B4(&qword_100129F30);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v39(v18, v19, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v18, 0, 1, v14);
      }
      *((unsigned char *)v7 + *(int *)(v42 + 40)) = v8[*(int *)(v42 + 40)];
      *((unsigned char *)v7 + *(int *)(v42 + 44)) = v8[*(int *)(v42 + 44)];
      uint64_t v30 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v7 + *(int *)(v30 + 20)) = *(void *)&v8[*(int *)(v30 + 20)];
      swift_bridgeObjectRetain();
      a3 = v40;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      void *v7 = *(void *)v8;
      v7[1] = *((void *)v8 + 1);
      void v7[2] = *((void *)v8 + 2);
      v7[3] = *((void *)v8 + 3);
      v7[4] = *((void *)v8 + 4);
      v7[5] = *((void *)v8 + 5);
      *((unsigned char *)v7 + 48) = v8[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      void *v7 = *(void *)v8;
      v7[1] = *((void *)v8 + 1);
      void v7[2] = *((void *)v8 + 2);
      v7[3] = *((void *)v8 + 3);
      v7[4] = *((void *)v8 + 4);
      v7[5] = *((void *)v8 + 5);
      v7[6] = *((void *)v8 + 6);
      v7[7] = *((void *)v8 + 7);
      uint64_t v45 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v21 = v45[8];
      uint64_t v22 = (char *)v7 + v21;
      uint64_t v38 = &v8[v21];
      uint64_t v23 = sub_1000E3EE0();
      uint64_t v43 = *(void *)(v23 - 8);
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v22, v38, v23);
      uint64_t v25 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      uint64_t v41 = v24;
      v24(&v22[v25], &v38[v25], v23);
      uint64_t v26 = v45[9];
      uint64_t v27 = (char *)v7 + v26;
      uint64_t v28 = &v8[v26];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(&v8[v26], 1, v23))
      {
        uint64_t v29 = sub_1000082B4(&qword_100129F30);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v41(v27, v28, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v27, 0, 1, v23);
      }
      *((unsigned char *)v7 + v45[10]) = v8[v45[10]];
      *((unsigned char *)v7 + v45[11]) = v8[v45[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = a3[7];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(void *)(v32 + 8) = *(void *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  *(void *)(v32 + 24) = *(void *)(v33 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(v32 + 32) = *(unsigned char *)(v33 + 32);
  *(void *)(v32 + 40) = *(void *)(v33 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(v32 + 48) = *(unsigned char *)(v33 + 48);
  uint64_t v34 = a3[8];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = a2 + v34;
  void *v35 = *(void *)(a2 + v34);
  v35[1] = *(void *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35[2] = *(void *)(v36 + 16);
  v35[3] = *(void *)(v36 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_10002796C(uint64_t a1, uint64_t a2, int *a3)
{
  Swift::OpaquePointer v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 120);
  long long v10 = *(_OWORD *)(a2 + 136);
  long long v11 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v11;
  *(_OWORD *)(a1 + 136) = v10;
  *(_OWORD *)(a1 + 120) = v9;
  long long v12 = *(_OWORD *)(a2 + 184);
  long long v13 = *(_OWORD *)(a2 + 200);
  long long v14 = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v14;
  *(_OWORD *)(a1 + 200) = v13;
  uint64_t v15 = a3[6];
  uint64_t v16 = (_OWORD *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  *(_OWORD *)(a1 + 184) = v12;
  uint64_t v18 = type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v61 = v3;
    long long v32 = *((_OWORD *)v17 + 1);
    _OWORD *v16 = *(_OWORD *)v17;
    v16[1] = v32;
    long long v33 = *((_OWORD *)v17 + 3);
    v16[2] = *((_OWORD *)v17 + 2);
    v16[3] = v33;
    uint64_t v34 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v35 = v34[8];
    uint64_t v36 = (char *)v16 + v35;
    uint64_t v37 = &v17[v35];
    uint64_t v38 = sub_1000E3EE0();
    uint64_t v59 = *(void *)(v38 - 8);
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    v39(v36, v37, v38);
    uint64_t v40 = sub_1000082B4(&qword_100129F28);
    uint64_t v57 = v39;
    v39(&v36[*(int *)(v40 + 36)], &v37[*(int *)(v40 + 36)], v38);
    uint64_t v41 = v34[9];
    uint64_t v42 = (char *)v16 + v41;
    uint64_t v43 = &v17[v41];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(&v17[v41], 1, v38))
    {
      uint64_t v44 = sub_1000082B4(&qword_100129F30);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      v57(v42, v43, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v42, 0, 1, v38);
    }
    *((unsigned char *)v16 + v34[10]) = v17[v34[10]];
    *((unsigned char *)v16 + v34[11]) = v17[v34[11]];
    uint64_t v45 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v16 + *(int *)(v45 + 20)) = *(void *)&v17[*(int *)(v45 + 20)];
    swift_storeEnumTagMultiPayload();
    Swift::OpaquePointer v3 = v61;
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    long long v20 = *((_OWORD *)v17 + 1);
    _OWORD *v16 = *(_OWORD *)v17;
    v16[1] = v20;
    long long v21 = *((_OWORD *)v17 + 3);
    v16[2] = *((_OWORD *)v17 + 2);
    v16[3] = v21;
    uint64_t v62 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v22 = v62[8];
    uint64_t v23 = (char *)v16 + v22;
    uint64_t v24 = &v17[v22];
    uint64_t v25 = sub_1000E3EE0();
    uint64_t v60 = *(void *)(v25 - 8);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
    v26(v23, v24, v25);
    uint64_t v27 = sub_1000082B4(&qword_100129F28);
    uint64_t v58 = v26;
    v26(&v23[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
    uint64_t v28 = v62[9];
    uint64_t v29 = (char *)v16 + v28;
    uint64_t v30 = &v17[v28];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(&v17[v28], 1, v25))
    {
      uint64_t v31 = sub_1000082B4(&qword_100129F30);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v58(v29, v30, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v29, 0, 1, v25);
    }
    *((unsigned char *)v16 + v62[10]) = v17[v62[10]];
    *((unsigned char *)v16 + v62[11]) = v17[v62[11]];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v46 = v3[7];
  uint64_t v47 = v3[8];
  uint64_t v48 = a1 + v46;
  uint64_t v49 = a2 + v46;
  long long v50 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v50;
  *(_OWORD *)(v48 + 32) = *(_OWORD *)(v49 + 32);
  *(unsigned char *)(v48 + 48) = *(unsigned char *)(v49 + 48);
  uint64_t v51 = (_OWORD *)(a1 + v47);
  uint64_t v52 = (_OWORD *)(a2 + v47);
  long long v53 = v52[1];
  *uint64_t v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = v3[10];
  *(unsigned char *)(a1 + v3[9]) = *(unsigned char *)(a2 + v3[9]);
  *(unsigned char *)(a1 + v54) = *(unsigned char *)(a2 + v54);
  uint64_t v55 = v3[12];
  *(unsigned char *)(a1 + v3[11]) = *(unsigned char *)(a2 + v3[11]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  return a1;
}

uint64_t sub_100027DF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_release();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  if (a1 != a2)
  {
    uint64_t v18 = a3[6];
    uint64_t v19 = (_OWORD *)(a1 + v18);
    long long v20 = (char *)(a2 + v18);
    sub_10002090C(a1 + v18);
    uint64_t v21 = type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v35 = *((_OWORD *)v20 + 1);
      _OWORD *v19 = *(_OWORD *)v20;
      v19[1] = v35;
      long long v36 = *((_OWORD *)v20 + 3);
      v19[2] = *((_OWORD *)v20 + 2);
      v19[3] = v36;
      int v65 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v37 = v65[8];
      uint64_t v38 = (char *)v19 + v37;
      uint64_t v39 = &v20[v37];
      uint64_t v40 = sub_1000E3EE0();
      uint64_t v63 = *(void *)(v40 - 8);
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
      v41(v38, v39, v40);
      uint64_t v42 = sub_1000082B4(&qword_100129F28);
      uint64_t v61 = v41;
      v41(&v38[*(int *)(v42 + 36)], &v39[*(int *)(v42 + 36)], v40);
      uint64_t v43 = v65[9];
      uint64_t v44 = (char *)v19 + v43;
      uint64_t v45 = &v20[v43];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(&v20[v43], 1, v40))
      {
        uint64_t v46 = sub_1000082B4(&qword_100129F30);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        v61(v44, v45, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v44, 0, 1, v40);
      }
      *((unsigned char *)v19 + v65[10]) = v20[v65[10]];
      *((unsigned char *)v19 + v65[11]) = v20[v65[11]];
      uint64_t v47 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v19 + *(int *)(v47 + 20)) = *(void *)&v20[*(int *)(v47 + 20)];
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      long long v23 = *((_OWORD *)v20 + 1);
      _OWORD *v19 = *(_OWORD *)v20;
      v19[1] = v23;
      long long v24 = *((_OWORD *)v20 + 3);
      v19[2] = *((_OWORD *)v20 + 2);
      v19[3] = v24;
      uint64_t v64 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v25 = v64[8];
      uint64_t v26 = (char *)v19 + v25;
      uint64_t v27 = &v20[v25];
      uint64_t v28 = sub_1000E3EE0();
      uint64_t v62 = *(void *)(v28 - 8);
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
      v29(v26, v27, v28);
      uint64_t v30 = sub_1000082B4(&qword_100129F28);
      uint64_t v60 = v29;
      v29(&v26[*(int *)(v30 + 36)], &v27[*(int *)(v30 + 36)], v28);
      uint64_t v31 = v64[9];
      long long v32 = (char *)v19 + v31;
      long long v33 = &v20[v31];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(&v20[v31], 1, v28))
      {
        uint64_t v34 = sub_1000082B4(&qword_100129F30);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        v60(v32, v33, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v32, 0, 1, v28);
      }
      *((unsigned char *)v19 + v64[10]) = v20[v64[10]];
      *((unsigned char *)v19 + v64[11]) = v20[v64[11]];
LABEL_13:
      swift_storeEnumTagMultiPayload();
      goto LABEL_14;
    }
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
LABEL_14:
  uint64_t v48 = a3[7];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a2 + v48 + 8);
  *(void *)uint64_t v49 = *(void *)(a2 + v48);
  *(void *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 16) = *(unsigned char *)(v50 + 16);
  *(void *)(v49 + 24) = *(void *)(v50 + 24);
  swift_release();
  *(unsigned char *)(v49 + 32) = *(unsigned char *)(v50 + 32);
  *(void *)(v49 + 40) = *(void *)(v50 + 40);
  swift_release();
  *(unsigned char *)(v49 + 48) = *(unsigned char *)(v50 + 48);
  uint64_t v52 = a3[8];
  long long v53 = (void *)(a1 + v52);
  uint64_t v54 = a2 + v52;
  uint64_t v55 = *(void *)(a2 + v52 + 8);
  void *v53 = *(void *)(a2 + v52);
  v53[1] = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void *)(v54 + 24);
  v53[2] = *(void *)(v54 + 16);
  v53[3] = v56;
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v57) = *(unsigned char *)(a2 + v57);
  uint64_t v58 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v58) = *(unsigned char *)(a2 + v58);
  return a1;
}

uint64_t sub_100028358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002836C);
}

uint64_t sub_100028370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100028384);
}

uint64_t type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012AD20);
}

uint64_t sub_1000283A8()
{
  uint64_t result = type metadata accessor for SportsWidgetClock(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100028464(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = a3[6];
    __dst = (char *)a1 + v11;
    uint64_t v12 = (char *)a2 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v13 = sub_1000E3E00();
    uint64_t v26 = *(void *)(v13 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v12, 1, v13))
    {
      uint64_t v14 = sub_1000082B4(&qword_100129F38);
      memcpy(__dst, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (void *)((char *)v4 + v17);
    uint64_t v22 = (void *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v24) = *((unsigned char *)a2 + v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100028678(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1000E3E00();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100028774(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  uint64_t v9 = a3[6];
  __dst = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v11 = sub_1000E3E00();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24(v10, 1, v11))
  {
    uint64_t v13 = sub_1000082B4(&qword_100129F38);
    memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)((char *)a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100028938(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E3E00();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1000082B4(&qword_100129F38);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

_OWORD *sub_100028BA8(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000E3E00();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1000082B4(&qword_100129F38);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  uint64_t v15 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  return a1;
}

void *sub_100028CFC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000E3E00();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_1000082B4(&qword_100129F38);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v29) = *((unsigned char *)a2 + v29);
  return a1;
}

uint64_t sub_100028F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100028F1C);
}

uint64_t sub_100028F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000082B4(&qword_100129F38);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100028FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100028FE4);
}

uint64_t sub_100028FE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000082B4(&qword_100129F38);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012ADD0);
}

void sub_1000290B0()
{
  sub_100022D6C(319, (unint64_t *)&qword_10012AA70, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SportsWidgetPlay.Bar(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for SportsWidgetPlay.Bar()
{
  return swift_release();
}

uint64_t assignWithCopy for SportsWidgetPlay.Bar(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SportsWidgetPlay.Bar(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetLogoViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetLogoViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetPlay.Bar()
{
  return &type metadata for SportsWidgetPlay.Bar;
}

void *sub_1000292D8(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    void *v4 = *a2;
    unint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v10;
    uint64_t v11 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v11;
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(void *)(a1 + 104) = a2[13];
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v12 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v12;
    uint64_t v13 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v13;
    uint64_t v14 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v14;
    uint64_t v15 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v15;
    uint64_t v16 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v16;
    uint64_t v17 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v17;
    *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
    uint64_t v18 = a2[28];
    *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
    uint64_t v19 = a3[6];
    uint64_t v73 = (void *)(a1 + v19);
    uint64_t v83 = (char *)a2 + v19;
    *(void *)(a1 + 224) = v18;
    type metadata accessor for SportsWidgetClock(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v25 = *((void *)v83 + 1);
      *uint64_t v73 = *(void *)v83;
      v73[1] = v25;
      uint64_t v26 = *((void *)v83 + 3);
      v73[2] = *((void *)v83 + 2);
      v73[3] = v26;
      uint64_t v27 = *((void *)v83 + 5);
      v73[4] = *((void *)v83 + 4);
      v73[5] = v27;
      uint64_t v28 = *((void *)v83 + 7);
      v73[6] = *((void *)v83 + 6);
      v73[7] = v28;
      uint64_t v80 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v29 = v80[8];
      uint64_t v77 = (char *)v73 + v29;
      uint64_t v75 = &v83[v29];
      uint64_t v30 = sub_1000E3EE0();
      uint64_t v31 = *(void *)(v30 - 8);
      long long v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v77, v75, v30);
      uint64_t v33 = sub_1000082B4(&qword_100129F28);
      uint64_t v78 = v32;
      v32(&v77[*(int *)(v33 + 36)], &v75[*(int *)(v33 + 36)], v30);
      uint64_t v34 = v80[9];
      long long v35 = (char *)v73 + v34;
      long long v36 = &v83[v34];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v83[v34], 1, v30))
      {
        uint64_t v37 = sub_1000082B4(&qword_100129F30);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v78(v35, v36, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v35, 0, 1, v30);
      }
      *((unsigned char *)v73 + v80[10]) = v83[v80[10]];
      *((unsigned char *)v73 + v80[11]) = v83[v80[11]];
      uint64_t v51 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v73 + *(int *)(v51 + 20)) = *(void *)&v83[*(int *)(v51 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = *((void *)v83 + 1);
      *uint64_t v73 = *(void *)v83;
      v73[1] = v21;
      uint64_t v22 = *((void *)v83 + 3);
      v73[2] = *((void *)v83 + 2);
      v73[3] = v22;
      uint64_t v23 = *((void *)v83 + 5);
      v73[4] = *((void *)v83 + 4);
      v73[5] = v23;
      *((unsigned char *)v73 + 48) = v83[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v38 = *((void *)v83 + 1);
      *uint64_t v73 = *(void *)v83;
      v73[1] = v38;
      uint64_t v39 = *((void *)v83 + 3);
      v73[2] = *((void *)v83 + 2);
      v73[3] = v39;
      uint64_t v40 = *((void *)v83 + 5);
      v73[4] = *((void *)v83 + 4);
      v73[5] = v40;
      uint64_t v41 = *((void *)v83 + 7);
      v73[6] = *((void *)v83 + 6);
      v73[7] = v41;
      uint64_t v42 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v43 = *(int *)(v42 + 32);
      uint64_t v74 = &v83[v43];
      uint64_t v76 = (char *)v73 + v43;
      uint64_t v44 = sub_1000E3EE0();
      uint64_t v72 = *(void *)(v44 - 8);
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v76, v74, v44);
      uint64_t v46 = sub_1000082B4(&qword_100129F28);
      uint64_t v79 = v45;
      v45(&v76[*(int *)(v46 + 36)], &v74[*(int *)(v46 + 36)], v44);
      uint64_t v81 = v42;
      uint64_t v47 = *(int *)(v42 + 36);
      uint64_t v48 = (char *)v73 + v47;
      uint64_t v49 = &v83[v47];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(&v83[v47], 1, v44))
      {
        uint64_t v50 = sub_1000082B4(&qword_100129F30);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        v79(v48, v49, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v48, 0, 1, v44);
      }
      *((unsigned char *)v73 + *(int *)(v81 + 40)) = v83[*(int *)(v81 + 40)];
      *((unsigned char *)v73 + *(int *)(v81 + 44)) = v83[*(int *)(v81 + 44)];
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = a3[7];
    uint64_t v53 = a3[8];
    uint64_t v54 = (void *)((char *)v4 + v52);
    uint64_t v55 = (uint64_t *)((char *)a2 + v52);
    uint64_t v56 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v56;
    uint64_t v57 = v55[3];
    v54[2] = v55[2];
    v54[3] = v57;
    uint64_t v58 = (char *)v4 + v53;
    uint64_t v59 = (uint64_t)a2 + v53;
    uint64_t v60 = *(void *)(v59 + 8);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v60;
    v58[16] = *(unsigned char *)(v59 + 16);
    *((void *)v58 + 3) = *(void *)(v59 + 24);
    v58[32] = *(unsigned char *)(v59 + 32);
    *((void *)v58 + 5) = *(void *)(v59 + 40);
    v58[48] = *(unsigned char *)(v59 + 48);
    uint64_t v61 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v61) = *((unsigned char *)a2 + v61);
    uint64_t v62 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    uint64_t v63 = (void *)((char *)v4 + v62);
    uint64_t v64 = (uint64_t *)((char *)a2 + v62);
    uint64_t v65 = v64[1];
    void *v63 = *v64;
    v63[1] = v65;
    uint64_t v66 = a3[14];
    *((unsigned char *)v4 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    *((unsigned char *)v4 + v66) = *((unsigned char *)a2 + v66);
    uint64_t v67 = a3[15];
    uint64_t v68 = (void *)((char *)v4 + v67);
    uint64_t v69 = (uint64_t *)((char *)a2 + v67);
    uint64_t v70 = v69[1];
    *uint64_t v68 = *v69;
    v68[1] = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000299B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v14 = v4 + *(int *)(v13 + 32);
      uint64_t v15 = sub_1000E3EE0();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v17(v14, v15);
      uint64_t v18 = sub_1000082B4(&qword_100129F28);
      v17(v14 + *(int *)(v18 + 36), v15);
      uint64_t v19 = v4 + *(int *)(v13 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v19, 1, v15)) {
        v17(v19, v15);
      }
      type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      goto LABEL_10;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v7 = v4 + *(int *)(v6 + 32);
      uint64_t v8 = sub_1000E3EE0();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v10(v7, v8);
      uint64_t v11 = sub_1000082B4(&qword_100129F28);
      v10(v7 + *(int *)(v11 + 36), v8);
      uint64_t v12 = v4 + *(int *)(v6 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8)) {
        v10(v12, v8);
      }
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100029D08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  uint64_t v17 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v18 = a3[6];
  uint64_t v73 = (void *)(a1 + v18);
  uint64_t v82 = (char *)(a2 + v18);
  *(void *)(a1 + 224) = v17;
  type metadata accessor for SportsWidgetClock(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v24 = *((void *)v82 + 1);
    *uint64_t v73 = *(void *)v82;
    v73[1] = v24;
    uint64_t v25 = *((void *)v82 + 3);
    v73[2] = *((void *)v82 + 2);
    v73[3] = v25;
    uint64_t v26 = *((void *)v82 + 5);
    v73[4] = *((void *)v82 + 4);
    v73[5] = v26;
    uint64_t v27 = *((void *)v82 + 7);
    v73[6] = *((void *)v82 + 6);
    v73[7] = v27;
    uint64_t v80 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v28 = v80[8];
    uint64_t v77 = (char *)v73 + v28;
    uint64_t v75 = &v82[v28];
    uint64_t v29 = sub_1000E3EE0();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v77, v75, v29);
    uint64_t v32 = sub_1000082B4(&qword_100129F28);
    uint64_t v78 = v31;
    v31(&v77[*(int *)(v32 + 36)], &v75[*(int *)(v32 + 36)], v29);
    uint64_t v33 = v80[9];
    uint64_t v34 = (char *)v73 + v33;
    long long v35 = &v82[v33];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&v82[v33], 1, v29))
    {
      uint64_t v36 = sub_1000082B4(&qword_100129F30);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v78(v34, v35, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v29);
    }
    uint64_t v23 = a3;
    *((unsigned char *)v73 + v80[10]) = v82[v80[10]];
    *((unsigned char *)v73 + v80[11]) = v82[v80[11]];
    uint64_t v50 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v73 + *(int *)(v50 + 20)) = *(void *)&v82[*(int *)(v50 + 20)];
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = *((void *)v82 + 1);
    *uint64_t v73 = *(void *)v82;
    v73[1] = v20;
    uint64_t v21 = *((void *)v82 + 3);
    v73[2] = *((void *)v82 + 2);
    v73[3] = v21;
    uint64_t v22 = *((void *)v82 + 5);
    v73[4] = *((void *)v82 + 4);
    v73[5] = v22;
    *((unsigned char *)v73 + 48) = v82[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = a3;
  }
  else
  {
    uint64_t v37 = *((void *)v82 + 1);
    *uint64_t v73 = *(void *)v82;
    v73[1] = v37;
    uint64_t v38 = *((void *)v82 + 3);
    v73[2] = *((void *)v82 + 2);
    v73[3] = v38;
    uint64_t v39 = *((void *)v82 + 5);
    v73[4] = *((void *)v82 + 4);
    v73[5] = v39;
    uint64_t v40 = *((void *)v82 + 7);
    v73[6] = *((void *)v82 + 6);
    v73[7] = v40;
    uint64_t v41 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v42 = *(int *)(v41 + 32);
    uint64_t v74 = &v82[v42];
    uint64_t v76 = (char *)v73 + v42;
    uint64_t v43 = sub_1000E3EE0();
    uint64_t v71 = *(void *)(v43 - 8);
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44(v76, v74, v43);
    uint64_t v45 = sub_1000082B4(&qword_100129F28);
    uint64_t v79 = v44;
    v44(&v76[*(int *)(v45 + 36)], &v74[*(int *)(v45 + 36)], v43);
    uint64_t v81 = v41;
    uint64_t v46 = *(int *)(v41 + 36);
    uint64_t v47 = (char *)v73 + v46;
    uint64_t v48 = &v82[v46];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(&v82[v46], 1, v43))
    {
      uint64_t v49 = sub_1000082B4(&qword_100129F30);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      v79(v47, v48, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v47, 0, 1, v43);
    }
    uint64_t v23 = a3;
    *((unsigned char *)v73 + *(int *)(v81 + 40)) = v82[*(int *)(v81 + 40)];
    *((unsigned char *)v73 + *(int *)(v81 + 44)) = v82[*(int *)(v81 + 44)];
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = v23[7];
  uint64_t v52 = v23[8];
  uint64_t v53 = (void *)(a1 + v51);
  uint64_t v54 = (void *)(a2 + v51);
  uint64_t v55 = v54[1];
  void *v53 = *v54;
  v53[1] = v55;
  uint64_t v56 = v54[3];
  v53[2] = v54[2];
  v53[3] = v56;
  uint64_t v57 = a1 + v52;
  uint64_t v58 = a2 + v52;
  uint64_t v59 = *(void *)(v58 + 8);
  *(void *)uint64_t v57 = *(void *)v58;
  *(void *)(v57 + 8) = v59;
  *(unsigned char *)(v57 + 16) = *(unsigned char *)(v58 + 16);
  *(void *)(v57 + 24) = *(void *)(v58 + 24);
  *(unsigned char *)(v57 + 32) = *(unsigned char *)(v58 + 32);
  *(void *)(v57 + 40) = *(void *)(v58 + 40);
  *(unsigned char *)(v57 + 48) = *(unsigned char *)(v58 + 48);
  uint64_t v60 = v23[10];
  *(unsigned char *)(a1 + v23[9]) = *(unsigned char *)(a2 + v23[9]);
  *(unsigned char *)(a1 + v60) = *(unsigned char *)(a2 + v60);
  uint64_t v61 = v23[12];
  *(unsigned char *)(a1 + v23[11]) = *(unsigned char *)(a2 + v23[11]);
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  uint64_t v64 = v63[1];
  void *v62 = *v63;
  v62[1] = v64;
  uint64_t v65 = v23[14];
  *(unsigned char *)(a1 + v23[13]) = *(unsigned char *)(a2 + v23[13]);
  *(unsigned char *)(a1 + v65) = *(unsigned char *)(a2 + v65);
  uint64_t v66 = v23[15];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (void *)(a2 + v66);
  uint64_t v69 = v68[1];
  *uint64_t v67 = *v68;
  v67[1] = v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10002A3A0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_10002090C(a1 + v6);
    type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      void *v7 = *(void *)v8;
      v7[1] = *((void *)v8 + 1);
      void v7[2] = *((void *)v8 + 2);
      v7[3] = *((void *)v8 + 3);
      v7[4] = *((void *)v8 + 4);
      v7[5] = *((void *)v8 + 5);
      v7[6] = *((void *)v8 + 6);
      v7[7] = *((void *)v8 + 7);
      uint64_t v48 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v10 = v48[8];
      uint64_t v11 = (char *)v7 + v10;
      uint64_t v42 = &v8[v10];
      uint64_t v12 = sub_1000E3EE0();
      uint64_t v46 = *(void *)(v12 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v11, v42, v12);
      uint64_t v14 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      uint64_t v44 = v13;
      v13(&v11[v14], &v42[v14], v12);
      uint64_t v15 = v48[9];
      uint64_t v16 = (char *)v7 + v15;
      uint64_t v17 = &v8[v15];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(&v8[v15], 1, v12))
      {
        uint64_t v18 = sub_1000082B4(&qword_100129F30);
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        v44(v16, v17, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v16, 0, 1, v12);
      }
      *((unsigned char *)v7 + v48[10]) = v8[v48[10]];
      *((unsigned char *)v7 + v48[11]) = v8[v48[11]];
      uint64_t v28 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v7 + *(int *)(v28 + 20)) = *(void *)&v8[*(int *)(v28 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      void *v7 = *(void *)v8;
      v7[1] = *((void *)v8 + 1);
      void v7[2] = *((void *)v8 + 2);
      v7[3] = *((void *)v8 + 3);
      v7[4] = *((void *)v8 + 4);
      v7[5] = *((void *)v8 + 5);
      *((unsigned char *)v7 + 48) = v8[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      void *v7 = *(void *)v8;
      v7[1] = *((void *)v8 + 1);
      void v7[2] = *((void *)v8 + 2);
      v7[3] = *((void *)v8 + 3);
      v7[4] = *((void *)v8 + 4);
      v7[5] = *((void *)v8 + 5);
      v7[6] = *((void *)v8 + 6);
      v7[7] = *((void *)v8 + 7);
      uint64_t v49 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v19 = v49[8];
      uint64_t v20 = (char *)v7 + v19;
      uint64_t v43 = &v8[v19];
      uint64_t v21 = sub_1000E3EE0();
      uint64_t v47 = *(void *)(v21 - 8);
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22(v20, v43, v21);
      uint64_t v23 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      uint64_t v45 = v22;
      v22(&v20[v23], &v43[v23], v21);
      uint64_t v24 = v49[9];
      uint64_t v25 = (char *)v7 + v24;
      uint64_t v26 = &v8[v24];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(&v8[v24], 1, v21))
      {
        uint64_t v27 = sub_1000082B4(&qword_100129F30);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        v45(v25, v26, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v25, 0, 1, v21);
      }
      *((unsigned char *)v7 + v49[10]) = v8[v49[10]];
      *((unsigned char *)v7 + v49[11]) = v8[v49[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v29 = a3[7];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  void *v30 = *(void *)(a2 + v29);
  v30[1] = *(void *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30[2] = *(void *)(v31 + 16);
  v30[3] = *(void *)(v31 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[8];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(void *)uint64_t v33 = *(void *)(a2 + v32);
  *(void *)(v33 + 8) = *(void *)(a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v33 + 16) = *(unsigned char *)(v34 + 16);
  *(void *)(v33 + 24) = *(void *)(v34 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(v33 + 32) = *(unsigned char *)(v34 + 32);
  *(void *)(v33 + 40) = *(void *)(v34 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(v33 + 48) = *(unsigned char *)(v34 + 48);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v38 = a3[15];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002ABB0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 120);
  long long v10 = *(_OWORD *)(a2 + 136);
  long long v11 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v11;
  *(_OWORD *)(a1 + 136) = v10;
  *(_OWORD *)(a1 + 120) = v9;
  long long v12 = *(_OWORD *)(a2 + 184);
  long long v13 = *(_OWORD *)(a2 + 200);
  long long v14 = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v14;
  *(_OWORD *)(a1 + 200) = v13;
  uint64_t v15 = a3[6];
  uint64_t v16 = (_OWORD *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  *(_OWORD *)(a1 + 184) = v12;
  uint64_t v18 = type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v32 = *((_OWORD *)v17 + 1);
    _OWORD *v16 = *(_OWORD *)v17;
    v16[1] = v32;
    long long v33 = *((_OWORD *)v17 + 3);
    v16[2] = *((_OWORD *)v17 + 2);
    v16[3] = v33;
    uint64_t v62 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v34 = v62[8];
    uint64_t v35 = (char *)v16 + v34;
    uint64_t v36 = &v17[v34];
    uint64_t v37 = sub_1000E3EE0();
    uint64_t v60 = *(void *)(v37 - 8);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
    v38(v35, v36, v37);
    uint64_t v39 = sub_1000082B4(&qword_100129F28);
    uint64_t v58 = v38;
    v38(&v35[*(int *)(v39 + 36)], &v36[*(int *)(v39 + 36)], v37);
    uint64_t v40 = v62[9];
    uint64_t v41 = (char *)v16 + v40;
    uint64_t v42 = &v17[v40];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(&v17[v40], 1, v37))
    {
      uint64_t v43 = sub_1000082B4(&qword_100129F30);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      v58(v41, v42, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v41, 0, 1, v37);
    }
    *((unsigned char *)v16 + v62[10]) = v17[v62[10]];
    *((unsigned char *)v16 + v62[11]) = v17[v62[11]];
    uint64_t v44 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v16 + *(int *)(v44 + 20)) = *(void *)&v17[*(int *)(v44 + 20)];
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    long long v20 = *((_OWORD *)v17 + 1);
    _OWORD *v16 = *(_OWORD *)v17;
    v16[1] = v20;
    long long v21 = *((_OWORD *)v17 + 3);
    v16[2] = *((_OWORD *)v17 + 2);
    v16[3] = v21;
    uint64_t v61 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v22 = v61[8];
    uint64_t v23 = (char *)v16 + v22;
    uint64_t v24 = &v17[v22];
    uint64_t v25 = sub_1000E3EE0();
    uint64_t v59 = *(void *)(v25 - 8);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    v26(v23, v24, v25);
    uint64_t v27 = sub_1000082B4(&qword_100129F28);
    uint64_t v57 = v26;
    v26(&v23[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
    uint64_t v28 = v61[9];
    uint64_t v29 = (char *)v16 + v28;
    uint64_t v30 = &v17[v28];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(&v17[v28], 1, v25))
    {
      uint64_t v31 = sub_1000082B4(&qword_100129F30);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v57(v29, v30, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v29, 0, 1, v25);
    }
    *((unsigned char *)v16 + v61[10]) = v17[v61[10]];
    *((unsigned char *)v16 + v61[11]) = v17[v61[11]];
LABEL_12:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_13:
  uint64_t v45 = a3[7];
  uint64_t v46 = a3[8];
  uint64_t v47 = (_OWORD *)(a1 + v45);
  uint64_t v48 = (_OWORD *)(a2 + v45);
  long long v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = a1 + v46;
  uint64_t v51 = a2 + v46;
  long long v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(_OWORD *)(v50 + 32) = *(_OWORD *)(v51 + 32);
  *(unsigned char *)(v50 + 48) = *(unsigned char *)(v51 + 48);
  uint64_t v53 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v53) = *(unsigned char *)(a2 + v53);
  uint64_t v54 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v54) = *(_OWORD *)(a2 + v54);
  uint64_t v55 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_10002B044(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_release();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  if (a1 != a2)
  {
    uint64_t v18 = a3[6];
    uint64_t v19 = (_OWORD *)(a1 + v18);
    long long v20 = (char *)(a2 + v18);
    sub_10002090C(a1 + v18);
    uint64_t v21 = type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v35 = *((_OWORD *)v20 + 1);
      _OWORD *v19 = *(_OWORD *)v20;
      v19[1] = v35;
      long long v36 = *((_OWORD *)v20 + 3);
      v19[2] = *((_OWORD *)v20 + 2);
      v19[3] = v36;
      uint64_t v75 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v37 = v75[8];
      uint64_t v38 = (char *)v19 + v37;
      uint64_t v39 = &v20[v37];
      uint64_t v40 = sub_1000E3EE0();
      uint64_t v73 = *(void *)(v40 - 8);
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
      v41(v38, v39, v40);
      uint64_t v42 = sub_1000082B4(&qword_100129F28);
      uint64_t v71 = v41;
      v41(&v38[*(int *)(v42 + 36)], &v39[*(int *)(v42 + 36)], v40);
      uint64_t v43 = v75[9];
      uint64_t v44 = (char *)v19 + v43;
      uint64_t v45 = &v20[v43];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(&v20[v43], 1, v40))
      {
        uint64_t v46 = sub_1000082B4(&qword_100129F30);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        v71(v44, v45, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v44, 0, 1, v40);
      }
      *((unsigned char *)v19 + v75[10]) = v20[v75[10]];
      *((unsigned char *)v19 + v75[11]) = v20[v75[11]];
      uint64_t v47 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v19 + *(int *)(v47 + 20)) = *(void *)&v20[*(int *)(v47 + 20)];
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      long long v23 = *((_OWORD *)v20 + 1);
      _OWORD *v19 = *(_OWORD *)v20;
      v19[1] = v23;
      long long v24 = *((_OWORD *)v20 + 3);
      v19[2] = *((_OWORD *)v20 + 2);
      v19[3] = v24;
      uint64_t v74 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v25 = v74[8];
      uint64_t v26 = (char *)v19 + v25;
      uint64_t v27 = &v20[v25];
      uint64_t v28 = sub_1000E3EE0();
      uint64_t v72 = *(void *)(v28 - 8);
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
      v29(v26, v27, v28);
      uint64_t v30 = sub_1000082B4(&qword_100129F28);
      uint64_t v70 = v29;
      v29(&v26[*(int *)(v30 + 36)], &v27[*(int *)(v30 + 36)], v28);
      uint64_t v31 = v74[9];
      long long v32 = (char *)v19 + v31;
      long long v33 = &v20[v31];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(&v20[v31], 1, v28))
      {
        uint64_t v34 = sub_1000082B4(&qword_100129F30);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        v70(v32, v33, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v32, 0, 1, v28);
      }
      *((unsigned char *)v19 + v74[10]) = v20[v74[10]];
      *((unsigned char *)v19 + v74[11]) = v20[v74[11]];
LABEL_13:
      swift_storeEnumTagMultiPayload();
      goto LABEL_14;
    }
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
LABEL_14:
  uint64_t v48 = a3[7];
  long long v49 = (void *)(a1 + v48);
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a2 + v48 + 8);
  *long long v49 = *(void *)(a2 + v48);
  v49[1] = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v50 + 24);
  v49[2] = *(void *)(v50 + 16);
  v49[3] = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[8];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = *(void *)(a2 + v53 + 8);
  *(void *)uint64_t v54 = *(void *)(a2 + v53);
  *(void *)(v54 + 8) = v56;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v54 + 16) = *(unsigned char *)(v55 + 16);
  *(void *)(v54 + 24) = *(void *)(v55 + 24);
  swift_release();
  *(unsigned char *)(v54 + 32) = *(unsigned char *)(v55 + 32);
  *(void *)(v54 + 40) = *(void *)(v55 + 40);
  swift_release();
  *(unsigned char *)(v54 + 48) = *(unsigned char *)(v55 + 48);
  uint64_t v57 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v57) = *(unsigned char *)(a2 + v57);
  uint64_t v58 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v59 = (void *)(a1 + v58);
  uint64_t v60 = (uint64_t *)(a2 + v58);
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  *uint64_t v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v63) = *(unsigned char *)(a2 + v63);
  uint64_t v64 = a3[15];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (uint64_t *)(a2 + v64);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  *uint64_t v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002B5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002B600);
}

uint64_t sub_10002B604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SportsWidgetClock(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10002B6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002B6C8);
}

uint64_t sub_10002B6CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SportsWidgetClock(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsWatchWidgetViewModel(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012AE78);
}

uint64_t sub_10002B794(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002B7CC()
{
  uint64_t result = type metadata accessor for SportsWidgetClock(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for SportsWidgetMinimalViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsWidgetMinimalViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  uint64_t v12 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v12;
  uint64_t v13 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v13;
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  long long v15 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v15;
  uint64_t v16 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetMinimalViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for SportsWidgetMinimalViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for SportsWidgetMinimalViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_release();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  long long v16 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v16;
  uint64_t v17 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetMinimalViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetMinimalViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetMinimalViewModel()
{
  return &type metadata for SportsWidgetMinimalViewModel;
}

NSString *sub_10002BF1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000E41D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for DynamicTypeSize.xSmall(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryExtraSmall;
  }
  else if (v6 == enum case for DynamicTypeSize.small(_:))
  {
    uint64_t v7 = &UIContentSizeCategorySmall;
  }
  else if (v6 == enum case for DynamicTypeSize.medium(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryMedium;
  }
  else if (v6 == enum case for DynamicTypeSize.large(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryLarge;
  }
  else if (v6 == enum case for DynamicTypeSize.xLarge(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryExtraLarge;
  }
  else if (v6 == enum case for DynamicTypeSize.xxLarge(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryExtraExtraLarge;
  }
  else if (v6 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryExtraExtraExtraLarge;
  }
  else if (v6 == enum case for DynamicTypeSize.accessibility1(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryAccessibilityMedium;
  }
  else if (v6 == enum case for DynamicTypeSize.accessibility2(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryAccessibilityLarge;
  }
  else if (v6 == enum case for DynamicTypeSize.accessibility3(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryAccessibilityExtraLarge;
  }
  else if (v6 == enum case for DynamicTypeSize.accessibility4(_:))
  {
    uint64_t v7 = &UIContentSizeCategoryAccessibilityExtraExtraLarge;
  }
  else
  {
    if (v6 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v11 = UIContentSizeCategoryLarge;
      v10(v5, v2);
      return v11;
    }
    uint64_t v7 = &UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  }
  UIContentSizeCategory v8 = *v7;

  return v8;
}

uint64_t Color.init(hex:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E4BF0();
  v19[0] = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E3CF0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  sub_1000E3CE0();
  sub_100014158();
  uint64_t v11 = sub_1000E5C60();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_bridgeObjectRelease();
  uint64_t v20 = v11;
  uint64_t v21 = v13;
  v19[3] = 35;
  v19[4] = 0xE100000000000000;
  v19[1] = 0;
  v19[2] = 0xE000000000000000;
  sub_1000E5C70();
  swift_bridgeObjectRelease();
  uint64_t v20 = 0;
  uint64_t v14 = sub_1000E5A60();
  id v15 = objc_allocWithZone((Class)NSScanner);
  NSString v16 = sub_1000E5A00();
  swift_bridgeObjectRelease();
  id v17 = [v15 initWithString:v16];

  LODWORD(v16) = [v17 scanHexLongLong:&v20];
  uint64_t result = 0;
  if (v16)
  {
    if (v14 == 8 || v14 == 6)
    {
      (*(void (**)(char *, void, uint64_t))(v19[0] + 104))(v6, enum case for Color.RGBColorSpace.sRGB(_:), v4);
      return sub_1000E4C80();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetDiamondShape()
{
  return &type metadata for SportsWidgetDiamondShape;
}

unint64_t sub_10002C560()
{
  unint64_t result = qword_10012AED8;
  if (!qword_10012AED8)
  {
    sub_100008354(&qword_10012AEE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AED8);
  }
  return result;
}

double sub_10002C5BC@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_1000E4910();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMidX(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMidY(v15);
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMaxX(v16);
  sub_1000E48F0();
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMaxY(v17);
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetMinX(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetMinY(v19);
  sub_1000E4900();
  sub_1000E4900();
  sub_1000E4900();
  sub_1000E4900();
  double result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

uint64_t sub_10002C714()
{
  return Shape.sizeThatFits(_:)();
}

void (*sub_10002C72C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000E3F90();
  return sub_10002C79C;
}

void sub_10002C79C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_10002C7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10002CA04();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10002C84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10002CA04();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10002C8B0(uint64_t a1)
{
  unint64_t v2 = sub_10002CA04();

  return Shape.body.getter(a1, v2);
}

unint64_t sub_10002C900()
{
  unint64_t result = qword_10012AEE8;
  if (!qword_10012AEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AEE8);
  }
  return result;
}

unint64_t sub_10002C958()
{
  unint64_t result = qword_10012AEF0;
  if (!qword_10012AEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AEF0);
  }
  return result;
}

unint64_t sub_10002C9B0()
{
  unint64_t result = qword_10012AEF8;
  if (!qword_10012AEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AEF8);
  }
  return result;
}

unint64_t sub_10002CA04()
{
  unint64_t result = qword_10012AF00;
  if (!qword_10012AF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF00);
  }
  return result;
}

uint64_t sub_10002CA58(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v48 = sub_1000E5690();
  uint64_t v45 = *(void *)(v48 - 8);
  uint64_t v3 = __chkstk_darwin(v48);
  uint64_t v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v37 - v6;
  __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v37 - v8;
  uint64_t v9 = sub_1000E5640();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v46 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  CGRect v14 = (char *)&v37 - v13;
  uint64_t v15 = sub_1000E4880();
  uint64_t v44 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  v44(v14, enum case for WidgetFamily.systemLarge(_:), v9);
  sub_10002CEFC();
  uint64_t v41 = a1;
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v16 = v49;
  uint64_t v17 = v50;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v10 + 8);
  v43(v14, v9);
  if (v17 == v16)
  {
    uint64_t v18 = sub_1000E47D0();
    swift_release();
    return v18;
  }
  uint64_t v38 = v7;
  uint64_t v39 = v15;
  v44(v14, enum case for WidgetFamily.systemExtraLarge(_:), v9);
  uint64_t v19 = v41;
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v21 = v49;
  uint64_t v20 = v50;
  uint64_t v22 = v43;
  v43(v14, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v46, v19, v9);
  long long v23 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  v23(v47, v42, v48);
  if (v20 == v21)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v48);
    v22(v46, v9);
LABEL_7:
    uint64_t v33 = sub_1000E47C0();
    swift_release();
    return v33;
  }
  v44(v14, enum case for WidgetFamily.systemSmall(_:), v9);
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v25 = v49;
  uint64_t v24 = v50;
  v22(v14, v9);
  uint64_t v26 = v38;
  v23(v38, (uint64_t)v47, v48);
  if (v24 != v25)
  {
    uint64_t v34 = *(void (**)(char *, uint64_t))(v45 + 8);
    uint64_t v35 = v48;
    v34(v26, v48);
    v34(v47, v35);
    v22(v46, v9);
    return v39;
  }
  uint64_t v27 = v22;
  uint64_t v28 = v40;
  sub_1000E5660();
  char v29 = sub_1000E5670();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v31 = v28;
  uint64_t v32 = v48;
  v30(v31, v48);
  v30(v26, v32);
  v30(v47, v32);
  v27(v46, v9);
  uint64_t v18 = v39;
  if (v29) {
    goto LABEL_7;
  }
  return v18;
}

unint64_t sub_10002CEFC()
{
  unint64_t result = qword_10012AF08;
  if (!qword_10012AF08)
  {
    sub_1000E5640();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF08);
  }
  return result;
}

uint64_t destroy for TVWidgetNoContentTextViewLayout()
{
  return swift_release();
}

uint64_t _s17TVWidgetExtension31TVWidgetNoContentTextViewLayoutVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TVWidgetNoContentTextViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for TVWidgetNoContentTextViewLayout(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TVWidgetNoContentTextViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVWidgetNoContentTextViewLayout(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVWidgetNoContentTextViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetNoContentTextViewLayout()
{
  return &type metadata for TVWidgetNoContentTextViewLayout;
}

void *initializeBufferWithCopyOfBuffer for SportsWidgetLogoViewLayout(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for SportsWidgetLogoViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for SportsWidgetLogoViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SportsWidgetLogoViewLayout()
{
  return &type metadata for SportsWidgetLogoViewLayout;
}

uint64_t destroy for TVWidgetContentViewLayout()
{
  return swift_release();
}

uint64_t initializeWithCopy for TVWidgetContentViewLayout(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TVWidgetContentViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t assignWithTake for TVWidgetContentViewLayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVWidgetContentViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVWidgetContentViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetContentViewLayout()
{
  return &type metadata for TVWidgetContentViewLayout;
}

double sub_10002D420()
{
  uint64_t v0 = sub_1000E5640();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = *(void (**)(char *, void, uint64_t))(v1 + 104);
  v4(v3, enum case for WidgetFamily.systemSmall(_:), v0);
  sub_10002CEFC();
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v6 = v11;
  uint64_t v5 = v12;
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  double result = 20.0;
  if (v5 != v6)
  {
    ((void (*)(char *, void, uint64_t, double))v4)(v3, enum case for WidgetFamily.systemMedium(_:), v0, 20.0);
    sub_1000E5AA0();
    sub_1000E5AA0();
    uint64_t v10 = v11;
    uint64_t v9 = v12;
    v7(v3, v0);
    double result = 0.0;
    if (v9 == v10) {
      return 16.0;
    }
  }
  return result;
}

double sub_10002D5D0(uint64_t a1)
{
  uint64_t v18 = a1;
  uint64_t v1 = sub_1000E5640();
  uint64_t v2 = *(void **)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v17 = (void (*)(char *, void, uint64_t))v2[13];
  v17((char *)&v16 - v6, enum case for WidgetFamily.systemLarge(_:), v1);
  sub_10002CEFC();
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v9 = v20;
  uint64_t v8 = v21;
  uint64_t v10 = (void (*)(char *, uint64_t))v2[1];
  v10(v7, v1);
  uint64_t v11 = (void (*)(char *, uint64_t, uint64_t))v2[2];
  uint64_t v19 = v5;
  v11(v5, v18, v1);
  if (v8 == v9)
  {
    v10(v19, v1);
  }
  else
  {
    v17(v7, enum case for WidgetFamily.systemExtraLarge(_:), v1);
    uint64_t v12 = v19;
    sub_1000E5AA0();
    sub_1000E5AA0();
    uint64_t v14 = v20;
    uint64_t v13 = v21;
    v10(v7, v1);
    v10(v12, v1);
    double result = 0.0;
    if (v13 != v14) {
      return result;
    }
  }
  return 18.0;
}

double sub_10002D7F8()
{
  uint64_t v0 = sub_1000E5640();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void (**)(char *, void, uint64_t))(v1 + 104);
  v4(v3, enum case for WidgetFamily.systemSmall(_:), v0);
  sub_10002CEFC();
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v6 = v11;
  uint64_t v5 = v12;
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  if (v5 == v6) {
    return 40.0;
  }
  v4(v3, enum case for WidgetFamily.systemMedium(_:), v0);
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v10 = v11;
  uint64_t v9 = v12;
  v7(v3, v0);
  double result = 1.79769313e308;
  if (v9 == v10) {
    return 30.0;
  }
  return result;
}

double sub_10002D9B4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000E4BF0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 7];
  uint64_t v6 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v7 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 104);
  v7(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  sub_1000E4C80();
  uint64_t v8 = sub_1000E4C50();
  swift_release();
  v7(v5, v6, v2);
  sub_1000E4C80();
  uint64_t v9 = sub_1000E4C50();
  swift_release();
  id v10 = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.31372549 blue:0.4 alpha:1.0];
  *(void *)a1 = 0x3FFC71C71C71C71CLL;
  *(void *)(a1 + 8) = v8;
  *(_OWORD *)(a1 + 16) = xmmword_1000F0050;
  *(void *)(a1 + 32) = v9;
  *(_OWORD *)(a1 + 40) = xmmword_1000F0060;
  *(unsigned char *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 57) = *(_DWORD *)v13;
  *(_DWORD *)(a1 + 60) = *(_DWORD *)&v13[3];
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 120) = xmmword_1000F0070;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 136) = 0x4018000000000000;
  double result = 11.0;
  *(_OWORD *)(a1 + 160) = xmmword_1000F0080;
  return result;
}

void destroy for TVWidgetImageViewLayout(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 112);
}

uint64_t initializeWithCopy for TVWidgetImageViewLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  uint64_t v6 = *(void **)(a2 + 112);
  uint64_t v5 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = v6;
  *(void *)(a1 + 120) = v5;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_retain();
  swift_retain();
  swift_retain();
  id v8 = v6;
  return a1;
}

uint64_t assignWithCopy for TVWidgetImageViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  long long v4 = *(void **)(a2 + 112);
  uint64_t v5 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v4;
  id v6 = v4;

  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  return a1;
}

__n128 initializeWithTake for TVWidgetImageViewLayout(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for TVWidgetImageViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  long long v5 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVWidgetImageViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVWidgetImageViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetImageViewLayout()
{
  return &type metadata for TVWidgetImageViewLayout;
}

unint64_t sub_10002DF78()
{
  unint64_t result = qword_10012AF10;
  if (!qword_10012AF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF10);
  }
  return result;
}

uint64_t sub_10002DFCC()
{
  return sub_100014AC4(&qword_10012AF18, &qword_10012AF20);
}

void sub_10002E008()
{
  qword_100141DD0 = (uint64_t)&off_10011FEA0;
}

uint64_t sub_10002E01C()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  long long v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100141DD8);
  sub_100008498(v10, (uint64_t)qword_100141DD8);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_10002E300()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_100141DF0);
  sub_100008498(v0, (uint64_t)qword_100141DF0);
  return sub_1000E3D80();
}

uint64_t sub_10002E364()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_100141E08);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100141E08);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10002E41C()
{
  uint64_t result = swift_getKeyPath();
  qword_100141E20 = result;
  return result;
}

uint64_t sub_10002E444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return _swift_task_switch(sub_10002E468, 0, 0);
}

uint64_t sub_10002E468()
{
  sub_1000E3A40();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  sub_1000E3A40();
  *(unsigned char *)(v0 + 225) = *(unsigned char *)(v0 + 226);
  if (qword_100129C40 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100141E20;
  *(void *)(v0 + 152) = qword_100141E20;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = sub_100014AC4(&qword_10012B0D8, &qword_10012B0E0);
  *(void *)(v0 + 168) = v5;
  void *v4 = v0;
  v4[1] = sub_10002E5CC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 225, v3, &type metadata for Bool, v5);
}

uint64_t sub_10002E5CC()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FEC;
  }
  else {
    uint64_t v2 = sub_10002E73C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002E73C()
{
  sub_1000E3A40();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  v0[23] = v2;
  v0[24] = v3;
  v0[8] = v1;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v4 = qword_100141E20;
  v0[25] = qword_100141E20;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  void *v5 = v0;
  v5[1] = sub_100019DF4;
  uint64_t v6 = v0[21];
  return AppEntity._value<A, B>(for:)(v0 + 28, v4, v6);
}

uint64_t sub_10002E824()
{
  if (qword_100129C40 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10002E884()
{
  unint64_t result = qword_10012AF28;
  if (!qword_10012AF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF28);
  }
  return result;
}

unint64_t sub_10002E8DC()
{
  unint64_t result = qword_10012AF30;
  if (!qword_10012AF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF30);
  }
  return result;
}

uint64_t sub_10002E930()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10002E964()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002E9B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129C30, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100141DF0, a1);
}

uint64_t sub_10002E9EC@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129C38 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100141E08);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_10002EA68(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100015DF8;
  *(_OWORD *)(v4 + 120) = *v1;
  *(void *)(v4 + 112) = a1;
  return _swift_task_switch(sub_10002E468, 0, 0);
}

uint64_t sub_10002EB1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000300B8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10002EB44()
{
  return 0xD000000000000031;
}

unint64_t sub_10002EB64()
{
  unint64_t result = qword_10012AF40;
  if (!qword_10012AF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF40);
  }
  return result;
}

unint64_t sub_10002EBBC()
{
  unint64_t result = qword_10012AF48;
  if (!qword_10012AF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF48);
  }
  return result;
}

uint64_t sub_10002EC10(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10002EC30, 0, 0);
}

uint64_t sub_10002EC30()
{
  **(unsigned char **)(v0 + 16) = sub_10007AF14() & 1;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002ECBC(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10002ECE0, 0, 0);
}

uint64_t sub_10002ECE0()
{
  sub_10007BEF8(*(unsigned __int8 *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002ED5C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10002ED7C, 0, 0);
}

uint64_t sub_10002ED7C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t *v1 = sub_1000304FC();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10002EDEC()
{
  unint64_t result = qword_10012AF58;
  if (!qword_10012AF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF58);
  }
  return result;
}

uint64_t sub_10002EE40(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10002F9B4();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10002EEF4()
{
  unint64_t result = qword_10012AF68;
  if (!qword_10012AF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF68);
  }
  return result;
}

unint64_t sub_10002EF4C()
{
  unint64_t result = qword_10012AF70;
  if (!qword_10012AF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF70);
  }
  return result;
}

unint64_t sub_10002EFA4()
{
  unint64_t result = qword_10012AF78[0];
  if (!qword_10012AF78[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012AF78);
  }
  return result;
}

uint64_t sub_10002EFF8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002F9B4();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10002F0AC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10002F9B4();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10002F160()
{
  unint64_t result = qword_10012AF90;
  if (!qword_10012AF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF90);
  }
  return result;
}

unint64_t sub_10002F1B8()
{
  unint64_t result = qword_10012AF98;
  if (!qword_10012AF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AF98);
  }
  return result;
}

unint64_t sub_10002F210()
{
  unint64_t result = qword_10012AFA0;
  if (!qword_10012AFA0)
  {
    sub_100008354(qword_10012AFA8);
    sub_10002F1B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AFA0);
  }
  return result;
}

uint64_t sub_10002F284(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002EDEC();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsShowSportsScoresEntity.Query()
{
  return &type metadata for TVSettingsShowSportsScoresEntity.Query;
}

ValueMetadata *type metadata accessor for TVSettingsShowSportsScoresEntity()
{
  return &type metadata for TVSettingsShowSportsScoresEntity;
}

ValueMetadata *type metadata accessor for TVSettingsShowSportsScoresEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsShowSportsScoresEntity.UpdateIntent_value;
}

uint64_t sub_10002F368()
{
  return sub_100014AC4(&qword_10012A6B8, &qword_10012A6C0);
}

uint64_t sub_10002F3A8()
{
  sub_10002F79C();
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_10002F43C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129C28, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100141DD8, a1);
}

uint64_t sub_10002F474(uint64_t a1)
{
  unint64_t v2 = sub_10002EFA4();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10002F4C0(uint64_t a1)
{
  unint64_t v2 = sub_10002EBBC();

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10002F50C(uint64_t a1)
{
  unint64_t v2 = sub_10002F5B4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10002F55C()
{
  unint64_t result = qword_10012AFC0;
  if (!qword_10012AFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AFC0);
  }
  return result;
}

unint64_t sub_10002F5B4()
{
  unint64_t result = qword_10012AFD0;
  if (!qword_10012AFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AFD0);
  }
  return result;
}

unint64_t sub_10002F60C()
{
  unint64_t result = qword_10012AFD8;
  if (!qword_10012AFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AFD8);
  }
  return result;
}

unint64_t sub_10002F664()
{
  unint64_t result = qword_10012AFE0;
  if (!qword_10012AFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AFE0);
  }
  return result;
}

unint64_t sub_10002F6BC()
{
  unint64_t result = qword_10012AFE8;
  if (!qword_10012AFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012AFE8);
  }
  return result;
}

unint64_t sub_10002F710(void *a1)
{
  a1[1] = sub_10002F748();
  a1[2] = sub_10002F79C();
  unint64_t result = sub_10002EBBC();
  a1[3] = result;
  return result;
}

unint64_t sub_10002F748()
{
  unint64_t result = qword_10012B038;
  if (!qword_10012B038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B038);
  }
  return result;
}

unint64_t sub_10002F79C()
{
  unint64_t result = qword_10012B040;
  if (!qword_10012B040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B040);
  }
  return result;
}

unint64_t sub_10002F7F0(uint64_t a1)
{
  unint64_t result = sub_10002F818();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10002F818()
{
  unint64_t result = qword_10012B088;
  if (!qword_10012B088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B088);
  }
  return result;
}

uint64_t sub_10002F86C()
{
  return sub_100014AC4(&qword_10012B090, &qword_10012B098);
}

unint64_t sub_10002F8AC()
{
  unint64_t result = qword_10012B0A0;
  if (!qword_10012B0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B0A0);
  }
  return result;
}

unint64_t sub_10002F904()
{
  unint64_t result = qword_10012B0A8;
  if (!qword_10012B0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B0A8);
  }
  return result;
}

unint64_t sub_10002F95C()
{
  unint64_t result = qword_10012B0B0;
  if (!qword_10012B0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B0B0);
  }
  return result;
}

unint64_t sub_10002F9B4()
{
  unint64_t result = qword_10012B0B8;
  if (!qword_10012B0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B0B8);
  }
  return result;
}

uint64_t sub_10002FA08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_1000082B4(&qword_10012A870);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A878);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012A880);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000082B4(&qword_10012A888);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  uint64_t v38 = v14;
  __chkstk_darwin(v13);
  uint64_t v30 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v40, "com.apple.tv.");
  HIWORD(v40[1]) = -4864;
  unint64_t v45 = (unint64_t)&type metadata for TVSettingsShowSportsScoresWidget;
  sub_1000082B4(&qword_10012B150);
  v47._countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v47);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1000082B4(&qword_10012A898);
  sub_10002EBBC();
  sub_100014AC4(&qword_10012A8A0, &qword_10012A898);
  sub_1000E56D0();
  v40[0] = &type metadata for TVSettingsShowSportsScoresWidget;
  v40[0] = sub_1000E5A20();
  v40[1] = v16;
  unint64_t v45 = 0x746567646957;
  unint64_t v46 = 0xE600000000000000;
  uint64_t v43 = 0x656C67676F54;
  unint64_t v44 = 0xE600000000000000;
  unint64_t v29 = sub_100014158();
  uint64_t v17 = sub_1000E5C70();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  v40[0] = v17;
  v40[1] = v19;
  uint64_t v20 = sub_100014AC4(&qword_10012A8A8, &qword_10012A870);
  uint64_t v21 = v31;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v21);
  unint64_t v45 = 0xD00000000000002DLL;
  unint64_t v46 = 0x80000001000E8D20;
  v40[0] = v21;
  v40[1] = &type metadata for String;
  uint64_t v41 = v20;
  unint64_t v42 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v33;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v23);
  v40[0] = v23;
  v40[1] = &type metadata for String;
  uint64_t v41 = OpaqueTypeConformance2;
  unint64_t v42 = v29;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = v30;
  uint64_t v26 = v35;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v26);
  v40[0] = v26;
  v40[1] = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v37;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v25, v27);
}

uint64_t sub_10002FFA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000082B4(&qword_10012A898);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0xD000000000000012;
  v7[1] = 0x80000001000E8C00;
  sub_100014158();
  sub_1000E4D30();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_1000300B8()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A7F0);
  __chkstk_darwin(v0 - 8);
  unint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000E3B90();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1000E3DA0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_1000082B4(&qword_10012B0E8);
  sub_1000E3D80();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_1000E3A00();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10002EFA4();
  uint64_t v19 = v22;
  uint64_t v23 = sub_1000E3A70();
  sub_1000082B4(&qword_10012A800);
  sub_1000E3D80();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_1000E5B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_1000E3A90();
  return v23;
}

uint64_t sub_1000304FC()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  __chkstk_darwin(v6 - 8);
  v9[1] = &type metadata for TVSettingsShowSportsScoresEntity;
  sub_1000082B4(&qword_10012B0C0);
  uint64_t v7 = sub_1000E5A20();
  sub_1000082B4(&qword_10012AF20);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012B0D8, &qword_10012B0E0);
  sub_1000E3CA0();
  return v7;
}

uint64_t sub_1000307C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

ValueMetadata *type metadata accessor for TVSettingsShowSportsScoresWidget()
{
  return &type metadata for TVSettingsShowSportsScoresWidget;
}

uint64_t sub_1000307DC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000307F8(uint64_t a1)
{
  unint64_t result = sub_100030820();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100030820()
{
  unint64_t result = qword_10012B140;
  if (!qword_10012B140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B140);
  }
  return result;
}

unint64_t sub_100030874(uint64_t a1)
{
  unint64_t result = sub_10003089C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10003089C()
{
  unint64_t result = qword_10012B148;
  if (!qword_10012B148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B148);
  }
  return result;
}

uint64_t sub_1000308F0()
{
  return swift_getOpaqueTypeConformance2();
}

void **sub_100030A40@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a4;
  uint64_t v40 = a2;
  uint64_t v6 = sub_1000082B4(&qword_10012B158);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012B160);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000082B4(&qword_10012B168);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000082B4(&qword_10012B170);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_100014754(v40, (uint64_t)v8, &qword_10012B158);
    sub_100014754((uint64_t)v8, (uint64_t)v11, &qword_10012B158);
    swift_storeEnumTagMultiPayload();
    sub_100030D88();
    sub_100030E28();
    sub_1000E4690();
    uint64_t v33 = (uint64_t)v8;
    uint64_t v34 = &qword_10012B158;
    goto LABEL_5;
  }
  uint64_t v37 = v9;
  uint64_t v38 = v6;
  uint64_t v18 = v40;
  uint64_t v19 = sub_1000E4F50();
  uint64_t v36 = v20;
  long long v21 = *(_OWORD *)(a3 + 160);
  v45[4] = *(_OWORD *)(a3 + 144);
  v45[5] = v21;
  v45[6] = *(_OWORD *)(a3 + 176);
  long long v22 = *(_OWORD *)(a3 + 96);
  v45[0] = *(_OWORD *)(a3 + 80);
  v45[1] = v22;
  long long v23 = *(_OWORD *)(a3 + 128);
  v45[2] = *(_OWORD *)(a3 + 112);
  v45[3] = v23;
  long long v24 = *(_OWORD *)(a3 + 32);
  long long v41 = *(_OWORD *)(a3 + 16);
  long long v42 = v24;
  long long v25 = *(_OWORD *)(a3 + 64);
  long long v43 = *(_OWORD *)(a3 + 48);
  long long v44 = v25;
  sub_100014B08((uint64_t)v45, (uint64_t)v46, &qword_10012B218);
  unint64_t result = (void **)sub_100014B08((uint64_t)v46, (uint64_t)&v47, &qword_10012B218);
  uint64_t v27 = v47;
  if (v47)
  {
    char v28 = v48;
    long long v35 = v49;
    uint64_t v29 = v50;
    uint64_t v30 = v51;
    sub_100014754(v18, (uint64_t)v14, &qword_10012B158);
    uint64_t v31 = &v14[*(int *)(v12 + 36)];
    uint64_t v32 = v36;
    *(void *)uint64_t v31 = v19;
    *((void *)v31 + 1) = v32;
    *((void *)v31 + 2) = v27;
    v31[24] = v28;
    *((_OWORD *)v31 + 2) = v35;
    *((void *)v31 + 6) = v29;
    *((void *)v31 + 7) = v30;
    sub_100014754((uint64_t)v14, (uint64_t)v11, &qword_10012B168);
    swift_storeEnumTagMultiPayload();
    sub_1000311DC((uint64_t)v46);
    sub_100030D88();
    sub_100030E28();
    sub_1000E4690();
    uint64_t v33 = (uint64_t)v14;
    uint64_t v34 = &qword_10012B168;
LABEL_5:
    sub_1000147B8(v33, v34);
    sub_100014B08((uint64_t)v17, v39, &qword_10012B170);
    return sub_100031174((void **)a3);
  }
  __break(1u);
  return result;
}

unint64_t sub_100030D88()
{
  unint64_t result = qword_10012B178;
  if (!qword_10012B178)
  {
    sub_100008354(&qword_10012B168);
    sub_100030E28();
    sub_100014AC4(&qword_10012B208, &qword_10012B210);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B178);
  }
  return result;
}

unint64_t sub_100030E28()
{
  unint64_t result = qword_10012B180;
  if (!qword_10012B180)
  {
    sub_100008354(&qword_10012B158);
    sub_100014AC4(&qword_10012B188, &qword_10012B190);
    sub_100030EC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B180);
  }
  return result;
}

unint64_t sub_100030EC8()
{
  unint64_t result = qword_10012B198;
  if (!qword_10012B198)
  {
    sub_100008354(&qword_10012B1A0);
    sub_100030FC4(&qword_10012B1A8, &qword_10012B1B0, (void (*)(void))sub_100030F94);
    sub_100014AC4(&qword_10012B1F8, &qword_10012B200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B198);
  }
  return result;
}

uint64_t sub_100030F94()
{
  return sub_100030FC4(&qword_10012B1B8, &qword_10012B1C0, (void (*)(void))sub_100031040);
}

uint64_t sub_100030FC4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100031040()
{
  unint64_t result = qword_10012B1C8;
  if (!qword_10012B1C8)
  {
    sub_100008354(&qword_10012B1D0);
    sub_1000310E0();
    sub_100014AC4(&qword_10012B1E8, &qword_10012B1F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B1C8);
  }
  return result;
}

unint64_t sub_1000310E0()
{
  unint64_t result = qword_10012B1D8;
  if (!qword_10012B1D8)
  {
    sub_100008354(&qword_10012B1E0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B1D8);
  }
  return result;
}

void **sub_100031174(void **a1)
{
  uint64_t v2 = *a1;

  swift_release();
  swift_release();

  swift_release();
  return a1;
}

uint64_t sub_1000311DC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10003120C()
{
  unint64_t result = qword_10012B220;
  if (!qword_10012B220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B220);
  }
  return result;
}

uint64_t sub_100031260()
{
  return sub_100014AC4(&qword_10012B228, &qword_10012B230);
}

void sub_10003129C()
{
  qword_100141E28 = (uint64_t)&off_10011FF18;
}

uint64_t sub_1000312B0()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100141E30);
  sub_100008498(v10, (uint64_t)qword_100141E30);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_100031598()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_100141E48);
  sub_100008498(v0, (uint64_t)qword_100141E48);
  return sub_1000E3D80();
}

uint64_t sub_1000315FC()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_100141E60);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100141E60);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1000316B4()
{
  uint64_t result = swift_getKeyPath();
  qword_100141E78 = result;
  return result;
}

uint64_t sub_1000316DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return _swift_task_switch(sub_100031700, 0, 0);
}

uint64_t sub_100031700()
{
  sub_1000E3A40();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  sub_1000E3A40();
  *(unsigned char *)(v0 + 225) = *(unsigned char *)(v0 + 226);
  if (qword_100129C68 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100141E78;
  *(void *)(v0 + 152) = qword_100141E78;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = sub_100014AC4(&qword_10012B3E8, &qword_10012B3F0);
  *(void *)(v0 + 168) = v5;
  void *v4 = v0;
  v4[1] = sub_100031864;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 225, v3, &type metadata for Bool, v5);
}

uint64_t sub_100031864()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FEC;
  }
  else {
    uint64_t v2 = sub_1000319D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000319D4()
{
  sub_1000E3A40();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  v0[23] = v2;
  v0[24] = v3;
  v0[8] = v1;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v4 = qword_100141E78;
  v0[25] = qword_100141E78;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  void *v5 = v0;
  v5[1] = sub_100019DF4;
  uint64_t v6 = v0[21];
  return AppEntity._value<A, B>(for:)(v0 + 28, v4, v6);
}

uint64_t sub_100031ABC()
{
  if (qword_100129C68 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100031B1C()
{
  unint64_t result = qword_10012B238;
  if (!qword_10012B238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B238);
  }
  return result;
}

unint64_t sub_100031B74()
{
  unint64_t result = qword_10012B240;
  if (!qword_10012B240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B240);
  }
  return result;
}

uint64_t sub_100031BC8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100031BFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100031C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129C58, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100141E48, a1);
}

uint64_t sub_100031C84@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129C60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100141E60);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_100031D00(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100015DF8;
  *(_OWORD *)(v4 + 120) = *v1;
  *(void *)(v4 + 112) = a1;
  return _swift_task_switch(sub_100031700, 0, 0);
}

uint64_t sub_100031DB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100033314();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100031DDC()
{
  return 0xD000000000000035;
}

unint64_t sub_100031DFC()
{
  unint64_t result = qword_10012B250;
  if (!qword_10012B250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B250);
  }
  return result;
}

unint64_t sub_100031E54()
{
  unint64_t result = qword_10012B258;
  if (!qword_10012B258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B258);
  }
  return result;
}

uint64_t sub_100031EA8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100031EC8, 0, 0);
}

uint64_t sub_100031EC8()
{
  **(unsigned char **)(v0 + 16) = sub_10007AF40() & 1;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100031F54(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100031F78, 0, 0);
}

uint64_t sub_100031F78()
{
  sub_10007BF48(*(unsigned __int8 *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100031FF4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100032014, 0, 0);
}

uint64_t sub_100032014()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t *v1 = sub_100033758();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100032084()
{
  unint64_t result = qword_10012B268;
  if (!qword_10012B268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B268);
  }
  return result;
}

uint64_t sub_1000320D8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100032C10();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10003218C()
{
  unint64_t result = qword_10012B278;
  if (!qword_10012B278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B278);
  }
  return result;
}

unint64_t sub_1000321E4()
{
  unint64_t result = qword_10012B280;
  if (!qword_10012B280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B280);
  }
  return result;
}

unint64_t sub_10003223C()
{
  unint64_t result = qword_10012B288[0];
  if (!qword_10012B288[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012B288);
  }
  return result;
}

uint64_t sub_100032290(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100032C10();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100032344(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100032C10();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1000323F8()
{
  unint64_t result = qword_10012B2A0;
  if (!qword_10012B2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B2A0);
  }
  return result;
}

unint64_t sub_100032450()
{
  unint64_t result = qword_10012B2A8;
  if (!qword_10012B2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B2A8);
  }
  return result;
}

unint64_t sub_1000324A8()
{
  unint64_t result = qword_10012B2B0;
  if (!qword_10012B2B0)
  {
    sub_100008354(qword_10012B2B8);
    sub_100032450();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B2B0);
  }
  return result;
}

uint64_t sub_10003251C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100032084();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsUseDownloadAVAdapterEntity.Query()
{
  return &type metadata for TVSettingsUseDownloadAVAdapterEntity.Query;
}

ValueMetadata *type metadata accessor for TVSettingsUseDownloadAVAdapterEntity()
{
  return &type metadata for TVSettingsUseDownloadAVAdapterEntity;
}

ValueMetadata *type metadata accessor for TVSettingsUseDownloadAVAdapterEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsUseDownloadAVAdapterEntity.UpdateIntent_value;
}

uint64_t sub_100032604()
{
  sub_1000329F8();
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_100032698@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129C50, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100141E30, a1);
}

uint64_t sub_1000326D0(uint64_t a1)
{
  unint64_t v2 = sub_10003223C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10003271C(uint64_t a1)
{
  unint64_t v2 = sub_100031E54();

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_100032768(uint64_t a1)
{
  unint64_t v2 = sub_100032810();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1000327B8()
{
  unint64_t result = qword_10012B2D0;
  if (!qword_10012B2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B2D0);
  }
  return result;
}

unint64_t sub_100032810()
{
  unint64_t result = qword_10012B2E0;
  if (!qword_10012B2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B2E0);
  }
  return result;
}

unint64_t sub_100032868()
{
  unint64_t result = qword_10012B2E8;
  if (!qword_10012B2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B2E8);
  }
  return result;
}

unint64_t sub_1000328C0()
{
  unint64_t result = qword_10012B2F0;
  if (!qword_10012B2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B2F0);
  }
  return result;
}

unint64_t sub_100032918()
{
  unint64_t result = qword_10012B2F8;
  if (!qword_10012B2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B2F8);
  }
  return result;
}

unint64_t sub_10003296C(void *a1)
{
  a1[1] = sub_1000329A4();
  a1[2] = sub_1000329F8();
  unint64_t result = sub_100031E54();
  a1[3] = result;
  return result;
}

unint64_t sub_1000329A4()
{
  unint64_t result = qword_10012B348;
  if (!qword_10012B348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B348);
  }
  return result;
}

unint64_t sub_1000329F8()
{
  unint64_t result = qword_10012B350;
  if (!qword_10012B350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B350);
  }
  return result;
}

unint64_t sub_100032A4C(uint64_t a1)
{
  unint64_t result = sub_100032A74();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100032A74()
{
  unint64_t result = qword_10012B398;
  if (!qword_10012B398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B398);
  }
  return result;
}

uint64_t sub_100032AC8()
{
  return sub_100014AC4(&qword_10012B3A0, &qword_10012B3A8);
}

unint64_t sub_100032B08()
{
  unint64_t result = qword_10012B3B0;
  if (!qword_10012B3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B3B0);
  }
  return result;
}

unint64_t sub_100032B60()
{
  unint64_t result = qword_10012B3B8;
  if (!qword_10012B3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B3B8);
  }
  return result;
}

unint64_t sub_100032BB8()
{
  unint64_t result = qword_10012B3C0;
  if (!qword_10012B3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B3C0);
  }
  return result;
}

unint64_t sub_100032C10()
{
  unint64_t result = qword_10012B3C8;
  if (!qword_10012B3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B3C8);
  }
  return result;
}

uint64_t sub_100032C64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_1000082B4(&qword_10012A870);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A878);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012A880);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000082B4(&qword_10012A888);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  uint64_t v38 = v14;
  __chkstk_darwin(v13);
  uint64_t v30 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v40, "com.apple.tv.");
  HIWORD(v40[1]) = -4864;
  unint64_t v45 = (unint64_t)&type metadata for TVSettingsDownloadAVAdapterWidget;
  sub_1000082B4(&qword_10012B460);
  v47._countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v47);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1000082B4(&qword_10012A898);
  sub_100031E54();
  sub_100014AC4(&qword_10012A8A0, &qword_10012A898);
  sub_1000E56D0();
  v40[0] = &type metadata for TVSettingsDownloadAVAdapterWidget;
  v40[0] = sub_1000E5A20();
  v40[1] = v16;
  unint64_t v45 = 0x746567646957;
  unint64_t v46 = 0xE600000000000000;
  uint64_t v43 = 0x656C67676F54;
  unint64_t v44 = 0xE600000000000000;
  unint64_t v29 = sub_100014158();
  uint64_t v17 = sub_1000E5C70();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  v40[0] = v17;
  v40[1] = v19;
  uint64_t v20 = sub_100014AC4(&qword_10012A8A8, &qword_10012A870);
  uint64_t v21 = v31;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v21);
  unint64_t v45 = 0xD00000000000002CLL;
  unint64_t v46 = 0x80000001000E8EB0;
  v40[0] = v21;
  v40[1] = &type metadata for String;
  uint64_t v41 = v20;
  unint64_t v42 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v33;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v23);
  v40[0] = v23;
  v40[1] = &type metadata for String;
  uint64_t v41 = OpaqueTypeConformance2;
  unint64_t v42 = v29;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  long long v25 = v30;
  uint64_t v26 = v35;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v26);
  v40[0] = v26;
  v40[1] = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v37;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v25, v27);
}

uint64_t sub_100033204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000082B4(&qword_10012A898);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0xD00000000000001ALL;
  v7[1] = 0x80000001000E8D50;
  sub_100014158();
  sub_1000E4D30();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_100033314()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A7F0);
  __chkstk_darwin(v0 - 8);
  unint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000E3B90();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v22 = v13;
  uint64_t v14 = sub_1000E3DA0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_1000082B4(&qword_10012B3F8);
  sub_1000E3D80();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_1000E3A00();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  long long v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10003223C();
  uint64_t v19 = v22;
  uint64_t v23 = sub_1000E3A70();
  sub_1000082B4(&qword_10012A800);
  sub_1000E3D80();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_1000E5B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_1000E3A90();
  return v23;
}

uint64_t sub_100033758()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  __chkstk_darwin(v6 - 8);
  v9[1] = &type metadata for TVSettingsUseDownloadAVAdapterEntity;
  sub_1000082B4(&qword_10012B3D0);
  uint64_t v7 = sub_1000E5A20();
  sub_1000082B4(&qword_10012B230);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012B3E8, &qword_10012B3F0);
  sub_1000E3CA0();
  return v7;
}

uint64_t sub_100033A20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

ValueMetadata *type metadata accessor for TVSettingsDownloadAVAdapterWidget()
{
  return &type metadata for TVSettingsDownloadAVAdapterWidget;
}

uint64_t sub_100033A3C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100033A58(uint64_t a1)
{
  unint64_t result = sub_100033A80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100033A80()
{
  unint64_t result = qword_10012B450;
  if (!qword_10012B450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B450);
  }
  return result;
}

unint64_t sub_100033AD4(uint64_t a1)
{
  unint64_t result = sub_100033AFC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100033AFC()
{
  unint64_t result = qword_10012B458;
  if (!qword_10012B458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B458);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AvocadoFeature(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AvocadoFeature(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100033C40);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100033C68()
{
  return 0;
}

ValueMetadata *type metadata accessor for AvocadoFeature()
{
  return &type metadata for AvocadoFeature;
}

unint64_t sub_100033C84()
{
  unint64_t result = qword_10012B468;
  if (!qword_10012B468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B468);
  }
  return result;
}

Swift::Int sub_100033CD8()
{
  return sub_1000E5E20();
}

void sub_100033D1C()
{
}

Swift::Int sub_100033D44()
{
  return sub_1000E5E20();
}

const char *sub_100033D84()
{
  return "TVApp";
}

const char *sub_100033D98()
{
  return "testarossa";
}

uint64_t getEnumTagSinglePayload for UpNextDisplayType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UpNextDisplayType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100033F08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100033F30(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UpNextDisplayType()
{
  return &type metadata for UpNextDisplayType;
}

uint64_t sub_100033F4C()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  int v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100141E80);
  sub_100008498(v10, (uint64_t)qword_100141E80);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

unint64_t sub_100034234()
{
  uint64_t v0 = sub_1000082B4(&qword_10012B4E8);
  __chkstk_darwin(v0 - 8);
  uint64_t v41 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v2 - 8);
  uint64_t v40 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3D90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E3F10();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000E59F0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000E3DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000082B4(&qword_10012B4F0);
  uint64_t v14 = (int *)(sub_1000082B4(&qword_10012B4F8) - 8);
  uint64_t v15 = *(void *)v14;
  uint64_t v38 = *(void *)(*(void *)v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v39 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1000F0F50;
  unint64_t v36 = v17 + v16 + v14[14];
  unint64_t v37 = v17 + v16;
  *(unsigned char *)(v17 + v16) = 0;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  unsigned int v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v31 = v4;
  v19(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  uint64_t v32 = v5 + 104;
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v19(v7, v18, v4);
  uint64_t v20 = v40;
  sub_1000E3DB0();
  uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56);
  v43 += 56;
  uint64_t v35 = v21;
  v21(v20, 0, 1, v42);
  uint64_t v22 = sub_1000E3B00();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v34 = v23 + 56;
  v33(v41, 1, 1, v22);
  unint64_t v29 = v13;
  sub_1000E3B30();
  uint64_t v24 = (unsigned char *)(v37 + v38);
  v38 += v37 + v14[14];
  *uint64_t v24 = 1;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v25 = v30;
  uint64_t v26 = v31;
  v19(v7, v30, v31);
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v19(v7, v25, v26);
  uint64_t v27 = v40;
  sub_1000E3DB0();
  v35(v27, 0, 1, v42);
  v33(v41, 1, 1, v22);
  sub_1000E3B30();
  unint64_t result = sub_100034A58(v39, &qword_10012B4F8, &qword_10012B500, (uint64_t (*)(void))sub_10003555C);
  qword_100141E98 = result;
  return result;
}

unint64_t sub_100034868(uint64_t a1)
{
  return sub_100034880(a1, &qword_10012B508);
}

unint64_t sub_100034874(uint64_t a1)
{
  return sub_100034880(a1, &qword_10012B560);
}

unint64_t sub_100034880(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000082B4(a2);
  uint64_t v3 = (void *)sub_1000E5D90();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *((void *)v5 - 2);
    uint64_t v7 = *((void *)v5 - 1);
    char v8 = *v5;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000354E4(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(unsigned char *)(v3[7] + result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v5 += 24;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100034990(uint64_t a1)
{
  return sub_100034A58(a1, &qword_10012B540, &qword_10012B548, (uint64_t (*)(void))sub_1000355E0);
}

unint64_t sub_1000349B8(uint64_t a1)
{
  return sub_100034A58(a1, &qword_10012B550, &qword_10012B558, (uint64_t (*)(void))sub_1000355E0);
}

unint64_t sub_1000349E0(uint64_t a1)
{
  return sub_100034A58(a1, &qword_10012B520, &qword_10012B528, (uint64_t (*)(void))sub_10003568C);
}

unint64_t sub_100034A08(uint64_t a1)
{
  return sub_100034A58(a1, &qword_10012B530, &qword_10012B538, (uint64_t (*)(void))sub_10003568C);
}

unint64_t sub_100034A30(uint64_t a1)
{
  return sub_100034A58(a1, &qword_10012B510, &qword_10012B518, (uint64_t (*)(void))sub_1000357B0);
}

unint64_t sub_100034A58(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v29 = a4;
  uint64_t v7 = sub_1000082B4(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000082B4(a3);
  uint64_t v11 = sub_1000E5D90();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_100014754(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = sub_1000E3B50();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    void v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100034C54(char *a1, char *a2)
{
  return sub_10001C638(*a1, *a2);
}

Swift::Int sub_100034C60()
{
  return sub_1000E5E20();
}

uint64_t sub_100034CBC()
{
  sub_1000E5A50();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100034CFC()
{
  return sub_1000E5E20();
}

uint64_t sub_100034D54@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_100120218;
  v8._object = v3;
  Swift::Int v5 = sub_1000E5DA0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_100034DB4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 48;
  if (*v1) {
    uint64_t v2 = 49;
  }
  *a1 = v2;
  a1[1] = 0xE100000000000000;
}

void sub_100034DD0(void *a1@<X8>)
{
  *a1 = &off_100120268;
}

void sub_100034DE0(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100034DEC@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129C70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000E3C50();
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100141E80);
  Swift::OpaquePointer v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100034E94(uint64_t a1)
{
  unint64_t v2 = sub_1000350E0();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100034EE0()
{
  if (qword_100129C78 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100034F3C(uint64_t a1)
{
  unint64_t v2 = sub_100035190();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100034F8C()
{
  unint64_t result = qword_10012B470;
  if (!qword_10012B470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B470);
  }
  return result;
}

unint64_t sub_100034FE4()
{
  unint64_t result = qword_10012B478;
  if (!qword_10012B478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B478);
  }
  return result;
}

unint64_t sub_10003503C()
{
  unint64_t result = qword_10012B480;
  if (!qword_10012B480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B480);
  }
  return result;
}

uint64_t sub_100035090()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000350E0()
{
  unint64_t result = qword_10012B488;
  if (!qword_10012B488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B488);
  }
  return result;
}

unint64_t sub_100035138()
{
  unint64_t result = qword_10012B490;
  if (!qword_10012B490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B490);
  }
  return result;
}

unint64_t sub_100035190()
{
  unint64_t result = qword_10012B498;
  if (!qword_10012B498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B498);
  }
  return result;
}

unint64_t sub_1000351E8()
{
  unint64_t result = qword_10012B4A0;
  if (!qword_10012B4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B4A0);
  }
  return result;
}

unint64_t sub_100035240()
{
  unint64_t result = qword_10012B4A8;
  if (!qword_10012B4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B4A8);
  }
  return result;
}

unint64_t sub_100035298()
{
  unint64_t result = qword_10012B4B0;
  if (!qword_10012B4B0)
  {
    sub_100008354(&qword_10012B4B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B4B0);
  }
  return result;
}

unint64_t sub_1000352F8()
{
  unint64_t result = qword_10012B4C0;
  if (!qword_10012B4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B4C0);
  }
  return result;
}

unint64_t sub_100035350()
{
  unint64_t result = qword_10012B4C8;
  if (!qword_10012B4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B4C8);
  }
  return result;
}

unint64_t sub_1000353A8()
{
  unint64_t result = qword_10012B4D0;
  if (!qword_10012B4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B4D0);
  }
  return result;
}

void *sub_1000353FC()
{
  return &protocol witness table for String;
}

unint64_t sub_100035408(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1000350E0();
  unint64_t result = sub_100035438();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100035438()
{
  unint64_t result = qword_10012B4D8;
  if (!qword_10012B4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B4D8);
  }
  return result;
}

unint64_t sub_100035490()
{
  unint64_t result = qword_10012B4E0;
  if (!qword_10012B4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B4E0);
  }
  return result;
}

unint64_t sub_1000354E4(uint64_t a1, uint64_t a2)
{
  sub_1000E5E00();
  sub_1000E5A50();
  Swift::Int v4 = sub_1000E5E20();

  return sub_100035830(a1, a2, v4);
}

unint64_t sub_10003555C(char a1)
{
  sub_1000E5E00();
  sub_1000E5A50();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000E5E20();

  return sub_100035914(a1 & 1, v2);
}

unint64_t sub_1000355E0(char a1)
{
  sub_1000E5E00();
  sub_1000E5A50();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000E5E20();
  return sub_100035A00(a1 & 1, v2);
}

unint64_t sub_10003568C(char a1)
{
  sub_1000E5E00();
  sub_1000E5A50();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000E5E20();
  return sub_100035B28(a1 & 1, v2);
}

unint64_t sub_10003572C(uint64_t a1)
{
  sub_1000E5590();
  sub_100035EE8(&qword_10012B568);
  uint64_t v2 = sub_1000E5920();

  return sub_100035C50(a1, v2);
}

unint64_t sub_1000357B0(char a1)
{
  sub_1000E5E00();
  sub_1000E5A50();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1000E5E20();

  return sub_100035DFC(a1 & 1, v2);
}

unint64_t sub_100035830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1000E5DC0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1000E5DC0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100035914(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 49;
    }
    else {
      uint64_t v6 = 48;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 49 : 48;
      if (v7 == v6) {
        break;
      }
      char v8 = sub_1000E5DC0();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_100035A00(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x6C61755174736542;
    }
    else {
      uint64_t v6 = 0x6C617551646F6F47;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x6C61755174736542 : 0x6C617551646F6F47;
      if (v7 == v6) {
        break;
      }
      char v8 = sub_1000E5DC0();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_100035B28(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      unint64_t v6 = 0x80000001000E82E0;
    }
    else {
      unint64_t v6 = 0x80000001000E82C0;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? "BestQualityDownload" : "GoodQualityDownload";
      if (((unint64_t)(v7 - 32) | 0x8000000000000000) == v6) {
        break;
      }
      char v8 = sub_1000E5DC0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_100035C50(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1000E5590();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_100035EE8(&qword_10012B570);
      char v15 = sub_1000E5970();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_100035DFC(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 48;
    }
    else {
      uint64_t v6 = 49;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 48 : 49;
      if (v7 == v6) {
        break;
      }
      char v8 = sub_1000E5DC0();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

uint64_t sub_100035EE8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000E5590();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_100035F2C()
{
  uint64_t v1 = type metadata accessor for SportsWidgetDynamicIslandExpanded(0);
  uint64_t v2 = __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)(v0 + *(int *)(v2 + 20));
  uint64_t v6 = v5[9];
  unint64_t v7 = v5[11];
  if (v7
    && ((v8 = v5[10] & 0xFFFFFFFFFFFFLL, (v7 & 0x2000000000000000) != 0) ? (uint64_t v9 = HIBYTE(v7) & 0xF) : (uint64_t v9 = v8), v9))
  {
    sub_10003A5C4(v0, (uint64_t)v4, type metadata accessor for SportsWidgetDynamicIslandExpanded);
  }
  else
  {
    sub_10003A5C4(v0, (uint64_t)v4, type metadata accessor for SportsWidgetDynamicIslandExpanded);
    if (!v6)
    {
      BOOL v15 = 0;
      goto LABEL_16;
    }
  }
  uint64_t v10 = &v4[*(int *)(v1 + 20)];
  uint64_t v11 = *((void *)v10 + 24);
  unint64_t v12 = *((void *)v10 + 26);
  BOOL v15 = v12
     && ((uint64_t v13 = *((void *)v10 + 25) & 0xFFFFFFFFFFFFLL, (v12 & 0x2000000000000000) != 0)
       ? (uint64_t v14 = HIBYTE(v12) & 0xF)
       : (uint64_t v14 = v13),
         v14)
     || v11 != 0;
LABEL_16:
  sub_10003AB6C((uint64_t)v4, type metadata accessor for SportsWidgetDynamicIslandExpanded);
  return v15;
}

uint64_t sub_100036078@<X0>(uint64_t a1@<X0>, unsigned long long *a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = sub_1000082B4(&qword_10012B5C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000082B4(&qword_10012B5D0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v57 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v59 = (uint64_t)&v46 - v9;
  if (sub_100035F2C())
  {
    uint64_t v10 = type metadata accessor for SportsWidgetDynamicIslandExpanded(0);
    uint64_t v11 = (void *)(a1 + *(int *)(v10 + 20));
    uint64_t v12 = v11[6];
    uint64_t v13 = v11[7];
    uint64_t v15 = v11[8];
    uint64_t v14 = v11[9];
    uint64_t v16 = v11[11];
    uint64_t v58 = v11[10];
    uint64_t v17 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = [v17 labelColor];
    uint64_t v19 = sub_1000E4BD0();
    *(void *)&unsigned long long v60 = 0x4049000000000000;
    *((void *)&v60 + 1) = v19;
    uint64_t v61 = v12;
    *(void *)&long long v62 = v13;
    *((void *)&v62 + 1) = v15;
    uint64_t v63 = v14;
    uint64_t v64 = v58;
    uint64_t v65 = v16;
    uint64_t v20 = v10;
    uint64_t v67 = 0;
    uint64_t v68 = 0;
    uint64_t v66 = 0;
    char v69 = 0;
  }
  else
  {
    uint64_t v20 = type metadata accessor for SportsWidgetDynamicIslandExpanded(0);
    sub_1000365C4((uint64_t)&v70);
    unsigned long long v60 = v70;
    uint64_t v61 = v71[0];
    long long v62 = *(_OWORD *)&v71[8];
    uint64_t v63 = *(void *)&v71[24];
    uint64_t v64 = v72;
    uint64_t v65 = *((void *)&v72 + 1);
    uint64_t v66 = v73;
    uint64_t v67 = *((void *)&v73 + 1);
    uint64_t v68 = v74;
    char v69 = 1;
  }
  sub_1000082B4(&qword_10012A248);
  sub_100014448();
  sub_10001449C();
  sub_1000E4690();
  unsigned long long v21 = v70;
  unsigned long long v22 = *(_OWORD *)v71;
  uint64_t v24 = *(void *)&v71[16];
  uint64_t v23 = *(void *)&v71[24];
  uint64_t v25 = *((void *)&v72 + 1);
  uint64_t v58 = v72;
  uint64_t v54 = *((void *)&v73 + 1);
  uint64_t v55 = v73;
  uint64_t v53 = v74;
  int v52 = BYTE8(v74);
  type metadata accessor for SportsWidgetDynamicIslandExpanded(0);
  uint64_t v26 = a1 + *(int *)(v20 + 20);
  long long v27 = *(_OWORD *)(v26 + 80);
  long long v73 = *(_OWORD *)(v26 + 64);
  long long v74 = v27;
  long long v75 = *(_OWORD *)(v26 + 96);
  char v76 = *(unsigned char *)(v26 + 112);
  long long v28 = *(_OWORD *)(v26 + 48);
  *(_OWORD *)&v71[16] = *(_OWORD *)(v26 + 32);
  long long v72 = v28;
  long long v29 = *(_OWORD *)(v26 + 16);
  unsigned long long v70 = *(_OWORD *)v26;
  *(_OWORD *)uint64_t v71 = v29;
  *(_OWORD *)uint64_t v5 = *(_OWORD *)(a1 + 64);
  v5[16] = 0;
  uint64_t v30 = sub_1000082B4(&qword_10012B5D8);
  sub_100037D7C(a1, (uint64_t)&v70, &v5[*(int *)(v30 + 44)]);
  uint64_t v31 = sub_1000E4F50();
  uint64_t v32 = v57;
  sub_1000B6448(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v57, 0.0, 1, 0.0, 1, v31, v33);
  sub_1000147B8((uint64_t)v5, &qword_10012B5C8);
  uint64_t v34 = v59;
  sub_100014B08(v32, v59, &qword_10012B5D0);
  sub_100014754(v34, v32, &qword_10012B5D0);
  uint64_t v35 = v56;
  *uint64_t v56 = v21;
  uint64_t v46 = v21 >> 64;
  uint64_t v47 = v21;
  v35[1] = v22;
  uint64_t v51 = v22 >> 64;
  uint64_t v48 = v22;
  uint64_t v50 = v24;
  *((void *)v35 + 4) = v24;
  *((void *)v35 + 5) = v23;
  uint64_t v49 = v23;
  *((void *)v35 + 6) = v58;
  *((void *)v35 + 7) = v25;
  uint64_t v36 = v25;
  uint64_t v37 = v55;
  uint64_t v38 = v54;
  *((void *)v35 + 8) = v55;
  *((void *)v35 + 9) = v38;
  uint64_t v39 = v53;
  *((void *)v35 + 10) = v53;
  LOBYTE(v24) = v52;
  *((unsigned char *)v35 + 88) = v52;
  *((void *)v35 + 12) = 0;
  *((unsigned char *)v35 + 104) = 1;
  uint64_t v40 = sub_1000082B4(&qword_10012B610);
  sub_100014754(v32, (uint64_t)v35 + *(int *)(v40 + 64), &qword_10012B5D0);
  uint64_t v41 = v51;
  uint64_t v42 = v50;
  uint64_t v43 = v49;
  uint64_t v44 = v58;
  sub_10003ABCC(v21, *((uint64_t *)&v21 + 1), v22, v51, v50, v49, v58, v36, v37, v38, v39, v24);
  sub_1000147B8(v59, &qword_10012B5D0);
  sub_1000147B8(v32, &qword_10012B5D0);
  return sub_10003AC90(v47, v46, v48, v41, v42, v43, v44, v36, v37, v38, v39, v24);
}

uint64_t sub_1000365C4@<X0>(uint64_t a1@<X8>)
{
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1000E4A00();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  uint64_t v8 = sub_1000E4940();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_1000141AC(v3, v5, v7);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1000E4970();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_1000141AC(v8, v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1000E4920();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  sub_1000141AC(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v1 + 112);
  uint64_t KeyPath = swift_getKeyPath();
  char v27 = *(unsigned char *)(v1 + 120);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = *(void *)(v1 + 128);
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v20;
  *(unsigned char *)(a1 + 16) = v22 & 1;
  *(void *)(a1 + 24) = v24;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = v25;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v28;
  *(unsigned char *)(a1 + 64) = v27;
  *(void *)(a1 + 72) = result;
  *(void *)(a1 + 80) = v29;
  return result;
}

uint64_t sub_100036784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = sub_1000082B4(&qword_10012B5C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000082B4(&qword_10012B5D0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)&v46 - v10;
  uint64_t v12 = a1 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpanded(0) + 20);
  long long v13 = *(_OWORD *)(v12 + 200);
  v76[4] = *(_OWORD *)(v12 + 184);
  v76[5] = v13;
  v76[6] = *(_OWORD *)(v12 + 216);
  char v77 = *(unsigned char *)(v12 + 232);
  long long v14 = *(_OWORD *)(v12 + 136);
  long long v15 = *(_OWORD *)(v12 + 168);
  v76[2] = *(_OWORD *)(v12 + 152);
  v76[3] = v15;
  v76[0] = *(_OWORD *)(v12 + 120);
  v76[1] = v14;
  *(_OWORD *)uint64_t v5 = *(_OWORD *)(a1 + 64);
  v5[16] = 0;
  uint64_t v16 = sub_1000082B4(&qword_10012B5D8);
  sub_100037D7C(a1, (uint64_t)v76, &v5[*(int *)(v16 + 44)]);
  uint64_t v17 = sub_1000E4F50();
  sub_1000B6448(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v17, v18);
  sub_1000147B8((uint64_t)v5, &qword_10012B5C8);
  uint64_t v53 = v11;
  uint64_t v54 = v9;
  sub_100014B08((uint64_t)v9, (uint64_t)v11, &qword_10012B5D0);
  if (sub_100035F2C())
  {
    uint64_t v20 = *(void *)(v12 + 168);
    uint64_t v19 = *(void *)(v12 + 176);
    uint64_t v22 = *(void *)(v12 + 184);
    uint64_t v21 = *(void *)(v12 + 192);
    uint64_t v24 = *(void *)(v12 + 200);
    uint64_t v23 = *(void *)(v12 + 208);
    uint64_t v25 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = [v25 labelColor];
    uint64_t v27 = sub_1000E4BD0();
    *(void *)&long long v56 = 0x4049000000000000;
    *((void *)&v56 + 1) = v27;
    uint64_t v57 = v20;
    *(void *)&long long v58 = v19;
    *((void *)&v58 + 1) = v22;
    uint64_t v59 = v21;
    uint64_t v60 = v24;
    uint64_t v61 = v23;
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    uint64_t v62 = 0;
    char v65 = 0;
  }
  else
  {
    sub_1000365C4((uint64_t)&v66);
    long long v56 = v66;
    uint64_t v57 = v67;
    long long v58 = v68;
    uint64_t v59 = v69;
    uint64_t v60 = v70;
    uint64_t v61 = v71;
    uint64_t v62 = v72;
    uint64_t v63 = v73;
    uint64_t v64 = v74;
    char v65 = 1;
  }
  sub_1000082B4(&qword_10012A248);
  sub_100014448();
  sub_10001449C();
  sub_1000E4690();
  uint64_t v28 = *((void *)&v66 + 1);
  uint64_t v55 = v66;
  uint64_t v29 = v67;
  long long v31 = v68;
  uint64_t v30 = v69;
  uint64_t v32 = v70;
  uint64_t v33 = v71;
  uint64_t v50 = v73;
  uint64_t v51 = v72;
  uint64_t v49 = v74;
  int v48 = v75;
  uint64_t v34 = (uint64_t)v54;
  sub_100014754((uint64_t)v53, (uint64_t)v54, &qword_10012B5D0);
  uint64_t v35 = v34;
  uint64_t v36 = v52;
  sub_100014754(v35, v52, &qword_10012B5D0);
  uint64_t v37 = sub_1000082B4(&qword_10012B5E0);
  uint64_t v38 = v36 + *(int *)(v37 + 48);
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = 1;
  uint64_t v39 = v36 + *(int *)(v37 + 64);
  uint64_t v40 = v55;
  *(void *)uint64_t v39 = v55;
  *(void *)(v39 + 8) = v28;
  uint64_t v55 = v40;
  uint64_t v41 = v28;
  uint64_t v46 = v31;
  uint64_t v47 = v28;
  *(void *)(v39 + 16) = v29;
  *(_OWORD *)(v39 + 24) = v31;
  *(void *)(v39 + 40) = v30;
  *(void *)(v39 + 48) = v32;
  *(void *)(v39 + 56) = v33;
  uint64_t v42 = v50;
  uint64_t v43 = v51;
  *(void *)(v39 + 64) = v51;
  *(void *)(v39 + 72) = v42;
  uint64_t v44 = v49;
  *(void *)(v39 + 80) = v49;
  LOBYTE(v28) = v48;
  *(unsigned char *)(v39 + 88) = v48;
  sub_10003ABCC(v40, v41, v29, v31, *((uint64_t *)&v31 + 1), v30, v32, v33, v43, v42, v44, v28);
  sub_1000147B8((uint64_t)v53, &qword_10012B5D0);
  sub_10003AC90(v55, v47, v29, v46, *((uint64_t *)&v31 + 1), v30, v32, v33, v43, v42, v44, v28);
  return sub_1000147B8((uint64_t)v54, &qword_10012B5D0);
}

uint64_t sub_100036BC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v2 = type metadata accessor for SportsWidgetClock(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v71 = (uint64_t)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for SportsWidgetClockView();
  uint64_t v4 = __chkstk_darwin(v70);
  uint64_t v69 = (uint64_t *)((char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v73 = (uint64_t)&v64 - v6;
  uint64_t v7 = sub_1000082B4(&qword_10012B578);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v72 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v64 - v10;
  uint64_t v11 = sub_1000082B4(&qword_10012B580);
  __chkstk_darwin(v11);
  long long v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000082B4(&qword_10012B588);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000082B4(&qword_10012B590);
  __chkstk_darwin(v76);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000082B4(&qword_10012B598);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpanded(0) + 20);
  uint64_t v75 = v1;
  uint64_t v23 = v1 + v22;
  uint64_t v24 = (int *)type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
  if (*(unsigned char *)(v23 + v24[12]) == 1)
  {
    sub_1000459B8((uint64_t)v79);
    long long v25 = *(_OWORD *)&v79[16];
    *(_OWORD *)(v16 + 8) = *(_OWORD *)v79;
    *(_OWORD *)(v16 + 24) = v25;
    long long v26 = *(_OWORD *)&v79[48];
    *(_OWORD *)(v16 + 40) = *(_OWORD *)&v79[32];
    uint64_t v27 = *(void *)&v79[64];
    uint64_t v28 = *(void *)&v79[88];
    char *v16 = 1;
    *(_OWORD *)(v16 + 56) = v26;
    *((void *)v16 + 9) = v27;
    *((_OWORD *)v16 + 5) = *(_OWORD *)&v79[72];
    *((void *)v16 + 12) = v28;
    swift_storeEnumTagMultiPayload();
    sub_1000143B8((uint64_t)v79);
    sub_10001409C();
    sub_100037CD0();
    sub_1000E4690();
    sub_100014754((uint64_t)v18, (uint64_t)v13, &qword_10012B590);
    swift_storeEnumTagMultiPayload();
    sub_1000082B4(&qword_10012B5A8);
    sub_100037C54();
    sub_100014AC4(&qword_10012B5C0, &qword_10012B5A8);
    sub_1000E4690();
    sub_1000147B8((uint64_t)v18, &qword_10012B590);
    sub_100014400((uint64_t)v79);
LABEL_5:
    uint64_t v50 = sub_1000082B4(&qword_10012B5A0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v21, 0, 1, v50);
    return sub_100014B08((uint64_t)v21, v77, &qword_10012B598);
  }
  uint64_t v67 = v14;
  uint64_t v68 = v11;
  if (*(unsigned char *)(v23 + v24[9]) == 1)
  {
    uint64_t v29 = v71;
    sub_10003A5C4(v23 + v24[6], v71, type metadata accessor for SportsWidgetClock);
    uint64_t v30 = sub_1000E48A0();
    id v31 = [self labelColor];
    uint64_t v66 = sub_1000E4BD0();
    uint64_t v65 = sub_1000E48A0();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v33 = v69;
    uint64_t *v69 = KeyPath;
    sub_1000082B4(&qword_100129F20);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = v70;
    sub_10003AB04(v29, (uint64_t)v33 + *(int *)(v70 + 20), type metadata accessor for SportsWidgetClock);
    uint64_t v35 = (char *)v33 + *(int *)(v34 + 24);
    char *v35 = 0;
    uint64_t v36 = v66;
    *((void *)v35 + 1) = v30;
    *((void *)v35 + 2) = v36;
    *((void *)v35 + 3) = v65;
    uint64_t v37 = (uint64_t)v33;
    uint64_t v38 = v73;
    sub_10003AB04(v37, v73, (uint64_t (*)(void))type metadata accessor for SportsWidgetClockView);
    LOBYTE(v29) = sub_1000E4760();
    sub_1000E3FB0();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v47 = v72;
    sub_10003A5C4(v38, v72, (uint64_t (*)(void))type metadata accessor for SportsWidgetClockView);
    uint64_t v48 = v47 + *(int *)(v7 + 36);
    *(unsigned char *)uint64_t v48 = v29;
    *(void *)(v48 + 8) = v40;
    *(void *)(v48 + 16) = v42;
    *(void *)(v48 + 24) = v44;
    *(void *)(v48 + 32) = v46;
    *(unsigned char *)(v48 + 40) = 0;
    sub_10003AB6C(v38, (uint64_t (*)(void))type metadata accessor for SportsWidgetClockView);
    uint64_t v49 = v74;
    sub_100014B08(v47, v74, &qword_10012B578);
    sub_100014754(v49, (uint64_t)v16, &qword_10012B578);
    swift_storeEnumTagMultiPayload();
    sub_10001409C();
    sub_100037CD0();
    sub_1000E4690();
    sub_100014754((uint64_t)v18, (uint64_t)v13, &qword_10012B590);
    swift_storeEnumTagMultiPayload();
    sub_1000082B4(&qword_10012B5A8);
    sub_100037C54();
    sub_100014AC4(&qword_10012B5C0, &qword_10012B5A8);
    sub_1000E4690();
    sub_1000147B8((uint64_t)v18, &qword_10012B590);
    sub_1000147B8(v49, &qword_10012B578);
    goto LABEL_5;
  }
  if (*(unsigned char *)(v23 + v24[10]) == 1)
  {
    uint64_t v52 = sub_1000E45C0();
    sub_100037854(v75, (uint64_t *)v78);
    *(_OWORD *)&v79[71] = v78[4];
    *(_OWORD *)&v79[55] = v78[3];
    *(_OWORD *)&v79[119] = v78[7];
    *(_OWORD *)&v79[135] = v78[8];
    *(_OWORD *)&v79[151] = v78[9];
    *(_OWORD *)&v79[167] = v78[10];
    *(_OWORD *)&v79[87] = v78[5];
    *(_OWORD *)&v79[103] = v78[6];
    *(_OWORD *)&v79[7] = v78[0];
    *(_OWORD *)&v79[23] = v78[1];
    *(_OWORD *)&v79[39] = v78[2];
    long long v53 = *(_OWORD *)&v79[144];
    *(_OWORD *)(v13 + 145) = *(_OWORD *)&v79[128];
    *(_OWORD *)(v13 + 161) = v53;
    *(_OWORD *)(v13 + 177) = *(_OWORD *)&v79[160];
    long long v54 = *(_OWORD *)&v79[80];
    *(_OWORD *)(v13 + 81) = *(_OWORD *)&v79[64];
    *(_OWORD *)(v13 + 97) = v54;
    long long v55 = *(_OWORD *)&v79[112];
    *(_OWORD *)(v13 + 113) = *(_OWORD *)&v79[96];
    *(_OWORD *)(v13 + 129) = v55;
    long long v56 = *(_OWORD *)&v79[16];
    *(_OWORD *)(v13 + 17) = *(_OWORD *)v79;
    *(_OWORD *)(v13 + 33) = v56;
    long long v57 = *(_OWORD *)&v79[48];
    *(_OWORD *)(v13 + 49) = *(_OWORD *)&v79[32];
    char v80 = 1;
    *(void *)long long v13 = v52;
    *((void *)v13 + 1) = 0;
    v13[16] = 1;
    *((void *)v13 + 24) = *(void *)&v79[175];
    *(_OWORD *)(v13 + 65) = v57;
    swift_storeEnumTagMultiPayload();
    sub_1000082B4(&qword_10012B5A8);
    sub_100037C54();
    sub_100014AC4(&qword_10012B5C0, &qword_10012B5A8);
    uint64_t v58 = v77;
    sub_1000E4690();
    uint64_t v59 = sub_1000082B4(&qword_10012B5A0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
  }
  else
  {
    uint64_t v60 = sub_1000082B4(&qword_10012B5A0);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56);
    uint64_t v62 = v60;
    uint64_t v63 = v77;
    return v61(v63, 1, 1, v62);
  }
}

uint64_t type metadata accessor for SportsWidgetDynamicIslandExpanded(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012B670);
}

uint64_t sub_1000374E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SportsWidgetPlayByPlayLayout();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsWidgetPlayByPlayView();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1000082B4(&qword_10012A090);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v1 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpanded(0) + 20);
  uint64_t v13 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
  if (*(unsigned char *)(v12 + *(int *)(v13 + 48)) == 1)
  {
    sub_1000459B8((uint64_t)v30);
    long long v14 = v30[1];
    *(_OWORD *)(v11 + 8) = v30[0];
    *(_OWORD *)(v11 + 24) = v14;
    long long v15 = v30[3];
    *(_OWORD *)(v11 + 40) = v30[2];
    uint64_t v16 = v31;
    uint64_t v17 = v33;
    *uint64_t v11 = 2;
    *(_OWORD *)(v11 + 56) = v15;
    *((void *)v11 + 9) = v16;
    *((_OWORD *)v11 + 5) = v32;
    *((void *)v11 + 12) = v17;
    swift_storeEnumTagMultiPayload();
    sub_10001409C();
    sub_10003F5FC(&qword_10012A0A0, (void (*)(uint64_t))type metadata accessor for SportsWidgetPlayByPlayView);
    return sub_1000E4690();
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v12 + *(int *)(v13 + 28));
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v29 = a1;
    char v22 = *((unsigned char *)v19 + 16);
    uint64_t v23 = v19[3];
    int v24 = *((unsigned __int8 *)v19 + 32);
    uint64_t v25 = v19[5];
    int v27 = *((unsigned __int8 *)v19 + 48);
    int v28 = v24;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000C533C((uint64_t)v5, 14.0, 0.0);
    uint64_t *v8 = swift_getKeyPath();
    sub_1000082B4(&qword_100129F20);
    swift_storeEnumTagMultiPayload();
    long long v26 = (char *)v8 + *(int *)(v6 + 20);
    *(void *)long long v26 = v21;
    *((void *)v26 + 1) = v20;
    v26[16] = v22;
    *((void *)v26 + 3) = v23;
    v26[32] = v28;
    *((void *)v26 + 5) = v25;
    v26[48] = v27;
    sub_10003AB04((uint64_t)v5, (uint64_t)v8 + *(int *)(v6 + 24), (uint64_t (*)(void))type metadata accessor for SportsWidgetPlayByPlayLayout);
    sub_10003A5C4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SportsWidgetPlayByPlayView);
    swift_storeEnumTagMultiPayload();
    sub_10001409C();
    sub_10003F5FC(&qword_10012A0A0, (void (*)(uint64_t))type metadata accessor for SportsWidgetPlayByPlayView);
    sub_1000E4690();
    return sub_10003AB6C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SportsWidgetPlayByPlayView);
  }
}

uint64_t sub_100037854@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpanded(0) + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0) + 32);
  if (!*(void *)(v5 + 8))
  {
    uint64_t v54 = 0;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v48 = 0;
    uint64_t KeyPath = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v45 = 0;
    if (*(void *)(v5 + 24)) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v42 = 0;
    uint64_t v44 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v33 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v34 = 0;
    goto LABEL_6;
  }
  uint64_t v43 = v5;
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1000E4A00();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = sub_1000E4940();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  sub_1000141AC(v6, v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v54 = sub_1000E4970();
  uint64_t v52 = v17;
  uint64_t v53 = v16;
  uint64_t v51 = v18 & 1;
  sub_1000141AC(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(a1 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v47 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v46 = *(void *)(a1 + 32);
  uint64_t v45 = swift_getKeyPath();
  if (!*(void *)(v43 + 24)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1000E4A00();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  uint64_t v24 = sub_1000E4940();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  sub_1000141AC(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_1000E4970();
  uint64_t v42 = v30;
  uint64_t v44 = v29;
  uint64_t v40 = v31 & 1;
  uint64_t v41 = v32;
  sub_1000141AC(v24, v26, v28);
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(a1 + 16);
  uint64_t v33 = swift_getKeyPath();
  uint64_t v37 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v38 = swift_getKeyPath();
  uint64_t v36 = *(void *)(a1 + 32);
  uint64_t v34 = swift_getKeyPath();
LABEL_6:
  *a2 = v54;
  a2[1] = v53;
  a2[2] = v51;
  a2[3] = v52;
  a2[4] = KeyPath;
  a2[5] = v50;
  a2[6] = 0;
  a2[7] = v48;
  a2[8] = v47;
  a2[9] = v45;
  a2[10] = v46;
  a2[11] = v44;
  a2[12] = v42;
  a2[13] = v40;
  a2[14] = v41;
  a2[15] = v33;
  a2[16] = v39;
  a2[17] = 0;
  a2[18] = v38;
  a2[19] = v37;
  a2[20] = v34;
  a2[21] = v36;
  sub_10003A908(v54, v53, v51, v52);
  sub_10003A908(v44, v42, v40, v41);
  sub_10003A988(v44, v42, v40, v41);
  return sub_10003A988(v54, v53, v51, v52);
}

unint64_t sub_100037C54()
{
  unint64_t result = qword_10012B5B0;
  if (!qword_10012B5B0)
  {
    sub_100008354(&qword_10012B590);
    sub_10001409C();
    sub_100037CD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B5B0);
  }
  return result;
}

unint64_t sub_100037CD0()
{
  unint64_t result = qword_10012B5B8;
  if (!qword_10012B5B8)
  {
    sub_100008354(&qword_10012B578);
    sub_10003F5FC(&qword_10012A108, (void (*)(uint64_t))type metadata accessor for SportsWidgetClockView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B5B8);
  }
  return result;
}

uint64_t sub_100037D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_1000082B4(&qword_10012B5E8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  char v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (_OWORD *)((char *)&v28 - v10);
  BOOL v12 = sub_100035F2C();
  uint64_t v33 = v9;
  uint64_t v29 = a2;
  if (v12)
  {
    type metadata accessor for SportsWidgetDynamicIslandExpanded(0);
    type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
    sub_1000365C4((uint64_t)v40);
    uint64_t v38 = v40[0];
    uint64_t v39 = v40[1];
    uint64_t v13 = v41;
    uint64_t v15 = v42;
    uint64_t v14 = v43;
    uint64_t v16 = v44;
    uint64_t v37 = v45;
    uint64_t v17 = v46;
    uint64_t v32 = v47;
    uint64_t v30 = v49;
    uint64_t v31 = v48;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v14 = 0;
    uint64_t v16 = 0;
    uint64_t v37 = 0;
    uint64_t v17 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v30 = 0;
  }
  uint64_t v18 = a1 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpanded(0) + 20);
  if (*(unsigned char *)(v18 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0) + 44)) == 1)
  {
    *uint64_t v11 = *(_OWORD *)(a1 + 48);
    uint64_t v19 = sub_1000082B4(&qword_10012B600);
    sub_1000380CC(a1, v29, (_OWORD *)((char *)v11 + *(int *)(v19 + 44)));
    uint64_t v20 = sub_1000082B4(&qword_10012B5F0);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
  }
  else
  {
    uint64_t v21 = sub_1000082B4(&qword_10012B5F0);
    (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
  }
  uint64_t v22 = (uint64_t)v33;
  uint64_t v36 = v11;
  sub_100014754((uint64_t)v11, (uint64_t)v33, &qword_10012B5E8);
  uint64_t v23 = v39;
  *a3 = v38;
  a3[1] = v23;
  uint64_t v39 = v23;
  a3[2] = v13;
  a3[3] = v15;
  a3[4] = v14;
  a3[5] = v16;
  uint64_t v34 = v14;
  uint64_t v35 = v17;
  a3[6] = v37;
  a3[7] = v17;
  uint64_t v24 = v31;
  a3[8] = v32;
  a3[9] = v24;
  a3[10] = v30;
  uint64_t v25 = sub_1000082B4(&qword_10012B5F8);
  sub_100014754(v22, (uint64_t)a3 + *(int *)(v25 + 48), &qword_10012B5E8);
  uint64_t v26 = v38;
  sub_10003A908(v38, v23, v13, v15);
  sub_1000147B8((uint64_t)v36, &qword_10012B5E8);
  sub_1000147B8(v22, &qword_10012B5E8);
  return sub_10003A988(v26, v39, v13, v15);
}

uint64_t sub_1000380CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v77 = a3;
  uint64_t v79 = sub_1000082B4(&qword_10012A290);
  __chkstk_darwin(v79);
  uint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000082B4(&qword_10012A268);
  __chkstk_darwin(v78);
  uint64_t v84 = (uint64_t *)((char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = sub_1000082B4(&qword_10012A358);
  __chkstk_darwin(v82);
  uint64_t v83 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000082B4(&qword_10012A360);
  uint64_t v9 = __chkstk_darwin(v81);
  uint64_t v91 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v80 = (uint64_t)&v69 - v12;
  __chkstk_darwin(v11);
  uint64_t v90 = (uint64_t)&v69 - v13;
  uint64_t v14 = a1 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpanded(0) + 20);
  int v15 = *(unsigned __int8 *)(v14
                           + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0) + 48));
  uint64_t v73 = a2;
  if (v15 == 1)
  {
    sub_1000459B8((uint64_t)v117);
    long long v98 = v117[0];
    *(_OWORD *)uint64_t v99 = v117[1];
    *(_OWORD *)&v99[16] = v117[2];
    uint64_t v97 = 0;
    *(_OWORD *)&v99[32] = v117[3];
    *(void *)&v99[48] = v118;
    long long v100 = v119;
    uint64_t v101 = v120;
    char v102 = 0;
  }
  else
  {
    uint64_t v17 = *(void *)(a2 + 16);
    uint64_t v16 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1000E47B0();
    id v19 = [self labelColor];
    uint64_t v20 = sub_1000E4BD0();
    uint64_t v97 = v17;
    *(void *)&long long v98 = v16;
    *((void *)&v98 + 1) = v18;
    *(void *)uint64_t v99 = v20;
    *(int64x2_t *)&v99[8] = vdupq_n_s64(1uLL);
    *(_OWORD *)&v99[24] = xmmword_1000EE790;
    *(_OWORD *)&v99[40] = 0u;
    long long v100 = 0u;
    uint64_t v101 = 0;
    char v102 = 1;
  }
  sub_10001409C();
  sub_10001453C();
  sub_1000E4690();
  uint64_t v88 = v104;
  uint64_t v89 = v103;
  uint64_t v86 = v106;
  uint64_t v87 = v105;
  uint64_t v21 = v108;
  uint64_t v85 = v107;
  uint64_t v95 = v111;
  uint64_t v96 = v110;
  uint64_t v93 = v113;
  uint64_t v94 = v112;
  uint64_t v92 = v114;
  uint64_t v75 = v115;
  uint64_t v76 = v109;
  int v74 = v116;
  swift_bridgeObjectRetain();
  uint64_t v72 = sub_1000E4CD0();
  uint64_t v22 = *(void *)(a1 + 160);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = *(void *)(a1 + 152);
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
  uint64_t v26 = a1 + *(int *)(v25 + 92);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v70 = a1;
  uint64_t v28 = v27;
  uint64_t v29 = (uint64_t *)v6;
  uint64_t v30 = &v6[*(int *)(v79 + 28)];
  uint64_t v31 = sub_1000E4CF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v30, v26, v31);
  *uint64_t v29 = v28;
  uint64_t v32 = v84;
  sub_100014754((uint64_t)v29, (uint64_t)v84 + *(int *)(v78 + 36), &qword_10012A290);
  uint64_t v33 = KeyPath;
  *uint64_t v32 = v72;
  v32[1] = v33;
  void v32[2] = v22;
  v32[3] = v24;
  v32[4] = v23;
  swift_retain();
  swift_retain();
  sub_1000147B8((uint64_t)v29, &qword_10012A290);
  uint64_t v34 = *(void *)(v70 + *(int *)(v25 + 96));
  id v35 = [self preferredFontForTextStyle:UIFontTextStyleCaption2];
  [v35 pointSize];
  double v37 = v36;

  uint64_t v38 = v83;
  sub_100014754((uint64_t)v32, v83, &qword_10012A268);
  uint64_t v39 = v38 + *(int *)(v82 + 36);
  *(void *)uint64_t v39 = v34;
  *(double *)(v39 + 8) = v37 + -3.0;
  sub_1000147B8((uint64_t)v32, &qword_10012A268);
  if (*(unsigned char *)(v73 + 112)) {
    double v40 = 1.0;
  }
  else {
    double v40 = 0.0;
  }
  uint64_t v41 = v80;
  sub_100014754(v38, v80, &qword_10012A358);
  *(double *)(v41 + *(int *)(v81 + 36)) = v40;
  sub_1000147B8(v38, &qword_10012A358);
  uint64_t v42 = v90;
  sub_100014B08(v41, v90, &qword_10012A360);
  uint64_t v43 = v42;
  uint64_t v44 = v91;
  sub_100014754(v43, v91, &qword_10012A360);
  uint64_t v46 = v76;
  unsigned __int8 v45 = v77;
  uint64_t v47 = v88;
  *uint64_t v77 = v89;
  v45[1] = v47;
  uint64_t v48 = v86;
  v45[2] = v87;
  v45[3] = v48;
  v45[4] = v85;
  v45[5] = v21;
  uint64_t v69 = v21;
  uint64_t v49 = v96;
  v45[6] = v46;
  _OWORD v45[7] = v49;
  uint64_t v51 = v94;
  uint64_t v50 = v95;
  v45[8] = v95;
  v45[9] = v51;
  uint64_t v52 = v50;
  uint64_t v94 = v51;
  uint64_t v95 = v50;
  uint64_t v54 = v92;
  uint64_t v53 = v93;
  v45[10] = v93;
  v45[11] = v54;
  uint64_t v92 = v54;
  uint64_t v93 = v53;
  uint64_t v55 = v75;
  v45[12] = v75;
  char v56 = v74;
  *((unsigned char *)v45 + 104) = v74;
  uint64_t v57 = sub_1000082B4(&qword_10012B608);
  sub_100014754(v44, (uint64_t)v45 + *(int *)(v57 + 48), &qword_10012A360);
  uint64_t v68 = v54;
  uint64_t v66 = v51;
  uint64_t v67 = v53;
  uint64_t v65 = v52;
  uint64_t v58 = v88;
  uint64_t v59 = v89;
  uint64_t v60 = v86;
  uint64_t v61 = v87;
  uint64_t v62 = v85;
  uint64_t v63 = v69;
  sub_10003AE38(v89, v88, v87, v86, v85, v69, v46, v96, v65, v66, v67, v68, v55, v56);
  sub_1000147B8(v90, &qword_10012A360);
  sub_1000147B8(v91, &qword_10012A360);
  return sub_10001460C(v59, v58, v61, v60, v62, v63, v46, v96, v95, v94, v93, v92, v55, v56);
}

BOOL sub_100038778(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_100038790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = sub_1000082B4(&qword_10012B740);
  uint64_t v3 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000082B4(&qword_10012B748);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012B750);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1)
  {
    uint64_t v12 = sub_1000E4510();
    sub_100039620((uint64_t)v1, v30);
    v31[272] = 1;
    memcpy(&v31[7], v30, 0x109uLL);
    v19[1] = a1;
    sub_1000E4F70();
    sub_1000E40A0();
    v19[0] = v9;
    v31[288] = v33;
    v31[280] = v35;
    uint64_t v21 = v12;
    uint64_t v22 = 0;
    char v23 = 1;
    memcpy(v24, v31, sizeof(v24));
    uint64_t v25 = v32;
    char v26 = v33;
    uint64_t v27 = v34;
    char v28 = v35;
    long long v29 = v36;
    type metadata accessor for SportsWidgetDynamicIslandCompactView(0);
    type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
    uint64_t v13 = sub_1000082B4(&qword_10012B758);
    uint64_t v14 = sub_10003F560(&qword_10012B760, &qword_10012B758, &qword_10012B768, &qword_10012B770);
    sub_1000E4A70();
    sub_10003F33C((uint64_t)v30);
    uint64_t v15 = v20;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v20);
    swift_storeEnumTagMultiPayload();
    sub_10003F458();
    uint64_t v21 = v13;
    uint64_t v22 = v14;
    swift_getOpaqueTypeConformance2();
    sub_1000E4690();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  }
  else
  {
    sub_100038B7C((uint64_t)v11);
    sub_100014754((uint64_t)v11, (uint64_t)v8, &qword_10012B750);
    swift_storeEnumTagMultiPayload();
    sub_10003F458();
    uint64_t v17 = sub_100008354(&qword_10012B758);
    uint64_t v18 = sub_10003F560(&qword_10012B760, &qword_10012B758, &qword_10012B768, &qword_10012B770);
    uint64_t v21 = v17;
    uint64_t v22 = v18;
    swift_getOpaqueTypeConformance2();
    sub_1000E4690();
    return sub_1000147B8((uint64_t)v11, &qword_10012B750);
  }
}

uint64_t sub_100038B7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SportsWidgetDynamicIslandCompactView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000082B4(&qword_10012B7A0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E4510();
  sub_100038F00((uint64_t)v2, v48);
  char v11 = *v2;
  uint64_t v30 = v7;
  uint64_t v31 = a1;
  uint64_t v29 = v8;
  if (v11) {
    sub_1000E4F70();
  }
  else {
    sub_1000E4F60();
  }
  v42[272] = 1;
  memcpy(&v42[7], v48, 0x109uLL);
  sub_1000E40A0();
  v42[288] = v44;
  v42[280] = v46;
  uint64_t v33 = v10;
  uint64_t v34 = 0;
  char v35 = 1;
  memcpy(v36, v42, sizeof(v36));
  uint64_t v37 = v43;
  char v38 = v44;
  uint64_t v39 = v45;
  char v40 = v46;
  long long v41 = v47;
  uint64_t v12 = &v2[*(int *)(v4 + 24)];
  uint64_t v13 = type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
  uint64_t v14 = sub_1000082B4(&qword_10012B780);
  uint64_t v15 = sub_10003F560(&qword_10012B788, &qword_10012B780, &qword_10012B790, &qword_10012B798);
  sub_1000E4A70();
  sub_10003F644((uint64_t)v48);
  uint64_t v16 = (uint64_t *)&v12[*(int *)(v13 + 32)];
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  sub_10003A5C4((uint64_t)v2, (uint64_t)v6, type metadata accessor for SportsWidgetDynamicIslandCompactView);
  if (v17)
  {
    uint64_t v19 = v17;
  }
  else
  {
    uint64_t v20 = &v6[*(int *)(v4 + 24) + (uint64_t)*(int *)(v13 + 28)];
    uint64_t v18 = *(void *)v20;
    uint64_t v19 = *((void *)v20 + 1);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_10003AB6C((uint64_t)v6, type metadata accessor for SportsWidgetDynamicIslandCompactView);
  uint64_t v33 = v18;
  uint64_t v34 = v19;
  sub_100014158();
  uint64_t v21 = sub_1000E4A00();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v26 = v30;
  uint64_t v27 = v32;
  sub_1000E4AE0();
  sub_1000141AC(v21, v23, v25);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v27, v26);
}

uint64_t sub_100038F00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)(a1 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandCompactView(0) + 24));
  uint64_t v5 = v4[2];
  uint64_t v6 = v4[3];
  uint64_t v8 = v4[4];
  unint64_t v7 = v4[5];
  __dst = a2;
  if (v7)
  {
    uint64_t v9 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v9 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (!(v9 | v6)) {
      goto LABEL_5;
    }
  }
  else if (!v6)
  {
LABEL_5:
    uint64_t v10 = (void *)((char *)v4
                   + *(int *)(type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0) + 28));
    uint64_t v11 = v10[1];
    __src[0] = *v10;
    __src[1] = v11;
    sub_100014158();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1000E4A00();
    uint64_t v14 = v13;
    char v16 = v15 & 1;
    uint64_t v17 = sub_1000E4940();
    uint64_t v19 = v18;
    char v21 = v20 & 1;
    sub_1000141AC(v12, v14, v16);
    swift_bridgeObjectRelease();
    uint64_t v74 = sub_1000E4970();
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26 & 1;
    sub_1000141AC(v17, v19, v21);
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(a1 + 96);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v30 = *(unsigned __int8 *)(a1 + 104);
    uint64_t v31 = swift_getKeyPath();
    uint64_t v32 = *(void *)(a1 + 112);
    uint64_t v80 = v74;
    *(void *)&long long v81 = v23;
    *((void *)&v81 + 1) = v27;
    *(void *)&long long v82 = v25;
    *((void *)&v82 + 1) = KeyPath;
    *(void *)uint64_t v83 = v28;
    *(void *)&v83[8] = 0;
    *(void *)&v83[16] = v31;
    *(void *)&v83[24] = v30;
    *(void *)&v83[32] = swift_getKeyPath();
    *(void *)&long long v84 = v32;
    BYTE8(v84) = 1;
    goto LABEL_8;
  }
  uint64_t v33 = *(void *)(a1 + 72);
  uint64_t v34 = *v4;
  uint64_t v35 = v4[1];
  uint64_t v80 = *(void *)(a1 + 64);
  *(void *)&long long v81 = v33;
  *((void *)&v81 + 1) = v34;
  *(void *)&long long v82 = v35;
  *((void *)&v82 + 1) = v5;
  *(void *)uint64_t v83 = v6;
  *(void *)&v83[8] = v8;
  *(void *)&v83[16] = v7;
  *(void *)&long long v84 = 0;
  *(void *)&v83[24] = 0;
  *(void *)&v83[32] = 0;
  BYTE8(v84) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  sub_1000082B4(&qword_10012A248);
  sub_100014448();
  sub_10001449C();
  sub_1000E4690();
  uint64_t v36 = __src[0];
  uint64_t v37 = __src[1];
  uint64_t v38 = __src[2];
  uint64_t v39 = __src[3];
  uint64_t v63 = __src[6];
  uint64_t v64 = __src[4];
  uint64_t v73 = __src[5];
  uint64_t v75 = __src[7];
  uint64_t v68 = __src[8];
  uint64_t v40 = type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
  uint64_t v71 = __src[1];
  uint64_t v72 = __src[0];
  uint64_t v70 = __src[2];
  uint64_t v66 = __src[10];
  uint64_t v67 = __src[9];
  char v65 = __src[11];
  if (*((unsigned char *)v4 + *(int *)(v40 + 36)) == 1)
  {
    uint64_t v41 = v40;
    uint64_t v62 = __src[3];
    sub_1000E4F50();
    sub_1000E40A0();
    if (*((unsigned char *)v4 + *(int *)(v41 + 40)) == 1)
    {
      sub_1000459B8((uint64_t)v93);
      long long v81 = v93[0];
      long long v82 = v93[1];
      *(_OWORD *)uint64_t v83 = v93[2];
      *(_OWORD *)&v83[16] = v93[3];
      uint64_t v80 = 3;
      *(void *)&v83[32] = v94;
      long long v84 = v95;
      uint64_t v85 = v96;
      char v86 = 0;
      sub_10001409C();
      sub_10001453C();
    }
    else
    {
      uint64_t v42 = v4[7];
      uint64_t v43 = *(void *)(a1 + 16);
      uint64_t v44 = *(void *)(a1 + 24);
      uint64_t v45 = *(void *)(a1 + 32);
      uint64_t v46 = *(unsigned __int8 *)(a1 + 40);
      uint64_t v80 = v4[6];
      *(void *)&long long v81 = v42;
      *((void *)&v81 + 1) = v43;
      *(void *)&long long v82 = v44;
      *((void *)&v82 + 1) = v45;
      *(void *)uint64_t v83 = v46;
      *(_OWORD *)&v83[8] = *(_OWORD *)(a1 + 48);
      *(_OWORD *)&v83[24] = 0u;
      long long v84 = 0u;
      uint64_t v85 = 0;
      char v86 = 1;
      sub_10001409C();
      sub_10001453C();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    sub_1000E4690();
    uint64_t v47 = __src[0];
    uint64_t v48 = __src[1];
    uint64_t v49 = __src[2];
    uint64_t v50 = __src[3];
    uint64_t v51 = __src[4];
    v79[0] = 1;
    v77[0] = v88;
    v76[0] = v90;
    uint64_t v52 = __src[9];
    uint64_t v58 = __src[10];
    uint64_t v59 = __src[11];
    uint64_t v60 = __src[12];
    char v61 = __src[13];
    sub_10003AE38(__src[0], __src[1], __src[2], __src[3], __src[4], __src[5], __src[6], __src[7], __src[8], __src[9], __src[10], __src[11], __src[12], __src[13]);
    uint64_t v54 = __src[8];
    uint64_t v53 = __src[7];
    uint64_t v56 = __src[6];
    uint64_t v55 = __src[5];
    sub_10001460C(__src[0], __src[1], __src[2], __src[3], __src[4], __src[5], __src[6], __src[7], __src[8], __src[9], __src[10], __src[11], __src[12], __src[13]);
    __src[0] = 0;
    LOBYTE(__src[1]) = 1;
    __src[2] = v87;
    LOBYTE(__src[3]) = v88;
    __src[4] = v89;
    LOBYTE(__src[5]) = v90;
    __src[6] = v91;
    __src[7] = v92;
    __src[8] = v47;
    __src[9] = v48;
    __src[10] = v49;
    __src[11] = v50;
    __src[12] = v51;
    __src[13] = v55;
    __src[14] = v56;
    __src[15] = v53;
    __src[16] = v54;
    __src[17] = v52;
    __src[18] = v58;
    __src[19] = v59;
    __src[20] = v60;
    LOBYTE(__src[21]) = v61;
    nullsub_1(__src);
    sub_100014B08((uint64_t)__src, (uint64_t)&v80, &qword_10012B7A8);
    uint64_t v37 = v71;
    uint64_t v36 = v72;
    uint64_t v38 = v70;
    uint64_t v39 = v62;
  }
  else
  {
    sub_10003F7A0((uint64_t)__src);
    sub_100014B08((uint64_t)__src, (uint64_t)&v80, &qword_10012B7A8);
  }
  sub_100014B08((uint64_t)&v80, (uint64_t)v76, &qword_10012B7A8);
  sub_100014B08((uint64_t)v76, (uint64_t)v77, &qword_10012B7A8);
  __src[0] = v36;
  __src[1] = v37;
  __src[2] = v38;
  __src[3] = v39;
  __src[4] = v64;
  __src[5] = v73;
  __src[6] = v63;
  __src[7] = v75;
  __src[8] = v68;
  __src[9] = v67;
  __src[10] = v66;
  LOBYTE(__src[11]) = v65;
  sub_100014B08((uint64_t)v77, (uint64_t)&__src[12], &qword_10012B7A8);
  memcpy(__dst, __src, 0x109uLL);
  sub_100014B08((uint64_t)v76, (uint64_t)v79, &qword_10012B7A8);
  sub_10003ABCC(v36, v37, v38, v39, v64, v73, v63, v75, v68, v67, v66, v65);
  sub_10003F80C((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10003F7C8);
  sub_10003F80C((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10003F75C);
  return sub_10003AC90(v72, v71, v70, v39, v64, v73, v63, v75, v68, v67, v66, v65);
}

void *sub_100039620@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)(a1 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandCompactView(0) + 24));
  uint64_t v5 = type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
  uint64_t v6 = v5;
  char v65 = a2;
  if (*((unsigned char *)v4 + *(int *)(v5 + 36)) == 1)
  {
    uint64_t v60 = v5;
    if (*((unsigned char *)v4 + *(int *)(v5 + 40)) == 1)
    {
      sub_1000459B8((uint64_t)v82);
      long long v93 = v82[0];
      long long v94 = v82[1];
      *(_OWORD *)long long v95 = v82[2];
      *(_OWORD *)&v95[16] = v82[3];
      uint64_t v92 = 3;
      *(void *)&v95[32] = v83;
      long long v96 = v84;
      uint64_t v97 = v85;
      char v98 = 0;
      sub_10001409C();
      sub_10001453C();
    }
    else
    {
      uint64_t v7 = v4[7];
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = *(unsigned __int8 *)(a1 + 40);
      uint64_t v92 = v4[6];
      *(void *)&long long v93 = v7;
      *((void *)&v93 + 1) = v8;
      *(void *)&long long v94 = v9;
      *((void *)&v94 + 1) = v10;
      *(void *)long long v95 = v11;
      *(_OWORD *)&v95[8] = *(_OWORD *)(a1 + 48);
      *(_OWORD *)&v95[24] = 0u;
      long long v96 = 0u;
      uint64_t v97 = 0;
      char v98 = 1;
      sub_10001409C();
      sub_10001453C();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    sub_1000E4690();
    sub_1000E4F50();
    sub_1000E40A0();
    uint64_t v57 = v88;
    uint64_t v58 = v86;
    char v53 = v87;
    char v54 = v89;
    uint64_t v56 = v90;
    uint64_t v55 = v91;
    LOBYTE(v70) = __src[13];
    LOBYTE(v68[0]) = 1;
    v67[0] = v87;
    sub_10003AE38(__src[0], __src[1], __src[2], __src[3], __src[4], __src[5], __src[6], __src[7], __src[8], __src[9], __src[10], __src[11], __src[12], __src[13]);
    sub_10001460C(__src[0], __src[1], __src[2], __src[3], __src[4], __src[5], __src[6], __src[7], __src[8], __src[9], __src[10], __src[11], __src[12], __src[13]);
    __src[14] = 0;
    LOBYTE(__src[15]) = 1;
    __src[16] = v58;
    LOBYTE(__src[17]) = v53;
    __src[18] = v57;
    LOBYTE(__src[19]) = v54;
    __src[20] = v56;
    __src[21] = v55;
    nullsub_1(__src);
    sub_100014B08((uint64_t)__src, (uint64_t)&v92, &qword_10012B7B0);
    uint64_t v6 = v60;
  }
  else
  {
    sub_10003F880((uint64_t)__src);
    sub_100014B08((uint64_t)__src, (uint64_t)&v92, &qword_10012B7B0);
  }
  uint64_t v12 = v4[2];
  uint64_t v13 = v4[3];
  uint64_t v15 = v4[4];
  unint64_t v14 = v4[5];
  if (v14)
  {
    uint64_t v16 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0) {
      uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
    }
    if (!(v16 | v13)) {
      goto LABEL_11;
    }
LABEL_13:
    uint64_t v42 = *(void *)(a1 + 64);
    uint64_t v43 = *(void *)(a1 + 72);
    uint64_t v44 = *v4;
    uint64_t v45 = v4[1];
    uint64_t v70 = v42;
    uint64_t v71 = v43;
    uint64_t v72 = v44;
    uint64_t v73 = v45;
    uint64_t v74 = v12;
    uint64_t v75 = v13;
    uint64_t v76 = v15;
    uint64_t v77 = v14;
    uint64_t v80 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    char v81 = 0;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  if (v13) {
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v17 = (void *)((char *)v4 + *(int *)(v6 + 28));
  uint64_t v18 = v17[1];
  __src[0] = *v17;
  __src[1] = v18;
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1000E4A00();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  uint64_t v24 = sub_1000E4940();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  sub_1000141AC(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_1000E4970();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34 & 1;
  sub_1000141AC(v24, v26, v28);
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(a1 + 96);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = *(unsigned __int8 *)(a1 + 104);
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = *(void *)(a1 + 112);
  uint64_t v41 = swift_getKeyPath();
  uint64_t v70 = v29;
  uint64_t v71 = v31;
  uint64_t v72 = v35;
  uint64_t v73 = v33;
  uint64_t v74 = KeyPath;
  uint64_t v75 = v36;
  uint64_t v76 = 0;
  uint64_t v77 = v39;
  uint64_t v78 = v38;
  uint64_t v79 = v41;
  uint64_t v80 = v40;
  char v81 = 1;
LABEL_14:
  sub_1000082B4(&qword_10012A248);
  sub_100014448();
  sub_10001449C();
  sub_1000E4690();
  uint64_t v46 = __src[0];
  uint64_t v47 = __src[1];
  uint64_t v48 = __src[2];
  uint64_t v49 = __src[3];
  uint64_t v50 = __src[4];
  uint64_t v59 = __src[5];
  uint64_t v66 = __src[6];
  uint64_t v51 = __src[7];
  uint64_t v63 = __src[9];
  uint64_t v64 = __src[8];
  uint64_t v62 = __src[10];
  char v61 = __src[11];
  sub_100014B08((uint64_t)&v92, (uint64_t)v67, &qword_10012B7B0);
  sub_100014B08((uint64_t)v67, (uint64_t)v68, &qword_10012B7B0);
  sub_100014B08((uint64_t)v68, (uint64_t)__src, &qword_10012B7B0);
  __src[22] = v46;
  __src[23] = v47;
  __src[24] = v48;
  __src[25] = v49;
  __src[26] = v50;
  __src[27] = v59;
  __src[28] = v66;
  __src[29] = v51;
  __src[30] = v64;
  __src[31] = v63;
  __src[32] = v62;
  LOBYTE(__src[33]) = v61;
  memcpy(v65, __src, 0x109uLL);
  sub_10003F8DC(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F8A4);
  sub_10003ABCC(v46, v47, v48, v49, v50, v59, v66, v51, v64, v63, v62, v61);
  sub_10003AC90(v46, v47, v48, v49, v50, v59, v66, v51, v64, v63, v62, v61);
  sub_100014B08((uint64_t)v67, (uint64_t)&v70, &qword_10012B7B0);
  return sub_10003F8DC(&v70, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F420);
}

uint64_t sub_100039D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000082B4(&qword_10012B7B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E4F50();
  uint64_t v8 = v7;
  sub_100039EF8((uint64_t)v1, v20);
  memcpy(v19, v20, sizeof(v19));
  v18[4] = v6;
  v18[5] = v8;
  uint64_t v9 = v1[44];
  if (v9)
  {
    uint64_t v10 = v1[43];
    uint64_t v11 = v9;
  }
  else
  {
    uint64_t v10 = v1[13];
    uint64_t v11 = swift_bridgeObjectRetain();
  }
  v18[2] = v10;
  v18[3] = v11;
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1000E4A00();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_1000082B4(&qword_10012B7C0);
  sub_100014AC4(&qword_10012B7C8, &qword_10012B7C0);
  sub_1000E4AE0();
  sub_1000141AC(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_10003F948((uint64_t)v20);
  return sub_100014B08((uint64_t)v5, a1, &qword_10012B7B8);
}

uint64_t sub_100039EF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 248);
  long long v4 = *(_OWORD *)(a1 + 280);
  *(_OWORD *)&v85[80] = *(_OWORD *)(a1 + 264);
  *(_OWORD *)&v85[96] = v4;
  *(_OWORD *)&v85[112] = *(_OWORD *)(a1 + 296);
  long long v5 = *(_OWORD *)(a1 + 184);
  long long v6 = *(_OWORD *)(a1 + 216);
  *(_OWORD *)&v85[16] = *(_OWORD *)(a1 + 200);
  *(_OWORD *)&v85[32] = v6;
  *(_OWORD *)&v85[48] = *(_OWORD *)(a1 + 232);
  *(_OWORD *)&v85[64] = v3;
  long long v7 = *(_OWORD *)(a1 + 120);
  long long v8 = *(_OWORD *)(a1 + 152);
  long long v82 = *(_OWORD *)(a1 + 136);
  long long v83 = v8;
  long long v84 = *(_OWORD *)(a1 + 168);
  *(_OWORD *)uint64_t v85 = v5;
  long long v9 = *(_OWORD *)(a1 + 88);
  long long v78 = *(_OWORD *)(a1 + 72);
  long long v79 = v9;
  long long v80 = *(_OWORD *)(a1 + 104);
  long long v81 = v7;
  uint64_t v10 = *(void *)(a1 + 312);
  uint64_t v11 = *(void *)(a1 + 320);
  uint64_t v12 = *(void *)(a1 + 328);
  uint64_t v13 = *(void *)(a1 + 336);
  long long v14 = *(_OWORD *)(a1 + 152);
  v88[4] = *(_OWORD *)(a1 + 136);
  v88[5] = v14;
  v88[6] = *(_OWORD *)(a1 + 168);
  char v89 = *(unsigned char *)(a1 + 184);
  long long v15 = *(_OWORD *)(a1 + 88);
  v88[0] = *(_OWORD *)(a1 + 72);
  v88[1] = v15;
  long long v16 = *(_OWORD *)(a1 + 120);
  v88[2] = *(_OWORD *)(a1 + 104);
  v88[3] = v16;
  uint64_t v42 = sub_1000E4F50();
  uint64_t v18 = v17;
  uint64_t v38 = v17;
  sub_10003A36C((void *)a1, (uint64_t)v88, (uint64_t)&v56);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 32);
  uint64_t v21 = *(void *)(a1 + 40);
  uint64_t v22 = *(void *)(a1 + 48);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v23 = v67;
  char v24 = v68;
  uint64_t v44 = v69;
  char v25 = v70;
  uint64_t v26 = v71;
  uint64_t v40 = v71;
  uint64_t v41 = v67;
  uint64_t v36 = v72;
  char v91 = v68;
  char v39 = v68;
  char v90 = v70;
  char v37 = v70;
  v86[4] = *(_OWORD *)&v85[72];
  v86[5] = *(_OWORD *)&v85[88];
  v86[6] = *(_OWORD *)&v85[104];
  char v87 = v85[120];
  v86[0] = *(_OWORD *)&v85[8];
  v86[1] = *(_OWORD *)&v85[24];
  v86[2] = *(_OWORD *)&v85[40];
  v86[3] = *(_OWORD *)&v85[56];
  uint64_t v27 = sub_1000E4F50();
  uint64_t v35 = v28;
  sub_10003A36C((void *)a1, (uint64_t)v86, (uint64_t)&v45);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v29 = v73;
  char v30 = v74;
  char v31 = v76;
  char v93 = v74;
  char v92 = v76;
  *(void *)&__src[0] = v42;
  *((void *)&__src[0] + 1) = v18;
  __src[9] = v64;
  __src[10] = v65;
  __src[11] = v66;
  __src[5] = v60;
  __src[6] = v61;
  __src[8] = v63;
  __src[7] = v62;
  __src[1] = v56;
  __src[2] = v57;
  __src[4] = v59;
  __src[3] = v58;
  *(void *)&__src[12] = v23;
  BYTE8(__src[12]) = v24;
  *(void *)&__src[13] = v44;
  BYTE8(__src[13]) = v25;
  *(void *)&__src[14] = v26;
  *((void *)&__src[14] + 1) = v36;
  *(void *)&__src[15] = v10;
  *((void *)&__src[15] + 1) = v19;
  *(void *)&__src[16] = v20;
  *((void *)&__src[16] + 1) = v12;
  *(void *)&v95[0] = v27;
  *((void *)&v95[0] + 1) = v35;
  v95[9] = v53;
  v95[10] = v54;
  v95[11] = v55;
  v95[5] = v49;
  v95[6] = v50;
  v95[8] = v52;
  v95[7] = v51;
  v95[1] = v45;
  v95[2] = v46;
  v95[4] = v48;
  v95[3] = v47;
  *(void *)&v95[12] = v73;
  BYTE8(v95[12]) = v74;
  *(void *)&v95[13] = v75;
  uint64_t v32 = v75;
  BYTE8(v95[13]) = v76;
  v95[14] = v77;
  long long v33 = v77;
  *(void *)&v95[15] = v11;
  *((void *)&v95[15] + 1) = v21;
  *(void *)&v95[16] = v22;
  *((void *)&v95[16] + 1) = v13;
  memcpy(__dst, __src, 0x110uLL);
  memcpy(&__dst[272], v95, 0x110uLL);
  memcpy(a2, __dst, 0x220uLL);
  v97[0] = v27;
  v97[1] = v35;
  long long v106 = v53;
  long long v107 = v54;
  long long v108 = v55;
  long long v102 = v49;
  long long v103 = v50;
  long long v105 = v52;
  long long v104 = v51;
  long long v98 = v45;
  long long v99 = v46;
  long long v101 = v48;
  long long v100 = v47;
  uint64_t v109 = v29;
  char v110 = v30;
  uint64_t v111 = v32;
  char v112 = v31;
  long long v113 = v33;
  uint64_t v114 = v11;
  uint64_t v115 = v21;
  uint64_t v116 = v22;
  uint64_t v117 = v13;
  sub_10003FA44((uint64_t)__src);
  sub_10003FA44((uint64_t)v95);
  sub_10003FAD0((uint64_t)v97);
  v118[0] = v42;
  v118[1] = v38;
  long long v127 = v64;
  long long v128 = v65;
  long long v129 = v66;
  long long v123 = v60;
  long long v124 = v61;
  long long v126 = v63;
  long long v125 = v62;
  long long v119 = v56;
  long long v120 = v57;
  long long v122 = v59;
  long long v121 = v58;
  uint64_t v130 = v41;
  char v131 = v39;
  uint64_t v132 = v44;
  char v133 = v37;
  uint64_t v134 = v40;
  uint64_t v135 = v36;
  uint64_t v136 = v10;
  uint64_t v137 = v19;
  uint64_t v138 = v20;
  uint64_t v139 = v12;
  return sub_10003FAD0((uint64_t)v118);
}

uint64_t sub_10003A36C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 104);
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[7];
  swift_retain();
  sub_1000E4000();
  uint64_t v9 = sub_1000E4F50();
  uint64_t v11 = v10;
  swift_retain();
  uint64_t v12 = sub_1000E4F50();
  uint64_t v13 = *(void *)(a2 + 48);
  uint64_t v14 = *(void *)(a2 + 56);
  uint64_t v15 = *(void *)(a2 + 64);
  uint64_t v16 = *(void *)(a2 + 88);
  *(double *)a3 = v19 * 0.5;
  *(double *)(a3 + 8) = v19;
  *(void *)(a3 + 16) = v20;
  *(void *)(a3 + 24) = v21;
  *(void *)(a3 + 32) = v22;
  *(void *)(a3 + 40) = v23;
  *(void *)(a3 + 48) = v8;
  *(_WORD *)(a3 + 56) = 256;
  *(void *)(a3 + 64) = v9;
  *(void *)(a3 + 72) = v11;
  *(void *)(a3 + 80) = v5;
  *(_WORD *)(a3 + 88) = 256;
  *(void *)(a3 + 96) = v12;
  *(void *)(a3 + 104) = v17;
  *(void *)(a3 + 112) = v6;
  *(void *)(a3 + 120) = v7;
  *(void *)(a3 + 128) = v13;
  *(void *)(a3 + 136) = v14;
  *(void *)(a3 + 144) = v15;
  *(_OWORD *)(a3 + 152) = *(_OWORD *)(a2 + 72);
  *(void *)(a3 + 168) = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_10003A4C4@<X0>(uint64_t a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_100039D50(a1);
}

uint64_t sub_10003A510()
{
  return sub_1000E4390();
}

uint64_t sub_10003A534()
{
  return sub_1000E4390();
}

uint64_t sub_10003A558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003A838(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_10003A584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003A838(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_10003A5C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003A62C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000E44C0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10003A660()
{
  return sub_1000E44D0();
}

uint64_t sub_10003A690@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000E4420();
  *a1 = result;
  return result;
}

uint64_t sub_10003A6BC()
{
  return sub_1000E4430();
}

uint64_t sub_10003A6E4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E4400();
  *a1 = v3;
  return result;
}

uint64_t sub_10003A710()
{
  return sub_1000E4410();
}

uint64_t sub_10003A738@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000E43A0();
  *a1 = result;
  return result;
}

uint64_t sub_10003A764()
{
  return sub_1000E43B0();
}

uint64_t sub_10003A790@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000E4440();
  *a1 = result;
  return result;
}

uint64_t sub_10003A7BC()
{
  return sub_1000E4450();
}

uint64_t sub_10003A7E8()
{
  return sub_1000E4330();
}

uint64_t sub_10003A80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003A838(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

uint64_t sub_10003A838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10003A908(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10003A978(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10003A978(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10003A988(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000141AC(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10003A9F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000E44C0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10003AA2C()
{
  return sub_1000E44D0();
}

uint64_t sub_10003AA5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000E4420();
  *a1 = result;
  return result;
}

uint64_t sub_10003AA88()
{
  return sub_1000E4430();
}

uint64_t sub_10003AAB0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E4400();
  *a1 = v3;
  return result;
}

uint64_t sub_10003AADC()
{
  return sub_1000E4410();
}

uint64_t sub_10003AB04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003AB6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003ABCC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if (a12)
  {
    sub_10003A978(a1, a2, a3 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10003AC90(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if (a12)
  {
    sub_1000141AC(a1, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003AD24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000E43A0();
  *a1 = result;
  return result;
}

uint64_t sub_10003AD50()
{
  return sub_1000E43B0();
}

uint64_t sub_10003AD7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000E4440();
  *a1 = result;
  return result;
}

uint64_t sub_10003ADA8()
{
  return sub_1000E4450();
}

uint64_t sub_10003ADD4()
{
  return sub_1000E4330();
}

uint64_t sub_10003ADF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003A838(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

uint64_t sub_10003AE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a14) {
    swift_bridgeObjectRetain();
  }
  else {
    swift_retain();
  }
  swift_retain();

  return swift_retain();
}

uint64_t sub_10003AE98(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v35 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    long long v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    uint64_t v8 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v8;
    *(void *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    uint64_t v10 = a2[19];
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v10;
    *(void *)(a1 + 160) = a2[20];
    uint64_t v11 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
    uint64_t v12 = *(int *)(v11 + 92);
    uint64_t v85 = a1 + v12;
    uint64_t v88 = v11;
    uint64_t v84 = (uint64_t)a2 + v12;
    uint64_t v13 = sub_1000E4CF0();
    long long v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v81(v85, v84, v13);
    *(void *)(a1 + *(int *)(v88 + 96)) = *(uint64_t *)((char *)a2 + *(int *)(v88 + 96));
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v77 = a1;
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    *(void *)uint64_t v15 = *(uint64_t *)((char *)a2 + v14);
    *(void *)(v15 + 8) = v17;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v14 + 24);
    *(void *)(v15 + 16) = *(uint64_t *)((char *)a2 + v14 + 16);
    *(void *)(v15 + 24) = v18;
    uint64_t v19 = *(uint64_t *)((char *)a2 + v14 + 40);
    *(void *)(v15 + 32) = *(uint64_t *)((char *)a2 + v14 + 32);
    *(void *)(v15 + 40) = v19;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v14 + 56);
    *(void *)(v15 + 48) = *(uint64_t *)((char *)a2 + v14 + 48);
    *(void *)(v15 + 56) = v20;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v14 + 72);
    *(void *)(v15 + 64) = *(uint64_t *)((char *)a2 + v14 + 64);
    *(void *)(v15 + 72) = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v14 + 88);
    *(void *)(v15 + 80) = *(uint64_t *)((char *)a2 + v14 + 80);
    *(void *)(v15 + 88) = v22;
    *(unsigned char *)(v15 + 96) = *((unsigned char *)a2 + v14 + 96);
    *(void *)(v15 + 104) = *(uint64_t *)((char *)a2 + v14 + 104);
    *(unsigned char *)(v15 + 112) = *((unsigned char *)a2 + v14 + 112);
    uint64_t v23 = *(uint64_t *)((char *)a2 + v14 + 128);
    *(void *)(v15 + 120) = *(uint64_t *)((char *)a2 + v14 + 120);
    *(void *)(v15 + 128) = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v14 + 144);
    *(void *)(v15 + 136) = *(void *)(v16 + 136);
    *(void *)(v15 + 144) = v24;
    uint64_t v25 = *(void *)(v16 + 160);
    *(void *)(v15 + 152) = *(void *)(v16 + 152);
    *(void *)(v15 + 160) = v25;
    uint64_t v26 = *(void *)(v16 + 176);
    *(void *)(v15 + 168) = *(void *)(v16 + 168);
    *(void *)(v15 + 176) = v26;
    uint64_t v27 = *(void *)(v16 + 192);
    *(void *)(v15 + 184) = *(void *)(v16 + 184);
    *(void *)(v15 + 192) = v27;
    uint64_t v28 = *(void *)(v16 + 208);
    *(void *)(v15 + 200) = *(void *)(v16 + 200);
    *(void *)(v15 + 208) = v28;
    *(unsigned char *)(v15 + 216) = *(unsigned char *)(v16 + 216);
    *(void *)(v15 + 224) = *(void *)(v16 + 224);
    *(unsigned char *)(v15 + 232) = *(unsigned char *)(v16 + 232);
    uint64_t v76 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
    uint64_t v29 = *(int *)(v76 + 24);
    long long v78 = (void *)(v15 + v29);
    char v30 = (char *)(v16 + v29);
    type metadata accessor for SportsWidgetClock(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v37 = *((void *)v30 + 1);
      *long long v78 = *(void *)v30;
      v78[1] = v37;
      uint64_t v38 = *((void *)v30 + 3);
      v78[2] = *((void *)v30 + 2);
      v78[3] = v38;
      uint64_t v39 = *((void *)v30 + 5);
      v78[4] = *((void *)v30 + 4);
      v78[5] = v39;
      uint64_t v40 = *((void *)v30 + 7);
      v78[6] = *((void *)v30 + 6);
      v78[7] = v40;
      uint64_t v41 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v42 = *(int *)(v41 + 32);
      long long v79 = &v30[v42];
      long long v82 = (char *)v78 + v42;
      uint64_t v43 = sub_1000E3EE0();
      uint64_t v89 = *(void *)(v43 - 8);
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v45 = v41;
      swift_bridgeObjectRetain();
      v44(v82, v79, v43);
      uint64_t v46 = sub_1000082B4(&qword_100129F28);
      uint64_t v86 = v44;
      v44(&v82[*(int *)(v46 + 36)], &v79[*(int *)(v46 + 36)], v43);
      uint64_t v47 = *(int *)(v41 + 36);
      long long v48 = (char *)v78 + v47;
      long long v49 = &v30[v47];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(&v30[v47], 1, v43))
      {
        uint64_t v50 = sub_1000082B4(&qword_100129F30);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        v86(v48, v49, v43);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v48, 0, 1, v43);
      }
      uint64_t v36 = (int *)v76;
      uint64_t v35 = v77;
      *((unsigned char *)v78 + *(int *)(v45 + 40)) = v30[*(int *)(v45 + 40)];
      *((unsigned char *)v78 + *(int *)(v45 + 44)) = v30[*(int *)(v45 + 44)];
      uint64_t v65 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v78 + *(int *)(v65 + 20)) = *(void *)&v30[*(int *)(v65 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v32 = *((void *)v30 + 1);
      *long long v78 = *(void *)v30;
      v78[1] = v32;
      uint64_t v33 = *((void *)v30 + 3);
      v78[2] = *((void *)v30 + 2);
      v78[3] = v33;
      uint64_t v34 = *((void *)v30 + 5);
      v78[4] = *((void *)v30 + 4);
      v78[5] = v34;
      *((unsigned char *)v78 + 48) = v30[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v36 = (int *)v76;
      uint64_t v35 = v77;
    }
    else
    {
      uint64_t v51 = *((void *)v30 + 1);
      *long long v78 = *(void *)v30;
      v78[1] = v51;
      uint64_t v52 = *((void *)v30 + 3);
      v78[2] = *((void *)v30 + 2);
      v78[3] = v52;
      uint64_t v53 = *((void *)v30 + 5);
      v78[4] = *((void *)v30 + 4);
      v78[5] = v53;
      uint64_t v54 = *((void *)v30 + 7);
      v78[6] = *((void *)v30 + 6);
      v78[7] = v54;
      uint64_t v55 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v56 = *(int *)(v55 + 32);
      long long v80 = &v30[v56];
      long long v83 = (char *)v78 + v56;
      uint64_t v57 = sub_1000E3EE0();
      uint64_t v90 = *(void *)(v57 - 8);
      long long v58 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v59 = v55;
      swift_bridgeObjectRetain();
      v58(v83, v80, v57);
      uint64_t v60 = sub_1000082B4(&qword_100129F28);
      char v87 = v58;
      v58(&v83[*(int *)(v60 + 36)], &v80[*(int *)(v60 + 36)], v57);
      uint64_t v61 = *(int *)(v55 + 36);
      long long v62 = (char *)v78 + v61;
      long long v63 = &v30[v61];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(&v30[v61], 1, v57))
      {
        uint64_t v64 = sub_1000082B4(&qword_100129F30);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        v87(v62, v63, v57);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v62, 0, 1, v57);
      }
      uint64_t v36 = (int *)v76;
      uint64_t v35 = v77;
      *((unsigned char *)v78 + *(int *)(v59 + 40)) = v30[*(int *)(v59 + 40)];
      *((unsigned char *)v78 + *(int *)(v59 + 44)) = v30[*(int *)(v59 + 44)];
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = v36[7];
    uint64_t v67 = v15 + v66;
    uint64_t v68 = v16 + v66;
    uint64_t v69 = *(void *)(v68 + 8);
    *(void *)uint64_t v67 = *(void *)v68;
    *(void *)(v67 + 8) = v69;
    *(unsigned char *)(v67 + 16) = *(unsigned char *)(v68 + 16);
    *(void *)(v67 + 24) = *(void *)(v68 + 24);
    *(unsigned char *)(v67 + 32) = *(unsigned char *)(v68 + 32);
    *(void *)(v67 + 40) = *(void *)(v68 + 40);
    *(unsigned char *)(v67 + 48) = *(unsigned char *)(v68 + 48);
    uint64_t v70 = v36[8];
    uint64_t v71 = (void *)(v15 + v70);
    uint64_t v72 = (void *)(v16 + v70);
    uint64_t v73 = v72[1];
    *uint64_t v71 = *v72;
    v71[1] = v73;
    uint64_t v74 = v72[3];
    v71[2] = v72[2];
    v71[3] = v74;
    *(unsigned char *)(v15 + v36[9]) = *(unsigned char *)(v16 + v36[9]);
    *(unsigned char *)(v15 + v36[10]) = *(unsigned char *)(v16 + v36[10]);
    *(unsigned char *)(v15 + v36[11]) = *(unsigned char *)(v16 + v36[11]);
    *(unsigned char *)(v15 + v36[12]) = *(unsigned char *)(v16 + v36[12]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v35;
}

uint64_t sub_10003B664(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout() + 92);
  uint64_t v5 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0) + 24);
  type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v17 = v7 + *(int *)(v16 + 32);
      uint64_t v18 = sub_1000E3EE0();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v20(v17, v18);
      uint64_t v21 = sub_1000082B4(&qword_100129F28);
      v20(v17 + *(int *)(v21 + 36), v18);
      uint64_t v22 = v7 + *(int *)(v16 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v22, 1, v18)) {
        v20(v22, v18);
      }
      type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      goto LABEL_10;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v10 = v7 + *(int *)(v9 + 32);
      uint64_t v11 = sub_1000E3EE0();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v13(v10, v11);
      uint64_t v14 = sub_1000082B4(&qword_100129F28);
      v13(v10 + *(int *)(v14 + 36), v11);
      uint64_t v15 = v7 + *(int *)(v9 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v15, 1, v11)) {
        v13(v15, v11);
      }
      break;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003BA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v8;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v9 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
  uint64_t v10 = *(int *)(v9 + 92);
  uint64_t v83 = a1 + v10;
  uint64_t v86 = v9;
  uint64_t v82 = a2 + v10;
  uint64_t v11 = sub_1000E4CF0();
  long long v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v79(v83, v82, v11);
  *(void *)(a1 + *(int *)(v86 + 96)) = *(void *)(a2 + *(int *)(v86 + 96));
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v75 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(a2 + v12 + 24);
  *(void *)(v13 + 16) = *(void *)(a2 + v12 + 16);
  *(void *)(v13 + 24) = v16;
  uint64_t v17 = *(void *)(a2 + v12 + 40);
  *(void *)(v13 + 32) = *(void *)(a2 + v12 + 32);
  *(void *)(v13 + 40) = v17;
  uint64_t v18 = *(void *)(a2 + v12 + 56);
  *(void *)(v13 + 48) = *(void *)(a2 + v12 + 48);
  *(void *)(v13 + 56) = v18;
  uint64_t v19 = *(void *)(a2 + v12 + 72);
  *(void *)(v13 + 64) = *(void *)(a2 + v12 + 64);
  *(void *)(v13 + 72) = v19;
  uint64_t v20 = *(void *)(a2 + v12 + 88);
  *(void *)(v13 + 80) = *(void *)(a2 + v12 + 80);
  *(void *)(v13 + 88) = v20;
  *(unsigned char *)(v13 + 96) = *(unsigned char *)(a2 + v12 + 96);
  *(void *)(v13 + 104) = *(void *)(a2 + v12 + 104);
  *(unsigned char *)(v13 + 112) = *(unsigned char *)(a2 + v12 + 112);
  uint64_t v21 = *(void *)(a2 + v12 + 128);
  *(void *)(v13 + 120) = *(void *)(a2 + v12 + 120);
  *(void *)(v13 + 128) = v21;
  uint64_t v22 = *(void *)(a2 + v12 + 144);
  *(void *)(v13 + 136) = *(void *)(v14 + 136);
  *(void *)(v13 + 144) = v22;
  uint64_t v23 = *(void *)(v14 + 160);
  *(void *)(v13 + 152) = *(void *)(v14 + 152);
  *(void *)(v13 + 160) = v23;
  uint64_t v24 = *(void *)(v14 + 176);
  *(void *)(v13 + 168) = *(void *)(v14 + 168);
  *(void *)(v13 + 176) = v24;
  uint64_t v25 = *(void *)(v14 + 192);
  *(void *)(v13 + 184) = *(void *)(v14 + 184);
  *(void *)(v13 + 192) = v25;
  uint64_t v26 = *(void *)(v14 + 208);
  *(void *)(v13 + 200) = *(void *)(v14 + 200);
  *(void *)(v13 + 208) = v26;
  *(unsigned char *)(v13 + 216) = *(unsigned char *)(v14 + 216);
  *(void *)(v13 + 224) = *(void *)(v14 + 224);
  *(unsigned char *)(v13 + 232) = *(unsigned char *)(v14 + 232);
  uint64_t v74 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
  uint64_t v27 = *(int *)(v74 + 24);
  uint64_t v76 = (void *)(v13 + v27);
  uint64_t v28 = (char *)(v14 + v27);
  type metadata accessor for SportsWidgetClock(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v35 = *((void *)v28 + 1);
    void *v76 = *(void *)v28;
    v76[1] = v35;
    uint64_t v36 = *((void *)v28 + 3);
    v76[2] = *((void *)v28 + 2);
    v76[3] = v36;
    uint64_t v37 = *((void *)v28 + 5);
    v76[4] = *((void *)v28 + 4);
    v76[5] = v37;
    uint64_t v38 = *((void *)v28 + 7);
    v76[6] = *((void *)v28 + 6);
    _OWORD v76[7] = v38;
    uint64_t v39 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v40 = *(int *)(v39 + 32);
    uint64_t v77 = &v28[v40];
    long long v80 = (char *)v76 + v40;
    uint64_t v41 = sub_1000E3EE0();
    uint64_t v87 = *(void *)(v41 - 8);
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v43 = v39;
    swift_bridgeObjectRetain();
    v42(v80, v77, v41);
    uint64_t v44 = sub_1000082B4(&qword_100129F28);
    uint64_t v84 = v42;
    v42(&v80[*(int *)(v44 + 36)], &v77[*(int *)(v44 + 36)], v41);
    uint64_t v45 = *(int *)(v39 + 36);
    uint64_t v46 = (char *)v76 + v45;
    uint64_t v47 = &v28[v45];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(&v28[v45], 1, v41))
    {
      uint64_t v48 = sub_1000082B4(&qword_100129F30);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      v84(v46, v47, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v46, 0, 1, v41);
    }
    uint64_t v34 = (int *)v74;
    uint64_t v33 = a1;
    *((unsigned char *)v76 + *(int *)(v43 + 40)) = v28[*(int *)(v43 + 40)];
    *((unsigned char *)v76 + *(int *)(v43 + 44)) = v28[*(int *)(v43 + 44)];
    uint64_t v63 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v76 + *(int *)(v63 + 20)) = *(void *)&v28[*(int *)(v63 + 20)];
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v30 = *((void *)v28 + 1);
    void *v76 = *(void *)v28;
    v76[1] = v30;
    uint64_t v31 = *((void *)v28 + 3);
    v76[2] = *((void *)v28 + 2);
    v76[3] = v31;
    uint64_t v32 = *((void *)v28 + 5);
    v76[4] = *((void *)v28 + 4);
    v76[5] = v32;
    *((unsigned char *)v76 + 48) = v28[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = (int *)v74;
    uint64_t v33 = v75;
  }
  else
  {
    uint64_t v49 = *((void *)v28 + 1);
    void *v76 = *(void *)v28;
    v76[1] = v49;
    uint64_t v50 = *((void *)v28 + 3);
    v76[2] = *((void *)v28 + 2);
    v76[3] = v50;
    uint64_t v51 = *((void *)v28 + 5);
    v76[4] = *((void *)v28 + 4);
    v76[5] = v51;
    uint64_t v52 = *((void *)v28 + 7);
    v76[6] = *((void *)v28 + 6);
    _OWORD v76[7] = v52;
    uint64_t v53 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v54 = *(int *)(v53 + 32);
    long long v78 = &v28[v54];
    long long v81 = (char *)v76 + v54;
    uint64_t v55 = sub_1000E3EE0();
    uint64_t v88 = *(void *)(v55 - 8);
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v57 = v53;
    swift_bridgeObjectRetain();
    v56(v81, v78, v55);
    uint64_t v58 = sub_1000082B4(&qword_100129F28);
    uint64_t v85 = v56;
    v56(&v81[*(int *)(v58 + 36)], &v78[*(int *)(v58 + 36)], v55);
    uint64_t v59 = *(int *)(v53 + 36);
    uint64_t v60 = (char *)v76 + v59;
    uint64_t v61 = &v28[v59];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(&v28[v59], 1, v55))
    {
      uint64_t v62 = sub_1000082B4(&qword_100129F30);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      v85(v60, v61, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v60, 0, 1, v55);
    }
    uint64_t v34 = (int *)v74;
    uint64_t v33 = a1;
    *((unsigned char *)v76 + *(int *)(v57 + 40)) = v28[*(int *)(v57 + 40)];
    *((unsigned char *)v76 + *(int *)(v57 + 44)) = v28[*(int *)(v57 + 44)];
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = v34[7];
  uint64_t v65 = v13 + v64;
  uint64_t v66 = v14 + v64;
  uint64_t v67 = *(void *)(v66 + 8);
  *(void *)uint64_t v65 = *(void *)v66;
  *(void *)(v65 + 8) = v67;
  *(unsigned char *)(v65 + 16) = *(unsigned char *)(v66 + 16);
  *(void *)(v65 + 24) = *(void *)(v66 + 24);
  *(unsigned char *)(v65 + 32) = *(unsigned char *)(v66 + 32);
  *(void *)(v65 + 40) = *(void *)(v66 + 40);
  *(unsigned char *)(v65 + 48) = *(unsigned char *)(v66 + 48);
  uint64_t v68 = v34[8];
  uint64_t v69 = (void *)(v13 + v68);
  uint64_t v70 = (void *)(v14 + v68);
  uint64_t v71 = v70[1];
  void *v69 = *v70;
  v69[1] = v71;
  uint64_t v72 = v70[3];
  v69[2] = v70[2];
  v69[3] = v72;
  *(unsigned char *)(v13 + v34[9]) = *(unsigned char *)(v14 + v34[9]);
  *(unsigned char *)(v13 + v34[10]) = *(unsigned char *)(v14 + v34[10]);
  *(unsigned char *)(v13 + v34[11]) = *(unsigned char *)(v14 + v34[11]);
  *(unsigned char *)(v13 + v34[12]) = *(unsigned char *)(v14 + v34[12]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v33;
}

uint64_t sub_10003C1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_retain();
  swift_release();
  uint64_t v6 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
  uint64_t v7 = *(int *)(v6 + 92);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(v6 + 96)) = *(void *)(a2 + *(int *)(v6 + 96));
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 80) = *(void *)(v13 + 80);
  *(void *)(v12 + 88) = *(void *)(v13 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 96) = *(unsigned char *)(v13 + 96);
  *(void *)(v12 + 104) = *(void *)(v13 + 104);
  swift_retain();
  swift_release();
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  *(void *)(v12 + 120) = *(void *)(v13 + 120);
  *(void *)(v12 + 128) = *(void *)(v13 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 136) = *(void *)(v13 + 136);
  *(void *)(v12 + 144) = *(void *)(v13 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 152) = *(void *)(v13 + 152);
  *(void *)(v12 + 160) = *(void *)(v13 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 168) = *(void *)(v13 + 168);
  *(void *)(v12 + 176) = *(void *)(v13 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 184) = *(void *)(v13 + 184);
  *(void *)(v12 + 192) = *(void *)(v13 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 200) = *(void *)(v13 + 200);
  *(void *)(v12 + 208) = *(void *)(v13 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 216) = *(unsigned char *)(v13 + 216);
  *(void *)(v12 + 224) = *(void *)(v13 + 224);
  swift_retain();
  swift_release();
  *(unsigned char *)(v12 + 232) = *(unsigned char *)(v13 + 232);
  uint64_t v14 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
  uint64_t v15 = (int *)v14;
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(v14 + 24);
    uint64_t v17 = (void *)(v12 + v16);
    uint64_t v18 = (char *)(v13 + v16);
    sub_10003AB6C(v12 + v16, type metadata accessor for SportsWidgetClock);
    type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      void *v17 = *(void *)v18;
      v17[1] = *((void *)v18 + 1);
      v17[2] = *((void *)v18 + 2);
      v17[3] = *((void *)v18 + 3);
      v17[4] = *((void *)v18 + 4);
      v17[5] = *((void *)v18 + 5);
      v17[6] = *((void *)v18 + 6);
      v17[7] = *((void *)v18 + 7);
      uint64_t v48 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v20 = v48[8];
      uint64_t v21 = (char *)v17 + v20;
      uint64_t v22 = &v18[v20];
      uint64_t v23 = sub_1000E3EE0();
      uint64_t v46 = *(void *)(v23 - 8);
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v21, v22, v23);
      uint64_t v24 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      v50(&v21[v24], &v22[v24], v23);
      uint64_t v25 = v48[9];
      __dst = (char *)v17 + v25;
      uint64_t v26 = &v18[v25];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(&v18[v25], 1, v23))
      {
        uint64_t v27 = sub_1000082B4(&qword_100129F30);
        memcpy(__dst, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        v50(__dst, v26, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v23);
      }
      *((unsigned char *)v17 + v48[10]) = v18[v48[10]];
      *((unsigned char *)v17 + v48[11]) = v18[v48[11]];
      uint64_t v36 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v17 + *(int *)(v36 + 20)) = *(void *)&v18[*(int *)(v36 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      void *v17 = *(void *)v18;
      v17[1] = *((void *)v18 + 1);
      v17[2] = *((void *)v18 + 2);
      v17[3] = *((void *)v18 + 3);
      v17[4] = *((void *)v18 + 4);
      v17[5] = *((void *)v18 + 5);
      *((unsigned char *)v17 + 48) = v18[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      void *v17 = *(void *)v18;
      v17[1] = *((void *)v18 + 1);
      v17[2] = *((void *)v18 + 2);
      v17[3] = *((void *)v18 + 3);
      v17[4] = *((void *)v18 + 4);
      v17[5] = *((void *)v18 + 5);
      v17[6] = *((void *)v18 + 6);
      v17[7] = *((void *)v18 + 7);
      uint64_t v49 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v28 = v49[8];
      uint64_t v29 = (char *)v17 + v28;
      uint64_t v30 = &v18[v28];
      uint64_t v31 = sub_1000E3EE0();
      uint64_t v47 = *(void *)(v31 - 8);
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51(v29, v30, v31);
      uint64_t v32 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      v51(&v29[v32], &v30[v32], v31);
      uint64_t v33 = v49[9];
      __dsta = (char *)v17 + v33;
      uint64_t v34 = &v18[v33];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(&v18[v33], 1, v31))
      {
        uint64_t v35 = sub_1000082B4(&qword_100129F30);
        memcpy(__dsta, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v51(__dsta, v34, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dsta, 0, 1, v31);
      }
      *((unsigned char *)v17 + v49[10]) = v18[v49[10]];
      *((unsigned char *)v17 + v49[11]) = v18[v49[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v37 = v15[7];
  uint64_t v38 = v12 + v37;
  uint64_t v39 = v13 + v37;
  *(void *)uint64_t v38 = *(void *)(v13 + v37);
  *(void *)(v38 + 8) = *(void *)(v13 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v38 + 16) = *(unsigned char *)(v39 + 16);
  *(void *)(v38 + 24) = *(void *)(v39 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(v38 + 32) = *(unsigned char *)(v39 + 32);
  *(void *)(v38 + 40) = *(void *)(v39 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(v38 + 48) = *(unsigned char *)(v39 + 48);
  uint64_t v40 = v15[8];
  uint64_t v41 = (void *)(v12 + v40);
  uint64_t v42 = v13 + v40;
  *uint64_t v41 = *(void *)(v13 + v40);
  v41[1] = *(void *)(v13 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41[2] = *(void *)(v42 + 16);
  v41[3] = *(void *)(v42 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + v15[9]) = *(unsigned char *)(v13 + v15[9]);
  *(unsigned char *)(v12 + v15[10]) = *(unsigned char *)(v13 + v15[10]);
  *(unsigned char *)(v12 + v15[11]) = *(unsigned char *)(v13 + v15[11]);
  *(unsigned char *)(v12 + v15[12]) = *(unsigned char *)(v13 + v15[12]);
  return a1;
}

uint64_t sub_10003CB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v8 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
  uint64_t v9 = *(int *)(v8 + 92);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(void *)(a1 + *(int *)(v8 + 96)) = *(void *)(a2 + *(int *)(v8 + 96));
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  long long v16 = *(_OWORD *)(a2 + v13 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(a2 + v13 + 32);
  *(_OWORD *)(v14 + 48) = v16;
  long long v17 = *(_OWORD *)(a2 + v13 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(v14 + 16) = v17;
  *(unsigned char *)(v14 + 112) = *(unsigned char *)(a2 + v13 + 112);
  long long v18 = *(_OWORD *)(a2 + v13 + 96);
  long long v19 = *(_OWORD *)(a2 + v13 + 64);
  *(_OWORD *)(v14 + 80) = *(_OWORD *)(a2 + v13 + 80);
  *(_OWORD *)(v14 + 96) = v18;
  *(_OWORD *)(v14 + 64) = v19;
  *(_OWORD *)(v14 + 184) = *(_OWORD *)(a2 + v13 + 184);
  *(_OWORD *)(v14 + 200) = *(_OWORD *)(a2 + v13 + 200);
  *(_OWORD *)(v14 + 216) = *(_OWORD *)(a2 + v13 + 216);
  *(unsigned char *)(v14 + 232) = *(unsigned char *)(a2 + v13 + 232);
  *(_OWORD *)(v14 + 120) = *(_OWORD *)(a2 + v13 + 120);
  *(_OWORD *)(v14 + 136) = *(_OWORD *)(a2 + v13 + 136);
  *(_OWORD *)(v14 + 152) = *(_OWORD *)(a2 + v13 + 152);
  *(_OWORD *)(v14 + 168) = *(_OWORD *)(a2 + v13 + 168);
  uint64_t v20 = (int *)type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
  uint64_t v21 = v20[6];
  uint64_t v22 = (_OWORD *)(v14 + v21);
  uint64_t v23 = (char *)(v15 + v21);
  uint64_t v24 = type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v61 = v20;
    long long v37 = *((_OWORD *)v23 + 1);
    _OWORD *v22 = *(_OWORD *)v23;
    v22[1] = v37;
    long long v38 = *((_OWORD *)v23 + 3);
    v22[2] = *((_OWORD *)v23 + 2);
    v22[3] = v38;
    uint64_t v67 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v39 = v67[8];
    uint64_t v40 = (char *)v22 + v39;
    uint64_t v41 = &v23[v39];
    uint64_t v42 = sub_1000E3EE0();
    uint64_t v65 = *(void *)(v42 - 8);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    v43(v40, v41, v42);
    uint64_t v44 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
    uint64_t v59 = v43;
    v43(&v40[v44], &v41[v44], v42);
    uint64_t v45 = v67[9];
    __dsta = (char *)v22 + v45;
    uint64_t v46 = &v23[v45];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(&v23[v45], 1, v42))
    {
      uint64_t v47 = sub_1000082B4(&qword_100129F30);
      memcpy(__dsta, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      v59(__dsta, v46, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(__dsta, 0, 1, v42);
    }
    *((unsigned char *)v22 + v67[10]) = v23[v67[10]];
    *((unsigned char *)v22 + v67[11]) = v23[v67[11]];
    uint64_t v48 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v22 + *(int *)(v48 + 20)) = *(void *)&v23[*(int *)(v48 + 20)];
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = v61;
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    long long v26 = *((_OWORD *)v23 + 1);
    _OWORD *v22 = *(_OWORD *)v23;
    v22[1] = v26;
    long long v27 = *((_OWORD *)v23 + 3);
    v22[2] = *((_OWORD *)v23 + 2);
    v22[3] = v27;
    uint64_t v66 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v28 = v66[8];
    uint64_t v29 = (char *)v22 + v28;
    uint64_t v60 = v22;
    uint64_t v30 = &v23[v28];
    uint64_t v31 = sub_1000E3EE0();
    uint64_t v64 = *(void *)(v31 - 8);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
    v32(v29, v30, v31);
    uint64_t v33 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
    uint64_t v58 = v32;
    v32(&v29[v33], &v30[v33], v31);
    uint64_t v34 = v66[9];
    __dst = (char *)v60 + v34;
    uint64_t v35 = &v23[v34];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(&v23[v34], 1, v31))
    {
      uint64_t v36 = sub_1000082B4(&qword_100129F30);
      memcpy(__dst, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v58(__dst, v35, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(__dst, 0, 1, v31);
    }
    *((unsigned char *)v60 + v66[10]) = v23[v66[10]];
    *((unsigned char *)v60 + v66[11]) = v23[v66[11]];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v49 = v20[7];
  uint64_t v50 = v14 + v49;
  uint64_t v51 = v15 + v49;
  long long v52 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v52;
  *(_OWORD *)(v50 + 32) = *(_OWORD *)(v51 + 32);
  *(unsigned char *)(v50 + 48) = *(unsigned char *)(v51 + 48);
  uint64_t v53 = v20[8];
  uint64_t v54 = (_OWORD *)(v14 + v53);
  uint64_t v55 = (_OWORD *)(v15 + v53);
  long long v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  *(unsigned char *)(v14 + v20[9]) = *(unsigned char *)(v15 + v20[9]);
  *(unsigned char *)(v14 + v20[10]) = *(unsigned char *)(v15 + v20[10]);
  *(unsigned char *)(v14 + v20[11]) = *(unsigned char *)(v15 + v20[11]);
  *(unsigned char *)(v14 + v20[12]) = *(unsigned char *)(v15 + v20[12]);
  return a1;
}

uint64_t sub_10003D0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_release();
  uint64_t v8 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
  uint64_t v9 = *(int *)(v8 + 92);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  *(void *)(a1 + *(int *)(v8 + 96)) = *(void *)(a2 + *(int *)(v8 + 96));
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 8);
  *(void *)uint64_t v14 = *(void *)(a2 + v13);
  *(void *)(v14 + 8) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v15 + 24);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(void *)(v14 + 24) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v15 + 40);
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  *(void *)(v14 + 40) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v15 + 56);
  *(void *)(v14 + 48) = *(void *)(v15 + 48);
  *(void *)(v14 + 56) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v15 + 72);
  *(void *)(v14 + 64) = *(void *)(v15 + 64);
  *(void *)(v14 + 72) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v15 + 88);
  *(void *)(v14 + 80) = *(void *)(v15 + 80);
  *(void *)(v14 + 88) = v21;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 96) = *(unsigned char *)(v15 + 96);
  *(void *)(v14 + 104) = *(void *)(v15 + 104);
  swift_release();
  *(unsigned char *)(v14 + 112) = *(unsigned char *)(v15 + 112);
  uint64_t v22 = *(void *)(v15 + 128);
  *(void *)(v14 + 120) = *(void *)(v15 + 120);
  *(void *)(v14 + 128) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v15 + 144);
  *(void *)(v14 + 136) = *(void *)(v15 + 136);
  *(void *)(v14 + 144) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v15 + 160);
  *(void *)(v14 + 152) = *(void *)(v15 + 152);
  *(void *)(v14 + 160) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v15 + 176);
  *(void *)(v14 + 168) = *(void *)(v15 + 168);
  *(void *)(v14 + 176) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v15 + 192);
  *(void *)(v14 + 184) = *(void *)(v15 + 184);
  *(void *)(v14 + 192) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v15 + 208);
  *(void *)(v14 + 200) = *(void *)(v15 + 200);
  *(void *)(v14 + 208) = v27;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 216) = *(unsigned char *)(v15 + 216);
  *(void *)(v14 + 224) = *(void *)(v15 + 224);
  swift_release();
  *(unsigned char *)(v14 + 232) = *(unsigned char *)(v15 + 232);
  uint64_t v28 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
  uint64_t v29 = (int *)v28;
  if (a1 != a2)
  {
    uint64_t v30 = *(int *)(v28 + 24);
    uint64_t v31 = (_OWORD *)(v14 + v30);
    uint64_t v32 = (char *)(v15 + v30);
    sub_10003AB6C(v14 + v30, type metadata accessor for SportsWidgetClock);
    uint64_t v33 = type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v46 = *((_OWORD *)v32 + 1);
      *uint64_t v31 = *(_OWORD *)v32;
      v31[1] = v46;
      long long v47 = *((_OWORD *)v32 + 3);
      v31[2] = *((_OWORD *)v32 + 2);
      v31[3] = v47;
      long long v78 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v48 = v78[8];
      uint64_t v49 = (char *)v31 + v48;
      __dstb = (char *)v31 + v48;
      uint64_t v73 = &v32[v48];
      uint64_t v50 = sub_1000E3EE0();
      uint64_t v76 = *(void *)(v50 - 8);
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
      v51(v49, v73, v50);
      uint64_t v52 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      uint64_t v53 = &__dstb[v52];
      __dsta = v51;
      v51(v53, &v73[v52], v50);
      uint64_t v54 = v78[9];
      uint64_t v74 = (char *)v31 + v54;
      uint64_t v55 = &v32[v54];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(&v32[v54], 1, v50))
      {
        uint64_t v56 = sub_1000082B4(&qword_100129F30);
        memcpy(v74, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        __dsta(v74, v55, v50);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v74, 0, 1, v50);
      }
      *((unsigned char *)v31 + v78[10]) = v32[v78[10]];
      *((unsigned char *)v31 + v78[11]) = v32[v78[11]];
      uint64_t v57 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v31 + *(int *)(v57 + 20)) = *(void *)&v32[*(int *)(v57 + 20)];
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      long long v35 = *((_OWORD *)v32 + 1);
      *uint64_t v31 = *(_OWORD *)v32;
      v31[1] = v35;
      long long v36 = *((_OWORD *)v32 + 3);
      v31[2] = *((_OWORD *)v32 + 2);
      v31[3] = v36;
      uint64_t v75 = v32;
      uint64_t v77 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v37 = v77[8];
      long long v38 = (char *)v31 + v37;
      uint64_t v39 = &v32[v37];
      uint64_t v40 = sub_1000E3EE0();
      uint64_t v72 = *(void **)(v40 - 8);
      uint64_t v41 = (void (*)(char *, char *, uint64_t))v72[4];
      v41(v38, v39, v40);
      uint64_t v42 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
      uint64_t v68 = v41;
      v41(&v38[v42], &v39[v42], v40);
      uint64_t v43 = v77[9];
      __dst = (char *)v31 + v43;
      uint64_t v44 = (char *)v75 + v43;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v72[6])((char *)v75 + v43, 1, v40))
      {
        uint64_t v45 = sub_1000082B4(&qword_100129F30);
        memcpy(__dst, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        v68(__dst, v44, v40);
        ((void (*)(char *, void, uint64_t, uint64_t))v72[7])(__dst, 0, 1, v40);
      }
      *((unsigned char *)v31 + v77[10]) = *((unsigned char *)v75 + v77[10]);
      *((unsigned char *)v31 + v77[11]) = *((unsigned char *)v75 + v77[11]);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      goto LABEL_14;
    }
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
LABEL_14:
  uint64_t v58 = v29[7];
  uint64_t v59 = v14 + v58;
  uint64_t v60 = v15 + v58;
  uint64_t v61 = *(void *)(v15 + v58 + 8);
  *(void *)uint64_t v59 = *(void *)(v15 + v58);
  *(void *)(v59 + 8) = v61;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v59 + 16) = *(unsigned char *)(v60 + 16);
  *(void *)(v59 + 24) = *(void *)(v60 + 24);
  swift_release();
  *(unsigned char *)(v59 + 32) = *(unsigned char *)(v60 + 32);
  *(void *)(v59 + 40) = *(void *)(v60 + 40);
  swift_release();
  *(unsigned char *)(v59 + 48) = *(unsigned char *)(v60 + 48);
  uint64_t v62 = v29[8];
  uint64_t v63 = (void *)(v14 + v62);
  uint64_t v64 = v15 + v62;
  uint64_t v65 = *(void *)(v15 + v62 + 8);
  void *v63 = *(void *)(v15 + v62);
  v63[1] = v65;
  swift_bridgeObjectRelease();
  uint64_t v66 = *(void *)(v64 + 24);
  v63[2] = *(void *)(v64 + 16);
  v63[3] = v66;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v29[9]) = *(unsigned char *)(v15 + v29[9]);
  *(unsigned char *)(v14 + v29[10]) = *(unsigned char *)(v15 + v29[10]);
  *(unsigned char *)(v14 + v29[11]) = *(unsigned char *)(v15 + v29[11]);
  *(unsigned char *)(v14 + v29[12]) = *(unsigned char *)(v15 + v29[12]);
  return a1;
}

uint64_t sub_10003D790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003D7A4);
}

uint64_t sub_10003D7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10003D89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003D8B0);
}

uint64_t sub_10003D8B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_10003D9B4()
{
  uint64_t result = type metadata accessor for SportsWidgetDynamicIslandExpandedViewLayout();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for SportsWidgetMinimalView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SportsWidgetMinimalView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v3 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v3;
  uint64_t v4 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v4;
  uint64_t v5 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v5;
  uint64_t v6 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v6;
  uint64_t v7 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v7;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v8 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v8;
  uint64_t v9 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v9;
  uint64_t v10 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v10;
  uint64_t v11 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v11;
  uint64_t v12 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v12;
  uint64_t v13 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v13;
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  long long v14 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v14;
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetMinimalView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 288;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(v4 + 16);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for SportsWidgetMinimalView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x168uLL);
}

uint64_t assignWithTake for SportsWidgetMinimalView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 288;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_release();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v11 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_release();
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(v4 + 16);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  uint64_t v17 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetMinimalView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 360)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetMinimalView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 360) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 360) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetMinimalView()
{
  return &type metadata for SportsWidgetMinimalView;
}

void *sub_10003E238(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    uint64_t v7 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v7;
    uint64_t v32 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v32;
    *(void *)(a1 + 96) = a2[12];
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    *(void *)(a1 + 112) = a2[14];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    void *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v8 + 24);
    void v9[2] = *(uint64_t *)((char *)a2 + v8 + 16);
    v9[3] = v12;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v8 + 40);
    v9[4] = *(uint64_t *)((char *)a2 + v8 + 32);
    v9[5] = v13;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v8 + 56);
    v9[6] = *(uint64_t *)((char *)a2 + v8 + 48);
    v9[7] = v14;
    uint64_t v15 = (int *)type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
    uint64_t v16 = v15[6];
    __dst = (char *)v9 + v16;
    uint64_t v31 = (const void *)(v10 + v16);
    uint64_t v17 = sub_1000E3E00();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v31, 1, v17))
    {
      uint64_t v19 = sub_1000082B4(&qword_100129F38);
      memcpy(__dst, v31, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v18 + 16))(__dst, v31, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v21 = v15[7];
    uint64_t v22 = (void *)((char *)v9 + v21);
    uint64_t v23 = (void *)(v10 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v15[8];
    uint64_t v26 = (void *)((char *)v9 + v25);
    uint64_t v27 = (void *)(v10 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    *((unsigned char *)v9 + v15[9]) = *(unsigned char *)(v10 + v15[9]);
    *((unsigned char *)v9 + v15[10]) = *(unsigned char *)(v10 + v15[10]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_10003E4F4(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0) + 24);
  uint64_t v6 = sub_1000E3E00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003E62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v30 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v30;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(void *)(a2 + v7 + 24);
  v8[2] = *(void *)(a2 + v7 + 16);
  v8[3] = v11;
  uint64_t v12 = *(void *)(a2 + v7 + 40);
  v8[4] = *(void *)(a2 + v7 + 32);
  v8[5] = v12;
  uint64_t v13 = *(void *)(a2 + v7 + 56);
  v8[6] = *(void *)(a2 + v7 + 48);
  v8[7] = v13;
  uint64_t v14 = (int *)type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
  uint64_t v15 = v14[6];
  __dst = (char *)v8 + v15;
  uint64_t v29 = (const void *)(v9 + v15);
  uint64_t v16 = sub_1000E3E00();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v29, 1, v16))
  {
    uint64_t v18 = sub_1000082B4(&qword_100129F38);
    memcpy(__dst, v29, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(__dst, v29, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v19 = v14[7];
  uint64_t v20 = (void *)((char *)v8 + v19);
  uint64_t v21 = (void *)(v9 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = v14[8];
  uint64_t v24 = (void *)((char *)v8 + v23);
  uint64_t v25 = (void *)(v9 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  *((unsigned char *)v8 + v14[9]) = *(unsigned char *)(v9 + v14[9]);
  *((unsigned char *)v8 + v14[10]) = *(unsigned char *)(v9 + v14[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10003E898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  void *v7 = *(void *)(a2 + v6);
  v7[1] = *(void *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  v7[5] = v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[6] = v8[6];
  v7[7] = v8[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = (char *)v8 + v10;
  uint64_t v13 = sub_1000E3E00();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v26 = v11;
  LODWORD(v11) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (v11)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v26, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
      goto LABEL_9;
    }
    size_t v17 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F38) - 8) + 64);
    uint64_t v18 = v26;
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 24))(v26, v12, v13);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v26, v13);
    size_t v17 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F38) - 8) + 64);
    uint64_t v18 = v26;
  }
  memcpy(v18, v12, v17);
LABEL_9:
  uint64_t v19 = v9[7];
  uint64_t v20 = (void *)((char *)v7 + v19);
  uint64_t v21 = (void *)((char *)v8 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v9[8];
  uint64_t v23 = (void *)((char *)v7 + v22);
  uint64_t v24 = (void *)((char *)v8 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v7 + v9[9]) = *((unsigned char *)v8 + v9[9]);
  *((unsigned char *)v7 + v9[10]) = *((unsigned char *)v8 + v9[10]);
  return a1;
}

uint64_t sub_10003EC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (_OWORD *)(a1 + v4);
  uint64_t v6 = a2 + v4;
  long long v7 = *(_OWORD *)(a2 + v4 + 16);
  _OWORD *v5 = *(_OWORD *)(a2 + v4);
  v5[1] = v7;
  long long v8 = *(_OWORD *)(a2 + v4 + 48);
  v5[2] = *(_OWORD *)(a2 + v4 + 32);
  v5[3] = v8;
  uint64_t v9 = (int *)type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = (char *)v5 + v10;
  uint64_t v12 = (const void *)(v6 + v10);
  uint64_t v13 = sub_1000E3E00();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_1000082B4(&qword_100129F38);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_OWORD *)((char *)v5 + v9[7]) = *(_OWORD *)(v6 + v9[7]);
  *(_OWORD *)((char *)v5 + v9[8]) = *(_OWORD *)(v6 + v9[8]);
  *((unsigned char *)v5 + v9[9]) = *(unsigned char *)(v6 + v9[9]);
  *((unsigned char *)v5 + v9[10]) = *(unsigned char *)(v6 + v9[10]);
  return a1;
}

uint64_t sub_10003EDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v6 = *(int *)(a3 + 24);
  long long v7 = (void *)(a1 + v6);
  long long v8 = (void *)(a2 + v6);
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  void *v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = v8[3];
  void v7[2] = v8[2];
  v7[3] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v8[5];
  v7[4] = v8[4];
  v7[5] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = v8[7];
  v7[6] = v8[6];
  v7[7] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
  uint64_t v14 = v13[6];
  uint64_t v15 = (char *)v7 + v14;
  int v16 = (char *)v8 + v14;
  uint64_t v17 = sub_1000E3E00();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v34 = v15;
  LODWORD(v15) = v19(v15, 1, v17);
  int v20 = v19(v16, 1, v17);
  if (v15)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v34, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v34, 0, 1, v17);
      goto LABEL_9;
    }
    size_t v21 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F38) - 8) + 64);
    uint64_t v22 = v34;
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v34, v16, v17);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v34, v17);
    size_t v21 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F38) - 8) + 64);
    uint64_t v22 = v34;
  }
  memcpy(v22, v16, v21);
LABEL_9:
  uint64_t v23 = v13[7];
  uint64_t v24 = (void *)((char *)v7 + v23);
  uint64_t v25 = (void *)((char *)v8 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = v13[8];
  uint64_t v29 = (void *)((char *)v7 + v28);
  uint64_t v30 = (void *)((char *)v8 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *((unsigned char *)v7 + v13[9]) = *((unsigned char *)v8 + v13[9]);
  *((unsigned char *)v7 + v13[10]) = *((unsigned char *)v8 + v13[10]);
  return a1;
}

uint64_t sub_10003F0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003F0D8);
}

uint64_t sub_10003F0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10003F188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003F19C);
}

uint64_t sub_10003F19C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsWidgetDynamicIslandCompactView(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012B700);
}

uint64_t sub_10003F264()
{
  uint64_t result = type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10003F304()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003F320()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003F33C(uint64_t a1)
{
  uint64_t v13 = *(void *)(a1 + 176);
  uint64_t v2 = *(void *)(a1 + 184);
  uint64_t v3 = *(void *)(a1 + 192);
  uint64_t v4 = *(void *)(a1 + 200);
  uint64_t v5 = *(void *)(a1 + 208);
  uint64_t v6 = *(void *)(a1 + 216);
  uint64_t v7 = *(void *)(a1 + 224);
  uint64_t v8 = *(void *)(a1 + 232);
  long long v12 = *(_OWORD *)(a1 + 240);
  uint64_t v9 = *(void *)(a1 + 256);
  char v10 = *(unsigned char *)(a1 + 264);
  sub_10003F420(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104));
  sub_10003AC90(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_10003F420(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a14 != -1) {
    return sub_10001460C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14 & 1);
  }
  return result;
}

unint64_t sub_10003F458()
{
  unint64_t result = qword_10012B778;
  if (!qword_10012B778)
  {
    sub_100008354(&qword_10012B750);
    sub_100008354(&qword_10012B780);
    sub_10003F560(&qword_10012B788, &qword_10012B780, &qword_10012B790, &qword_10012B798);
    swift_getOpaqueTypeConformance2();
    sub_10003F5FC(&qword_10012A3B8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B778);
  }
  return result;
}

uint64_t sub_10003F560(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    sub_100014AC4(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003F5FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003F644(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v18 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  long long v16 = *(_OWORD *)(a1 + 176);
  long long v17 = *(_OWORD *)(a1 + 160);
  long long v15 = *(_OWORD *)(a1 + 192);
  long long v13 = *(_OWORD *)(a1 + 224);
  long long v14 = *(_OWORD *)(a1 + 208);
  long long v12 = *(_OWORD *)(a1 + 240);
  uint64_t v9 = *(void *)(a1 + 256);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 264);
  sub_10003AC90(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  sub_10003F75C(v18, v2, v3, v4, v5, v6, v7, v8, v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v10);
  return a1;
}

uint64_t sub_10003F75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned __int8 a22)
{
  if (a22 != 255) {
    return sub_10001460C(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22 & 1);
  }
  return result;
}

double sub_10003F7A0(uint64_t a1)
{
  *(void *)(a1 + 160) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 168) = -1;
  return result;
}

uint64_t sub_10003F7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned __int8 a22)
{
  if (a22 != 255) {
    return sub_10003AE38(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22 & 1);
  }
  return result;
}

uint64_t sub_10003F80C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 168);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    v4);
  return a1;
}

double sub_10003F880(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 255;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  return result;
}

uint64_t sub_10003F8A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a14 != -1) {
    return sub_10003AE38(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14 & 1);
  }
  return result;
}

void *sub_10003F8DC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_10003F948(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003FA44(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003FAD0(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SportsWidgetDynamicIslandCompactView.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003FC28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetDynamicIslandCompactView.Mode()
{
  return &type metadata for SportsWidgetDynamicIslandCompactView.Mode;
}

unint64_t sub_10003FC64()
{
  unint64_t result = qword_10012B7D0;
  if (!qword_10012B7D0)
  {
    sub_100008354(&qword_10012B7D8);
    sub_10003F458();
    sub_100008354(&qword_10012B758);
    sub_10003F560(&qword_10012B760, &qword_10012B758, &qword_10012B768, &qword_10012B770);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B7D0);
  }
  return result;
}

unint64_t sub_10003FD40()
{
  unint64_t result = qword_10012B7E0;
  if (!qword_10012B7E0)
  {
    sub_100008354(&qword_10012B7B8);
    sub_100014AC4(&qword_10012B7C8, &qword_10012B7C0);
    sub_10003F5FC(&qword_10012A3B8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B7E0);
  }
  return result;
}

unint64_t sub_10003FE14()
{
  unint64_t result = qword_10012B7E8;
  if (!qword_10012B7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B7E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for VideosPlaybackWiFiQuality()
{
  return &type metadata for VideosPlaybackWiFiQuality;
}

unsigned char *_s17TVWidgetExtension25VideosPlaybackWiFiQualityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003FF50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideosPlaybackCellularQuality()
{
  return &type metadata for VideosPlaybackCellularQuality;
}

uint64_t sub_10003FF88()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100141EA0);
  sub_100008498(v10, (uint64_t)qword_100141EA0);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

unint64_t sub_100040270()
{
  uint64_t v0 = sub_1000082B4(&qword_10012B4E8);
  __chkstk_darwin(v0 - 8);
  uint64_t v50 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v2 - 8);
  uint64_t v49 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3D90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E3F10();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000E59F0();
  __chkstk_darwin(v9 - 8);
  uint64_t v52 = sub_1000E3DA0();
  uint64_t v10 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v48 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000082B4(&qword_10012B8E0);
  uint64_t v12 = sub_1000082B4(&qword_10012B540);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  uint64_t v15 = v12 - 8;
  uint64_t v42 = v12 - 8;
  uint64_t v46 = v14;
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = swift_allocObject();
  long long v51 = xmmword_1000F0F50;
  uint64_t v47 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1000F0F50;
  unint64_t v44 = v17 + v16 + *(int *)(v15 + 56);
  unint64_t v45 = v17 + v16;
  *(unsigned char *)(v17 + v16) = 0;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  unsigned int v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v30 = v4;
  v19(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  uint64_t v32 = v19;
  uint64_t v33 = v5 + 104;
  unint64_t v29 = 0x80000001000E87D0;
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v19(v7, v18, v4);
  int v20 = v49;
  sub_1000E3DB0();
  uint64_t v43 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
  v43(v20, 0, 1, v52);
  uint64_t v40 = sub_1000E3B00();
  uint64_t v21 = *(void *)(v40 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v41 = v21 + 56;
  v39(v50, 1, 1, v40);
  uint64_t v37 = sub_1000082B4(&qword_10012B8E8);
  uint64_t v34 = v10 + 56;
  uint64_t v22 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v38 = *(void *)(v10 + 72);
  uint64_t v35 = v22 | 7;
  uint64_t v36 = ((v22 + 32) & ~v22) + 2 * v38;
  *(_OWORD *)(swift_allocObject() + 16) = v51;
  sub_1000E3D80();
  sub_1000E3D80();
  sub_1000E3B30();
  uint64_t v23 = (unsigned char *)(v45 + v46);
  v46 += v45 + *(int *)(v42 + 56);
  *uint64_t v23 = 1;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v24 = v31;
  uint64_t v25 = v30;
  uint64_t v26 = v32;
  v32(v7, v31, v30);
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v26(v7, v24, v25);
  uint64_t v27 = v49;
  sub_1000E3DB0();
  v43(v27, 0, 1, v52);
  v39(v50, 1, 1, v40);
  *(_OWORD *)(swift_allocObject() + 16) = v51;
  sub_1000E3D80();
  sub_1000E3D80();
  sub_1000E3B30();
  unint64_t result = sub_100034990(v47);
  qword_100141EB8 = result;
  return result;
}

uint64_t sub_1000409E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10001C3A0(*a1, *a2);
}

uint64_t sub_1000409F0()
{
  sub_1000E5A50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100040A60@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100041508(a1, (Swift::OpaquePointer)&off_100120070, a2);
}

void sub_100040A6C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6C617551646F6F47;
  if (*v1) {
    uint64_t v2 = 0x6C61755174736542;
  }
  *a1 = v2;
  a1[1] = 0xEB00000000797469;
}

void sub_100040AAC(void *a1@<X8>)
{
  *a1 = &off_100120290;
}

uint64_t sub_100040ABC@<X0>(uint64_t a1@<X8>)
{
  return sub_100041598(&qword_100129C80, (uint64_t)qword_100141EA0, a1);
}

uint64_t sub_100040AE0(uint64_t a1)
{
  unint64_t v2 = sub_100041D90();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100040B2C(uint64_t a1, uint64_t a2)
{
  return sub_1000416A4(a1, a2, &qword_100129C88);
}

uint64_t sub_100040B50(uint64_t a1)
{
  unint64_t v2 = sub_100041E40();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100040B9C()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000E3DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = sub_1000E3C50();
  sub_100008434(v5, qword_100141EC0);
  sub_100008498(v5, (uint64_t)qword_100141EC0);
  sub_1000E3D80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_1000E3C40();
}

unint64_t sub_100040D08()
{
  uint64_t v0 = sub_1000082B4(&qword_10012B4E8);
  __chkstk_darwin(v0 - 8);
  uint64_t v47 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v2 - 8);
  long long v51 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3D90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E3F10();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000E59F0();
  __chkstk_darwin(v9 - 8);
  uint64_t v50 = sub_1000E3DA0();
  uint64_t v52 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000082B4(&qword_10012B8F0);
  uint64_t v11 = (int *)(sub_1000082B4(&qword_10012B550) - 8);
  uint64_t v12 = *(void *)v11;
  uint64_t v46 = *(void *)(*(void *)v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  uint64_t v48 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_1000F0F50;
  unint64_t v44 = v14 + v13 + v11[14];
  unint64_t v45 = v14 + v13;
  *(unsigned char *)(v14 + v13) = 0;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v15 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  unsigned int v33 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v32 = v4;
  v16(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  uint64_t v34 = v5 + 104;
  uint64_t v35 = v16;
  v31[1] = 0x80000001000E87D0;
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v16(v7, v15, v4);
  uint64_t v17 = v51;
  sub_1000E3DB0();
  uint64_t v18 = v52 + 56;
  uint64_t v43 = *(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56);
  v43(v17, 0, 1, v50);
  uint64_t v40 = sub_1000E3B00();
  uint64_t v19 = *(void *)(v40 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v42 = v19 + 56;
  int v20 = v47;
  v41(v47, 1, 1, v40);
  uint64_t v21 = sub_1000082B4(&qword_10012B8E8);
  uint64_t v52 = v18;
  uint64_t v22 = *(unsigned __int8 *)(v18 + 24);
  uint64_t v38 = ((v22 + 32) & ~v22) + *(void *)(v18 + 16);
  uint64_t v39 = v21;
  uint64_t v37 = v22 | 7;
  uint64_t v23 = swift_allocObject();
  long long v36 = xmmword_1000EF780;
  *(_OWORD *)(v23 + 16) = xmmword_1000EF780;
  sub_1000E3D80();
  uint64_t v24 = v20;
  sub_1000E3B30();
  uint64_t v25 = (unsigned char *)(v45 + v46);
  v46 += v45 + v11[14];
  *uint64_t v25 = 1;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v26 = v33;
  uint64_t v27 = v32;
  uint64_t v28 = v35;
  v35(v7, v33, v32);
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v28(v7, v26, v27);
  unint64_t v29 = v51;
  sub_1000E3DB0();
  v43(v29, 0, 1, v50);
  v41(v24, 1, 1, v40);
  *(_OWORD *)(swift_allocObject() + 16) = v36;
  sub_1000E3D80();
  sub_1000E3B30();
  unint64_t result = sub_1000349B8(v48);
  qword_100141ED8 = result;
  return result;
}

Swift::Int sub_1000413F0()
{
  return sub_1000E5E20();
}

Swift::Int sub_100041478()
{
  return sub_1000E5E20();
}

uint64_t sub_1000414FC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100041508(a1, (Swift::OpaquePointer)&off_100120020, a2);
}

uint64_t sub_100041508@<X0>(uint64_t *a1@<X0>, Swift::OpaquePointer a2@<X3>, char *a3@<X8>)
{
  v9._countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v9._object = v4;
  Swift::Int v6 = sub_1000E5DA0(a2, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

void sub_100041564(void *a1@<X8>)
{
  *a1 = &off_1001202B8;
}

uint64_t sub_100041574@<X0>(uint64_t a1@<X8>)
{
  return sub_100041598(&qword_100129C90, (uint64_t)qword_100141EC0, a1);
}

uint64_t sub_100041598@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1000E3C50();
  uint64_t v6 = sub_100008498(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_100041634(uint64_t a1)
{
  unint64_t v2 = sub_100041860();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100041680(uint64_t a1, uint64_t a2)
{
  return sub_1000416A4(a1, a2, &qword_100129C98);
}

uint64_t sub_1000416A4(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000416F4(uint64_t a1)
{
  unint64_t v2 = sub_100041910();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100041744()
{
  unint64_t result = qword_10012B7F0;
  if (!qword_10012B7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B7F0);
  }
  return result;
}

unint64_t sub_10004179C()
{
  unint64_t result = qword_10012B7F8;
  if (!qword_10012B7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B7F8);
  }
  return result;
}

unint64_t sub_1000417F4()
{
  unint64_t result = qword_10012B800;
  if (!qword_10012B800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B800);
  }
  return result;
}

uint64_t sub_100041848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100041D3C(a1, a2, a3, (void (*)(void))sub_100041860);
}

unint64_t sub_100041860()
{
  unint64_t result = qword_10012B808;
  if (!qword_10012B808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B808);
  }
  return result;
}

unint64_t sub_1000418B8()
{
  unint64_t result = qword_10012B810;
  if (!qword_10012B810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B810);
  }
  return result;
}

unint64_t sub_100041910()
{
  unint64_t result = qword_10012B818;
  if (!qword_10012B818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B818);
  }
  return result;
}

unint64_t sub_100041968()
{
  unint64_t result = qword_10012B820;
  if (!qword_10012B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B820);
  }
  return result;
}

unint64_t sub_1000419C0()
{
  unint64_t result = qword_10012B828;
  if (!qword_10012B828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B828);
  }
  return result;
}

uint64_t sub_100041A14()
{
  return sub_100041F6C(&qword_10012B830, &qword_10012B838);
}

unint64_t sub_100041A40()
{
  unint64_t result = qword_10012B840;
  if (!qword_10012B840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B840);
  }
  return result;
}

unint64_t sub_100041A98()
{
  unint64_t result = qword_10012B848;
  if (!qword_10012B848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B848);
  }
  return result;
}

unint64_t sub_100041AF0()
{
  unint64_t result = qword_10012B850;
  if (!qword_10012B850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B850);
  }
  return result;
}

uint64_t sub_100041B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000420F0(a1, a2, a3, (uint64_t (*)(void))sub_100041860, (uint64_t (*)(void))sub_100041B70);
}

unint64_t sub_100041B70()
{
  unint64_t result = qword_10012B858;
  if (!qword_10012B858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B858);
  }
  return result;
}

unint64_t sub_100041BC8()
{
  unint64_t result = qword_10012B860;
  if (!qword_10012B860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B860);
  }
  return result;
}

unint64_t sub_100041C20()
{
  unint64_t result = qword_10012B868;
  if (!qword_10012B868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B868);
  }
  return result;
}

unint64_t sub_100041C78()
{
  unint64_t result = qword_10012B870;
  if (!qword_10012B870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B870);
  }
  return result;
}

unint64_t sub_100041CD0()
{
  unint64_t result = qword_10012B878;
  if (!qword_10012B878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B878);
  }
  return result;
}

uint64_t sub_100041D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100041D3C(a1, a2, a3, (void (*)(void))sub_100041D90);
}

uint64_t sub_100041D3C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100041D90()
{
  unint64_t result = qword_10012B880;
  if (!qword_10012B880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B880);
  }
  return result;
}

unint64_t sub_100041DE8()
{
  unint64_t result = qword_10012B888;
  if (!qword_10012B888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B888);
  }
  return result;
}

unint64_t sub_100041E40()
{
  unint64_t result = qword_10012B890;
  if (!qword_10012B890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B890);
  }
  return result;
}

unint64_t sub_100041E98()
{
  unint64_t result = qword_10012B898;
  if (!qword_10012B898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B898);
  }
  return result;
}

unint64_t sub_100041EF0()
{
  unint64_t result = qword_10012B8A0;
  if (!qword_10012B8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B8A0);
  }
  return result;
}

uint64_t sub_100041F44()
{
  return sub_100041F6C(&qword_10012B8A8, &qword_10012B8B0);
}

uint64_t sub_100041F6C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100041FC0()
{
  unint64_t result = qword_10012B8B8;
  if (!qword_10012B8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B8B8);
  }
  return result;
}

unint64_t sub_100042018()
{
  unint64_t result = qword_10012B8C0;
  if (!qword_10012B8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B8C0);
  }
  return result;
}

unint64_t sub_100042070()
{
  unint64_t result = qword_10012B8C8;
  if (!qword_10012B8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B8C8);
  }
  return result;
}

uint64_t sub_1000420C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000420F0(a1, a2, a3, (uint64_t (*)(void))sub_100041D90, (uint64_t (*)(void))sub_10004212C);
}

uint64_t sub_1000420F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10004212C()
{
  unint64_t result = qword_10012B8D0;
  if (!qword_10012B8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B8D0);
  }
  return result;
}

unint64_t sub_100042184()
{
  unint64_t result = qword_10012B8D8;
  if (!qword_10012B8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B8D8);
  }
  return result;
}

uint64_t *sub_1000421EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    Swift::String v9 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = a3;
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v38 = a1;
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v10 + 8);
    *uint64_t v11 = *(uint64_t *)((char *)a2 + v10);
    v11[1] = v13;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v10 + 24);
    v11[2] = *(uint64_t *)((char *)a2 + v10 + 16);
    v11[3] = v14;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v10 + 40);
    v11[4] = *(uint64_t *)((char *)a2 + v10 + 32);
    v11[5] = v15;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v10 + 56);
    v11[6] = *(uint64_t *)((char *)a2 + v10 + 48);
    v11[7] = v16;
    uint64_t v17 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v18 = *(int *)(v17 + 32);
    uint64_t v35 = (char *)v11 + v18;
    long long v36 = (int *)v17;
    uint64_t v34 = &v12[v18];
    uint64_t v19 = sub_1000E3EE0();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v35, v34, v19);
    uint64_t v22 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
    v21(&v35[v22], &v34[v22], v19);
    uint64_t v23 = v36[9];
    uint64_t v24 = (char *)v11 + v23;
    uint64_t v25 = &v12[v23];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&v12[v23], 1, v19))
    {
      uint64_t v26 = sub_1000082B4(&qword_100129F30);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v21(v24, v25, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
    }
    *((unsigned char *)v11 + v36[10]) = v12[v36[10]];
    *((unsigned char *)v11 + v36[11]) = v12[v36[11]];
    uint64_t v27 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v11 + *(int *)(v27 + 20)) = *(void *)&v12[*(int *)(v27 + 20)];
    uint64_t v28 = *(int *)(v37 + 24);
    Swift::String v9 = v38;
    unint64_t v29 = (char *)v38 + v28;
    uint64_t v30 = (char *)a2 + v28;
    *unint64_t v29 = *v30;
    uint64_t v31 = *((void *)v30 + 2);
    *((void *)v29 + 1) = *((void *)v30 + 1);
    *((void *)v29 + 2) = v31;
    uint64_t v32 = *((void *)v30 + 4);
    *((void *)v29 + 3) = *((void *)v30 + 3);
    *((void *)v29 + 4) = v32;
    *((void *)v29 + 5) = *((void *)v30 + 5);
    v29[48] = v30[48];
    *(_OWORD *)(v29 + 56) = *(_OWORD *)(v30 + 56);
    *((void *)v29 + 9) = *((void *)v30 + 9);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v9;
}

uint64_t sub_100042548(uint64_t a1, uint64_t a2)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v7 = v5 + *(int *)(v6 + 32);
  uint64_t v8 = sub_1000E3EE0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  uint64_t v11 = sub_1000082B4(&qword_100129F28);
  v10(v7 + *(int *)(v11 + 36), v8);
  uint64_t v12 = v5 + *(int *)(v6 + 36);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8)) {
    v10(v12, v8);
  }
  type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100042728(void *a1, void *a2, uint64_t a3)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E41D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = a3;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v35 = a1;
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  void *v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(void *)((char *)a2 + v7 + 24);
  v8[2] = *(void *)((char *)a2 + v7 + 16);
  v8[3] = v11;
  uint64_t v12 = *(void *)((char *)a2 + v7 + 40);
  v8[4] = *(void *)((char *)a2 + v7 + 32);
  v8[5] = v12;
  uint64_t v13 = *(void *)((char *)a2 + v7 + 56);
  v8[6] = *(void *)((char *)a2 + v7 + 48);
  v8[7] = v13;
  uint64_t v14 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v15 = *(int *)(v14 + 32);
  uint64_t v32 = (char *)v8 + v15;
  unsigned int v33 = (int *)v14;
  uint64_t v31 = &v9[v15];
  uint64_t v16 = sub_1000E3EE0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v32, v31, v16);
  uint64_t v19 = *(int *)(sub_1000082B4(&qword_100129F28) + 36);
  v18(&v32[v19], &v31[v19], v16);
  uint64_t v20 = v33[9];
  uint64_t v21 = (char *)v8 + v20;
  uint64_t v22 = &v9[v20];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&v9[v20], 1, v16))
  {
    uint64_t v23 = sub_1000082B4(&qword_100129F30);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v18(v21, v22, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
  }
  *((unsigned char *)v8 + v33[10]) = v9[v33[10]];
  *((unsigned char *)v8 + v33[11]) = v9[v33[11]];
  uint64_t v24 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  *(void *)((char *)v8 + *(int *)(v24 + 20)) = *(void *)&v9[*(int *)(v24 + 20)];
  uint64_t v25 = *(int *)(v34 + 24);
  uint64_t v26 = (char *)v35 + v25;
  uint64_t v27 = (char *)a2 + v25;
  *uint64_t v26 = *v27;
  uint64_t v28 = *((void *)v27 + 2);
  *((void *)v26 + 1) = *((void *)v27 + 1);
  *((void *)v26 + 2) = v28;
  uint64_t v29 = *((void *)v27 + 4);
  *((void *)v26 + 3) = *((void *)v27 + 3);
  *((void *)v26 + 4) = v29;
  *((void *)v26 + 5) = *((void *)v27 + 5);
  v26[48] = v27[48];
  *(_OWORD *)(v26 + 56) = *(_OWORD *)(v27 + 56);
  *((void *)v26 + 9) = *((void *)v27 + 9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v35;
}

void *sub_100042A38(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100042E60((uint64_t)a1);
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E41D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v32 = a1;
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  void *v8 = *(void *)((char *)a2 + v7);
  v8[1] = *(void *)((char *)a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[6] = v9[6];
  v8[7] = v9[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v11 = v10[8];
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (char *)v9 + v11;
  uint64_t v14 = sub_1000E3EE0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 24);
  v16(v12, v13, v14);
  uint64_t v17 = sub_1000082B4(&qword_100129F28);
  v16(&v12[*(int *)(v17 + 36)], &v13[*(int *)(v17 + 36)], v14);
  uint64_t v18 = v10[9];
  uint64_t v19 = (char *)v9 + v18;
  uint64_t v20 = *(uint64_t (**)(void))(v15 + 48);
  uint64_t v30 = (char *)v8 + v18;
  int v21 = v20();
  int v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v19, 1, v14);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v30, v19, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v30, 0, 1, v14);
      goto LABEL_14;
    }
    size_t v23 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v24 = v30;
  }
  else
  {
    if (!v22)
    {
      v16(v30, v19, v14);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v14);
    size_t v23 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    uint64_t v24 = v30;
  }
  memcpy(v24, v19, v23);
LABEL_14:
  *((unsigned char *)v8 + v10[10]) = *((unsigned char *)v9 + v10[10]);
  *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
  uint64_t v25 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  *(void *)((char *)v8 + *(int *)(v25 + 20)) = *(void *)((char *)v9 + *(int *)(v25 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(int *)(a3 + 24);
  uint64_t v27 = (char *)v32 + v26;
  uint64_t v28 = (char *)v31 + v26;
  *uint64_t v27 = *((unsigned char *)v31 + v26);
  *((void *)v27 + 1) = *(void *)((char *)v31 + v26 + 8);
  swift_retain();
  swift_release();
  *((void *)v27 + 2) = *((void *)v28 + 2);
  swift_retain();
  swift_release();
  *((void *)v27 + 3) = *((void *)v28 + 3);
  swift_retain();
  swift_release();
  *((void *)v27 + 4) = *((void *)v28 + 4);
  swift_retain();
  swift_release();
  *((void *)v27 + 5) = *((void *)v28 + 5);
  v27[48] = v28[48];
  *((void *)v27 + 7) = *((void *)v28 + 7);
  *((void *)v27 + 8) = *((void *)v28 + 8);
  *((void *)v27 + 9) = *((void *)v28 + 9);
  return v32;
}

uint64_t sub_100042E60(uint64_t a1)
{
  uint64_t v2 = sub_1000082B4(&qword_100129F20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100042EC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E41D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *(_OWORD *)&a2[v8 + 16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)&a2[v8];
  *((_OWORD *)v9 + 1) = v11;
  long long v12 = *(_OWORD *)&a2[v8 + 48];
  *((_OWORD *)v9 + 2) = *(_OWORD *)&a2[v8 + 32];
  *((_OWORD *)v9 + 3) = v12;
  uint64_t v13 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v14 = v13[8];
  uint64_t v15 = &v9[v14];
  uint64_t v16 = &v10[v14];
  uint64_t v17 = sub_1000E3EE0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v19(v15, v16, v17);
  uint64_t v20 = sub_1000082B4(&qword_100129F28);
  v19(&v15[*(int *)(v20 + 36)], &v16[*(int *)(v20 + 36)], v17);
  uint64_t v21 = v13[9];
  int v22 = &v9[v21];
  size_t v23 = &v10[v21];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&v10[v21], 1, v17))
  {
    uint64_t v24 = sub_1000082B4(&qword_100129F30);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v19(v22, v23, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  v9[v13[10]] = v10[v13[10]];
  v9[v13[11]] = v10[v13[11]];
  uint64_t v25 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  *(void *)&v9[*(int *)(v25 + 20)] = *(void *)&v10[*(int *)(v25 + 20)];
  uint64_t v26 = *(int *)(v33 + 24);
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &v34[v26];
  long long v29 = *((_OWORD *)v28 + 4);
  long long v30 = *((_OWORD *)v28 + 2);
  *((_OWORD *)v27 + 3) = *((_OWORD *)v28 + 3);
  *((_OWORD *)v27 + 4) = v29;
  long long v31 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v31;
  *((_OWORD *)v27 + 2) = v30;
  return a1;
}

char *sub_10004314C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100042E60((uint64_t)a1);
    uint64_t v6 = sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  long long v36 = a2;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v37 = a1;
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)&a2[v8 + 8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v10 + 3);
  *((void *)v9 + 2) = *((void *)v10 + 2);
  *((void *)v9 + 3) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)v10 + 5);
  *((void *)v9 + 4) = *((void *)v10 + 4);
  *((void *)v9 + 5) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *((void *)v10 + 7);
  *((void *)v9 + 6) = *((void *)v10 + 6);
  *((void *)v9 + 7) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v16 = v15[8];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_1000E3EE0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 40);
  v21(v17, v18, v19);
  uint64_t v22 = sub_1000082B4(&qword_100129F28);
  v21(&v17[*(int *)(v22 + 36)], &v18[*(int *)(v22 + 36)], v19);
  uint64_t v23 = v15[9];
  uint64_t v24 = &v10[v23];
  uint64_t v25 = *(uint64_t (**)(void))(v20 + 48);
  uint64_t v35 = &v9[v23];
  int v26 = v25();
  int v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v25)(v24, 1, v19);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v35, v24, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v35, 0, 1, v19);
      goto LABEL_13;
    }
    size_t v28 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    long long v29 = v35;
  }
  else
  {
    if (!v27)
    {
      v21(v35, v24, v19);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v35, v19);
    size_t v28 = *(void *)(*(void *)(sub_1000082B4(&qword_100129F30) - 8) + 64);
    long long v29 = v35;
  }
  memcpy(v29, v24, v28);
LABEL_13:
  v9[v15[10]] = v10[v15[10]];
  v9[v15[11]] = v10[v15[11]];
  uint64_t v30 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  *(void *)&v9[*(int *)(v30 + 20)] = *(void *)&v10[*(int *)(v30 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = &v37[v31];
  uint64_t v33 = &v36[v31];
  *uint64_t v32 = v36[v31];
  *((void *)v32 + 1) = *(void *)&v36[v31 + 8];
  swift_release();
  *((void *)v32 + 2) = *((void *)v33 + 2);
  swift_release();
  *((void *)v32 + 3) = *((void *)v33 + 3);
  swift_release();
  *((void *)v32 + 4) = *((void *)v33 + 4);
  swift_release();
  *((void *)v32 + 5) = *((void *)v33 + 5);
  v32[48] = v33[48];
  *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
  *((void *)v32 + 9) = *((void *)v33 + 9);
  return v37;
}

uint64_t sub_10004350C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100043520);
}

uint64_t sub_100043520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10004363C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100043650);
}

uint64_t sub_100043650(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000082B4(&qword_100129F40);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SportsWidgetSoccerClockView(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012B950);
}

void sub_100043788()
{
  sub_10000C634();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsWidgetSoccerClockViewModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100043858()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100043874@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000082B4(&qword_10012B990);
  __chkstk_darwin(v4 - 8);
  uint64_t v39 = (uint64_t)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsWidgetSoccerClockView(0);
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v32 - v11;
  uint64_t v38 = (uint64_t)v32 - v11;
  uint64_t v13 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v2 + *(int *)(v7 + 28);
  uint64_t v37 = v15;
  sub_100044240(v16, (uint64_t)v15, type metadata accessor for SportsWidgetGenericClockViewModel);
  uint64_t v17 = (unsigned __int8 *)(v2 + *(int *)(v7 + 32));
  int v36 = *v17;
  uint64_t v18 = *((void *)v17 + 1);
  uint64_t v19 = *((void *)v17 + 2);
  uint64_t v20 = *((void *)v17 + 4);
  uint64_t v40 = *((void *)v17 + 3);
  uint64_t v35 = *((void *)v17 + 5);
  int v34 = v17[48];
  long long v33 = *(_OWORD *)(v17 + 56);
  uint64_t v21 = *((void *)v17 + 9);
  sub_100044240(v2, (uint64_t)v12, type metadata accessor for SportsWidgetSoccerClockView);
  uint64_t v22 = (uint64_t)v10;
  sub_100044240(v2, (uint64_t)v10, type metadata accessor for SportsWidgetSoccerClockView);
  *a1 = swift_getKeyPath();
  sub_1000082B4(&qword_100129F20);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (int *)sub_1000082B4(&qword_10012B998);
  uint64_t v24 = (uint64_t *)((char *)a1 + v23[9]);
  *uint64_t v24 = swift_getKeyPath();
  sub_1000082B4(&qword_10012B9A0);
  swift_storeEnumTagMultiPayload();
  sub_100044240((uint64_t)v15, (uint64_t)a1 + v23[11], type metadata accessor for SportsWidgetGenericClockViewModel);
  uint64_t v25 = (char *)a1 + v23[10];
  *uint64_t v25 = v36;
  v32[0] = v19;
  v32[1] = v18;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v19;
  *((void *)v25 + 3) = v40;
  *((void *)v25 + 4) = v20;
  *((void *)v25 + 5) = v35;
  v25[48] = v34;
  *(_OWORD *)(v25 + 56) = v33;
  *((void *)v25 + 9) = v21;
  uint64_t v26 = (uint64_t)a1 + v23[12];
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  uint64_t v27 = v38;
  sub_100043C5C(v38, v26);
  uint64_t v28 = sub_1000082B4(&qword_10012B9A8);
  long long v29 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  v29(v26, 0, 1, v28);
  uint64_t v30 = v39;
  sub_100043F4C(v22, v39);
  sub_100044964(v22, type metadata accessor for SportsWidgetSoccerClockView);
  sub_100044964(v27, type metadata accessor for SportsWidgetSoccerClockView);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100044964((uint64_t)v37, type metadata accessor for SportsWidgetGenericClockViewModel);
  v29(v30, 0, 1, v28);
  return sub_100014B08(v30, (uint64_t)a1 + v23[13], &qword_10012B990);
}

uint64_t sub_100043C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000E48B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SportsWidgetSoccerClockView(0);
  uint64_t v9 = a1 + *(int *)(v8 + 20);
  uint64_t v10 = *(void *)(v9 + *(int *)(type metadata accessor for SportsWidgetSoccerClockViewModel(0) + 20));
  if (v10 && *(void *)(v10 + 16) == 2)
  {
    uint64_t v11 = *(void *)(v10 + 32);
    uint64_t v12 = (unsigned __int8 *)(a1 + *(int *)(v8 + 24));
    int v29 = *v12;
    uint64_t v13 = *((void *)v12 + 1);
    uint64_t v14 = *((void *)v12 + 2);
    uint64_t v15 = *((void *)v12 + 3);
    uint64_t v16 = *((void *)v12 + 4);
    uint64_t v28 = *((void *)v12 + 5);
    int v27 = v12[48];
    long long v26 = *(_OWORD *)(v12 + 56);
    uint64_t v17 = *((void *)v12 + 9);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    int v25 = sub_1000E46B0();
    int v18 = sub_1000E46C0();
    uint64_t v30 = 0x4014000000000000;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.footnote(_:), v4);
    sub_1000449E4();
    sub_1000E4020();
    uint64_t v19 = (int *)type metadata accessor for CompetitorShootoutsView(0);
    uint64_t v30 = 0x4010000000000000;
    sub_1000E4030();
    *(void *)(a2 + v19[6]) = v11;
    uint64_t v20 = a2 + v19[7];
    *(unsigned char *)uint64_t v20 = v29;
    *(void *)(v20 + 8) = v13;
    *(void *)(v20 + 16) = v14;
    *(void *)(v20 + 24) = v15;
    *(void *)(v20 + 32) = v16;
    *(void *)(v20 + 40) = v28;
    *(unsigned char *)(v20 + 48) = v27;
    *(_OWORD *)(v20 + 56) = v26;
    *(void *)(v20 + 72) = v17;
    *(void *)(v20 + 80) = 0x3FF0000000000000;
    *(_DWORD *)(a2 + v19[8]) = v25;
    *(_DWORD *)(a2 + v19[9]) = v18;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v19 - 1) + 56))(a2, 0, 1, v19);
  }
  else
  {
    uint64_t v22 = type metadata accessor for CompetitorShootoutsView(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return v23(a2, 1, 1, v22);
  }
}

uint64_t sub_100043F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000E48B0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SportsWidgetSoccerClockView(0);
  uint64_t v9 = a1 + *(int *)(v8 + 20);
  uint64_t v10 = *(void *)(v9 + *(int *)(type metadata accessor for SportsWidgetSoccerClockViewModel(0) + 20));
  if (v10 && *(void *)(v10 + 16) == 2)
  {
    uint64_t v11 = *(void *)(v10 + 40);
    uint64_t v12 = (unsigned __int8 *)(a1 + *(int *)(v8 + 24));
    int v29 = *v12;
    uint64_t v13 = *((void *)v12 + 1);
    uint64_t v14 = *((void *)v12 + 2);
    uint64_t v15 = *((void *)v12 + 3);
    uint64_t v16 = *((void *)v12 + 4);
    uint64_t v28 = *((void *)v12 + 5);
    int v27 = v12[48];
    long long v26 = *(_OWORD *)(v12 + 56);
    uint64_t v17 = *((void *)v12 + 9);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    int v25 = sub_1000E46B0();
    int v18 = sub_1000E46C0();
    uint64_t v30 = 0x4014000000000000;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.footnote(_:), v4);
    sub_1000449E4();
    sub_1000E4020();
    uint64_t v19 = (int *)type metadata accessor for CompetitorShootoutsView(0);
    uint64_t v30 = 0x4010000000000000;
    sub_1000E4030();
    *(void *)(a2 + v19[6]) = v11;
    uint64_t v20 = a2 + v19[7];
    *(unsigned char *)uint64_t v20 = v29;
    *(void *)(v20 + 8) = v13;
    *(void *)(v20 + 16) = v14;
    *(void *)(v20 + 24) = v15;
    *(void *)(v20 + 32) = v16;
    *(void *)(v20 + 40) = v28;
    *(unsigned char *)(v20 + 48) = v27;
    *(_OWORD *)(v20 + 56) = v26;
    *(void *)(v20 + 72) = v17;
    *(void *)(v20 + 80) = 0x3FF0000000000000;
    *(_DWORD *)(a2 + v19[8]) = v25;
    *(_DWORD *)(a2 + v19[9]) = v18;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v19 - 1) + 56))(a2, 0, 1, v19);
  }
  else
  {
    uint64_t v22 = type metadata accessor for CompetitorShootoutsView(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return v23(a2, 1, 1, v22);
  }
}

uint64_t sub_100044240(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000442A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CompetitorShootoutsView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v7 = sub_1000082B4(&qword_10012BA70);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + *(int *)(v4 + 36)) == 2) {
    uint64_t v10 = 0x4004000000000000;
  }
  else {
    uint64_t v10 = 0x4010000000000000;
  }
  *(void *)uint64_t v9 = sub_1000E4510();
  *((void *)v9 + 1) = v10;
  v9[16] = 0;
  sub_1000082B4(&qword_10012BA78);
  uint64_t v11 = *(void *)(*(void *)(v1 + *(int *)(v4 + 32)) + 16);
  v15[0] = 0;
  v15[1] = v11;
  swift_getKeyPath();
  sub_100044240(v1, (uint64_t)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CompetitorShootoutsView);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  sub_100045584((uint64_t)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  sub_1000082B4(&qword_10012BA80);
  sub_1000082B4(&qword_10012BA88);
  sub_100045668();
  sub_100045738();
  sub_1000E4EB0();
  return sub_100014B08((uint64_t)v9, a1, &qword_10012BA70);
}

int *sub_1000444DC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5 = *a1;
  uint64_t result = (int *)type metadata accessor for CompetitorShootoutsView(0);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + result[6]);
    if (v5 < *(void *)(v7 + 16))
    {
      int v8 = *(unsigned __int8 *)(v7 + v5 + 32);
      if (v8)
      {
        if (v8 == 1)
        {
          sub_1000447F4((uint64_t)&v35);
          long long v20 = v35;
          long long v21 = v36;
          long long v22 = *(_OWORD *)v37;
          LOWORD(v23) = *(_WORD *)&v37[16];
          long long v24 = *(_OWORD *)&v37[24];
          uint64_t v25 = *(void *)&v37[40];
          char v26 = v38;
          uint64_t v27 = *((void *)&v38 + 1);
          char v28 = v39[0];
          long long v29 = *(_OWORD *)((char *)v39 + 8);
          sub_100045968((uint64_t)&v20);
LABEL_9:
          sub_100014B08((uint64_t)&v20, (uint64_t)v19, &qword_10012BAF8);
          sub_1000082B4(&qword_10012BAB0);
          sub_1000082B4(&qword_10012BAE0);
          sub_1000457B4();
          sub_1000458C8();
          uint64_t result = (int *)sub_1000E4690();
          long long v11 = v38;
          a3[4] = *(_OWORD *)&v37[32];
          a3[5] = v11;
          a3[6] = v39[0];
          *(_OWORD *)((char *)a3 + 105) = *(_OWORD *)((char *)v39 + 9);
          long long v12 = v36;
          *a3 = v35;
          a3[1] = v12;
          long long v13 = *(_OWORD *)&v37[16];
          a3[2] = *(_OWORD *)v37;
          a3[3] = v13;
          return result;
        }
        uint64_t v10 = *(unsigned int *)(a2 + result[8]);
        sub_1000082B4(&qword_10012B9B8);
        sub_1000E4040();
        sub_1000E4040();
        sub_1000E4F50();
        sub_1000E40A0();
        *(void *)&long long v35 = v10 | 0x10000000000;
        *((void *)&v35 + 1) = v30;
        *(void *)&long long v36 = v31;
        *((void *)&v36 + 1) = v32;
        *(void *)uint64_t v37 = v33;
        *(_OWORD *)&v37[8] = v34;
        v37[24] = 1;
      }
      else
      {
        uint64_t v9 = *(unsigned int *)(a2 + result[9]);
        sub_1000082B4(&qword_10012B9B8);
        sub_1000E4040();
        sub_1000E4040();
        sub_1000E4F50();
        sub_1000E40A0();
        *(void *)&long long v35 = v9 | 0x10000000000;
        *((void *)&v35 + 1) = v30;
        *(void *)&long long v36 = v31;
        *((void *)&v36 + 1) = v32;
        *(void *)uint64_t v37 = v33;
        *(_OWORD *)&v37[8] = v34;
        v37[24] = 0;
      }
      sub_1000082B4(&qword_10012BAC0);
      sub_100045828();
      sub_1000E4690();
      long long v20 = v14;
      long long v21 = v15;
      long long v22 = v16;
      uint64_t v23 = v17;
      LOBYTE(v24) = v18;
      sub_100045974((uint64_t)&v20);
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

double sub_1000447F4@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for CompetitorShootoutsView(0);
  sub_1000E4000();
  uint64_t v2 = sub_1000E4F50();
  uint64_t v4 = v3;
  sub_1000082B4(&qword_10012B9B8);
  sub_1000E4040();
  sub_1000E4040();
  sub_1000E4F50();
  sub_1000E40A0();
  *(double *)a1 = v6 * 0.5;
  *(double *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(_WORD *)(a1 + 48) = 256;
  *(void *)(a1 + 56) = v2;
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v13;
  *(unsigned char *)(a1 + 96) = v14;
  double result = *(double *)&v15;
  *(_OWORD *)(a1 + 104) = v15;
  return result;
}

uint64_t sub_100044964(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for CompetitorShootoutsView(uint64_t a1)
{
  return sub_10002B794(a1, (uint64_t *)&unk_10012BA18);
}

unint64_t sub_1000449E4()
{
  unint64_t result = qword_10012B9B0;
  if (!qword_10012B9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012B9B0);
  }
  return result;
}

uint64_t *sub_100044A38(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000082B4(&qword_10012B9B8);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(v4, a2, v7);
    v8((uint64_t *)((char *)v4 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    char *v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = *((void *)v11 + 3);
    *((void *)v10 + 4) = v13;
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
    *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    uint64_t v14 = a3[9];
    *(_DWORD *)((char *)v4 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    *(_DWORD *)((char *)v4 + v14) = *(_DWORD *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100044BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000082B4(&qword_10012B9B8);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100044C78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  uint64_t v12 = *(void *)(v10 + 32);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
  uint64_t v13 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + v13) = *(_DWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100044DA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)(a2 + v8);
  *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
  swift_retain();
  swift_release();
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  swift_retain();
  swift_release();
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  swift_retain();
  swift_release();
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  swift_retain();
  swift_release();
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(void *)(v9 + 64) = *(void *)(v10 + 64);
  *(void *)(v9 + 72) = *(void *)(v10 + 72);
  *(void *)(v9 + 80) = *(void *)(v10 + 80);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100044F14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 80) = *(void *)(v10 + 80);
  long long v12 = *(_OWORD *)(v10 + 64);
  long long v13 = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 64) = v12;
  *(_OWORD *)(v9 + 32) = v13;
  uint64_t v14 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  return a1;
}

uint64_t sub_100044FF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)(a2 + v8);
  *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
  swift_release();
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  swift_release();
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  swift_release();
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  swift_release();
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
  uint64_t v11 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_100045130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100045144);
}

uint64_t sub_100045144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100045208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004521C);
}

uint64_t sub_10004521C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000082B4(&qword_10012B9B8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_1000452DC()
{
  sub_100045390();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100045390()
{
  if (!qword_10012BA28)
  {
    sub_1000449E4();
    unint64_t v0 = sub_1000E4050();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10012BA28);
    }
  }
}

uint64_t sub_1000453EC()
{
  return sub_100014AC4(&qword_10012BA68, &qword_10012B998);
}

uint64_t sub_100045428()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100045444()
{
  uint64_t v1 = (int *)(type metadata accessor for CompetitorShootoutsView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[7], v7);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100045584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CompetitorShootoutsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

int *sub_1000455E8@<X0>(unint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CompetitorShootoutsView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000444DC(a1, v6, a2);
}

unint64_t sub_100045668()
{
  unint64_t result = qword_10012BA90;
  if (!qword_10012BA90)
  {
    sub_100008354(&qword_10012BA80);
    sub_1000456E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BA90);
  }
  return result;
}

unint64_t sub_1000456E4()
{
  unint64_t result = qword_10012BA98;
  if (!qword_10012BA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BA98);
  }
  return result;
}

unint64_t sub_100045738()
{
  unint64_t result = qword_10012BAA0;
  if (!qword_10012BAA0)
  {
    sub_100008354(&qword_10012BA88);
    sub_1000457B4();
    sub_1000458C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BAA0);
  }
  return result;
}

unint64_t sub_1000457B4()
{
  unint64_t result = qword_10012BAA8;
  if (!qword_10012BAA8)
  {
    sub_100008354(&qword_10012BAB0);
    sub_100045828();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BAA8);
  }
  return result;
}

unint64_t sub_100045828()
{
  unint64_t result = qword_10012BAB8;
  if (!qword_10012BAB8)
  {
    sub_100008354(&qword_10012BAC0);
    sub_100014AC4(&qword_10012BAC8, &qword_10012BAD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BAB8);
  }
  return result;
}

unint64_t sub_1000458C8()
{
  unint64_t result = qword_10012BAD8;
  if (!qword_10012BAD8)
  {
    sub_100008354(&qword_10012BAE0);
    sub_100014AC4(&qword_10012BAE8, &qword_10012BAF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BAD8);
  }
  return result;
}

uint64_t sub_100045968(uint64_t result)
{
  *(unsigned char *)(result + 120) = 1;
  return result;
}

uint64_t sub_100045974(uint64_t result)
{
  *(unsigned char *)(result + 120) = 0;
  return result;
}

uint64_t sub_10004597C()
{
  return sub_100014AC4(&qword_10012BB00, &qword_10012BA70);
}

double sub_1000459B8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Color.init(hex:)(0x334133413341, 0xE600000000000000);
  if (!v2) {
    uint64_t v2 = sub_1000E4C10();
  }
  uint64_t v3 = v2;
  uint64_t v4 = Color.init(hex:)(0x433341334133, 0xE600000000000000);
  if (!v4) {
    uint64_t v4 = sub_1000E4C10();
  }
  uint64_t v5 = v4;
  uint64_t v6 = Color.init(hex:)(0x413141314131, 0xE600000000000000);
  *(_OWORD *)a1 = xmmword_1000F1D90;
  *(_OWORD *)(a1 + 16) = xmmword_1000F1DA0;
  double result = 2.0;
  *(_OWORD *)(a1 + 32) = xmmword_1000F1DB0;
  *(_OWORD *)(a1 + 48) = xmmword_1000F1DC0;
  *(void *)(a1 + 64) = 0x4008000000000000;
  *(void *)(a1 + 72) = v3;
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 88) = v6;
  return result;
}

uint64_t destroy for SportsWidgetStaleViewLayout()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SportsWidgetStaleViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v3 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v3;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SportsWidgetStaleViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SportsWidgetStaleViewLayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetStaleViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetStaleViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetStaleViewLayout()
{
  return &type metadata for SportsWidgetStaleViewLayout;
}

unint64_t sub_100045D00()
{
  unint64_t result = qword_10012BB08;
  if (!qword_10012BB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB08);
  }
  return result;
}

uint64_t sub_100045D54()
{
  return sub_100014AC4(&qword_10012BB10, &qword_10012BB18);
}

void sub_100045D90()
{
  qword_100141EE0 = (uint64_t)&off_10011FF40;
}

uint64_t sub_100045DA4()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  long long v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100141EE8);
  sub_100008498(v10, (uint64_t)qword_100141EE8);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_100046090()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_100141F00);
  sub_100008498(v0, (uint64_t)qword_100141F00);
  return sub_1000E3D80();
}

uint64_t sub_1000460F4()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_100141F18);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100141F18);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1000461AC()
{
  uint64_t result = swift_getKeyPath();
  qword_100141F30 = result;
  return result;
}

uint64_t sub_1000461D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return _swift_task_switch(sub_1000461F8, 0, 0);
}

uint64_t sub_1000461F8()
{
  sub_1000E3A40();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  sub_1000E3A40();
  *(unsigned char *)(v0 + 225) = *(unsigned char *)(v0 + 226);
  if (qword_100129CC0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100141F30;
  *(void *)(v0 + 152) = qword_100141F30;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = sub_100014AC4(&qword_10012BCD0, &qword_10012BCD8);
  *(void *)(v0 + 168) = v5;
  void *v4 = v0;
  v4[1] = sub_10004635C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 225, v3, &type metadata for Bool, v5);
}

uint64_t sub_10004635C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FEC;
  }
  else {
    uint64_t v2 = sub_1000464CC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000464CC()
{
  sub_1000E3A40();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  v0[23] = v2;
  v0[24] = v3;
  v0[8] = v1;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v4 = qword_100141F30;
  v0[25] = qword_100141F30;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  void *v5 = v0;
  v5[1] = sub_100019DF4;
  uint64_t v6 = v0[21];
  return AppEntity._value<A, B>(for:)(v0 + 28, v4, v6);
}

uint64_t sub_1000465B4()
{
  if (qword_100129CC0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100046614()
{
  unint64_t result = qword_10012BB20;
  if (!qword_10012BB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB20);
  }
  return result;
}

unint64_t sub_10004666C()
{
  unint64_t result = qword_10012BB28;
  if (!qword_10012BB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB28);
  }
  return result;
}

uint64_t sub_1000466C0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1000466F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100046744@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129CB0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100141F00, a1);
}

uint64_t sub_10004677C@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129CB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100141F18);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_1000467F8(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100015DF8;
  *(_OWORD *)(v4 + 120) = *v1;
  *(void *)(v4 + 112) = a1;
  return _swift_task_switch(sub_1000461F8, 0, 0);
}

uint64_t sub_1000468AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100047E0C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1000468D4()
{
  return 0xD000000000000044;
}

unint64_t sub_1000468F4()
{
  unint64_t result = qword_10012BB38;
  if (!qword_10012BB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB38);
  }
  return result;
}

unint64_t sub_10004694C()
{
  unint64_t result = qword_10012BB40;
  if (!qword_10012BB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB40);
  }
  return result;
}

uint64_t sub_1000469A0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000469C0, 0, 0);
}

uint64_t sub_1000469C0()
{
  **(unsigned char **)(v0 + 16) = sub_10007AF6C() & 1;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100046A4C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100046A70, 0, 0);
}

uint64_t sub_100046A70()
{
  sub_10007BF98(*(unsigned __int8 *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100046AEC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100046B0C, 0, 0);
}

uint64_t sub_100046B0C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t *v1 = sub_100048250();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100046B7C()
{
  unint64_t result = qword_10012BB50;
  if (!qword_10012BB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB50);
  }
  return result;
}

uint64_t sub_100046BD0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100047708();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100046C84()
{
  unint64_t result = qword_10012BB60;
  if (!qword_10012BB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB60);
  }
  return result;
}

unint64_t sub_100046CDC()
{
  unint64_t result = qword_10012BB68;
  if (!qword_10012BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB68);
  }
  return result;
}

unint64_t sub_100046D34()
{
  unint64_t result = qword_10012BB70[0];
  if (!qword_10012BB70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012BB70);
  }
  return result;
}

uint64_t sub_100046D88(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100047708();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100046E3C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100047708();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100046EF0()
{
  unint64_t result = qword_10012BB88;
  if (!qword_10012BB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB88);
  }
  return result;
}

unint64_t sub_100046F48()
{
  unint64_t result = qword_10012BB90;
  if (!qword_10012BB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB90);
  }
  return result;
}

unint64_t sub_100046FA0()
{
  unint64_t result = qword_10012BB98;
  if (!qword_10012BB98)
  {
    sub_100008354(qword_10012BBA0);
    sub_100046F48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BB98);
  }
  return result;
}

uint64_t sub_100047014(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100046B7C();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsDownloadUseDefaultSubtitleLanguagesEntity.Query()
{
  return &type metadata for TVSettingsDownloadUseDefaultSubtitleLanguagesEntity.Query;
}

ValueMetadata *type metadata accessor for TVSettingsDownloadUseDefaultSubtitleLanguagesEntity()
{
  return &type metadata for TVSettingsDownloadUseDefaultSubtitleLanguagesEntity;
}

ValueMetadata *type metadata accessor for TVSettingsDownloadUseDefaultSubtitleLanguagesEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsDownloadUseDefaultSubtitleLanguagesEntity.UpdateIntent_value;
}

uint64_t sub_1000470FC()
{
  sub_1000474F0();
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_100047190@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129CA8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100141EE8, a1);
}

uint64_t sub_1000471C8(uint64_t a1)
{
  unint64_t v2 = sub_100046D34();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100047214(uint64_t a1)
{
  unint64_t v2 = sub_10004694C();

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_100047260(uint64_t a1)
{
  unint64_t v2 = sub_100047308();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1000472B0()
{
  unint64_t result = qword_10012BBB8;
  if (!qword_10012BBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BBB8);
  }
  return result;
}

unint64_t sub_100047308()
{
  unint64_t result = qword_10012BBC8;
  if (!qword_10012BBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BBC8);
  }
  return result;
}

unint64_t sub_100047360()
{
  unint64_t result = qword_10012BBD0;
  if (!qword_10012BBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BBD0);
  }
  return result;
}

unint64_t sub_1000473B8()
{
  unint64_t result = qword_10012BBD8;
  if (!qword_10012BBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BBD8);
  }
  return result;
}

unint64_t sub_100047410()
{
  unint64_t result = qword_10012BBE0;
  if (!qword_10012BBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BBE0);
  }
  return result;
}

unint64_t sub_100047464(void *a1)
{
  a1[1] = sub_10004749C();
  a1[2] = sub_1000474F0();
  unint64_t result = sub_10004694C();
  a1[3] = result;
  return result;
}

unint64_t sub_10004749C()
{
  unint64_t result = qword_10012BC30;
  if (!qword_10012BC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BC30);
  }
  return result;
}

unint64_t sub_1000474F0()
{
  unint64_t result = qword_10012BC38;
  if (!qword_10012BC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BC38);
  }
  return result;
}

unint64_t sub_100047544(uint64_t a1)
{
  unint64_t result = sub_10004756C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10004756C()
{
  unint64_t result = qword_10012BC80;
  if (!qword_10012BC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BC80);
  }
  return result;
}

uint64_t sub_1000475C0()
{
  return sub_100014AC4(&qword_10012BC88, &qword_10012BC90);
}

unint64_t sub_100047600()
{
  unint64_t result = qword_10012BC98;
  if (!qword_10012BC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BC98);
  }
  return result;
}

unint64_t sub_100047658()
{
  unint64_t result = qword_10012BCA0;
  if (!qword_10012BCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BCA0);
  }
  return result;
}

unint64_t sub_1000476B0()
{
  unint64_t result = qword_10012BCA8;
  if (!qword_10012BCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BCA8);
  }
  return result;
}

unint64_t sub_100047708()
{
  unint64_t result = qword_10012BCB0;
  if (!qword_10012BCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BCB0);
  }
  return result;
}

uint64_t sub_10004775C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_1000082B4(&qword_10012A870);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A878);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012A880);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  __chkstk_darwin(v9);
  long long v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000082B4(&qword_10012A888);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  uint64_t v38 = v14;
  __chkstk_darwin(v13);
  uint64_t v30 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v40, "com.apple.tv.");
  HIWORD(v40[1]) = -4864;
  unint64_t v45 = (unint64_t)&type metadata for TVSettingsDownloadUseDefaultSubtitleLanguagesWidget;
  sub_1000082B4(&qword_10012BD48);
  v47._countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v47);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1000082B4(&qword_10012A898);
  sub_10004694C();
  sub_100014AC4(&qword_10012A8A0, &qword_10012A898);
  sub_1000E56D0();
  v40[0] = &type metadata for TVSettingsDownloadUseDefaultSubtitleLanguagesWidget;
  v40[0] = sub_1000E5A20();
  v40[1] = v16;
  unint64_t v45 = 0x746567646957;
  unint64_t v46 = 0xE600000000000000;
  uint64_t v43 = 0x656C67676F54;
  unint64_t v44 = 0xE600000000000000;
  unint64_t v29 = sub_100014158();
  uint64_t v17 = sub_1000E5C70();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  v40[0] = v17;
  v40[1] = v19;
  uint64_t v20 = sub_100014AC4(&qword_10012A8A8, &qword_10012A870);
  uint64_t v21 = v31;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v21);
  unint64_t v45 = 0xD000000000000040;
  unint64_t v46 = 0x80000001000E91F0;
  v40[0] = v21;
  v40[1] = &type metadata for String;
  uint64_t v41 = v20;
  unint64_t v42 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v33;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v23);
  v40[0] = v23;
  v40[1] = &type metadata for String;
  uint64_t v41 = OpaqueTypeConformance2;
  unint64_t v42 = v29;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = v30;
  uint64_t v26 = v35;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v26);
  v40[0] = v26;
  v40[1] = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v37;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v25, v27);
}

uint64_t sub_100047CFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000082B4(&qword_10012A898);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0xD000000000000015;
  v7[1] = 0x80000001000E9240;
  sub_100014158();
  sub_1000E4D30();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_100047E0C()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A7F0);
  __chkstk_darwin(v0 - 8);
  unint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000E3B90();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v22 = v13;
  uint64_t v14 = sub_1000E3DA0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_1000082B4(&qword_10012BCE0);
  sub_1000E3D80();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_1000E3A00();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100046D34();
  uint64_t v19 = v22;
  uint64_t v23 = sub_1000E3A70();
  sub_1000082B4(&qword_10012A800);
  sub_1000E3D80();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_1000E5B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_1000E3A90();
  return v23;
}

uint64_t sub_100048250()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  __chkstk_darwin(v6 - 8);
  v9[1] = &type metadata for TVSettingsDownloadUseDefaultSubtitleLanguagesEntity;
  sub_1000082B4(&qword_10012BCB8);
  uint64_t v7 = sub_1000E5A20();
  sub_1000082B4(&qword_10012BB18);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012BCD0, &qword_10012BCD8);
  sub_1000E3CA0();
  return v7;
}

uint64_t sub_10004851C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

ValueMetadata *type metadata accessor for TVSettingsDownloadUseDefaultSubtitleLanguagesWidget()
{
  return &type metadata for TVSettingsDownloadUseDefaultSubtitleLanguagesWidget;
}

uint64_t sub_100048538()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100048554(uint64_t a1)
{
  unint64_t result = sub_10004857C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10004857C()
{
  unint64_t result = qword_10012BD38;
  if (!qword_10012BD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BD38);
  }
  return result;
}

unint64_t sub_1000485D0(uint64_t a1)
{
  unint64_t result = sub_1000485F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000485F8()
{
  unint64_t result = qword_10012BD40;
  if (!qword_10012BD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BD40);
  }
  return result;
}

uint64_t *sub_10004864C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1000E5640();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    long long v14 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v14;
    v12[32] = v13[32];
    *((_DWORD *)v12 + 9) = *((_DWORD *)v13 + 9);
    *((void *)v12 + 5) = *((void *)v13 + 5);
    *((_OWORD *)v12 + 3) = *((_OWORD *)v13 + 3);
    v12[64] = v13[64];
    *((void *)v12 + 9) = *((void *)v13 + 9);
    v12[80] = v13[80];
    v12[81] = v13[81];
    v12[82] = v13[82];
    *((void *)v12 + 11) = *((void *)v13 + 11);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10004879C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1000E5640();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();

  return swift_release();
}

unsigned char *sub_100048830(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000E5640();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  v11[32] = v12[32];
  *((_DWORD *)v11 + 9) = *((_DWORD *)v12 + 9);
  *((void *)v11 + 5) = *((void *)v12 + 5);
  *((_OWORD *)v11 + 3) = *((_OWORD *)v12 + 3);
  v11[64] = v12[64];
  *((void *)v11 + 9) = *((void *)v12 + 9);
  v11[80] = v12[80];
  v11[81] = v12[81];
  v11[82] = v12[82];
  *((void *)v11 + 11) = *((void *)v12 + 11);
  swift_retain();
  swift_retain();
  return a1;
}

unsigned char *sub_100048934(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000E5640();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_retain();
  swift_release();
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  *((void *)v11 + 2) = *((void *)v12 + 2);
  *((void *)v11 + 3) = *((void *)v12 + 3);
  v11[32] = v12[32];
  *((_DWORD *)v11 + 9) = *((_DWORD *)v12 + 9);
  *((void *)v11 + 5) = *((void *)v12 + 5);
  swift_retain();
  swift_release();
  *((void *)v11 + 6) = *((void *)v12 + 6);
  *((void *)v11 + 7) = *((void *)v12 + 7);
  v11[64] = v12[64];
  *((void *)v11 + 9) = *((void *)v12 + 9);
  v11[80] = v12[80];
  v11[81] = v12[81];
  v11[82] = v12[82];
  *((void *)v11 + 11) = *((void *)v12 + 11);
  return a1;
}

unsigned char *sub_100048A70(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000E5640();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = v12[3];
  v11[2] = v12[2];
  v11[3] = v13;
  long long v14 = v12[5];
  v11[4] = v12[4];
  v11[5] = v14;
  long long v15 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v15;
  return a1;
}

unsigned char *sub_100048B28(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1000E5640();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_release();
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  v11[32] = v12[32];
  *((_DWORD *)v11 + 9) = *((_DWORD *)v12 + 9);
  *((void *)v11 + 5) = *((void *)v12 + 5);
  swift_release();
  *((_OWORD *)v11 + 3) = *((_OWORD *)v12 + 3);
  v11[64] = v12[64];
  *((void *)v11 + 9) = *((void *)v12 + 9);
  v11[80] = v12[80];
  v11[81] = v12[81];
  v11[82] = v12[82];
  *((void *)v11 + 11) = *((void *)v12 + 11);
  return a1;
}

uint64_t sub_100048C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100048C48);
}

uint64_t sub_100048C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E5640();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_100048D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100048D20);
}

uint64_t sub_100048D20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000E5640();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TVWidgetContentView(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012BDA8);
}

uint64_t sub_100048E00()
{
  uint64_t result = sub_1000E5640();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100048EB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100048ECC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v370 = a1;
  uint64_t v347 = type metadata accessor for TVWidgetLockscreenCell();
  __chkstk_darwin(v347);
  v330 = (char *)&v296 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v344 = sub_1000082B4(&qword_10012BDE8);
  __chkstk_darwin(v344);
  uint64_t v345 = (uint64_t)&v296 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = sub_1000082B4(&qword_10012BDF0);
  uint64_t v325 = *(void *)(v346 - 8);
  __chkstk_darwin(v346);
  v324 = (char *)&v296 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v363 = sub_1000082B4(&qword_10012BDF8);
  __chkstk_darwin(v363);
  v348 = (char *)&v296 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v361 = sub_1000082B4(&qword_10012BE00);
  __chkstk_darwin(v361);
  uint64_t v362 = (uint64_t)&v296 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v372 = sub_1000082B4(&qword_10012BE08);
  __chkstk_darwin(v372);
  v364 = (char *)&v296 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v352 = sub_1000082B4(&qword_10012BE10);
  __chkstk_darwin(v352);
  *(void *)&long long v353 = (char *)&v296 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = sub_1000082B4(&qword_10012BE18);
  uint64_t v311 = *(void *)(v331 - 8);
  __chkstk_darwin(v331);
  v310 = (char *)&v296 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v326 = sub_1000082B4(&qword_10012BE20);
  __chkstk_darwin(v326);
  v329 = (char *)&v296 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v350 = type metadata accessor for TVWidgetFeatured(0);
  __chkstk_darwin(v350);
  v335 = (uint64_t *)((char *)&v296 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v327 = sub_1000082B4(&qword_10012BE28);
  uint64_t v313 = *(void *)(v327 - 8);
  uint64_t v12 = __chkstk_darwin(v327);
  v309 = (char *)&v296 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v312 = (char *)&v296 - v14;
  uint64_t v349 = sub_1000082B4(&qword_10012BE30);
  __chkstk_darwin(v349);
  v328 = (char *)&v296 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v360 = sub_1000082B4(&qword_10012BE38);
  __chkstk_darwin(v360);
  v351 = (char *)&v296 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v337 = sub_1000082B4(&qword_10012BE40);
  __chkstk_darwin(v337);
  uint64_t v343 = (uint64_t)&v296 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v323 = sub_1000082B4(&qword_10012BE48);
  uint64_t v306 = *(void *)(v323 - 8);
  __chkstk_darwin(v323);
  v305 = (char *)&v296 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = sub_1000082B4(&qword_10012BE50);
  __chkstk_darwin(v319);
  v322 = (char *)&v296 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v355 = type metadata accessor for TVWidgetCell(0);
  __chkstk_darwin(v355);
  v334 = (uint64_t *)((char *)&v296 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v320 = sub_1000082B4(&qword_10012BE58);
  uint64_t v308 = *(void *)(v320 - 8);
  uint64_t v21 = __chkstk_darwin(v320);
  v304 = (char *)&v296 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v307 = (char *)&v296 - v23;
  uint64_t v341 = sub_1000082B4(&qword_10012BE60);
  __chkstk_darwin(v341);
  v321 = (char *)&v296 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v357 = sub_1000082B4(&qword_10012BE68);
  __chkstk_darwin(v357);
  v342 = (char *)&v296 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v368 = sub_1000082B4(&qword_10012BE70);
  __chkstk_darwin(v368);
  uint64_t v369 = (uint64_t)&v296 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v358 = sub_1000082B4(&qword_10012BE78);
  __chkstk_darwin(v358);
  uint64_t v359 = (uint64_t)&v296 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v371 = sub_1000082B4(&qword_10012BE80);
  __chkstk_darwin(v371);
  v356 = (char *)&v296 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v336 = sub_1000082B4(&qword_10012BE88);
  __chkstk_darwin(v336);
  uint64_t v340 = (uint64_t)&v296 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v318 = sub_1000082B4(&qword_10012BE90);
  uint64_t v302 = *(void *)(v318 - 8);
  __chkstk_darwin(v318);
  v301 = (char *)&v296 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v314 = sub_1000082B4(&qword_10012BE98);
  __chkstk_darwin(v314);
  v317 = (char *)&v296 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v366 = sub_1000E5640();
  uint64_t v367 = *(void *)(v366 - 8);
  __chkstk_darwin(v366);
  v365 = (char *)&v296 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v339 = type metadata accessor for TVWidgetLockup(0);
  __chkstk_darwin(v339);
  v332 = (uint64_t *)((char *)&v296 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v315 = sub_1000082B4(&qword_10012BEA0);
  uint64_t v303 = *(void *)(v315 - 8);
  uint64_t v34 = __chkstk_darwin(v315);
  v299 = (char *)&v296 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v300 = (char *)&v296 - v36;
  uint64_t v338 = sub_1000082B4(&qword_10012BEA8);
  __chkstk_darwin(v338);
  v316 = (char *)&v296 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000082B4(&qword_100129F38);
  uint64_t v39 = __chkstk_darwin(v38 - 8);
  uint64_t v41 = (char *)&v296 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v39);
  unint64_t v44 = (char *)&v296 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  Swift::String v47 = (char *)&v296 - v46;
  uint64_t v48 = __chkstk_darwin(v45);
  v333 = (char *)&v296 - v49;
  __chkstk_darwin(v48);
  long long v51 = (char *)&v296 - v50;
  uint64_t v374 = sub_1000E3E00();
  *(void *)&long long v373 = *(void *)(v374 - 8);
  uint64_t v52 = __chkstk_darwin(v374);
  uint64_t v54 = (char *)&v296 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __chkstk_darwin(v52);
  uint64_t v57 = (char *)&v296 - v56;
  uint64_t v58 = __chkstk_darwin(v55);
  uint64_t v60 = (char *)&v296 - v59;
  uint64_t v61 = __chkstk_darwin(v58);
  v354 = (char *)&v296 - v62;
  __chkstk_darwin(v61);
  uint64_t v64 = (char *)&v296 - v63;
  uint64_t v65 = sub_1000082B4(&qword_10012BEB0);
  uint64_t v66 = __chkstk_darwin(v65);
  uint64_t v68 = (char *)&v296 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v1;
  switch(*v1)
  {
    case 1:
      v364 = (char *)v66;
      uint64_t v153 = (int *)type metadata accessor for TVWidgetContentView(0);
      uint64_t v154 = v153[6];
      uint64_t v155 = *(void *)&v1[v154];
      uint64_t v156 = v155 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_actionURL;
      swift_beginAccess();
      sub_100014754(v156, (uint64_t)v47, &qword_100129F38);
      uint64_t v157 = v373;
      uint64_t v158 = v374;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v373 + 48))(v47, 1, v374) == 1)
      {
        sub_1000147B8((uint64_t)v47, &qword_100129F38);
        uint64_t v159 = &v69[v153[7]];
        long long v373 = *(_OWORD *)v159;
        uint64_t v160 = *((void *)v159 + 2);
        uint64_t v161 = *((void *)v159 + 3);
        LODWORD(v363) = v159[32];
        LODWORD(v362) = *((_DWORD *)v159 + 9);
        uint64_t v374 = *((void *)v159 + 5);
        uint64_t v162 = v374;
        uint64_t v163 = *((void *)v159 + 6);
        uint64_t v164 = *((void *)v159 + 7);
        LODWORD(v361) = v159[64];
        uint64_t v165 = *((void *)v159 + 9);
        char v166 = v159[80];
        v167 = v69;
        char v168 = v159[81];
        char v169 = v159[82];
        uint64_t v170 = *((void *)v159 + 11);
        v171 = &v167[v153[5]];
        uint64_t v172 = v367;
        v173 = v365;
        uint64_t v174 = v366;
        (*(void (**)(char *, unsigned char *, uint64_t))(v367 + 16))(v365, v171, v366);
        uint64_t v175 = *(void *)&v167[v154];
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v177 = (uint64_t)v334;
        uint64_t *v334 = KeyPath;
        sub_1000082B4(&qword_100129F20);
        swift_storeEnumTagMultiPayload();
        uint64_t v178 = v355;
        uint64_t v179 = v177 + *(int *)(v355 + 20);
        *(_OWORD *)uint64_t v179 = v373;
        *(void *)(v179 + 16) = v160;
        *(void *)(v179 + 24) = v161;
        *(unsigned char *)(v179 + 32) = v363;
        *(_DWORD *)(v179 + 36) = v362;
        *(void *)(v179 + 40) = v162;
        *(void *)(v179 + 48) = v163;
        *(void *)(v179 + 56) = v164;
        *(unsigned char *)(v179 + 64) = v361;
        *(void *)(v179 + 72) = v165;
        *(unsigned char *)(v179 + 80) = v166;
        *(unsigned char *)(v179 + 81) = v168;
        *(unsigned char *)(v179 + 82) = v169;
        *(void *)(v179 + 88) = v170;
        (*(void (**)(uint64_t, char *, uint64_t))(v172 + 32))(v177 + *(int *)(v178 + 24), v173, v174);
        *(void *)(v177 + *(int *)(v178 + 28)) = v175;
        sub_100051478(v177, v343, type metadata accessor for TVWidgetCell);
        swift_storeEnumTagMultiPayload();
        sub_10004C954();
        sub_10004C5A8(&qword_10012BF28, (void (*)(uint64_t))type metadata accessor for TVWidgetCell);
        swift_retain();
        swift_retain();
        v180 = v342;
        sub_1000E4690();
        sub_1000514E0(v177, type metadata accessor for TVWidgetCell);
        uint64_t v181 = (uint64_t)v180;
        uint64_t v182 = v369;
        uint64_t v183 = (uint64_t)v356;
        uint64_t v184 = v359;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v60, v47, v158);
        v246 = &v69[v153[7]];
        BOOL v186 = v246[32] == 1;
        v297 = v60;
        if (v186)
        {
          long long v353 = *(_OWORD *)v246;
          uint64_t v247 = *((void *)v246 + 2);
          uint64_t v248 = *((void *)v246 + 3);
          LODWORD(v363) = *((_DWORD *)v246 + 9);
          uint64_t v249 = *((void *)v246 + 5);
          uint64_t v250 = *((void *)v246 + 6);
          uint64_t v251 = *((void *)v246 + 7);
          LODWORD(v362) = v246[64];
          uint64_t v252 = *((void *)v246 + 9);
          LODWORD(v361) = v246[80];
          LODWORD(v360) = v246[81];
          uint64_t v253 = v157;
          LODWORD(v354) = v246[82];
          uint64_t v254 = *((void *)v246 + 11);
          v255 = &v69[v153[5]];
          uint64_t v256 = v367;
          v257 = v365;
          uint64_t v258 = v366;
          (*(void (**)(char *, unsigned char *, uint64_t))(v367 + 16))(v365, v255, v366);
          uint64_t v259 = swift_getKeyPath();
          uint64_t v260 = (uint64_t)v334;
          uint64_t *v334 = v259;
          sub_1000082B4(&qword_100129F20);
          swift_storeEnumTagMultiPayload();
          v261 = (int *)v355;
          uint64_t v262 = v260 + *(int *)(v355 + 20);
          *(_OWORD *)uint64_t v262 = v353;
          *(void *)(v262 + 16) = v247;
          *(void *)(v262 + 24) = v248;
          *(unsigned char *)(v262 + 32) = 1;
          *(_DWORD *)(v262 + 36) = v363;
          *(void *)(v262 + 40) = v249;
          *(void *)(v262 + 48) = v250;
          *(void *)(v262 + 56) = v251;
          *(unsigned char *)(v262 + 64) = v362;
          *(void *)(v262 + 72) = v252;
          *(unsigned char *)(v262 + 80) = v361;
          *(unsigned char *)(v262 + 81) = v360;
          *(unsigned char *)(v262 + 82) = (_BYTE)v354;
          *(void *)(v262 + 88) = v254;
          (*(void (**)(uint64_t, char *, uint64_t))(v256 + 32))(v260 + v261[6], v257, v258);
          *(void *)(v260 + v261[7]) = v155;
          uint64_t v263 = (uint64_t)v333;
          (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v333, v60, v158);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v253 + 56))(v263, 0, 1, v158);
          uint64_t v264 = sub_10004C5A8(&qword_10012BF28, (void (*)(uint64_t))type metadata accessor for TVWidgetCell);
          swift_retain();
          swift_retain();
          v265 = v304;
          sub_1000E4A70();
          sub_1000147B8(v263, &qword_100129F38);
          sub_1000514E0(v260, type metadata accessor for TVWidgetCell);
          uint64_t v266 = v308;
          v267 = v307;
          uint64_t v268 = v320;
          (*(void (**)(char *, char *, uint64_t))(v308 + 32))(v307, v265, v320);
          (*(void (**)(char *, char *, uint64_t))(v266 + 16))(v322, v267, v268);
          swift_storeEnumTagMultiPayload();
          v375 = v261;
          uint64_t v376 = v264;
          swift_getOpaqueTypeConformance2();
          sub_100014AC4(&qword_10012BF30, &qword_10012BE48);
          uint64_t v293 = (uint64_t)v321;
          sub_1000E4690();
          (*(void (**)(char *, uint64_t))(v266 + 8))(v267, v268);
        }
        else
        {
          uint64_t v287 = (*(uint64_t (**)(char *, char *, uint64_t))(v157 + 16))(v354, v60, v158);
          __chkstk_darwin(v287);
          *(&v296 - 2) = (uint64_t)v69;
          uint64_t v288 = sub_10004C5A8(&qword_10012BF28, (void (*)(uint64_t))type metadata accessor for TVWidgetCell);
          v289 = v305;
          v290 = (int *)v355;
          sub_1000E48D0();
          uint64_t v291 = v306;
          uint64_t v292 = v323;
          (*(void (**)(char *, char *, uint64_t))(v306 + 16))(v322, v289, v323);
          swift_storeEnumTagMultiPayload();
          v375 = v290;
          uint64_t v376 = v288;
          swift_getOpaqueTypeConformance2();
          sub_100014AC4(&qword_10012BF30, &qword_10012BE48);
          uint64_t v293 = (uint64_t)v321;
          sub_1000E4690();
          (*(void (**)(char *, uint64_t))(v291 + 8))(v289, v292);
        }
        uint64_t v182 = v369;
        uint64_t v183 = (uint64_t)v356;
        uint64_t v184 = v359;
        sub_100014754(v293, v343, &qword_10012BE60);
        swift_storeEnumTagMultiPayload();
        sub_10004C954();
        sub_10004C5A8(&qword_10012BF28, (void (*)(uint64_t))type metadata accessor for TVWidgetCell);
        uint64_t v294 = v293;
        uint64_t v181 = (uint64_t)v342;
        sub_1000E4690();
        sub_1000147B8(v294, &qword_10012BE60);
        (*(void (**)(char *, uint64_t))(v373 + 8))(v297, v374);
      }
      sub_100014754(v181, v184, &qword_10012BE68);
      swift_storeEnumTagMultiPayload();
      sub_10004C6FC();
      sub_10004C8A8();
      sub_1000E4690();
      sub_100014754(v183, v182, &qword_10012BE80);
      swift_storeEnumTagMultiPayload();
      sub_10004C6C0();
      sub_10004CA54();
      sub_1000E4690();
      sub_1000147B8(v183, &qword_10012BE80);
      uint64_t v219 = v181;
      v278 = &qword_10012BE68;
      break;
    case 2:
      long long v101 = (int *)type metadata accessor for TVWidgetContentView(0);
      uint64_t v102 = v101[6];
      long long v103 = v1;
      uint64_t v104 = *(void *)&v1[v102];
      uint64_t v105 = v104 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_actionURL;
      swift_beginAccess();
      sub_100014754(v105, (uint64_t)v44, &qword_100129F38);
      uint64_t v106 = v373;
      uint64_t v107 = v374;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v373 + 48))(v44, 1, v374) == 1)
      {
        sub_1000147B8((uint64_t)v44, &qword_100129F38);
        long long v108 = &v103[v101[7]];
        long long v373 = *(_OWORD *)v108;
        uint64_t v109 = *((void *)v108 + 2);
        uint64_t v110 = *((void *)v108 + 3);
        LODWORD(v359) = v108[32];
        LODWORD(v358) = *((_DWORD *)v108 + 9);
        uint64_t v374 = *((void *)v108 + 5);
        uint64_t v111 = v374;
        uint64_t v112 = *((void *)v108 + 6);
        uint64_t v113 = *((void *)v108 + 7);
        char v114 = v108[64];
        uint64_t v115 = *((void *)v108 + 9);
        LODWORD(v357) = v108[80];
        char v116 = v108[81];
        char v117 = v108[82];
        uint64_t v118 = *((void *)v108 + 11);
        long long v119 = &v103[v101[5]];
        uint64_t v120 = v367;
        long long v121 = v365;
        uint64_t v122 = v366;
        (*(void (**)(char *, unsigned char *, uint64_t))(v367 + 16))(v365, v119, v366);
        uint64_t v123 = *(void *)&v103[v102];
        uint64_t v124 = swift_getKeyPath();
        uint64_t v125 = (uint64_t)v335;
        uint64_t *v335 = v124;
        sub_1000082B4(&qword_100129F20);
        swift_storeEnumTagMultiPayload();
        uint64_t v126 = v350;
        uint64_t v127 = v125 + *(int *)(v350 + 20);
        *(_OWORD *)uint64_t v127 = v373;
        *(void *)(v127 + 16) = v109;
        *(void *)(v127 + 24) = v110;
        *(unsigned char *)(v127 + 32) = v359;
        *(_DWORD *)(v127 + 36) = v358;
        *(void *)(v127 + 40) = v111;
        *(void *)(v127 + 48) = v112;
        *(void *)(v127 + 56) = v113;
        *(unsigned char *)(v127 + 64) = v114;
        *(void *)(v127 + 72) = v115;
        *(unsigned char *)(v127 + 80) = v357;
        *(unsigned char *)(v127 + 81) = v116;
        *(unsigned char *)(v127 + 82) = v117;
        *(void *)(v127 + 88) = v118;
        (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v125 + *(int *)(v126 + 24), v121, v122);
        *(void *)(v125 + *(int *)(v126 + 28)) = v123;
        sub_100051478(v125, v353, type metadata accessor for TVWidgetFeatured);
        swift_storeEnumTagMultiPayload();
        sub_10004C4A8();
        sub_10004C5A8(&qword_10012BED8, (void (*)(uint64_t))type metadata accessor for TVWidgetFeatured);
        swift_retain();
        swift_retain();
        uint64_t v128 = (uint64_t)v351;
        sub_1000E4690();
        sub_1000514E0(v125, type metadata accessor for TVWidgetFeatured);
        uint64_t v129 = v369;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v57, v44, v107);
        v185 = &v103[v101[7]];
        BOOL v186 = v185[32] == 1;
        v298 = v57;
        if (v186)
        {
          long long v355 = *(_OWORD *)v185;
          uint64_t v187 = *((void *)v185 + 2);
          uint64_t v188 = *((void *)v185 + 3);
          LODWORD(v358) = *((_DWORD *)v185 + 9);
          uint64_t v359 = *((void *)v185 + 5);
          uint64_t v189 = v359;
          uint64_t v190 = *((void *)v185 + 6);
          uint64_t v191 = *((void *)v185 + 7);
          v192 = v103;
          char v193 = v185[64];
          uint64_t v194 = *((void *)v185 + 9);
          LODWORD(v357) = v185[80];
          LODWORD(v356) = v185[81];
          char v195 = v185[82];
          uint64_t v196 = *((void *)v185 + 11);
          v197 = &v192[v101[5]];
          uint64_t v198 = v367;
          v199 = v365;
          v200 = v57;
          uint64_t v201 = v366;
          (*(void (**)(char *, unsigned char *, uint64_t))(v367 + 16))(v365, v197, v366);
          uint64_t v202 = swift_getKeyPath();
          uint64_t v203 = (uint64_t)v335;
          uint64_t *v335 = v202;
          sub_1000082B4(&qword_100129F20);
          swift_storeEnumTagMultiPayload();
          uint64_t v204 = v350;
          uint64_t v205 = v203 + *(int *)(v350 + 20);
          *(_OWORD *)uint64_t v205 = v355;
          *(void *)(v205 + 16) = v187;
          *(void *)(v205 + 24) = v188;
          *(unsigned char *)(v205 + 32) = 1;
          *(_DWORD *)(v205 + 36) = v358;
          *(void *)(v205 + 40) = v189;
          *(void *)(v205 + 48) = v190;
          *(void *)(v205 + 56) = v191;
          *(unsigned char *)(v205 + 64) = v193;
          v206 = (int *)v204;
          *(void *)(v205 + 72) = v194;
          *(unsigned char *)(v205 + 80) = v357;
          *(unsigned char *)(v205 + 81) = (_BYTE)v356;
          *(unsigned char *)(v205 + 82) = v195;
          uint64_t v106 = v373;
          *(void *)(v205 + 88) = v196;
          (*(void (**)(uint64_t, char *, uint64_t))(v198 + 32))(v203 + *(int *)(v204 + 24), v199, v201);
          *(void *)(v203 + v206[7]) = v104;
          uint64_t v207 = (uint64_t)v333;
          (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v333, v200, v107);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56))(v207, 0, 1, v107);
          uint64_t v208 = sub_10004C5A8(&qword_10012BED8, (void (*)(uint64_t))type metadata accessor for TVWidgetFeatured);
          swift_retain();
          swift_retain();
          v209 = v309;
          sub_1000E4A70();
          sub_1000147B8(v207, &qword_100129F38);
          sub_1000514E0(v203, type metadata accessor for TVWidgetFeatured);
          uint64_t v210 = v313;
          v211 = v312;
          uint64_t v212 = v327;
          (*(void (**)(char *, char *, uint64_t))(v313 + 32))(v312, v209, v327);
          (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v329, v211, v212);
          swift_storeEnumTagMultiPayload();
          v375 = v206;
          uint64_t v376 = v208;
          swift_getOpaqueTypeConformance2();
          sub_100014AC4(&qword_10012BEE0, &qword_10012BE18);
          uint64_t v275 = (uint64_t)v328;
          sub_1000E4690();
          (*(void (**)(char *, uint64_t))(v210 + 8))(v211, v212);
        }
        else
        {
          uint64_t v269 = (*(uint64_t (**)(char *, char *, uint64_t))(v106 + 16))(v354, v57, v107);
          __chkstk_darwin(v269);
          *(&v296 - 2) = (uint64_t)v103;
          uint64_t v270 = sub_10004C5A8(&qword_10012BED8, (void (*)(uint64_t))type metadata accessor for TVWidgetFeatured);
          v271 = v310;
          uint64_t v272 = v350;
          sub_1000E48D0();
          uint64_t v273 = v311;
          uint64_t v274 = v331;
          (*(void (**)(char *, char *, uint64_t))(v311 + 16))(v329, v271, v331);
          swift_storeEnumTagMultiPayload();
          v375 = (int *)v272;
          uint64_t v376 = v270;
          swift_getOpaqueTypeConformance2();
          sub_100014AC4(&qword_10012BEE0, &qword_10012BE18);
          uint64_t v275 = (uint64_t)v328;
          sub_1000E4690();
          (*(void (**)(char *, uint64_t))(v273 + 8))(v271, v274);
        }
        sub_100014754(v275, v353, &qword_10012BE30);
        swift_storeEnumTagMultiPayload();
        sub_10004C4A8();
        sub_10004C5A8(&qword_10012BED8, (void (*)(uint64_t))type metadata accessor for TVWidgetFeatured);
        uint64_t v128 = (uint64_t)v351;
        sub_1000E4690();
        sub_1000147B8(v275, &qword_10012BE30);
        (*(void (**)(char *, uint64_t))(v106 + 8))(v298, v374);
        uint64_t v129 = v369;
      }
      v217 = &qword_10012BE38;
      sub_100014754(v128, v362, &qword_10012BE38);
      swift_storeEnumTagMultiPayload();
      sub_10004C3FC();
      sub_10004C5F0();
      uint64_t v276 = v128;
      uint64_t v277 = (uint64_t)v364;
      sub_1000E4690();
      sub_100014754(v277, v129, &qword_10012BE08);
      swift_storeEnumTagMultiPayload();
      sub_10004C6C0();
      sub_10004CA54();
      sub_1000E4690();
      sub_1000147B8(v277, &qword_10012BE08);
      uint64_t v219 = v276;
      goto LABEL_23;
    case 3:
      uint64_t v130 = type metadata accessor for TVWidgetContentView(0);
      uint64_t v131 = *(int *)(v130 + 24);
      uint64_t v132 = *(void *)&v1[v131] + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_actionURL;
      swift_beginAccess();
      sub_100014754(v132, (uint64_t)v41, &qword_100129F38);
      uint64_t v133 = v373;
      uint64_t v134 = v374;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v373 + 48))(v41, 1, v374) == 1)
      {
        sub_1000147B8((uint64_t)v41, &qword_100129F38);
        uint64_t v135 = &v69[*(int *)(v130 + 28)];
        long long v373 = *(_OWORD *)v135;
        uint64_t v136 = *((void *)v135 + 2);
        uint64_t v137 = *((void *)v135 + 3);
        LODWORD(v365) = v135[32];
        int v138 = *((_DWORD *)v135 + 9);
        uint64_t v374 = *((void *)v135 + 5);
        uint64_t v139 = v374;
        uint64_t v140 = *((void *)v135 + 6);
        uint64_t v141 = *((void *)v135 + 7);
        char v142 = v135[64];
        uint64_t v143 = *((void *)v135 + 9);
        char v144 = v135[80];
        char v145 = v135[81];
        uint64_t v146 = v69;
        char v147 = v135[82];
        uint64_t v148 = *((void *)v135 + 11);
        uint64_t v149 = v347;
        uint64_t v150 = (uint64_t)v330;
        (*(void (**)(char *, void, uint64_t))(v367 + 104))(&v330[*(int *)(v347 + 20)], enum case for WidgetFamily.systemSmall(_:), v366);
        uint64_t v151 = *(void *)&v146[v131];
        *(_OWORD *)uint64_t v150 = v373;
        *(void *)(v150 + 16) = v136;
        *(void *)(v150 + 24) = v137;
        *(unsigned char *)(v150 + 32) = (_BYTE)v365;
        *(_DWORD *)(v150 + 36) = v138;
        *(void *)(v150 + 40) = v139;
        *(void *)(v150 + 48) = v140;
        *(void *)(v150 + 56) = v141;
        *(unsigned char *)(v150 + 64) = v142;
        *(void *)(v150 + 72) = v143;
        *(unsigned char *)(v150 + 80) = v144;
        *(unsigned char *)(v150 + 81) = v145;
        *(unsigned char *)(v150 + 82) = v147;
        *(void *)(v150 + 88) = v148;
        *(void *)(v150 + *(int *)(v149 + 24)) = v151;
        sub_100051478(v150, v345, (uint64_t (*)(void))type metadata accessor for TVWidgetLockscreenCell);
        swift_storeEnumTagMultiPayload();
        sub_100014AC4(&qword_10012BEB8, &qword_10012BDF0);
        sub_10004C5A8(&qword_10012BEC0, (void (*)(uint64_t))type metadata accessor for TVWidgetLockscreenCell);
        swift_retain();
        swift_retain();
        uint64_t v152 = (uint64_t)v348;
        sub_1000E4690();
        sub_1000514E0(v150, (uint64_t (*)(void))type metadata accessor for TVWidgetLockscreenCell);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v54, v41, v134);
        uint64_t v213 = (*(uint64_t (**)(char *, char *, uint64_t))(v133 + 16))(v354, v54, v134);
        __chkstk_darwin(v213);
        *(&v296 - 2) = (uint64_t)v69;
        sub_10004C5A8(&qword_10012BEC0, (void (*)(uint64_t))type metadata accessor for TVWidgetLockscreenCell);
        v214 = v324;
        sub_1000E48D0();
        uint64_t v215 = v325;
        uint64_t v216 = v346;
        (*(void (**)(uint64_t, char *, uint64_t))(v325 + 16))(v345, v214, v346);
        swift_storeEnumTagMultiPayload();
        sub_100014AC4(&qword_10012BEB8, &qword_10012BDF0);
        uint64_t v152 = (uint64_t)v348;
        sub_1000E4690();
        (*(void (**)(char *, uint64_t))(v215 + 8))(v214, v216);
        (*(void (**)(char *, uint64_t))(v133 + 8))(v54, v134);
      }
      v217 = &qword_10012BDF8;
      sub_100014754(v152, v362, &qword_10012BDF8);
      swift_storeEnumTagMultiPayload();
      sub_10004C3FC();
      sub_10004C5F0();
      uint64_t v218 = (uint64_t)v364;
      sub_1000E4690();
      sub_100014754(v218, v369, &qword_10012BE08);
      swift_storeEnumTagMultiPayload();
      sub_10004C6C0();
      sub_10004CA54();
      sub_1000E4690();
      sub_1000147B8(v218, &qword_10012BE08);
      uint64_t v219 = v152;
LABEL_23:
      v278 = v217;
      break;
    default:
      uint64_t v363 = (uint64_t)v68;
      v364 = (char *)v66;
      uint64_t v70 = (int *)type metadata accessor for TVWidgetContentView(0);
      uint64_t v71 = v70[6];
      uint64_t v72 = v1;
      uint64_t v73 = *(void *)&v1[v71];
      uint64_t v74 = v73 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_actionURL;
      swift_beginAccess();
      sub_100014754(v74, (uint64_t)v51, &qword_100129F38);
      uint64_t v75 = v373;
      uint64_t v76 = v374;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v373 + 48))(v51, 1, v374) == 1)
      {
        sub_1000147B8((uint64_t)v51, &qword_100129F38);
        uint64_t v77 = &v69[v70[7]];
        long long v373 = *(_OWORD *)v77;
        uint64_t v78 = *((void *)v77 + 2);
        uint64_t v79 = *((void *)v77 + 3);
        LODWORD(v362) = v77[32];
        LODWORD(v361) = *((_DWORD *)v77 + 9);
        uint64_t v374 = *((void *)v77 + 5);
        uint64_t v80 = v374;
        uint64_t v81 = *((void *)v77 + 6);
        uint64_t v82 = *((void *)v77 + 7);
        char v83 = v77[64];
        uint64_t v84 = *((void *)v77 + 9);
        char v85 = v77[80];
        char v86 = v77[81];
        LODWORD(v360) = v77[82];
        uint64_t v87 = *((void *)v77 + 11);
        uint64_t v88 = &v72[v70[5]];
        uint64_t v89 = v367;
        uint64_t v90 = v365;
        uint64_t v91 = v366;
        (*(void (**)(char *, unsigned char *, uint64_t))(v367 + 16))(v365, v88, v366);
        uint64_t v92 = *(void *)&v72[v71];
        uint64_t v93 = swift_getKeyPath();
        uint64_t v94 = (uint64_t)v332;
        uint64_t *v332 = v93;
        sub_1000082B4(&qword_100129F20);
        swift_storeEnumTagMultiPayload();
        uint64_t v95 = v339;
        uint64_t v96 = v94 + *(int *)(v339 + 20);
        *(_OWORD *)uint64_t v96 = v373;
        *(void *)(v96 + 16) = v78;
        *(void *)(v96 + 24) = v79;
        *(unsigned char *)(v96 + 32) = v362;
        *(_DWORD *)(v96 + 36) = v361;
        *(void *)(v96 + 40) = v80;
        *(void *)(v96 + 48) = v81;
        *(void *)(v96 + 56) = v82;
        *(unsigned char *)(v96 + 64) = v83;
        *(void *)(v96 + 72) = v84;
        *(unsigned char *)(v96 + 80) = v85;
        *(unsigned char *)(v96 + 81) = v86;
        *(unsigned char *)(v96 + 82) = v360;
        *(void *)(v96 + 88) = v87;
        (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v94 + *(int *)(v95 + 24), v90, v91);
        *(void *)(v94 + *(int *)(v95 + 28)) = v92;
        sub_100051478(v94, v340, type metadata accessor for TVWidgetLockup);
        swift_storeEnumTagMultiPayload();
        sub_10004C7A8();
        sub_10004C5A8(&qword_10012BF08, (void (*)(uint64_t))type metadata accessor for TVWidgetLockup);
        swift_retain();
        swift_retain();
        uint64_t v97 = v363;
        sub_1000E4690();
        sub_1000514E0(v94, type metadata accessor for TVWidgetLockup);
        uint64_t v98 = v97;
        uint64_t v99 = v369;
        uint64_t v100 = (uint64_t)v356;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v64, v51, v76);
        v220 = &v69[v70[7]];
        v221 = (int *)v339;
        if (v220[32] == 1)
        {
          long long v352 = *(_OWORD *)v220;
          uint64_t v222 = *((void *)v220 + 2);
          uint64_t v223 = *((void *)v220 + 3);
          LODWORD(v360) = *((_DWORD *)v220 + 9);
          uint64_t v361 = *((void *)v220 + 5);
          uint64_t v224 = v361;
          uint64_t v225 = *((void *)v220 + 6);
          uint64_t v226 = *((void *)v220 + 7);
          LODWORD(v355) = v220[64];
          uint64_t v227 = *((void *)v220 + 9);
          char v228 = v220[80];
          LODWORD(v354) = v220[81];
          LODWORD(v353) = v220[82];
          uint64_t v229 = *((void *)v220 + 11);
          v230 = &v72[v70[5]];
          uint64_t v231 = v367;
          v232 = *(void (**)(char *, unsigned char *, uint64_t))(v367 + 16);
          uint64_t v362 = v73;
          v233 = v365;
          uint64_t v234 = v366;
          v232(v365, v230, v366);
          uint64_t v235 = swift_getKeyPath();
          uint64_t v236 = v76;
          uint64_t v237 = (uint64_t)v332;
          uint64_t *v332 = v235;
          sub_1000082B4(&qword_100129F20);
          swift_storeEnumTagMultiPayload();
          uint64_t v238 = v237 + v221[5];
          *(_OWORD *)uint64_t v238 = v352;
          *(void *)(v238 + 16) = v222;
          *(void *)(v238 + 24) = v223;
          *(unsigned char *)(v238 + 32) = 1;
          *(_DWORD *)(v238 + 36) = v360;
          *(void *)(v238 + 40) = v224;
          *(void *)(v238 + 48) = v225;
          *(void *)(v238 + 56) = v226;
          *(unsigned char *)(v238 + 64) = v355;
          *(void *)(v238 + 72) = v227;
          *(unsigned char *)(v238 + 80) = v228;
          *(unsigned char *)(v238 + 81) = (_BYTE)v354;
          *(unsigned char *)(v238 + 82) = v353;
          *(void *)(v238 + 88) = v229;
          (*(void (**)(uint64_t, char *, uint64_t))(v231 + 32))(v237 + v221[6], v233, v234);
          *(void *)(v237 + v221[7]) = v362;
          uint64_t v239 = (uint64_t)v333;
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v333, v64, v236);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v239, 0, 1, v236);
          uint64_t v240 = sub_10004C5A8(&qword_10012BF08, (void (*)(uint64_t))type metadata accessor for TVWidgetLockup);
          swift_retain();
          swift_retain();
          v241 = v299;
          sub_1000E4A70();
          sub_1000147B8(v239, &qword_100129F38);
          sub_1000514E0(v237, type metadata accessor for TVWidgetLockup);
          uint64_t v242 = v303;
          v243 = v300;
          v244 = v241;
          uint64_t v245 = v315;
          (*(void (**)(char *, char *, uint64_t))(v303 + 32))(v300, v244, v315);
          (*(void (**)(char *, char *, uint64_t))(v242 + 16))(v317, v243, v245);
          swift_storeEnumTagMultiPayload();
          v375 = v221;
          uint64_t v376 = v240;
          swift_getOpaqueTypeConformance2();
          sub_100014AC4(&qword_10012BF10, &qword_10012BE90);
          uint64_t v284 = (uint64_t)v316;
          sub_1000E4690();
          (*(void (**)(char *, uint64_t))(v242 + 8))(v243, v245);
          uint64_t v99 = v369;
          uint64_t v100 = (uint64_t)v356;
          v285 = v64;
        }
        else
        {
          uint64_t v279 = (*(uint64_t (**)(char *, char *, uint64_t))(v75 + 16))(v354, v64, v76);
          __chkstk_darwin(v279);
          *(&v296 - 2) = (uint64_t)v69;
          uint64_t v280 = sub_10004C5A8(&qword_10012BF08, (void (*)(uint64_t))type metadata accessor for TVWidgetLockup);
          v281 = v301;
          sub_1000E48D0();
          uint64_t v282 = v302;
          uint64_t v283 = v318;
          (*(void (**)(char *, char *, uint64_t))(v302 + 16))(v317, v281, v318);
          swift_storeEnumTagMultiPayload();
          v375 = v221;
          uint64_t v376 = v280;
          swift_getOpaqueTypeConformance2();
          sub_100014AC4(&qword_10012BF10, &qword_10012BE90);
          uint64_t v284 = (uint64_t)v316;
          sub_1000E4690();
          (*(void (**)(char *, uint64_t))(v282 + 8))(v281, v283);
          uint64_t v99 = v369;
          v285 = v64;
          uint64_t v100 = (uint64_t)v356;
        }
        sub_100014754(v284, v340, &qword_10012BEA8);
        swift_storeEnumTagMultiPayload();
        sub_10004C7A8();
        sub_10004C5A8(&qword_10012BF08, (void (*)(uint64_t))type metadata accessor for TVWidgetLockup);
        uint64_t v286 = v284;
        uint64_t v98 = v363;
        sub_1000E4690();
        sub_1000147B8(v286, &qword_10012BEA8);
        (*(void (**)(char *, uint64_t))(v373 + 8))(v285, v374);
      }
      sub_100014754(v98, v359, &qword_10012BEB0);
      swift_storeEnumTagMultiPayload();
      sub_10004C6FC();
      sub_10004C8A8();
      sub_1000E4690();
      sub_100014754(v100, v99, &qword_10012BE80);
      swift_storeEnumTagMultiPayload();
      sub_10004C6C0();
      sub_10004CA54();
      sub_1000E4690();
      sub_1000147B8(v100, &qword_10012BE80);
      uint64_t v219 = v98;
      v278 = &qword_10012BEB0;
      break;
  }
  return sub_1000147B8(v219, v278);
}

uint64_t sub_10004C000@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1000E5640();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for TVWidgetContentView(0);
  uint64_t v11 = (long long *)(a1 + v10[7]);
  long long v31 = *v11;
  uint64_t v12 = *((void *)v11 + 2);
  uint64_t v13 = *((void *)v11 + 3);
  char v14 = *((unsigned char *)v11 + 32);
  int v15 = *((_DWORD *)v11 + 9);
  uint64_t v16 = *((void *)v11 + 5);
  uint64_t v17 = *((void *)v11 + 6);
  uint64_t v18 = *((void *)v11 + 7);
  int v19 = *((unsigned __int8 *)v11 + 64);
  uint64_t v20 = *((void *)v11 + 9);
  int v29 = *((unsigned __int8 *)v11 + 80);
  int v30 = v19;
  int v21 = *((unsigned __int8 *)v11 + 81);
  int v27 = *((unsigned __int8 *)v11 + 82);
  int v28 = v21;
  uint64_t v22 = *((void *)v11 + 11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1 + v10[5], v6);
  uint64_t v23 = *(void *)(a1 + v10[6]);
  *a3 = swift_getKeyPath();
  sub_1000082B4(&qword_100129F20);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (int *)a2(0);
  uint64_t v25 = (char *)a3 + v24[5];
  *(_OWORD *)uint64_t v25 = v31;
  *((void *)v25 + 2) = v12;
  *((void *)v25 + 3) = v13;
  v25[32] = v14;
  *((_DWORD *)v25 + 9) = v15;
  *((void *)v25 + 5) = v16;
  *((void *)v25 + 6) = v17;
  *((void *)v25 + 7) = v18;
  v25[64] = v30;
  *((void *)v25 + 9) = v20;
  v25[80] = v29;
  v25[81] = v28;
  v25[82] = v27;
  *((void *)v25 + 11) = v22;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)a3 + v24[6], v9, v6);
  *(uint64_t *)((char *)a3 + v24[7]) = v23;
  swift_retain();
  return swift_retain();
}

uint64_t sub_10004C21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TVWidgetContentView(0);
  uint64_t v5 = (long long *)(a1 + *(int *)(v4 + 28));
  long long v25 = *v5;
  uint64_t v6 = *((void *)v5 + 2);
  uint64_t v7 = *((void *)v5 + 3);
  char v8 = *((unsigned char *)v5 + 32);
  int v9 = *((_DWORD *)v5 + 9);
  uint64_t v10 = *((void *)v5 + 5);
  uint64_t v11 = *((void *)v5 + 6);
  uint64_t v12 = *((void *)v5 + 7);
  char v13 = *((unsigned char *)v5 + 64);
  uint64_t v14 = *((void *)v5 + 9);
  char v23 = *((unsigned char *)v5 + 81);
  char v24 = *((unsigned char *)v5 + 80);
  char v22 = *((unsigned char *)v5 + 82);
  uint64_t v15 = *((void *)v5 + 11);
  uint64_t v16 = type metadata accessor for TVWidgetLockscreenCell();
  uint64_t v17 = a2 + *(int *)(v16 + 20);
  uint64_t v18 = enum case for WidgetFamily.systemSmall(_:);
  uint64_t v19 = sub_1000E5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
  uint64_t v20 = *(void *)(a1 + *(int *)(v4 + 24));
  *(_OWORD *)a2 = v25;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(unsigned char *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 36) = v9;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v12;
  *(unsigned char *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v14;
  *(unsigned char *)(a2 + 80) = v24;
  *(unsigned char *)(a2 + 81) = v23;
  *(unsigned char *)(a2 + 82) = v22;
  *(void *)(a2 + 88) = v15;
  *(void *)(a2 + *(int *)(v16 + 24)) = v20;
  swift_retain();

  return swift_retain();
}

uint64_t type metadata accessor for TVWidgetFeatured(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012BF98);
}

uint64_t type metadata accessor for TVWidgetCell(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012C030);
}

uint64_t type metadata accessor for TVWidgetLockup(uint64_t a1)
{
  return sub_10002B794(a1, qword_10012C0C8);
}

unint64_t sub_10004C3FC()
{
  unint64_t result = qword_10012BEC8;
  if (!qword_10012BEC8)
  {
    sub_100008354(&qword_10012BE38);
    sub_10004C4A8();
    sub_10004C5A8(&qword_10012BED8, (void (*)(uint64_t))type metadata accessor for TVWidgetFeatured);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BEC8);
  }
  return result;
}

unint64_t sub_10004C4A8()
{
  unint64_t result = qword_10012BED0;
  if (!qword_10012BED0)
  {
    sub_100008354(&qword_10012BE30);
    type metadata accessor for TVWidgetFeatured(255);
    sub_10004C5A8(&qword_10012BED8, (void (*)(uint64_t))type metadata accessor for TVWidgetFeatured);
    swift_getOpaqueTypeConformance2();
    sub_100014AC4(&qword_10012BEE0, &qword_10012BE18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BED0);
  }
  return result;
}

uint64_t sub_10004C5A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004C5F0()
{
  unint64_t result = qword_10012BEE8;
  if (!qword_10012BEE8)
  {
    sub_100008354(&qword_10012BDF8);
    sub_100014AC4(&qword_10012BEB8, &qword_10012BDF0);
    sub_10004C5A8(&qword_10012BEC0, (void (*)(uint64_t))type metadata accessor for TVWidgetLockscreenCell);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BEE8);
  }
  return result;
}

uint64_t sub_10004C6C0()
{
  return sub_10005245C(&qword_10012BEF0, &qword_10012BE80, (void (*)(void))sub_10004C6FC, (void (*)(void))sub_10004C8A8);
}

unint64_t sub_10004C6FC()
{
  unint64_t result = qword_10012BEF8;
  if (!qword_10012BEF8)
  {
    sub_100008354(&qword_10012BEB0);
    sub_10004C7A8();
    sub_10004C5A8(&qword_10012BF08, (void (*)(uint64_t))type metadata accessor for TVWidgetLockup);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BEF8);
  }
  return result;
}

unint64_t sub_10004C7A8()
{
  unint64_t result = qword_10012BF00;
  if (!qword_10012BF00)
  {
    sub_100008354(&qword_10012BEA8);
    type metadata accessor for TVWidgetLockup(255);
    sub_10004C5A8(&qword_10012BF08, (void (*)(uint64_t))type metadata accessor for TVWidgetLockup);
    swift_getOpaqueTypeConformance2();
    sub_100014AC4(&qword_10012BF10, &qword_10012BE90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BF00);
  }
  return result;
}

unint64_t sub_10004C8A8()
{
  unint64_t result = qword_10012BF18;
  if (!qword_10012BF18)
  {
    sub_100008354(&qword_10012BE68);
    sub_10004C954();
    sub_10004C5A8(&qword_10012BF28, (void (*)(uint64_t))type metadata accessor for TVWidgetCell);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BF18);
  }
  return result;
}

unint64_t sub_10004C954()
{
  unint64_t result = qword_10012BF20;
  if (!qword_10012BF20)
  {
    sub_100008354(&qword_10012BE60);
    type metadata accessor for TVWidgetCell(255);
    sub_10004C5A8(&qword_10012BF28, (void (*)(uint64_t))type metadata accessor for TVWidgetCell);
    swift_getOpaqueTypeConformance2();
    sub_100014AC4(&qword_10012BF30, &qword_10012BE48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012BF20);
  }
  return result;
}

uint64_t sub_10004CA54()
{
  return sub_10005245C(&qword_10012BF38, &qword_10012BE08, (void (*)(void))sub_10004C3FC, (void (*)(void))sub_10004C5F0);
}

uint64_t sub_10004CA90@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C21C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10004CA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = a1;
  uint64_t v46 = a3;
  uint64_t v45 = sub_1000E4700() - 8;
  __chkstk_darwin(v45);
  unint64_t v44 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000E4320();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E45A0();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000E46F0();
  uint64_t v9 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000082B4(&qword_10012C1B8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000082B4(&qword_10012C1C0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000082B4(&qword_10012C1C8);
  __chkstk_darwin(v19 - 8);
  int v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v14 = sub_1000E45D0();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v22 = sub_1000082B4(&qword_10012C1D0);
  sub_10004CFBC(a2, v38, &v14[*(int *)(v22 + 44)]);
  sub_1000E46D0();
  uint64_t v23 = sub_100014AC4(&qword_10012C1D8, &qword_10012C1B8);
  sub_1000E4B60();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  sub_1000147B8((uint64_t)v14, &qword_10012C1B8);
  char v24 = v36;
  sub_1000E4590();
  uint64_t v47 = v12;
  uint64_t v48 = v23;
  swift_getOpaqueTypeConformance2();
  sub_1000E4AD0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v40);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  long long v25 = v41;
  sub_1000E4300();
  uint64_t v26 = v35 + *(int *)(type metadata accessor for TVWidgetLockup(0) + 20);
  uint64_t v27 = *(void *)(v26 + 40);
  LODWORD(v24) = *(_DWORD *)(v26 + 36);
  uint64_t v29 = v42;
  uint64_t v28 = v43;
  uint64_t v30 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v44, v25, v43);
  uint64_t v31 = v45;
  *(void *)(v30 + *(int *)(v45 + 28)) = v27;
  *(_DWORD *)(v30 + *(int *)(v31 + 32)) = v24;
  uint64_t v32 = v46;
  sub_100014754((uint64_t)v21, v46, &qword_10012C1C8);
  uint64_t v33 = sub_1000082B4(&qword_10012C1E0);
  sub_100051478(v30, v32 + *(int *)(v33 + 36), (uint64_t (*)(void))&type metadata accessor for _ContentTransitionModifier);
  swift_retain();
  sub_1000514E0(v30, (uint64_t (*)(void))&type metadata accessor for _ContentTransitionModifier);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v28);
  return sub_1000147B8((uint64_t)v21, &qword_10012C1C8);
}

void **sub_10004CFBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v5 = sub_1000082B4(&qword_100129F30);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v90 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v92 = (uint64_t)&v78 - v8;
  uint64_t v91 = type metadata accessor for TVWidgetMetadataView();
  __chkstk_darwin(v91);
  uint64_t v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000082B4(&qword_10012C1E8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v95 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v93 = (uint64_t)&v78 - v15;
  __chkstk_darwin(v14);
  uint64_t v94 = (uint64_t)&v78 - v16;
  uint64_t v17 = (int *)type metadata accessor for TVWidgetLockup(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000082B4(&qword_10012C1F0);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v96 = (uint64_t)&v78 - v24;
  uint64_t v89 = v17[7];
  uint64_t v25 = *(void *)(a1 + v89);
  uint64_t v26 = *(void **)(v25 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_image);
  int v97 = *(unsigned __int8 *)(v25 + 73);
  uint64_t v98 = v26;
  id v27 = v26;
  sub_10002D9B4((uint64_t)v122);
  *(_OWORD *)((char *)&v123[7] + 7) = v122[7];
  *(_OWORD *)((char *)&v123[8] + 7) = v122[8];
  *(_OWORD *)((char *)&v123[9] + 7) = v122[9];
  *(_OWORD *)((char *)&v123[10] + 7) = v122[10];
  *(_OWORD *)((char *)&v123[3] + 7) = v122[3];
  *(_OWORD *)((char *)&v123[4] + 7) = v122[4];
  *(_OWORD *)((char *)&v123[5] + 7) = v122[5];
  *(_OWORD *)((char *)&v123[6] + 7) = v122[6];
  *(_OWORD *)((char *)v123 + 7) = v122[0];
  *(_OWORD *)((char *)&v123[1] + 7) = v122[1];
  *(_OWORD *)((char *)&v123[2] + 7) = v122[2];
  unint64_t v28 = *(void *)(v25 + 24);
  if (!v28)
  {
    sub_100051478(a1, (uint64_t)v19, type metadata accessor for TVWidgetLockup);
    goto LABEL_8;
  }
  if ((v28 & 0x2000000000000000) != 0) {
    uint64_t v29 = HIBYTE(v28) & 0xF;
  }
  else {
    uint64_t v29 = *(void *)(v25 + 16) & 0xFFFFFFFFFFFFLL;
  }
  sub_100051478(a1, (uint64_t)v19, type metadata accessor for TVWidgetLockup);
  if (!v29)
  {
LABEL_8:
    uint64_t v30 = *(void *)&v19[v17[7]];
    unint64_t v31 = *(void *)(v30 + 40);
    if (v31)
    {
      uint64_t v32 = *(void *)(v30 + 32) & 0xFFFFFFFFFFFFLL;
      if ((v31 & 0x2000000000000000) != 0) {
        uint64_t v33 = HIBYTE(v31) & 0xF;
      }
      else {
        uint64_t v33 = v32;
      }
      sub_1000514E0((uint64_t)v19, type metadata accessor for TVWidgetLockup);
      if (v33) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1000514E0((uint64_t)v19, type metadata accessor for TVWidgetLockup);
    }
    uint64_t v66 = sub_1000082B4(&qword_10012C200);
    uint64_t v65 = v96;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v96, 1, 1, v66);
    goto LABEL_21;
  }
  sub_1000514E0((uint64_t)v19, type metadata accessor for TVWidgetLockup);
LABEL_13:
  uint64_t v88 = v10;
  sub_1000E40F0();
  sub_1000E40F0();
  uint64_t v34 = v17[6];
  uint64_t v81 = v17[5];
  uint64_t v35 = a1 + v34;
  sub_10002D7F8();
  uint64_t v80 = v35;
  sub_10002D420();
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v87 = v114;
  int v86 = v115;
  uint64_t v85 = v116;
  int v84 = v117;
  uint64_t v82 = v119;
  uint64_t v83 = v118;
  uint64_t v36 = a1;
  uint64_t v37 = *(void **)(a1 + v89);
  uint64_t v38 = v37[3];
  uint64_t v89 = v37[2];
  uint64_t v39 = v37[5];
  uint64_t v79 = v37[4];
  if (*((unsigned char *)v37 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_isExpiring) == 1)
  {
    uint64_t v40 = (uint64_t)v37 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate;
    swift_beginAccess();
    uint64_t v41 = v92;
    sub_100014754(v40, v92, &qword_100129F30);
  }
  else
  {
    uint64_t v42 = sub_1000E3EE0();
    uint64_t v41 = v92;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v92, 1, 1, v42);
  }
  uint64_t v43 = (uint64_t)v37 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate;
  swift_beginAccess();
  uint64_t v44 = v90;
  sub_100014754(v43, v90, &qword_100129F30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10004D90C(v44, (uint64_t)v120);
  sub_1000147B8(v44, &qword_100129F30);
  uint64_t v45 = v88;
  void *v88 = v89;
  v45[1] = v38;
  v45[2] = v79;
  v45[3] = v39;
  uint64_t v46 = v91;
  sub_100014B08(v41, (uint64_t)v45 + *(int *)(v91 + 24), &qword_100129F30);
  uint64_t v47 = (_OWORD *)((char *)v45 + *(int *)(v46 + 28));
  long long v48 = v121[0];
  v47[2] = v120[2];
  v47[3] = v48;
  *(_OWORD *)((char *)v47 + 57) = *(_OWORD *)((char *)v121 + 9);
  long long v49 = v120[1];
  *uint64_t v47 = v120[0];
  v47[1] = v49;
  uint64_t v50 = v99;
  sub_1000E40F0();
  double v52 = v51;
  sub_1000E40F0();
  double v54 = v52 - v53 / *(double *)(v36 + v81);
  double v55 = sub_10002D7F8();
  double v56 = v54 / v55;
  if (v54 >= v55) {
    double v56 = 1.0;
  }
  char v57 = __chkstk_darwin(v56 < 1.0);
  *(&v78 - 2) = v36;
  *(&v78 - 1) = v50;
  uint64_t v58 = v93;
  sub_1000B70F0(v57, (void (*)(uint64_t))sub_100052A10, v93);
  sub_1000514E0((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for TVWidgetMetadataView);
  uint64_t v59 = v58;
  uint64_t v60 = v94;
  sub_100014B08(v59, v94, &qword_10012C1E8);
  uint64_t v61 = v95;
  sub_100014754(v60, v95, &qword_10012C1E8);
  *(void *)uint64_t v23 = 0;
  v23[8] = 1;
  *((void *)v23 + 2) = v87;
  v23[24] = v86;
  *((void *)v23 + 4) = v85;
  v23[40] = v84;
  uint64_t v62 = v82;
  *((void *)v23 + 6) = v83;
  *((void *)v23 + 7) = v62;
  uint64_t v63 = sub_1000082B4(&qword_10012C1F8);
  sub_100014754(v61, (uint64_t)&v23[*(int *)(v63 + 48)], &qword_10012C1E8);
  sub_1000147B8(v60, &qword_10012C1E8);
  sub_1000147B8(v61, &qword_10012C1E8);
  uint64_t v64 = sub_1000082B4(&qword_10012C200);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v23, 0, 1, v64);
  uint64_t v65 = v96;
  sub_100014B08((uint64_t)v23, v96, &qword_10012C1F0);
LABEL_21:
  uint64_t v67 = v98;
  char v68 = v97;
  sub_100014754(v65, (uint64_t)v23, &qword_10012C1F0);
  *(void *)&v100[0] = v67;
  BYTE8(v100[0]) = v68;
  *(_OWORD *)((char *)&v100[8] + 9) = v123[8];
  *(_OWORD *)((char *)&v100[9] + 9) = v123[9];
  *(_OWORD *)((char *)&v100[10] + 9) = v123[10];
  *((void *)&v100[11] + 1) = *(void *)((char *)&v123[10] + 15);
  *(_OWORD *)((char *)&v100[4] + 9) = v123[4];
  *(_OWORD *)((char *)&v100[5] + 9) = v123[5];
  *(_OWORD *)((char *)&v100[6] + 9) = v123[6];
  *(_OWORD *)((char *)&v100[7] + 9) = v123[7];
  *(_OWORD *)((char *)v100 + 9) = v123[0];
  *(_OWORD *)((char *)&v100[1] + 9) = v123[1];
  *(_OWORD *)((char *)&v100[2] + 9) = v123[2];
  *(_OWORD *)((char *)&v100[3] + 9) = v123[3];
  long long v69 = v100[9];
  long long v70 = v100[10];
  long long v71 = v100[7];
  a3[8] = v100[8];
  a3[9] = v69;
  long long v72 = v100[11];
  a3[10] = v70;
  a3[11] = v72;
  long long v73 = v100[5];
  a3[4] = v100[4];
  a3[5] = v73;
  a3[6] = v100[6];
  a3[7] = v71;
  long long v74 = v100[1];
  *a3 = v100[0];
  a3[1] = v74;
  long long v75 = v100[3];
  a3[2] = v100[2];
  a3[3] = v75;
  uint64_t v76 = sub_1000082B4(&qword_10012C208);
  sub_100014754((uint64_t)v23, (uint64_t)a3 + *(int *)(v76 + 48), &qword_10012C1F0);
  sub_100052A18((uint64_t)v100);
  sub_1000147B8(v65, &qword_10012C1F0);
  sub_1000147B8((uint64_t)v23, &qword_10012C1F0);
  long long v111 = v123[8];
  long long v112 = v123[9];
  v113[0] = v123[10];
  long long v107 = v123[4];
  long long v108 = v123[5];
  long long v109 = v123[6];
  long long v110 = v123[7];
  long long v103 = v123[0];
  long long v104 = v123[1];
  long long v105 = v123[2];
  long long v101 = v67;
  char v102 = v68;
  *(void *)((char *)v113 + 15) = *(void *)((char *)&v123[10] + 15);
  long long v106 = v123[3];
  return sub_100031174(&v101);
}

uint64_t sub_10004D90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v4 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E3EE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  uint64_t v49 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v46 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v43 - v12;
  __chkstk_darwin(v11);
  uint64_t v44 = (char *)&v43 - v13;
  uint64_t v47 = sub_1000E41D0();
  uint64_t v14 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000E4C60();
  uint64_t v18 = sub_1000E4C70();
  uint64_t v19 = sub_1000E4890();
  sub_1000E4890();
  uint64_t v20 = sub_1000E48C0();
  swift_release();
  int HasExuberatedLineHeight = CTFontHasExuberatedLineHeight();
  uint64_t v56 = v17;
  uint64_t v57 = 1;
  char v58 = 0;
  uint64_t v59 = v18;
  uint64_t v60 = v19;
  uint64_t v61 = v20;
  uint64_t v62 = 0;
  char v63 = 1;
  uint64_t v64 = 0;
  int v51 = HasExuberatedLineHeight;
  char v65 = HasExuberatedLineHeight;
  char v55 = 1;
  uint64_t v22 = v2 + *(int *)(type metadata accessor for TVWidgetLockup(0) + 24);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1000C1F94((uint64_t)v16);
  uint64_t v23 = v22;
  uint64_t v24 = v17;
  uint64_t v25 = v48;
  double v26 = sub_100094C0C(v23, (uint64_t)v16);
  uint64_t v52 = v20;
  swift_release();
  uint64_t v53 = v19;
  swift_release();
  uint64_t v54 = v18;
  uint64_t v27 = v49;
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v47);
  sub_100014754(v50, (uint64_t)v6, &qword_100129F30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v25) == 1)
  {
    sub_1000147B8((uint64_t)v6, &qword_100129F30);
    uint64_t v28 = 0;
LABEL_11:
    uint64_t v38 = v54;
    goto LABEL_12;
  }
  uint64_t v29 = v44;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v44, v6, v25);
  uint64_t v30 = v46;
  sub_1000E3ED0();
  unint64_t v31 = v45;
  sub_1000E3EC0();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  v32(v30, v25);
  char v33 = sub_1000E3E80();
  v32(v31, v25);
  uint64_t v34 = v29;
  if (v33)
  {
    sub_1000E3ED0();
    sub_1000E3EC0();
    v32(v30, v25);
    char v35 = sub_1000E3E80();
    v32(v31, v25);
    if (v35) {
      uint64_t v28 = 64;
    }
    else {
      uint64_t v28 = 32;
    }
  }
  else
  {
    uint64_t v28 = 16;
  }
  char v55 = 0;
  sub_1000E3ED0();
  sub_1000E3EC0();
  v32(v30, v25);
  char v36 = sub_1000E3E80();
  v32(v31, v25);
  if ((v36 & 1) == 0)
  {
    v32(v34, v25);
    goto LABEL_11;
  }
  uint64_t v37 = sub_1000E4C00();
  v32(v34, v25);
  swift_release();
  uint64_t v38 = v37;
LABEL_12:
  char v39 = v55;
  uint64_t v40 = v52;
  swift_release();
  uint64_t v41 = v53;
  swift_release();
  uint64_t result = swift_release();
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = 1;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v38;
  *(void *)(a2 + 32) = v41;
  *(void *)(a2 + 40) = v40;
  *(void *)(a2 + 48) = v28;
  *(unsigned char *)(a2 + 56) = v39;
  *(double *)(a2 + 64) = v26;
  *(unsigned char *)(a2 + 72) = v51;
  return result;
}

uint64_t sub_10004DE40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012C210);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = sub_10004DF90();
  sub_1000E4F50();
  sub_1000B64A4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v6, 0.0, 1, v7, 0);
  uint64_t v8 = *(void *)(a1 + *(int *)(type metadata accessor for TVWidgetLockup(0) + 20) + 48);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100014754((uint64_t)v6, a2, &qword_10012C210);
  uint64_t v10 = (uint64_t *)(a2 + *(int *)(sub_1000082B4(&qword_10012C218) + 36));
  uint64_t *v10 = KeyPath;
  v10[1] = v8;
  return sub_1000147B8((uint64_t)v6, &qword_10012C210);
}

double sub_10004DF90()
{
  sub_1000E40F0();
  double v2 = v1;
  sub_1000E40F0();
  double v4 = v3;
  double v5 = *(double *)(v0 + *(int *)(type metadata accessor for TVWidgetLockup(0) + 20));
  sub_1000E40F0();
  double v7 = v6;
  sub_1000E40F0();
  double v9 = v7 - v8 / v5;
  double v10 = sub_10002D7F8();
  double v11 = v9 / v10;
  if (v9 >= v10) {
    double v11 = 1.0;
  }
  if (v11 >= 1.0) {
    double v12 = v11;
  }
  else {
    double v12 = v11 / 3.0;
  }
  return v2 - v4 / v5 - sub_10002D420() * v12;
}

uint64_t sub_10004E04C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_100051478(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TVWidgetLockup);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_100052C14((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for TVWidgetLockup);
  *a2 = sub_1000529E4;
  a2[1] = (uint64_t (*)(uint64_t))v7;
  return result;
}

uint64_t sub_10004E160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = sub_1000E45A0();
  uint64_t v20 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  double v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000E46F0();
  uint64_t v4 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TVWidgetCell(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = sub_1000082B4(&qword_10012C220);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100051478(v1, (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TVWidgetCell);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  sub_100052C14((uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for TVWidgetCell);
  uint64_t v23 = sub_100052C7C;
  uint64_t v24 = v15;
  sub_1000E46D0();
  uint64_t v16 = sub_1000082B4(&qword_10012C228);
  uint64_t v17 = sub_100014AC4(&qword_10012C230, &qword_10012C228);
  sub_1000E4B60();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  swift_release();
  sub_1000E4590();
  uint64_t v23 = (uint64_t (*)(uint64_t))v16;
  uint64_t v24 = v17;
  swift_getOpaqueTypeConformance2();
  sub_1000E4AD0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10004E4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_100129CC8 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_100141F38;
  uint64_t v7 = *(void *)(a2 + *(int *)(type metadata accessor for TVWidgetCell(0) + 20) + 72);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v7;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v8 = sub_1000082B4(&qword_10012C238);
  return sub_10004E594(a2, a1, a3 + *(int *)(v8 + 44));
}

uint64_t sub_10004E594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v80 = a3;
  uint64_t v4 = sub_1000E4EA0();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  __chkstk_darwin(v4);
  uint64_t v62 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000082B4(&qword_10012C240);
  __chkstk_darwin(v63);
  uint64_t v67 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000082B4(&qword_10012C248);
  __chkstk_darwin(v66);
  uint64_t v69 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000082B4(&qword_10012C250);
  uint64_t v77 = *(void *)(v8 - 8);
  uint64_t v78 = v8;
  __chkstk_darwin(v8);
  uint64_t v68 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000082B4(&qword_10012C258);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v79 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v76 = (uint64_t)&v61 - v13;
  uint64_t v14 = sub_1000E4700();
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000E4320();
  uint64_t v72 = *(void *)(v74 - 8);
  uint64_t v18 = v72;
  __chkstk_darwin(v74);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000082B4(&qword_10012C260);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000082B4(&qword_10012C268);
  uint64_t v25 = v24 - 8;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v75 = (uint64_t)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v61 - v29;
  __chkstk_darwin(v28);
  long long v73 = (char *)&v61 - v31;
  uint64_t v32 = sub_1000E4510();
  uint64_t v33 = a1 + *(int *)(type metadata accessor for TVWidgetCell(0) + 20);
  uint64_t v34 = *(void *)(v33 + 56);
  *(void *)uint64_t v23 = v32;
  *((void *)v23 + 1) = v34;
  v23[16] = 0;
  char v35 = &v23[*(int *)(sub_1000082B4(&qword_10012C270) + 44)];
  uint64_t v71 = a1;
  sub_10004ED3C(a1, v35);
  sub_1000E4300();
  uint64_t v36 = *(void *)(v33 + 40);
  LODWORD(a1) = *(_DWORD *)(v33 + 36);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v38 = v74;
  v37(v17, v20, v74);
  *(void *)&v17[*(int *)(v15 + 28)] = v36;
  *(_DWORD *)&v17[*(int *)(v15 + 32)] = a1;
  sub_100014754((uint64_t)v23, (uint64_t)v30, &qword_10012C260);
  sub_100051478((uint64_t)v17, (uint64_t)&v30[*(int *)(v25 + 44)], (uint64_t (*)(void))&type metadata accessor for _ContentTransitionModifier);
  uint64_t v39 = (uint64_t)v73;
  swift_retain();
  sub_1000514E0((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for _ContentTransitionModifier);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v20, v38);
  sub_1000147B8((uint64_t)v23, &qword_10012C260);
  sub_100014B08((uint64_t)v30, v39, &qword_10012C268);
  if (*(unsigned char *)(v33 + 64) == 1)
  {
    uint64_t v40 = v62;
    sub_1000E4E90();
    if (qword_100129CC8 != -1) {
      swift_once();
    }
    uint64_t v41 = qword_100141F38;
    uint64_t v43 = v64;
    uint64_t v42 = v65;
    uint64_t v44 = (uint64_t)v67;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v67, v40, v65);
    uint64_t v45 = (uint64_t *)(v44 + *(int *)(v63 + 36));
    *uint64_t v45 = v41;
    v45[1] = (uint64_t)sub_1000530E4;
    v45[2] = 0;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
    type metadata accessor for CGColor(0);
    sub_1000E3F20();
    uint64_t v46 = sub_1000E4C90();
    LOBYTE(v43) = sub_1000E4750();
    uint64_t v47 = v69;
    sub_100014754(v44, v69, &qword_10012C240);
    uint64_t v48 = v47 + *(int *)(v66 + 36);
    *(void *)uint64_t v48 = v46;
    *(unsigned char *)(v48 + 8) = v43;
    sub_1000147B8(v44, &qword_10012C240);
    sub_10004F388();
    double v50 = v49;
    uint64_t v51 = sub_1000E4F50();
    uint64_t v52 = v68;
    sub_1000B6670(0.0, 1, 0.0, 1, v50, 0, 0.0, 1, v68, 0.0, 1, 0.0, 1, v51, v53);
    sub_1000147B8(v47, &qword_10012C248);
    uint64_t v54 = v76;
    sub_100014B08(v52, v76, &qword_10012C250);
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = 1;
    uint64_t v54 = v76;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v54, v55, 1, v78);
  uint64_t v56 = v75;
  sub_100014754(v39, v75, &qword_10012C268);
  uint64_t v57 = v79;
  sub_100014754(v54, v79, &qword_10012C258);
  uint64_t v58 = v80;
  sub_100014754(v56, v80, &qword_10012C268);
  uint64_t v59 = sub_1000082B4(&qword_10012C278);
  sub_100014754(v57, v58 + *(int *)(v59 + 48), &qword_10012C258);
  sub_1000147B8(v54, &qword_10012C258);
  sub_1000147B8(v39, &qword_10012C268);
  sub_1000147B8(v57, &qword_10012C258);
  return sub_1000147B8(v56, &qword_10012C268);
}

void **sub_10004ED3C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_100129F30);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  *(void *)&long long v77 = (char *)&v65 - v8;
  uint64_t v9 = type metadata accessor for TVWidgetMetadataView();
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = sub_1000082B4(&qword_10012C290);
  uint64_t v12 = __chkstk_darwin(v68);
  uint64_t v76 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v65 - v15;
  __chkstk_darwin(v14);
  uint64_t v74 = (uint64_t)&v65 - v17;
  uint64_t v18 = *(int *)(type metadata accessor for TVWidgetCell(0) + 28);
  uint64_t v67 = a1;
  uint64_t v19 = *(void *)(a1 + v18);
  uint64_t v20 = *(void **)(v19 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_image);
  int v81 = *(unsigned __int8 *)(v19 + 73);
  uint64_t v82 = v20;
  id v21 = v20;
  sub_10002D9B4((uint64_t)v121);
  uint64_t v22 = v132;
  uint64_t v23 = v131;
  uint64_t v24 = v130;
  uint64_t v75 = v129;
  uint64_t v72 = v124;
  uint64_t v73 = v123;
  uint64_t v70 = v126;
  uint64_t v71 = v125;
  uint64_t v69 = v127;
  uint64_t v83 = v128;
  int v80 = v122;
  uint64_t v25 = v121[6];
  uint64_t v26 = v121[5];
  uint64_t v27 = v121[3];
  uint64_t v28 = v121[2];
  uint64_t v78 = v121[1];
  uint64_t v79 = v121[4];
  uint64_t v29 = v121[0];
  uint64_t v30 = *(void *)(v19 + 16);
  uint64_t v31 = *(void *)(v19 + 24);
  uint64_t v32 = *(void *)(v19 + 40);
  uint64_t v65 = *(void *)(v19 + 32);
  uint64_t v66 = v30;
  if (*(unsigned char *)(v19 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_isExpiring) == 1)
  {
    uint64_t v33 = v19 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate;
    swift_beginAccess();
    sub_100014754(v33, v77, &qword_100129F30);
  }
  else
  {
    uint64_t v34 = sub_1000E3EE0();
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v77, 1, 1, v34);
  }
  uint64_t v35 = v19 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate;
  swift_beginAccess();
  sub_100014754(v35, (uint64_t)v7, &qword_100129F30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100050EF4((uint64_t)v7, type metadata accessor for TVWidgetCell, (uint64_t)v133);
  sub_1000147B8((uint64_t)v7, &qword_100129F30);
  *uint64_t v11 = v66;
  v11[1] = v31;
  v11[2] = v65;
  v11[3] = v32;
  sub_100014B08(v77, (uint64_t)v11 + *(int *)(v9 + 24), &qword_100129F30);
  uint64_t v36 = (_OWORD *)((char *)v11 + *(int *)(v9 + 28));
  long long v37 = *(_OWORD *)v134;
  v36[2] = v133[2];
  v36[3] = v37;
  *(_OWORD *)((char *)v36 + 57) = *(_OWORD *)&v134[9];
  long long v38 = v133[1];
  *uint64_t v36 = v133[0];
  v36[1] = v38;
  if (qword_100129CC8 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_100141F38;
  sub_100051478((uint64_t)v11, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for TVWidgetMetadataView);
  uint64_t v40 = (uint64_t *)&v16[*(int *)(v68 + 36)];
  uint64_t *v40 = v39;
  v40[1] = (uint64_t)sub_10004F360;
  void v40[2] = 0;
  sub_1000514E0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TVWidgetMetadataView);
  uint64_t v41 = v74;
  sub_100014B08((uint64_t)v16, v74, &qword_10012C290);
  uint64_t v42 = v76;
  sub_100014754(v41, v76, &qword_10012C290);
  *(void *)&long long v84 = v82;
  BYTE8(v84) = v81;
  *(_DWORD *)((char *)&v84 + 9) = v136[0];
  HIDWORD(v84) = *(_DWORD *)((char *)v136 + 3);
  *(void *)&long long v85 = v29;
  *((void *)&v85 + 1) = v78;
  *(void *)&long long v86 = v28;
  *((void *)&v86 + 1) = v27;
  *(void *)&long long v87 = v79;
  *((void *)&v87 + 1) = v26;
  *(void *)&long long v88 = v25;
  BYTE8(v88) = v80;
  *(_DWORD *)((char *)&v88 + 9) = *(_DWORD *)v135;
  HIDWORD(v88) = *(_DWORD *)&v135[3];
  uint64_t v44 = v72;
  uint64_t v43 = v73;
  *(void *)&long long v89 = v73;
  *((void *)&v89 + 1) = v72;
  uint64_t v45 = v70;
  uint64_t v46 = v71;
  *(void *)&long long v90 = v71;
  *((void *)&v90 + 1) = v70;
  uint64_t v47 = v69;
  *(void *)&long long v91 = v69;
  *((void *)&v91 + 1) = v83;
  uint64_t v48 = v75;
  *(void *)&long long v92 = v75;
  *((void *)&v92 + 1) = v24;
  __asm { FMOV            V0.2D, #6.0 }
  long long v77 = _Q0;
  long long v93 = _Q0;
  long long v94 = 0uLL;
  *(void *)&long long v95 = v23;
  *((void *)&v95 + 1) = v22;
  long long v54 = v84;
  long long v55 = v85;
  long long v56 = v87;
  a2[2] = v86;
  a2[3] = v56;
  *a2 = v54;
  a2[1] = v55;
  long long v57 = v88;
  long long v58 = v89;
  long long v59 = v91;
  a2[6] = v90;
  a2[7] = v59;
  a2[4] = v57;
  a2[5] = v58;
  long long v60 = v92;
  long long v61 = v93;
  long long v62 = v95;
  a2[10] = v94;
  a2[11] = v62;
  a2[8] = v60;
  a2[9] = v61;
  uint64_t v63 = sub_1000082B4(&qword_10012C298);
  sub_100014754(v42, (uint64_t)a2 + *(int *)(v63 + 48), &qword_10012C290);
  sub_100052A18((uint64_t)&v84);
  sub_1000147B8(v41, &qword_10012C290);
  sub_1000147B8(v42, &qword_10012C290);
  uint64_t v96 = v82;
  char v97 = v81;
  *(_DWORD *)uint64_t v98 = v136[0];
  *(_DWORD *)&v98[3] = *(_DWORD *)((char *)v136 + 3);
  uint64_t v99 = v29;
  uint64_t v100 = v78;
  uint64_t v101 = v28;
  uint64_t v102 = v27;
  uint64_t v103 = v79;
  uint64_t v104 = v26;
  uint64_t v105 = v25;
  char v106 = v80;
  *(_DWORD *)long long v107 = *(_DWORD *)v135;
  *(_DWORD *)&v107[3] = *(_DWORD *)&v135[3];
  uint64_t v108 = v43;
  uint64_t v109 = v44;
  uint64_t v110 = v46;
  uint64_t v111 = v45;
  uint64_t v112 = v47;
  uint64_t v113 = v83;
  uint64_t v114 = v48;
  uint64_t v115 = v24;
  long long v116 = v77;
  uint64_t v118 = 0;
  uint64_t v117 = 0;
  uint64_t v119 = v23;
  uint64_t v120 = v22;
  return sub_100031174(&v96);
}

uint64_t sub_10004F360()
{
  return sub_1000E41A0();
}

id sub_10004F388()
{
  sub_1000E40F0();
  double v2 = v1 + -1.0;
  uint64_t v3 = v0 + *(int *)(type metadata accessor for TVWidgetCell(0) + 20);
  double v4 = *(double *)(v3 + 72);
  double v5 = v2 - v4;
  sub_1000E40F0();
  double v7 = v6;
  sub_10002D9B4((uint64_t)v41);
  double v8 = *(double *)v41;
  v63[0] = v41[0];
  v63[1] = v41[1];
  long long v64 = v42;
  uint64_t v65 = v43;
  long long v66 = v44;
  char v67 = v45;
  long long v68 = v46;
  long long v69 = v47;
  long long v70 = v48;
  uint64_t v71 = v49;
  uint64_t v72 = v50;
  __asm { FMOV            V0.2D, #6.0 }
  long long v26 = _Q0;
  long long v73 = _Q0;
  uint64_t v75 = 0;
  uint64_t v74 = 0;
  long long v76 = v51;
  id result = (id)sub_100052948((uint64_t)v63);
  double v15 = v7 - ceil(v5 * v8);
  double v16 = *(double *)(v3 + 56);
  double v17 = v15 - v16;
  if (v15 - v16 < 0.0)
  {
    sub_100052D40();
    uint64_t v18 = (void *)sub_1000E5C30();
    sub_1000E5B90();
    sub_1000E3F40();

    id result = sub_1000054E4();
    if (result)
    {
      uint64_t v19 = result;
      sub_1000082B4(&qword_10012A900);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1000F2510;
      *(void *)(v20 + 56) = &type metadata for CGFloat;
      unint64_t v21 = sub_100052D80();
      *(void *)(v20 + 64) = v21;
      *(double *)(v20 + 32) = v17;
      sub_1000E40F0();
      *(void *)(v20 + 96) = &type metadata for CGFloat;
      *(void *)(v20 + 104) = v21;
      *(void *)(v20 + 72) = v22;
      *(void *)(v20 + 136) = &type metadata for CGFloat;
      *(void *)(v20 + 144) = v21;
      *(double *)(v20 + 112) = v4;
      sub_1000E5B90();
      sub_1000E3F40();

      swift_bridgeObjectRelease();
      id result = sub_1000054E4();
      if (result)
      {
        uint64_t v23 = result;
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1000F0F50;
        *(void *)(v24 + 56) = &type metadata for CGFloat;
        *(void *)(v24 + 64) = v21;
        *(double *)(v24 + 32) = v16;
        sub_10002D9B4((uint64_t)v52);
        uint64_t v25 = v52[0];
        v27[0] = v52[0];
        v27[1] = v52[1];
        long long v28 = v53;
        uint64_t v29 = v54;
        long long v30 = v55;
        char v31 = v56;
        long long v32 = v57;
        long long v33 = v58;
        long long v34 = v59;
        uint64_t v35 = v60;
        uint64_t v36 = v61;
        long long v37 = v26;
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        long long v40 = v62;
        sub_100052948((uint64_t)v27);
        *(void *)(v24 + 96) = &type metadata for CGFloat;
        *(void *)(v24 + 104) = v21;
        *(void *)(v24 + 72) = v25;
        sub_1000E5B90();
        sub_1000E3F40();

        return (id)swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10004F6B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v62 = sub_1000E4700() - 8;
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E4320();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  __chkstk_darwin(v4);
  long long v58 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E45A0();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  __chkstk_darwin(v6);
  long long v55 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E46F0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000E4230();
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000082B4(&qword_10012C120);
  __chkstk_darwin(v15 - 8);
  double v17 = (uint64_t *)((char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1000082B4(&qword_10012C128);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000082B4(&qword_10012C130);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v51 = v21;
  uint64_t v52 = v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000082B4(&qword_10012C138);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v17 = sub_1000E4F20();
  v17[1] = v28;
  uint64_t v29 = sub_1000082B4(&qword_10012C140);
  sub_10004FD0C(v2, (char *)v17 + *(int *)(v29 + 44));
  uint64_t v30 = v2 + *(int *)(type metadata accessor for TVWidgetFeatured(0) + 20);
  uint64_t v31 = *(void *)(v30 + 88);
  long long v32 = (char *)v14 + *(int *)(v12 + 28);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = sub_1000E4580();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  void *v14 = v31;
  v14[1] = v31;
  uint64_t v35 = (uint64_t)&v20[*(int *)(v18 + 36)];
  sub_100051478((uint64_t)v14, v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v35 + *(int *)(sub_1000082B4(&qword_10012B1F0) + 36)) = 256;
  sub_100014754((uint64_t)v17, (uint64_t)v20, &qword_10012C120);
  sub_1000514E0((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000147B8((uint64_t)v17, &qword_10012C120);
  sub_1000E46D0();
  unint64_t v36 = sub_100052590();
  sub_1000E4B60();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v54);
  sub_1000147B8((uint64_t)v20, &qword_10012C128);
  long long v37 = v55;
  sub_1000E4590();
  uint64_t v64 = v18;
  unint64_t v65 = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v51;
  sub_1000E4AD0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v57);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v38);
  uint64_t v39 = v58;
  sub_1000E4300();
  uint64_t v40 = *(void *)(v30 + 40);
  LODWORD(v18) = *(_DWORD *)(v30 + 36);
  uint64_t v41 = v59;
  uint64_t v42 = (uint64_t)v61;
  uint64_t v43 = v39;
  long long v44 = v39;
  uint64_t v45 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v61, v43, v60);
  uint64_t v46 = v62;
  *(void *)(v42 + *(int *)(v62 + 28)) = v40;
  *(_DWORD *)(v42 + *(int *)(v46 + 32)) = v18;
  uint64_t v47 = v63;
  sub_100014754((uint64_t)v27, v63, &qword_10012C138);
  uint64_t v48 = sub_1000082B4(&qword_10012C158);
  sub_100051478(v42, v47 + *(int *)(v48 + 36), (uint64_t (*)(void))&type metadata accessor for _ContentTransitionModifier);
  swift_retain();
  sub_1000514E0(v42, (uint64_t (*)(void))&type metadata accessor for _ContentTransitionModifier);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v45);
  return sub_1000147B8((uint64_t)v27, &qword_10012C138);
}

uint64_t sub_10004FD0C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = type metadata accessor for TVWidgetFeatured(0);
  __chkstk_darwin(v3);
  uint64_t v45 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012C160);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v41 - v8;
  uint64_t v41 = sub_1000E4BF0();
  uint64_t v9 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + *(int *)(v3 + 28));
  uint64_t v13 = *(void **)(v12 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_image);
  uint64_t v44 = v12;
  int v43 = *(unsigned __int8 *)(v12 + 73);
  uint64_t v42 = v3;
  uint64_t v14 = (unsigned char *)(a1 + *(int *)(v3 + 20));
  int v15 = v14[81];
  LOBYTE(v3) = v14[82];
  id v16 = v13;
  sub_10005036C(v15, v3, (uint64_t)v53);
  *(_OWORD *)((char *)&v54[7] + 7) = v53[7];
  *(_OWORD *)((char *)&v54[8] + 7) = v53[8];
  *(_OWORD *)((char *)&v54[9] + 7) = v53[9];
  *(_OWORD *)((char *)&v54[10] + 7) = v53[10];
  *(_OWORD *)((char *)&v54[3] + 7) = v53[3];
  *(_OWORD *)((char *)&v54[4] + 7) = v53[4];
  *(_OWORD *)((char *)&v54[5] + 7) = v53[5];
  *(_OWORD *)((char *)&v54[6] + 7) = v53[6];
  *(_OWORD *)((char *)v54 + 7) = v53[0];
  *(_OWORD *)((char *)&v54[1] + 7) = v53[1];
  *(_OWORD *)((char *)&v54[2] + 7) = v53[2];
  if (v14[80] == 1)
  {
    uint64_t v17 = sub_1000E4F50();
    uint64_t v19 = v18;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Color.RGBColorSpace.sRGB(_:), v41);
    uint64_t v20 = sub_1000E4C80();
    *(void *)uint64_t v51 = v13;
    v51[8] = v43;
    *(_OWORD *)&v51[137] = v54[8];
    *(_OWORD *)&v51[153] = v54[9];
    *(_OWORD *)&v51[169] = v54[10];
    *(_OWORD *)&v51[73] = v54[4];
    *(_OWORD *)&v51[89] = v54[5];
    *(_OWORD *)&v51[105] = v54[6];
    *(_OWORD *)&v51[121] = v54[7];
    *(_OWORD *)&v51[9] = v54[0];
    *(_OWORD *)&v51[25] = v54[1];
    *(_OWORD *)&v51[41] = v54[2];
    *(_OWORD *)&v51[57] = v54[3];
    *(void *)&v51[184] = *(void *)((char *)&v54[10] + 15);
    *(void *)&v51[192] = v17;
    *(void *)&v51[200] = v19;
    *(void *)&v51[208] = v20;
    v51[216] = 2;
    *(_DWORD *)&v51[217] = v49[0];
    *(_DWORD *)&v51[220] = *(_DWORD *)((char *)v49 + 3);
    __asm { FMOV            V1.2D, #1.0 }
    *(_OWORD *)&v51[224] = xmmword_1000F2520;
    *(_OWORD *)&v51[240] = _Q1;
    sub_1000528EC((uint64_t)v51);
  }
  else
  {
    *(_OWORD *)&v51[137] = v54[8];
    *(_OWORD *)&v51[153] = v54[9];
    *(_OWORD *)&v51[169] = v54[10];
    *(_OWORD *)&v51[73] = v54[4];
    *(_OWORD *)&v51[89] = v54[5];
    *(_OWORD *)&v51[105] = v54[6];
    *(_OWORD *)&v51[121] = v54[7];
    *(_OWORD *)&v51[9] = v54[0];
    *(_OWORD *)&v51[25] = v54[1];
    *(_OWORD *)&v51[41] = v54[2];
    *(void *)uint64_t v51 = v13;
    v51[8] = v43;
    *(void *)&v51[184] = *(void *)((char *)&v54[10] + 15);
    *(_OWORD *)&v51[57] = v54[3];
    sub_100052654((uint64_t)v51);
  }
  sub_100014B08((uint64_t)v51, (uint64_t)v50, &qword_10012C168);
  sub_1000082B4(&qword_10012C170);
  sub_100052660();
  sub_100052700();
  sub_1000E4690();
  uint64_t v27 = (uint64_t)v46;
  uint64_t v26 = (uint64_t)v47;
  uint64_t v28 = v45;
  memcpy(v51, v52, sizeof(v51));
  unint64_t v29 = *(void *)(v44 + 24);
  if (!v29)
  {
    sub_100051478(a1, v45, type metadata accessor for TVWidgetFeatured);
    goto LABEL_11;
  }
  if ((v29 & 0x2000000000000000) != 0) {
    uint64_t v30 = HIBYTE(v29) & 0xF;
  }
  else {
    uint64_t v30 = *(void *)(v44 + 16) & 0xFFFFFFFFFFFFLL;
  }
  sub_100051478(a1, v45, type metadata accessor for TVWidgetFeatured);
  if (!v30)
  {
LABEL_11:
    uint64_t v31 = *(void *)(v28 + *(int *)(v42 + 28));
    unint64_t v32 = *(void *)(v31 + 40);
    if (v32)
    {
      uint64_t v33 = *(void *)(v31 + 32) & 0xFFFFFFFFFFFFLL;
      if ((v32 & 0x2000000000000000) != 0) {
        uint64_t v34 = HIBYTE(v32) & 0xF;
      }
      else {
        uint64_t v34 = v33;
      }
      sub_1000514E0(v28, type metadata accessor for TVWidgetFeatured);
      if (v34) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1000514E0(v28, type metadata accessor for TVWidgetFeatured);
    }
    uint64_t v37 = sub_1000082B4(&qword_10012C190);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v27, 1, 1, v37);
    goto LABEL_19;
  }
  sub_1000514E0(v28, type metadata accessor for TVWidgetFeatured);
LABEL_16:
  *(void *)uint64_t v27 = sub_1000E45C0();
  *(void *)(v27 + 8) = 0;
  *(unsigned char *)(v27 + 16) = 1;
  uint64_t v35 = sub_1000082B4(&qword_10012C188);
  sub_100050918(a1, v27 + *(int *)(v35 + 44));
  uint64_t v36 = sub_1000082B4(&qword_10012C190);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v27, 0, 1, v36);
LABEL_19:
  uint64_t v38 = v48;
  sub_100014754(v27, v26, &qword_10012C160);
  memcpy(v49, v51, 0x101uLL);
  memcpy(v38, v51, 0x101uLL);
  uint64_t v39 = sub_1000082B4(&qword_10012C198);
  sub_100014754(v26, (uint64_t)v38 + *(int *)(v39 + 48), &qword_10012C160);
  sub_1000527DC((uint64_t)v49, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100052754);
  sub_1000147B8(v27, &qword_10012C160);
  sub_1000147B8(v26, &qword_10012C160);
  memcpy(v50, v51, 0x101uLL);
  return sub_1000527DC((uint64_t)v50, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100052868);
}

__n128 sub_10005036C@<Q0>(int a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v53) = a1;
  uint64_t v56 = a3;
  int v3 = a2 & 1;
  uint64_t v4 = sub_1000E5640();
  uint64_t v55 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E4BF0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002D9B4((uint64_t)v100);
  uint64_t v10 = v100[0];
  uint64_t v11 = v100[1];
  uint64_t v12 = v100[2];
  uint64_t v13 = v100[3];
  uint64_t v14 = v100[4];
  uint64_t v15 = v100[5];
  id v16 = (void *)v101[6];
  sub_100014B08((uint64_t)v101, (uint64_t)v104, &qword_10012B218);
  uint64_t v88 = v10;
  uint64_t v89 = v11;
  *(void *)&long long v90 = v12;
  *((void *)&v90 + 1) = v13;
  uint64_t v91 = v14;
  *(void *)&long long v92 = v15;
  sub_100014B08((uint64_t)v104, (uint64_t)v94, &qword_10012B218);
  long long v95 = v16;
  long long v97 = v102;
  long long v98 = v103;
  *((void *)&v92 + 1) = 0;
  int v60 = v3;
  char v93 = v3;
  uint64_t v58 = v14;
  uint64_t v59 = v11;
  uint64_t v57 = v16;
  if (v53)
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Color.RGBColorSpace.sRGB(_:), v6);
    swift_retain();
    swift_retain();
    id v17 = v16;
    uint64_t v18 = sub_1000E4C80();
    sub_1000529A0((uint64_t)v104);
    *(_OWORD *)&v94[8] = xmmword_1000F2530;
    __asm { FMOV            V0.2D, #1.0 }
    *(_OWORD *)&v94[24] = _Q0;
    *(void *)long long v94 = v18;
    *(void *)&v94[40] = 0x3FD0000000000000;
  }
  else
  {
    swift_retain();
    swift_retain();
    id v24 = v16;
  }
  uint64_t v96 = 0x4034000000000000;
  long long v53 = xmmword_1000F2540;
  long long v99 = xmmword_1000F2540;
  uint64_t v25 = type metadata accessor for TVWidgetFeatured(0);
  uint64_t v26 = v55;
  uint64_t v27 = v54 + *(int *)(v25 + 24);
  uint64_t v28 = *(void (**)(char *, void, uint64_t))(v55 + 104);
  unint64_t v29 = v52;
  v28(v52, enum case for WidgetFamily.systemLarge(_:), v4);
  sub_10004C5A8((unint64_t *)&qword_10012AF08, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  uint64_t v54 = v27;
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v30 = v72[0];
  uint64_t v31 = v61;
  unint64_t v32 = *(void (**)(char *, uint64_t))(v26 + 8);
  v32(v29, v4);
  if (v30 == v31)
  {
    long long v97 = xmmword_1000F2550;
    long long v98 = 0uLL;
    double v33 = 11.0;
    double v34 = 16.0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
  }
  else
  {
    v28(v29, enum case for WidgetFamily.systemExtraLarge(_:), v4);
    sub_1000E5AA0();
    sub_1000E5AA0();
    uint64_t v37 = v72[0];
    uint64_t v38 = v61;
    v32(v29, v4);
    if (v37 == v38)
    {
      __asm { FMOV            V0.2D, #8.0 }
      long long v97 = _Q0;
      long long v98 = 0uLL;
      double v34 = 8.0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      double v33 = 8.0;
    }
    else
    {
      double v34 = *((double *)&v97 + 1);
      double v33 = *(double *)&v97;
      uint64_t v35 = *((void *)&v98 + 1);
      uint64_t v36 = v98;
    }
  }
  uint64_t v40 = *(void *)v94;
  long long v41 = *(_OWORD *)&v94[8];
  long long v42 = *(_OWORD *)&v94[24];
  uint64_t v43 = *(void *)&v94[40];
  *(void *)&long long v61 = v10;
  *((void *)&v61 + 1) = v59;
  *(void *)&long long v62 = v12;
  *((void *)&v62 + 1) = v13;
  *(void *)&long long v63 = v58;
  *((void *)&v63 + 1) = v15;
  v64.n128_u64[0] = 0;
  v64.n128_u8[8] = v60;
  long long v65 = *(_OWORD *)v94;
  long long v66 = *(_OWORD *)&v94[16];
  long long v67 = *(_OWORD *)&v94[32];
  uint64_t v44 = v57;
  *(void *)&long long v68 = v57;
  *((void *)&v68 + 1) = 0x4034000000000000;
  *(double *)&long long v69 = v33;
  *((double *)&v69 + 1) = v34;
  *(void *)&long long v70 = v36;
  *((void *)&v70 + 1) = v35;
  long long v71 = v53;
  sub_1000528F4((uint64_t)&v61);
  swift_release();
  swift_release();

  v72[0] = v88;
  v72[1] = v89;
  long long v73 = v90;
  uint64_t v74 = v91;
  long long v75 = v92;
  char v76 = v93;
  uint64_t v77 = v40;
  long long v78 = v41;
  long long v79 = v42;
  uint64_t v80 = v43;
  int v81 = v95;
  uint64_t v82 = v96;
  double v83 = v33;
  double v84 = v34;
  uint64_t v85 = v36;
  uint64_t v86 = v35;
  long long v87 = v99;
  sub_100052948((uint64_t)v72);
  long long v45 = v70;
  uint64_t v46 = v56;
  *(_OWORD *)(v56 + 128) = v69;
  *(_OWORD *)(v46 + 144) = v45;
  *(_OWORD *)(v46 + 160) = v71;
  long long v47 = v66;
  *(_OWORD *)(v46 + 64) = v65;
  *(_OWORD *)(v46 + 80) = v47;
  long long v48 = v68;
  *(_OWORD *)(v46 + 96) = v67;
  *(_OWORD *)(v46 + 112) = v48;
  long long v49 = v62;
  *(_OWORD *)uint64_t v46 = v61;
  *(_OWORD *)(v46 + 16) = v49;
  __n128 result = v64;
  *(_OWORD *)(v46 + 32) = v63;
  *(__n128 *)(v46 + 48) = result;
  return result;
}

uint64_t sub_100050918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v3 = sub_1000082B4(&qword_100129F30);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v63 - v7;
  uint64_t v9 = type metadata accessor for TVWidgetMetadataView();
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = sub_1000082B4(&qword_10012C1A0);
  __chkstk_darwin(v65);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000082B4(&qword_10012C1A8);
  uint64_t v14 = __chkstk_darwin(v68);
  uint64_t v70 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v67 = (uint64_t)&v63 - v17;
  __chkstk_darwin(v16);
  uint64_t v69 = (uint64_t)&v63 - v18;
  uint64_t v66 = type metadata accessor for TVWidgetFeatured(0);
  uint64_t v19 = a1;
  uint64_t v20 = *(void **)(a1 + *(int *)(v66 + 28));
  uint64_t v21 = v20[3];
  uint64_t v64 = v20[2];
  uint64_t v22 = v20[5];
  uint64_t v63 = v20[4];
  if (*((unsigned char *)v20 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_isExpiring) == 1)
  {
    uint64_t v23 = (uint64_t)v20 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate;
    swift_beginAccess();
    sub_100014754(v23, (uint64_t)v8, &qword_100129F30);
  }
  else
  {
    uint64_t v24 = sub_1000E3EE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
  }
  uint64_t v25 = (uint64_t)v20 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate;
  swift_beginAccess();
  sub_100014754(v25, (uint64_t)v6, &qword_100129F30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100050EF4((uint64_t)v6, type metadata accessor for TVWidgetFeatured, (uint64_t)v72);
  sub_1000147B8((uint64_t)v6, &qword_100129F30);
  *uint64_t v11 = v64;
  v11[1] = v21;
  v11[2] = v63;
  v11[3] = v22;
  sub_100014B08((uint64_t)v8, (uint64_t)v11 + *(int *)(v9 + 24), &qword_100129F30);
  uint64_t v26 = (_OWORD *)((char *)v11 + *(int *)(v9 + 28));
  long long v27 = v73[0];
  v26[2] = v72[2];
  v26[3] = v27;
  *(_OWORD *)((char *)v26 + 57) = *(_OWORD *)((char *)v73 + 9);
  long long v28 = v72[1];
  *uint64_t v26 = v72[0];
  v26[1] = v28;
  unsigned __int8 v29 = sub_1000E4780();
  char v30 = sub_1000E4790();
  sub_1000E4790();
  if (sub_1000E4790() != v29) {
    char v30 = sub_1000E4790();
  }
  uint64_t v31 = v66;
  sub_1000E3FB0();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_100051478((uint64_t)v11, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TVWidgetMetadataView);
  uint64_t v40 = &v13[*(int *)(v65 + 36)];
  char *v40 = v30;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_1000514E0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TVWidgetMetadataView);
  unsigned __int8 v41 = sub_1000E47A0();
  char v42 = sub_1000E4790();
  sub_1000E4790();
  if (sub_1000E4790() != v41) {
    char v42 = sub_1000E4790();
  }
  sub_1000E3FB0();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = v67;
  sub_100014754((uint64_t)v13, v67, &qword_10012C1A0);
  uint64_t v52 = v51 + *(int *)(v68 + 36);
  *(unsigned char *)uint64_t v52 = v42;
  *(void *)(v52 + 8) = v44;
  *(void *)(v52 + 16) = v46;
  *(void *)(v52 + 24) = v48;
  *(void *)(v52 + 32) = v50;
  *(unsigned char *)(v52 + 40) = 0;
  sub_1000147B8((uint64_t)v13, &qword_10012C1A0);
  uint64_t v53 = v69;
  sub_100014B08(v51, v69, &qword_10012C1A8);
  sub_10002D5D0(v19 + *(int *)(v31 + 24));
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v54 = v74;
  LOBYTE(v51) = v75;
  uint64_t v55 = v76;
  char v56 = v77;
  uint64_t v57 = v78;
  uint64_t v58 = v79;
  uint64_t v59 = v70;
  sub_100014754(v53, v70, &qword_10012C1A8);
  uint64_t v60 = v71;
  sub_100014754(v59, v71, &qword_10012C1A8);
  uint64_t v61 = v60 + *(int *)(sub_1000082B4(&qword_10012C1B0) + 48);
  *(void *)uint64_t v61 = 0;
  *(unsigned char *)(v61 + 8) = 1;
  *(void *)(v61 + 16) = v54;
  *(unsigned char *)(v61 + 24) = v51;
  *(void *)(v61 + 32) = v55;
  *(unsigned char *)(v61 + 40) = v56;
  *(void *)(v61 + 48) = v57;
  *(void *)(v61 + 56) = v58;
  sub_1000147B8(v53, &qword_10012C1A8);
  return sub_1000147B8(v59, &qword_10012C1A8);
}

uint64_t sub_100050EF4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v51 = a1;
  uint64_t v5 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E3EE0();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v47 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v46 = (char *)&v45 - v12;
  __chkstk_darwin(v11);
  uint64_t v45 = (char *)&v45 - v13;
  uint64_t v48 = sub_1000E41D0();
  uint64_t v14 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000E4C60();
  uint64_t v18 = sub_1000E4C70();
  uint64_t v19 = sub_1000E4890();
  sub_1000E4890();
  uint64_t v20 = sub_1000E48C0();
  swift_release();
  int HasExuberatedLineHeight = CTFontHasExuberatedLineHeight();
  uint64_t v56 = v17;
  uint64_t v57 = 1;
  char v58 = 0;
  uint64_t v59 = v18;
  uint64_t v60 = v19;
  uint64_t v61 = v20;
  uint64_t v62 = 0;
  char v63 = 1;
  uint64_t v64 = 0;
  int v52 = HasExuberatedLineHeight;
  char v65 = HasExuberatedLineHeight;
  char v55 = 1;
  uint64_t v22 = v3 + *(int *)(v54(0) + 24);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1000C1F94((uint64_t)v16);
  uint64_t v23 = v22;
  uint64_t v24 = v17;
  uint64_t v25 = v49;
  uint64_t v26 = v7;
  double v27 = sub_100094C0C(v23, (uint64_t)v16);
  uint64_t v53 = v20;
  swift_release();
  swift_release();
  uint64_t v54 = (uint64_t (*)(void))v18;
  swift_release();
  swift_release();
  long long v28 = v16;
  uint64_t v29 = v50;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v48);
  uint64_t v30 = sub_1000E47C0();
  swift_retain();
  swift_release();
  sub_100014754(v51, (uint64_t)v7, &qword_100129F30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v7, 1, v29) == 1)
  {
    sub_1000147B8((uint64_t)v7, &qword_100129F30);
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v32 = v45;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v45, v26, v29);
    uint64_t v33 = v47;
    sub_1000E3ED0();
    uint64_t v34 = v46;
    sub_1000E3EC0();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v25 + 8);
    v35(v33, v29);
    char v36 = sub_1000E3E80();
    v35(v34, v29);
    if (v36)
    {
      sub_1000E3ED0();
      sub_1000E3EC0();
      v35(v33, v29);
      char v37 = sub_1000E3E80();
      v35(v34, v29);
      BOOL v38 = (v37 & 1) == 0;
      uint64_t v39 = v33;
      if (v38) {
        uint64_t v31 = 32;
      }
      else {
        uint64_t v31 = 64;
      }
    }
    else
    {
      uint64_t v39 = v33;
      uint64_t v31 = 16;
    }
    char v55 = 0;
    sub_1000E3ED0();
    sub_1000E3EC0();
    v35(v39, v29);
    char v40 = sub_1000E3E80();
    v35(v34, v29);
    if (v40)
    {
      uint64_t v41 = sub_1000E4C00();
      v35(v32, v29);
      swift_release();
      uint64_t v54 = (uint64_t (*)(void))v41;
    }
    else
    {
      v35(v32, v29);
    }
  }
  char v42 = v55;
  uint64_t v43 = v53;
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a3 = v24;
  *(void *)(a3 + 8) = 1;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v54;
  *(void *)(a3 + 32) = v30;
  *(void *)(a3 + 40) = v43;
  *(void *)(a3 + 48) = v31;
  *(unsigned char *)(a3 + 56) = v42;
  *(double *)(a3 + 64) = v27;
  *(unsigned char *)(a3 + 72) = v52;
  return result;
}

uint64_t sub_100051440()
{
  sub_100052DD4();
  uint64_t result = sub_1000E45E0();
  qword_100141F38 = result;
  return result;
}

uint64_t sub_100051478(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000514E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100051540@<X0>(uint64_t *a1@<X8>)
{
  return sub_10004C000(*(void *)(v1 + 16), type metadata accessor for TVWidgetFeatured, a1);
}

uint64_t sub_100051570@<X0>(uint64_t *a1@<X8>)
{
  return sub_10004C000(*(void *)(v1 + 16), type metadata accessor for TVWidgetCell, a1);
}

uint64_t sub_1000515A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_10004C000(*(void *)(v1 + 16), type metadata accessor for TVWidgetLockup, a1);
}

uint64_t sub_1000515E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000515FC);
}

uint64_t sub_100051600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100051614);
}

void *sub_10005161C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E41D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
  *((void *)v8 + 1) = *(void *)((char *)a2 + v7 + 8);
  *((void *)v8 + 2) = *(void *)((char *)a2 + v7 + 16);
  *((void *)v8 + 3) = *(void *)((char *)a2 + v7 + 24);
  v8[32] = *((unsigned char *)a2 + v7 + 32);
  *((_DWORD *)v8 + 9) = *(_DWORD *)((char *)a2 + v7 + 36);
  *((void *)v8 + 5) = *(void *)((char *)a2 + v7 + 40);
  swift_retain();
  swift_release();
  *((void *)v8 + 6) = *((void *)v9 + 6);
  *((void *)v8 + 7) = *((void *)v9 + 7);
  v8[64] = v9[64];
  *((void *)v8 + 9) = *((void *)v9 + 9);
  v8[80] = v9[80];
  v8[81] = v9[81];
  v8[82] = v9[82];
  *((void *)v8 + 11) = *((void *)v9 + 11);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000E5640();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1000517F4(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    uint64_t v6 = sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *(_OWORD *)&a2[v8 + 16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)&a2[v8];
  *((_OWORD *)v9 + 1) = v11;
  v9[32] = a2[v8 + 32];
  *((_DWORD *)v9 + 9) = *(_DWORD *)&a2[v8 + 36];
  *((void *)v9 + 5) = *(void *)&a2[v8 + 40];
  swift_release();
  *((_OWORD *)v9 + 3) = *((_OWORD *)v10 + 3);
  v9[64] = v10[64];
  *((void *)v9 + 9) = *((void *)v10 + 9);
  v9[80] = v10[80];
  v9[81] = v10[81];
  v9[82] = v10[82];
  uint64_t v12 = *((void *)v10 + 11);
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *((void *)v9 + 11) = v12;
  uint64_t v16 = sub_1000E5640();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  return a1;
}

uint64_t sub_1000519A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000519B8);
}

uint64_t sub_1000519BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000519D0);
}

uint64_t *sub_1000519D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    long long v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    long long v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)long long v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    v11[32] = v12[32];
    *((_DWORD *)v11 + 9) = *((_DWORD *)v12 + 9);
    v11[64] = v12[64];
    *((void *)v11 + 9) = *((void *)v12 + 9);
    v11[80] = v12[80];
    v11[81] = v12[81];
    v11[82] = v12[82];
    *((void *)v11 + 5) = *((void *)v12 + 5);
    long long v14 = *((_OWORD *)v12 + 3);
    *((void *)v11 + 11) = *((void *)v12 + 11);
    uint64_t v15 = (char *)a1 + v10;
    uint64_t v16 = (char *)a2 + v10;
    *((_OWORD *)v11 + 3) = v14;
    uint64_t v17 = sub_1000E5640();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_retain();
    v18(v15, v16, v17);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_100051BBC(uint64_t a1, uint64_t a2)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1000E5640();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_release();
}

void *sub_100051CB4(void *a1, void *a2, int *a3)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E41D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  v9[32] = v10[32];
  *((_DWORD *)v9 + 9) = *((_DWORD *)v10 + 9);
  v9[64] = v10[64];
  *((void *)v9 + 9) = *((void *)v10 + 9);
  v9[80] = v10[80];
  v9[81] = v10[81];
  v9[82] = v10[82];
  *((void *)v9 + 5) = *((void *)v10 + 5);
  long long v12 = *((_OWORD *)v10 + 3);
  *((void *)v9 + 11) = *((void *)v10 + 11);
  long long v13 = (char *)a1 + v8;
  long long v14 = (char *)a2 + v8;
  *((_OWORD *)v9 + 3) = v12;
  uint64_t v15 = sub_1000E5640();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_retain();
  v16(v13, v14, v15);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  return a1;
}

char *sub_100051E50(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E41D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  long long v11 = &a2[v8];
  long long v12 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v12;
  long long v13 = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = v13;
  long long v14 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v14;
  uint64_t v15 = &a1[v9];
  uint64_t v16 = &a2[v9];
  uint64_t v17 = sub_1000E5640();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

uint64_t sub_100051F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100051FA8);
}

uint64_t sub_100051FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 40);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1000E5640();
    long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1000520E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000520F4);
}

uint64_t sub_1000520F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000082B4(&qword_100129F40);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1000E5640();
    long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_10005222C()
{
  sub_10000C634();
  if (v0 <= 0x3F)
  {
    sub_1000E5640();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for TVWidgetContentViewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000523D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetContentViewType()
{
  return &type metadata for TVWidgetContentViewType;
}

uint64_t sub_10005240C()
{
  return sub_10005245C(&qword_10012C108, &qword_10012C110, (void (*)(void))sub_10004C6C0, (void (*)(void))sub_10004CA54);
}

uint64_t sub_10005245C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000524E8()
{
  unint64_t result = qword_10012C118;
  if (!qword_10012C118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C118);
  }
  return result;
}

uint64_t sub_10005253C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100052558()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100052574()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100052590()
{
  unint64_t result = qword_10012C148;
  if (!qword_10012C148)
  {
    sub_100008354(&qword_10012C128);
    sub_100014AC4(&qword_10012C150, &qword_10012C120);
    sub_100014AC4(&qword_10012B1E8, &qword_10012B1F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C148);
  }
  return result;
}

uint64_t sub_100052654(uint64_t result)
{
  *(unsigned char *)(result + 256) = 1;
  return result;
}

unint64_t sub_100052660()
{
  unint64_t result = qword_10012C178;
  if (!qword_10012C178)
  {
    sub_100008354(&qword_10012C170);
    sub_100052700();
    sub_100014AC4(&qword_10012B208, &qword_10012B210);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C178);
  }
  return result;
}

unint64_t sub_100052700()
{
  unint64_t result = qword_10012C180;
  if (!qword_10012C180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C180);
  }
  return result;
}

uint64_t sub_100052754(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  swift_retain();
  id v34 = a17;
  if ((a33 & 1) == 0) {
    swift_retain();
  }
  id v35 = a1;
  swift_retain();

  return swift_retain();
}

uint64_t sub_1000527DC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v5 = *(unsigned char *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v5);
  return a1;
}

uint64_t sub_100052868(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  swift_release();
  swift_release();

  if ((a33 & 1) == 0) {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1000528EC(uint64_t result)
{
  *(unsigned char *)(result + 256) = 0;
  return result;
}

uint64_t sub_1000528F4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 112);
  swift_retain();
  id v3 = v2;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100052948(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1000529A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000529CC()
{
  return sub_100052A9C(type metadata accessor for TVWidgetLockup);
}

uint64_t sub_1000529E4(uint64_t a1)
{
  return sub_100052CA8(a1, type metadata accessor for TVWidgetLockup, (uint64_t (*)(uint64_t, uint64_t))sub_10004CA98);
}

uint64_t sub_100052A10@<X0>(uint64_t a1@<X8>)
{
  return sub_10004DE40(*(void *)(v1 + 16), a1);
}

uint64_t sub_100052A18(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  id v3 = *(void **)(a1 + 128);
  swift_retain();
  id v4 = v3;
  id v5 = v2;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100052A84()
{
  return sub_100052A9C(type metadata accessor for TVWidgetCell);
}

uint64_t sub_100052A9C(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  uint64_t v6 = v1 + v4;
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v1 + v4, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v4 + v5;
  swift_release();
  uint64_t v9 = v6 + *(int *)(v2 + 24);
  uint64_t v10 = sub_1000E5640();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();

  return _swift_deallocObject(v1, v8, v3 | 7);
}

uint64_t sub_100052C14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100052C7C(uint64_t a1)
{
  return sub_100052CA8(a1, type metadata accessor for TVWidgetCell, (uint64_t (*)(uint64_t, uint64_t))sub_10004E4F0);
}

uint64_t sub_100052CA8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

unint64_t sub_100052D40()
{
  unint64_t result = qword_10012C280;
  if (!qword_10012C280)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10012C280);
  }
  return result;
}

unint64_t sub_100052D80()
{
  unint64_t result = qword_10012C288;
  if (!qword_10012C288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C288);
  }
  return result;
}

unint64_t sub_100052DD4()
{
  unint64_t result = qword_10012C2A0;
  if (!qword_10012C2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C2A0);
  }
  return result;
}

ValueMetadata *_s16DividerAlignmentOMa()
{
  return &_s16DividerAlignmentON;
}

unint64_t sub_100052E3C()
{
  unint64_t result = qword_10012C2A8;
  if (!qword_10012C2A8)
  {
    sub_100008354(&qword_10012C158);
    sub_100052EB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C2A8);
  }
  return result;
}

unint64_t sub_100052EB8()
{
  unint64_t result = qword_10012C2B0;
  if (!qword_10012C2B0)
  {
    sub_100008354(&qword_10012C138);
    sub_100008354(&qword_10012C128);
    sub_100052590();
    swift_getOpaqueTypeConformance2();
    sub_10004C5A8(&qword_10012A3B8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C2B0);
  }
  return result;
}

uint64_t sub_100052F98()
{
  return sub_100014AC4(&qword_10012C2B8, &qword_10012C2C0);
}

unint64_t sub_100052FD8()
{
  unint64_t result = qword_10012C2C8;
  if (!qword_10012C2C8)
  {
    sub_100008354(&qword_10012C2D0);
    sub_100008354(&qword_10012C228);
    sub_100014AC4(&qword_10012C230, &qword_10012C228);
    swift_getOpaqueTypeConformance2();
    sub_10004C5A8(&qword_10012A3B8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C2C8);
  }
  return result;
}

id sub_1000530E8(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a1;
  uint64_t v4 = sub_1000E5020();
  uint64_t v44 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E5040();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E3CD0();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  __chkstk_darwin(v10);
  uint64_t v39 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000082B4(&qword_100129F38);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000E3E00();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v39 - v20;
  uint64_t v22 = v2 + OBJC_IVAR____TtC17TVWidgetExtension19TVWidgetImageLoader_url;
  swift_beginAccess();
  sub_100053EC4(v22, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100053F2C((uint64_t)v14);
    sub_100053F8C();
    uint64_t v23 = (void *)sub_1000E5BD0();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v45;
    *(void *)(v24 + 24) = a2;
    uint64_t v50 = sub_100054278;
    uint64_t v51 = v24;
    aBlock = _NSConcreteStackBlock;
    uint64_t v47 = 1107296256;
    uint64_t v48 = sub_1000864FC;
    uint64_t v49 = &unk_100122240;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_1000E5030();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10005401C();
    sub_1000082B4(&qword_10012C400);
    sub_100054074();
    sub_1000E5CA0();
    sub_1000E5BE0();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v4);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v9, v43);
  }
  else
  {
    uint64_t v27 = v45;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    id result = sub_1000054E4();
    if (result)
    {
      long long v28 = result;
      sub_1000082B4(&qword_10012A900);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1000EF780;
      uint64_t v30 = sub_1000E3DC0();
      uint64_t v32 = v31;
      *(void *)(v29 + 56) = &type metadata for String;
      *(void *)(v29 + 64) = sub_10001D7B4();
      *(void *)(v29 + 32) = v30;
      *(void *)(v29 + 40) = v32;
      sub_1000E5B90();
      sub_1000E3F40();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
      uint64_t v33 = v39;
      sub_1000E3CC0();
      id v34 = [self sharedSession];
      Class v35 = sub_1000E3CB0();
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v27;
      *(void *)(v36 + 24) = a2;
      uint64_t v50 = sub_1000540D0;
      uint64_t v51 = v36;
      aBlock = _NSConcreteStackBlock;
      uint64_t v47 = 1107296256;
      uint64_t v48 = sub_100053B2C;
      uint64_t v49 = &unk_100122290;
      char v37 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id v38 = [v34 dataTaskWithRequest:v35 completionHandler:v37];
      _Block_release(v37);

      [v38 resume];
      (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10005375C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_1000E5020();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000E5040();
  uint64_t v14 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053F8C();
  if (a2 >> 60 == 15)
  {
    uint64_t v17 = (void *)sub_1000E5BD0();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a5;
    *(void *)(v18 + 24) = a6;
    uint64_t v30 = sub_100054144;
    uint64_t v31 = (void *)v18;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    long long v28 = sub_1000864FC;
    uint64_t v29 = &unk_1001222E0;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_1000E5030();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10005401C();
    sub_1000082B4(&qword_10012C400);
    sub_100054074();
    sub_1000E5CA0();
    sub_1000E5BE0();
    _Block_release(v19);
  }
  else
  {
    sub_100054178(a1, a2);
    uint64_t v24 = sub_1000E5BD0();
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = a5;
    v20[3] = a6;
    v20[4] = a1;
    v20[5] = a2;
    uint64_t v30 = sub_100054210;
    uint64_t v31 = v20;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    long long v28 = sub_1000864FC;
    uint64_t v29 = &unk_100122330;
    uint64_t v21 = _Block_copy(&aBlock);
    swift_retain();
    sub_100054244(a1, a2);
    swift_release();
    sub_1000E5030();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10005401C();
    sub_1000082B4(&qword_10012C400);
    sub_100054074();
    sub_1000E5CA0();
    uint64_t v22 = (void *)v24;
    sub_1000E5BE0();
    _Block_release(v21);

    sub_1000540D8(a1, a2);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v25);
}

uint64_t sub_100053B2C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)sub_1000E3E20();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1000540D8((uint64_t)v6, v10);

  return swift_release();
}

uint64_t sub_100053BF4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17TVWidgetExtension19TVWidgetImageLoader__identifier;
  uint64_t v2 = sub_1000082B4(&qword_10012C410);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100053F2C(v0 + OBJC_IVAR____TtC17TVWidgetExtension19TVWidgetImageLoader_url);

  return swift_deallocClassInstance();
}

uint64_t sub_100053CA8()
{
  return type metadata accessor for TVWidgetImageLoader();
}

uint64_t type metadata accessor for TVWidgetImageLoader()
{
  uint64_t result = qword_10012C308;
  if (!qword_10012C308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100053CFC()
{
  sub_100053DC8();
  if (v0 <= 0x3F)
  {
    sub_100053E20();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100053DC8()
{
  if (!qword_10012C318)
  {
    unint64_t v0 = sub_1000E3F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10012C318);
    }
  }
}

void sub_100053E20()
{
  if (!qword_10012AA70)
  {
    sub_1000E3E00();
    unint64_t v0 = sub_1000E5C50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10012AA70);
    }
  }
}

void *sub_100053E78()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100053E84@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TVWidgetImageLoader();
  uint64_t result = sub_1000E3F60();
  *a1 = result;
  return result;
}

uint64_t sub_100053EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000082B4(&qword_100129F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100053F2C(uint64_t a1)
{
  uint64_t v2 = sub_1000082B4(&qword_100129F38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100053F8C()
{
  unint64_t result = qword_10012C3F0;
  if (!qword_10012C3F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10012C3F0);
  }
  return result;
}

uint64_t sub_100053FCC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100054004(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100054014()
{
  return swift_release();
}

unint64_t sub_10005401C()
{
  unint64_t result = qword_10012C3F8;
  if (!qword_10012C3F8)
  {
    sub_1000E5020();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C3F8);
  }
  return result;
}

unint64_t sub_100054074()
{
  unint64_t result = qword_10012C408;
  if (!qword_10012C408)
  {
    sub_100008354(&qword_10012C400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C408);
  }
  return result;
}

uint64_t sub_1000540D0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10005375C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1000540D8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000540EC(a1, a2);
  }
  return a1;
}

uint64_t sub_1000540EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100054144()
{
  return (*(uint64_t (**)(void, void, unint64_t))(v0 + 16))(0, 0, 0xF000000000000000);
}

uint64_t sub_100054178(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1000541D0()
{
  swift_release();
  sub_1000540EC(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100054210()
{
  return (*(uint64_t (**)(uint64_t, void, void))(v0 + 16))(1, *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100054244(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100054178(a1, a2);
  }
  return a1;
}

void *sub_10005427C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a3;
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, v3, v7);
    }
    else
    {
      void *v4 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(v6 + 20);
    unint64_t v10 = (void *)((char *)v4 + v9);
    id v11 = (char *)v3 + v9;
    type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = *((void *)v11 + 1);
      void *v10 = *(void *)v11;
      v10[1] = v16;
      uint64_t v17 = *((void *)v11 + 3);
      v10[2] = *((void *)v11 + 2);
      v10[3] = v17;
      uint64_t v18 = *((void *)v11 + 5);
      v10[4] = *((void *)v11 + 4);
      v10[5] = v18;
      uint64_t v19 = *((void *)v11 + 7);
      v10[6] = *((void *)v11 + 6);
      v10[7] = v19;
      uint64_t v54 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v20 = v54[8];
      uint64_t v49 = &v11[v20];
      uint64_t v50 = (char *)v10 + v20;
      uint64_t v21 = sub_1000E3EE0();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(v50, v49, v21);
      uint64_t v24 = sub_1000082B4(&qword_100129F28);
      uint64_t v53 = v23;
      v23(&v50[*(int *)(v24 + 36)], &v49[*(int *)(v24 + 36)], v21);
      uint64_t v25 = v54[9];
      uint64_t v26 = (char *)v10 + v25;
      uint64_t v27 = &v11[v25];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(&v11[v25], 1, v21))
      {
        uint64_t v28 = sub_1000082B4(&qword_100129F30);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        v53(v26, v27, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
      }
      *((unsigned char *)v10 + v54[10]) = v11[v54[10]];
      *((unsigned char *)v10 + v54[11]) = v11[v54[11]];
      uint64_t v43 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v10 + *(int *)(v43 + 20)) = *(void *)&v11[*(int *)(v43 + 20)];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = *((void *)v11 + 1);
      void *v10 = *(void *)v11;
      v10[1] = v13;
      uint64_t v14 = *((void *)v11 + 3);
      v10[2] = *((void *)v11 + 2);
      v10[3] = v14;
      uint64_t v15 = *((void *)v11 + 5);
      v10[4] = *((void *)v11 + 4);
      v10[5] = v15;
      *((unsigned char *)v10 + 48) = v11[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v56 = v6;
      uint64_t v29 = *((void *)v11 + 1);
      void *v10 = *(void *)v11;
      v10[1] = v29;
      uint64_t v30 = *((void *)v11 + 3);
      v10[2] = *((void *)v11 + 2);
      v10[3] = v30;
      uint64_t v31 = *((void *)v11 + 5);
      char v55 = v3;
      v10[4] = *((void *)v11 + 4);
      v10[5] = v31;
      uint64_t v32 = *((void *)v11 + 7);
      v10[6] = *((void *)v11 + 6);
      v10[7] = v32;
      uint64_t v33 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v34 = v33[8];
      uint64_t v51 = &v11[v34];
      int v52 = (char *)v10 + v34;
      uint64_t v35 = sub_1000E3EE0();
      uint64_t v36 = *(void *)(v35 - 8);
      char v37 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37(v52, v51, v35);
      uint64_t v38 = sub_1000082B4(&qword_100129F28);
      v37(&v52[*(int *)(v38 + 36)], &v51[*(int *)(v38 + 36)], v35);
      uint64_t v39 = v33[9];
      uint64_t v40 = (char *)v10 + v39;
      uint64_t v41 = &v11[v39];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(&v11[v39], 1, v35))
      {
        uint64_t v42 = sub_1000082B4(&qword_100129F30);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        v37(v40, v41, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v40, 0, 1, v35);
      }
      uint64_t v6 = v56;
      *((unsigned char *)v10 + v33[10]) = v11[v33[10]];
      *((unsigned char *)v10 + v33[11]) = v11[v33[11]];
      uint64_t v3 = v55;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = *(int *)(v6 + 24);
    uint64_t v45 = (char *)v4 + v44;
    uint64_t v46 = (char *)v3 + v44;
    *uint64_t v45 = *v46;
    uint64_t v47 = *((void *)v46 + 2);
    *((void *)v45 + 1) = *((void *)v46 + 1);
    *((void *)v45 + 2) = v47;
    *((void *)v45 + 3) = *((void *)v46 + 3);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000547EC(uint64_t a1, uint64_t a2)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v15 = v5 + *(int *)(v14 + 32);
      uint64_t v16 = sub_1000E3EE0();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v18(v15, v16);
      uint64_t v19 = sub_1000082B4(&qword_100129F28);
      v18(v15 + *(int *)(v19 + 36), v16);
      uint64_t v20 = v5 + *(int *)(v14 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v20, 1, v16)) {
        v18(v20, v16);
      }
      type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      goto LABEL_13;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v8 = v5 + *(int *)(v7 + 32);
      uint64_t v9 = sub_1000E3EE0();
      uint64_t v10 = *(void *)(v9 - 8);
      id v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v11(v8, v9);
      uint64_t v12 = sub_1000082B4(&qword_100129F28);
      v11(v8 + *(int *)(v12 + 36), v9);
      uint64_t v13 = v5 + *(int *)(v7 + 36);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v13, 1, v9)) {
        v11(v13, v9);
      }
      break;
  }
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100054AF8(void *a1, void *a2, uint64_t a3)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E41D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v53 = a3;
    char v55 = a2;
    uint64_t v14 = *((void *)v9 + 1);
    void *v8 = *(void *)v9;
    v8[1] = v14;
    uint64_t v15 = *((void *)v9 + 3);
    v8[2] = *((void *)v9 + 2);
    v8[3] = v15;
    uint64_t v16 = *((void *)v9 + 5);
    v8[4] = *((void *)v9 + 4);
    v8[5] = v16;
    uint64_t v17 = *((void *)v9 + 7);
    v8[6] = *((void *)v9 + 6);
    v8[7] = v17;
    uint64_t v18 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v19 = v18[8];
    uint64_t v49 = &v9[v19];
    uint64_t v51 = (char *)v8 + v19;
    uint64_t v20 = sub_1000E3EE0();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    uint64_t v22 = *(void *)(v20 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v51, v49, v20);
    uint64_t v23 = sub_1000082B4(&qword_100129F28);
    v21(&v51[*(int *)(v23 + 36)], &v49[*(int *)(v23 + 36)], v20);
    uint64_t v24 = v18[9];
    uint64_t v25 = (char *)v8 + v24;
    uint64_t v26 = &v9[v24];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(&v9[v24], 1, v20))
    {
      uint64_t v27 = sub_1000082B4(&qword_100129F30);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      v21(v25, v26, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v20);
    }
    *((unsigned char *)v8 + v18[10]) = v9[v18[10]];
    *((unsigned char *)v8 + v18[11]) = v9[v18[11]];
    uint64_t v42 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)((char *)v8 + *(int *)(v42 + 20)) = *(void *)&v9[*(int *)(v42 + 20)];
    swift_bridgeObjectRetain();
    a2 = v55;
    a3 = v53;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = *((void *)v9 + 1);
    void *v8 = *(void *)v9;
    v8[1] = v11;
    uint64_t v12 = *((void *)v9 + 3);
    v8[2] = *((void *)v9 + 2);
    v8[3] = v12;
    uint64_t v13 = *((void *)v9 + 5);
    v8[4] = *((void *)v9 + 4);
    v8[5] = v13;
    *((unsigned char *)v8 + 48) = v9[48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v54 = a3;
    uint64_t v56 = a2;
    uint64_t v57 = a1;
    uint64_t v28 = *((void *)v9 + 1);
    void *v8 = *(void *)v9;
    v8[1] = v28;
    uint64_t v29 = *((void *)v9 + 3);
    v8[2] = *((void *)v9 + 2);
    v8[3] = v29;
    uint64_t v30 = *((void *)v9 + 5);
    v8[4] = *((void *)v9 + 4);
    v8[5] = v30;
    uint64_t v31 = *((void *)v9 + 7);
    v8[6] = *((void *)v9 + 6);
    v8[7] = v31;
    uint64_t v32 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v33 = *(int *)(v32 + 32);
    uint64_t v50 = (char *)v8 + v33;
    int v52 = (int *)v32;
    uint64_t v48 = &v9[v33];
    uint64_t v34 = sub_1000E3EE0();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v50, v48, v34);
    uint64_t v37 = sub_1000082B4(&qword_100129F28);
    v36(&v50[*(int *)(v37 + 36)], &v48[*(int *)(v37 + 36)], v34);
    uint64_t v38 = v52[9];
    uint64_t v39 = (char *)v8 + v38;
    uint64_t v40 = &v9[v38];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v9[v38], 1, v34))
    {
      uint64_t v41 = sub_1000082B4(&qword_100129F30);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      v36(v39, v40, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v39, 0, 1, v34);
    }
    a2 = v56;
    a1 = v57;
    a3 = v54;
    *((unsigned char *)v8 + v52[10]) = v9[v52[10]];
    *((unsigned char *)v8 + v52[11]) = v9[v52[11]];
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = *(int *)(a3 + 24);
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  *uint64_t v44 = *v45;
  uint64_t v46 = *((void *)v45 + 2);
  *((void *)v44 + 1) = *((void *)v45 + 1);
  *((void *)v44 + 2) = v46;
  *((void *)v44 + 3) = *((void *)v45 + 3);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_10005500C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E41D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    sub_100058504((uint64_t)a1 + v7, type metadata accessor for SportsWidgetClock);
    type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v42 = a3;
      void *v8 = *(void *)v9;
      v8[1] = *((void *)v9 + 1);
      v8[2] = *((void *)v9 + 2);
      v8[3] = *((void *)v9 + 3);
      v8[4] = *((void *)v9 + 4);
      v8[5] = *((void *)v9 + 5);
      v8[6] = *((void *)v9 + 6);
      v8[7] = *((void *)v9 + 7);
      uint64_t v11 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v12 = v11[8];
      uint64_t v36 = &v9[v12];
      uint64_t v38 = (char *)v8 + v12;
      uint64_t v13 = sub_1000E3EE0();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v38, v36, v13);
      uint64_t v16 = sub_1000082B4(&qword_100129F28);
      uint64_t v40 = v15;
      v15(&v38[*(int *)(v16 + 36)], &v36[*(int *)(v16 + 36)], v13);
      uint64_t v17 = v11[9];
      uint64_t v18 = (char *)v8 + v17;
      uint64_t v19 = &v9[v17];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&v9[v17], 1, v13))
      {
        uint64_t v20 = sub_1000082B4(&qword_100129F30);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v40(v18, v19, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
      }
      *((unsigned char *)v8 + v11[10]) = v9[v11[10]];
      *((unsigned char *)v8 + v11[11]) = v9[v11[11]];
      uint64_t v30 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)((char *)v8 + *(int *)(v30 + 20)) = *(void *)&v9[*(int *)(v30 + 20)];
      swift_bridgeObjectRetain();
      a3 = v42;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      void *v8 = *(void *)v9;
      v8[1] = *((void *)v9 + 1);
      v8[2] = *((void *)v9 + 2);
      v8[3] = *((void *)v9 + 3);
      v8[4] = *((void *)v9 + 4);
      v8[5] = *((void *)v9 + 5);
      *((unsigned char *)v8 + 48) = v9[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      void *v8 = *(void *)v9;
      v8[1] = *((void *)v9 + 1);
      v8[2] = *((void *)v9 + 2);
      v8[3] = *((void *)v9 + 3);
      v8[4] = *((void *)v9 + 4);
      v8[5] = *((void *)v9 + 5);
      v8[6] = *((void *)v9 + 6);
      v8[7] = *((void *)v9 + 7);
      uint64_t v21 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v22 = v21[8];
      uint64_t v37 = &v9[v22];
      uint64_t v39 = (char *)v8 + v22;
      uint64_t v23 = sub_1000E3EE0();
      uint64_t v35 = *(void *)(v23 - 8);
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v39, v37, v23);
      uint64_t v25 = sub_1000082B4(&qword_100129F28);
      uint64_t v41 = v24;
      v24(&v39[*(int *)(v25 + 36)], &v37[*(int *)(v25 + 36)], v23);
      uint64_t v26 = v21[9];
      uint64_t v27 = (char *)v8 + v26;
      uint64_t v28 = &v9[v26];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v9[v26], 1, v23))
      {
        uint64_t v29 = sub_1000082B4(&qword_100129F30);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v41(v27, v28, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v27, 0, 1, v23);
      }
      *((unsigned char *)v8 + v21[10]) = v9[v21[10]];
      *((unsigned char *)v8 + v21[11]) = v9[v21[11]];
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  *uint64_t v32 = *((unsigned char *)a2 + v31);
  *((void *)v32 + 1) = *(void *)((char *)a2 + v31 + 8);
  swift_retain();
  swift_release();
  *((void *)v32 + 2) = *((void *)v33 + 2);
  swift_retain();
  swift_release();
  *((void *)v32 + 3) = *((void *)v33 + 3);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1000555F8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E41D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for SportsWidgetClock(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v49 = a2;
    long long v27 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v27;
    long long v28 = *((_OWORD *)v10 + 3);
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 3) = v28;
    uint64_t v29 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v30 = v29[8];
    uint64_t v31 = &v9[v30];
    uint64_t v32 = &v10[v30];
    uint64_t v33 = sub_1000E3EE0();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v35(v31, v32, v33);
    uint64_t v36 = sub_1000082B4(&qword_100129F28);
    v35(&v31[*(int *)(v36 + 36)], &v32[*(int *)(v36 + 36)], v33);
    uint64_t v37 = v29[9];
    uint64_t v38 = &v9[v37];
    uint64_t v39 = &v10[v37];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(&v10[v37], 1, v33))
    {
      uint64_t v40 = sub_1000082B4(&qword_100129F30);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      v35(v38, v39, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v38, 0, 1, v33);
    }
    v9[v29[10]] = v10[v29[10]];
    v9[v29[11]] = v10[v29[11]];
    uint64_t v41 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
    *(void *)&v9[*(int *)(v41 + 20)] = *(void *)&v10[*(int *)(v41 + 20)];
    swift_storeEnumTagMultiPayload();
    a2 = v49;
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v47 = a3;
    uint64_t v48 = a2;
    long long v13 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v13;
    long long v14 = *((_OWORD *)v10 + 3);
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 3) = v14;
    uint64_t v15 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    uint64_t v16 = v15[8];
    uint64_t v17 = &v9[v16];
    uint64_t v18 = &v10[v16];
    uint64_t v19 = sub_1000E3EE0();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v21(v17, v18, v19);
    uint64_t v22 = sub_1000082B4(&qword_100129F28);
    v21(&v17[*(int *)(v22 + 36)], &v18[*(int *)(v22 + 36)], v19);
    uint64_t v23 = v15[9];
    uint64_t v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&v10[v23], 1, v19))
    {
      uint64_t v26 = sub_1000082B4(&qword_100129F30);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v21(v24, v25, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
    }
    a3 = v47;
    a2 = v48;
    v9[v15[10]] = v10[v15[10]];
    v9[v15[11]] = v10[v15[11]];
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v42 = *(int *)(a3 + 24);
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  long long v45 = *((_OWORD *)v44 + 1);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *((_OWORD *)v43 + 1) = v45;
  return a1;
}

char *sub_100055A48(char *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    uint64_t v6 = sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, v4, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, v4, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &v4[v8];
    sub_100058504((uint64_t)&a1[v8], type metadata accessor for SportsWidgetClock);
    uint64_t v11 = type metadata accessor for SportsWidgetClock(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v48 = v4;
      long long v26 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v26;
      long long v27 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v27;
      long long v28 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v29 = v28[8];
      uint64_t v30 = &v9[v29];
      uint64_t v31 = &v10[v29];
      uint64_t v32 = sub_1000E3EE0();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
      v34(v30, v31, v32);
      uint64_t v35 = sub_1000082B4(&qword_100129F28);
      uint64_t v46 = v34;
      v34(&v30[*(int *)(v35 + 36)], &v31[*(int *)(v35 + 36)], v32);
      uint64_t v36 = v33;
      uint64_t v37 = v28[9];
      uint64_t v38 = &v9[v37];
      uint64_t v39 = &v10[v37];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(&v10[v37], 1, v32))
      {
        uint64_t v40 = sub_1000082B4(&qword_100129F30);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        v46(v38, v39, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v38, 0, 1, v32);
      }
      v9[v28[10]] = v10[v28[10]];
      v9[v28[11]] = v10[v28[11]];
      uint64_t v41 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
      *(void *)&v9[*(int *)(v41 + 20)] = *(void *)&v10[*(int *)(v41 + 20)];
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = v48;
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v49 = a3;
      long long v13 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v13;
      long long v14 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v14;
      uint64_t v15 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
      uint64_t v16 = v15[8];
      uint64_t v17 = &v9[v16];
      uint64_t v18 = &v10[v16];
      uint64_t v19 = sub_1000E3EE0();
      uint64_t v47 = *(void *)(v19 - 8);
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
      v20(v17, v18, v19);
      uint64_t v21 = sub_1000082B4(&qword_100129F28);
      v20(&v17[*(int *)(v21 + 36)], &v18[*(int *)(v21 + 36)], v19);
      uint64_t v22 = v15[9];
      uint64_t v23 = &v9[v22];
      uint64_t v24 = &v10[v22];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(&v10[v22], 1, v19))
      {
        uint64_t v25 = sub_1000082B4(&qword_100129F30);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        v20(v23, v24, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v23, 0, 1, v19);
      }
      a3 = v49;
      v9[v15[10]] = v10[v15[10]];
      v9[v15[11]] = v10[v15[11]];
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v42 = *(int *)(a3 + 24);
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &v4[v42];
  char *v43 = *v44;
  *((void *)v43 + 1) = *((void *)v44 + 1);
  swift_release();
  *((void *)v43 + 2) = *((void *)v44 + 2);
  swift_release();
  *((void *)v43 + 3) = *((void *)v44 + 3);
  swift_release();
  return a1;
}

uint64_t sub_100055F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100055F34);
}

uint64_t sub_100055F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for SportsWidgetClock(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100056050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100056064);
}

uint64_t sub_100056064(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000082B4(&qword_100129F40);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for SportsWidgetClock(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SportsWidgetClockView()
{
  uint64_t result = qword_10012C470;
  if (!qword_10012C470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000561C8()
{
  sub_10000C634();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsWidgetClock(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100056298()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000562B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v218 = a1;
  uint64_t v182 = sub_1000082B4(&qword_10012C4B0);
  uint64_t v1 = __chkstk_darwin(v182);
  uint64_t v183 = (char *)&v178 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v179 = (char *)&v178 - v3;
  uint64_t v180 = sub_1000082B4(&qword_10012C4B8);
  uint64_t v4 = __chkstk_darwin(v180);
  uint64_t v181 = (char *)&v178 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v184 = (uint64_t)&v178 - v6;
  uint64_t v196 = sub_1000082B4(&qword_10012C4C0);
  uint64_t v187 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  BOOL v186 = (char *)&v178 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_1000082B4(&qword_10012C4C8);
  uint64_t v189 = *(void *)(v197 - 8);
  uint64_t v8 = __chkstk_darwin(v197);
  v185 = (char *)&v178 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v188 = (char *)&v178 - v10;
  uint64_t v193 = sub_1000082B4(&qword_10012C4D0);
  __chkstk_darwin(v193);
  uint64_t v195 = (uint64_t)&v178 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_1000E48B0();
  v200 = *(char **)(v202 - 8);
  __chkstk_darwin(v202);
  uint64_t v201 = (char *)&v178 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = type metadata accessor for SportsWidgetBaseballClockView();
  __chkstk_darwin(v221);
  uint64_t v213 = (void (**)(char *, uint64_t, uint64_t))((char *)&v178 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000E41D0();
  uint64_t v222 = *(void (***)(char *, uint64_t, uint64_t))(v14 - 8);
  uint64_t v223 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v203 = (char *)&v178 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v204 = (char *)&v178 - v17;
  uint64_t v217 = sub_1000082B4(&qword_10012C4D8);
  __chkstk_darwin(v217);
  uint64_t v194 = (char *)&v178 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = type metadata accessor for SportsWidgetSoccerClockView(0);
  __chkstk_darwin(v220);
  v199 = (uint64_t *)((char *)&v178 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v210 = sub_1000082B4(&qword_10012C4E0);
  v192 = *(void (**)(char *, uint64_t, uint64_t))(v210 - 8);
  uint64_t v20 = __chkstk_darwin(v210);
  uint64_t v190 = (char *)&v178 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v191 = (char *)&v178 - v22;
  uint64_t v23 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v198 = (uint64_t)&v178 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v211 = (char *)&v178 - v26;
  uint64_t v214 = sub_1000082B4(&qword_10012C4E8);
  __chkstk_darwin(v214);
  uint64_t v216 = (uint64_t)&v178 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_1000082B4(&qword_10012C4F0);
  __chkstk_darwin(v205);
  uint64_t v208 = (char *)&v178 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_1000082B4(&qword_10012C4F8);
  __chkstk_darwin(v215);
  v209 = (char *)&v178 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_1000082B4(&qword_10012A600);
  __chkstk_darwin(v206);
  uint64_t v212 = (char *)&v178 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = sub_1000082B4(&qword_10012C500);
  uint64_t v31 = __chkstk_darwin(v219);
  uint64_t v33 = (uint64_t *)((char *)&v178 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v31);
  uint64_t v35 = (void (**)(char *, uint64_t, uint64_t))((char *)&v178 - v34);
  uint64_t v207 = sub_1000082B4(&qword_10012C508);
  uint64_t v36 = *(void (***)(char *, uint64_t, uint64_t))(v207 - 8);
  uint64_t v37 = __chkstk_darwin(v207);
  uint64_t v39 = (char *)&v178 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v178 - v40;
  uint64_t v42 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v43 = __chkstk_darwin(v42 - 8);
  long long v45 = (uint64_t *)((char *)&v178 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v178 - v46;
  uint64_t v48 = type metadata accessor for SportsWidgetClock(0);
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)&v178 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for SportsWidgetClockView();
  sub_10005849C((uint64_t)v224 + *(int *)(v51 + 20), (uint64_t)v50, type metadata accessor for SportsWidgetClock);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v221 = (uint64_t)v39;
    v211 = v41;
    uint64_t v213 = v36;
    sub_100058434((uint64_t)v50, (uint64_t)v47, type metadata accessor for SportsWidgetGenericClockViewModel);
    uint64_t v204 = v47;
    sub_10005849C((uint64_t)v47, (uint64_t)v45, type metadata accessor for SportsWidgetGenericClockViewModel);
    long long v87 = (void *)((char *)v224 + *(int *)(v51 + 24));
    LODWORD(v224) = *(unsigned __int8 *)v87;
    uint64_t v89 = v87[1];
    uint64_t v88 = v87[2];
    uint64_t v90 = v87[3];
    uint64_t v91 = self;
    swift_retain();
    swift_retain();
    swift_retain();
    id v92 = [v91 labelColor];
    uint64_t v93 = sub_1000E4BD0();
    *uint64_t v33 = swift_getKeyPath();
    sub_1000082B4(&qword_100129F20);
    swift_storeEnumTagMultiPayload();
    long long v94 = (int *)v219;
    long long v95 = (uint64_t *)((char *)v33 + *(int *)(v219 + 36));
    uint64_t *v95 = swift_getKeyPath();
    sub_1000082B4(&qword_10012B9A0);
    swift_storeEnumTagMultiPayload();
    sub_100058434((uint64_t)v45, (uint64_t)v33 + v94[11], type metadata accessor for SportsWidgetGenericClockViewModel);
    uint64_t v96 = (char *)v33 + v94[10];
    *uint64_t v96 = (char)v224;
    *((void *)v96 + 1) = v88;
    *((void *)v96 + 2) = v89;
    *((void *)v96 + 3) = v93;
    *((void *)v96 + 4) = v90;
    *((void *)v96 + 5) = 1;
    v96[48] = 1;
    *(_OWORD *)(v96 + 56) = xmmword_1000F28E0;
    *((void *)v96 + 9) = 0x4014000000000000;
    *(uint64_t *)((char *)v33 + v94[12]) = 0;
    *(uint64_t *)((char *)v33 + v94[13]) = 0;
    sub_100014B08((uint64_t)v33, (uint64_t)v35, &qword_10012C500);
    if (qword_100129BC0 != -1) {
      swift_once();
    }
    uint64_t v97 = v223;
    uint64_t v98 = sub_100008498(v223, (uint64_t)qword_100141D08);
    uint64_t v59 = (uint64_t)v212;
    v222[2](v212, v98, v97);
    sub_1000583EC(&qword_10012A050, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    char v99 = sub_1000E5970();
    uint64_t v100 = v221;
    if (v99)
    {
      uint64_t v101 = sub_100014AC4(&qword_10012C520, &qword_10012C500);
      uint64_t v102 = sub_100014AC4(&qword_10012C528, &qword_10012A600);
      uint64_t v103 = v219;
      uint64_t v104 = v206;
      sub_1000E4B00();
      sub_1000147B8(v59, &qword_10012A600);
      sub_1000147B8((uint64_t)v35, &qword_10012C500);
      uint64_t v105 = v213;
      uint64_t v106 = v100;
      uint64_t v107 = (uint64_t)v211;
      uint64_t v108 = v207;
      v213[4](v211, v106, v207);
      v105[2](v208, v107, v108);
      swift_storeEnumTagMultiPayload();
      uint64_t v225 = v103;
      uint64_t v226 = v104;
      uint64_t v227 = v101;
      uint64_t v228 = v102;
      swift_getOpaqueTypeConformance2();
      uint64_t v109 = sub_1000583EC(&qword_10012C530, (void (*)(uint64_t))type metadata accessor for SportsWidgetSoccerClockView);
      uint64_t v225 = v220;
      uint64_t v226 = v104;
      uint64_t v227 = v109;
      uint64_t v228 = v102;
      swift_getOpaqueTypeConformance2();
      uint64_t v110 = (uint64_t)v209;
      sub_1000E4690();
      sub_100014754(v110, v216, &qword_10012C4F8);
      swift_storeEnumTagMultiPayload();
      sub_10005815C();
      sub_1000582DC();
      sub_1000E4690();
      sub_1000147B8(v110, &qword_10012C4F8);
      ((void (*)(uint64_t, uint64_t))v105[1])(v107, v108);
      return sub_100058504((uint64_t)v204, type metadata accessor for SportsWidgetGenericClockViewModel);
    }
    __break(1u);
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v112 = (uint64_t)v211;
    sub_100058434((uint64_t)v50, (uint64_t)v211, type metadata accessor for SportsWidgetSoccerClockViewModel);
    uint64_t v113 = (char *)v224 + *(int *)(v51 + 24);
    char v114 = *v113;
    uint64_t v59 = *((void *)v113 + 1);
    long long v94 = (int *)*((void *)v113 + 2);
    uint64_t v35 = (void (**)(char *, uint64_t, uint64_t))*((void *)v113 + 3);
    uint64_t v115 = self;
    swift_retain();
    swift_retain();
    swift_retain();
    id v116 = [v115 labelColor];
    uint64_t v89 = sub_1000E4BD0();
    uint64_t v117 = v198;
    sub_10005849C(v112, v198, type metadata accessor for SportsWidgetSoccerClockViewModel);
    uint64_t KeyPath = swift_getKeyPath();
    long long v45 = v199;
    uint64_t *v199 = KeyPath;
    sub_1000082B4(&qword_100129F20);
    swift_storeEnumTagMultiPayload();
    uint64_t v119 = v220;
    sub_100058434(v117, (uint64_t)v45 + *(int *)(v220 + 20), type metadata accessor for SportsWidgetSoccerClockViewModel);
    uint64_t v120 = (char *)v45 + *(int *)(v119 + 24);
    *uint64_t v120 = v114;
    *((void *)v120 + 1) = v94;
    *((void *)v120 + 2) = v59;
    *((void *)v120 + 3) = v89;
    *((void *)v120 + 4) = v35;
    *((void *)v120 + 5) = 1;
    v120[48] = 1;
    *(_OWORD *)(v120 + 56) = xmmword_1000F28E0;
    *((void *)v120 + 9) = 0x4014000000000000;
    uint64_t v121 = qword_100129BC0;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v121 == -1)
    {
LABEL_10:
      uint64_t v122 = v223;
      uint64_t v123 = sub_100008498(v223, (uint64_t)qword_100141D08);
      uint64_t v124 = v212;
      v222[2](v212, v123, v122);
      sub_1000583EC(&qword_10012A050, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (sub_1000E5970())
      {
        uint64_t v125 = sub_1000583EC(&qword_10012C530, (void (*)(uint64_t))type metadata accessor for SportsWidgetSoccerClockView);
        uint64_t v126 = sub_100014AC4(&qword_10012C528, &qword_10012A600);
        uint64_t v224 = v94;
        uint64_t v127 = v190;
        uint64_t v222 = v35;
        uint64_t v223 = v89;
        uint64_t v128 = (uint64_t)v124;
        uint64_t v129 = v220;
        uint64_t v130 = v206;
        sub_1000E4B00();
        sub_1000147B8(v128, &qword_10012A600);
        sub_100058504((uint64_t)v45, type metadata accessor for SportsWidgetSoccerClockView);
        uint64_t v131 = v192;
        uint64_t v132 = (void (*)(char *, char *, uint64_t))*((void *)v192 + 4);
        uint64_t v221 = v59;
        uint64_t v133 = v191;
        uint64_t v134 = v210;
        v132(v191, v127, v210);
        (*((void (**)(char *, char *, uint64_t))v131 + 2))(v208, v133, v134);
        swift_storeEnumTagMultiPayload();
        uint64_t v135 = sub_100014AC4(&qword_10012C520, &qword_10012C500);
        uint64_t v225 = v219;
        uint64_t v226 = v130;
        uint64_t v227 = v135;
        uint64_t v228 = v126;
        swift_getOpaqueTypeConformance2();
        uint64_t v225 = v129;
        uint64_t v226 = v130;
        uint64_t v227 = v125;
        uint64_t v228 = v126;
        swift_getOpaqueTypeConformance2();
        uint64_t v136 = (uint64_t)v209;
        sub_1000E4690();
        sub_100014754(v136, v216, &qword_10012C4F8);
        swift_storeEnumTagMultiPayload();
        sub_10005815C();
        sub_1000582DC();
        sub_1000E4690();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_1000147B8(v136, &qword_10012C4F8);
        (*((void (**)(char *, uint64_t))v131 + 1))(v133, v134);
        return sub_100058504((uint64_t)v211, type metadata accessor for SportsWidgetSoccerClockViewModel);
      }
      __break(1u);
LABEL_19:
      swift_once();
      goto LABEL_13;
    }
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  v199 = *(uint64_t **)v50;
  uint64_t v205 = *((void *)v50 + 1);
  uint64_t v206 = *((void *)v50 + 2);
  uint64_t v207 = *((void *)v50 + 3);
  uint64_t v53 = (char *)*((void *)v50 + 5);
  uint64_t v208 = (char *)*((void *)v50 + 4);
  v209 = v53;
  LODWORD(v210) = v50[48];
  uint64_t v54 = (unsigned __int8 *)v224 + *(int *)(v51 + 24);
  LODWORD(v211) = *v54;
  uint64_t v55 = *((void *)v54 + 3);
  uint64_t v56 = self;
  uint64_t v219 = v55;
  swift_retain_n();
  id v57 = [v56 labelColor];
  uint64_t v220 = sub_1000E4BD0();
  id v58 = [v56 labelColor];
  uint64_t v212 = (char *)sub_1000E4BD0();
  uint64_t v59 = (uint64_t)v204;
  sub_1000C1F94((uint64_t)v204);
  uint64_t v61 = v222;
  uint64_t v60 = v223;
  uint64_t v62 = (char *)(v222 + 13);
  char v63 = v222[13];
  uint64_t v64 = (uint64_t)v203;
  v63(v203, enum case for DynamicTypeSize.accessibility2(_:), v223);
  uint64_t v198 = sub_1000583EC((unint64_t *)&qword_10012A0D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v65 = sub_1000E5930();
  uint64_t v68 = (char *)v61[1];
  uint64_t v67 = (char *)(v61 + 1);
  uint64_t v66 = v68;
  ((void (*)(uint64_t, uint64_t))v68)(v64, v60);
  ((void (*)(uint64_t, uint64_t))v68)(v59, v60);
  uint64_t v69 = swift_getKeyPath();
  uint64_t v70 = (uint64_t)v213;
  *uint64_t v213 = (void (*)(char *, uint64_t, uint64_t))v69;
  sub_1000082B4(&qword_100129F20);
  swift_storeEnumTagMultiPayload();
  uint64_t v71 = v221;
  uint64_t v72 = (uint64_t *)(v70 + *(int *)(v221 + 20));
  *uint64_t v72 = swift_getKeyPath();
  sub_1000082B4(&qword_10012B9A0);
  swift_storeEnumTagMultiPayload();
  long long v73 = (void (**)(char *, uint64_t, uint64_t))(v200 + 104);
  if (v65)
  {
    uint64_t v225 = 0x4032000000000000;
    uint64_t v74 = enum case for Font.TextStyle.footnote(_:);
    char v75 = *v73;
    uint64_t v76 = v201;
    uint64_t v77 = v202;
    (*v73)(v201, enum case for Font.TextStyle.footnote(_:), v202);
    sub_1000449E4();
    swift_retain();
    uint64_t v78 = v219;
    swift_retain_n();
    swift_retain();
    sub_1000E4020();
    uint64_t v225 = 0x4010000000000000;
    v75(v76, v74, v77);
    sub_1000E4020();
    uint64_t v79 = v70 + *(int *)(v71 + 28);
    uint64_t v80 = v205;
    *(void *)uint64_t v79 = v199;
    *(void *)(v79 + 8) = v80;
    uint64_t v81 = v207;
    *(void *)(v79 + 16) = v206;
    *(void *)(v79 + 24) = v81;
    uint64_t v82 = v209;
    *(void *)(v79 + 32) = v208;
    *(void *)(v79 + 40) = v82;
    *(unsigned char *)(v79 + 48) = v210;
    uint64_t v83 = v70 + *(int *)(v71 + 24);
    *(unsigned char *)uint64_t v83 = (_BYTE)v211;
    *(void *)(v83 + 8) = v220;
    *(void *)(v83 + 16) = 1;
    *(void *)(v83 + 24) = v78;
    *(unsigned char *)(v83 + 32) = 1;
    *(void *)(v83 + 40) = v212;
    *(void *)(v83 + 48) = 1;
    *(void *)(v83 + 56) = v78;
    *(unsigned char *)(v83 + 64) = 1;
    *(_OWORD *)(v83 + 72) = xmmword_1000F28F0;
    *(void *)(v83 + 88) = 0;
    sub_10005849C(v70, v195, (uint64_t (*)(void))type metadata accessor for SportsWidgetBaseballClockView);
    swift_storeEnumTagMultiPayload();
    uint64_t v84 = sub_1000583EC(&qword_10012C510, (void (*)(uint64_t))type metadata accessor for SportsWidgetBaseballClockView);
    uint64_t v225 = v71;
    uint64_t v226 = v84;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v225 = v196;
    uint64_t v226 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v86 = (uint64_t)v194;
    sub_1000E4690();
    sub_100058504(v70, (uint64_t (*)(void))type metadata accessor for SportsWidgetBaseballClockView);
LABEL_15:
    sub_100014754(v86, v216, &qword_10012C4D8);
    swift_storeEnumTagMultiPayload();
    sub_10005815C();
    sub_1000582DC();
    sub_1000E4690();
    swift_release();
    swift_release_n();
    swift_release();
    return sub_1000147B8(v86, &qword_10012C4D8);
  }
  v192 = v63;
  v200 = v62;
  uint64_t v190 = v66;
  uint64_t v191 = v67;
  uint64_t v225 = 0x4032000000000000;
  uint64_t v137 = enum case for Font.TextStyle.footnote(_:);
  int v138 = *v73;
  uint64_t v139 = v201;
  uint64_t v140 = v202;
  (*v73)(v201, enum case for Font.TextStyle.footnote(_:), v202);
  sub_1000449E4();
  swift_retain();
  uint64_t v141 = v219;
  swift_retain_n();
  char v142 = v212;
  swift_retain();
  sub_1000E4020();
  uint64_t v225 = 0x4010000000000000;
  v138(v139, v137, v140);
  uint64_t v143 = v221;
  char v144 = v213;
  sub_1000E4020();
  char v145 = (char *)v144 + *(int *)(v143 + 28);
  uint64_t v146 = v205;
  *(void *)char v145 = v199;
  *((void *)v145 + 1) = v146;
  uint64_t v147 = v207;
  *((void *)v145 + 2) = v206;
  *((void *)v145 + 3) = v147;
  uint64_t v148 = v209;
  *((void *)v145 + 4) = v208;
  *((void *)v145 + 5) = v148;
  v145[48] = v210;
  uint64_t v149 = (char *)v144 + *(int *)(v143 + 24);
  *uint64_t v149 = (char)v211;
  *((void *)v149 + 1) = v220;
  *((void *)v149 + 2) = 1;
  *((void *)v149 + 3) = v141;
  v149[32] = 1;
  *((void *)v149 + 5) = v142;
  *((void *)v149 + 6) = 1;
  *((void *)v149 + 7) = v141;
  v149[64] = 1;
  *(_OWORD *)(v149 + 72) = xmmword_1000F28F0;
  *((void *)v149 + 11) = 0;
  if (qword_100129BC0 != -1) {
    goto LABEL_19;
  }
LABEL_13:
  uint64_t v150 = v223;
  uint64_t v151 = sub_100008498(v223, (uint64_t)qword_100141D08);
  v192((char *)v59, enum case for DynamicTypeSize.xLarge(_:), v150);
  uint64_t result = sub_1000E5950();
  if (result)
  {
    uint64_t v152 = v182;
    uint64_t v153 = v179;
    uint64_t v154 = &v179[*(int *)(v182 + 48)];
    uint64_t v155 = v222;
    uint64_t v156 = v222[2];
    v156(v179, v151, v150);
    uint64_t v157 = v155[4];
    v157(v154, v59, v150);
    uint64_t v158 = v183;
    uint64_t v159 = &v183[*(int *)(v152 + 48)];
    v156(v183, (uint64_t)v153, v150);
    v156(v159, (uint64_t)v154, v150);
    uint64_t v160 = (uint64_t)v181;
    v157(v181, (uint64_t)v158, v150);
    uint64_t v161 = (void (*)(uint64_t, uint64_t))v190;
    ((void (*)(char *, uint64_t))v190)(v159, v150);
    uint64_t v162 = &v158[*(int *)(v152 + 48)];
    v157(v158, (uint64_t)v153, v150);
    v157(v162, (uint64_t)v154, v150);
    v157((char *)(v160 + *(int *)(v180 + 36)), (uint64_t)v162, v150);
    uint64_t v163 = v161;
    v161((uint64_t)v158, v150);
    uint64_t v164 = v184;
    sub_100014B08(v160, v184, &qword_10012C4B8);
    uint64_t v165 = (uint64_t)v204;
    sub_1000C1F94((uint64_t)v204);
    sub_1000E41B0();
    v163(v165, v150);
    uint64_t v166 = sub_1000583EC(&qword_10012C510, (void (*)(uint64_t))type metadata accessor for SportsWidgetBaseballClockView);
    v167 = v186;
    uint64_t v168 = v221;
    uint64_t v169 = (uint64_t)v213;
    sub_1000E4A40();
    sub_1000147B8(v164, &qword_10012C4B8);
    sub_100058504(v169, (uint64_t (*)(void))type metadata accessor for SportsWidgetBaseballClockView);
    v192((char *)v165, enum case for DynamicTypeSize.accessibility1(_:), v150);
    uint64_t v170 = (uint64_t)v203;
    sub_1000C1F94((uint64_t)v203);
    sub_1000E41B0();
    v163(v170, v150);
    uint64_t v225 = v168;
    uint64_t v226 = v166;
    uint64_t v171 = swift_getOpaqueTypeConformance2();
    uint64_t v172 = v185;
    uint64_t v173 = v196;
    sub_1000E4A30();
    v163(v165, v150);
    (*(void (**)(char *, uint64_t))(v187 + 8))(v167, v173);
    uint64_t v174 = v189;
    uint64_t v175 = v188;
    v176 = v172;
    uint64_t v177 = v197;
    (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v188, v176, v197);
    (*(void (**)(uint64_t, char *, uint64_t))(v174 + 16))(v195, v175, v177);
    swift_storeEnumTagMultiPayload();
    uint64_t v225 = v173;
    uint64_t v226 = v171;
    swift_getOpaqueTypeConformance2();
    uint64_t v86 = (uint64_t)v194;
    sub_1000E4690();
    (*(void (**)(char *, uint64_t))(v174 + 8))(v175, v177);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005807C()
{
  return sub_1000E43C0();
}

uint64_t sub_1000580A0()
{
  return sub_1000E43C0();
}

uint64_t sub_1000580C4(uint64_t a1)
{
  uint64_t v2 = sub_1000082B4(&qword_10012C540);
  __chkstk_darwin(v2 - 8);
  sub_100014754(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10012C540);
  return sub_1000E43D0();
}

unint64_t sub_10005815C()
{
  unint64_t result = qword_10012C518;
  if (!qword_10012C518)
  {
    sub_100008354(&qword_10012C4F8);
    sub_100008354(&qword_10012C500);
    sub_100008354(&qword_10012A600);
    sub_100014AC4(&qword_10012C520, &qword_10012C500);
    sub_100014AC4(&qword_10012C528, &qword_10012A600);
    swift_getOpaqueTypeConformance2();
    type metadata accessor for SportsWidgetSoccerClockView(255);
    sub_1000583EC(&qword_10012C530, (void (*)(uint64_t))type metadata accessor for SportsWidgetSoccerClockView);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C518);
  }
  return result;
}

unint64_t sub_1000582DC()
{
  unint64_t result = qword_10012C538;
  if (!qword_10012C538)
  {
    sub_100008354(&qword_10012C4D8);
    sub_1000583EC(&qword_10012C510, (void (*)(uint64_t))type metadata accessor for SportsWidgetBaseballClockView);
    sub_100008354(&qword_10012C4C0);
    type metadata accessor for SportsWidgetBaseballClockView();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C538);
  }
  return result;
}

uint64_t sub_1000583EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100058434(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005849C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100058504(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100058568()
{
  unint64_t result = qword_10012C548;
  if (!qword_10012C548)
  {
    sub_100008354(&qword_10012C550);
    sub_10005815C();
    sub_1000582DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C548);
  }
  return result;
}

char *sub_1000585E4(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    sub_1000082B4(&qword_10012B9A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000E41F0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_1000082B4(&qword_10012C540);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    uint64_t v17 = &a1[v15];
    uint64_t v18 = &a2[v15];
    char *v17 = *v18;
    uint64_t v19 = *((void *)v18 + 2);
    *((void *)v17 + 1) = *((void *)v18 + 1);
    *((void *)v17 + 2) = v19;
    *((void *)v17 + 3) = *((void *)v18 + 3);
    v17[32] = v18[32];
    uint64_t v20 = *((void *)v18 + 6);
    *((void *)v17 + 5) = *((void *)v18 + 5);
    *((void *)v17 + 6) = v20;
    *((void *)v17 + 7) = *((void *)v18 + 7);
    v17[64] = v18[64];
    *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
    *((void *)v17 + 11) = *((void *)v18 + 11);
    uint64_t v21 = &a1[v16];
    uint64_t v22 = &a2[v16];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v24;
    uint64_t v25 = *((void *)v22 + 5);
    *((void *)v21 + 4) = *((void *)v22 + 4);
    *((void *)v21 + 5) = v25;
    v21[48] = v22[48];
    uint64_t v26 = a3[8];
    uint64_t v30 = &a1[v26];
    uint64_t v31 = &a2[v26];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1000082B4(&qword_10012B9B8);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    v28(v30, v31, v27);
    v28(&a1[a3[9]], &a2[a3[9]], v27);
  }
  return a1;
}

uint64_t sub_100058974(uint64_t a1, int *a2)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_1000082B4(&qword_10012B9A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E41F0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v12)((void *)(v9 - 8), v8, v9);
  uint64_t v10 = a1 + a2[9];

  return v12(v10, v9);
}

char *sub_100058B98(char *a1, char *a2, int *a3)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E41D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  sub_1000082B4(&qword_10012B9A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000E41F0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_1000082B4(&qword_10012C540);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  char *v15 = *v16;
  uint64_t v17 = *((void *)v16 + 2);
  *((void *)v15 + 1) = *((void *)v16 + 1);
  *((void *)v15 + 2) = v17;
  *((void *)v15 + 3) = *((void *)v16 + 3);
  v15[32] = v16[32];
  uint64_t v18 = *((void *)v16 + 6);
  *((void *)v15 + 5) = *((void *)v16 + 5);
  *((void *)v15 + 6) = v18;
  *((void *)v15 + 7) = *((void *)v16 + 7);
  v15[64] = v16[64];
  *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
  *((void *)v15 + 11) = *((void *)v16 + 11);
  uint64_t v19 = &a1[v14];
  uint64_t v20 = &a2[v14];
  uint64_t v21 = a3;
  uint64_t v22 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v22;
  uint64_t v23 = *((void *)v20 + 3);
  *((void *)v19 + 2) = *((void *)v20 + 2);
  *((void *)v19 + 3) = v23;
  uint64_t v24 = *((void *)v20 + 5);
  *((void *)v19 + 4) = *((void *)v20 + 4);
  *((void *)v19 + 5) = v24;
  v19[48] = v20[48];
  uint64_t v25 = v21[8];
  uint64_t v29 = &a1[v25];
  uint64_t v30 = &a2[v25];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  v27(v29, v30, v26);
  v27(&a1[v21[9]], &a2[v21[9]], v26);
  return a1;
}

char *sub_100058EDC(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E41D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    sub_1000147B8((uint64_t)&a1[v7], &qword_10012B9A0);
    sub_1000082B4(&qword_10012B9A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000E41F0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_1000082B4(&qword_10012C540);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  char *v14 = a2[v13];
  *((void *)v14 + 1) = *(void *)&a2[v13 + 8];
  swift_retain();
  swift_release();
  *((void *)v14 + 2) = *((void *)v15 + 2);
  *((void *)v14 + 3) = *((void *)v15 + 3);
  swift_retain();
  swift_release();
  v14[32] = v15[32];
  *((void *)v14 + 5) = *((void *)v15 + 5);
  swift_retain();
  swift_release();
  *((void *)v14 + 6) = *((void *)v15 + 6);
  *((void *)v14 + 7) = *((void *)v15 + 7);
  swift_retain();
  swift_release();
  v14[64] = v15[64];
  *((void *)v14 + 9) = *((void *)v15 + 9);
  *((void *)v14 + 10) = *((void *)v15 + 10);
  *((void *)v14 + 11) = *((void *)v15 + 11);
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = *((void *)v18 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *((void *)v17 + 5) = *((void *)v18 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17[48] = v18[48];
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24);
  v23(v20, v21, v22);
  v23(&a1[a3[9]], &a2[a3[9]], v22);
  return a1;
}

char *sub_1000592AC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E41D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000082B4(&qword_10012B9A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1000E41F0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      uint64_t v14 = sub_1000082B4(&qword_10012C540);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  long long v19 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v19;
  long long v20 = *((_OWORD *)v18 + 5);
  *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
  *((_OWORD *)v17 + 5) = v20;
  long long v21 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v21;
  uint64_t v22 = &a1[v16];
  uint64_t v23 = &a2[v16];
  long long v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  v22[48] = v23[48];
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
  v29(v26, v27, v28);
  v29(&a1[a3[9]], &a2[a3[9]], v28);
  return a1;
}

char *sub_100059578(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    uint64_t v6 = sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_1000147B8((uint64_t)&a1[v8], &qword_10012B9A0);
    uint64_t v11 = sub_1000082B4(&qword_10012B9A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1000E41F0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = sub_1000082B4(&qword_10012C540);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  char *v16 = a2[v15];
  *((void *)v16 + 1) = *(void *)&a2[v15 + 8];
  swift_release();
  uint64_t v18 = *((void *)v17 + 3);
  *((void *)v16 + 2) = *((void *)v17 + 2);
  *((void *)v16 + 3) = v18;
  swift_release();
  v16[32] = v17[32];
  *((void *)v16 + 5) = *((void *)v17 + 5);
  swift_release();
  uint64_t v19 = *((void *)v17 + 7);
  *((void *)v16 + 6) = *((void *)v17 + 6);
  *((void *)v16 + 7) = v19;
  swift_release();
  v16[64] = v17[64];
  *(_OWORD *)(v16 + 72) = *(_OWORD *)(v17 + 72);
  *((void *)v16 + 11) = *((void *)v17 + 11);
  uint64_t v20 = a3[7];
  long long v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  swift_bridgeObjectRelease();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v22 + 3);
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *((void *)v21 + 3) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)v22 + 5);
  *((void *)v21 + 4) = *((void *)v22 + 4);
  *((void *)v21 + 5) = v24;
  swift_bridgeObjectRelease();
  v21[48] = v22[48];
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_1000082B4(&qword_10012B9B8);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  v29(&a1[a3[9]], &a2[a3[9]], v28);
  return a1;
}

uint64_t sub_1000598F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100059904);
}

uint64_t sub_100059904(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1000082B4(&qword_10012C558);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_1000082B4(&qword_10012B9B8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_100059A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100059AA8);
}

uint64_t sub_100059AA8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000082B4(&qword_100129F40);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_1000082B4(&qword_10012C558);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_1000082B4(&qword_10012B9B8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for SportsWidgetBaseballClockView()
{
  uint64_t result = qword_10012C5B8;
  if (!qword_10012C5B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100059C84()
{
  sub_10000C634();
  if (v0 <= 0x3F)
  {
    sub_100059D9C();
    if (v1 <= 0x3F)
    {
      sub_100045390();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100059D9C()
{
  if (!qword_10012C5C8)
  {
    sub_100008354(&qword_10012C540);
    unint64_t v0 = sub_1000E3FF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10012C5C8);
    }
  }
}

uint64_t sub_100059DF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100059E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v149 = sub_1000082B4(&qword_10012C620);
  __chkstk_darwin(v149);
  uint64_t v150 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1000082B4(&qword_10012A120);
  uint64_t v152 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v151 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012C628);
  __chkstk_darwin(v5 - 8);
  int v138 = (uint64_t *)((char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v142 = sub_1000082B4(&qword_10012C630);
  uint64_t v7 = __chkstk_darwin(v142);
  uint64_t v136 = (uint64_t)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v137 = (char *)&v128 - v9;
  uint64_t v143 = sub_1000082B4(&qword_10012C638);
  __chkstk_darwin(v143);
  uint64_t v145 = (uint64_t)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1000082B4(&qword_10012C640);
  __chkstk_darwin(v140);
  uint64_t v141 = (uint64_t)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_1000082B4(&qword_10012C648);
  __chkstk_darwin(v144);
  uint64_t v13 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000E41D0();
  uint64_t v139 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000082B4(&qword_10012C650);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (uint64_t *)((char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1000082B4(&qword_10012C658);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v128 - v24;
  uint64_t v148 = sub_1000082B4(&qword_10012C660);
  __chkstk_darwin(v148);
  uint64_t v27 = (char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for SportsWidgetBaseballClockView();
  uint64_t v29 = v28;
  uint64_t v30 = a1 + *(int *)(v28 + 28);
  if (*(unsigned char *)(v30 + 48) != 1)
  {
    uint64_t v62 = *(void *)(v30 + 24);
    uint64_t v153 = *(void *)(v30 + 16);
    uint64_t v154 = v62;
    sub_100014158();
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1000E4A00();
    uint64_t v65 = v64;
    char v67 = v66 & 1;
    uint64_t v145 = a1 + *(int *)(v29 + 24);
    uint64_t v68 = sub_1000E4940();
    uint64_t v70 = v69;
    char v72 = v71 & 1;
    sub_1000141AC(v63, v65, v67);
    swift_bridgeObjectRelease();
    uint64_t v73 = sub_1000E4950();
    uint64_t v75 = v74;
    LOBYTE(v65) = v76 & 1;
    sub_1000141AC(v68, v70, v72);
    swift_bridgeObjectRelease();
    uint64_t v77 = v145;
    uint64_t v78 = sub_1000E4970();
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    char v84 = v83 & 1;
    sub_1000141AC(v73, v75, v65);
    swift_bridgeObjectRelease();
    uint64_t v85 = *(void *)(v77 + 48);
    uint64_t v86 = v77;
    uint64_t KeyPath = swift_getKeyPath();
    LOBYTE(v65) = *(unsigned char *)(v86 + 64);
    uint64_t v88 = swift_getKeyPath();
    uint64_t v153 = v78;
    uint64_t v154 = v80;
    char v155 = v84;
    uint64_t v156 = v82;
    uint64_t v157 = KeyPath;
    uint64_t v158 = v85;
    char v159 = 0;
    uint64_t v160 = v88;
    char v161 = v65;
    uint64_t v89 = sub_1000082B4(&qword_10012A138);
    uint64_t v90 = sub_10005D7C0((unint64_t *)&qword_10012A140, &qword_10012A138, &qword_10012A168, &qword_10012A170);
    uint64_t v91 = v151;
    sub_1000E4A20();
    sub_1000141AC(v78, v80, v84);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v92 = v152;
    uint64_t v93 = v146;
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v150, v91, v146);
    swift_storeEnumTagMultiPayload();
    sub_10005D504();
    uint64_t v153 = v89;
    uint64_t v154 = v90;
    swift_getOpaqueTypeConformance2();
    sub_1000E4690();
    return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v91, v93);
  }
  uint64_t v128 = v23;
  uint64_t v135 = v19;
  uint64_t v129 = v25;
  uint64_t v130 = v16;
  uint64_t v131 = v14;
  uint64_t v132 = v20;
  uint64_t v31 = v151;
  uint64_t v32 = v152;
  uint64_t v133 = v13;
  uint64_t v134 = v27;
  if (*(unsigned __int8 *)(a1 + *(int *)(v28 + 24)) - 1 >= 2)
  {
    if (*(unsigned char *)(a1 + *(int *)(v28 + 24)))
    {
      sub_10005BAD8();
      uint64_t v122 = v32;
      uint64_t v123 = v146;
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v145, v31, v146);
      swift_storeEnumTagMultiPayload();
      sub_10005D52C();
      uint64_t v124 = sub_100008354(&qword_10012A138);
      uint64_t v125 = sub_10005D7C0((unint64_t *)&qword_10012A140, &qword_10012A138, &qword_10012A168, &qword_10012A170);
      uint64_t v153 = v124;
      uint64_t v154 = v125;
      swift_getOpaqueTypeConformance2();
      uint64_t v61 = (uint64_t)v134;
      sub_1000E4690();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v31, v123);
      uint64_t v121 = (uint64_t)v150;
      goto LABEL_17;
    }
    uint64_t v95 = sub_1000E4510();
    uint64_t v96 = v138;
    *int v138 = v95;
    v96[1] = 0;
    *((unsigned char *)v96 + 16) = 1;
    uint64_t v97 = sub_1000082B4(&qword_10012C698);
    sub_10005AD14(a1, (uint64_t)v96 + *(int *)(v97 + 44));
    unsigned __int8 v98 = sub_1000E4760();
    char v99 = sub_1000E4770();
    char v100 = sub_1000E4790();
    sub_1000E4790();
    if (sub_1000E4790() != v98) {
      char v100 = sub_1000E4790();
    }
    sub_1000E4790();
    char v101 = sub_1000E4790();
    uint64_t v102 = v145;
    uint64_t v103 = (uint64_t)v133;
    uint64_t v104 = v142;
    uint64_t v105 = (uint64_t)v137;
    uint64_t v106 = v131;
    if (v101 != v99) {
      char v100 = sub_1000E4790();
    }
    uint64_t v107 = (uint64_t)v130;
    sub_1000C1F94((uint64_t)v130);
    sub_100018668(v107);
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v107, v106);
    sub_1000E3FB0();
    uint64_t v109 = v108;
    uint64_t v111 = v110;
    uint64_t v113 = v112;
    uint64_t v115 = v114;
    id v116 = v138;
    uint64_t v117 = v136;
    sub_100014754((uint64_t)v138, v136, &qword_10012C628);
    uint64_t v118 = v117 + *(int *)(v104 + 36);
    *(unsigned char *)uint64_t v118 = v100;
    *(void *)(v118 + 8) = v109;
    *(void *)(v118 + 16) = v111;
    *(void *)(v118 + 24) = v113;
    *(void *)(v118 + 32) = v115;
    *(unsigned char *)(v118 + 40) = 0;
    sub_1000147B8((uint64_t)v116, &qword_10012C628);
    sub_100014B08(v117, v105, &qword_10012C630);
    sub_100014754(v105, v141, &qword_10012C630);
    swift_storeEnumTagMultiPayload();
    sub_10005D5A8();
    sub_10005D648();
    sub_1000E4690();
    sub_100014754(v103, v102, &qword_10012C648);
    swift_storeEnumTagMultiPayload();
    sub_10005D52C();
    uint64_t v119 = sub_100008354(&qword_10012A138);
    uint64_t v120 = sub_10005D7C0((unint64_t *)&qword_10012A140, &qword_10012A138, &qword_10012A168, &qword_10012A170);
    uint64_t v153 = v119;
    uint64_t v154 = v120;
    swift_getOpaqueTypeConformance2();
    uint64_t v61 = (uint64_t)v134;
    sub_1000E4690();
    sub_1000147B8(v103, &qword_10012C648);
    sub_1000147B8(v105, &qword_10012C630);
  }
  else
  {
    sub_1000082B4(&qword_10012B9B8);
    sub_1000E4040();
    uint64_t v33 = v153;
    uint64_t v34 = sub_1000E45C0();
    uint64_t v35 = v135;
    *uint64_t v135 = v34;
    v35[1] = v33;
    *((unsigned char *)v35 + 16) = 0;
    uint64_t v36 = sub_1000082B4(&qword_10012C6A0);
    sub_10005C01C(a1, (uint64_t)v35 + *(int *)(v36 + 44));
    unsigned __int8 v37 = sub_1000E4760();
    char v38 = sub_1000E4770();
    char v39 = sub_1000E4790();
    sub_1000E4790();
    if (sub_1000E4790() != v37) {
      char v39 = sub_1000E4790();
    }
    sub_1000E4790();
    char v40 = sub_1000E4790();
    uint64_t v41 = v141;
    uint64_t v42 = v132;
    uint64_t v43 = v131;
    uint64_t v44 = v139;
    if (v40 != v38) {
      char v39 = sub_1000E4790();
    }
    uint64_t v45 = (uint64_t)v130;
    sub_1000C1F94((uint64_t)v130);
    sub_100018668(v45);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v43);
    sub_1000E3FB0();
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v54 = v135;
    uint64_t v55 = (uint64_t)v128;
    sub_100014754((uint64_t)v135, (uint64_t)v128, &qword_10012C650);
    uint64_t v56 = v55 + *(int *)(v42 + 36);
    *(unsigned char *)uint64_t v56 = v39;
    *(void *)(v56 + 8) = v47;
    *(void *)(v56 + 16) = v49;
    *(void *)(v56 + 24) = v51;
    *(void *)(v56 + 32) = v53;
    *(unsigned char *)(v56 + 40) = 0;
    sub_1000147B8((uint64_t)v54, &qword_10012C650);
    uint64_t v57 = (uint64_t)v129;
    sub_100014B08(v55, (uint64_t)v129, &qword_10012C658);
    sub_100014754(v57, v41, &qword_10012C658);
    swift_storeEnumTagMultiPayload();
    sub_10005D5A8();
    sub_10005D648();
    uint64_t v58 = (uint64_t)v133;
    sub_1000E4690();
    sub_100014754(v58, v145, &qword_10012C648);
    swift_storeEnumTagMultiPayload();
    sub_10005D52C();
    uint64_t v59 = sub_100008354(&qword_10012A138);
    uint64_t v60 = sub_10005D7C0((unint64_t *)&qword_10012A140, &qword_10012A138, &qword_10012A168, &qword_10012A170);
    uint64_t v153 = v59;
    uint64_t v154 = v60;
    swift_getOpaqueTypeConformance2();
    uint64_t v61 = (uint64_t)v134;
    sub_1000E4690();
    sub_1000147B8(v58, &qword_10012C648);
    sub_1000147B8(v57, &qword_10012C658);
  }
  uint64_t v121 = (uint64_t)v150;
LABEL_17:
  sub_100014754(v61, v121, &qword_10012C660);
  swift_storeEnumTagMultiPayload();
  sub_10005D504();
  uint64_t v126 = sub_100008354(&qword_10012A138);
  uint64_t v127 = sub_10005D7C0((unint64_t *)&qword_10012A140, &qword_10012A138, &qword_10012A168, &qword_10012A170);
  uint64_t v153 = v126;
  uint64_t v154 = v127;
  swift_getOpaqueTypeConformance2();
  sub_1000E4690();
  return sub_1000147B8(v61, &qword_10012C660);
}

uint64_t sub_10005AD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v117 = a2;
  uint64_t v114 = sub_1000082B4(&qword_10012C6C8);
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v121 = (uint64_t)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000082B4(&qword_10012C778);
  uint64_t v4 = __chkstk_darwin(v112);
  uint64_t v116 = (uint64_t)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v111 = (char *)&v80 - v7;
  __chkstk_darwin(v6);
  uint64_t v115 = (uint64_t)&v80 - v8;
  uint64_t v9 = type metadata accessor for SportsWidgetBaseballClockView();
  uint64_t v101 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v102 = v10;
  uint64_t v103 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000082B4(&qword_10012C540);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v108 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v80 - v14;
  uint64_t v119 = sub_1000E41F0();
  uint64_t v122 = *(void *)(v119 - 8);
  uint64_t v16 = __chkstk_darwin(v119);
  uint64_t v107 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v80 - v18;
  uint64_t v118 = sub_1000E41D0();
  uint64_t v106 = *(void *)(v118 - 8);
  uint64_t v20 = __chkstk_darwin(v118);
  uint64_t v105 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v100 = (uint64_t)&v80 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v80 - v24;
  uint64_t v94 = sub_1000082B4(&qword_10012A120);
  uint64_t v26 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000082B4(&qword_10012C780);
  uint64_t v29 = __chkstk_darwin(v93);
  uint64_t v109 = (uint64_t)&v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v80 - v32;
  __chkstk_darwin(v31);
  uint64_t v120 = (uint64_t)&v80 - v34;
  sub_10005BAD8();
  uint64_t v35 = (void *)(a1 + *(int *)(v9 + 28));
  uint64_t v96 = v35[2];
  uint64_t v95 = (void (*)(uint64_t, uint64_t))v35[3];
  uint64_t v36 = v35[5];
  uint64_t v92 = v35[4];
  sub_1000C1F94((uint64_t)v25);
  uint64_t v104 = v9;
  uint64_t v37 = *(int *)(v9 + 20);
  uint64_t v110 = a1;
  uint64_t v99 = a1 + v37;
  sub_1000C21AC((uint64_t)v15);
  uint64_t v38 = v119;
  char v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
  uint64_t v98 = v122 + 48;
  uint64_t v97 = v39;
  if (v39((uint64_t)v15, 1, v119) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v122 + 104))(v19, enum case for LegibilityWeight.regular(_:), v38);
    sub_1000147B8((uint64_t)v15, &qword_10012C540);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v19, v15, v38);
  }
  sub_100018E2C(v96, (uint64_t)v95, v92, v36, v25, (uint64_t)v19);
  char v40 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
  uint64_t v96 = v122 + 8;
  uint64_t v95 = v40;
  v40((uint64_t)v19, v38);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v106 + 8);
  uint64_t v42 = v118;
  v41(v25, v118);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v43 = v94;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v33, v28, v94);
  uint64_t v44 = &v33[*(int *)(v93 + 36)];
  long long v45 = v124;
  *(_OWORD *)uint64_t v44 = v123;
  *((_OWORD *)v44 + 1) = v45;
  *((_OWORD *)v44 + 2) = v125;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v43);
  sub_100014B08((uint64_t)v33, v120, &qword_10012C780);
  uint64_t v46 = v100;
  uint64_t v47 = v110;
  sub_1000C1F94(v100);
  sub_100018A6C(v46);
  v41((char *)v46, v42);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v94 = v126;
  LODWORD(v93) = v127;
  uint64_t v92 = v128;
  int v91 = v129;
  uint64_t v90 = v130;
  uint64_t v89 = v131;
  uint64_t v88 = sub_1000E4F50();
  uint64_t v87 = v48;
  uint64_t v49 = v103;
  sub_10005D6E8(v47, v103);
  unint64_t v50 = (*(unsigned __int8 *)(v101 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  uint64_t v106 = swift_allocObject();
  sub_10005D750(v49, v106 + v50);
  sub_1000082B4(&qword_10012B9B8);
  sub_1000E4040();
  sub_1000E4040();
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v104 = v132;
  LODWORD(v103) = v133;
  uint64_t v102 = v134;
  LODWORD(v101) = v135;
  uint64_t v86 = v136;
  uint64_t v85 = v137;
  sub_1000C1F94(v46);
  sub_100018A6C(v46);
  v41((char *)v46, v42);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v100 = v138;
  int v84 = v139;
  uint64_t v83 = v140;
  int v82 = v141;
  uint64_t v81 = v142;
  uint64_t v80 = v143;
  sub_10005BD00(v121);
  uint64_t v51 = v35[2];
  uint64_t v52 = v35[3];
  uint64_t v53 = v35[4];
  uint64_t v54 = v35[5];
  uint64_t v55 = v105;
  sub_1000C1F94((uint64_t)v105);
  uint64_t v56 = v108;
  sub_1000C21AC(v108);
  uint64_t v57 = v119;
  if (v97(v56, 1, v119) == 1)
  {
    uint64_t v58 = (uint64_t)v107;
    (*(void (**)(char *, void, uint64_t))(v122 + 104))(v107, enum case for LegibilityWeight.regular(_:), v57);
    sub_1000147B8(v56, &qword_10012C540);
  }
  else
  {
    uint64_t v58 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 32))(v107, v56, v57);
  }
  sub_100018E2C(v51, v52, v53, v54, v55, v58);
  v95(v58, v57);
  v41(v55, v118);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v59 = v113;
  uint64_t v60 = (uint64_t)v111;
  uint64_t v61 = v121;
  uint64_t v62 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v111, v121, v114);
  uint64_t v63 = (_OWORD *)(v60 + *(int *)(v112 + 36));
  long long v64 = v145;
  _OWORD *v63 = v144;
  v63[1] = v64;
  void v63[2] = v146;
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v61, v62);
  uint64_t v65 = v115;
  sub_100014B08(v60, v115, &qword_10012C778);
  uint64_t v66 = v120;
  uint64_t v67 = v109;
  sub_100014754(v120, v109, &qword_10012C780);
  uint64_t v68 = v116;
  sub_100014754(v65, v116, &qword_10012C778);
  uint64_t v69 = v117;
  sub_100014754(v67, v117, &qword_10012C780);
  uint64_t v70 = (int *)sub_1000082B4(&qword_10012C788);
  uint64_t v71 = v69 + v70[12];
  *(void *)uint64_t v71 = 0;
  *(unsigned char *)(v71 + 8) = 1;
  *(void *)(v71 + 16) = v94;
  *(unsigned char *)(v71 + 24) = v93;
  *(void *)(v71 + 32) = v92;
  *(unsigned char *)(v71 + 40) = v91;
  uint64_t v72 = v89;
  *(void *)(v71 + 48) = v90;
  *(void *)(v71 + 56) = v72;
  uint64_t v73 = v69 + v70[16];
  uint64_t v74 = v87;
  *(void *)uint64_t v73 = v88;
  *(void *)(v73 + 8) = v74;
  uint64_t v75 = v106;
  *(void *)(v73 + 16) = sub_10005D7B4;
  *(void *)(v73 + 24) = v75;
  *(void *)(v73 + 32) = v104;
  *(unsigned char *)(v73 + 40) = v103;
  *(void *)(v73 + 48) = v102;
  *(unsigned char *)(v73 + 56) = v101;
  uint64_t v76 = v85;
  *(void *)(v73 + 64) = v86;
  *(void *)(v73 + 72) = v76;
  uint64_t v77 = v69 + v70[20];
  *(void *)uint64_t v77 = 0;
  *(unsigned char *)(v77 + 8) = 1;
  *(void *)(v77 + 16) = v100;
  *(unsigned char *)(v77 + 24) = v84;
  *(void *)(v77 + 32) = v83;
  *(unsigned char *)(v77 + 40) = v82;
  uint64_t v78 = v80;
  *(void *)(v77 + 48) = v81;
  *(void *)(v77 + 56) = v78;
  sub_100014754(v68, v69 + v70[24], &qword_10012C778);
  swift_retain();
  sub_1000147B8(v65, &qword_10012C778);
  sub_1000147B8(v66, &qword_10012C780);
  sub_1000147B8(v68, &qword_10012C778);
  swift_release();
  return sub_1000147B8(v67, &qword_10012C780);
}

uint64_t sub_10005BAD8()
{
  type metadata accessor for SportsWidgetBaseballClockView();
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1000E4A00();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  uint64_t v5 = sub_1000E4940();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_1000141AC(v0, v2, v4);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1000E4950();
  uint64_t v12 = v11;
  LOBYTE(v0) = v13 & 1;
  sub_1000141AC(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1000E4970();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_1000141AC(v10, v12, v0);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000082B4(&qword_10012A138);
  sub_10005D7C0((unint64_t *)&qword_10012A140, &qword_10012A138, &qword_10012A168, &qword_10012A170);
  sub_1000E4A20();
  sub_1000141AC(v14, v16, v18);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005BD00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = sub_1000082B4(&qword_10012C6F8);
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v33 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = sub_1000082B4(&qword_10012C700);
  __chkstk_darwin(v35);
  uint64_t v34 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for SportsWidgetBaseballClockView();
  uint64_t v6 = v1 + *(int *)(v5 + 28);
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v39 = *(void *)(v6 + 32);
  uint64_t v40 = v7;
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1000E4A00();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v13 = v1 + *(int *)(v5 + 24);
  uint64_t v14 = sub_1000E4940();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  LOBYTE(v5) = v19 & 1;
  int v32 = v19 & 1;
  sub_1000141AC(v8, v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v13 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = *(void *)(v13 + 24);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v39 = v14;
  uint64_t v40 = v16;
  char v41 = v5;
  uint64_t v42 = v18;
  uint64_t v43 = KeyPath;
  uint64_t v44 = v20;
  char v45 = 0;
  uint64_t v46 = v23;
  uint64_t v47 = v22;
  swift_retain();
  sub_1000082B4(&qword_10012C708);
  sub_10005D7C0(&qword_10012C710, &qword_10012C708, &qword_10012C718, &qword_10012C720);
  uint64_t v24 = v33;
  sub_1000E4B20();
  sub_1000141AC(v14, v16, v32);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v20) = *(unsigned char *)(v13 + 32);
  uint64_t v25 = swift_getKeyPath();
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  uint64_t v28 = (uint64_t)v34;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v36 + 16))(v34, v24, v37);
  uint64_t v29 = v28 + *(int *)(v35 + 36);
  *(void *)uint64_t v29 = v25;
  *(unsigned char *)(v29 + 8) = v20;
  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v24, v26);
  sub_10005D864();
  sub_1000E4A20();
  return sub_1000147B8(v28, &qword_10012C700);
}

uint64_t sub_10005C01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012C6A8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v33 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for SportsWidgetBaseballClockView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  char v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000E4F50();
  uint64_t v31 = v14;
  uint64_t v32 = v13;
  sub_10005D6E8(a1, (uint64_t)v12);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  sub_10005D750((uint64_t)v12, v16 + v15);
  sub_1000082B4(&qword_10012B9B8);
  sub_1000E4040();
  sub_1000E4040();
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v17 = v35;
  char v18 = v36;
  uint64_t v19 = v37;
  int v30 = v38;
  uint64_t v28 = v40;
  uint64_t v29 = v39;
  sub_1000E4040();
  uint64_t v20 = v34;
  *(void *)uint64_t v8 = sub_1000E4510();
  *((void *)v8 + 1) = v20;
  v8[16] = 0;
  uint64_t v21 = sub_1000082B4(&qword_10012C6B0);
  sub_10005C2E8(a1, &v8[*(int *)(v21 + 44)]);
  uint64_t v22 = v33;
  sub_100014754((uint64_t)v8, v33, &qword_10012C6A8);
  uint64_t v23 = v31;
  *(void *)a2 = v32;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = sub_10005D7B4;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v19;
  *(unsigned char *)(a2 + 56) = v30;
  uint64_t v24 = v28;
  *(void *)(a2 + 64) = v29;
  *(void *)(a2 + 72) = v24;
  uint64_t v25 = sub_1000082B4(&qword_10012C6B8);
  sub_100014754(v22, a2 + *(int *)(v25 + 48), &qword_10012C6A8);
  swift_retain();
  sub_1000147B8((uint64_t)v8, &qword_10012C6A8);
  sub_1000147B8(v22, &qword_10012C6A8);
  return swift_release();
}

uint64_t sub_10005C2E8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012C6C0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000082B4(&qword_10012C6C8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v53 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v12 = (char *)&v48 - v11;
  uint64_t v56 = sub_1000082B4(&qword_10012C6D0);
  __chkstk_darwin(v56);
  uint64_t v57 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000082B4(&qword_10012C6D8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v48 - v18;
  uint64_t v59 = sub_1000082B4(&qword_10012A120);
  uint64_t v20 = *(void *)(v59 - 8);
  uint64_t v21 = __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v58 = (char *)&v48 - v23;
  sub_10005BAD8();
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for SportsWidgetBaseballClockView() + 24)) == 2)
  {
    swift_storeEnumTagMultiPayload();
    sub_100014AC4(&qword_10012C6E8, &qword_10012C6C0);
    sub_1000E4690();
  }
  else
  {
    sub_1000E4560();
    uint64_t v24 = sub_1000E49E0();
    uint64_t v51 = v17;
    uint64_t v52 = a2;
    uint64_t v25 = v24;
    uint64_t v50 = v4;
    uint64_t v27 = v26;
    uint64_t v54 = v19;
    uint64_t v29 = v28;
    char v31 = v30 & 1;
    sub_10005BD00((uint64_t)v12);
    uint64_t v32 = v8;
    uint64_t v33 = v12;
    uint64_t v49 = v12;
    uint64_t v55 = v8;
    uint64_t v34 = v7;
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    char v36 = v53;
    v35(v53, v33, v34);
    *(void *)uint64_t v6 = v25;
    *((void *)v6 + 1) = v27;
    v6[16] = v31;
    *((void *)v6 + 3) = v29;
    uint64_t v37 = sub_1000082B4(&qword_10012C6E0);
    v35(&v6[*(int *)(v37 + 48)], v36, v34);
    sub_10003A978(v25, v27, v31);
    swift_bridgeObjectRetain();
    sub_10003A978(v25, v27, v31);
    unsigned __int8 v38 = *(void (**)(char *, uint64_t))(v55 + 8);
    v55 += 8;
    swift_bridgeObjectRetain();
    v38(v36, v34);
    sub_1000141AC(v25, v27, v31);
    swift_bridgeObjectRelease();
    sub_100014754((uint64_t)v6, v57, &qword_10012C6C0);
    swift_storeEnumTagMultiPayload();
    sub_100014AC4(&qword_10012C6E8, &qword_10012C6C0);
    sub_1000E4690();
    sub_1000147B8((uint64_t)v6, &qword_10012C6C0);
    v38(v49, v34);
    uint64_t v39 = v25;
    char v40 = v31;
    uint64_t v17 = v51;
    a2 = v52;
    sub_1000141AC(v39, v27, v40);
    uint64_t v19 = v54;
    swift_bridgeObjectRelease();
  }
  char v41 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v42 = v59;
  uint64_t v43 = v60;
  uint64_t v44 = v58;
  v41(v60, v58, v59);
  sub_100014754((uint64_t)v19, (uint64_t)v17, &qword_10012C6D8);
  v41(a2, v43, v42);
  uint64_t v45 = sub_1000082B4(&qword_10012C6F0);
  sub_100014754((uint64_t)v17, (uint64_t)&a2[*(int *)(v45 + 48)], &qword_10012C6D8);
  sub_1000147B8((uint64_t)v19, &qword_10012C6D8);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v20 + 8);
  v46(v44, v42);
  sub_1000147B8((uint64_t)v17, &qword_10012C6D8);
  return ((uint64_t (*)(char *, uint64_t))v46)(v43, v42);
}

uint64_t sub_10005C89C@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v41 = sub_1000082B4(&qword_10012C730);
  uint64_t v45 = *(void *)(v41 - 8);
  uint64_t v3 = __chkstk_darwin(v41);
  char v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v44 = (char *)&v38 - v5;
  uint64_t v43 = sub_1000082B4(&qword_10012C738);
  uint64_t v39 = *(void *)(v43 - 8);
  uint64_t v6 = v39;
  uint64_t v7 = __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = a1 + *(int *)(type metadata accessor for SportsWidgetBaseballClockView() + 24);
  double v13 = *(double *)(v12 + 80);
  sub_1000E40F0();
  double v15 = v14 * 0.5 - v13;
  double v16 = *(double *)(v12 + 72) * v15;
  uint64_t v17 = sub_1000E4F50();
  uint64_t v19 = v18;
  sub_10005CD80(a1, (uint64_t)v50, v15, v16, v13);
  v48[12] = v50[12];
  v48[13] = v50[13];
  v48[14] = v50[14];
  v48[8] = v50[8];
  v48[9] = v50[9];
  v48[10] = v50[10];
  v48[11] = v50[11];
  v48[4] = v50[4];
  v48[5] = v50[5];
  v48[6] = v50[6];
  v48[7] = v50[7];
  v48[0] = v50[0];
  v48[1] = v50[1];
  v48[2] = v50[2];
  v48[3] = v50[3];
  uint64_t v46 = v17;
  uint64_t v47 = v19;
  sub_1000082B4(&qword_10012C740);
  sub_100014AC4(&qword_10012C748, &qword_10012C740);
  unsigned __int8 v38 = v11;
  sub_1000E4A20();
  sub_10005DA00((uint64_t)v50);
  sub_1000E40F0();
  double v21 = ceil(v20 / 5.0);
  uint64_t v22 = sub_1000E4510();
  sub_10005D064(a1, (uint64_t)v51);
  *(_OWORD *)&v52[167] = v51[10];
  *(_OWORD *)&v52[183] = v51[11];
  *(_OWORD *)&v52[199] = v51[12];
  *(_OWORD *)&v52[215] = v51[13];
  *(_OWORD *)&v52[103] = v51[6];
  *(_OWORD *)&v52[119] = v51[7];
  *(_OWORD *)&v52[135] = v51[8];
  *(_OWORD *)&v52[151] = v51[9];
  *(_OWORD *)&v52[39] = v51[2];
  *(_OWORD *)&v52[55] = v51[3];
  *(_OWORD *)&v52[71] = v51[4];
  *(_OWORD *)&v52[87] = v51[5];
  *(_OWORD *)&v52[7] = v51[0];
  char v53 = 0;
  *(_OWORD *)&v52[23] = v51[1];
  sub_1000E40F0();
  *(_OWORD *)((char *)&v48[11] + 1) = *(_OWORD *)&v52[176];
  *(_OWORD *)((char *)&v48[12] + 1) = *(_OWORD *)&v52[192];
  *(_OWORD *)((char *)&v48[13] + 1) = *(_OWORD *)&v52[208];
  *(_OWORD *)((char *)&v48[7] + 1) = *(_OWORD *)&v52[112];
  *(_OWORD *)((char *)&v48[8] + 1) = *(_OWORD *)&v52[128];
  *(_OWORD *)((char *)&v48[9] + 1) = *(_OWORD *)&v52[144];
  *(_OWORD *)((char *)&v48[10] + 1) = *(_OWORD *)&v52[160];
  *(_OWORD *)((char *)&v48[3] + 1) = *(_OWORD *)&v52[48];
  *(_OWORD *)((char *)&v48[4] + 1) = *(_OWORD *)&v52[64];
  *(_OWORD *)((char *)&v48[5] + 1) = *(_OWORD *)&v52[80];
  *(_OWORD *)((char *)&v48[6] + 1) = *(_OWORD *)&v52[96];
  *(_OWORD *)((char *)v48 + 1) = *(_OWORD *)v52;
  *(_OWORD *)((char *)&v48[1] + 1) = *(_OWORD *)&v52[16];
  uint64_t v46 = v22;
  uint64_t v47 = 0;
  LOBYTE(v48[0]) = 0;
  *(_OWORD *)((char *)&v48[2] + 1) = *(_OWORD *)&v52[32];
  v48[14] = *(unint64_t *)&v52[223];
  double v49 = v23 - v21;
  sub_1000082B4(&qword_10012C750);
  sub_10005D960();
  uint64_t v24 = v44;
  sub_1000E4A20();
  sub_10005DA00((uint64_t)v51);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v26 = v43;
  v25(v9, v11, v43);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v28 = v40;
  uint64_t v29 = v41;
  v27(v40, v24, v41);
  char v30 = v42;
  v25(v42, v9, v26);
  char v31 = &v30[*(int *)(sub_1000082B4(&qword_10012C770) + 48)];
  uint64_t v32 = v28;
  v27(v31, v28, v29);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v34 = v29;
  v33(v44, v29);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v36 = v43;
  v35(v38, v43);
  v33(v32, v34);
  return ((uint64_t (*)(char *, uint64_t))v35)(v9, v36);
}

uint64_t sub_10005CD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t result = type metadata accessor for SportsWidgetBaseballClockView();
  uint64_t v11 = *(void *)(a1 + *(int *)(result + 28));
  if (*(void *)(v11 + 16) < 2uLL)
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  int v12 = *(unsigned __int8 *)(v11 + 33);
  double v13 = self;
  double v14 = &selRef_labelColor;
  if (!v12) {
    double v14 = &selRef_tertiaryLabelColor;
  }
  id v15 = [v13 *v14];
  uint64_t v27 = sub_1000E4BD0();
  sub_1000E4F50();
  uint64_t result = sub_1000E40A0();
  if (*(void *)(v11 + 16) < 3uLL) {
    goto LABEL_12;
  }
  int v16 = *(unsigned __int8 *)(v11 + 34);
  uint64_t v17 = self;
  uint64_t v18 = &selRef_labelColor;
  if (!v16) {
    uint64_t v18 = &selRef_tertiaryLabelColor;
  }
  id v19 = [v17 *v18];
  uint64_t v20 = sub_1000E4BD0();
  sub_1000E4F50();
  uint64_t result = sub_1000E40A0();
  if (!*(void *)(v11 + 16)) {
    goto LABEL_13;
  }
  int v21 = *(unsigned __int8 *)(v11 + 32);
  uint64_t v22 = self;
  double v23 = &selRef_labelColor;
  if (!v21) {
    double v23 = &selRef_tertiaryLabelColor;
  }
  id v24 = [v22 *v23];
  uint64_t v25 = sub_1000E4BD0();
  double v26 = a4 * 0.5 + a5;
  sub_1000E4F50();
  uint64_t result = sub_1000E40A0();
  *(void *)a2 = v27;
  *(_WORD *)(a2 + 8) = 256;
  *(void *)(a2 + 16) = v28;
  *(unsigned char *)(a2 + 24) = v29;
  *(void *)(a2 + 32) = v30;
  *(unsigned char *)(a2 + 40) = v31;
  *(void *)(a2 + 48) = v32;
  *(void *)(a2 + 56) = v33;
  *(double *)(a2 + 64) = a3 * 0.5 + a5;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v20;
  *(_WORD *)(a2 + 88) = 256;
  *(void *)(a2 + 96) = v34;
  *(unsigned char *)(a2 + 104) = v35;
  *(void *)(a2 + 112) = v36;
  *(unsigned char *)(a2 + 120) = v37;
  *(void *)(a2 + 128) = v38;
  *(void *)(a2 + 136) = v39;
  *(void *)(a2 + 144) = 0;
  *(double *)(a2 + 152) = v26;
  *(void *)(a2 + 160) = v25;
  *(_WORD *)(a2 + 168) = 256;
  *(void *)(a2 + 176) = v40;
  *(unsigned char *)(a2 + 184) = v41;
  *(void *)(a2 + 192) = v42;
  *(unsigned char *)(a2 + 200) = v43;
  *(_OWORD *)(a2 + 208) = v44;
  *(double *)(a2 + 224) = a5 + a5 + a3;
  *(double *)(a2 + 232) = v26;
  return result;
}

uint64_t sub_10005D064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SportsWidgetBaseballClockView();
  uint64_t v5 = *(void *)(a1 + *(int *)(result + 28) + 8);
  if (!*(void *)(v5 + 16))
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  int v7 = *(unsigned __int8 *)(v5 + 32);
  uint64_t v8 = self;
  uint64_t v9 = &selRef_labelColor;
  if (!v7) {
    uint64_t v9 = &selRef_tertiaryLabelColor;
  }
  id v10 = [v8 *v9];
  uint64_t v11 = sub_1000E4BD0();
  sub_1000E4F50();
  uint64_t result = sub_1000E40A0();
  if (*(void *)(v5 + 16) < 2uLL) {
    goto LABEL_12;
  }
  uint64_t v12 = *(void *)(a1 + *(int *)(v6 + 24) + 88);
  int v13 = *(unsigned __int8 *)(v5 + 33);
  double v14 = self;
  id v15 = &selRef_labelColor;
  if (!v13) {
    id v15 = &selRef_tertiaryLabelColor;
  }
  id v16 = [v14 *v15];
  uint64_t v17 = sub_1000E4BD0();
  sub_1000E4F50();
  uint64_t result = sub_1000E40A0();
  if (*(void *)(v5 + 16) < 3uLL) {
    goto LABEL_13;
  }
  int v18 = *(unsigned __int8 *)(v5 + 34);
  id v19 = self;
  uint64_t v20 = &selRef_labelColor;
  if (!v18) {
    uint64_t v20 = &selRef_tertiaryLabelColor;
  }
  id v21 = [v19 *v20 v31 v35 v17 v37 v39 v40];
  uint64_t v22 = sub_1000E4BD0();
  sub_1000E4F50();
  uint64_t result = sub_1000E40A0();
  *(void *)a2 = v11;
  *(_WORD *)(a2 + 8) = 256;
  *(void *)(a2 + 16) = v29;
  *(unsigned char *)(a2 + 24) = v30;
  *(void *)(a2 + 32) = v23;
  *(unsigned char *)(a2 + 40) = v32;
  *(void *)(a2 + 48) = v33;
  *(void *)(a2 + 56) = v34;
  *(void *)(a2 + 64) = v12;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v25;
  *(_WORD *)(a2 + 88) = 256;
  *(void *)(a2 + 96) = v24;
  *(unsigned char *)(a2 + 104) = v36;
  *(void *)(a2 + 112) = v26;
  *(unsigned char *)(a2 + 120) = v38;
  *(void *)(a2 + 128) = v27;
  *(void *)(a2 + 136) = v28;
  *(void *)(a2 + 144) = v12;
  *(unsigned char *)(a2 + 152) = 0;
  *(void *)(a2 + 160) = v22;
  *(_WORD *)(a2 + 168) = 256;
  *(void *)(a2 + 176) = v41;
  *(unsigned char *)(a2 + 184) = v42;
  *(void *)(a2 + 192) = v43;
  *(unsigned char *)(a2 + 200) = v44;
  *(_OWORD *)(a2 + 208) = v45;
  return result;
}

uint64_t sub_10005D348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000E4320();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000082B4(&qword_10012C608);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100059E14(v2, (uint64_t)v10);
  sub_1000E4310();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = (uint64_t *)(a1 + *(int *)(sub_1000082B4(&qword_10012C610) + 36));
  uint64_t v13 = sub_1000082B4(&qword_10012C618);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v12 + *(int *)(v13 + 28), v7, v4);
  uint64_t *v12 = KeyPath;
  sub_100014754((uint64_t)v10, a1, &qword_10012C608);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_1000147B8((uint64_t)v10, &qword_10012C608);
}

uint64_t sub_10005D504()
{
  return sub_10005DE9C(&qword_10012C668, &qword_10012C660, (void (*)(void))sub_10005D52C);
}

unint64_t sub_10005D52C()
{
  unint64_t result = qword_10012C670;
  if (!qword_10012C670)
  {
    sub_100008354(&qword_10012C648);
    sub_10005D5A8();
    sub_10005D648();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C670);
  }
  return result;
}

unint64_t sub_10005D5A8()
{
  unint64_t result = qword_10012C678;
  if (!qword_10012C678)
  {
    sub_100008354(&qword_10012C658);
    sub_100014AC4(&qword_10012C680, &qword_10012C650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C678);
  }
  return result;
}

unint64_t sub_10005D648()
{
  unint64_t result = qword_10012C688;
  if (!qword_10012C688)
  {
    sub_100008354(&qword_10012C630);
    sub_100014AC4(&qword_10012C690, &qword_10012C628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C688);
  }
  return result;
}

uint64_t sub_10005D6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsWidgetBaseballClockView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005D750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsWidgetBaseballClockView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005D7C0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    sub_10001426C();
    sub_100014AC4(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005D864()
{
  unint64_t result = qword_10012C728;
  if (!qword_10012C728)
  {
    sub_100008354(&qword_10012C700);
    sub_100008354(&qword_10012C708);
    sub_10005D7C0(&qword_10012C710, &qword_10012C708, &qword_10012C718, &qword_10012C720);
    swift_getOpaqueTypeConformance2();
    sub_100014AC4(&qword_10012A168, &qword_10012A170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C728);
  }
  return result;
}

unint64_t sub_10005D960()
{
  unint64_t result = qword_10012C758;
  if (!qword_10012C758)
  {
    sub_100008354(&qword_10012C750);
    sub_100014AC4(&qword_10012C760, &qword_10012C768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C758);
  }
  return result;
}

uint64_t sub_10005DA00(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005DA50()
{
  uint64_t v1 = (int *)type metadata accessor for SportsWidgetBaseballClockView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_1000082B4(&qword_10012B9A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1000E41F0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v2 | 7;
  uint64_t v11 = v3 + v4;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5 + v1[8];
  uint64_t v13 = sub_1000082B4(&qword_10012B9B8);
  double v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  v14(v12, v13);
  v14(v5 + v1[9], v13);

  return _swift_deallocObject(v0, v11, v10);
}

uint64_t sub_10005DCE0@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SportsWidgetBaseballClockView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10005C89C(v4, a1);
}

unint64_t sub_10005DD64()
{
  unint64_t result = qword_10012C790;
  if (!qword_10012C790)
  {
    sub_100008354(&qword_10012C610);
    sub_10005DE04();
    sub_100014AC4(&qword_10012C7B0, &qword_10012C618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C790);
  }
  return result;
}

unint64_t sub_10005DE04()
{
  unint64_t result = qword_10012C798;
  if (!qword_10012C798)
  {
    sub_100008354(&qword_10012C608);
    sub_10005DE9C(&qword_10012C7A0, &qword_10012C7A8, (void (*)(void))sub_10005D504);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C798);
  }
  return result;
}

uint64_t sub_10005DE9C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    a3();
    sub_100008354(&qword_10012A138);
    sub_10005D7C0((unint64_t *)&qword_10012A140, &qword_10012A138, &qword_10012A168, &qword_10012A170);
    swift_getOpaqueTypeConformance2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005DF78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000082B4(&qword_100129F38);
  __chkstk_darwin(v2 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3E00();
  uint64_t v58 = *(void *)(v4 - 8);
  uint64_t v59 = v4;
  __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsWidgetClock(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = 0x203A416E6F43;
  unint64_t v74 = 0xE600000000000000;
  uint64_t v9 = *v0;
  uint64_t v10 = v0[1];
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v13 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v15 = v1[6];
  uint64_t v16 = v1[7];
  uint64_t v17 = v1[8];
  uint64_t v18 = v1[11];
  char v19 = *((unsigned char *)v1 + 96);
  uint64_t v20 = v1[13];
  char v21 = *((unsigned char *)v1 + 112);
  *(void *)uint64_t v61 = v9;
  *(void *)&v61[8] = v10;
  *(void *)&v61[16] = v11;
  uint64_t v62 = v12;
  uint64_t v63 = v13;
  uint64_t v64 = v14;
  uint64_t v65 = v15;
  uint64_t v66 = v16;
  uint64_t v67 = v17;
  long long v68 = *(_OWORD *)(v1 + 9);
  uint64_t v69 = v18;
  char v70 = v19;
  uint64_t v71 = v20;
  char v72 = v21;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v75._countAndFlagsBits = sub_1000E5A40();
  sub_1000E5A70(v75);
  swift_bridgeObjectRelease();
  v76._countAndFlagsBits = 8236;
  v76._object = (void *)0xE200000000000000;
  sub_1000E5A70(v76);
  v60._countAndFlagsBits = 0x203A426E6F43;
  v60._object = (void *)0xE600000000000000;
  uint64_t v22 = v1[16];
  uint64_t v23 = v1[17];
  uint64_t v24 = v1[18];
  uint64_t v25 = v1[19];
  uint64_t v26 = v1[20];
  uint64_t v27 = v1[21];
  uint64_t v28 = v1[22];
  uint64_t v29 = v1[23];
  uint64_t v30 = v1[26];
  char v31 = *((unsigned char *)v1 + 216);
  uint64_t v32 = v1[28];
  char v33 = *((unsigned char *)v1 + 232);
  *(void *)uint64_t v61 = v1[15];
  *(void *)&v61[8] = v22;
  *(void *)&v61[16] = v23;
  uint64_t v62 = v24;
  uint64_t v63 = v25;
  uint64_t v64 = v26;
  uint64_t v65 = v27;
  uint64_t v66 = v28;
  uint64_t v67 = v29;
  long long v68 = *((_OWORD *)v1 + 12);
  uint64_t v69 = v30;
  char v70 = v31;
  uint64_t v71 = v32;
  char v72 = v33;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v77._countAndFlagsBits = sub_1000E5A40();
  sub_1000E5A70(v77);
  swift_bridgeObjectRelease();
  v78._countAndFlagsBits = 8236;
  v78._object = (void *)0xE200000000000000;
  sub_1000E5A70(v78);
  sub_1000E5A70(v60);
  swift_bridgeObjectRelease();
  uint64_t v34 = type metadata accessor for SportsWidgetContentViewModel(0);
  uint64_t v35 = (int *)v34;
  if (*((unsigned char *)v1 + *(int *)(v34 + 36)) == 1)
  {
    sub_10005F644((uint64_t)v1 + *(int *)(v34 + 24), (uint64_t)v8, type metadata accessor for SportsWidgetClock);
    *(void *)uint64_t v61 = sub_1000E5A40();
    *(void *)&v61[8] = v36;
    v79._countAndFlagsBits = 8236;
    v79._object = (void *)0xE200000000000000;
    sub_1000E5A70(v79);
    sub_1000E5A70(*(Swift::String *)v61);
    swift_bridgeObjectRelease();
  }
  if (*((unsigned char *)v1 + v35[10]) == 1)
  {
    uint64_t v37 = (char *)v1 + v35[7];
    uint64_t v38 = *((void *)v37 + 3);
    *(void *)uint64_t v61 = *(void *)v37;
    *(_OWORD *)&v61[8] = *(_OWORD *)(v37 + 8);
    uint64_t v62 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)uint64_t v61 = sub_1000E5A40();
    *(void *)&v61[8] = v39;
    v80._countAndFlagsBits = 8236;
    v80._object = (void *)0xE200000000000000;
    sub_1000E5A70(v80);
    sub_1000E5A70(*(Swift::String *)v61);
    swift_bridgeObjectRelease();
  }
  *(void *)uint64_t v61 = 0;
  *(void *)&v61[8] = 0xE000000000000000;
  sub_1000E5CC0(17);
  swift_bridgeObjectRelease();
  strcpy(v61, "PbP enabled: ");
  *(_WORD *)&v61[14] = -4864;
  int v40 = *((unsigned __int8 *)v1 + v35[12]);
  if (*((unsigned char *)v1 + v35[12])) {
    v41._countAndFlagsBits = 1702195828;
  }
  else {
    v41._countAndFlagsBits = 0x65736C6166;
  }
  if (*((unsigned char *)v1 + v35[12])) {
    char v42 = (void *)0xE400000000000000;
  }
  else {
    char v42 = (void *)0xE500000000000000;
  }
  v41._object = v42;
  sub_1000E5A70(v41);
  swift_bridgeObjectRelease();
  v81._countAndFlagsBits = 8236;
  v81._object = (void *)0xE200000000000000;
  sub_1000E5A70(v81);
  sub_1000E5A70(*(Swift::String *)v61);
  swift_bridgeObjectRelease();
  uint64_t v43 = v58;
  if (v40 == 1)
  {
    char v44 = (char *)v1 + v35[8];
    uint64_t v46 = *(void *)v44;
    uint64_t v45 = *((void *)v44 + 1);
    char v47 = v44[16];
    uint64_t v48 = *((void *)v44 + 3);
    char v49 = v44[32];
    uint64_t v50 = *((void *)v44 + 5);
    LOBYTE(v44) = v44[48];
    *(void *)uint64_t v61 = v46;
    *(void *)&v61[8] = v45;
    v61[16] = v47;
    uint64_t v62 = v48;
    LOBYTE(v63) = v49;
    uint64_t v64 = v50;
    LOBYTE(v65) = (_BYTE)v44;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    *(void *)uint64_t v61 = sub_1000E5A40();
    *(void *)&v61[8] = v51;
    v82._countAndFlagsBits = 8236;
    v82._object = (void *)0xE200000000000000;
    sub_1000E5A70(v82);
    sub_1000E5A70(*(Swift::String *)v61);
    swift_bridgeObjectRelease();
  }
  uint64_t v52 = v57;
  sub_100014754((uint64_t)v1 + v35[13], v57, &qword_100129F38);
  uint64_t v53 = v59;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v52, 1, v59) == 1)
  {
    sub_1000147B8(v52, &qword_100129F38);
  }
  else
  {
    uint64_t v54 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v56, v52, v53);
    strcpy(v61, "Event url: ");
    *(_DWORD *)&v61[12] = -352321536;
    sub_10005F5D0(&qword_10012C7B8, (void (*)(uint64_t))&type metadata accessor for URL);
    v83._countAndFlagsBits = sub_1000E5DB0();
    sub_1000E5A70(v83);
    swift_bridgeObjectRelease();
    sub_1000E5A70(*(Swift::String *)v61);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v54, v53);
  }
  return v73;
}

uint64_t sub_10005E5F0()
{
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = v4;
  sub_10005F5A4((uint64_t)&v5);
  v6._countAndFlagsBits = 32;
  v6._object = (void *)0xE100000000000000;
  sub_1000E5A70(v6);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = sub_1000E5A40();
  sub_1000E5A70(v7);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 96)) {
    v1._countAndFlagsBits = 1702195828;
  }
  else {
    v1._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 96)) {
    uint64_t v2 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v2 = (void *)0xE500000000000000;
  }
  v1._object = v2;
  sub_1000E5A70(v1);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x203A656D6F48202CLL;
  v8._object = (void *)0xE800000000000000;
  sub_1000E5A70(v8);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 112))
  {
    v9._countAndFlagsBits = 0x72656E6E695720;
    v9._object = (void *)0xE700000000000000;
    sub_1000E5A70(v9);
  }
  return v4;
}

uint64_t sub_10005E714()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10005E744()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v2 - 8);
  long long v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000E3EE0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  uint64_t v9 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  if (*((unsigned char *)&v1->_countAndFlagsBits + *(int *)(v9 + 44)) == 1)
  {
    uint64_t v10 = v9;
    uint64_t v21 = v6;
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    sub_1000E5CC0(26);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 0x203A786966657250;
    v23._object = (void *)0xE800000000000000;
    object = v1[2]._object;
    if (object) {
      uint64_t countAndFlagsBits = v1[2]._countAndFlagsBits;
    }
    else {
      uint64_t countAndFlagsBits = 0;
    }
    if (object) {
      uint64_t v13 = v1[2]._object;
    }
    else {
      uint64_t v13 = (void *)0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    v26._uint64_t countAndFlagsBits = countAndFlagsBits;
    v26._object = v13;
    sub_1000E5A70(v26);
    swift_bridgeObjectRelease();
    v27._uint64_t countAndFlagsBits = 0x767265746E49202CLL;
    v27._object = (void *)0xEC000000203A6C61;
    sub_1000E5A70(v27);
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    sub_1000E5D50();
    v28._uint64_t countAndFlagsBits = 3026478;
    v28._object = (void *)0xE300000000000000;
    sub_1000E5A70(v28);
    sub_1000082B4(&qword_100129F28);
    sub_1000E5D50();
    sub_1000E5A70(v22);
    swift_bridgeObjectRelease();
    v29._uint64_t countAndFlagsBits = 8236;
    v29._object = (void *)0xE200000000000000;
    sub_1000E5A70(v29);
    sub_1000E5A70(v23);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    sub_1000E5CC0(19);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 0x676E69746E756F43;
    v23._object = (void *)0xEF203A6E776F6420;
    if (*((unsigned char *)&v1->_countAndFlagsBits + *(int *)(v10 + 40))) {
      v14._uint64_t countAndFlagsBits = 1702195828;
    }
    else {
      v14._uint64_t countAndFlagsBits = 0x65736C6166;
    }
    if (*((unsigned char *)&v1->_countAndFlagsBits + *(int *)(v10 + 40))) {
      uint64_t v15 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v15 = (void *)0xE500000000000000;
    }
    v14._object = v15;
    sub_1000E5A70(v14);
    swift_bridgeObjectRelease();
    v30._uint64_t countAndFlagsBits = 8236;
    v30._object = (void *)0xE200000000000000;
    sub_1000E5A70(v30);
    sub_1000E5A70(v23);
    swift_bridgeObjectRelease();
    v16._object = v1[3]._object;
    if (v16._object)
    {
      v16._uint64_t countAndFlagsBits = v1[3]._countAndFlagsBits;
      v23._uint64_t countAndFlagsBits = 0x203A786966667553;
      v23._object = (void *)0xE800000000000000;
      sub_1000E5A70(v16);
      v31._uint64_t countAndFlagsBits = 8236;
      v31._object = (void *)0xE200000000000000;
      sub_1000E5A70(v31);
      sub_1000E5A70(v23);
      swift_bridgeObjectRelease();
    }
    sub_100014754((uint64_t)v1 + *(int *)(v10 + 36), (uint64_t)v4, &qword_100129F30);
    uint64_t v17 = v21;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v4, 1, v5) == 1)
    {
      sub_1000147B8((uint64_t)v4, &qword_100129F30);
      v18._object = v1[1]._object;
      if (!v18._object) {
        return v24;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v4, v5);
      v23._uint64_t countAndFlagsBits = 0x7461206573756150;
      v23._object = (void *)0xEA0000000000203ALL;
      sub_10005F5D0(&qword_10012C7C0, (void (*)(uint64_t))&type metadata accessor for Date);
      v32._uint64_t countAndFlagsBits = sub_1000E5DB0();
      sub_1000E5A70(v32);
      swift_bridgeObjectRelease();
      v33._uint64_t countAndFlagsBits = 8236;
      v33._object = (void *)0xE200000000000000;
      sub_1000E5A70(v33);
      sub_1000E5A70(v23);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v5);
      v18._object = v1[1]._object;
      if (!v18._object) {
        return v24;
      }
    }
    goto LABEL_20;
  }
  sub_1000E5A70(*v1);
  v18._object = v1[1]._object;
  if (v18._object)
  {
LABEL_20:
    v18._uint64_t countAndFlagsBits = v1[1]._countAndFlagsBits;
    v23._uint64_t countAndFlagsBits = 0x203A726564616548;
    v23._object = (void *)0xE800000000000000;
    sub_1000E5A70(v18);
    sub_1000E5A70(v23);
    swift_bridgeObjectRelease();
  }
  return v24;
}

uint64_t sub_10005EC20()
{
  if (*(unsigned char *)(v0 + 48))
  {
    swift_bridgeObjectRetain();
    sub_1000082B4(&qword_10012C7C8);
    v4._uint64_t countAndFlagsBits = sub_1000E5A40();
    sub_1000E5A70(v4);
    swift_bridgeObjectRelease();
    v5._uint64_t countAndFlagsBits = 8236;
    v5._object = (void *)0xE200000000000000;
    sub_1000E5A70(v5);
    v6._uint64_t countAndFlagsBits = 0x203A7365736142;
    v6._object = (void *)0xE700000000000000;
    sub_1000E5A70(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v7._uint64_t countAndFlagsBits = sub_1000E5A40();
    sub_1000E5A70(v7);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = 8236;
    v8._object = (void *)0xE200000000000000;
    sub_1000E5A70(v8);
    v9._uint64_t countAndFlagsBits = 0x203A7374754FLL;
    v9._object = (void *)0xE600000000000000;
    sub_1000E5A70(v9);
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v0 + 32);
    uint64_t v1 = *(void **)(v0 + 40);
    swift_bridgeObjectRetain();
    v10._uint64_t countAndFlagsBits = v2;
    v10._object = v1;
    sub_1000E5A70(v10);
    swift_bridgeObjectRelease();
    v11._uint64_t countAndFlagsBits = 0x3A73656B69727453;
    v11._object = (void *)0xE900000000000020;
    sub_1000E5A70(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000E5A70(*(Swift::String *)(v0 + 16));
  }
  return 0;
}

uint64_t sub_10005EDB4()
{
  uint64_t v1 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  __chkstk_darwin(v1);
  sub_10005F644(v0, (uint64_t)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SportsWidgetGenericClockViewModel);
  uint64_t v3 = sub_1000E5A40();
  uint64_t v8 = v3;
  uint64_t v9 = v4;
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for SportsWidgetSoccerClockViewModel(0) + 20));
  if (v5)
  {
    v7[1] = v5;
    swift_bridgeObjectRetain();
    sub_1000082B4(&qword_10012C7D0);
    v10._uint64_t countAndFlagsBits = sub_1000E5A40();
    sub_1000E5A70(v10);
    swift_bridgeObjectRelease();
    return v8;
  }
  return v3;
}

uint64_t sub_10005EEC0()
{
  return sub_1000E5A40();
}

uint64_t sub_10005EF00()
{
  uint64_t v1 = 1936943469;
  if (*v0 != 1) {
    uint64_t v1 = 1818324839;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7974706D65;
  }
}

uint64_t sub_10005EF48(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  sub_1000E5CC0(18);
  swift_bridgeObjectRelease();
  strcpy((char *)v11, "Event info: ");
  BYTE5(v11[1]) = 0;
  HIWORD(v11[1]) = -5120;
  if (a2)
  {
    uint64_t v8 = a2;
  }
  else
  {
    a1 = 0;
    uint64_t v8 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = a1;
  v12._object = v8;
  sub_1000E5A70(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  sub_1000E5A70(v13);
  if (a4)
  {
    uint64_t v9 = a4;
  }
  else
  {
    a3 = 0;
    uint64_t v9 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = a3;
  v14._object = v9;
  sub_1000E5A70(v14);
  swift_bridgeObjectRelease();
  return v11[0];
}

uint64_t sub_10005F03C()
{
  return sub_10005EF48(*(void *)v0, *(void **)(v0 + 8), *(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10005F048()
{
  *(void *)&long long v7 = 0x203A79616C50;
  *((void *)&v7 + 1) = 0xE600000000000000;
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = v1;
  v8._object = v2;
  sub_1000E5A70(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 8236;
  v9._object = (void *)0xE200000000000000;
  sub_1000E5A70(v9);
  long long v7 = *(_OWORD *)(v0 + 16);
  if (v7)
  {
    *(void *)&long long v6 = 0x203A7466654CLL;
    *((void *)&v6 + 1) = 0xE600000000000000;
    swift_retain();
    v11._uint64_t countAndFlagsBits = sub_1000E4BE0();
    sub_1000E5A70(v11);
    swift_bridgeObjectRelease();
    sub_10005F618((uint64_t)&v7);
    uint64_t v4 = (void *)0xE600000000000000;
    v3._uint64_t countAndFlagsBits = 0x203A7466654CLL;
    goto LABEL_5;
  }
  long long v6 = *(_OWORD *)(v0 + 32);
  if (v6)
  {
    swift_retain();
    v10._uint64_t countAndFlagsBits = sub_1000E4BE0();
    sub_1000E5A70(v10);
    swift_bridgeObjectRelease();
    sub_10005F618((uint64_t)&v6);
    v3._uint64_t countAndFlagsBits = 0x203A6874676952;
    uint64_t v4 = (void *)0xE700000000000000;
LABEL_5:
    v3._object = v4;
    sub_1000E5A70(v3);
    swift_bridgeObjectRelease();
  }
  return 0x203A79616C50;
}

unint64_t sub_10005F190()
{
  uint64_t v1 = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  long long v6 = (char *)&v25 - v5;
  uint64_t v7 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  uint64_t v8 = __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  Swift::String v12 = (char *)&v25 - v11;
  uint64_t v13 = type metadata accessor for SportsWidgetClock(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005F644(v0, (uint64_t)v15, type metadata accessor for SportsWidgetClock);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100058434((uint64_t)v15, (uint64_t)v12, type metadata accessor for SportsWidgetGenericClockViewModel);
    *(void *)&v27[0] = 0;
    *((void *)&v27[0] + 1) = 0xE000000000000000;
    sub_1000E5CC0(17);
    swift_bridgeObjectRelease();
    *(void *)&v27[0] = 0x20636972656E6547;
    *((void *)&v27[0] + 1) = 0xEF203A6B636F6C63;
    sub_10005F644((uint64_t)v12, (uint64_t)v10, type metadata accessor for SportsWidgetGenericClockViewModel);
    v34._uint64_t countAndFlagsBits = sub_1000E5A40();
    sub_1000E5A70(v34);
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)&v27[0];
    uint64_t v22 = (uint64_t)v12;
    Swift::String v23 = type metadata accessor for SportsWidgetGenericClockViewModel;
LABEL_6:
    sub_10005F6AC(v22, v23);
    return v21;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_100058434((uint64_t)v15, (uint64_t)v6, type metadata accessor for SportsWidgetSoccerClockViewModel);
    *(void *)&v27[0] = 0;
    *((void *)&v27[0] + 1) = 0xE000000000000000;
    sub_1000E5CC0(16);
    swift_bridgeObjectRelease();
    strcpy((char *)v27, "Soccer clock: ");
    HIBYTE(v27[0]) = -18;
    sub_10005F644((uint64_t)v6, (uint64_t)v4, type metadata accessor for SportsWidgetSoccerClockViewModel);
    v35._uint64_t countAndFlagsBits = sub_1000E5A40();
    sub_1000E5A70(v35);
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)&v27[0];
    uint64_t v22 = (uint64_t)v6;
    Swift::String v23 = type metadata accessor for SportsWidgetSoccerClockViewModel;
    goto LABEL_6;
  }
  uint64_t v17 = *((void *)v15 + 4);
  uint64_t v18 = *((void *)v15 + 5);
  char v19 = v15[48];
  *(void *)&v27[0] = 0;
  *((void *)&v27[0] + 1) = 0xE000000000000000;
  long long v20 = *((_OWORD *)v15 + 1);
  long long v25 = *(_OWORD *)v15;
  long long v26 = v20;
  sub_1000E5CC0(18);
  swift_bridgeObjectRelease();
  unint64_t v31 = 0xD000000000000010;
  unint64_t v32 = 0x80000001000E93E0;
  v27[0] = v25;
  v27[1] = v26;
  uint64_t v28 = v17;
  uint64_t v29 = v18;
  char v30 = v19;
  v33._uint64_t countAndFlagsBits = sub_1000E5A40();
  sub_1000E5A70(v33);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_10005F528()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1) {
    uint64_t v2 = *(void *)(v0 + 32);
  }
  else {
    uint64_t v2 = 0;
  }
  if (v1) {
    uint64_t v3 = *(void **)(v0 + 40);
  }
  else {
    uint64_t v3 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = v2;
  v5._object = v3;
  sub_1000E5A70(v5);
  swift_bridgeObjectRelease();
  return 0x6C7275206F676F4CLL;
}

uint64_t sub_10005F5A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005F5D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005F618(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005F644(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005F6AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for VideosDownloadWiFiQuality()
{
  return &type metadata for VideosDownloadWiFiQuality;
}

unsigned char *_s17TVWidgetExtension25VideosDownloadWiFiQualityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005F7ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideosDownloadCellularQuality()
{
  return &type metadata for VideosDownloadCellularQuality;
}

Swift::Int sub_10005F824()
{
  return sub_1000E5E20();
}

Swift::Int sub_10005F8A8()
{
  return sub_1000E5E20();
}

uint64_t sub_10005F924(uint64_t a1)
{
  return sub_100060268(a1, qword_100141FB8);
}

unint64_t sub_10005F948()
{
  uint64_t v0 = sub_1000082B4(&qword_10012B4E8);
  __chkstk_darwin(v0 - 8);
  char v49 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v2 - 8);
  uint64_t v48 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3D90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E3F10();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000E59F0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000E3DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v50 = v10;
  uint64_t v51 = v11;
  __chkstk_darwin(v10);
  char v47 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000082B4(&qword_10012C8D0);
  uint64_t v13 = (int *)(sub_1000082B4(&qword_10012B520) - 8);
  uint64_t v14 = *(void *)v13;
  uint64_t v44 = *(void *)(*(void *)v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  long long v45 = xmmword_1000F0F50;
  uint64_t v46 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_1000F0F50;
  unint64_t v42 = v16 + v15 + v13[14];
  unint64_t v43 = v16 + v15;
  *(unsigned char *)(v16 + v15) = 0;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  unsigned int v33 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v32 = v4;
  v18(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  uint64_t v34 = v5 + 104;
  Swift::String v35 = v18;
  unint64_t v31 = 0x80000001000E87D0;
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v18(v7, v17, v4);
  char v19 = v48;
  sub_1000E3DB0();
  uint64_t v20 = v51 + 56;
  Swift::String v41 = *(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56);
  v41(v19, 0, 1, v50);
  uint64_t v21 = sub_1000E3B00();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v40 = v22 + 56;
  v39(v49, 1, 1, v21);
  uint64_t v23 = sub_1000082B4(&qword_10012B8E8);
  uint64_t v51 = v20;
  uint64_t v24 = *(void *)(v20 + 16);
  uint64_t v37 = v23;
  uint64_t v38 = v24;
  uint64_t v36 = *(unsigned __int8 *)(v20 + 24) | 7;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000EF780;
  sub_1000E3D80();
  sub_1000E3B30();
  long long v25 = (unsigned char *)(v43 + v44);
  v44 += v43 + v13[14];
  *long long v25 = 1;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v26 = v33;
  uint64_t v27 = v32;
  uint64_t v28 = v35;
  v35(v7, v33, v32);
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v28(v7, v26, v27);
  uint64_t v29 = v48;
  sub_1000E3DB0();
  v41(v29, 0, 1, v50);
  v39(v49, 1, 1, v21);
  *(_OWORD *)(swift_allocObject() + 16) = v45;
  sub_1000E3D80();
  sub_1000E3D80();
  sub_1000E3B30();
  unint64_t result = sub_1000349E0(v46);
  qword_100141FD0 = result;
  return result;
}

uint64_t sub_10006005C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10001C3A4(*a1, *a2);
}

Swift::Int sub_100060068()
{
  return sub_10005F824();
}

uint64_t sub_100060084()
{
  sub_1000E5A50();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000600F0()
{
  return sub_10005F8A8();
}

uint64_t sub_10006010C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100041508(a1, (Swift::OpaquePointer)&off_100120110, a2);
}

void sub_100060118(void *a1@<X8>)
{
  unint64_t v2 = 0x80000001000E82C0;
  if (*v1) {
    unint64_t v2 = 0x80000001000E82E0;
  }
  *a1 = 0xD000000000000013;
  a1[1] = v2;
}

void sub_100060154(void *a1@<X8>)
{
  *a1 = &off_1001202E0;
}

uint64_t sub_100060164@<X0>(uint64_t a1@<X8>)
{
  return sub_100041598(&qword_100129CD0, (uint64_t)qword_100141FB8, a1);
}

uint64_t sub_100060188(uint64_t a1)
{
  unint64_t v2 = sub_100061230();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1000601D4(uint64_t a1, uint64_t a2)
{
  return sub_1000416A4(a1, a2, &qword_100129CD8);
}

uint64_t sub_1000601F8(uint64_t a1)
{
  unint64_t v2 = sub_1000612E0();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100060244(uint64_t a1)
{
  return sub_100060268(a1, qword_100141FD8);
}

uint64_t sub_100060268(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = sub_1000E3C50();
  sub_100008434(v8, a2);
  sub_100008498(v8, (uint64_t)a2);
  sub_1000E3D80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  return sub_1000E3C40();
}

unint64_t sub_1000603D0()
{
  uint64_t v0 = sub_1000082B4(&qword_10012B4E8);
  __chkstk_darwin(v0 - 8);
  char v49 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v2 - 8);
  uint64_t v48 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3D90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E3F10();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000E59F0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000E3DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v50 = v10;
  uint64_t v51 = v11;
  __chkstk_darwin(v10);
  char v47 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000082B4(&qword_10012C8D8);
  uint64_t v13 = (int *)(sub_1000082B4(&qword_10012B530) - 8);
  uint64_t v14 = *(void *)v13;
  uint64_t v44 = *(void *)(*(void *)v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  long long v45 = xmmword_1000F0F50;
  uint64_t v46 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_1000F0F50;
  unint64_t v42 = v16 + v15 + v13[14];
  unint64_t v43 = v16 + v15;
  *(unsigned char *)(v16 + v15) = 0;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  unsigned int v33 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v32 = v4;
  v18(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  uint64_t v34 = v5 + 104;
  Swift::String v35 = v18;
  unint64_t v31 = 0x80000001000E87D0;
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v18(v7, v17, v4);
  char v19 = v48;
  sub_1000E3DB0();
  uint64_t v20 = v51 + 56;
  Swift::String v41 = *(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56);
  v41(v19, 0, 1, v50);
  uint64_t v21 = sub_1000E3B00();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v40 = v22 + 56;
  v39(v49, 1, 1, v21);
  uint64_t v23 = sub_1000082B4(&qword_10012B8E8);
  uint64_t v51 = v20;
  uint64_t v24 = *(void *)(v20 + 16);
  uint64_t v37 = v23;
  uint64_t v38 = v24;
  uint64_t v36 = *(unsigned __int8 *)(v20 + 24) | 7;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000EF780;
  sub_1000E3D80();
  sub_1000E3B30();
  long long v25 = (unsigned char *)(v43 + v44);
  v44 += v43 + v13[14];
  *long long v25 = 1;
  sub_1000E5990();
  sub_1000E3F00();
  uint64_t v26 = v33;
  uint64_t v27 = v32;
  uint64_t v28 = v35;
  v35(v7, v33, v32);
  sub_1000E3DB0();
  sub_1000E5990();
  sub_1000E3F00();
  v28(v7, v26, v27);
  uint64_t v29 = v48;
  sub_1000E3DB0();
  v41(v29, 0, 1, v50);
  v39(v49, 1, 1, v21);
  *(_OWORD *)(swift_allocObject() + 16) = v45;
  sub_1000E3D80();
  sub_1000E3D80();
  sub_1000E3B30();
  unint64_t result = sub_100034A08(v46);
  qword_100141FF0 = result;
  return result;
}

uint64_t sub_100060AE4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100041508(a1, (Swift::OpaquePointer)&off_1001200C0, a2);
}

void sub_100060AF0(void *a1@<X8>)
{
  *a1 = &off_100120308;
}

uint64_t sub_100060B00@<X0>(uint64_t a1@<X8>)
{
  return sub_100041598(&qword_100129CE0, (uint64_t)qword_100141FD8, a1);
}

uint64_t sub_100060B24(uint64_t a1)
{
  unint64_t v2 = sub_100060D00();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100060B70(uint64_t a1, uint64_t a2)
{
  return sub_1000416A4(a1, a2, &qword_100129CE8);
}

uint64_t sub_100060B94(uint64_t a1)
{
  unint64_t v2 = sub_100060DB0();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100060BE4()
{
  unint64_t result = qword_10012C7E0;
  if (!qword_10012C7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C7E0);
  }
  return result;
}

unint64_t sub_100060C3C()
{
  unint64_t result = qword_10012C7E8;
  if (!qword_10012C7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C7E8);
  }
  return result;
}

unint64_t sub_100060C94()
{
  unint64_t result = qword_10012C7F0;
  if (!qword_10012C7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C7F0);
  }
  return result;
}

uint64_t sub_100060CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000611DC(a1, a2, a3, (void (*)(void))sub_100060D00);
}

unint64_t sub_100060D00()
{
  unint64_t result = qword_10012C7F8;
  if (!qword_10012C7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C7F8);
  }
  return result;
}

unint64_t sub_100060D58()
{
  unint64_t result = qword_10012C800;
  if (!qword_10012C800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C800);
  }
  return result;
}

unint64_t sub_100060DB0()
{
  unint64_t result = qword_10012C808;
  if (!qword_10012C808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C808);
  }
  return result;
}

unint64_t sub_100060E08()
{
  unint64_t result = qword_10012C810;
  if (!qword_10012C810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C810);
  }
  return result;
}

unint64_t sub_100060E60()
{
  unint64_t result = qword_10012C818;
  if (!qword_10012C818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C818);
  }
  return result;
}

uint64_t sub_100060EB4()
{
  return sub_100041F6C(&qword_10012C820, &qword_10012C828);
}

unint64_t sub_100060EE0()
{
  unint64_t result = qword_10012C830;
  if (!qword_10012C830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C830);
  }
  return result;
}

unint64_t sub_100060F38()
{
  unint64_t result = qword_10012C838;
  if (!qword_10012C838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C838);
  }
  return result;
}

unint64_t sub_100060F90()
{
  unint64_t result = qword_10012C840;
  if (!qword_10012C840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C840);
  }
  return result;
}

uint64_t sub_100060FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100061540(a1, a2, a3, (uint64_t (*)(void))sub_100060D00, (uint64_t (*)(void))sub_100061010);
}

unint64_t sub_100061010()
{
  unint64_t result = qword_10012C848;
  if (!qword_10012C848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C848);
  }
  return result;
}

unint64_t sub_100061068()
{
  unint64_t result = qword_10012C850;
  if (!qword_10012C850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C850);
  }
  return result;
}

unint64_t sub_1000610C0()
{
  unint64_t result = qword_10012C858;
  if (!qword_10012C858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C858);
  }
  return result;
}

unint64_t sub_100061118()
{
  unint64_t result = qword_10012C860;
  if (!qword_10012C860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C860);
  }
  return result;
}

unint64_t sub_100061170()
{
  unint64_t result = qword_10012C868;
  if (!qword_10012C868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C868);
  }
  return result;
}

uint64_t sub_1000611C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000611DC(a1, a2, a3, (void (*)(void))sub_100061230);
}

uint64_t sub_1000611DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100061230()
{
  unint64_t result = qword_10012C870;
  if (!qword_10012C870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C870);
  }
  return result;
}

unint64_t sub_100061288()
{
  unint64_t result = qword_10012C878;
  if (!qword_10012C878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C878);
  }
  return result;
}

unint64_t sub_1000612E0()
{
  unint64_t result = qword_10012C880;
  if (!qword_10012C880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C880);
  }
  return result;
}

unint64_t sub_100061338()
{
  unint64_t result = qword_10012C888;
  if (!qword_10012C888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C888);
  }
  return result;
}

unint64_t sub_100061390()
{
  unint64_t result = qword_10012C890;
  if (!qword_10012C890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C890);
  }
  return result;
}

uint64_t sub_1000613E4()
{
  return sub_100041F6C(&qword_10012C898, &qword_10012C8A0);
}

unint64_t sub_100061410()
{
  unint64_t result = qword_10012C8A8;
  if (!qword_10012C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C8A8);
  }
  return result;
}

unint64_t sub_100061468()
{
  unint64_t result = qword_10012C8B0;
  if (!qword_10012C8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C8B0);
  }
  return result;
}

unint64_t sub_1000614C0()
{
  unint64_t result = qword_10012C8B8;
  if (!qword_10012C8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C8B8);
  }
  return result;
}

uint64_t sub_100061514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100061540(a1, a2, a3, (uint64_t (*)(void))sub_100061230, (uint64_t (*)(void))sub_10006157C);
}

uint64_t sub_100061540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10006157C()
{
  unint64_t result = qword_10012C8C0;
  if (!qword_10012C8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C8C0);
  }
  return result;
}

unint64_t sub_1000615D4()
{
  unint64_t result = qword_10012C8C8;
  if (!qword_10012C8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C8C8);
  }
  return result;
}

unint64_t sub_10006163C()
{
  unint64_t result = qword_10012C8E0;
  if (!qword_10012C8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C8E0);
  }
  return result;
}

uint64_t sub_100061690()
{
  return sub_100014AC4(&qword_10012C8E8, &qword_10012C8F0);
}

void sub_1000616CC()
{
  qword_100141FF8 = (uint64_t)&off_10011FEC8;
}

uint64_t sub_1000616E0()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100142000);
  sub_100008498(v10, (uint64_t)qword_100142000);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_1000619CC()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_100142018);
  sub_100008498(v0, (uint64_t)qword_100142018);
  return sub_1000E3D80();
}

uint64_t sub_100061A30()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_100142030);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100142030);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100061AE8()
{
  uint64_t result = swift_getKeyPath();
  qword_100142048 = result;
  return result;
}

uint64_t sub_100061B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return _swift_task_switch(sub_100061B34, 0, 0);
}

uint64_t sub_100061B34()
{
  sub_1000E3A40();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  sub_1000E3A40();
  *(unsigned char *)(v0 + 225) = *(unsigned char *)(v0 + 226);
  if (qword_100129D10 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100142048;
  *(void *)(v0 + 152) = qword_100142048;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = sub_100014AC4(&qword_10012CAA8, &qword_10012CAB0);
  *(void *)(v0 + 168) = v5;
  void *v4 = v0;
  v4[1] = sub_100061C98;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 225, v3, &type metadata for Bool, v5);
}

uint64_t sub_100061C98()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FEC;
  }
  else {
    uint64_t v2 = sub_100061E08;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100061E08()
{
  sub_1000E3A40();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  v0[23] = v2;
  v0[24] = v3;
  v0[8] = v1;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v4 = qword_100142048;
  v0[25] = qword_100142048;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  void *v5 = v0;
  v5[1] = sub_100019DF4;
  uint64_t v6 = v0[21];
  return AppEntity._value<A, B>(for:)(v0 + 28, v4, v6);
}

uint64_t sub_100061EF0()
{
  if (qword_100129D10 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100061F50()
{
  unint64_t result = qword_10012C8F8;
  if (!qword_10012C8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C8F8);
  }
  return result;
}

unint64_t sub_100061FA8()
{
  unint64_t result = qword_10012C900;
  if (!qword_10012C900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C900);
  }
  return result;
}

uint64_t sub_100061FFC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100062030()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100062080@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129D00, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100142018, a1);
}

uint64_t sub_1000620B8@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129D08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100142030);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_100062134(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100015DF8;
  *(_OWORD *)(v4 + 120) = *v1;
  *(void *)(v4 + 112) = a1;
  return _swift_task_switch(sub_100061B34, 0, 0);
}

uint64_t sub_1000621E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100063748();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100062210()
{
  return 0xD000000000000034;
}

unint64_t sub_100062230()
{
  unint64_t result = qword_10012C910;
  if (!qword_10012C910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C910);
  }
  return result;
}

unint64_t sub_100062288()
{
  unint64_t result = qword_10012C918;
  if (!qword_10012C918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C918);
  }
  return result;
}

uint64_t sub_1000622DC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000622FC, 0, 0);
}

uint64_t sub_1000622FC()
{
  **(unsigned char **)(v0 + 16) = sub_10007AF98() & 1;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100062388(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1000623AC, 0, 0);
}

uint64_t sub_1000623AC()
{
  sub_10007BFE8(*(unsigned __int8 *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100062428(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100062448, 0, 0);
}

uint64_t sub_100062448()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t *v1 = sub_100063B8C();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_1000624B8()
{
  unint64_t result = qword_10012C928;
  if (!qword_10012C928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C928);
  }
  return result;
}

uint64_t sub_10006250C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100063044();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1000625C0()
{
  unint64_t result = qword_10012C938;
  if (!qword_10012C938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C938);
  }
  return result;
}

unint64_t sub_100062618()
{
  unint64_t result = qword_10012C940;
  if (!qword_10012C940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C940);
  }
  return result;
}

unint64_t sub_100062670()
{
  unint64_t result = qword_10012C948[0];
  if (!qword_10012C948[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012C948);
  }
  return result;
}

uint64_t sub_1000626C4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100063044();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100062778(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_100063044();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10006282C()
{
  unint64_t result = qword_10012C960;
  if (!qword_10012C960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C960);
  }
  return result;
}

unint64_t sub_100062884()
{
  unint64_t result = qword_10012C968;
  if (!qword_10012C968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C968);
  }
  return result;
}

unint64_t sub_1000628DC()
{
  unint64_t result = qword_10012C970;
  if (!qword_10012C970)
  {
    sub_100008354(qword_10012C978);
    sub_100062884();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C970);
  }
  return result;
}

uint64_t sub_100062950(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000624B8();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsDownloadUseCellularEntity.Query()
{
  return &type metadata for TVSettingsDownloadUseCellularEntity.Query;
}

ValueMetadata *type metadata accessor for TVSettingsDownloadUseCellularEntity()
{
  return &type metadata for TVSettingsDownloadUseCellularEntity;
}

ValueMetadata *type metadata accessor for TVSettingsDownloadUseCellularEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsDownloadUseCellularEntity.UpdateIntent_value;
}

uint64_t sub_100062A38()
{
  sub_100062E2C();
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_100062ACC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129CF8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100142000, a1);
}

uint64_t sub_100062B04(uint64_t a1)
{
  unint64_t v2 = sub_100062670();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100062B50(uint64_t a1)
{
  unint64_t v2 = sub_100062288();

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_100062B9C(uint64_t a1)
{
  unint64_t v2 = sub_100062C44();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100062BEC()
{
  unint64_t result = qword_10012C990;
  if (!qword_10012C990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C990);
  }
  return result;
}

unint64_t sub_100062C44()
{
  unint64_t result = qword_10012C9A0;
  if (!qword_10012C9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C9A0);
  }
  return result;
}

unint64_t sub_100062C9C()
{
  unint64_t result = qword_10012C9A8;
  if (!qword_10012C9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C9A8);
  }
  return result;
}

unint64_t sub_100062CF4()
{
  unint64_t result = qword_10012C9B0;
  if (!qword_10012C9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C9B0);
  }
  return result;
}

unint64_t sub_100062D4C()
{
  unint64_t result = qword_10012C9B8;
  if (!qword_10012C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012C9B8);
  }
  return result;
}

unint64_t sub_100062DA0(void *a1)
{
  a1[1] = sub_100062DD8();
  a1[2] = sub_100062E2C();
  unint64_t result = sub_100062288();
  a1[3] = result;
  return result;
}

unint64_t sub_100062DD8()
{
  unint64_t result = qword_10012CA08;
  if (!qword_10012CA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CA08);
  }
  return result;
}

unint64_t sub_100062E2C()
{
  unint64_t result = qword_10012CA10;
  if (!qword_10012CA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CA10);
  }
  return result;
}

unint64_t sub_100062E80(uint64_t a1)
{
  unint64_t result = sub_100062EA8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100062EA8()
{
  unint64_t result = qword_10012CA58;
  if (!qword_10012CA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CA58);
  }
  return result;
}

uint64_t sub_100062EFC()
{
  return sub_100014AC4(&qword_10012CA60, &qword_10012CA68);
}

unint64_t sub_100062F3C()
{
  unint64_t result = qword_10012CA70;
  if (!qword_10012CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CA70);
  }
  return result;
}

unint64_t sub_100062F94()
{
  unint64_t result = qword_10012CA78;
  if (!qword_10012CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CA78);
  }
  return result;
}

unint64_t sub_100062FEC()
{
  unint64_t result = qword_10012CA80;
  if (!qword_10012CA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CA80);
  }
  return result;
}

unint64_t sub_100063044()
{
  unint64_t result = qword_10012CA88;
  if (!qword_10012CA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CA88);
  }
  return result;
}

uint64_t sub_100063098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_1000082B4(&qword_10012A870);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A878);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012A880);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000082B4(&qword_10012A888);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  uint64_t v38 = v14;
  __chkstk_darwin(v13);
  char v30 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v40, "com.apple.tv.");
  HIWORD(v40[1]) = -4864;
  unint64_t v45 = (unint64_t)&type metadata for TVSettingsDownloadUseCellularWidget;
  sub_1000082B4(&qword_10012CB20);
  v47._uint64_t countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v47);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1000082B4(&qword_10012A898);
  sub_100062288();
  sub_100014AC4(&qword_10012A8A0, &qword_10012A898);
  sub_1000E56D0();
  v40[0] = &type metadata for TVSettingsDownloadUseCellularWidget;
  v40[0] = sub_1000E5A20();
  v40[1] = v16;
  unint64_t v45 = 0x746567646957;
  unint64_t v46 = 0xE600000000000000;
  uint64_t v43 = 0x656C67676F54;
  unint64_t v44 = 0xE600000000000000;
  unint64_t v29 = sub_100014158();
  uint64_t v17 = sub_1000E5C70();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  v40[0] = v17;
  v40[1] = v19;
  uint64_t v20 = sub_100014AC4(&qword_10012A8A8, &qword_10012A870);
  uint64_t v21 = v31;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v21);
  unint64_t v45 = 0xD000000000000033;
  unint64_t v46 = 0x80000001000E9690;
  v40[0] = v21;
  v40[1] = &type metadata for String;
  uint64_t v41 = v20;
  unint64_t v42 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v33;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v23);
  v40[0] = v23;
  v40[1] = &type metadata for String;
  uint64_t v41 = OpaqueTypeConformance2;
  unint64_t v42 = v29;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  long long v25 = v30;
  uint64_t v26 = v35;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v26);
  v40[0] = v26;
  v40[1] = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v37;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v25, v27);
}

uint64_t sub_100063638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000082B4(&qword_10012A898);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0xD00000000000001FLL;
  v7[1] = 0x80000001000E9520;
  sub_100014158();
  sub_1000E4D30();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_100063748()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A7F0);
  __chkstk_darwin(v0 - 8);
  unint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000E3B90();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1000E3DA0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_1000082B4(&qword_10012CAB8);
  sub_1000E3D80();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_1000E3A00();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  long long v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100062670();
  uint64_t v19 = v22;
  uint64_t v23 = sub_1000E3A70();
  sub_1000082B4(&qword_10012A800);
  sub_1000E3D80();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_1000E5B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_1000E3A90();
  return v23;
}

uint64_t sub_100063B8C()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  __chkstk_darwin(v6 - 8);
  v9[1] = &type metadata for TVSettingsDownloadUseCellularEntity;
  sub_1000082B4(&qword_10012CA90);
  uint64_t v7 = sub_1000E5A20();
  sub_1000082B4(&qword_10012C8F0);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012CAA8, &qword_10012CAB0);
  sub_1000E3CA0();
  return v7;
}

uint64_t sub_100063E58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

ValueMetadata *type metadata accessor for TVSettingsDownloadUseCellularWidget()
{
  return &type metadata for TVSettingsDownloadUseCellularWidget;
}

uint64_t sub_100063E74()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100063E90(uint64_t a1)
{
  unint64_t result = sub_100063EB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100063EB8()
{
  unint64_t result = qword_10012CB10;
  if (!qword_10012CB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CB10);
  }
  return result;
}

unint64_t sub_100063F0C(uint64_t a1)
{
  unint64_t result = sub_100063F34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100063F34()
{
  unint64_t result = qword_10012CB18;
  if (!qword_10012CB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CB18);
  }
  return result;
}

uint64_t sub_100063F88@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = sub_1000E45C0();
  *(int64x2_t *)(a1 + 16) = vdupq_n_s64(0x7FF0000000000000uLL);
  *(_OWORD *)(a1 + 32) = xmmword_1000F3B10;
  *(_OWORD *)(a1 + 48) = xmmword_1000F3B20;
  *(_OWORD *)(a1 + 64) = xmmword_1000F3B30;
  *(_OWORD *)(a1 + 80) = xmmword_1000F3B40;
  *(void *)(a1 + 96) = sub_1000E45C0();
  *(void *)(a1 + 104) = 0;
  uint64_t v2 = self;
  id v3 = [v2 labelColor];
  *(void *)(a1 + 112) = sub_1000E4BD0();
  *(void *)(a1 + 120) = sub_1000E4880();
  *(void *)(a1 + 128) = sub_1000E4800();
  sub_1000E4840();
  *(void *)(a1 + 136) = v4;
  *(void *)(a1 + 144) = 1;
  *(unsigned char *)(a1 + 152) = 1;
  *(void *)(a1 + 160) = 0x3FE0000000000000;
  *(void *)(a1 + 168) = sub_1000E4F40();
  *(void *)(a1 + 176) = v5;
  *(void *)(a1 + 184) = 0xD000000000000015;
  *(void *)(a1 + 192) = 0x80000001000E8BE0;
  *(void *)(a1 + 200) = sub_1000E4890();
  id v6 = [v2 labelColor];
  *(void *)(a1 + 208) = sub_1000E4BD0();
  uint64_t v7 = (int *)type metadata accessor for SportsWidgetContentViewLayout();
  uint64_t v8 = a1 + v7[29];
  uint64_t v9 = enum case for Image.Scale.small(_:);
  uint64_t v10 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  *(void *)(a1 + v7[30]) = 0;
  *(void *)(a1 + v7[31]) = 0x4024000000000000;
  *(void *)(a1 + v7[32]) = 0x4010000000000000;
  *(void *)(a1 + v7[33]) = 0x4010000000000000;
  *(void *)(a1 + v7[34]) = 0x7FF0000000000000;
  *(void *)(a1 + v7[35]) = 0x3FF0000000000000;
  *(void *)(a1 + v7[36]) = 0x3FF0000000000000;
  uint64_t v11 = v7[37];
  *(void *)(a1 + v11) = sub_1000E48A0();
  uint64_t v12 = v7[38];
  id v13 = [v2 labelColor];
  uint64_t result = sub_1000E4BD0();
  *(void *)(a1 + v12) = result;
  *(void *)(a1 + v7[39]) = 1;
  *(unsigned char *)(a1 + v7[40]) = 1;
  *(void *)(a1 + v7[41]) = 0x4050000000000000;
  return result;
}

uint64_t type metadata accessor for SportsWidgetContentViewLayout()
{
  uint64_t result = qword_10012CB80;
  if (!qword_10012CB80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000641DC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v21 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v8;
    long long v9 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v9;
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    uint64_t v10 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v10;
    *(void *)(a1 + 128) = a2[16];
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
    *(void *)(a1 + 160) = a2[20];
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    uint64_t v11 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v11;
    uint64_t v12 = a2[26];
    uint64_t v13 = a3[29];
    uint64_t v24 = (uint64_t)a2 + v13;
    uint64_t v25 = a1 + v13;
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v12;
    uint64_t v14 = sub_1000E4CF0();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v23(v25, v24, v14);
    uint64_t v15 = a3[31];
    *(void *)(v4 + a3[30]) = *(uint64_t *)((char *)a2 + a3[30]);
    *(void *)(v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v16 = a3[33];
    *(void *)(v4 + a3[32]) = *(uint64_t *)((char *)a2 + a3[32]);
    *(void *)(v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v17 = a3[35];
    *(void *)(v4 + a3[34]) = *(uint64_t *)((char *)a2 + a3[34]);
    *(void *)(v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[37];
    *(void *)(v4 + a3[36]) = *(uint64_t *)((char *)a2 + a3[36]);
    *(void *)(v4 + v18) = *(uint64_t *)((char *)a2 + v18);
    uint64_t v19 = a3[39];
    *(void *)(v4 + a3[38]) = *(uint64_t *)((char *)a2 + a3[38]);
    *(void *)(v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v20 = a3[41];
    *(unsigned char *)(v4 + a3[40]) = *((unsigned char *)a2 + a3[40]);
    *(void *)(v4 + v20) = *(uint64_t *)((char *)a2 + v20);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000643E0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 116);
  uint64_t v5 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();

  return swift_release();
}

uint64_t sub_1000644A0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  uint64_t v10 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v10;
  uint64_t v11 = *(void *)(a2 + 208);
  uint64_t v12 = a3[29];
  uint64_t v22 = a2 + v12;
  uint64_t v23 = a1 + v12;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v11;
  uint64_t v13 = sub_1000E4CF0();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v21(v23, v22, v13);
  uint64_t v14 = a3[31];
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[33];
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[35];
  *(void *)(a1 + a3[34]) = *(void *)(a2 + a3[34]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[37];
  *(void *)(a1 + a3[36]) = *(void *)(a2 + a3[36]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[39];
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[41];
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100064658(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_retain();
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  uint64_t v6 = a3[29];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  *(void *)(a1 + a3[31]) = *(void *)(a2 + a3[31]);
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  *(void *)(a1 + a3[33]) = *(void *)(a2 + a3[33]);
  *(void *)(a1 + a3[34]) = *(void *)(a2 + a3[34]);
  *(void *)(a1 + a3[35]) = *(void *)(a2 + a3[35]);
  *(void *)(a1 + a3[36]) = *(void *)(a2 + a3[36]);
  *(void *)(a1 + a3[37]) = *(void *)(a2 + a3[37]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[39]) = *(void *)(a2 + a3[39]);
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(void *)(a1 + a3[41]) = *(void *)(a2 + a3[41]);
  return a1;
}

uint64_t sub_1000648C4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  uint64_t v10 = a3[29];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  uint64_t v13 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[31];
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[33];
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[35];
  *(void *)(a1 + a3[34]) = *(void *)(a2 + a3[34]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[37];
  *(void *)(a1 + a3[36]) = *(void *)(a2 + a3[36]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[39];
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[41];
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  return a1;
}

uint64_t sub_100064A18(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  uint64_t v8 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_release();
  uint64_t v9 = a3[29];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1000E4CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[31];
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[33];
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[35];
  *(void *)(a1 + a3[34]) = *(void *)(a2 + a3[34]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[37];
  *(void *)(a1 + a3[36]) = *(void *)(a2 + a3[36]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_release();
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  swift_release();
  uint64_t v17 = a3[40];
  *(void *)(a1 + a3[39]) = *(void *)(a2 + a3[39]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(void *)(a1 + a3[41]) = *(void *)(a2 + a3[41]);
  return a1;
}

uint64_t sub_100064BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100064BFC);
}

uint64_t sub_100064BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 112);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000E4CF0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 116);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100064CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100064CC0);
}

uint64_t sub_100064CC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 112) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000E4CF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 116);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100064D68()
{
  uint64_t result = sub_1000E4CF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100064E84()
{
  unint64_t result = qword_10012CC60;
  if (!qword_10012CC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CC60);
  }
  return result;
}

unint64_t sub_100064EDC()
{
  unint64_t result = qword_10012CC68;
  if (!qword_10012CC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CC68);
  }
  return result;
}

unint64_t sub_100064F34()
{
  unint64_t result = qword_10012CC70[0];
  if (!qword_10012CC70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012CC70);
  }
  return result;
}

uint64_t sub_100064F88(uint64_t a1, unsigned char *a2)
{
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = *a2;
  return _swift_task_switch(sub_100064FB0, 0, 0);
}

uint64_t sub_100064FB0()
{
  unint64_t v1 = *(unint64_t **)(v0 + 16);
  unint64_t *v1 = sub_1000ABC58(*(unsigned __int8 *)(v0 + 24));
  v1[1] = v2;
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10006501C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v269 = a2;
  uint64_t v3 = sub_1000E59D0();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v251 = (char *)v247 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v250 = (char *)v247 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v253 = (char *)v247 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v252 = (char *)v247 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v249 = (char *)v247 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v254 = (char *)v247 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  __chkstk_darwin(v17);
  uint64_t v18 = sub_1000082B4(&qword_10012B4E8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v258 = (char *)v247 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v257 = (char *)v247 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v263 = (char *)v247 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v262 = (char *)v247 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v265 = (char *)v247 - v28;
  __chkstk_darwin(v27);
  v271 = (char *)v247 - v29;
  uint64_t v30 = sub_1000082B4(&qword_10012A580);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v256 = (char *)v247 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  v255 = (char *)v247 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v260 = (char *)v247 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v259 = (char *)v247 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v261 = (char *)v247 - v40;
  __chkstk_darwin(v39);
  uint64_t v272 = (char *)v247 - v41;
  uint64_t v42 = sub_1000E3D90();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v273 = v42;
  uint64_t v274 = v43;
  __chkstk_darwin(v42);
  uint64_t v268 = (char *)v247 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1000E3F10();
  __chkstk_darwin(v45 - 8);
  uint64_t v270 = (char *)v247 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000E59F0();
  __chkstk_darwin(v47 - 8);
  char v49 = (char *)v247 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000E3DA0();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v266 = v50;
  uint64_t v267 = v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v53 = __chkstk_darwin(v52);
  uint64_t v54 = __chkstk_darwin(v53);
  uint64_t v55 = __chkstk_darwin(v54);
  uint64_t v56 = __chkstk_darwin(v55);
  uint64_t v57 = __chkstk_darwin(v56);
  uint64_t v58 = __chkstk_darwin(v57);
  uint64_t v59 = __chkstk_darwin(v58);
  uint64_t v60 = __chkstk_darwin(v59);
  __chkstk_darwin(v60);
  uint64_t v62 = __chkstk_darwin((char *)v247 - v61);
  uint64_t v63 = __chkstk_darwin(v62);
  switch(a1)
  {
    case 1:
      v247[1] = v63;
      uint64_t v264 = v68;
      sub_1000E59C0();
      v275._uint64_t countAndFlagsBits = 0xD000000000000016;
      v275._object = (void *)0x80000001000EAD10;
      sub_1000E59B0(v275);
      int v76 = WLKIsRegulatedSKU();
      BOOL v77 = v76 == 0;
      if (v76) {
        v78._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v78._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v77) {
        Swift::String v79 = (void *)0xE500000000000000;
      }
      else {
        Swift::String v79 = (void *)0xE400000000000000;
      }
      v78._object = v79;
      sub_1000E59A0(v78);
      swift_bridgeObjectRelease();
      v276._uint64_t countAndFlagsBits = 0;
      v276._object = (void *)0xE000000000000000;
      sub_1000E59B0(v276);
      sub_1000E59E0();
      sub_1000E3F00();
      uint64_t v80 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v81 = v273;
      Swift::String v82 = *(char **)(v274 + 104);
      v274 += 104;
      Swift::String v83 = v268;
      LODWORD(v271) = enum case for LocalizedStringResource.BundleDescription.main(_:);
      ((void (*)(char *, void, uint64_t))v82)(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      uint64_t v272 = (char *)0x80000001000E87D0;
      sub_1000E3DB0();
      sub_1000E59C0();
      v277._uint64_t countAndFlagsBits = 0x100000000000001DLL;
      v277._object = (void *)0x80000001000EAD30;
      sub_1000E59B0(v277);
      int v84 = WLKIsRegulatedSKU();
      BOOL v85 = v84 == 0;
      if (v84) {
        v86._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v86._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v85) {
        uint64_t v87 = (void *)0xE500000000000000;
      }
      else {
        uint64_t v87 = (void *)0xE400000000000000;
      }
      v86._object = v87;
      sub_1000E59A0(v86);
      swift_bridgeObjectRelease();
      v278._uint64_t countAndFlagsBits = 0;
      v278._object = (void *)0xE000000000000000;
      sub_1000E59B0(v278);
      sub_1000E59E0();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v82)(v83, v80, v81);
      uint64_t v88 = v261;
      sub_1000E3DB0();
      uint64_t v89 = v267 + 56;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v88, 0, 1, v266);
      uint64_t v90 = v265;
      sub_1000E3AF0();
      uint64_t v91 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v90, 0, 1, v91);
      sub_1000082B4(&qword_10012B8E8);
      uint64_t v266 = 2 * *(void *)(v89 + 16);
      uint64_t v267 = swift_allocObject();
      *(_OWORD *)(v267 + 16) = xmmword_1000F2510;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v92 = v271;
      ((void (*)(char *, void, uint64_t))v82)(v83, v271, v81);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v263 = v82;
      ((void (*)(char *, uint64_t, uint64_t))v82)(v83, v92, v81);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v82)(v83, v92, v81);
      sub_1000E3DB0();
      sub_1000E59C0();
      v279._uint64_t countAndFlagsBits = 543516756;
      v279._object = (void *)0xE400000000000000;
      sub_1000E59B0(v279);
      int v93 = WLKIsRegulatedSKU();
      BOOL v94 = v93 == 0;
      if (v93) {
        v95._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v95._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v94) {
        uint64_t v96 = (void *)0xE500000000000000;
      }
      else {
        uint64_t v96 = (void *)0xE400000000000000;
      }
      v95._object = v96;
      sub_1000E59A0(v95);
      swift_bridgeObjectRelease();
      v280._uint64_t countAndFlagsBits = 0xD000000000000062;
      v280._object = (void *)0x80000001000EAD50;
      sub_1000E59B0(v280);
      int v97 = WLKIsRegulatedSKU();
      BOOL v98 = v97 == 0;
      if (v97) {
        v99._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v99._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v98) {
        uint64_t v100 = (void *)0xE500000000000000;
      }
      else {
        uint64_t v100 = (void *)0xE400000000000000;
      }
      v99._object = v100;
      sub_1000E59A0(v99);
      swift_bridgeObjectRelease();
      v281._uint64_t countAndFlagsBits = 0xD0000000000000AALL;
      v281._object = (void *)0x80000001000EADC0;
      sub_1000E59B0(v281);
      sub_1000E59E0();
      sub_1000E3F00();
      ((void (*)(char *, void, uint64_t))v263)(v83, v271, v273);
      sub_1000E3DB0();
      return sub_1000E3B20();
    case 2:
      v265 = v65;
      sub_1000E59C0();
      v282._uint64_t countAndFlagsBits = 0xD000000000000015;
      v282._object = (void *)0x80000001000EAB40;
      sub_1000E59B0(v282);
      int v101 = WLKIsRegulatedSKU();
      BOOL v102 = v101 == 0;
      if (v101) {
        v103._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v103._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v102) {
        uint64_t v104 = (void *)0xE500000000000000;
      }
      else {
        uint64_t v104 = (void *)0xE400000000000000;
      }
      uint64_t v105 = (void *)0xE500000000000000;
      v103._object = v104;
      sub_1000E59A0(v103);
      swift_bridgeObjectRelease();
      v283._uint64_t countAndFlagsBits = 0;
      v283._object = (void *)0xE000000000000000;
      sub_1000E59B0(v283);
      sub_1000E59E0();
      sub_1000E3F00();
      LODWORD(v272) = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v106 = v273;
      uint64_t v107 = v274 + 104;
      uint64_t v108 = *(void (**)(char *))(v274 + 104);
      uint64_t v109 = v268;
      v108(v268);
      v271 = (char *)0x80000001000E87D0;
      sub_1000E3DB0();
      sub_1000E59C0();
      v284._uint64_t countAndFlagsBits = 0x100000000000001CLL;
      v284._object = (void *)0x80000001000EAB60;
      sub_1000E59B0(v284);
      int v110 = WLKIsRegulatedSKU();
      BOOL v111 = v110 == 0;
      if (v110) {
        v112._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v112._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (!v111) {
        uint64_t v105 = (void *)0xE400000000000000;
      }
      v112._object = v105;
      sub_1000E59A0(v112);
      swift_bridgeObjectRelease();
      v285._uint64_t countAndFlagsBits = 0;
      v285._object = (void *)0xE000000000000000;
      sub_1000E59B0(v285);
      sub_1000E59E0();
      sub_1000E3F00();
      ((void (*)(char *, void, uint64_t))v108)(v109, v272, v106);
      uint64_t v113 = v259;
      sub_1000E3DB0();
      uint64_t v114 = v267 + 56;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v113, 0, 1, v266);
      uint64_t v115 = v262;
      sub_1000E3AF0();
      uint64_t v116 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v115, 0, 1, v116);
      sub_1000082B4(&qword_10012B8E8);
      uint64_t v266 = *(void *)(v114 + 16);
      uint64_t v267 = swift_allocObject();
      *(_OWORD *)(v267 + 16) = xmmword_1000F0F50;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v117 = v272;
      uint64_t v118 = v273;
      uint64_t v274 = v107;
      uint64_t v264 = v108;
      ((void (*)(char *, void, uint64_t))v108)(v109, v272, v273);
      sub_1000E3DB0();
      uint64_t v248 = v49;
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v108)(v109, v117, v118);
      sub_1000E3DB0();
      sub_1000E59C0();
      v286._uint64_t countAndFlagsBits = 543516756;
      v286._object = (void *)0xE400000000000000;
      sub_1000E59B0(v286);
      int v119 = WLKIsRegulatedSKU();
      BOOL v120 = v119 == 0;
      if (v119) {
        v121._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v121._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v120) {
        uint64_t v122 = (void *)0xE500000000000000;
      }
      else {
        uint64_t v122 = (void *)0xE400000000000000;
      }
      v121._object = v122;
      sub_1000E59A0(v121);
      swift_bridgeObjectRelease();
      v287._uint64_t countAndFlagsBits = 0xD0000000000000A8;
      v287._object = (void *)0x80000001000EAB80;
      sub_1000E59B0(v287);
      int v123 = WLKIsRegulatedSKU();
      BOOL v124 = v123 == 0;
      if (v123) {
        v125._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v125._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v124) {
        uint64_t v126 = (void *)0xE500000000000000;
      }
      else {
        uint64_t v126 = (void *)0xE400000000000000;
      }
      v125._object = v126;
      sub_1000E59A0(v125);
      swift_bridgeObjectRelease();
      v288._uint64_t countAndFlagsBits = 0xD0000000000000D0;
      v288._object = (void *)0x80000001000EAC30;
      sub_1000E59B0(v288);
      sub_1000E59E0();
      sub_1000E3F00();
      ((void (*)(char *, void, uint64_t))v264)(v109, v272, v273);
      sub_1000E3DB0();
      return sub_1000E3B20();
    case 3:
    case 4:
      uint64_t v264 = (void (*)(char *))((char *)v247 - v66);
      v265 = v67;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v127 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v128 = v273;
      unsigned __int8 v129 = *(void (**)(char *, uint64_t, uint64_t))(v274 + 104);
      uint64_t v130 = v268;
      v129(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      uint64_t v274 = (uint64_t)v129;
      uint64_t v263 = (char *)0x80000001000E87D0;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v129(v130, v127, v128);
      uint64_t v131 = v272;
      sub_1000E3DB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v131, 0, 1, v266);
      uint64_t v132 = v271;
      sub_1000E3AF0();
      uint64_t v133 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v132, 0, 1, v133);
      sub_1000082B4(&qword_10012B8E8);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000EF780;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v134 = v127;
      uint64_t v135 = v127;
      uint64_t v136 = (void (*)(char *, uint64_t, uint64_t))v274;
      ((void (*)(char *, uint64_t, uint64_t))v274)(v130, v134, v128);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v136(v130, v135, v128);
      sub_1000E3DB0();
      return sub_1000E3B20();
    case 5:
    case 11:
      uint64_t v264 = (void (*)(char *))((char *)v247 - v66);
      v265 = v67;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v211 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v212 = v273;
      uint64_t v213 = *(char **)(v274 + 104);
      uint64_t v214 = v268;
      ((void (*)(char *, void, uint64_t))v213)(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      uint64_t v263 = v213;
      uint64_t v262 = (char *)0x80000001000E87D0;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v213)(v214, v211, v212);
      uint64_t v215 = v272;
      sub_1000E3DB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v215, 0, 1, v266);
      uint64_t v216 = v271;
      sub_1000E3AF0();
      uint64_t v217 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v217 - 8) + 56))(v216, 0, 1, v217);
      sub_1000082B4(&qword_10012B8E8);
      uint64_t v274 = swift_allocObject();
      *(_OWORD *)(v274 + 16) = xmmword_1000F0F50;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v218 = v211;
      uint64_t v219 = v211;
      uint64_t v220 = (void (*)(char *, uint64_t, uint64_t))v263;
      ((void (*)(char *, uint64_t, uint64_t))v263)(v214, v219, v212);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v220(v214, v218, v212);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v220(v214, v218, v212);
      goto LABEL_86;
    case 6:
      v247[2] = v64;
      v265 = v69;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v137 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v138 = v273;
      uint64_t v140 = v274 + 104;
      unsigned __int8 v139 = *(char **)(v274 + 104);
      unsigned __int8 v141 = v268;
      ((void (*)(char *, void, uint64_t))v139)(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      uint64_t v274 = v140;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v139)(v141, v137, v138);
      uint64_t v142 = v139;
      uint64_t v143 = v260;
      sub_1000E3DB0();
      uint64_t v144 = v267 + 56;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v143, 0, 1, v266);
      long long v145 = v263;
      sub_1000E3AF0();
      uint64_t v146 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v145, 0, 1, v146);
      sub_1000082B4(&qword_10012B8E8);
      uint64_t v267 = *(void *)(v144 + 16);
      unint64_t v147 = (*(unsigned __int8 *)(v144 + 24) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 24);
      uint64_t v148 = swift_allocObject();
      uint64_t v266 = v148;
      *(_OWORD *)(v148 + 16) = xmmword_1000F3BF0;
      unint64_t v149 = v148 + v147;
      sub_1000E5990();
      sub_1000E3F00();
      LODWORD(v271) = v137;
      uint64_t v272 = v142;
      ((void (*)(char *, uint64_t, uint64_t))v142)(v141, v137, v138);
      sub_1000E3DB0();
      uint64_t v150 = v267;
      uint64_t v262 = (char *)(v149 + v267);
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v142)(v141, v137, v138);
      sub_1000E3DB0();
      uint64_t v262 = (char *)(2 * v150);
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v151 = v271;
      uint64_t v152 = v273;
      uint64_t v153 = v272;
      ((void (*)(char *, void, uint64_t))v272)(v141, v271, v273);
      uint64_t v264 = (void (*)(char *))0x80000001000E87D0;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v153)(v141, v151, v152);
      sub_1000E3DB0();
      sub_1000E59C0();
      uint64_t v154 = (void *)0xE400000000000000;
      v289._uint64_t countAndFlagsBits = 543516756;
      v289._object = (void *)0xE400000000000000;
      sub_1000E59B0(v289);
      int v155 = WLKIsRegulatedSKU();
      BOOL v156 = v155 == 0;
      if (v155) {
        v157._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v157._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v156) {
        uint64_t v154 = (void *)0xE500000000000000;
      }
      v157._object = v154;
      sub_1000E59A0(v157);
      swift_bridgeObjectRelease();
      v290._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
      v290._object = (void *)0x80000001000EA610;
      sub_1000E59B0(v290);
      int v158 = WLKIsRegulatedSKU();
      BOOL v159 = v158 == 0;
      if (v158) {
        v160._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v160._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v159) {
        char v161 = (void *)0xE500000000000000;
      }
      else {
        char v161 = (void *)0xE400000000000000;
      }
      v160._object = v161;
      sub_1000E59A0(v160);
      swift_bridgeObjectRelease();
      v291._uint64_t countAndFlagsBits = 0xD000000000000097;
      v291._object = (void *)0x80000001000EA680;
      sub_1000E59B0(v291);
      sub_1000E59E0();
      sub_1000E3F00();
      ((void (*)(char *, void, uint64_t))v272)(v141, v271, v273);
      sub_1000E3DB0();
      return sub_1000E3B20();
    case 7:
      uint64_t v264 = (void (*)(char *))((char *)v247 - v66);
      v265 = v67;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v162 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v163 = v273;
      uint64_t v164 = *(char **)(v274 + 104);
      uint64_t v165 = v268;
      ((void (*)(char *, void, uint64_t))v164)(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      uint64_t v263 = v164;
      uint64_t v262 = (char *)0x80000001000E87D0;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v164)(v165, v162, v163);
      uint64_t v166 = v272;
      sub_1000E3DB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v166, 0, 1, v266);
      v167 = v271;
      sub_1000E3AF0();
      uint64_t v168 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v168 - 8) + 56))(v167, 0, 1, v168);
      sub_1000082B4(&qword_10012B8E8);
      uint64_t v274 = swift_allocObject();
      *(_OWORD *)(v274 + 16) = xmmword_1000F0F50;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v169 = v162;
      uint64_t v170 = v162;
      uint64_t v171 = (void (*)(char *, uint64_t, uint64_t))v263;
      ((void (*)(char *, uint64_t, uint64_t))v263)(v165, v170, v163);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v171(v165, v169, v163);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v171(v165, v169, v163);
      goto LABEL_86;
    case 8:
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v172 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v173 = v273;
      uint64_t v174 = *(char **)(v274 + 104);
      uint64_t v175 = v268;
      LODWORD(v272) = enum case for LocalizedStringResource.BundleDescription.main(_:);
      ((void (*)(char *, void, uint64_t))v174)(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      v271 = v174;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v174)(v175, v172, v173);
      v176 = v255;
      v265 = (char *)0x80000001000E87D0;
      sub_1000E3DB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v176, 0, 1, v266);
      uint64_t v177 = v257;
      sub_1000E3AF0();
      uint64_t v178 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v178 - 8) + 56))(v177, 0, 1, v178);
      sub_1000082B4(&qword_10012B8E8);
      uint64_t v274 = swift_allocObject();
      *(_OWORD *)(v274 + 16) = xmmword_1000EF780;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v179 = v272;
      uint64_t v180 = v173;
      uint64_t v181 = (void (*)(char *, uint64_t, uint64_t))v271;
      ((void (*)(char *, void, uint64_t))v271)(v175, v272, v180);
      sub_1000E3DB0();
      sub_1000E59C0();
      v292._uint64_t countAndFlagsBits = 0xD0000000000000EELL;
      v292._object = (void *)0x80000001000EA320;
      sub_1000E59B0(v292);
      int v182 = WLKIsRegulatedSKU();
      BOOL v183 = v182 == 0;
      if (v182) {
        v184._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v184._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v183) {
        v185 = (void *)0xE500000000000000;
      }
      else {
        v185 = (void *)0xE400000000000000;
      }
      v184._object = v185;
      sub_1000E59A0(v184);
      swift_bridgeObjectRelease();
      v293._uint64_t countAndFlagsBits = 46;
      v293._object = (void *)0xE100000000000000;
      sub_1000E59B0(v293);
      sub_1000E59E0();
      sub_1000E3F00();
      v181(v175, v179, v273);
      sub_1000E3DB0();
      return sub_1000E3B20();
    case 9:
    case 12:
    case 14:
    case 15:
    case 17:
      uint64_t v264 = (void (*)(char *))((char *)v247 - v66);
      v265 = v67;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v235 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v236 = v273;
      uint64_t v237 = *(char **)(v274 + 104);
      uint64_t v238 = v268;
      ((void (*)(char *, void, uint64_t))v237)(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      uint64_t v263 = v237;
      uint64_t v262 = (char *)0x80000001000E87D0;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v237)(v238, v235, v236);
      uint64_t v239 = v272;
      sub_1000E3DB0();
      uint64_t v240 = v267 + 56;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v239, 0, 1, v266);
      v241 = v271;
      sub_1000E3AF0();
      uint64_t v242 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v242 - 8) + 56))(v241, 0, 1, v242);
      sub_1000082B4(&qword_10012B8E8);
      uint64_t v267 = 2 * *(void *)(v240 + 16);
      uint64_t v274 = swift_allocObject();
      *(_OWORD *)(v274 + 16) = xmmword_1000F2510;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v243 = v235;
      uint64_t v244 = v235;
      uint64_t v245 = (void (*)(char *, uint64_t, uint64_t))v263;
      ((void (*)(char *, uint64_t, uint64_t))v263)(v238, v244, v236);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v245(v238, v243, v236);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v245(v238, v243, v236);
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v245(v238, v243, v236);
LABEL_86:
      sub_1000E3DB0();
      break;
    case 10:
      BOOL v186 = v49;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v187 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v188 = v273;
      uint64_t v190 = v274 + 104;
      uint64_t v189 = *(char **)(v274 + 104);
      uint64_t v191 = v268;
      LODWORD(v265) = enum case for LocalizedStringResource.BundleDescription.main(_:);
      ((void (*)(char *, void, uint64_t))v189)(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      uint64_t v274 = v190;
      v271 = (char *)0x80000001000E87D0;
      uint64_t v272 = v189;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v189)(v191, v187, v188);
      v192 = v256;
      uint64_t v193 = v186;
      uint64_t v194 = v191;
      sub_1000E3DB0();
      uint64_t v195 = v267 + 56;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v192, 0, 1, v266);
      uint64_t v196 = v258;
      sub_1000E3AF0();
      uint64_t v197 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v197 - 8) + 56))(v196, 0, 1, v197);
      sub_1000082B4(&qword_10012B8E8);
      uint64_t v266 = *(void *)(v195 + 16);
      unint64_t v198 = (*(unsigned __int8 *)(v195 + 24) + 32) & ~(unint64_t)*(unsigned __int8 *)(v195 + 24);
      uint64_t v199 = swift_allocObject();
      uint64_t v267 = v199;
      *(_OWORD *)(v199 + 16) = xmmword_1000F0F50;
      unint64_t v200 = v199 + v198;
      uint64_t v248 = v193;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v201 = v265;
      uint64_t v203 = v272;
      uint64_t v202 = v273;
      ((void (*)(char *, void, uint64_t))v272)(v194, v265, v273);
      sub_1000E3DB0();
      v266 += v200;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v204 = v194;
      uint64_t v205 = v194;
      uint64_t v206 = v201;
      ((void (*)(char *, uint64_t, uint64_t))v203)(v205, v201, v202);
      sub_1000E3DB0();
      sub_1000E59C0();
      v294._uint64_t countAndFlagsBits = 0xD0000000000000FCLL;
      v294._object = (void *)0x80000001000EA060;
      sub_1000E59B0(v294);
      int v207 = WLKIsRegulatedSKU();
      BOOL v208 = v207 == 0;
      if (v207) {
        v209._uint64_t countAndFlagsBits = 1312902231;
      }
      else {
        v209._uint64_t countAndFlagsBits = 0x69462D6957;
      }
      if (v208) {
        uint64_t v210 = (void *)0xE500000000000000;
      }
      else {
        uint64_t v210 = (void *)0xE400000000000000;
      }
      v209._object = v210;
      sub_1000E59A0(v209);
      swift_bridgeObjectRelease();
      v295._uint64_t countAndFlagsBits = 46;
      v295._object = (void *)0xE100000000000000;
      sub_1000E59B0(v295);
      sub_1000E59E0();
      sub_1000E3F00();
      ((void (*)(char *, uint64_t, uint64_t))v272)(v204, v206, v273);
      sub_1000E3DB0();
      break;
    case 13:
      uint64_t v264 = (void (*)(char *))((char *)v247 - v66);
      v265 = v67;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v221 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v222 = *(void (**)(char *, uint64_t, uint64_t))(v274 + 104);
      uint64_t v223 = v268;
      LODWORD(v263) = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v224 = v273;
      v222(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      uint64_t v274 = (uint64_t)v222;
      uint64_t v262 = (char *)0x80000001000E87D0;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v222(v223, v221, v224);
      uint64_t v225 = v272;
      sub_1000E3DB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v225, 0, 1, v266);
      uint64_t v226 = v271;
      sub_1000E3AF0();
      uint64_t v227 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v227 - 8) + 56))(v226, 0, 1, v227);
      sub_1000082B4(&qword_10012B8E8);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000F3BE0;
      sub_1000E3D80();
      sub_1000E3D80();
      sub_1000E3D80();
      sub_1000E3D80();
      sub_1000E3D80();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, void, uint64_t))v274)(v223, v263, v273);
      sub_1000E3DB0();
      break;
    case 16:
      uint64_t v264 = (void (*)(char *))((char *)v247 - v66);
      v265 = v67;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v228 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v229 = *(void (**)(char *, uint64_t, uint64_t))(v274 + 104);
      v230 = v268;
      LODWORD(v263) = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v231 = v273;
      v229(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      uint64_t v274 = (uint64_t)v229;
      uint64_t v262 = (char *)0x80000001000E87D0;
      sub_1000E3DB0();
      sub_1000E5990();
      sub_1000E3F00();
      v229(v230, v228, v231);
      v232 = v272;
      sub_1000E3DB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v267 + 56))(v232, 0, 1, v266);
      v233 = v271;
      sub_1000E3AF0();
      uint64_t v234 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v234 - 8) + 56))(v233, 0, 1, v234);
      sub_1000082B4(&qword_10012B8E8);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000F0F50;
      sub_1000E3D80();
      sub_1000E3D80();
      sub_1000E5990();
      sub_1000E3F00();
      ((void (*)(char *, void, uint64_t))v274)(v230, v263, v231);
      sub_1000E3DB0();
      break;
    default:
      uint64_t v264 = (void (*)(char *))((char *)v247 - v66);
      v265 = v67;
      sub_1000E5990();
      sub_1000E3F00();
      uint64_t v70 = enum case for LocalizedStringResource.BundleDescription.main(_:);
      uint64_t v71 = v273;
      char v72 = *(void (**)(char *, uint64_t, uint64_t))(v274 + 104);
      uint64_t v73 = v268;
      v72(v268, enum case for LocalizedStringResource.BundleDescription.main(_:), v273);
      sub_1000E3DB0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v267 + 56))(v272, 1, 1, v266);
      unint64_t v74 = v271;
      sub_1000E3AF0();
      uint64_t v75 = sub_1000E3B00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 0, 1, v75);
      sub_1000E5990();
      sub_1000E3F00();
      v72(v73, v70, v71);
      sub_1000E3DB0();
      break;
  }
  return sub_1000E3B20();
}

uint64_t sub_1000697BC()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100142050);
  sub_100008498(v10, (uint64_t)qword_100142050);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_100069AA0(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_10012CE20 + dword_10012CE20);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1000168D4;
  return v5(a1);
}

uint64_t sub_100069B48(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_10012CE10 + dword_10012CE10);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_100018660;
  return v4();
}

unint64_t sub_100069BF0()
{
  unint64_t result = qword_10012CC88;
  if (!qword_10012CC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CC88);
  }
  return result;
}

uint64_t sub_100069C44(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_10012CE00 + dword_10012CE00);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_100016604;
  return v4();
}

unint64_t sub_100069CEC()
{
  unint64_t result = qword_10012CC98;
  if (!qword_10012CC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CC98);
  }
  return result;
}

unint64_t sub_100069D44()
{
  unint64_t result = qword_10012CCA0;
  if (!qword_10012CCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CCA0);
  }
  return result;
}

unint64_t sub_100069D9C()
{
  unint64_t result = qword_10012CCA8;
  if (!qword_10012CCA8)
  {
    sub_100008354(qword_10012CCB0);
    sub_100069D44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CCA8);
  }
  return result;
}

uint64_t sub_100069E10(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100069BF0();
  void *v5 = v2;
  v5[1] = sub_100015DF8;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100069EC4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_10012CDE0 + dword_10012CDE0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_100069F68;
  return v4();
}

uint64_t sub_100069F68(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();
  void *v5 = a1;
  v5[1] = a2;
  unint64_t v6 = *(uint64_t (**)(void))(v8 + 8);
  return v6();
}

unint64_t sub_10006A088()
{
  unint64_t result = qword_10012CCC8;
  if (!qword_10012CCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CCC8);
  }
  return result;
}

uint64_t sub_10006A0DC()
{
  uint64_t v0 = sub_1000082B4(&qword_10012CDC0);
  __chkstk_darwin(v0);
  sub_100064F34();
  sub_1000E3C10();
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  sub_1000E3C00(v2);
  swift_getKeyPath();
  sub_1000082B4(&qword_10012CDC8);
  sub_100014AC4(&qword_10012CDD0, &qword_10012CDD8);
  sub_1000E3BF0();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  sub_1000E3C00(v3);
  return sub_1000E3C20();
}

uint64_t sub_10006A224()
{
  uint64_t v0 = qword_10012CC48;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10006A260()
{
  unint64_t result = qword_10012CCD0;
  if (!qword_10012CCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CCD0);
  }
  return result;
}

unint64_t sub_10006A2B8()
{
  unint64_t result = qword_10012CCD8;
  if (!qword_10012CCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CCD8);
  }
  return result;
}

unint64_t sub_10006A310()
{
  unint64_t result = qword_10012CCE0;
  if (!qword_10012CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CCE0);
  }
  return result;
}

unint64_t sub_10006A368()
{
  unint64_t result = qword_10012CCE8;
  if (!qword_10012CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CCE8);
  }
  return result;
}

uint64_t sub_10006A3BC()
{
  sub_10006D58C();
  uint64_t v2 = sub_1000E3BA0();
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

unint64_t sub_10006A454()
{
  unint64_t result = qword_10012CCF8;
  if (!qword_10012CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CCF8);
  }
  return result;
}

unint64_t sub_10006A4AC()
{
  unint64_t result = qword_10012CD00;
  if (!qword_10012CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CD00);
  }
  return result;
}

unint64_t sub_10006A504()
{
  unint64_t result = qword_10012CD08;
  if (!qword_10012CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CD08);
  }
  return result;
}

unint64_t sub_10006A55C()
{
  unint64_t result = qword_10012CD10;
  if (!qword_10012CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CD10);
  }
  return result;
}

uint64_t sub_10006A5B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10006AF78(&qword_100129D18, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100142050, a1);
}

uint64_t sub_10006A5E8()
{
  return sub_100014AC4(&qword_10012CD18, &qword_10012CD20);
}

uint64_t sub_10006A624(uint64_t a1)
{
  unint64_t v2 = sub_100064F34();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10006A674()
{
  unint64_t result = qword_10012CD28;
  if (!qword_10012CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CD28);
  }
  return result;
}

uint64_t sub_10006A6C8@<X0>(uint64_t a1@<X8>)
{
  return sub_10006501C(*v1, a1);
}

uint64_t sub_10006A6D0(uint64_t a1)
{
  unint64_t v2 = sub_10006A504();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10006A720()
{
  unint64_t result = qword_10012CD30;
  if (!qword_10012CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CD30);
  }
  return result;
}

void *sub_10006A774()
{
  sub_1000082B4(&qword_10012CD60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000F3C00;
  type metadata accessor for TVSettingsPlaybackWifiQualityEntity();
  sub_1000082B4(&qword_10012CD68);
  *(void *)(inited + 32) = sub_1000E5A20();
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 48) = 1;
  type metadata accessor for TVSettingsDownloadWifiQualityEntity();
  sub_1000082B4(&qword_10012CD70);
  *(void *)(inited + 56) = sub_1000E5A20();
  *(void *)(inited + 64) = v2;
  *(unsigned char *)(inited + 72) = 2;
  sub_1000082B4(&qword_10012BCB8);
  *(void *)(inited + 80) = sub_1000E5A20();
  *(void *)(inited + 88) = v3;
  *(unsigned char *)(inited + 96) = 4;
  sub_1000082B4(&qword_10012A588);
  *(void *)(inited + 104) = sub_1000E5A20();
  *(void *)(inited + 112) = v4;
  *(unsigned char *)(inited + 120) = 5;
  sub_1000082B4(&qword_10012CD78);
  *(void *)(inited + 128) = sub_1000E5A20();
  *(void *)(inited + 136) = v5;
  *(unsigned char *)(inited + 144) = 6;
  sub_1000082B4(&qword_10012A7C8);
  *(void *)(inited + 152) = sub_1000E5A20();
  *(void *)(inited + 160) = v6;
  *(unsigned char *)(inited + 168) = 7;
  sub_1000082B4(&qword_10012CA90);
  *(void *)(inited + 176) = sub_1000E5A20();
  *(void *)(inited + 184) = v7;
  *(unsigned char *)(inited + 192) = 8;
  sub_1000082B4(&qword_10012CD80);
  *(void *)(inited + 200) = sub_1000E5A20();
  *(void *)(inited + 208) = v8;
  *(unsigned char *)(inited + 216) = 9;
  sub_1000082B4(&qword_10012CD88);
  *(void *)(inited + 224) = sub_1000E5A20();
  *(void *)(inited + 232) = v9;
  *(unsigned char *)(inited + 240) = 10;
  sub_1000082B4(&qword_10012B0C0);
  *(void *)(inited + 248) = sub_1000E5A20();
  *(void *)(inited + 256) = v10;
  *(unsigned char *)(inited + 264) = 11;
  sub_1000082B4(&qword_10012CD90);
  *(void *)(inited + 272) = sub_1000E5A20();
  *(void *)(inited + 280) = v11;
  *(unsigned char *)(inited + 288) = 12;
  sub_1000082B4(&qword_10012CD98);
  *(void *)(inited + 296) = sub_1000E5A20();
  *(void *)(inited + 304) = v12;
  *(unsigned char *)(inited + 312) = 13;
  sub_1000082B4(&qword_10012B3D0);
  *(void *)(inited + 320) = sub_1000E5A20();
  *(void *)(inited + 328) = v13;
  *(unsigned char *)(inited + 336) = 16;
  unint64_t result = (void *)sub_100034868(inited);
  off_10012CC58 = result;
  return result;
}

uint64_t sub_10006AA3C()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  sub_100008434(v6, qword_100142068);
  sub_100008498(v6, (uint64_t)qword_100142068);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1000E3DB0();
}

uint64_t sub_10006AC2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000E3A40();
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10006AC70()
{
  return swift_release();
}

void (*sub_10006ACC0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000E3A30();
  return sub_100015AA4;
}

unint64_t sub_10006AD20()
{
  unint64_t result = qword_10012CD38;
  if (!qword_10012CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CD38);
  }
  return result;
}

unint64_t sub_10006AD78()
{
  unint64_t result = qword_10012CD40;
  if (!qword_10012CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CD40);
  }
  return result;
}

uint64_t sub_10006ADCC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10006D4E4();
  unint64_t v5 = sub_10006D58C();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

unint64_t sub_10006AE44()
{
  unint64_t result = qword_10012CD48;
  if (!qword_10012CD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CD48);
  }
  return result;
}

unint64_t sub_10006AE9C()
{
  unint64_t result = qword_10012CD50;
  if (!qword_10012CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CD50);
  }
  return result;
}

uint64_t sub_10006AEF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006AF40@<X0>(uint64_t a1@<X8>)
{
  return sub_10006AF78(&qword_100129D28, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100142068, a1);
}

uint64_t sub_10006AF78@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100008498(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10006B020(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10006D4E4();
  unint64_t v7 = sub_10006D538();
  unint64_t v8 = sub_10006D58C();
  void *v5 = v2;
  v5[1] = sub_10006B0F4;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10006B0F4()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    unint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_10006B1FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006D090();
  *a1 = result;
  return result;
}

uint64_t sub_10006B224(uint64_t a1)
{
  unint64_t v2 = sub_10006AD20();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenTVSettingsDeeplinks()
{
  return &type metadata for OpenTVSettingsDeeplinks;
}

ValueMetadata *type metadata accessor for TVSettingsDeeplinks()
{
  return &type metadata for TVSettingsDeeplinks;
}

ValueMetadata *type metadata accessor for TVSettingsDeeplinks.AvailableTVSettingsDestinationQuery()
{
  return &type metadata for TVSettingsDeeplinks.AvailableTVSettingsDestinationQuery;
}

char *sub_10006B290(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006B340(a1, a2, a3, *v3);
  char *v3 = result;
  return result;
}

char *sub_10006B2B0(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006B548(a1, a2, a3, *v3, &qword_10012CE18);
  char *v3 = result;
  return result;
}

char *sub_10006B2D8(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006B444(a1, a2, a3, *v3);
  char *v3 = result;
  return result;
}

char *sub_10006B2F8(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006B548(a1, a2, a3, *v3, &qword_10012CE28);
  char *v3 = result;
  return result;
}

char *sub_10006B320(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006B630(a1, a2, a3, *v3);
  char *v3 = result;
  return result;
}

char *sub_10006B340(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000082B4(&qword_10012CE08);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10006B444(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000082B4(&qword_10012CE30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10006B548(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    sub_1000082B4(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    int64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v9);
  }
  swift_release();
  return v11;
}

char *sub_10006B630(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000082B4(&qword_10012CE38);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_10006B72C()
{
  return _swift_task_switch(sub_10006B748, 0, 0);
}

uint64_t sub_10006B748()
{
  if (sub_1000E50A0())
  {
    uint64_t v1 = sub_10006B9FC((uint64_t)&off_100120330);
    int64_t v2 = v1[2];
    if (v2)
    {
      sub_10006B290(0, v2, 0);
      uint64_t v3 = 0;
      do
      {
        char v4 = *((unsigned char *)v1 + v3 + 32);
        sub_1000082B4(&qword_10012CDD8);
        swift_allocObject();
        uint64_t v5 = sub_1000E3C70();
        unint64_t v7 = _swiftEmptyArrayStorage[2];
        unint64_t v6 = _swiftEmptyArrayStorage[3];
        if (v7 >= v6 >> 1) {
          sub_10006B290((char *)(v6 > 1), v7 + 1, 1);
        }
        ++v3;
        _swiftEmptyArrayStorage[2] = v7 + 1;
        uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
        *((unsigned char *)v8 + 32) = v4;
        v8[5] = v5;
      }
      while (v2 != v3);
    }
    swift_bridgeObjectRelease();
    sub_1000E5CC0(60);
    v13._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
    v13._object = (void *)0x80000001000EAFF0;
    sub_1000E5A70(v13);
    v14._uint64_t countAndFlagsBits = sub_1000E5AD0();
    sub_1000E5A70(v14);
    swift_bridgeObjectRelease();
    sub_1000E3EF0();
    swift_bridgeObjectRelease();
    int64_t v11 = *(uint64_t (**)(void *))(v0 + 8);
    return v11(_swiftEmptyArrayStorage);
  }
  else
  {
    sub_1000E3EF0();
    sub_1000E3910();
    sub_100018534();
    swift_allocError();
    sub_1000E38E0();
    swift_willThrow();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

void *sub_10006B9FC(uint64_t a1)
{
  uint64_t v2 = sub_1000082B4(&qword_10012CDE8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v63 = (char *)&v58 - v7;
  __chkstk_darwin(v6);
  uint64_t v62 = (char *)&v58 - v8;
  unint64_t v64 = *(void *)(a1 + 16);
  if (!v64) {
    return &_swiftEmptyArrayStorage;
  }
  unint64_t v9 = 0;
  uint64_t v61 = a1 + 32;
  int64_t v10 = &_swiftEmptyArrayStorage;
  CFAllocatorRef v66 = kCFAllocatorDefault;
  uint64_t v59 = " - defaultResult() -> ";
  unint64_t v60 = 0x80000001000EAEF0;
  unint64_t v58 = 0x80000001000EAF30;
LABEL_3:
  uint64_t v65 = v10;
  uint64_t v11 = 0;
  unint64_t v12 = v64;
  if (v9 <= v64) {
    unint64_t v13 = v64;
  }
  else {
    unint64_t v13 = v9;
  }
  unint64_t v14 = v9 - v13;
  uint64_t v15 = v61;
  while (2)
  {
    if (!(v14 + v11))
    {
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
    }
    uint64_t v18 = *(unsigned __int8 *)(v15 + v9);
    id v19 = (id)WLKSystemSettingsDebugOverride();
    if (v19)
    {
      uint64_t v20 = v19;
      unsigned int v21 = [v19 BOOLValue:v58, v59, v60];

      if (v21)
      {
        sub_1000E3EF0();
        goto LABEL_43;
      }
    }
    switch(v18)
    {
      case 7:
      case 8:
        uint64_t v71 = 0;
        long long v69 = 0u;
        long long v70 = 0u;
        NSString v25 = sub_1000E5A00();
        uint64_t v26 = _CTServerConnectionCreateAndLaunchWithIdentifier();

        if (!v26) {
          goto LABEL_39;
        }
        char v67 = 0;
        _CTServerConnectionGetCellularDataIsEnabled();
        if (v67) {
          goto LABEL_43;
        }
        goto LABEL_8;
      case 9:
        uint64_t v71 = 0;
        long long v69 = 0u;
        long long v70 = 0u;
        NSString v27 = sub_1000E5A00();
        uint64_t v28 = _CTServerConnectionCreateAndLaunchWithIdentifier();

        if (!v28) {
          goto LABEL_39;
        }
        char v67 = 0;
        _CTServerConnectionGetCellularDataIsEnabled();
        if (!v67) {
          goto LABEL_8;
        }
        id v29 = [self sharedPreferences];
        unsigned __int8 v30 = [v29 useCellularDataPlayback];

        if ((v30 & 1) == 0) {
          goto LABEL_8;
        }
        LOBYTE(v18) = 9;
        goto LABEL_43;
      case 10:
        uint64_t v71 = 0;
        long long v69 = 0u;
        long long v70 = 0u;
        NSString v31 = sub_1000E5A00();
        uint64_t v32 = _CTServerConnectionCreateAndLaunchWithIdentifier();

        if (v32)
        {
          char v67 = 0;
          _CTServerConnectionGetCellularDataIsEnabled();
          if (v67)
          {
            id v33 = [self sharedPreferences];
            unsigned __int8 v34 = [v33 useCellularDataDownload];

            if (v34)
            {
              LOBYTE(v18) = 10;
              goto LABEL_43;
            }
          }
        }
        else
        {
LABEL_39:
          sub_1000E3EF0();
        }
        goto LABEL_8;
      case 11:
      case 12:
      case 13:
        id v22 = [self defaultStore];
        if (!v22) {
          goto LABEL_53;
        }
        uint64_t v23 = v22;
        sub_1000E5BA0();

        uint64_t v24 = sub_1000E5100();
        LODWORD(v23) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v5, 1, v24);
        sub_10006D5E0((uint64_t)v5);
        if (v23 != 1) {
          goto LABEL_43;
        }
        goto LABEL_8;
      case 14:
        id v35 = [self defaultStore];
        if (!v35) {
          goto LABEL_54;
        }
        uint64_t v36 = v35;
        uint64_t v37 = (uint64_t)v62;
        sub_1000E5BA0();

        uint64_t v38 = sub_1000E5100();
        int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v37, 1, v38);
        sub_10006D5E0(v37);
        if (v39 == 1) {
          goto LABEL_41;
        }
        id v40 = [self defaultStore];
        if (!v40) {
          goto LABEL_55;
        }
        uint64_t v41 = v40;
        id v42 = [v40 groupID];

        if (v42)
        {

LABEL_8:
          ++v11;
          ++v15;
          if (v9 == --v12) {
            return v65;
          }
          continue;
        }
LABEL_41:
        LOBYTE(v18) = 14;
LABEL_43:
        int64_t v10 = v65;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        long long v68 = v10;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10006B2B0(0, v10[2] + 1, 1);
          int64_t v10 = v68;
        }
        unint64_t v55 = v10[2];
        unint64_t v54 = v10[3];
        if (v55 >= v54 >> 1)
        {
          sub_10006B2B0((char *)(v54 > 1), v55 + 1, 1);
          int64_t v10 = v68;
        }
        unint64_t v56 = v9 + 1;
        v9 += 1 + v11;
        v10[2] = v55 + 1;
        *((unsigned char *)v10 + v55 + 32) = v18;
        if (v56 != v12) {
          goto LABEL_3;
        }
        return v10;
      case 15:
        id v43 = [self defaultStore];
        if (!v43) {
          goto LABEL_56;
        }
        uint64_t v44 = v43;
        uint64_t v45 = (uint64_t)v63;
        sub_1000E5BA0();

        uint64_t v46 = sub_1000E5100();
        int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v45, 1, v46);
        sub_10006D5E0(v45);
        if (v47 == 1) {
          goto LABEL_8;
        }
        id v48 = [self defaultStore];
        if (!v48)
        {
          __break(1u);
          JUMPOUT(0x10006C1B0);
        }
        char v49 = v48;
        id v50 = [v48 groupID];

        if (!v50) {
          goto LABEL_8;
        }

        LOBYTE(v18) = 15;
        goto LABEL_43;
      case 16:
        id v16 = [self sharedPreferences];
        unsigned __int8 v17 = [v16 hasAVAdapterEvenBeenConnected];

        if ((v17 & 1) == 0) {
          goto LABEL_8;
        }
        LOBYTE(v18) = 16;
        goto LABEL_43;
      case 17:
        id v51 = [self sharedPreferences];
        unsigned __int8 v52 = [v51 subtitleDefaultLanguageEnabledDownload];

        if (v52) {
          goto LABEL_8;
        }
        LOBYTE(v18) = 17;
        goto LABEL_43;
      default:
        goto LABEL_43;
    }
  }
}

uint64_t sub_10006C1F8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10006C218, 0, 0);
}

uint64_t sub_10006C218()
{
  if (sub_1000E50A0())
  {
    uint64_t v1 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_10006B9FC(v1);
    swift_bridgeObjectRelease();
    int64_t v3 = v2[2];
    if (v3)
    {
      sub_10006B290(0, v3, 0);
      uint64_t v4 = 0;
      do
      {
        char v5 = *((unsigned char *)v2 + v4 + 32);
        sub_1000082B4(&qword_10012CDD8);
        swift_allocObject();
        uint64_t v6 = sub_1000E3C70();
        unint64_t v8 = _swiftEmptyArrayStorage[2];
        unint64_t v7 = _swiftEmptyArrayStorage[3];
        if (v8 >= v7 >> 1) {
          sub_10006B290((char *)(v7 > 1), v8 + 1, 1);
        }
        ++v4;
        _swiftEmptyArrayStorage[2] = v8 + 1;
        unint64_t v9 = (char *)&_swiftEmptyArrayStorage[2 * v8];
        v9[32] = v5;
        *((void *)v9 + 5) = v6;
      }
      while (v3 != v4);
    }
    swift_bridgeObjectRelease();
    sub_1000E5CC0(70);
    v14._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
    v14._object = (void *)0x80000001000EB030;
    sub_1000E5A70(v14);
    v15._uint64_t countAndFlagsBits = sub_1000E5AD0();
    sub_1000E5A70(v15);
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = 0x203E2D2029;
    v16._object = (void *)0xE500000000000000;
    sub_1000E5A70(v16);
    v17._uint64_t countAndFlagsBits = sub_1000E5AD0();
    sub_1000E5A70(v17);
    swift_bridgeObjectRelease();
    sub_1000E3EF0();
    swift_bridgeObjectRelease();
    unint64_t v12 = *(uint64_t (**)(void *))(v0 + 8);
    return v12(_swiftEmptyArrayStorage);
  }
  else
  {
    sub_1000E3EF0();
    sub_1000E3910();
    sub_100018534();
    swift_allocError();
    sub_1000E38E0();
    swift_willThrow();
    int64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_10006C518()
{
  sub_1000082B4(&qword_10012CDE8);
  v0[19] = swift_task_alloc();
  v0[20] = swift_task_alloc();
  v0[21] = swift_task_alloc();
  return _swift_task_switch(sub_10006C5F0, 0, 0);
}

uint64_t sub_10006C5F0()
{
  uint64_t v1 = 18;
  id v43 = (unsigned char *)(v0 + 177);
  uint64_t v44 = (unsigned char *)(v0 + 176);
  uint64_t v45 = (unsigned char *)(v0 + 178);
  uint64_t v2 = &byte_100120350;
  while (1)
  {
    unsigned int v6 = *v2++;
    unint64_t v5 = v6;
    id v7 = (id)WLKSystemSettingsDebugOverride();
    if (v7)
    {
      unint64_t v8 = v7;
      unsigned int v9 = [v7 BOOLValue];

      if (v9) {
        break;
      }
    }
    switch(v5)
    {
      case 7uLL:
      case 8uLL:
        *(void *)(v0 + 128) = 0;
        *(_OWORD *)(v0 + 96) = 0u;
        *(_OWORD *)(v0 + 112) = 0u;
        NSString v14 = sub_1000E5A00();
        uint64_t v15 = _CTServerConnectionCreateAndLaunchWithIdentifier();

        if (!v15) {
          goto LABEL_33;
        }
        *uint64_t v45 = 0;
        _CTServerConnectionGetCellularDataIsEnabled();
        if (*v45) {
          goto LABEL_38;
        }
        goto LABEL_3;
      case 9uLL:
        *(void *)(v0 + 48) = 0;
        *(_OWORD *)(v0 + 16) = 0u;
        *(_OWORD *)(v0 + 32) = 0u;
        NSString v16 = sub_1000E5A00();
        uint64_t v17 = _CTServerConnectionCreateAndLaunchWithIdentifier();

        if (!v17) {
          goto LABEL_33;
        }
        *uint64_t v44 = 0;
        _CTServerConnectionGetCellularDataIsEnabled();
        if (!*v44) {
          goto LABEL_3;
        }
        id v18 = [self sharedPreferences];
        unsigned __int8 v19 = [v18 useCellularDataPlayback];

        if ((v19 & 1) == 0) {
          goto LABEL_3;
        }
        LODWORD(v5) = 9;
        goto LABEL_38;
      case 0xAuLL:
        *(void *)(v0 + 88) = 0;
        *(_OWORD *)(v0 + 56) = 0u;
        *(_OWORD *)(v0 + 72) = 0u;
        NSString v20 = sub_1000E5A00();
        uint64_t v21 = _CTServerConnectionCreateAndLaunchWithIdentifier();

        if (v21)
        {
          unsigned char *v43 = 0;
          _CTServerConnectionGetCellularDataIsEnabled();
          if (*v43)
          {
            id v22 = [self sharedPreferences];
            unsigned __int8 v23 = [v22 useCellularDataDownload];

            if (v23)
            {
              LODWORD(v5) = 10;
              goto LABEL_38;
            }
          }
        }
        else
        {
LABEL_33:
          sub_1000E3EF0();
        }
        goto LABEL_3;
      case 0xBuLL:
      case 0xCuLL:
      case 0xDuLL:
        id v10 = [self defaultStore];
        if (!v10) {
          __break(1u);
        }
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)(v0 + 152);
        sub_1000E5BA0();

        uint64_t v13 = sub_1000E5100();
        LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13);
        sub_10006D5E0(v12);
        if (v11 != 1) {
          goto LABEL_38;
        }
        goto LABEL_3;
      case 0xEuLL:
        id v24 = [self defaultStore];
        if (!v24)
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          JUMPOUT(0x10006CDB0);
        }
        NSString v25 = v24;
        uint64_t v26 = *(void *)(v0 + 168);
        sub_1000E5BA0();

        uint64_t v27 = sub_1000E5100();
        LODWORD(v25) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27);
        sub_10006D5E0(v26);
        if (v25 == 1) {
          goto LABEL_36;
        }
        id v28 = [self defaultStore];
        if (!v28) {
          goto LABEL_45;
        }
        id v29 = v28;
        id v30 = [v28 groupID];

        if (!v30)
        {
LABEL_36:
          LODWORD(v5) = 14;
          goto LABEL_38;
        }

LABEL_3:
        if (!--v1)
        {
          uint64_t v39 = 0;
          uint64_t v40 = 0;
          goto LABEL_39;
        }
        break;
      case 0xFuLL:
        id v31 = [self defaultStore];
        if (!v31) {
          goto LABEL_44;
        }
        uint64_t v32 = v31;
        uint64_t v33 = *(void *)(v0 + 160);
        sub_1000E5BA0();

        uint64_t v34 = sub_1000E5100();
        LODWORD(v32) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34);
        sub_10006D5E0(v33);
        if (v32 == 1) {
          goto LABEL_3;
        }
        id v35 = [self defaultStore];
        if (!v35) {
          goto LABEL_46;
        }
        uint64_t v36 = v35;
        unint64_t v5 = (unint64_t)[v35 groupID];

        if (!v5) {
          goto LABEL_3;
        }

        LODWORD(v5) = 15;
        goto LABEL_38;
      case 0x10uLL:
        id v3 = [self sharedPreferences];
        unsigned __int8 v4 = [v3 hasAVAdapterEvenBeenConnected];

        if ((v4 & 1) == 0) {
          goto LABEL_3;
        }
        LODWORD(v5) = 16;
        goto LABEL_38;
      case 0x11uLL:
        id v37 = [self sharedPreferences];
        unsigned __int8 v38 = [v37 subtitleDefaultLanguageEnabledDownload];

        if (v38) {
          goto LABEL_3;
        }
        LODWORD(v5) = 17;
        goto LABEL_38;
      default:
        goto LABEL_38;
    }
  }
  sub_1000E3EF0();
LABEL_38:
  sub_1000082B4(&qword_10012CDD8);
  swift_allocObject();
  uint64_t v40 = sub_1000E3C70();
  uint64_t v39 = v5;
LABEL_39:
  sub_1000E5CC0(56);
  v47._uint64_t countAndFlagsBits = 0xD000000000000036;
  v47._object = (void *)0x80000001000EAEB0;
  sub_1000E5A70(v47);
  *(void *)(v0 + 136) = v39;
  *(void *)(v0 + 144) = v40;
  swift_retain();
  sub_1000082B4(&qword_10012CDF8);
  v48._uint64_t countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v48);
  swift_bridgeObjectRelease();
  sub_1000E3EF0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v41(v39, v40);
}

uint64_t sub_10006CDF8()
{
  return _swift_task_switch(sub_10006CE14, 0, 0);
}

uint64_t sub_10006CE14()
{
  if (sub_1000E50A0())
  {
    uint64_t v1 = 18;
    sub_10006B290(0, 18, 0);
    uint64_t v2 = &byte_100120350;
    do
    {
      char v4 = *v2++;
      char v3 = v4;
      sub_1000082B4(&qword_10012CDD8);
      swift_allocObject();
      uint64_t v5 = sub_1000E3C70();
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_10006B290((char *)(v6 > 1), v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      unint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      *((unsigned char *)v8 + 32) = v3;
      v8[5] = v5;
      --v1;
    }
    while (v1);
    sub_1000E5CC0(54);
    v13._uint64_t countAndFlagsBits = 0xD000000000000034;
    v13._object = (void *)0x80000001000EAFB0;
    sub_1000E5A70(v13);
    v14._uint64_t countAndFlagsBits = sub_1000E5AD0();
    sub_1000E5A70(v14);
    swift_bridgeObjectRelease();
    sub_1000E3EF0();
    swift_bridgeObjectRelease();
    uint64_t v11 = *(uint64_t (**)(void *))(v0 + 8);
    return v11(_swiftEmptyArrayStorage);
  }
  else
  {
    sub_1000E3EF0();
    sub_1000E3910();
    sub_100018534();
    swift_allocError();
    sub_1000E38E0();
    swift_willThrow();
    unsigned int v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_10006D090()
{
  uint64_t v0 = sub_1000E3B90();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  unsigned __int8 v23 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v7 - 8);
  unsigned int v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E3D90();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000E3F10();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000E59F0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000E3DA0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v21 = sub_1000082B4(&qword_10012CDA0);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v9, 1, 1, v16);
  uint64_t v18 = sub_1000E3A00();
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  unsigned __int8 v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v6, 1, 1, v18);
  v19(v22, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for InputConnectionBehavior.default(_:), v25);
  sub_100064F34();
  return sub_1000E3A70();
}

unint64_t sub_10006D4E4()
{
  unint64_t result = qword_10012CDA8;
  if (!qword_10012CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CDA8);
  }
  return result;
}

unint64_t sub_10006D538()
{
  unint64_t result = qword_10012CDB0;
  if (!qword_10012CDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CDB0);
  }
  return result;
}

unint64_t sub_10006D58C()
{
  unint64_t result = qword_10012CDB8;
  if (!qword_10012CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CDB8);
  }
  return result;
}

uint64_t sub_10006D5E0(uint64_t a1)
{
  uint64_t v2 = sub_1000082B4(&qword_10012CDE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10006D644()
{
  uint64_t v0 = self;
  NSString v1 = sub_1000E5A00();
  id v2 = [v0 userFacingAudioLanguageTitles:v1];

  uint64_t v3 = sub_1000E5910();
  qword_100142080 = v3;
}

uint64_t sub_10006D6D4()
{
  NSString v0 = sub_1000E5A00();
  uint64_t v1 = _CTServerConnectionCreateAndLaunchWithIdentifier();

  if (v1) {
    _CTServerConnectionGetCellularDataIsEnabled();
  }
  else {
    sub_1000E3EF0();
  }
  return 0;
}

uint64_t sub_10006D7D4()
{
  uint64_t v0 = sub_1000082B4(&qword_10012CDE8);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)[self defaultStore];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = (void *)result;
  sub_1000E5BA0();

  uint64_t v5 = sub_1000E5100();
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v2, 1, v5);
  sub_1000147B8((uint64_t)v2, &qword_10012CDE8);
  if (v4 != 1)
  {
    uint64_t result = (uint64_t)[self defaultStore];
    if (result)
    {
      unint64_t v6 = (void *)result;
      id v7 = [(id)result groupID];

      if (v7)
      {

        return 1;
      }
      return 0;
    }
LABEL_9:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t sub_10006D92C(char a1)
{
  uint64_t v2 = sub_1000082B4(qword_10012CE40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000E3910();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1000E50A0())
  {
    sub_1000AC074(a1, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      return sub_1000147B8((uint64_t)v4, qword_10012CE40);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      sub_100018534();
      swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v10, v8, v5);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else
  {
    sub_1000E3EF0();
    sub_100018534();
    swift_allocError();
    sub_1000E38E0();
    return swift_willThrow();
  }
}

uint64_t sub_10006DB4C()
{
  if (qword_100129D30 == -1) {
    goto LABEL_2;
  }
LABEL_33:
  swift_once();
LABEL_2:
  uint64_t v0 = qword_100142080;
  uint64_t v18 = qword_100142080 + 64;
  uint64_t v1 = 1 << *(unsigned char *)(qword_100142080 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  unint64_t v3 = v2 & *(void *)(qword_100142080 + 64);
  int64_t v19 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v4 = 0;
  if (v3)
  {
LABEL_5:
    unint64_t v5 = __clz(__rbit64(v3));
    v3 &= v3 - 1;
    unint64_t v6 = v5 | (v4 << 6);
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    if (v7 >= v19) {
      goto LABEL_29;
    }
    unint64_t v8 = *(void *)(v18 + 8 * v7);
    ++v4;
    if (!v8)
    {
      int64_t v4 = v7 + 1;
      if (v7 + 1 >= v19) {
        goto LABEL_29;
      }
      unint64_t v8 = *(void *)(v18 + 8 * v4);
      if (!v8)
      {
        int64_t v4 = v7 + 2;
        if (v7 + 2 >= v19) {
          goto LABEL_29;
        }
        unint64_t v8 = *(void *)(v18 + 8 * v4);
        if (!v8)
        {
          int64_t v9 = v7 + 3;
          if (v9 >= v19)
          {
LABEL_29:
            swift_release();
            return 0;
          }
          unint64_t v8 = *(void *)(v18 + 8 * v9);
          if (!v8)
          {
            while (1)
            {
              int64_t v4 = v9 + 1;
              if (__OFADD__(v9, 1)) {
                goto LABEL_32;
              }
              if (v4 >= v19) {
                goto LABEL_29;
              }
              unint64_t v8 = *(void *)(v18 + 8 * v4);
              ++v9;
              if (v8) {
                goto LABEL_19;
              }
            }
          }
          int64_t v4 = v9;
        }
      }
    }
LABEL_19:
    unint64_t v3 = (v8 - 1) & v8;
    unint64_t v6 = __clz(__rbit64(v8)) + (v4 << 6);
LABEL_20:
    uint64_t v10 = *(void *)(*(void *)(v0 + 48) + 16 * v6);
    uint64_t v11 = sub_1000E5A30();
    uint64_t v13 = v12;
    if (v11 == sub_1000E5A30() && v13 == v14) {
      break;
    }
    char v16 = sub_1000E5DC0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
LABEL_28:
  swift_release();
  return v10;
}

uint64_t sub_10006DDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_10006DDB8()
{
  sub_10000C634();
  if (v0 <= 0x3F)
  {
    sub_100059D9C();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SportsWidgetGenericClockViewModel(319);
      if (v2 <= 0x3F)
      {
        sub_1000E5C50();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *sub_10006DF04(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v84 = sub_1000E41D0();
  uint64_t v5 = *(void *)(v84 - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v84 - 8) + 64);
  }
  uint64_t v7 = sub_1000E41F0();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9 & 0xF8;
  if (*(_DWORD *)(v8 + 84)) {
    unint64_t v11 = *(void *)(v8 + 64);
  }
  else {
    unint64_t v11 = *(void *)(v8 + 64) + 1;
  }
  size_t __n = v11;
  if (v11 <= 8) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v86 = sub_1000E3EE0();
  uint64_t v13 = *(void *)(v86 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = *(void *)(v13 + 64);
  if (*(_DWORD *)(v13 + 84)) {
    size_t v16 = *(void *)(v13 + 64);
  }
  else {
    size_t v16 = v15 + 1;
  }
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = *(_DWORD *)(v18 + 80);
  uint64_t v20 = v19;
  if (*(_DWORD *)(v18 + 84)) {
    uint64_t v21 = *(void *)(v18 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v18 + 64) + 1;
  }
  unsigned int v22 = v14 | *(_DWORD *)(v5 + 80) & 0xF8 | v10 | v19;
  if (v22 > 7
    || ((*(_DWORD *)(v13 + 80) | v9 | *(_DWORD *)(v5 + 80) | v19) & 0x100000) != 0
    || (uint64_t v23 = v10 | 7,
        uint64_t v24 = v6 + (v10 | 7) + 1,
        uint64_t v87 = v14 | 7,
        uint64_t v25 = v15 + v14,
        uint64_t v26 = v15 + v14 + ((v15 + v14) & ~v14),
        ((v21
        + v19
        + ((v16
          + v19
          + ((v26 + ((v14 + 64) & ~v14)) & ~v14)
          + 2
          + ((v14 + ((v12 + (v24 & ~v23) + 8) & 0xFFFFFFFFFFFFFFF8) + 80) & ~(v14 | 7))) & ~(unint64_t)v19)) & ~(unint64_t)v19)
      + v21 > 0x18))
  {
    uint64_t v32 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v33 = (void *)(v32 + (((v22 | 7) + 16) & ~(unint64_t)(v22 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v74 = v15 + v14 + ((v15 + v14) & ~v14);
    uint64_t v75 = v16 + v19 + ((v26 + ((v14 + 64) & ~v14)) & ~v14) + 2;
    unsigned int v27 = a2[v6];
    unsigned int v28 = v27 - 2;
    if (v27 < 2)
    {
      id v30 = a1;
    }
    else
    {
      if (v6 <= 3) {
        uint64_t v29 = v6;
      }
      else {
        uint64_t v29 = 4;
      }
      id v30 = a1;
      switch(v29)
      {
        case 1:
          int v31 = *a2;
          if (v6 < 4) {
            goto LABEL_31;
          }
          goto LABEL_33;
        case 2:
          int v31 = *(unsigned __int16 *)a2;
          if (v6 >= 4) {
            goto LABEL_33;
          }
          goto LABEL_31;
        case 3:
          int v31 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v6 < 4) {
            goto LABEL_31;
          }
          goto LABEL_33;
        case 4:
          int v31 = *(_DWORD *)a2;
          if (v6 < 4) {
LABEL_31:
          }
            unsigned int v27 = (v31 | (v28 << (8 * v6))) + 2;
          else {
LABEL_33:
          }
            unsigned int v27 = v31 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v71 = v8;
    uint64_t v73 = v25;
    uint64_t v34 = v7;
    uint64_t v76 = *(void *)(v86 - 8);
    uint64_t v77 = v21 + v19;
    size_t v78 = v16;
    uint64_t v79 = *(void *)(v17 - 8);
    uint64_t v80 = v17;
    size_t v81 = v21;
    uint64_t v35 = ~v23;
    if (v27 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(v30, a2, v84);
      char v36 = 1;
    }
    else
    {
      void *v30 = *(void *)a2;
      swift_retain();
      char v36 = 0;
    }
    *((unsigned char *)v30 + v6) = v36;
    unint64_t v37 = ((unint64_t)v30 + v24) & v35;
    unint64_t v38 = (unint64_t)&a2[v24] & v35;
    unsigned int v39 = *(unsigned __int8 *)(v38 + v12);
    unsigned int v40 = v39 - 2;
    if (v39 < 2)
    {
      uint64_t v42 = v34;
      uint64_t v43 = v71;
    }
    else
    {
      if (v12 <= 3) {
        uint64_t v41 = v12;
      }
      else {
        uint64_t v41 = 4;
      }
      uint64_t v42 = v34;
      uint64_t v43 = v71;
      switch(v41)
      {
        case 1:
          int v44 = *(unsigned __int8 *)v38;
          if (v12 < 4) {
            goto LABEL_48;
          }
          goto LABEL_50;
        case 2:
          int v44 = *(unsigned __int16 *)v38;
          if (v12 >= 4) {
            goto LABEL_50;
          }
          goto LABEL_48;
        case 3:
          int v44 = *(unsigned __int16 *)v38 | (*(unsigned __int8 *)(v38 + 2) << 16);
          if (v12 < 4) {
            goto LABEL_48;
          }
          goto LABEL_50;
        case 4:
          int v44 = *(_DWORD *)v38;
          if (v12 < 4) {
LABEL_48:
          }
            unsigned int v39 = (v44 | (v40 << (8 * v12))) + 2;
          else {
LABEL_50:
          }
            unsigned int v39 = v44 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v45 = v12 + 1;
    uint64_t v46 = ~v87;
    uint64_t v72 = ~v14;
    if (v39 == 1)
    {
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      {
        memcpy((void *)v37, (const void *)v38, __n);
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16))(v37, v38, v42);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v42);
      }
      *(unsigned char *)(v37 + v12) = 1;
    }
    else
    {
      *(void *)unint64_t v37 = *(void *)v38;
      *(unsigned char *)(v37 + v12) = 0;
      swift_retain();
    }
    uint64_t v85 = ~v20;
    unint64_t v47 = ((v37 | 7) + v45) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = ((v38 | 7) + v45) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v47 = *(unsigned char *)v48;
    *(void *)(v47 + 8) = *(void *)(v48 + 8);
    *(void *)(v47 + 16) = *(void *)(v48 + 16);
    *(void *)(v47 + 24) = *(void *)(v48 + 24);
    *(void *)(v47 + 32) = *(void *)(v48 + 32);
    *(void *)(v47 + 40) = *(void *)(v48 + 40);
    *(unsigned char *)(v47 + 48) = *(unsigned char *)(v48 + 48);
    *(void *)(v47 + 56) = *(void *)(v48 + 56);
    *(void *)(v47 + 64) = *(void *)(v48 + 64);
    *(void *)(v47 + 72) = *(void *)(v48 + 72);
    char v49 = (void *)((v47 + v87 + 80) & v46);
    id v50 = (void *)((v48 + v87 + 80) & v46);
    *char v49 = *v50;
    v49[1] = v50[1];
    size_t __na = (size_t)v49;
    id v51 = (void *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v88 = v50;
    unsigned __int8 v52 = (void *)(((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8);
    *id v51 = *v52;
    v51[1] = v52[1];
    uint64_t v53 = (void *)(((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v54 = (void *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v53 = *v54;
    v53[1] = v54[1];
    unint64_t v55 = (void *)(((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v56 = (void *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v55 = *v56;
    v55[1] = v56[1];
    uint64_t v57 = ((unint64_t)v55 + v14 + 16) & v72;
    uint64_t v58 = ((unint64_t)v56 + v14 + 16) & v72;
    uint64_t v59 = *(void (**)(char *, const void *, uint64_t))(v76 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v60 = v59;
    swift_bridgeObjectRetain();
    v59((char *)v57, (const void *)v58, v86);
    v59((char *)((v73 + v57) & v72), (const void *)((v73 + v58) & v72), v86);
    uint64_t v61 = (char *)((v74 + v57) & v72);
    uint64_t v62 = (const void *)((v74 + v58) & v72);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v76 + 48))(v62, 1, v86))
    {
      size_t v63 = v78;
      memcpy(v61, v62, v78);
      uint64_t v33 = a1;
    }
    else
    {
      v60(v61, v62, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v61, 0, 1, v86);
      uint64_t v33 = a1;
      size_t v63 = v78;
    }
    unint64_t v64 = &v61[v63];
    *unint64_t v64 = *((unsigned char *)v62 + v63);
    v64[1] = *((unsigned char *)v62 + v63 + 1);
    uint64_t v65 = (void *)((v75 + __na) & v85);
    CFAllocatorRef v66 = (const void *)(((unint64_t)v88 + v75) & v85);
    char v67 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v79 + 48);
    if (v67(v66, 1, v80))
    {
      memcpy(v65, v66, v81);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v79 + 16))(v65, v66, v80);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v65, 0, 1, v80);
    }
    long long v68 = (void *)(((unint64_t)v65 + v77) & v85);
    long long v69 = (const void *)(((unint64_t)v66 + v77) & v85);
    if (v67(v69, 1, v80))
    {
      memcpy(v68, v69, v81);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v79 + 16))(v68, v69, v80);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v68, 0, 1, v80);
    }
  }
  return v33;
}

uint64_t sub_10006E7AC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = sub_1000E41D0();
  if (*(void *)(*(void *)(v3 - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        if (v4 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        if (v4 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v4 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v8 = *(_DWORD *)a1;
        if (v4 < 4)
        {
LABEL_14:
          unsigned int v5 = (v8 | (v6 << (8 * v4))) + 2;
          break;
        }
LABEL_18:
        if (v8 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v5 == 1) {
LABEL_16:
  }
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  else {
LABEL_19:
  }
    swift_release();
  uint64_t v9 = sub_1000E41F0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v12 = (unsigned __int8 *)((unint64_t)&a1[v4 + 1 + v11] & ~v11);
  unint64_t v13 = *(void *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v13;
  }
  if (v13 <= 8) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = v13;
  }
  unsigned int v15 = v12[v14];
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *v12;
        if (v14 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_35;
      case 2:
        int v18 = *(unsigned __int16 *)v12;
        if (v14 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_35;
      case 3:
        int v18 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        if (v14 < 4) {
          goto LABEL_35;
        }
        goto LABEL_40;
      case 4:
        int v18 = *(_DWORD *)v12;
        if (v14 < 4)
        {
LABEL_35:
          unsigned int v15 = (v18 | (v16 << (8 * v14))) + 2;
          break;
        }
LABEL_40:
        if (v18 != -1) {
          goto LABEL_41;
        }
        goto LABEL_37;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
LABEL_37:
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  else
  {
LABEL_41:
    swift_release();
  }
  unint64_t v19 = (unint64_t)&v12[v14 + 8] & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v20 = sub_1000E3EE0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (v19 + (v22 | 7) + 80) & ~(v22 | 7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v24 = v22 + ((((((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v25 = *(void (**)(unint64_t, uint64_t))(v21 + 8);
  v25(v24 & ~v22, v20);
  uint64_t v26 = *(void *)(v21 + 64);
  v25((v26 + v22 + (v24 & ~v22)) & ~v22, v20);
  uint64_t v27 = ((v26 + v22) & ~v22) + v26;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v21 + 48))(((v24 | v22) + v27) & ~v22, 1, v20))v25(((v24 | v22) + v27) & ~v22, v20); {
  uint64_t v28 = *(void *)(a2 + 16);
  }
  uint64_t v40 = *(void *)(v28 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v30 = (v23 | 2) + v26 + ((((v22 + 64) | v22) + v27) & ~v22);
  if (!*(_DWORD *)(v21 + 84)) {
    ++v30;
  }
  uint64_t v31 = v30 + v29;
  uint64_t v32 = ~v29;
  uint64_t v33 = (v30 + v29) & ~v29;
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48);
  if (!v34(v33, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v33, v28);
  }
  uint64_t v35 = (v31 | v29) + *(void *)(v40 + 64);
  if (!*(_DWORD *)(v40 + 84)) {
    ++v35;
  }
  uint64_t v36 = v35 & v32;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v34)(v35 & v32, 1, v28);
  if (!result)
  {
    unint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8);
    return v38(v36, v28);
  }
  return result;
}

void *sub_10006ED40(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = sub_1000E41D0();
  if (*(void *)(*(void *)(v5 - 8) + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        if (v6 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        if (v6 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v6 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v10 = *(_DWORD *)a2;
        if (v6 < 4)
        {
LABEL_14:
          unsigned int v7 = (v10 | (v8 << (8 * v6))) + 2;
          break;
        }
LABEL_18:
        if (v10 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v7 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    char v11 = 1;
  }
  else
  {
LABEL_19:
    *a1 = *(void *)a2;
    swift_retain();
    char v11 = 0;
  }
  *((unsigned char *)a1 + v6) = v11;
  uint64_t v12 = sub_1000E41F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  uint64_t v15 = v6 + v14 + 1;
  long long v69 = a1;
  unint64_t v16 = ((unint64_t)a1 + v15) & ~v14;
  unint64_t v17 = (unint64_t)&a2[v15] & ~v14;
  if (*(_DWORD *)(v13 + 84)) {
    size_t v18 = *(void *)(v13 + 64);
  }
  else {
    size_t v18 = *(void *)(v13 + 64) + 1;
  }
  if (v18 <= 8) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = v18;
  }
  unsigned int v20 = *(unsigned __int8 *)(v17 + v19);
  unsigned int v21 = v20 - 2;
  if (v20 >= 2)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *(unsigned __int8 *)v17;
        if (v19 >= 4) {
          goto LABEL_43;
        }
        goto LABEL_36;
      case 2:
        int v23 = *(unsigned __int16 *)v17;
        if (v19 >= 4) {
          goto LABEL_43;
        }
        goto LABEL_36;
      case 3:
        int v23 = *(unsigned __int16 *)v17 | (*(unsigned __int8 *)(v17 + 2) << 16);
        if (v19 < 4) {
          goto LABEL_36;
        }
        goto LABEL_43;
      case 4:
        int v23 = *(_DWORD *)v17;
        if (v19 < 4)
        {
LABEL_36:
          unsigned int v20 = (v23 | (v21 << (8 * v19))) + 2;
          break;
        }
LABEL_43:
        if (v23 != -1) {
          goto LABEL_44;
        }
        goto LABEL_38;
      default:
        break;
    }
  }
  if (v20 == 1)
  {
LABEL_38:
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
    {
      memcpy((void *)v16, (const void *)v17, v18);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))(v16, v17, v12);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    }
    *(unsigned char *)(v16 + v19) = 1;
  }
  else
  {
LABEL_44:
    *(void *)unint64_t v16 = *(void *)v17;
    *(unsigned char *)(v16 + v19) = 0;
    swift_retain();
  }
  uint64_t v24 = v19 + 1;
  unint64_t v25 = ((v16 | 7) + v19 + 1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((v17 | 7) + v24) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(void *)(v25 + 24) = *(void *)(v26 + 24);
  *(void *)(v25 + 32) = *(void *)(v26 + 32);
  *(void *)(v25 + 40) = *(void *)(v26 + 40);
  *(unsigned char *)(v25 + 48) = *(unsigned char *)(v26 + 48);
  *(void *)(v25 + 56) = *(void *)(v26 + 56);
  *(void *)(v25 + 64) = *(void *)(v26 + 64);
  *(void *)(v25 + 72) = *(void *)(v26 + 72);
  uint64_t v62 = sub_1000E3EE0();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v27 = *(_DWORD *)(v63 + 80);
  unint64_t v28 = *(_DWORD *)(v63 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (void *)((v27 + 80 + v25) & v28);
  uint64_t v30 = (void *)((v27 + 80 + v26) & v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  unint64_t v64 = v29;
  CFAllocatorRef v66 = v30;
  uint64_t v31 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  uint64_t v33 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v34 = (void *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  uint64_t v35 = (void *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = (void *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v35 = *v36;
  v35[1] = v36[1];
  uint64_t v37 = ((unint64_t)v35 + v27 + 16) & ~v27;
  uint64_t v38 = ((unint64_t)v36 + v27 + 16) & ~v27;
  unsigned int v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39(v37, v38, v62);
  size_t v40 = *(void *)(v63 + 64);
  v39((v40 + v27 + v37) & ~v27, (v40 + v27 + v38) & ~v27, v62);
  size_t v41 = ((v40 + v27) & ~v27) + v40;
  uint64_t v42 = (v41 + v27 + v38) & ~v27;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v42, 1, v62))
  {
    int v43 = *(_DWORD *)(v63 + 84);
    if (v43) {
      size_t v44 = v40;
    }
    else {
      size_t v44 = v40 + 1;
    }
    memcpy((void *)((v41 + v27 + v37) & ~v27), (const void *)((v41 + v27 + v38) & ~v27), v44);
  }
  else
  {
    v39((v41 + v27 + v37) & ~v27, (v41 + v27 + v38) & ~v27, v62);
    (*(void (**)(size_t, void, uint64_t, uint64_t))(v63 + 56))((v41 + v27 + v37) & ~v27, 0, 1, v62);
    int v43 = *(_DWORD *)(v63 + 84);
  }
  if (v43) {
    size_t v45 = v40;
  }
  else {
    size_t v45 = v40 + 1;
  }
  uint64_t v46 = (unsigned char *)(v45 + ((v41 + v27 + v37) & ~v27));
  *uint64_t v46 = *(unsigned char *)(v45 + v42);
  v46[1] = *(unsigned char *)(v45 + v42 + 1);
  uint64_t v47 = (((v27 + 64) | v27) + v41) & ~v27;
  uint64_t v48 = *(void *)(a3 + 16);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(unsigned __int8 *)(v49 + 80);
  uint64_t v51 = v47 + v45 + v50 + 2;
  unint64_t v52 = (unint64_t)v64 + v51;
  uint64_t v65 = ~v50;
  unint64_t v53 = (unint64_t)v66 + v51;
  unint64_t v54 = (const void *)(((unint64_t)v66 + v51) & ~v50);
  long long v68 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48);
  if (v68(v54, 1, v48))
  {
    int v55 = *(_DWORD *)(v49 + 84);
    size_t v56 = *(void *)(v49 + 64);
    if (v55) {
      size_t v57 = *(void *)(v49 + 64);
    }
    else {
      size_t v57 = v56 + 1;
    }
    memcpy((void *)(v52 & ~v50), v54, v57);
  }
  else
  {
    (*(void (**)(unint64_t, const void *, uint64_t))(v49 + 16))(v52 & ~v50, v54, v48);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v49 + 56))(v52 & ~v50, 0, 1, v48);
    int v55 = *(_DWORD *)(v49 + 84);
    size_t v56 = *(void *)(v49 + 64);
  }
  if (v55) {
    size_t v58 = v56;
  }
  else {
    size_t v58 = v56 + 1;
  }
  uint64_t v59 = (void *)(((v52 | v50) + v58) & v65);
  unint64_t v60 = (const void *)(((v53 | v50) + v58) & v65);
  if (v68(v60, 1, v48))
  {
    memcpy(v59, v60, v58);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v59, v60, v48);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v59, 0, 1, v48);
  }
  return v69;
}

unsigned __int8 *sub_10006F528(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = sub_1000E41D0();
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          if (v7 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          if (v7 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v7 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v11 = *(_DWORD *)a1;
          if (v7 < 4)
          {
LABEL_15:
            unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
            break;
          }
LABEL_19:
          if (v11 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v8 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v12 = a2[v7];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v14 = v7;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          if (v7 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          if (v7 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v7 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v15 = *(_DWORD *)a2;
          if (v7 < 4)
          {
LABEL_31:
            unsigned int v12 = (v15 | (v13 << (8 * v7))) + 2;
            break;
          }
LABEL_35:
          if (v15 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v12 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v7] = 0;
      swift_retain();
    }
  }
  unint64_t v16 = *(void *)(*(void *)(sub_1000E41D0() - 8) + 64);
  if (v16 <= 8) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = v16;
  }
  uint64_t v18 = sub_1000E41F0();
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = *(_DWORD *)(v19 + 84);
  uint64_t v21 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  uint64_t v22 = v17 + v21 + 1;
  int v23 = (unsigned __int8 *)((unint64_t)&a1[v22] & ~v21);
  unint64_t v24 = (unint64_t)&a2[v22] & ~v21;
  unint64_t v25 = *(void *)(v19 + 64);
  if (v23 != (unsigned __int8 *)v24)
  {
    uint64_t v26 = v18;
    if (v20) {
      size_t v27 = *(void *)(v19 + 64);
    }
    else {
      size_t v27 = v25 + 1;
    }
    if (v27 <= 8) {
      uint64_t v28 = 8;
    }
    else {
      uint64_t v28 = v27;
    }
    unsigned int v29 = v23[v28];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v28 <= 3) {
        uint64_t v31 = v28;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v23;
          if (v28 >= 4) {
            goto LABEL_62;
          }
          goto LABEL_57;
        case 2:
          int v32 = *(unsigned __int16 *)v23;
          if (v28 >= 4) {
            goto LABEL_62;
          }
          goto LABEL_57;
        case 3:
          int v32 = *(unsigned __int16 *)v23 | (v23[2] << 16);
          if (v28 < 4) {
            goto LABEL_57;
          }
          goto LABEL_62;
        case 4:
          int v32 = *(_DWORD *)v23;
          if (v28 < 4)
          {
LABEL_57:
            unsigned int v29 = (v32 | (v30 << (8 * v28))) + 2;
            break;
          }
LABEL_62:
          if (v32 != -1) {
            goto LABEL_63;
          }
          goto LABEL_59;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
LABEL_59:
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v19 + 48))(v23, 1, v18)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v19 + 8))(v23, v26);
      }
    }
    else
    {
LABEL_63:
      swift_release();
    }
    unsigned int v33 = *(unsigned __int8 *)(v24 + v28);
    unsigned int v34 = v33 - 2;
    if (v33 >= 2)
    {
      if (v28 <= 3) {
        uint64_t v35 = v28;
      }
      else {
        uint64_t v35 = 4;
      }
      switch(v35)
      {
        case 1:
          int v36 = *(unsigned __int8 *)v24;
          if (v28 >= 4) {
            goto LABEL_81;
          }
          goto LABEL_74;
        case 2:
          int v36 = *(unsigned __int16 *)v24;
          if (v28 >= 4) {
            goto LABEL_81;
          }
          goto LABEL_74;
        case 3:
          int v36 = *(unsigned __int16 *)v24 | (*(unsigned __int8 *)(v24 + 2) << 16);
          if (v28 < 4) {
            goto LABEL_74;
          }
          goto LABEL_81;
        case 4:
          int v36 = *(_DWORD *)v24;
          if (v28 < 4)
          {
LABEL_74:
            unsigned int v33 = (v36 | (v34 << (8 * v28))) + 2;
            break;
          }
LABEL_81:
          if (v36 != -1) {
            goto LABEL_82;
          }
          goto LABEL_76;
        default:
          break;
      }
    }
    if (v33 == 1)
    {
LABEL_76:
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v24, 1, v26))
      {
        memcpy(v23, (const void *)v24, v27);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unint64_t, uint64_t))(v19 + 16))(v23, v24, v26);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v26);
      }
      v23[v28] = 1;
    }
    else
    {
LABEL_82:
      *(void *)int v23 = *(void *)v24;
      v23[v28] = 0;
      swift_retain();
    }
  }
  uint64_t v92 = a1;
  if (v20) {
    unint64_t v37 = v25;
  }
  else {
    unint64_t v37 = v25 + 1;
  }
  if (v37 <= 8) {
    unint64_t v37 = 8;
  }
  unint64_t v38 = v37 + 1;
  unint64_t v39 = (((unint64_t)v23 | 7) + v38) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = ((v24 | 7) + v38) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v39 = *(unsigned char *)v40;
  *(void *)(v39 + 8) = *(void *)(v40 + 8);
  swift_retain();
  swift_release();
  *(void *)(v39 + 16) = *(void *)(v40 + 16);
  swift_retain();
  swift_release();
  *(void *)(v39 + 24) = *(void *)(v40 + 24);
  swift_retain();
  swift_release();
  *(void *)(v39 + 32) = *(void *)(v40 + 32);
  swift_retain();
  swift_release();
  *(void *)(v39 + 40) = *(void *)(v40 + 40);
  *(unsigned char *)(v39 + 48) = *(unsigned char *)(v40 + 48);
  *(void *)(v39 + 56) = *(void *)(v40 + 56);
  *(void *)(v39 + 64) = *(void *)(v40 + 64);
  *(void *)(v39 + 72) = *(void *)(v40 + 72);
  uint64_t v41 = sub_1000E3EE0();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = v42;
  uint64_t v44 = *(_DWORD *)(v42 + 80);
  unint64_t v45 = *(_DWORD *)(v42 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = (void *)((v44 + 80 + v39) & v45);
  uint64_t v47 = (void *)((v44 + 80 + v40) & v45);
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v88 = v46;
  uint64_t v89 = v47;
  uint64_t v48 = (void *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v49 = (void *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = (void *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (void *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v52 = (void *)(((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v53 = (void *)(((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v54 = ((unint64_t)v52 + v44 + 16) & ~v44;
  uint64_t v55 = ((unint64_t)v53 + v44 + 16) & ~v44;
  size_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 24);
  v56(v54, v55, v41);
  size_t v57 = *(void *)(v42 + 64);
  v56((v57 + v44 + v54) & ~v44, (v57 + v44 + v55) & ~v44, v41);
  size_t v87 = ((v57 + v44) & ~v44) + v57;
  size_t v58 = (char *)((v87 + v44 + v54) & ~v44);
  uint64_t v59 = (char *)((v87 + v44 + v55) & ~v44);
  unint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  LODWORD(v55) = v60(v58, 1, v41);
  int v61 = v60(v59, 1, v41);
  if (v55)
  {
    if (!v61)
    {
      uint64_t v62 = v43;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v58, v59, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v58, 0, 1, v41);
      goto LABEL_99;
    }
    uint64_t v62 = v43;
    int v63 = *(_DWORD *)(v43 + 84);
  }
  else
  {
    if (!v61)
    {
      v56((uint64_t)v58, (uint64_t)v59, v41);
      uint64_t v62 = v43;
      goto LABEL_99;
    }
    uint64_t v62 = v43;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v58, v41);
    int v63 = *(_DWORD *)(v43 + 84);
  }
  if (v63) {
    size_t v64 = v57;
  }
  else {
    size_t v64 = v57 + 1;
  }
  memcpy(v58, v59, v64);
LABEL_99:
  if (*(_DWORD *)(v62 + 84)) {
    size_t v65 = v57;
  }
  else {
    size_t v65 = v57 + 1;
  }
  CFAllocatorRef v66 = &v58[v65];
  *CFAllocatorRef v66 = v59[v65];
  v66[1] = v59[v65 + 1];
  uint64_t v67 = *(void *)(a3 + 16);
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v69 = *(unsigned __int8 *)(v68 + 80);
  uint64_t v70 = ((((v44 + 64) | v44) + v87) & ~v44) + v65 + v69 + 2;
  unint64_t v71 = (unint64_t)v88 + v70;
  uint64_t v91 = ~v69;
  uint64_t v72 = (void *)(((unint64_t)v88 + v70) & ~v69);
  unint64_t v73 = (unint64_t)v89 + v70;
  uint64_t v74 = (void *)(((unint64_t)v89 + v70) & ~v69);
  uint64_t v75 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v68 + 48);
  int v76 = v75(v72, 1, v67);
  int v77 = v75(v74, 1, v67);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(void *, void *, uint64_t))(v68 + 16))(v72, v74, v67);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v72, 0, 1, v67);
      goto LABEL_113;
    }
    int v78 = *(_DWORD *)(v68 + 84);
    size_t v79 = *(void *)(v68 + 64);
  }
  else
  {
    if (!v77)
    {
      (*(void (**)(void *, void *, uint64_t))(v68 + 24))(v72, v74, v67);
      goto LABEL_113;
    }
    (*(void (**)(void *, uint64_t))(v68 + 8))(v72, v67);
    int v78 = *(_DWORD *)(v68 + 84);
    size_t v79 = *(void *)(v68 + 64);
  }
  if (v78) {
    size_t v80 = v79;
  }
  else {
    size_t v80 = v79 + 1;
  }
  memcpy(v72, v74, v80);
LABEL_113:
  if (*(_DWORD *)(v68 + 84)) {
    size_t v81 = *(void *)(v68 + 64);
  }
  else {
    size_t v81 = *(void *)(v68 + 64) + 1;
  }
  Swift::String v82 = (void *)(((v71 | v69) + v81) & v91);
  Swift::String v83 = (void *)(((v73 | v69) + v81) & v91);
  int v84 = v75(v82, 1, v67);
  int v85 = v75(v83, 1, v67);
  if (!v84)
  {
    if (!v85)
    {
      (*(void (**)(void *, void *, uint64_t))(v68 + 24))(v82, v83, v67);
      return v92;
    }
    (*(void (**)(void *, uint64_t))(v68 + 8))(v82, v67);
    goto LABEL_121;
  }
  if (v85)
  {
LABEL_121:
    memcpy(v82, v83, v81);
    return v92;
  }
  (*(void (**)(void *, void *, uint64_t))(v68 + 16))(v82, v83, v67);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v82, 0, 1, v67);
  return v92;
}

void *sub_1000700A0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = sub_1000E41D0();
  if (*(void *)(*(void *)(v5 - 8) + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        if (v6 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        if (v6 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v6 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v10 = *(_DWORD *)a2;
        if (v6 < 4)
        {
LABEL_14:
          unsigned int v7 = (v10 | (v8 << (8 * v6))) + 2;
          break;
        }
LABEL_18:
        if (v10 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v7 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    char v11 = 1;
  }
  else
  {
LABEL_19:
    char v11 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v6) = v11;
  uint64_t v12 = sub_1000E41F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  uint64_t v15 = v6 + v14 + 1;
  unint64_t v16 = ((unint64_t)a1 + v15) & ~v14;
  unint64_t v17 = (unint64_t)&a2[v15] & ~v14;
  if (*(_DWORD *)(v13 + 84)) {
    size_t v18 = *(void *)(v13 + 64);
  }
  else {
    size_t v18 = *(void *)(v13 + 64) + 1;
  }
  if (v18 <= 8) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = v18;
  }
  unsigned int v20 = *(unsigned __int8 *)(v17 + v19);
  unsigned int v21 = v20 - 2;
  if (v20 >= 2)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *(unsigned __int8 *)v17;
        if (v19 < 4) {
          goto LABEL_36;
        }
        goto LABEL_38;
      case 2:
        int v23 = *(unsigned __int16 *)v17;
        if (v19 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_36;
      case 3:
        int v23 = *(unsigned __int16 *)v17 | (*(unsigned __int8 *)(v17 + 2) << 16);
        if (v19 < 4) {
          goto LABEL_36;
        }
        goto LABEL_38;
      case 4:
        int v23 = *(_DWORD *)v17;
        if (v19 < 4) {
LABEL_36:
        }
          unsigned int v20 = (v23 | (v21 << (8 * v19))) + 2;
        else {
LABEL_38:
        }
          unsigned int v20 = v23 + 2;
        break;
      default:
        break;
    }
  }
  unint64_t v73 = a1;
  if (v20 == 1)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
    {
      memcpy((void *)v16, (const void *)v17, v18);
      char v24 = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))(v16, v17, v12);
      char v24 = 1;
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    }
  }
  else
  {
    char v24 = 0;
    *(void *)unint64_t v16 = *(void *)v17;
  }
  *(unsigned char *)(v16 + v19) = v24;
  unint64_t v25 = (_OWORD *)(((v16 | 7) + v19 + 1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (_OWORD *)(((v17 | 7) + v19 + 1) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v25 = *v26;
  long long v27 = v26[1];
  long long v28 = v26[2];
  long long v29 = v26[4];
  v25[3] = v26[3];
  v25[4] = v29;
  v25[1] = v27;
  v25[2] = v28;
  uint64_t v30 = sub_1000E3EE0();
  uint64_t v66 = *(void *)(v30 - 8);
  uint64_t v31 = v66;
  uint64_t v32 = *(_DWORD *)(v66 + 80);
  unint64_t v33 = *(_DWORD *)(v66 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  unsigned int v34 = (_OWORD *)(((unint64_t)v25 + v32 + 80) & v33);
  uint64_t v35 = (_OWORD *)(((unint64_t)v26 + v32 + 80) & v33);
  *unsigned int v34 = *v35;
  uint64_t v68 = v34;
  uint64_t v70 = v35;
  int v36 = (_OWORD *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v37 = (_OWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *int v36 = *v37;
  unint64_t v38 = (_OWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v39 = (_OWORD *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v38 = *v39;
  unint64_t v40 = (_OWORD *)(((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v41 = (_OWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v40 = *v41;
  uint64_t v42 = ((unint64_t)v40 + v32 + 16) & ~v32;
  uint64_t v43 = ((unint64_t)v41 + v32 + 16) & ~v32;
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32);
  v44(v42, v43, v30);
  size_t v45 = *(void *)(v66 + 64);
  v44((v45 + v32 + v42) & ~v32, (v45 + v32 + v43) & ~v32, v30);
  size_t v67 = ((v45 + v32) & ~v32) + v45;
  uint64_t v46 = (char *)((v67 + v32 + v42) & ~v32);
  uint64_t v47 = (const void *)((v67 + v32 + v43) & ~v32);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v47, 1, v30))
  {
    int v48 = *(_DWORD *)(v31 + 84);
    if (v48) {
      size_t v49 = v45;
    }
    else {
      size_t v49 = v45 + 1;
    }
    memcpy(v46, v47, v49);
  }
  else
  {
    v44((uint64_t)v46, (uint64_t)v47, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v46, 0, 1, v30);
    int v48 = *(_DWORD *)(v31 + 84);
  }
  if (v48) {
    size_t v50 = v45;
  }
  else {
    size_t v50 = v45 + 1;
  }
  uint64_t v51 = &v46[v50];
  *uint64_t v51 = *((unsigned char *)v47 + v50);
  v51[1] = *((unsigned char *)v47 + v50 + 1);
  uint64_t v52 = *(void *)(a3 + 16);
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(unsigned __int8 *)(v53 + 80);
  uint64_t v55 = ((((v32 + 64) | v32) + v67) & ~v32) + v50 + v54 + 2;
  unint64_t v56 = (unint64_t)v68 + v55;
  uint64_t v69 = ~v54;
  unint64_t v57 = (unint64_t)v70 + v55;
  size_t v58 = (const void *)(((unint64_t)v70 + v55) & ~v54);
  uint64_t v72 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48);
  if (v72(v58, 1, v52))
  {
    int v59 = *(_DWORD *)(v53 + 84);
    size_t v60 = *(void *)(v53 + 64);
    if (v59) {
      size_t v61 = *(void *)(v53 + 64);
    }
    else {
      size_t v61 = v60 + 1;
    }
    memcpy((void *)(v56 & ~v54), v58, v61);
  }
  else
  {
    (*(void (**)(unint64_t, const void *, uint64_t))(v53 + 32))(v56 & ~v54, v58, v52);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v53 + 56))(v56 & ~v54, 0, 1, v52);
    int v59 = *(_DWORD *)(v53 + 84);
    size_t v60 = *(void *)(v53 + 64);
  }
  if (v59) {
    size_t v62 = v60;
  }
  else {
    size_t v62 = v60 + 1;
  }
  int v63 = (void *)(((v56 | v54) + v62) & v69);
  size_t v64 = (const void *)(((v57 | v54) + v62) & v69);
  if (v72(v64, 1, v52))
  {
    memcpy(v63, v64, v62);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v53 + 32))(v63, v64, v52);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v63, 0, 1, v52);
  }
  return v73;
}

unsigned __int8 *sub_1000707C0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = sub_1000E41D0();
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          if (v7 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          if (v7 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v7 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v11 = *(_DWORD *)a1;
          if (v7 < 4)
          {
LABEL_15:
            unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
            break;
          }
LABEL_19:
          if (v11 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v8 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v12 = a2[v7];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v14 = v7;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          if (v7 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          if (v7 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v7 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v15 = *(_DWORD *)a2;
          if (v7 < 4)
          {
LABEL_31:
            unsigned int v12 = (v15 | (v13 << (8 * v7))) + 2;
            break;
          }
LABEL_35:
          if (v15 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v12 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v16 = 1;
    }
    else
    {
LABEL_36:
      char v16 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v7] = v16;
  }
  unint64_t v17 = *(void *)(*(void *)(sub_1000E41D0() - 8) + 64);
  if (v17 <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = v17;
  }
  uint64_t v19 = sub_1000E41F0();
  uint64_t v20 = *(void *)(v19 - 8);
  int v21 = *(_DWORD *)(v20 + 84);
  uint64_t v22 = *(_DWORD *)(v20 + 80) & 0xF8 | 7;
  uint64_t v23 = v18 + v22 + 1;
  char v24 = (unsigned __int8 *)((unint64_t)&a1[v23] & ~v22);
  unint64_t v25 = (unint64_t)&a2[v23] & ~v22;
  unint64_t v26 = *(void *)(v20 + 64);
  if (v24 != (unsigned __int8 *)v25)
  {
    uint64_t v27 = v19;
    if (v21) {
      size_t v28 = *(void *)(v20 + 64);
    }
    else {
      size_t v28 = v26 + 1;
    }
    if (v28 <= 8) {
      uint64_t v29 = 8;
    }
    else {
      uint64_t v29 = v28;
    }
    unsigned int v30 = v24[v29];
    unsigned int v31 = v30 - 2;
    if (v30 >= 2)
    {
      if (v29 <= 3) {
        uint64_t v32 = v29;
      }
      else {
        uint64_t v32 = 4;
      }
      switch(v32)
      {
        case 1:
          int v33 = *v24;
          if (v29 >= 4) {
            goto LABEL_63;
          }
          goto LABEL_58;
        case 2:
          int v33 = *(unsigned __int16 *)v24;
          if (v29 >= 4) {
            goto LABEL_63;
          }
          goto LABEL_58;
        case 3:
          int v33 = *(unsigned __int16 *)v24 | (v24[2] << 16);
          if (v29 < 4) {
            goto LABEL_58;
          }
          goto LABEL_63;
        case 4:
          int v33 = *(_DWORD *)v24;
          if (v29 < 4)
          {
LABEL_58:
            unsigned int v30 = (v33 | (v31 << (8 * v29))) + 2;
            break;
          }
LABEL_63:
          if (v33 != -1) {
            goto LABEL_64;
          }
          goto LABEL_60;
        default:
          break;
      }
    }
    if (v30 == 1)
    {
LABEL_60:
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v20 + 48))(v24, 1, v19)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v20 + 8))(v24, v27);
      }
    }
    else
    {
LABEL_64:
      swift_release();
    }
    unsigned int v34 = *(unsigned __int8 *)(v25 + v29);
    unsigned int v35 = v34 - 2;
    if (v34 >= 2)
    {
      if (v29 <= 3) {
        uint64_t v36 = v29;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *(unsigned __int8 *)v25;
          if (v29 >= 4) {
            goto LABEL_81;
          }
          goto LABEL_75;
        case 2:
          int v37 = *(unsigned __int16 *)v25;
          if (v29 >= 4) {
            goto LABEL_81;
          }
          goto LABEL_75;
        case 3:
          int v37 = *(unsigned __int16 *)v25 | (*(unsigned __int8 *)(v25 + 2) << 16);
          if (v29 < 4) {
            goto LABEL_75;
          }
          goto LABEL_81;
        case 4:
          int v37 = *(_DWORD *)v25;
          if (v29 < 4)
          {
LABEL_75:
            unsigned int v34 = (v37 | (v35 << (8 * v29))) + 2;
            break;
          }
LABEL_81:
          if (v37 != -1) {
            goto LABEL_82;
          }
          goto LABEL_77;
        default:
          break;
      }
    }
    if (v34 == 1)
    {
LABEL_77:
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v25, 1, v27))
      {
        memcpy(v24, (const void *)v25, v28);
        char v38 = 1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unint64_t, uint64_t))(v20 + 32))(v24, v25, v27);
        char v38 = 1;
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v27);
      }
    }
    else
    {
LABEL_82:
      char v38 = 0;
      *(void *)char v24 = *(void *)v25;
    }
    v24[v29] = v38;
  }
  BOOL v94 = a1;
  if (v21) {
    unint64_t v39 = v26;
  }
  else {
    unint64_t v39 = v26 + 1;
  }
  if (v39 <= 8) {
    unint64_t v39 = 8;
  }
  unint64_t v40 = v39 + 1;
  unint64_t v41 = (((unint64_t)v24 | 7) + v40) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = ((v25 | 7) + v40) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v41 = *(unsigned char *)v42;
  *(void *)(v41 + 8) = *(void *)(v42 + 8);
  swift_release();
  *(void *)(v41 + 16) = *(void *)(v42 + 16);
  swift_release();
  *(void *)(v41 + 24) = *(void *)(v42 + 24);
  swift_release();
  *(void *)(v41 + 32) = *(void *)(v42 + 32);
  swift_release();
  *(void *)(v41 + 40) = *(void *)(v42 + 40);
  *(unsigned char *)(v41 + 48) = *(unsigned char *)(v42 + 48);
  *(void *)(v41 + 56) = *(void *)(v42 + 56);
  *(void *)(v41 + 64) = *(void *)(v42 + 64);
  *(void *)(v41 + 72) = *(void *)(v42 + 72);
  uint64_t v43 = sub_1000E3EE0();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = v44;
  uint64_t v46 = *(_DWORD *)(v44 + 80);
  unint64_t v47 = *(_DWORD *)(v44 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  int v48 = (void *)((v46 + 80 + v41) & v47);
  size_t v49 = (void *)((v46 + 80 + v42) & v47);
  *int v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRelease();
  uint64_t v90 = v48;
  uint64_t v91 = v49;
  size_t v50 = (void *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (void *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
  *size_t v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRelease();
  uint64_t v52 = (void *)(((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v53 = (void *)(((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRelease();
  uint64_t v54 = (void *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = (void *)(((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRelease();
  uint64_t v56 = ((unint64_t)v54 + v46 + 16) & ~v46;
  uint64_t v57 = ((unint64_t)v55 + v46 + 16) & ~v46;
  size_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 40);
  v58(v56, v57, v43);
  size_t v59 = *(void *)(v44 + 64);
  v58((v59 + v46 + v56) & ~v46, (v59 + v46 + v57) & ~v46, v43);
  size_t v89 = ((v59 + v46) & ~v46) + v59;
  size_t v60 = (char *)((v89 + v46 + v56) & ~v46);
  size_t v61 = (char *)((v89 + v46 + v57) & ~v46);
  size_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  LODWORD(v57) = v62(v60, 1, v43);
  int v63 = v62(v61, 1, v43);
  if (v57)
  {
    if (!v63)
    {
      uint64_t v64 = v45;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v60, v61, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v60, 0, 1, v43);
      goto LABEL_100;
    }
    uint64_t v64 = v45;
    int v65 = *(_DWORD *)(v45 + 84);
  }
  else
  {
    if (!v63)
    {
      v58((uint64_t)v60, (uint64_t)v61, v43);
      uint64_t v64 = v45;
      goto LABEL_100;
    }
    uint64_t v64 = v45;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v60, v43);
    int v65 = *(_DWORD *)(v45 + 84);
  }
  if (v65) {
    size_t v66 = v59;
  }
  else {
    size_t v66 = v59 + 1;
  }
  memcpy(v60, v61, v66);
LABEL_100:
  if (*(_DWORD *)(v64 + 84)) {
    size_t v67 = v59;
  }
  else {
    size_t v67 = v59 + 1;
  }
  uint64_t v68 = &v60[v67];
  *uint64_t v68 = v61[v67];
  v68[1] = v61[v67 + 1];
  uint64_t v69 = *(void *)(a3 + 16);
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(unsigned __int8 *)(v70 + 80);
  uint64_t v72 = ((((v46 + 64) | v46) + v89) & ~v46) + v67 + v71 + 2;
  unint64_t v73 = (unint64_t)v90 + v72;
  uint64_t v93 = ~v71;
  uint64_t v74 = (void *)(((unint64_t)v90 + v72) & ~v71);
  unint64_t v75 = (unint64_t)v91 + v72;
  int v76 = (void *)(((unint64_t)v91 + v72) & ~v71);
  int v77 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v70 + 48);
  int v78 = v77(v74, 1, v69);
  int v79 = v77(v76, 1, v69);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(void *, void *, uint64_t))(v70 + 32))(v74, v76, v69);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v74, 0, 1, v69);
      goto LABEL_114;
    }
    int v80 = *(_DWORD *)(v70 + 84);
    size_t v81 = *(void *)(v70 + 64);
  }
  else
  {
    if (!v79)
    {
      (*(void (**)(void *, void *, uint64_t))(v70 + 40))(v74, v76, v69);
      goto LABEL_114;
    }
    (*(void (**)(void *, uint64_t))(v70 + 8))(v74, v69);
    int v80 = *(_DWORD *)(v70 + 84);
    size_t v81 = *(void *)(v70 + 64);
  }
  if (v80) {
    size_t v82 = v81;
  }
  else {
    size_t v82 = v81 + 1;
  }
  memcpy(v74, v76, v82);
LABEL_114:
  if (*(_DWORD *)(v70 + 84)) {
    size_t v83 = *(void *)(v70 + 64);
  }
  else {
    size_t v83 = *(void *)(v70 + 64) + 1;
  }
  int v84 = (void *)(((v73 | v71) + v83) & v93);
  int v85 = (void *)(((v75 | v71) + v83) & v93);
  int v86 = v77(v84, 1, v69);
  int v87 = v77(v85, 1, v69);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(void *, void *, uint64_t))(v70 + 40))(v84, v85, v69);
      return v94;
    }
    (*(void (**)(void *, uint64_t))(v70 + 8))(v84, v69);
    goto LABEL_122;
  }
  if (v87)
  {
LABEL_122:
    memcpy(v84, v85, v83);
    return v94;
  }
  (*(void (**)(void *, void *, uint64_t))(v70 + 32))(v84, v85, v69);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v84, 0, 1, v69);
  return v94;
}

uint64_t sub_1000712F4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(sub_1000E41D0() - 8) + 64);
  if (v6 <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(sub_1000E41F0() - 8);
  int v9 = *(_DWORD *)(v8 + 84);
  unint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = sub_1000E3EE0();
  uint64_t v12 = *(void *)(v11 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  if (v16) {
    unsigned int v18 = v16 - 1;
  }
  else {
    unsigned int v18 = 0;
  }
  if (v18 <= v14) {
    unsigned int v19 = v14;
  }
  else {
    unsigned int v19 = v18;
  }
  if (v9) {
    unint64_t v20 = v10;
  }
  else {
    unint64_t v20 = v10 + 1;
  }
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  if (v13) {
    uint64_t v21 = 2;
  }
  else {
    uint64_t v21 = 3;
  }
  if (v16) {
    uint64_t v22 = *(void *)(v15 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v15 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v24 = v7 + v23 + 1;
  unint64_t v25 = v20 + 8;
  uint64_t v26 = *(_DWORD *)(v12 + 80);
  unint64_t v27 = *(_DWORD *)(v12 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = v26 + 80;
  uint64_t v29 = v21
      + *(void *)(*(void *)(v11 - 8) + 64)
      + ((*(void *)(*(void *)(v11 - 8) + 64)
        + v26
        + ((*(void *)(*(void *)(v11 - 8) + 64) + v26) & ~v26)
        + ((v26 + 64) & ~v26)) & ~v26);
  int v30 = a2 - v19;
  if (a2 <= v19) {
    goto LABEL_45;
  }
  unint64_t v31 = ((v22 + v17 + ((v29 + v17 + ((v28 + ((v25 + (v24 & ~v23)) & 0xFFFFFFFFFFFFFFF8)) & v27)) & ~v17)) & ~v17)
      + v22;
  char v32 = 8 * v31;
  if (v31 > 3) {
    goto LABEL_27;
  }
  unsigned int v35 = ((v30 + ~(-1 << v32)) >> v32) + 1;
  if (HIWORD(v35))
  {
    int v33 = *(_DWORD *)((char *)a1 + v31);
    if (v33) {
      goto LABEL_35;
    }
  }
  else
  {
    if (v35 <= 0xFF)
    {
      if (v35 < 2) {
        goto LABEL_45;
      }
LABEL_27:
      int v33 = *((unsigned __int8 *)a1 + v31);
      if (!*((unsigned char *)a1 + v31)) {
        goto LABEL_45;
      }
LABEL_35:
      int v36 = (v33 - 1) << v32;
      if (v31 > 3) {
        int v36 = 0;
      }
      if (v31)
      {
        if (v31 <= 3) {
          int v37 = v31;
        }
        else {
          int v37 = 4;
        }
        switch(v37)
        {
          case 2:
            int v38 = *a1;
            break;
          case 3:
            int v38 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v38 = *(_DWORD *)a1;
            break;
          default:
            int v38 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v38 = 0;
      }
      return v19 + (v38 | v36) + 1;
    }
    int v33 = *(unsigned __int16 *)((char *)a1 + v31);
    if (*(unsigned __int16 *)((char *)a1 + v31)) {
      goto LABEL_35;
    }
  }
LABEL_45:
  unint64_t v39 = (v25 + (((unint64_t)a1 + v24) & ~v23)) & 0xFFFFFFFFFFFFFFF8;
  if (v19 == 0x7FFFFFFF)
  {
    unint64_t v40 = *(void *)(v39 + 8);
LABEL_53:
    if (v40 >= 0xFFFFFFFF) {
      LODWORD(v40) = -1;
    }
    return (v40 + 1);
  }
  unint64_t v41 = (v28 + v39) & v27;
  if (v14 < v18)
  {
    unsigned int v42 = (*(uint64_t (**)(unint64_t, uint64_t))(v15 + 48))((v41 + v17 + v29) & ~v17, v16);
    if (v42 >= 2) {
      return v42 - 1;
    }
    else {
      return 0;
    }
  }
  if ((v13 & 0x80000000) == 0)
  {
    unint64_t v40 = *(void *)(((v28 + v39) & v27) + 8);
    goto LABEL_53;
  }
  uint64_t v43 = *(uint64_t (**)(unint64_t))(v12 + 48);

  return v43((v26
            + ((((((v41 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 16) & ~v26);
}

void sub_1000716F0(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(sub_1000E41D0() - 8) + 64);
  if (v8 <= 8) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(sub_1000E41F0() - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  unint64_t v12 = *(void *)(v10 + 64);
  int v13 = 0;
  uint64_t v14 = *(void *)(sub_1000E3EE0() - 8);
  uint64_t v15 = v14;
  unsigned int v16 = *(_DWORD *)(v14 + 84);
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v18 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v19 = *(unsigned int *)(v18 + 84);
  uint64_t v20 = *(void *)(v14 + 64);
  uint64_t v21 = *(unsigned __int8 *)(v18 + 80);
  unsigned int v22 = v19 - 1;
  if (!v19) {
    unsigned int v22 = 0;
  }
  if (v22 <= v17) {
    unsigned int v23 = v17;
  }
  else {
    unsigned int v23 = v22;
  }
  if (v11) {
    unint64_t v24 = v12;
  }
  else {
    unint64_t v24 = v12 + 1;
  }
  if (v24 <= 8) {
    unint64_t v24 = 8;
  }
  if (v16) {
    uint64_t v25 = v20;
  }
  else {
    uint64_t v25 = v20 + 1;
  }
  uint64_t v26 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v27 = v9 + v26 + 1;
  unint64_t v28 = v24 + 8;
  unint64_t v29 = (v24 + 8 + (v27 & ~v26)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = *(_DWORD *)(v15 + 80);
  unint64_t v31 = *(_DWORD *)(v15 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = v30 + 80;
  uint64_t v33 = (v30 + 80 + v29) & v31;
  size_t v34 = ((v20 + v30) & ~v30) + v20;
  size_t v35 = v25 + ((((v30 + 64) | v30) + v34) & ~v30);
  if (v19) {
    size_t v36 = *(void *)(v18 + 64);
  }
  else {
    size_t v36 = *(void *)(v18 + 64) + 1;
  }
  size_t v37 = ((v36 + v21 + ((v35 + 2 + v21 + v33) & ~v21)) & ~v21) + v36;
  if (a3 <= v23) {
    goto LABEL_33;
  }
  if (v37 <= 3)
  {
    unsigned int v38 = ((a3 - v23 + ~(-1 << (8 * v37))) >> (8 * v37)) + 1;
    if (HIWORD(v38))
    {
      int v13 = 4;
      if (v23 < a2) {
        goto LABEL_34;
      }
      goto LABEL_26;
    }
    if (v38 >= 0x100) {
      int v13 = 2;
    }
    else {
      int v13 = v38 > 1;
    }
LABEL_33:
    if (v23 < a2) {
      goto LABEL_34;
    }
LABEL_26:
    switch(v13)
    {
      case 1:
        a1[v37] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_42;
      case 2:
        *(_WORD *)&a1[v37] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_42;
      case 3:
        goto LABEL_99;
      case 4:
        *(_DWORD *)&a1[v37] = 0;
        goto LABEL_41;
      default:
LABEL_41:
        if (a2)
        {
LABEL_42:
          unint64_t v42 = (v28 + ((unint64_t)&a1[v27] & ~v26)) & 0xFFFFFFFFFFFFFFF8;
          if (v23 == 0x7FFFFFFF)
          {
            if ((a2 & 0x80000000) != 0)
            {
              *(void *)(v42 + 72) = 0;
              *(_OWORD *)(v42 + 56) = 0u;
              *(_OWORD *)(v42 + 40) = 0u;
              *(_OWORD *)(v42 + 24) = 0u;
              *(_OWORD *)(v42 + 8) = 0u;
              *(void *)unint64_t v42 = a2 ^ 0x80000000;
            }
            else
            {
              *(void *)(v42 + 8) = (a2 - 1);
            }
          }
          else
          {
            uint64_t v43 = (unsigned char *)((v32 + v42) & v31);
            if (v17 >= v22)
            {
              if (v17 >= a2)
              {
                if ((v16 & 0x80000000) != 0)
                {
                  uint64_t v43 = (unsigned char *)((v30
                                 + ((((((unint64_t)(v43 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                   + 23) & 0xFFFFFFFFFFFFFFF8)
                                 + 16) & ~v30);
                  if (v16 >= a2)
                  {
                    uint64_t v54 = *(void (**)(unsigned char *, uint64_t))(v15 + 56);
                    v54(v43, a2);
                  }
                  else
                  {
                    if (v34 <= 3) {
                      int v52 = ~(-1 << (8 * v34));
                    }
                    else {
                      int v52 = -1;
                    }
                    if (v34)
                    {
                      int v46 = v52 & (~v16 + a2);
                      if (v34 <= 3) {
                        int v53 = v34;
                      }
                      else {
                        int v53 = 4;
                      }
                      bzero(v43, v34);
                      switch(v53)
                      {
                        case 2:
LABEL_92:
                          *(_WORD *)uint64_t v43 = v46;
                          break;
                        case 3:
LABEL_93:
                          *(_WORD *)uint64_t v43 = v46;
                          v43[2] = BYTE2(v46);
                          break;
                        case 4:
LABEL_94:
                          *(_DWORD *)uint64_t v43 = v46;
                          break;
                        default:
LABEL_68:
                          unsigned char *v43 = v46;
                          break;
                      }
                    }
                  }
                }
                else if ((a2 & 0x80000000) != 0)
                {
                  *(void *)uint64_t v43 = a2 ^ 0x80000000;
                  *(void *)(((v32 + v42) & v31) + 8) = 0;
                }
                else
                {
                  *(void *)(((v32 + v42) & v31) + 8) = (a2 - 1);
                }
              }
              else
              {
                size_t v48 = (v35 + 2);
                if (v48 <= 3) {
                  int v49 = ~(-1 << (8 * (v35 + 2)));
                }
                else {
                  int v49 = -1;
                }
                if (v35 != -2)
                {
                  int v46 = v49 & (~v17 + a2);
                  if (v48 <= 3) {
                    int v50 = v35 + 2;
                  }
                  else {
                    int v50 = 4;
                  }
                  bzero((void *)((v32 + v42) & v31), v48);
                  switch(v50)
                  {
                    case 2:
                      goto LABEL_92;
                    case 3:
                      goto LABEL_93;
                    case 4:
                      goto LABEL_94;
                    default:
                      goto LABEL_68;
                  }
                }
              }
            }
            else
            {
              uint64_t v44 = (uint64_t)&v43[v21 + 2 + v35];
              uint64_t v43 = (unsigned char *)(v44 & ~v21);
              if (v22 >= a2)
              {
                uint64_t v51 = *(void (**)(uint64_t, void, uint64_t))(v18 + 56);
                v51(v44 & ~v21, (a2 + 1), v19);
              }
              else
              {
                if (v36 <= 3) {
                  int v45 = ~(-1 << (8 * v36));
                }
                else {
                  int v45 = -1;
                }
                if (v36)
                {
                  int v46 = v45 & (~v22 + a2);
                  if (v36 <= 3) {
                    int v47 = v36;
                  }
                  else {
                    int v47 = 4;
                  }
                  bzero(v43, v36);
                  switch(v47)
                  {
                    case 2:
                      goto LABEL_92;
                    case 3:
                      goto LABEL_93;
                    case 4:
                      goto LABEL_94;
                    default:
                      goto LABEL_68;
                  }
                }
              }
            }
          }
        }
        break;
    }
    return;
  }
  int v13 = 1;
  if (v23 >= a2) {
    goto LABEL_26;
  }
LABEL_34:
  unsigned int v39 = ~v23 + a2;
  if (v37 < 4)
  {
    int v40 = (v39 >> (8 * v37)) + 1;
    if (v37)
    {
      int v41 = v39 & ~(-1 << (8 * v37));
      bzero(a1, v37);
      if (v37 == 3)
      {
        *(_WORD *)a1 = v41;
        a1[2] = BYTE2(v41);
      }
      else if (v37 == 2)
      {
        *(_WORD *)a1 = v41;
      }
      else
      {
        *a1 = v41;
      }
    }
  }
  else
  {
    bzero(a1, v37);
    *(_DWORD *)a1 = v39;
    int v40 = 1;
  }
  switch(v13)
  {
    case 1:
      a1[v37] = v40;
      break;
    case 2:
      *(_WORD *)&a1[v37] = v40;
      break;
    case 3:
LABEL_99:
      __break(1u);
      JUMPOUT(0x100071D1CLL);
    case 4:
      *(_DWORD *)&a1[v37] = v40;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for SportsWidgetGenericClockView()
{
  return sub_10007A3D0();
}

uint64_t sub_100071D8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100071DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_100071E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E4680();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_1000E4690();
}

uint64_t sub_100071F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000E4680();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_1000E4690();
}

uint64_t sub_100071FFC(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      int v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *int v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        unsigned int v16 = &v8[8 * v9];
        unsigned int v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)unsigned int v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_1000E4FB0();
}

uint64_t sub_1000721C0()
{
  swift_getKeyPath();
  sub_1000E4AC0();

  return swift_release();
}

uint64_t sub_100072238@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C21AC(a1);
}

uint64_t sub_100072260(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 44);
  uint64_t result = *(void *)(v2 + 40);
  if (result)
  {
    uint64_t v4 = *(void *)(v2 + 32);
    swift_bridgeObjectRetain();
    v5._uint64_t countAndFlagsBits = 32;
    v5._object = (void *)0xE100000000000000;
    sub_1000E5A70(v5);
    return v4;
  }
  return result;
}

uint64_t sub_1000722BC(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 44);
  v3._object = *(void **)(v2 + 56);
  if (!v3._object) {
    return 0;
  }
  v3._uint64_t countAndFlagsBits = *(void *)(v2 + 48);
  sub_1000E5A70(v3);
  return 32;
}

uint64_t sub_100072318@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v81 = a1;
  int v86 = a2;
  uint64_t v85 = sub_1000E4320();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  size_t v83 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = *(void *)(a1 + 16);
  sub_1000E5C50();
  sub_100008354(&qword_10012CEC8);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  sub_1000E46A0();
  sub_1000E46A0();
  sub_1000E46A0();
  sub_1000E5C50();
  sub_100008354(&qword_10012CED0);
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v4 = sub_1000E4E50();
  WitnessTable = (void *)swift_getWitnessTable();
  uint64_t v111 = v4;
  uint64_t v112 = (uint64_t)WitnessTable;
  uint64_t v74 = &opaque type descriptor for <<opaque return type of View.accessibilityIdentifier(key:location:)>>;
  swift_getOpaqueTypeMetadata2();
  sub_100008354(&qword_10012CED8);
  sub_100008354(&qword_10012CEE0);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  uint64_t v73 = sub_1000E46A0();
  sub_100008354(&qword_10012CEE8);
  uint64_t v72 = sub_1000E46A0();
  sub_100008354(&qword_10012CEF0);
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  sub_1000E46A0();
  sub_100008354(&qword_10012CEF8);
  sub_1000E46A0();
  sub_1000E46A0();
  uint64_t v5 = sub_1000E4CB0();
  uint64_t v79 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v77 = (char *)&v57 - v6;
  sub_100008354(&qword_10012CF00);
  uint64_t v67 = v5;
  uint64_t v7 = sub_1000E41E0();
  uint64_t v78 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v76 = (char *)&v57 - v8;
  uint64_t v111 = v4;
  uint64_t v112 = (uint64_t)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v109 = OpaqueTypeConformance2;
  uint64_t v110 = v10;
  uint64_t v11 = swift_getWitnessTable();
  unint64_t v12 = sub_100079FE8();
  uint64_t v107 = v11;
  unint64_t v108 = v12;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v105 = v14;
  uint64_t v106 = v15;
  uint64_t v16 = swift_getWitnessTable();
  unint64_t v17 = sub_10007A08C();
  uint64_t v103 = v16;
  unint64_t v104 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v101 = v13;
  uint64_t v102 = v18;
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v19 = swift_getWitnessTable();
  WitnessTable = &protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>;
  uint64_t v20 = sub_100014AC4(&qword_10012CF18, &qword_10012CF00);
  uint64_t v98 = v19;
  uint64_t v99 = v20;
  uint64_t v74 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v111 = v7;
  uint64_t v112 = v64;
  size_t v66 = &opaque type descriptor for <<opaque return type of View.monospacedDigit()>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v68 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  unint64_t v22 = (char *)&v57 - v21;
  sub_100008354(&qword_10012C720);
  uint64_t v23 = sub_1000E41E0();
  uint64_t v70 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  size_t v58 = (char *)&v57 - v24;
  sub_100008354(&qword_10012A160);
  uint64_t v63 = sub_1000E41E0();
  uint64_t v71 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  size_t v59 = (char *)&v57 - v25;
  sub_100008354(&qword_10012A170);
  uint64_t v65 = sub_1000E41E0();
  uint64_t v73 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  size_t v60 = (char *)&v57 - v26;
  sub_100008354(&qword_10012C618);
  uint64_t v27 = sub_1000E41E0();
  uint64_t v72 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  size_t v61 = (char *)&v57 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v69 = (char *)&v57 - v30;
  uint64_t v31 = *(void *)(v81 + 24);
  uint64_t v87 = v80;
  uint64_t v88 = v31;
  uint64_t v89 = v82;
  uint64_t v32 = v77;
  sub_1000E4CA0();
  uint64_t v33 = v76;
  uint64_t v34 = v67;
  sub_1000E4B10();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v32, v34);
  uint64_t v35 = v64;
  sub_1000E4B20();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v33, v7);
  uint64_t v111 = v7;
  uint64_t v112 = v35;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  size_t v37 = v58;
  uint64_t v38 = OpaqueTypeMetadata2;
  sub_1000E4B80();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v38);
  uint64_t v39 = sub_100014AC4(&qword_10012C718, &qword_10012C720);
  uint64_t v96 = v36;
  uint64_t v97 = v39;
  uint64_t v40 = swift_getWitnessTable();
  int v41 = v59;
  sub_1000E4BC0();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v37, v23);
  uint64_t v42 = sub_100014AC4(&qword_10012A158, &qword_10012A160);
  uint64_t v94 = v40;
  uint64_t v95 = v42;
  uint64_t v43 = v63;
  uint64_t v44 = swift_getWitnessTable();
  int v45 = v60;
  sub_1000E4B70();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v41, v43);
  int v46 = v83;
  sub_1000E4310();
  uint64_t v47 = sub_100014AC4(&qword_10012A168, &qword_10012A170);
  uint64_t v92 = v44;
  uint64_t v93 = v47;
  uint64_t v48 = v65;
  uint64_t v49 = swift_getWitnessTable();
  int v50 = v61;
  sub_1000721C0();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v46, v85);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v48);
  uint64_t v51 = sub_100014AC4(&qword_10012C7B0, &qword_10012C618);
  uint64_t v90 = v49;
  uint64_t v91 = v51;
  swift_getWitnessTable();
  uint64_t v52 = v72;
  int v53 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  uint64_t v54 = v69;
  v53(v69, v50, v27);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v52 + 8);
  v55(v50, v27);
  v53(v86, v54, v27);
  return ((uint64_t (*)(char *, uint64_t))v55)(v54, v27);
}

uint64_t sub_100073154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v65 = a3;
  sub_1000E5C50();
  sub_100008354(&qword_10012CEC8);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  sub_1000E46A0();
  sub_1000E46A0();
  sub_1000E46A0();
  sub_1000E5C50();
  sub_100008354(&qword_10012CEF0);
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v4 = sub_1000E4E50();
  sub_100008354(&qword_10012CED8);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v72 = v4;
  uint64_t v70 = sub_1000E4E50();
  uint64_t v5 = sub_1000E46A0();
  sub_100008354(&qword_10012CEF8);
  uint64_t v71 = v5;
  uint64_t v6 = sub_1000E46A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  size_t v60 = (char *)&v60 - v11;
  sub_100008354(&qword_10012CED0);
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v12 = sub_1000E4E50();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v69 = v12;
  uint64_t v99 = v12;
  uint64_t v100 = WitnessTable;
  uint64_t v68 = WitnessTable;
  swift_getOpaqueTypeMetadata2();
  sub_100008354(&qword_10012CEE0);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v66 = sub_1000E4E50();
  uint64_t v14 = sub_1000E46A0();
  sub_100008354(&qword_10012CEE8);
  uint64_t v67 = v14;
  uint64_t v15 = sub_1000E46A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v60 - v20;
  uint64_t v63 = sub_1000E46A0();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  size_t v61 = (char *)&v60 - v22;
  uint64_t v23 = type metadata accessor for SportsWidgetGenericClockView();
  uint64_t v24 = a1 + *(int *)(v23 + 44);
  if (*(unsigned char *)(v24 + *(int *)(type metadata accessor for SportsWidgetGenericClockViewModel(0) + 44)) == 1)
  {
    sub_100073C40(v23, (uint64_t)v19);
    uint64_t v99 = v69;
    uint64_t v100 = v68;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v26 = swift_getWitnessTable();
    uint64_t v79 = OpaqueTypeConformance2;
    uint64_t v80 = v26;
    uint64_t v27 = swift_getWitnessTable();
    unint64_t v28 = sub_100079FE8();
    uint64_t v77 = v27;
    unint64_t v78 = v28;
    uint64_t v64 = swift_getWitnessTable();
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v29(v21, v19, v15);
    uint64_t v30 = *(void (**)(char *, uint64_t))(v16 + 8);
    v30(v19, v15);
    v29(v19, v21, v15);
    uint64_t v31 = swift_getWitnessTable();
    uint64_t v32 = swift_getWitnessTable();
    uint64_t v75 = v31;
    uint64_t v76 = v32;
    uint64_t v33 = swift_getWitnessTable();
    unint64_t v34 = sub_10007A08C();
    uint64_t v73 = v33;
    unint64_t v74 = v34;
    swift_getWitnessTable();
    uint64_t v35 = v61;
    sub_100071E0C((uint64_t)v19, v15);
    v30(v19, v15);
    v30(v21, v15);
  }
  else
  {
    sub_100074B34(v23, (uint64_t)v10);
    uint64_t v36 = swift_getWitnessTable();
    uint64_t v37 = swift_getWitnessTable();
    uint64_t v97 = v36;
    uint64_t v98 = v37;
    uint64_t v38 = swift_getWitnessTable();
    unint64_t v39 = sub_10007A08C();
    uint64_t v95 = v38;
    unint64_t v96 = v39;
    uint64_t v64 = swift_getWitnessTable();
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    int v41 = v60;
    v40(v60, v10, v6);
    uint64_t v42 = *(void (**)(char *, uint64_t))(v7 + 8);
    v42(v10, v6);
    v40(v10, v41, v6);
    uint64_t v99 = v69;
    uint64_t v100 = v68;
    uint64_t v43 = swift_getOpaqueTypeConformance2();
    uint64_t v44 = swift_getWitnessTable();
    uint64_t v93 = v43;
    uint64_t v94 = v44;
    uint64_t v45 = swift_getWitnessTable();
    unint64_t v46 = sub_100079FE8();
    uint64_t v91 = v45;
    unint64_t v92 = v46;
    swift_getWitnessTable();
    uint64_t v35 = v61;
    sub_100071F04((uint64_t)v10, v15, v6);
    v42(v10, v6);
    v42(v41, v6);
  }
  uint64_t v99 = v69;
  uint64_t v100 = v68;
  uint64_t v47 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v89 = v47;
  uint64_t v90 = v48;
  uint64_t v49 = swift_getWitnessTable();
  unint64_t v50 = sub_100079FE8();
  uint64_t v87 = v49;
  unint64_t v88 = v50;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v85 = v52;
  uint64_t v86 = v53;
  uint64_t v54 = swift_getWitnessTable();
  unint64_t v55 = sub_10007A08C();
  uint64_t v83 = v54;
  unint64_t v84 = v55;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v81 = v51;
  uint64_t v82 = v56;
  uint64_t v57 = v63;
  swift_getWitnessTable();
  uint64_t v58 = v62;
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v65, v35, v57);
  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v35, v57);
}

uint64_t sub_100073C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v98 = sub_1000082B4(&qword_10012CF20);
  __chkstk_darwin(v98);
  uint64_t v97 = (uint64_t *)((char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = sub_1000082B4(&qword_10012CEF0);
  uint64_t v96 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v107 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012CEE8);
  __chkstk_darwin(v5);
  uint64_t v106 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = *(void *)(a1 + 16);
  sub_1000E5C50();
  sub_100008354(&qword_10012CEC8);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  sub_1000E46A0();
  sub_1000E46A0();
  sub_1000E46A0();
  sub_1000E5C50();
  sub_100008354(&qword_10012CED8);
  sub_100008354(&qword_10012CEE0);
  swift_getTupleTypeMetadata3();
  uint64_t v7 = sub_1000E4FA0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v103 = (char *)v7;
  uint64_t v104 = WitnessTable;
  uint64_t v9 = sub_1000E4E50();
  uint64_t v105 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v101 = (void (**)(char *, void *))((char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v102 = (char *)&v96 - v12;
  sub_100008354(&qword_10012CED0);
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v13 = sub_1000E4E50();
  uint64_t v14 = swift_getWitnessTable();
  unsigned __int8 v129 = (void *)v13;
  uint64_t v130 = (void *)v14;
  uint64_t v118 = (void *)v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v16 = sub_1000E46A0();
  uint64_t v110 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v109 = (char *)&v96 - v17;
  uint64_t v117 = swift_checkMetadataState();
  uint64_t v18 = *(void (***)(char *, void *))(v117 - 8);
  uint64_t v19 = __chkstk_darwin(v117);
  uint64_t v21 = (char *)&v96 - v20;
  uint64_t v108 = OpaqueTypeMetadata2;
  uint64_t v22 = *(char **)(OpaqueTypeMetadata2 - 8);
  uint64_t v23 = __chkstk_darwin(v19);
  uint64_t v25 = (char *)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v96 - v26;
  uint64_t v112 = v5;
  uint64_t v28 = sub_1000E46A0();
  uint64_t v29 = v114;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v96 - v31;
  int v34 = *(unsigned __int8 *)(v29 + *(int *)(v32 + 40));
  uint64_t v115 = v35;
  uint64_t v116 = v30;
  if ((v34 - 1) >= 2)
  {
    uint64_t v101 = v18;
    uint64_t v102 = v22;
    uint64_t v49 = v107;
    uint64_t v103 = (char *)&v96 - v31;
    unint64_t v50 = v106;
    uint64_t v104 = v9;
    uint64_t v105 = v16;
    if (v34)
    {
      uint64_t v64 = v32;
      uint64_t v65 = sub_100072260(v32);
      unint64_t v67 = v66;
      swift_bridgeObjectRelease();
      uint64_t v68 = HIBYTE(v67) & 0xF;
      if ((v67 & 0x2000000000000000) == 0) {
        uint64_t v68 = v65 & 0xFFFFFFFFFFFFLL;
      }
      if (v68)
      {
        uint64_t v69 = sub_1000775FC(v64);
        uint64_t v71 = (uint64_t)v70;
        unsigned __int8 v129 = (void *)v69;
        uint64_t v130 = v70;
        char v73 = v72 & 1;
        char v131 = v72 & 1;
        uint64_t v132 = v74;
        uint64_t v75 = v49;
        sub_1000E4A20();
        sub_1000141AC(v69, v71, v73);
        swift_bridgeObjectRelease();
        uint64_t v76 = v96;
        uint64_t v77 = v49;
        uint64_t v78 = v99;
        (*(void (**)(uint64_t *, char *, uint64_t))(v96 + 16))(v97, v77, v99);
        swift_storeEnumTagMultiPayload();
        unsigned __int8 v129 = &type metadata for Text;
        uint64_t v130 = &protocol witness table for Text;
        swift_getOpaqueTypeConformance2();
        uint64_t v79 = (uint64_t)v50;
        sub_1000E4690();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v78);
      }
      else
      {
        uint64_t v80 = sub_10007770C(v64);
        uint64_t v81 = v97;
        *uint64_t v97 = v80;
        v81[1] = v82;
        *((unsigned char *)v81 + 16) = v83 & 1;
        v81[3] = v84;
        swift_storeEnumTagMultiPayload();
        unsigned __int8 v129 = &type metadata for Text;
        uint64_t v130 = &protocol witness table for Text;
        swift_getOpaqueTypeConformance2();
        uint64_t v79 = (uint64_t)v50;
        sub_1000E4690();
      }
      uint64_t v85 = v112;
      uint64_t v46 = v113;
      uint64_t v48 = (void *)v117;
      uint64_t v47 = v118;
      unsigned __int8 v129 = (void *)v117;
      uint64_t v130 = v118;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v87 = swift_getWitnessTable();
      uint64_t v127 = OpaqueTypeConformance2;
      uint64_t v128 = v87;
      uint64_t v88 = v105;
      swift_getWitnessTable();
      sub_100079FE8();
      uint64_t v33 = v103;
      sub_100071F04(v79, v88, v85);
      sub_1000147B8(v79, &qword_10012CEE8);
    }
    else
    {
      __chkstk_darwin(v30);
      uint64_t v52 = *(void *)(v51 + 24);
      *(&v96 - 4) = v53;
      *(&v96 - 3) = v52;
      *(&v96 - 2) = v29;
      sub_1000E45C0();
      swift_checkMetadataState();
      sub_1000E4E40();
      uint64_t v54 = (void *)v117;
      unint64_t v55 = v118;
      sub_1000E4A20();
      v101[1](v21, v54);
      unsigned __int8 v129 = v54;
      uint64_t v130 = v55;
      uint64_t v56 = swift_getOpaqueTypeConformance2();
      uint64_t v57 = v102;
      uint64_t v58 = (void (*)(char *, char *, uint64_t))*((void *)v102 + 2);
      uint64_t v59 = v108;
      v58(v27, v25, v108);
      size_t v60 = (void (*)(char *, uint64_t))*((void *)v57 + 1);
      v60(v25, v59);
      v58(v25, v27, v59);
      uint64_t v61 = swift_getWitnessTable();
      uint64_t v62 = (uint64_t)v109;
      sub_100071E0C((uint64_t)v25, v59);
      v60(v25, v59);
      uint64_t v119 = v56;
      uint64_t v120 = v61;
      uint64_t v63 = v105;
      swift_getWitnessTable();
      sub_100079FE8();
      uint64_t v33 = v103;
      sub_100071E0C(v62, v63);
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v62, v63);
      v60(v27, v59);
      uint64_t v48 = (void *)v117;
      uint64_t v47 = v118;
      uint64_t v46 = v113;
    }
  }
  else
  {
    __chkstk_darwin(v30);
    uint64_t v37 = *(void *)(v36 + 24);
    *(&v96 - 4) = v111;
    *(&v96 - 3) = v37;
    *(&v96 - 2) = v29;
    sub_1000E45C0();
    uint64_t v38 = (uint64_t)v101;
    sub_1000E4E40();
    uint64_t v39 = swift_getWitnessTable();
    uint64_t v40 = v105;
    int v41 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
    uint64_t v42 = v102;
    v41(v102, v38, v9);
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v43(v38, v9);
    v41((char *)v38, (uint64_t)v42, v9);
    unsigned __int8 v129 = (void *)v117;
    uint64_t v130 = v118;
    uint64_t v44 = swift_getOpaqueTypeConformance2();
    uint64_t v45 = (uint64_t)v109;
    sub_100071F04(v38, v108, v9);
    v43(v38, v9);
    uint64_t v121 = v44;
    uint64_t v122 = v39;
    swift_getWitnessTable();
    sub_100079FE8();
    sub_100071E0C(v45, v16);
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v45, v16);
    v43((uint64_t)v42, v9);
    uint64_t v46 = v113;
    uint64_t v48 = (void *)v117;
    uint64_t v47 = v118;
  }
  unsigned __int8 v129 = v48;
  uint64_t v130 = v47;
  uint64_t v89 = swift_getOpaqueTypeConformance2();
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v125 = v89;
  uint64_t v126 = v90;
  uint64_t v91 = swift_getWitnessTable();
  unint64_t v92 = sub_100079FE8();
  uint64_t v123 = v91;
  unint64_t v124 = v92;
  uint64_t v93 = v116;
  swift_getWitnessTable();
  uint64_t v94 = v115;
  (*(void (**)(uint64_t, char *, uint64_t))(v115 + 16))(v46, v33, v93);
  return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v33, v93);
}

uint64_t sub_100074B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v105 = a1;
  uint64_t v104 = a2;
  uint64_t v89 = sub_1000082B4(&qword_10012CF50);
  __chkstk_darwin(v89);
  uint64_t v90 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000082B4(&qword_10012CEF0);
  uint64_t v98 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v97 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000082B4(&qword_10012CEF8);
  __chkstk_darwin(v6);
  uint64_t v96 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = *(void *)(a1 + 16);
  sub_1000E5C50();
  sub_100008354(&qword_10012CEC8);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  sub_1000E46A0();
  sub_1000E46A0();
  sub_1000E46A0();
  sub_1000E5C50();
  sub_100008354(&qword_10012CED8);
  swift_getTupleTypeMetadata3();
  uint64_t v8 = sub_1000E4FA0();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v92 = (char *)v8;
  uint64_t v93 = WitnessTable;
  uint64_t v10 = sub_1000E4E50();
  uint64_t v95 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v94 = (char *)&v88 - v14;
  uint64_t v91 = v4;
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v15 = sub_1000E4E50();
  uint64_t v16 = sub_1000E46A0();
  uint64_t v99 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v100 = (char *)&v88 - v18;
  uint64_t v19 = *(void *)(v15 - 8);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v88 - v23;
  uint64_t v103 = v6;
  uint64_t v25 = sub_1000E46A0();
  uint64_t v26 = v106;
  uint64_t v27 = __chkstk_darwin(v25);
  int v29 = v26[*(int *)(v28 + 40)];
  uint64_t v107 = v30;
  uint64_t v108 = v27;
  uint64_t v102 = (char *)&v88 - v31;
  if ((v29 - 1) >= 2)
  {
    unint64_t v92 = v24;
    uint64_t v44 = (char *)v15;
    uint64_t v45 = (uint64_t)v100;
    uint64_t v46 = v97;
    uint64_t v47 = (uint64_t)v96;
    uint64_t v94 = v44;
    uint64_t v95 = v10;
    uint64_t v93 = v16;
    if (v29)
    {
      uint64_t v58 = v28;
      uint64_t v59 = sub_100072260(v28);
      unint64_t v61 = v60;
      swift_bridgeObjectRelease();
      uint64_t v62 = HIBYTE(v61) & 0xF;
      if ((v61 & 0x2000000000000000) == 0) {
        uint64_t v62 = v59 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v63 = (void (**)(char *, char *, uint64_t))(v98 + 16);
      if (v62)
      {
        uint64_t v64 = sub_1000775FC(v58);
        uint64_t v66 = (uint64_t)v65;
        uint64_t v119 = (void *)v64;
        uint64_t v120 = v65;
        char v68 = v67 & 1;
        char v121 = v67 & 1;
        uint64_t v122 = v69;
        uint64_t v70 = v46;
        sub_1000E4A20();
        sub_1000141AC(v64, v66, v68);
      }
      else
      {
        uint64_t v72 = sub_100078C40();
        uint64_t v74 = (uint64_t)v73;
        uint64_t v119 = (void *)v72;
        uint64_t v120 = v73;
        char v76 = v75 & 1;
        char v121 = v75 & 1;
        uint64_t v122 = v77;
        sub_1000E4A20();
        sub_1000141AC(v72, v74, v76);
        uint64_t v70 = v46;
      }
      swift_bridgeObjectRelease();
      uint64_t v71 = v91;
      (*v63)(v90, v46, v91);
      swift_storeEnumTagMultiPayload();
      uint64_t v119 = &type metadata for Text;
      uint64_t v120 = &protocol witness table for Text;
      swift_getOpaqueTypeConformance2();
      sub_1000E4690();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v70, v71);
      uint64_t v78 = swift_getWitnessTable();
      uint64_t v79 = swift_getWitnessTable();
      uint64_t v117 = v78;
      uint64_t v118 = v79;
      uint64_t v80 = v93;
      swift_getWitnessTable();
      sub_10007A08C();
      uint64_t v42 = v102;
      sub_100071F04(v47, v80, v103);
      sub_1000147B8(v47, &qword_10012CEF8);
    }
    else
    {
      __chkstk_darwin(v27);
      uint64_t v49 = *(void *)(v48 + 24);
      *(&v88 - 4) = v50;
      *(&v88 - 3) = v49;
      *(&v88 - 2) = (uint64_t)v26;
      sub_1000E45C0();
      sub_1000E4E40();
      uint64_t v51 = (uint64_t)v94;
      uint64_t v52 = swift_getWitnessTable();
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      uint64_t v54 = v92;
      v53(v92, v22, v51);
      unint64_t v55 = *(void (**)(char *, uint64_t))(v19 + 8);
      v55(v22, v51);
      uint64_t v106 = (unsigned __int8 *)v55;
      v53(v22, v54, v51);
      uint64_t v56 = swift_getWitnessTable();
      sub_100071E0C((uint64_t)v22, v51);
      v55(v22, v51);
      uint64_t v109 = v52;
      uint64_t v110 = v56;
      uint64_t v57 = v93;
      swift_getWitnessTable();
      sub_10007A08C();
      uint64_t v42 = v102;
      sub_100071E0C(v45, v57);
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v45, v57);
      ((void (*)(char *, uint64_t))v106)(v54, v51);
    }
    uint64_t v43 = v104;
  }
  else
  {
    __chkstk_darwin(v27);
    uint64_t v33 = *(void *)(v32 + 24);
    *(&v88 - 4) = v101;
    *(&v88 - 3) = v33;
    *(&v88 - 2) = (uint64_t)v26;
    sub_1000E45C0();
    sub_1000E4E40();
    uint64_t v106 = (unsigned __int8 *)swift_getWitnessTable();
    uint64_t v34 = v95;
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
    uint64_t v36 = v94;
    v35(v94, v13, v10);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
    v37(v13, v10);
    v35(v13, v36, v10);
    uint64_t v38 = swift_getWitnessTable();
    uint64_t v39 = (uint64_t)v100;
    uint64_t v40 = v15;
    int v41 = v106;
    sub_100071F04((uint64_t)v13, v40, v10);
    v37(v13, v10);
    uint64_t v111 = v38;
    uint64_t v112 = v41;
    swift_getWitnessTable();
    sub_10007A08C();
    uint64_t v42 = v102;
    sub_100071E0C(v39, v16);
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v39, v16);
    v37(v36, v10);
    uint64_t v43 = v104;
  }
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v115 = v81;
  uint64_t v116 = v82;
  uint64_t v83 = swift_getWitnessTable();
  unint64_t v84 = sub_10007A08C();
  uint64_t v113 = v83;
  unint64_t v114 = v84;
  uint64_t v85 = v108;
  swift_getWitnessTable();
  uint64_t v86 = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v107 + 16))(v43, v42, v85);
  return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v42, v85);
}

uint64_t sub_1000758A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v69 = a3;
  uint64_t v66 = a4;
  uint64_t v6 = sub_1000082B4(&qword_10012C540);
  __chkstk_darwin(v6 - 8);
  uint64_t v63 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E41F0();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  __chkstk_darwin(v8);
  uint64_t v70 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E41D0();
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  __chkstk_darwin(v10);
  uint64_t v58 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a2;
  sub_1000E5C50();
  sub_100008354(&qword_10012CEC8);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v68 = sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  sub_1000E46A0();
  uint64_t v60 = sub_1000E46A0();
  uint64_t v67 = sub_1000E46A0();
  uint64_t v12 = sub_1000E5C50();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = type metadata accessor for SportsWidgetGenericClockView();
  sub_100076050(v19, v16);
  v86[9] = swift_getWitnessTable();
  v86[10] = &protocol witness table for _PaddingLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = swift_getWitnessTable();
  _OWORD v86[7] = WitnessTable;
  v86[8] = v21;
  v86[5] = swift_getWitnessTable();
  v86[6] = &protocol witness table for EmptyView;
  v86[3] = swift_getWitnessTable();
  v86[4] = &protocol witness table for Text;
  v86[2] = swift_getWitnessTable();
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v67 = (uint64_t)v18;
  uint64_t v53 = v22;
  uint64_t v54 = v13 + 16;
  v22(v18, (uint64_t)v16, v12);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  uint64_t v59 = v16;
  uint64_t v60 = v13 + 8;
  uint64_t v68 = v12;
  uint64_t v57 = v23;
  v23(v16, v12);
  uint64_t v24 = sub_1000E4F50();
  uint64_t v51 = v25;
  uint64_t v52 = v24;
  sub_100077474((uint64_t)&v74);
  uint64_t v26 = v75;
  uint64_t v69 = v74;
  LODWORD(v55) = v76;
  uint64_t v27 = v77;
  uint64_t v28 = (void *)(a1 + *(int *)(v19 + 44));
  int v29 = (void *)v28[5];
  uint64_t v50 = v28[4];
  uint64_t v30 = v28[6];
  uint64_t v31 = (void *)v28[7];
  uint64_t v32 = v58;
  sub_1000C1F94((uint64_t)v58);
  uint64_t v33 = v61;
  uint64_t v34 = v63;
  sub_1000C21AC(v63);
  uint64_t v35 = v62;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v34, 1, v62) == 1)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v33 + 104))(v70, enum case for LegibilityWeight.regular(_:), v35);
    sub_1000147B8(v34, &qword_10012C540);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v70, v34, v35);
  }
  uint64_t v36 = v30;
  uint64_t v37 = v70;
  sub_10009526C(v50, v29, v36, v31, v32, v70);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v35);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v32, v65);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v70 = v86[11];
  LOBYTE(v37) = v87;
  uint64_t v65 = v88;
  char v38 = v89;
  uint64_t v39 = v90;
  uint64_t v40 = v91;
  int v41 = v59;
  v53(v59, v67, v68);
  uint64_t v74 = v52;
  uint64_t v75 = v51;
  uint64_t v42 = v69;
  uint64_t v76 = v69;
  uint64_t v77 = v26;
  char v43 = v55;
  char v78 = v55;
  uint64_t v79 = v27;
  uint64_t v80 = v70;
  char v81 = v37;
  uint64_t v82 = v65;
  char v83 = v38;
  uint64_t v84 = v39;
  uint64_t v85 = v40;
  v86[0] = v41;
  v86[1] = &v74;
  sub_10003A978(v69, v26, v55);
  swift_bridgeObjectRetain();
  uint64_t v44 = v68;
  v73[0] = v68;
  v73[1] = sub_1000082B4(&qword_10012CED0);
  uint64_t v71 = v56;
  unint64_t v72 = sub_10007A15C();
  sub_100071FFC((uint64_t)v86, 2uLL, (uint64_t)v73);
  sub_1000141AC(v42, v26, v43);
  swift_bridgeObjectRelease();
  uint64_t v45 = v44;
  uint64_t v46 = v44;
  uint64_t v47 = v57;
  v57((char *)v67, v46);
  sub_1000141AC(v76, v77, v78);
  swift_bridgeObjectRelease();
  return v47(v41, v45);
}

uint64_t sub_100076050@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v178 = a2;
  sub_100008354(&qword_10012CEC8);
  uint64_t v179 = *(void *)(a1 + 16);
  uint64_t v5 = sub_1000E5C50();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_1000E4FA0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v152 = v6;
  uint64_t v7 = sub_1000E4E50();
  uint64_t v155 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v153 = (char *)&v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v154 = (char *)&v144 - v10;
  swift_getTupleTypeMetadata3();
  uint64_t v11 = sub_1000E4FA0();
  uint64_t v156 = swift_getWitnessTable();
  uint64_t v157 = v11;
  uint64_t v12 = sub_1000E4DF0();
  uint64_t v13 = sub_1000E41E0();
  uint64_t v184 = v7;
  uint64_t v14 = sub_1000E46A0();
  uint64_t v170 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v169 = (char *)&v144 - v16;
  uint64_t v183 = v12;
  uint64_t v160 = *(void *)(v12 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  int v158 = (char *)&v144 - v18;
  uint64_t v186 = v13;
  uint64_t v163 = *(void *)(v13 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  char v161 = (char *)&v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  BOOL v159 = (char *)&v144 - v22;
  __chkstk_darwin(v21);
  uint64_t v162 = (char *)&v144 - v23;
  uint64_t v187 = v24;
  uint64_t v25 = sub_1000E46A0();
  uint64_t v172 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v171 = (char *)&v144 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v173 = (char *)&v144 - v29;
  uint64_t v180 = a1;
  uint64_t v175 = *(void *)(a1 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v174 = (char *)&v144 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = v5;
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v168 = (char *)&v144 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v144 - v35;
  uint64_t v185 = v37;
  uint64_t v38 = sub_1000E46A0();
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  v176 = (char *)&v144 - v40;
  uint64_t v41 = sub_1000E5C50();
  uint64_t v42 = __chkstk_darwin(v41);
  __chkstk_darwin(v42);
  uint64_t v47 = v3;
  uint64_t v48 = v3 + *(int *)(a1 + 44);
  uint64_t v49 = *(void *)(v48 + 24);
  uint64_t v181 = (char *)&v144 - v43;
  uint64_t v182 = v38;
  if (v49)
  {
    uint64_t v164 = v39;
    uint64_t v165 = v46;
    uint64_t v166 = v45;
    uint64_t v167 = v44;
    uint64_t v50 = *(void *)(v48 + 16);
    uint64_t v51 = v180;
    uint64_t v52 = (char *)(v47 + *(int *)(v180 + 48));
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    uint64_t v54 = v177;
    uint64_t v146 = v50;
    unint64_t v147 = v53;
    v53(v36, v52, v177);
    uint64_t v55 = *(void *)(v179 - 8);
    uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
    uint64_t v148 = v55 + 48;
    unint64_t v149 = v56;
    int v57 = ((uint64_t (*)(char *, uint64_t))v56)(v36, 1);
    uint64_t v58 = *(void (**)(char *, uint64_t))(v32 + 8);
    swift_bridgeObjectRetain();
    uint64_t v150 = v32 + 8;
    v58(v36, v54);
    uint64_t v59 = v174;
    uint64_t v60 = v175;
    (*(void (**)(char *, uint64_t, uint64_t))(v175 + 16))(v174, v47, v51);
    if (v57 == 1)
    {
      uint64_t v61 = v180;
      uint64_t v62 = &v59[*(int *)(v180 + 52)];
      uint64_t v145 = v47;
      uint64_t v63 = v168;
      uint64_t v64 = v177;
      v147(v168, v62, v177);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
      uint64_t v65 = v179;
      int v66 = v149(v63, 1, v179);
      uint64_t v67 = v63;
      uint64_t v47 = v145;
      v58(v67, v64);
      uint64_t v68 = v184;
      if (v66 == 1)
      {
        uint64_t v220 = v146;
        uint64_t v221 = v49;
        sub_100014158();
        uint64_t v69 = sub_1000E4A00();
        uint64_t v71 = v70;
        uint64_t v220 = v69;
        uint64_t v221 = v70;
        char v73 = v72 & 1;
        char v222 = v72 & 1;
        uint64_t v223 = v74;
        uint64_t v218 = swift_getWitnessTable();
        uint64_t v219 = &protocol witness table for _PaddingLayout;
        uint64_t v75 = swift_getWitnessTable();
        uint64_t v76 = swift_getWitnessTable();
        uint64_t v216 = v75;
        uint64_t v217 = v76;
        uint64_t v214 = swift_getWitnessTable();
        uint64_t v215 = &protocol witness table for EmptyView;
        uint64_t v77 = v185;
        swift_getWitnessTable();
        char v78 = v176;
        sub_100071F04((uint64_t)&v220, v77, (uint64_t)&type metadata for Text);
        sub_1000141AC(v69, v71, v73);
        swift_bridgeObjectRelease();
        uint64_t v79 = v182;
        uint64_t v80 = v164;
LABEL_16:
        uint64_t v212 = swift_getWitnessTable();
        uint64_t v213 = &protocol witness table for _PaddingLayout;
        uint64_t v136 = swift_getWitnessTable();
        uint64_t v137 = swift_getWitnessTable();
        uint64_t v210 = v136;
        uint64_t v211 = v137;
        uint64_t v208 = swift_getWitnessTable();
        Swift::String v209 = &protocol witness table for EmptyView;
        uint64_t v206 = swift_getWitnessTable();
        int v207 = &protocol witness table for Text;
        swift_getWitnessTable();
        uint64_t v138 = v165;
        (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v165, v78, v79);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v79);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v138, 0, 1, v79);
        uint64_t v139 = v166;
        uint64_t v83 = v167;
        char v87 = *(void (**)(char *, uint64_t, uint64_t))(v166 + 16);
        v87(v181, v138, v167);
        uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v139 + 8);
        v88(v138, v83);
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v61 = v180;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v180);
      uint64_t v68 = v184;
      uint64_t v65 = v179;
    }
    uint64_t v89 = swift_bridgeObjectRelease();
    unsigned int v90 = *(unsigned __int8 *)(v47 + *(int *)(v61 + 40));
    if (v90 >= 2)
    {
      uint64_t v112 = v187;
      uint64_t v110 = v173;
      if (v90 == 2)
      {
        __chkstk_darwin(v89);
        uint64_t v113 = *(void *)(v61 + 24);
        *(&v144 - 4) = v114;
        *(&v144 - 3) = v113;
        *(&v144 - 2) = v115;
        sub_1000E45C0();
        uint64_t v116 = (uint64_t)v153;
        sub_1000E4E40();
        uint64_t v117 = swift_getWitnessTable();
        uint64_t v119 = v154;
        uint64_t v118 = v155;
        uint64_t v120 = *(void (**)(char *, uint64_t, uint64_t))(v155 + 16);
        v120(v154, v116, v68);
        char v121 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
        v121(v116, v68);
        v120((char *)v116, (uint64_t)v119, v68);
        uint64_t v194 = swift_getWitnessTable();
        uint64_t v195 = &protocol witness table for _PaddingLayout;
        uint64_t v122 = swift_getWitnessTable();
        uint64_t v123 = (uint64_t)v169;
        sub_100071F04(v116, v186, v68);
        v121(v116, v68);
        uint64_t v192 = v122;
        uint64_t v193 = v117;
        uint64_t v124 = v187;
        swift_getWitnessTable();
        uint64_t v125 = v173;
        sub_100071E0C(v123, v124);
        (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v123, v124);
        v121((uint64_t)v119, v68);
        uint64_t v111 = v185;
        uint64_t v79 = v182;
        uint64_t v126 = v125;
LABEL_15:
        uint64_t v200 = swift_getWitnessTable();
        uint64_t v201 = &protocol witness table for _PaddingLayout;
        uint64_t v130 = swift_getWitnessTable();
        uint64_t v131 = swift_getWitnessTable();
        uint64_t v198 = v130;
        uint64_t v199 = v131;
        uint64_t v196 = swift_getWitnessTable();
        uint64_t v197 = &protocol witness table for EmptyView;
        swift_getWitnessTable();
        uint64_t v132 = v172;
        uint64_t v133 = (uint64_t)v171;
        (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v171, v126, v111);
        uint64_t v134 = v176;
        sub_100071E0C(v133, v111);
        uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
        v135(v133, v111);
        v135((uint64_t)v126, v111);
        char v78 = v134;
        uint64_t v80 = v164;
        goto LABEL_16;
      }
      uint64_t v204 = swift_getWitnessTable();
      uint64_t v205 = &protocol witness table for _PaddingLayout;
      uint64_t v127 = swift_getWitnessTable();
      uint64_t v128 = swift_getWitnessTable();
      uint64_t v202 = v127;
      uint64_t v203 = v128;
      uint64_t v129 = swift_getWitnessTable();
      sub_100071F04(v129, v112, (uint64_t)&type metadata for EmptyView);
      uint64_t v111 = v185;
      uint64_t v79 = v182;
    }
    else
    {
      uint64_t v91 = sub_1000E4510();
      __chkstk_darwin(v91);
      uint64_t v92 = *(void *)(v61 + 24);
      *(&v144 - 4) = v65;
      *(&v144 - 3) = v92;
      *(&v144 - 2) = v47;
      uint64_t v93 = v158;
      sub_1000E4DE0();
      char v94 = sub_1000E4740();
      sub_1000E4790();
      sub_1000E4790();
      char v95 = sub_1000E4790();
      uint64_t v96 = v186;
      if (v95 != v94) {
        sub_1000E4790();
      }
      uint64_t v97 = v183;
      uint64_t v98 = swift_getWitnessTable();
      uint64_t v99 = v159;
      sub_1000E4B90();
      (*(void (**)(char *, uint64_t))(v160 + 8))(v93, v97);
      uint64_t v190 = v98;
      uint64_t v191 = &protocol witness table for _PaddingLayout;
      uint64_t v100 = v96;
      uint64_t v101 = swift_getWitnessTable();
      uint64_t v103 = v162;
      uint64_t v102 = v163;
      uint64_t v104 = *(void (**)(char *, char *, uint64_t))(v163 + 16);
      v104(v162, v99, v100);
      uint64_t v105 = *(void (**)(char *, uint64_t))(v102 + 8);
      v105(v99, v100);
      uint64_t v106 = (uint64_t)v161;
      v104(v161, v103, v100);
      uint64_t v107 = swift_getWitnessTable();
      uint64_t v108 = (uint64_t)v169;
      sub_100071E0C(v106, v100);
      v105((char *)v106, v100);
      uint64_t v188 = v101;
      uint64_t v189 = v107;
      uint64_t v109 = v187;
      swift_getWitnessTable();
      uint64_t v110 = v173;
      sub_100071E0C(v108, v109);
      (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v108, v109);
      v105(v103, v100);
      uint64_t v111 = v185;
      uint64_t v79 = v182;
    }
    uint64_t v126 = v110;
    goto LABEL_15;
  }
  char v81 = (char *)&v144 - v43;
  uint64_t v82 = v46;
  uint64_t v83 = v44;
  uint64_t v84 = v45;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v46, 1, 1, v38);
  uint64_t v239 = swift_getWitnessTable();
  uint64_t v240 = &protocol witness table for _PaddingLayout;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v237 = v85;
  uint64_t v238 = v86;
  uint64_t v235 = swift_getWitnessTable();
  uint64_t v236 = &protocol witness table for EmptyView;
  uint64_t v233 = swift_getWitnessTable();
  uint64_t v234 = &protocol witness table for Text;
  swift_getWitnessTable();
  char v87 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v87(v81, v82, v83);
  uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v88(v82, v83);
LABEL_17:
  uint64_t v231 = swift_getWitnessTable();
  v232 = &protocol witness table for _PaddingLayout;
  uint64_t v140 = swift_getWitnessTable();
  uint64_t v141 = swift_getWitnessTable();
  uint64_t v229 = v140;
  uint64_t v230 = v141;
  uint64_t v227 = swift_getWitnessTable();
  uint64_t v228 = &protocol witness table for EmptyView;
  uint64_t v225 = swift_getWitnessTable();
  uint64_t v226 = &protocol witness table for Text;
  uint64_t v224 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v142 = v181;
  v87(v178, (uint64_t)v181, v83);
  return ((uint64_t (*)(char *, uint64_t))v88)(v142, v83);
}

uint64_t sub_100077474@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = type metadata accessor for SportsWidgetGenericClockView();
  uint64_t v2 = sub_1000775FC(v1);
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = sub_10007770C(v1);
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v12 = sub_1000E4960();
  uint64_t v27 = v13;
  uint64_t v28 = v12;
  char v26 = v14 & 1;
  sub_1000141AC(v7, v9, v11);
  swift_bridgeObjectRelease();
  sub_1000141AC(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_100077834(v1);
  uint64_t v17 = v16;
  LOBYTE(v7) = v18 & 1;
  uint64_t v24 = sub_1000E4960();
  uint64_t v25 = v19;
  uint64_t v21 = v20;
  LOBYTE(v1) = v22;
  sub_1000141AC(v15, v17, v7);
  swift_bridgeObjectRelease();
  sub_1000141AC(v28, v27, v26);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v24;
  *(void *)(a1 + 8) = v21;
  *(unsigned char *)(a1 + 16) = v1 & 1;
  *(void *)(a1 + 24) = v25;
  return result;
}

uint64_t sub_1000775FC(uint64_t a1)
{
  sub_100072260(a1);
  sub_100014158();
  uint64_t v1 = sub_1000E4A00();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  uint64_t v6 = sub_1000E4970();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  sub_1000141AC(v1, v3, v5);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1000E4940();
  sub_1000141AC(v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10007770C(uint64_t a1)
{
  uint64_t v3 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v3 - 8);
  char v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000082B4(&qword_100129F28);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v1 + *(int *)(a1 + 44);
  uint64_t v10 = type metadata accessor for SportsWidgetGenericClockViewModel(0);
  sub_100014754(v9 + *(int *)(v10 + 32), (uint64_t)v8, &qword_100129F28);
  sub_100014754(v9 + *(int *)(v10 + 36), (uint64_t)v5, &qword_100129F30);
  return sub_1000E4930();
}

uint64_t sub_100077834(uint64_t a1)
{
  return sub_1000E4A00();
}

uint64_t sub_100077874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v105 = a3;
  uint64_t v101 = a4;
  uint64_t v5 = sub_1000082B4(&qword_10012C540);
  __chkstk_darwin(v5 - 8);
  uint64_t v91 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E41F0();
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v93 = v7;
  __chkstk_darwin(v7);
  uint64_t v80 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000E41D0();
  uint64_t v90 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v106 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000082B4(&qword_10012CEE0);
  uint64_t v99 = *(void *)(v10 - 8);
  uint64_t v100 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v98 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  char v94 = (char *)&v80 - v14;
  __chkstk_darwin(v13);
  uint64_t v96 = (char *)&v80 - v15;
  uint64_t v95 = sub_1000082B4(&qword_10012CED8);
  uint64_t v16 = __chkstk_darwin(v95);
  uint64_t v97 = (uint64_t)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v107 = (uint64_t)&v80 - v18;
  sub_1000E5C50();
  sub_100008354(&qword_10012CEC8);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v102 = sub_1000E4DF0();
  char v87 = (uint64_t (*)(char *, uint64_t))sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  sub_1000E46A0();
  uint64_t v88 = sub_1000E46A0();
  uint64_t v89 = sub_1000E46A0();
  uint64_t v19 = sub_1000E5C50();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v80 - v24;
  uint64_t v26 = type metadata accessor for SportsWidgetGenericClockView();
  sub_100076050(v26, v23);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v133 = &protocol witness table for _PaddingLayout;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v130 = v27;
  uint64_t v131 = v28;
  uint64_t v128 = swift_getWitnessTable();
  uint64_t v129 = &protocol witness table for EmptyView;
  uint64_t v126 = swift_getWitnessTable();
  uint64_t v127 = &protocol witness table for Text;
  uint64_t v125 = swift_getWitnessTable();
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v102 = (uint64_t)v25;
  uint64_t v84 = v29;
  uint64_t v85 = v20 + 16;
  v29(v25, (uint64_t)v23, v19);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  uint64_t v103 = v23;
  uint64_t v31 = v23;
  uint64_t v32 = v26;
  uint64_t v88 = v20 + 8;
  uint64_t v89 = v19;
  char v87 = v30;
  v30(v31, v19);
  uint64_t v33 = a1;
  uint64_t v34 = sub_100072260(v26);
  unint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = HIBYTE(v36) & 0xF;
  if ((v36 & 0x2000000000000000) == 0) {
    uint64_t v37 = v34 & 0xFFFFFFFFFFFFLL;
  }
  if (v37)
  {
    uint64_t v38 = sub_1000775FC(v26);
    uint64_t v40 = v39;
    uint64_t v114 = v38;
    uint64_t v115 = v39;
    char v42 = v41 & 1;
    LOBYTE(v116) = v41 & 1;
    uint64_t v117 = v43;
    uint64_t v44 = v107;
    sub_1000E4A20();
    sub_1000141AC(v38, v40, v42);
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_1000082B4(&qword_10012CEF0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
  }
  else
  {
    uint64_t v46 = sub_1000082B4(&qword_10012CEF0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v107, 1, 1, v46);
  }
  uint64_t v47 = sub_1000E4F50();
  uint64_t v82 = v48;
  uint64_t v83 = v47;
  sub_100078360((uint64_t)&v114);
  uint64_t v49 = v114;
  uint64_t v50 = v115;
  int v51 = v116;
  uint64_t v52 = v117;
  uint64_t v53 = v33 + *(int *)(v32 + 44);
  uint64_t v54 = *(void *)(v53 + 48);
  uint64_t v55 = *(void **)(v53 + 56);
  sub_1000C1F94((uint64_t)v106);
  uint64_t v56 = v91;
  sub_1000C21AC(v91);
  uint64_t v58 = v92;
  uint64_t v57 = v93;
  int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v56, 1, v93);
  LODWORD(v105) = v51;
  uint64_t v60 = (uint64_t)v80;
  if (v59 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v80, enum case for LegibilityWeight.regular(_:), v57);
    sub_1000147B8(v56, &qword_10012C540);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v80, v56, v57);
  }
  uint64_t v61 = v81;
  uint64_t v62 = v55;
  uint64_t v63 = v106;
  sub_10009526C(0, 0, v54, v62, v106, v60);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v60, v57);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v63, v61);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v114 = v83;
  uint64_t v115 = v82;
  uint64_t v64 = v49;
  uint64_t v116 = (char *)v49;
  uint64_t v117 = v50;
  uint64_t v65 = v50;
  char v66 = v105;
  char v118 = v105;
  uint64_t v119 = v52;
  uint64_t v120 = v134;
  char v121 = v135;
  uint64_t v122 = v136;
  char v123 = v137;
  long long v124 = v138;
  uint64_t v106 = (char *)sub_1000082B4(&qword_10012CED0);
  unint64_t v67 = sub_10007A15C();
  uint64_t v68 = v94;
  sub_1000E4A20();
  sub_1000141AC(v64, v65, v66);
  swift_bridgeObjectRelease();
  uint64_t v70 = v99;
  uint64_t v69 = v100;
  uint64_t v71 = v96;
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v96, v68, v100);
  char v72 = v103;
  uint64_t v73 = v89;
  v84(v103, v102, v89);
  uint64_t v114 = (uint64_t)v72;
  uint64_t v74 = v107;
  uint64_t v75 = v97;
  sub_100014754(v107, v97, &qword_10012CED8);
  uint64_t v115 = v75;
  uint64_t v76 = v98;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v98, v71, v69);
  uint64_t v116 = v76;
  v113[0] = v73;
  v113[1] = v95;
  _OWORD v113[2] = v69;
  uint64_t v110 = v86;
  unint64_t v111 = sub_10007A314();
  uint64_t v108 = v106;
  unint64_t v109 = v67;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100071FFC((uint64_t)&v114, 3uLL, (uint64_t)v113);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v70 + 8);
  v77(v71, v69);
  sub_1000147B8(v74, &qword_10012CED8);
  char v78 = v87;
  v87((char *)v102, v73);
  v77(v76, v69);
  sub_1000147B8(v75, &qword_10012CED8);
  return v78(v103, v73);
}

uint64_t sub_100078360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SportsWidgetGenericClockView();
  uint64_t v3 = sub_10007770C(v2);
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  uint64_t v8 = sub_100077834(v2);
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v13 = sub_1000E4960();
  uint64_t v19 = v14;
  uint64_t v20 = v15;
  char v18 = v16;
  sub_1000141AC(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_1000141AC(v3, v5, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v19;
  *(unsigned char *)(a1 + 16) = v18 & 1;
  *(void *)(a1 + 24) = v20;
  return result;
}

uint64_t sub_100078460@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(char *, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v69 = a1;
  uint64_t v68 = a3;
  uint64_t v67 = sub_1000082B4(&qword_10012CEF0);
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v3 = __chkstk_darwin(v67);
  uint64_t v65 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v64 = (char *)v52 - v5;
  sub_1000E5C50();
  sub_100008354(&qword_10012CEC8);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v62 = sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  sub_1000E46A0();
  sub_1000E46A0();
  sub_1000E46A0();
  uint64_t v6 = sub_1000E5C50();
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)v52 - v10;
  uint64_t v61 = (char *)v52 - v10;
  uint64_t v12 = type metadata accessor for SportsWidgetGenericClockView();
  sub_100076050(v12, v9);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v88 = &protocol witness table for _PaddingLayout;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v85 = v13;
  uint64_t v86 = v14;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v84 = &protocol witness table for EmptyView;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v82 = &protocol witness table for Text;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v58 = v6;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v15 = v70;
  char v16 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  uint64_t v59 = v70 + 16;
  uint64_t v60 = v16;
  uint64_t v57 = v9;
  v16(v11, v9, v6);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  uint64_t v70 = v15 + 8;
  uint64_t v63 = v17;
  v17(v9, v6);
  uint64_t v56 = v12;
  uint64_t v18 = sub_1000775FC(v12);
  uint64_t v20 = v19;
  LOBYTE(v6) = v21 & 1;
  uint64_t v22 = sub_100078C40();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  uint64_t v55 = sub_1000E4960();
  uint64_t v54 = v27;
  v52[1] = v28;
  int v53 = v29 & 1;
  sub_1000141AC(v22, v24, v26);
  swift_bridgeObjectRelease();
  sub_1000141AC(v18, v20, v6);
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_100077834(v56);
  uint64_t v32 = v31;
  LOBYTE(v13) = v33 & 1;
  uint64_t v34 = v55;
  uint64_t v35 = v54;
  char v36 = v53;
  uint64_t v37 = sub_1000E4960();
  uint64_t v39 = v38;
  uint64_t v69 = v40;
  LOBYTE(v22) = v41 & 1;
  sub_1000141AC(v30, v32, v13);
  swift_bridgeObjectRelease();
  sub_1000141AC(v34, v35, v36);
  swift_bridgeObjectRelease();
  uint64_t v76 = v37;
  uint64_t v77 = v39;
  char v78 = v22;
  uint64_t v79 = v69;
  char v42 = v64;
  sub_1000E4A20();
  sub_1000141AC(v37, v39, v22);
  swift_bridgeObjectRelease();
  uint64_t v43 = v57;
  uint64_t v44 = v61;
  uint64_t v45 = v58;
  v60(v57, v61, v58);
  uint64_t v76 = (uint64_t)v43;
  uint64_t v46 = v66;
  uint64_t v47 = v65;
  uint64_t v48 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v65, v42, v67);
  uint64_t v77 = (uint64_t)v47;
  v75[0] = v45;
  v75[1] = v48;
  uint64_t v73 = v62;
  uint64_t v71 = &type metadata for Text;
  char v72 = &protocol witness table for Text;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100071FFC((uint64_t)&v76, 2uLL, (uint64_t)v75);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
  v49(v42, v48);
  uint64_t v50 = v63;
  v63(v44, v45);
  v49(v47, v48);
  return v50(v43, v45);
}

uint64_t sub_100078C40()
{
  return sub_1000E4A00();
}

uint64_t sub_100078C9C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v76 = a2;
  uint64_t v78 = sub_1000082B4(&qword_10012CEF0);
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v2 = __chkstk_darwin(v78);
  uint64_t v75 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v74 = (char *)&v62 - v4;
  uint64_t v72 = sub_1000082B4(&qword_10012CED8);
  uint64_t v5 = __chkstk_darwin(v72);
  uint64_t v73 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v77 = (uint64_t)&v62 - v7;
  sub_1000E5C50();
  sub_100008354(&qword_10012CEC8);
  swift_getTupleTypeMetadata3();
  sub_1000E4FA0();
  swift_getWitnessTable();
  uint64_t v70 = sub_1000E4DF0();
  uint64_t v68 = sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4DF0();
  sub_1000E41E0();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  swift_getWitnessTable();
  sub_1000E4E50();
  sub_1000E46A0();
  sub_1000E46A0();
  uint64_t v69 = sub_1000E46A0();
  uint64_t v8 = sub_1000E5C50();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v62 - v13;
  uint64_t v15 = type metadata accessor for SportsWidgetGenericClockView();
  sub_100076050(v15, v12);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v98 = &protocol witness table for _PaddingLayout;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v95 = v16;
  uint64_t v96 = v17;
  uint64_t v93 = swift_getWitnessTable();
  char v94 = &protocol witness table for EmptyView;
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = &protocol witness table for Text;
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v68 = (uint64_t)v14;
  uint64_t v65 = v9 + 16;
  uint64_t v64 = v18;
  v18((uint64_t)v14, (uint64_t)v12, v8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v69 = (uint64_t)v12;
  uint64_t v71 = v8;
  uint64_t v70 = v9 + 8;
  uint64_t v67 = v19;
  v19((uint64_t)v12, v8);
  uint64_t v20 = sub_100072260(v15);
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (v23)
  {
    uint64_t v24 = sub_1000775FC(v15);
    uint64_t v26 = v25;
    uint64_t v86 = v24;
    uint64_t v87 = v25;
    char v28 = v27 & 1;
    LOBYTE(v88) = v27 & 1;
    uint64_t v89 = v29;
    uint64_t v30 = v77;
    sub_1000E4A20();
    sub_1000141AC(v24, v26, v28);
    swift_bridgeObjectRelease();
    uint64_t v31 = 0;
    uint64_t v32 = v30;
  }
  else
  {
    uint64_t v31 = 1;
    uint64_t v32 = v77;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v32, v31, 1, v78);
  uint64_t v33 = sub_100078C40();
  uint64_t v35 = v34;
  char v37 = v36 & 1;
  uint64_t v38 = sub_100077834(v15);
  uint64_t v40 = v39;
  char v42 = v41 & 1;
  uint64_t v62 = sub_1000E4960();
  uint64_t v44 = v43;
  uint64_t v63 = v45;
  char v47 = v46 & 1;
  sub_1000141AC(v38, v40, v42);
  swift_bridgeObjectRelease();
  sub_1000141AC(v33, v35, v37);
  swift_bridgeObjectRelease();
  uint64_t v48 = v62;
  uint64_t v86 = v62;
  uint64_t v87 = v44;
  LOBYTE(v88) = v47;
  uint64_t v89 = v63;
  uint64_t v49 = v74;
  sub_1000E4A20();
  sub_1000141AC(v48, v44, v47);
  swift_bridgeObjectRelease();
  uint64_t v50 = v69;
  uint64_t v51 = v68;
  uint64_t v52 = v71;
  v64(v69, v68, v71);
  uint64_t v86 = v50;
  uint64_t v53 = v77;
  uint64_t v54 = v73;
  sub_100014754(v77, v73, &qword_10012CED8);
  uint64_t v87 = v54;
  uint64_t v55 = v79;
  uint64_t v56 = v75;
  uint64_t v57 = v78;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v75, v49, v78);
  uint64_t v88 = v56;
  v85[0] = v52;
  v85[1] = v72;
  v85[2] = v57;
  uint64_t v82 = v66;
  unint64_t v83 = sub_10007A314();
  uint64_t v80 = &type metadata for Text;
  uint64_t v81 = &protocol witness table for Text;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100071FFC((uint64_t)&v86, 3uLL, (uint64_t)v85);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v55 + 8);
  v58(v49, v57);
  sub_1000147B8(v53, &qword_10012CED8);
  uint64_t v59 = v51;
  uint64_t v60 = v67;
  v67(v59, v52);
  v58(v56, v57);
  sub_1000147B8(v54, &qword_10012CED8);
  return v60(v50, v52);
}

uint64_t sub_100079584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v47 = a4;
  sub_1000E5C50();
  swift_getTupleTypeMetadata2();
  sub_1000E4FA0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1000E4DF0();
  uint64_t v44 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&WitnessTable - v8;
  uint64_t v40 = sub_1000E41E0();
  uint64_t v10 = *(void *)(v40 - 8);
  uint64_t v11 = __chkstk_darwin(v40);
  char v46 = (char *)&WitnessTable - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&WitnessTable - v14;
  __chkstk_darwin(v13);
  uint64_t v45 = (char *)&WitnessTable - v16;
  uint64_t v38 = a3;
  uint64_t v17 = a1 + *(int *)(type metadata accessor for SportsWidgetGenericClockView() + 44);
  uint64_t v18 = *(void *)(v17 + 24);
  if (v18)
  {
    uint64_t v51 = *(void *)(v17 + 16);
    uint64_t v52 = v18;
    sub_100014158();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000E4A00();
    uint64_t v42 = v20;
    uint64_t v43 = v19;
    uint64_t v41 = v21;
    uint64_t v39 = v22 & 1;
  }
  else
  {
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v39 = 0;
    uint64_t v41 = 0;
  }
  uint64_t v23 = sub_1000E4510();
  __chkstk_darwin(v23);
  uint64_t v24 = v38;
  *(&WitnessTable - 4) = a2;
  *(&WitnessTable - 3) = v24;
  *(&WitnessTable - 2) = a1;
  sub_1000E4DE0();
  unsigned __int8 v25 = sub_1000E4740();
  sub_1000E4790();
  sub_1000E4790();
  if (sub_1000E4790() != v25) {
    sub_1000E4790();
  }
  uint64_t v26 = swift_getWitnessTable();
  sub_1000E4B90();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v7);
  v55[2] = v26;
  v55[3] = &protocol witness table for _PaddingLayout;
  uint64_t v27 = v40;
  uint64_t v38 = swift_getWitnessTable();
  char v28 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v29 = v45;
  v28(v45, v15, v27);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v44 = v10 + 8;
  v30(v15, v27);
  uint64_t v32 = v42;
  uint64_t v31 = v43;
  uint64_t v51 = v43;
  uint64_t v52 = v42;
  char v33 = v39;
  uint64_t v34 = v41;
  uint64_t v53 = v39;
  uint64_t v54 = v41;
  v55[0] = &v51;
  uint64_t v35 = v46;
  v28(v46, v29, v27);
  v55[1] = v35;
  sub_10007A214(v31, v32, v33, v34);
  v50[0] = sub_1000082B4(&qword_10012CEC8);
  v50[1] = v27;
  unint64_t v48 = sub_10007A258();
  uint64_t v49 = v38;
  sub_100071FFC((uint64_t)v55, 2uLL, (uint64_t)v50);
  sub_10007A2C4(v31, v32, v33, v34);
  v30(v29, v27);
  v30(v35, v27);
  return sub_10007A2C4(v51, v52, v53, v54);
}

uint64_t sub_100079A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v5 = sub_1000E5C50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unsigned __int8 v25 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v24 = (char *)&v24 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = type metadata accessor for SportsWidgetGenericClockView();
  uint64_t v17 = a1 + *(int *)(v16 + 48);
  v30[2] = a2;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v19(v15, v17, v5);
  v19(v13, a1 + *(int *)(v16 + 52), v5);
  uint64_t v20 = v24;
  v19(v24, (uint64_t)v15, v5);
  v30[0] = v20;
  uint64_t v21 = v25;
  v19(v25, (uint64_t)v13, v5);
  v30[1] = v21;
  v29[0] = v5;
  v29[1] = v5;
  uint64_t v27 = WitnessTable;
  uint64_t v28 = WitnessTable;
  sub_100071FFC((uint64_t)v30, 2uLL, (uint64_t)v29);
  char v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v13, v5);
  v22(v15, v5);
  v22(v21, v5);
  return ((uint64_t (*)(char *, uint64_t))v22)(v20, v5);
}

uint64_t sub_100079CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v5 = sub_1000E5C50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v38 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v35 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  char v37 = (char *)&v35 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = (int *)type metadata accessor for SportsWidgetGenericClockView();
  uint64_t v16 = a1 + v15[12];
  v50[3] = a2;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v39 = v6;
  uint64_t v17 = *(void (**)(void))(v6 + 16);
  uint64_t v18 = v14;
  ((void (*)(char *, uint64_t, uint64_t))v17)(v14, v16, v5);
  uint64_t v19 = a1;
  uint64_t v20 = a1 + v15[11];
  uint64_t v21 = *(void *)(v20 + 24);
  if (v21)
  {
    uint64_t v46 = *(void *)(v20 + 16);
    uint64_t v47 = v21;
    sub_100014158();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1000E4A00();
    uint64_t v24 = v23;
    uint64_t v21 = v25;
    uint64_t v27 = v26 & 1;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    uint64_t v27 = 0;
  }
  uint64_t v28 = v19 + v15[13];
  uint64_t v29 = v37;
  ((void (*)(char *, uint64_t, uint64_t))v17)(v37, v28, v5);
  uint64_t v30 = v41;
  uint64_t v35 = v18;
  v17();
  uint64_t v46 = v22;
  uint64_t v47 = v24;
  uint64_t v48 = v27;
  uint64_t v49 = v21;
  v50[0] = v30;
  v50[1] = &v46;
  uint64_t v31 = v38;
  ((void (*)(char *, char *, uint64_t))v17)(v38, v29, v5);
  void v50[2] = v31;
  sub_10007A214(v22, v24, v27, v21);
  v45[0] = v5;
  v45[1] = sub_1000082B4(&qword_10012CEC8);
  v45[2] = v5;
  uint64_t v32 = WitnessTable;
  uint64_t v42 = WitnessTable;
  unint64_t v43 = sub_10007A258();
  uint64_t v44 = v32;
  sub_100071FFC((uint64_t)v50, 3uLL, (uint64_t)v45);
  sub_10007A2C4(v22, v24, v27, v21);
  char v33 = *(void (**)(char *, uint64_t))(v39 + 8);
  v33(v29, v5);
  v33(v35, v5);
  v33(v31, v5);
  sub_10007A2C4(v46, v47, v48, v49);
  return ((uint64_t (*)(char *, uint64_t))v33)(v41, v5);
}

unint64_t sub_100079FE8()
{
  unint64_t result = qword_10012CF08;
  if (!qword_10012CF08)
  {
    sub_100008354(&qword_10012CEE8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF08);
  }
  return result;
}

unint64_t sub_10007A08C()
{
  unint64_t result = qword_10012CF10;
  if (!qword_10012CF10)
  {
    sub_100008354(&qword_10012CEF8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF10);
  }
  return result;
}

uint64_t sub_10007A130@<X0>(uint64_t a1@<X8>)
{
  return sub_100073154(*(void *)(v1 + 32), *(void *)(v1 + 24), a1);
}

uint64_t sub_10007A144@<X0>(uint64_t a1@<X8>)
{
  return sub_100077874(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10007A150@<X0>(uint64_t a1@<X8>)
{
  return sub_1000758A4(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_10007A15C()
{
  unint64_t result = qword_10012CF28;
  if (!qword_10012CF28)
  {
    sub_100008354(&qword_10012CED0);
    sub_100014AC4(&qword_10012CF30, &qword_10012CF38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF28);
  }
  return result;
}

uint64_t sub_10007A1FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100079584(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10007A208@<X0>(uint64_t a1@<X8>)
{
  return sub_100079CAC(*(void *)(v1 + 32), *(void *)(v1 + 24), a1);
}

uint64_t sub_10007A214(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10003A978(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_10007A258()
{
  unint64_t result = qword_10012CF40;
  if (!qword_10012CF40)
  {
    sub_100008354(&qword_10012CEC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF40);
  }
  return result;
}

uint64_t sub_10007A2C4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000141AC(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10007A308@<X0>(uint64_t a1@<X8>)
{
  return sub_100079A44(*(void *)(v1 + 32), *(void *)(v1 + 24), a1);
}

unint64_t sub_10007A314()
{
  unint64_t result = qword_10012CF48;
  if (!qword_10012CF48)
  {
    sub_100008354(&qword_10012CED8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF48);
  }
  return result;
}

uint64_t sub_10007A3B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100078C9C(*(void *)(v1 + 24), a1);
}

uint64_t sub_10007A3C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100078460(*(void *)(v1 + 32), *(uint64_t (**)(char *, uint64_t))(v1 + 24), a1);
}

uint64_t sub_10007A3D0()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10007A400()
{
  return swift_getWitnessTable();
}

unint64_t sub_10007AAF8()
{
  unint64_t result = qword_10012CF58;
  if (!qword_10012CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF58);
  }
  return result;
}

uint64_t sub_10007AB4C()
{
  return sub_100014AC4(&qword_10012CF60, &qword_10012CF68);
}

uint64_t sub_10007AB88(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1000E5DC0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1000E5DC0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10007AC50(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return v2 & 1;
  }
  if (*(unsigned char *)(a2 + 32) == (result & 1)) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  uint64_t v3 = 33;
  while (1)
  {
    uint64_t v4 = v3 - 31;
    if (__OFADD__(v3 - 32, 1)) {
      break;
    }
    char v5 = *(unsigned char *)(a2 + v3) ^ result;
    if (v5)
    {
      ++v3;
      if (v4 != v2) {
        continue;
      }
    }
    LOBYTE(v2) = v5 ^ 1;
    return v2 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007ACC0()
{
  sub_1000082B4(&qword_10012A588);
  uint64_t v1 = sub_1000E5A20();
  uint64_t v3 = v2;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1000354E4(v1, v3);
    if (v6) {
      char v7 = *(unsigned char *)(v4[7] + v5);
    }
    else {
      char v7 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006D92C(v7);
  if (!v0)
  {
    if (qword_100129DE0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1000E5A20();
    uint64_t v11 = v10;
    if (qword_100129DE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    BOOL v12 = off_10012DE48;
    if (*((void *)off_10012DE48 + 2))
    {
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_1000354E4(v9, v11);
      if (v14) {
        char v15 = *(unsigned char *)(v12[7] + v13);
      }
      else {
        char v15 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v15 = 0;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_1000C7DCC(v15);
  }
  return result;
}

uint64_t sub_10007AEE8()
{
  return sub_10007AFC4((uint64_t)&type metadata for TVSettingsPlaybackUseCellularEntity, &qword_10012A7C8) & 1;
}

uint64_t sub_10007AF14()
{
  return sub_10007AFC4((uint64_t)&type metadata for TVSettingsShowSportsScoresEntity, &qword_10012B0C0) & 1;
}

uint64_t sub_10007AF40()
{
  return sub_10007AFC4((uint64_t)&type metadata for TVSettingsUseDownloadAVAdapterEntity, &qword_10012B3D0) & 1;
}

uint64_t sub_10007AF6C()
{
  return sub_10007AFC4((uint64_t)&type metadata for TVSettingsDownloadUseDefaultSubtitleLanguagesEntity, &qword_10012BCB8) & 1;
}

uint64_t sub_10007AF98()
{
  return sub_10007AFC4((uint64_t)&type metadata for TVSettingsDownloadUseCellularEntity, &qword_10012CA90) & 1;
}

uint64_t sub_10007AFC4(uint64_t a1, uint64_t *a2)
{
  sub_1000082B4(a2);
  uint64_t v3 = sub_1000E5A20();
  uint64_t v5 = v4;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v6 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1000354E4(v3, v5);
    if (v8) {
      char v9 = *(unsigned char *)(v6[7] + v7);
    }
    else {
      char v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  char v10 = sub_10006D92C(v9);
  if (!v2)
  {
    if (qword_100129DE0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1000E5A20();
    uint64_t v13 = v12;
    if (qword_100129DE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v14 = off_10012DE48;
    if (*((void *)off_10012DE48 + 2))
    {
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_1000354E4(v11, v13);
      if (v16) {
        char v17 = *(unsigned char *)(v14[7] + v15);
      }
      else {
        char v17 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v17 = 0;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    char v10 = sub_1000C806C(v17);
  }
  return v10 & 1;
}

uint64_t sub_10007B1E8(char a1)
{
  sub_1000082B4(&qword_10012CD90);
  uint64_t v3 = sub_1000E5A20();
  uint64_t v5 = v4;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v6 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1000354E4(v3, v5);
    if (v8) {
      char v9 = *(unsigned char *)(v6[7] + v7);
    }
    else {
      char v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006D92C(v9);
  if (!v1)
  {
    if (qword_100129D38 != -1) {
      swift_once();
    }
    uint64_t result = sub_10007AC50(a1 & 1, qword_1001420D0);
    if ((result & 1) == 0)
    {
      sub_1000E5CC0(17);
      v11._uint64_t countAndFlagsBits = 0x2064696C61766E69;
      v11._object = (void *)0xEF203A65756C6176;
      sub_1000E5A70(v11);
      sub_1000E5D50();
      sub_1000C7270(0, (void *)0xE000000000000000);
      swift_bridgeObjectRelease();
      sub_1000E3910();
      sub_100018534();
      swift_allocError();
      sub_1000E38B0();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10007B408(char a1)
{
  sub_1000082B4(&qword_10012B0C0);
  uint64_t v3 = sub_1000E5A20();
  uint64_t v5 = v4;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v6 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1000354E4(v3, v5);
    if (v8) {
      char v9 = *(unsigned char *)(v6[7] + v7);
    }
    else {
      char v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006D92C(v9);
  if (!v1)
  {
    if (qword_100129C20 != -1) {
      swift_once();
    }
    uint64_t result = sub_10007AC50(a1 & 1, qword_100141DD0);
    if ((result & 1) == 0)
    {
      sub_1000E5CC0(17);
      v11._uint64_t countAndFlagsBits = 0x2064696C61766E69;
      v11._object = (void *)0xEF203A65756C6176;
      sub_1000E5A70(v11);
      sub_1000E5D50();
      sub_1000C7284(0, (void *)0xE000000000000000);
      swift_bridgeObjectRelease();
      sub_1000E3910();
      sub_100018534();
      swift_allocError();
      sub_1000E38B0();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10007B628(char a1)
{
  sub_1000082B4(&qword_10012CA90);
  uint64_t v3 = sub_1000E5A20();
  uint64_t v5 = v4;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v6 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1000354E4(v3, v5);
    if (v8) {
      char v9 = *(unsigned char *)(v6[7] + v7);
    }
    else {
      char v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006D92C(v9);
  if (!v1)
  {
    if (qword_100129CF0 != -1) {
      swift_once();
    }
    uint64_t result = sub_10007AC50(a1 & 1, qword_100141FF8);
    if ((result & 1) == 0)
    {
      sub_1000E5CC0(17);
      v11._uint64_t countAndFlagsBits = 0x2064696C61766E69;
      v11._object = (void *)0xEF203A65756C6176;
      sub_1000E5A70(v11);
      sub_1000E5D50();
      sub_1000C72AC(0, (void *)0xE000000000000000);
      swift_bridgeObjectRelease();
      sub_1000E3910();
      sub_100018534();
      swift_allocError();
      sub_1000E38B0();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10007B848(char a1)
{
  sub_1000082B4(&qword_10012A7C8);
  uint64_t v3 = sub_1000E5A20();
  uint64_t v5 = v4;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v6 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1000354E4(v3, v5);
    if (v8) {
      char v9 = *(unsigned char *)(v6[7] + v7);
    }
    else {
      char v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006D92C(v9);
  if (!v1)
  {
    if (qword_100129BF0 != -1) {
      swift_once();
    }
    uint64_t result = sub_10007AC50(a1 & 1, qword_100141D78);
    if ((result & 1) == 0)
    {
      sub_1000E5CC0(17);
      v11._uint64_t countAndFlagsBits = 0x2064696C61766E69;
      v11._object = (void *)0xEF203A65756C6176;
      sub_1000E5A70(v11);
      sub_1000E5D50();
      sub_1000C72E0(0, (void *)0xE000000000000000);
      swift_bridgeObjectRelease();
      sub_1000E3910();
      sub_100018534();
      swift_allocError();
      sub_1000E38B0();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10007BA68(char a1)
{
  sub_1000082B4(&qword_10012B3D0);
  uint64_t v3 = sub_1000E5A20();
  uint64_t v5 = v4;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v6 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1000354E4(v3, v5);
    if (v8) {
      char v9 = *(unsigned char *)(v6[7] + v7);
    }
    else {
      char v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006D92C(v9);
  if (!v1)
  {
    if (qword_100129C48 != -1) {
      swift_once();
    }
    uint64_t result = sub_10007AC50(a1 & 1, qword_100141E28);
    if ((result & 1) == 0)
    {
      sub_1000E5CC0(17);
      v11._uint64_t countAndFlagsBits = 0x2064696C61766E69;
      v11._object = (void *)0xEF203A65756C6176;
      sub_1000E5A70(v11);
      sub_1000E5D50();
      sub_1000C7408(0, (void *)0xE000000000000000);
      swift_bridgeObjectRelease();
      sub_1000E3910();
      sub_100018534();
      swift_allocError();
      sub_1000E38B0();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10007BC88(char a1)
{
  sub_1000082B4(&qword_10012BCB8);
  uint64_t v3 = sub_1000E5A20();
  uint64_t v5 = v4;
  if (qword_100129D20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v6 = off_10012CC58;
  if (*((void *)off_10012CC58 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1000354E4(v3, v5);
    if (v8) {
      char v9 = *(unsigned char *)(v6[7] + v7);
    }
    else {
      char v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10006D92C(v9);
  if (!v1)
  {
    if (qword_100129CA0 != -1) {
      swift_once();
    }
    uint64_t result = sub_10007AC50(a1 & 1, qword_100141EE0);
    if ((result & 1) == 0)
    {
      sub_1000E5CC0(17);
      v11._uint64_t countAndFlagsBits = 0x2064696C61766E69;
      v11._object = (void *)0xEF203A65756C6176;
      sub_1000E5A70(v11);
      sub_1000E5D50();
      sub_1000C7444(0, (void *)0xE000000000000000);
      swift_bridgeObjectRelease();
      sub_1000E3910();
      sub_100018534();
      swift_allocError();
      sub_1000E38B0();
      return swift_willThrow();
    }
  }
  return result;
}

void sub_10007BEA8(uint64_t a1)
{
}

void sub_10007BEF8(uint64_t a1)
{
}

void sub_10007BF48(uint64_t a1)
{
}

void sub_10007BF98(uint64_t a1)
{
}

void sub_10007BFE8(uint64_t a1)
{
}

void sub_10007C038(uint64_t a1, void (*a2)(void), void (*a3)(void, unint64_t), uint64_t a4, uint64_t *a5)
{
  a2();
  if (!v5)
  {
    sub_1000E5CC0(20);
    v15._object = (void *)0x80000001000E87F0;
    v15._uint64_t countAndFlagsBits = 0xD000000000000012;
    sub_1000E5A70(v15);
    sub_1000E5D50();
    a3(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    if (qword_100129DE0 != -1) {
      swift_once();
    }
    sub_1000082B4(a5);
    uint64_t v8 = sub_1000E5A20();
    uint64_t v10 = v9;
    if (qword_100129DE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    Swift::String v11 = off_10012DE48;
    if (*((void *)off_10012DE48 + 2))
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1000354E4(v8, v10);
      if (v13) {
        char v14 = *(unsigned char *)(v11[7] + v12);
      }
      else {
        char v14 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = 0;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1000C7C48(v14);
  }
}

void sub_10007C220()
{
  qword_1001420D0 = (uint64_t)&off_10011FE78;
}

uint64_t sub_10007C234()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_1001420D8);
  sub_100008498(v10, (uint64_t)qword_1001420D8);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_10007C51C()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_1001420F0);
  sub_100008498(v0, (uint64_t)qword_1001420F0);
  return sub_1000E3D80();
}

uint64_t sub_10007C580()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_100142108);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100142108);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10007C638()
{
  uint64_t result = swift_getKeyPath();
  qword_100142120 = result;
  return result;
}

uint64_t sub_10007C660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return _swift_task_switch(sub_10007C684, 0, 0);
}

uint64_t sub_10007C684()
{
  sub_1000E3A40();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  sub_1000E3A40();
  *(unsigned char *)(v0 + 225) = *(unsigned char *)(v0 + 226);
  if (qword_100129D58 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100142120;
  *(void *)(v0 + 152) = qword_100142120;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = sub_100014AC4(&qword_10012D118, &qword_10012D120);
  *(void *)(v0 + 168) = v5;
  void *v4 = v0;
  v4[1] = sub_10007C7E8;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 225, v3, &type metadata for Bool, v5);
}

uint64_t sub_10007C7E8()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FEC;
  }
  else {
    uint64_t v2 = sub_10007C958;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10007C958()
{
  sub_1000E3A40();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  v0[23] = v2;
  v0[24] = v3;
  v0[8] = v1;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v4 = qword_100142120;
  v0[25] = qword_100142120;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  void *v5 = v0;
  v5[1] = sub_100019DF4;
  uint64_t v6 = v0[21];
  return AppEntity._value<A, B>(for:)(v0 + 28, v4, v6);
}

uint64_t sub_10007CA40()
{
  if (qword_100129D58 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10007CAA0()
{
  unint64_t result = qword_10012CF70;
  if (!qword_10012CF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF70);
  }
  return result;
}

unint64_t sub_10007CAF8()
{
  unint64_t result = qword_10012CF78;
  if (!qword_10012CF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF78);
  }
  return result;
}

uint64_t sub_10007CB4C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10007CB80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007CBD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129D48, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1001420F0, a1);
}

uint64_t sub_10007CC08@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129D50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100142108);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_10007CC84(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100015DF8;
  *(_OWORD *)(v4 + 120) = *v1;
  *(void *)(v4 + 112) = a1;
  return _swift_task_switch(sub_10007C684, 0, 0);
}

uint64_t sub_10007CD38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007E2EC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10007CD60()
{
  return 0xD00000000000002FLL;
}

unint64_t sub_10007CD80()
{
  unint64_t result = qword_10012CF88;
  if (!qword_10012CF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF88);
  }
  return result;
}

unint64_t sub_10007CDD8()
{
  unint64_t result = qword_10012CF90;
  if (!qword_10012CF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CF90);
  }
  return result;
}

uint64_t sub_10007CE2C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10007CE4C, 0, 0);
}

uint64_t sub_10007CE4C()
{
  **(unsigned char **)(v0 + 16) = (sub_10007AFC4((uint64_t)&type metadata for TVSettingsUsePlayHistoryEntity, &qword_10012CD90) & 1) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007CEEC(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10007CF10, 0, 0);
}

uint64_t sub_10007CF10()
{
  sub_10007C038((*(unsigned char *)(v0 + 16) & 1) == 0, (void (*)(void))sub_10007B1E8, (void (*)(void, unint64_t))sub_1000C7270, (uint64_t)&type metadata for TVSettingsUsePlayHistoryEntity, &qword_10012CD90);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007CFCC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10007CFEC, 0, 0);
}

uint64_t sub_10007CFEC()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t *v1 = sub_10007E730();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10007D05C()
{
  unint64_t result = qword_10012CFA0;
  if (!qword_10012CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CFA0);
  }
  return result;
}

uint64_t sub_10007D0B0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10007DBE8();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10007D164()
{
  unint64_t result = qword_10012CFB0;
  if (!qword_10012CFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CFB0);
  }
  return result;
}

unint64_t sub_10007D1BC()
{
  unint64_t result = qword_10012CFB8;
  if (!qword_10012CFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CFB8);
  }
  return result;
}

unint64_t sub_10007D214()
{
  unint64_t result = qword_10012CFC0[0];
  if (!qword_10012CFC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012CFC0);
  }
  return result;
}

uint64_t sub_10007D268(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10007DBE8();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10007D31C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10007DBE8();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10007D3D0()
{
  unint64_t result = qword_10012CFD8;
  if (!qword_10012CFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CFD8);
  }
  return result;
}

unint64_t sub_10007D428()
{
  unint64_t result = qword_10012CFE0;
  if (!qword_10012CFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CFE0);
  }
  return result;
}

unint64_t sub_10007D480()
{
  unint64_t result = qword_10012CFE8;
  if (!qword_10012CFE8)
  {
    sub_100008354(qword_10012CFF0);
    sub_10007D428();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012CFE8);
  }
  return result;
}

uint64_t sub_10007D4F4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10007D05C();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsUsePlayHistoryEntity.Query()
{
  return &type metadata for TVSettingsUsePlayHistoryEntity.Query;
}

ValueMetadata *type metadata accessor for TVSettingsUsePlayHistoryEntity()
{
  return &type metadata for TVSettingsUsePlayHistoryEntity;
}

ValueMetadata *type metadata accessor for TVSettingsUsePlayHistoryEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsUsePlayHistoryEntity.UpdateIntent_value;
}

uint64_t sub_10007D5DC()
{
  sub_10007D9D0();
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_10007D670@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129D40, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1001420D8, a1);
}

uint64_t sub_10007D6A8(uint64_t a1)
{
  unint64_t v2 = sub_10007D214();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10007D6F4(uint64_t a1)
{
  unint64_t v2 = sub_10007CDD8();

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10007D740(uint64_t a1)
{
  unint64_t v2 = sub_10007D7E8();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10007D790()
{
  unint64_t result = qword_10012D008;
  if (!qword_10012D008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D008);
  }
  return result;
}

unint64_t sub_10007D7E8()
{
  unint64_t result = qword_10012D018;
  if (!qword_10012D018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D018);
  }
  return result;
}

unint64_t sub_10007D840()
{
  unint64_t result = qword_10012D020;
  if (!qword_10012D020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D020);
  }
  return result;
}

unint64_t sub_10007D898()
{
  unint64_t result = qword_10012D028;
  if (!qword_10012D028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D028);
  }
  return result;
}

unint64_t sub_10007D8F0()
{
  unint64_t result = qword_10012D030;
  if (!qword_10012D030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D030);
  }
  return result;
}

unint64_t sub_10007D944(void *a1)
{
  a1[1] = sub_10007D97C();
  a1[2] = sub_10007D9D0();
  unint64_t result = sub_10007CDD8();
  a1[3] = result;
  return result;
}

unint64_t sub_10007D97C()
{
  unint64_t result = qword_10012D080;
  if (!qword_10012D080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D080);
  }
  return result;
}

unint64_t sub_10007D9D0()
{
  unint64_t result = qword_10012D088;
  if (!qword_10012D088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D088);
  }
  return result;
}

unint64_t sub_10007DA24(uint64_t a1)
{
  unint64_t result = sub_10007DA4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10007DA4C()
{
  unint64_t result = qword_10012D0D0;
  if (!qword_10012D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D0D0);
  }
  return result;
}

uint64_t sub_10007DAA0()
{
  return sub_100014AC4(&qword_10012D0D8, &qword_10012D0E0);
}

unint64_t sub_10007DAE0()
{
  unint64_t result = qword_10012D0E8;
  if (!qword_10012D0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D0E8);
  }
  return result;
}

unint64_t sub_10007DB38()
{
  unint64_t result = qword_10012D0F0;
  if (!qword_10012D0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D0F0);
  }
  return result;
}

unint64_t sub_10007DB90()
{
  unint64_t result = qword_10012D0F8;
  if (!qword_10012D0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D0F8);
  }
  return result;
}

unint64_t sub_10007DBE8()
{
  unint64_t result = qword_10012D100;
  if (!qword_10012D100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D100);
  }
  return result;
}

uint64_t sub_10007DC3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_1000082B4(&qword_10012A870);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A878);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012A880);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000082B4(&qword_10012A888);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  uint64_t v38 = v14;
  __chkstk_darwin(v13);
  uint64_t v30 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v40, "com.apple.tv.");
  HIWORD(v40[1]) = -4864;
  unint64_t v45 = (unint64_t)&type metadata for TVSettingsUsePlayHistoryWidget;
  sub_1000082B4(&qword_10012D190);
  v47._uint64_t countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v47);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1000082B4(&qword_10012A898);
  sub_10007CDD8();
  sub_100014AC4(&qword_10012A8A0, &qword_10012A898);
  sub_1000E56D0();
  v40[0] = &type metadata for TVSettingsUsePlayHistoryWidget;
  v40[0] = sub_1000E5A20();
  v40[1] = v16;
  unint64_t v45 = 0x746567646957;
  unint64_t v46 = 0xE600000000000000;
  uint64_t v43 = 0x656C67676F54;
  unint64_t v44 = 0xE600000000000000;
  unint64_t v29 = sub_100014158();
  uint64_t v17 = sub_1000E5C70();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  v40[0] = v17;
  v40[1] = v19;
  uint64_t v20 = sub_100014AC4(&qword_10012A8A8, &qword_10012A870);
  uint64_t v21 = v31;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v21);
  unint64_t v45 = 0xD000000000000026;
  unint64_t v46 = 0x80000001000EB150;
  v40[0] = v21;
  v40[1] = &type metadata for String;
  uint64_t v41 = v20;
  unint64_t v42 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v33;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v23);
  v40[0] = v23;
  v40[1] = &type metadata for String;
  uint64_t v41 = OpaqueTypeConformance2;
  unint64_t v42 = v29;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = v30;
  uint64_t v26 = v35;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v26);
  v40[0] = v26;
  v40[1] = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v37;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v25, v27);
}

uint64_t sub_10007E1DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000082B4(&qword_10012A898);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0xD000000000000010;
  v7[1] = 0x80000001000E9D00;
  sub_100014158();
  sub_1000E4D30();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_10007E2EC()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A7F0);
  __chkstk_darwin(v0 - 8);
  unint64_t v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000E3B90();
  uint64_t v2 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v13;
  uint64_t v14 = sub_1000E3DA0();
  uint64_t v28 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v23 = sub_1000082B4(&qword_10012D128);
  sub_1000E3D80();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v27(v13, 1, 1, v14);
  uint64_t v16 = sub_1000E3A00();
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v8, 1, 1, v16);
  unsigned int v26 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v24 = v2 + 104;
  uint64_t v25 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10007D214();
  uint64_t v19 = v22;
  uint64_t v23 = sub_1000E3A70();
  sub_1000082B4(&qword_10012A800);
  sub_1000E3D80();
  v27(v19, 1, 1, v28);
  LOBYTE(v31) = 2;
  uint64_t v20 = sub_1000E5B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v29, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v25(v4, v26, v30);
  sub_1000E3A90();
  return v23;
}

uint64_t sub_10007E730()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  __chkstk_darwin(v6 - 8);
  v9[1] = &type metadata for TVSettingsUsePlayHistoryEntity;
  sub_1000082B4(&qword_10012CD90);
  uint64_t v7 = sub_1000E5A20();
  sub_1000082B4(&qword_10012CF68);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012D118, &qword_10012D120);
  sub_1000E3CA0();
  return v7;
}

uint64_t sub_10007E9F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

ValueMetadata *type metadata accessor for TVSettingsUsePlayHistoryWidget()
{
  return &type metadata for TVSettingsUsePlayHistoryWidget;
}

uint64_t sub_10007EA14()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10007EA30(uint64_t a1)
{
  unint64_t result = sub_10007EA58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10007EA58()
{
  unint64_t result = qword_10012D180;
  if (!qword_10012D180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D180);
  }
  return result;
}

unint64_t sub_10007EAAC(uint64_t a1)
{
  unint64_t result = sub_10007EAD4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10007EAD4()
{
  unint64_t result = qword_10012D188;
  if (!qword_10012D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D188);
  }
  return result;
}

uint64_t destroy for SportsWidgetScoreView()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SportsWidgetScoreView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetScoreView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for SportsWidgetScoreView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SportsWidgetScoreView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetScoreView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetScoreView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetScoreView()
{
  return &type metadata for SportsWidgetScoreView;
}

uint64_t sub_10007EDA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007EDBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v2 = sub_1000082B4(&qword_10012C618) - 8;
  __chkstk_darwin(v2);
  uint64_t v56 = (uint64_t *)((char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = sub_1000E4320();
  uint64_t v4 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000082B4(&qword_10012D198) - 8;
  __chkstk_darwin(v54);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000082B4(&qword_10012D1A0) - 8;
  __chkstk_darwin(v61);
  uint64_t v57 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000082B4(&qword_10012D1A8);
  __chkstk_darwin(v64);
  uint64_t v58 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000082B4(&qword_10012D1B0);
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  __chkstk_darwin(v11);
  uint64_t v59 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000082B4(&qword_10012D1B8) - 8;
  __chkstk_darwin(v63);
  uint64_t v60 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000082B4(&qword_10012D1C0) - 8;
  __chkstk_darwin(v65);
  uint64_t v62 = (uint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v1;
  uint64_t v15 = v1[1];
  uint64_t v69 = *v1;
  uint64_t v70 = v15;
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1000E4A00();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  uint64_t v23 = v6;
  sub_1000E4280();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = *(int *)(v2 + 36);
  unsigned int v26 = v56;
  uint64_t v27 = v6;
  uint64_t v28 = v55;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v56 + v25, v27, v55);
  *unsigned int v26 = KeyPath;
  sub_100014754((uint64_t)v26, (uint64_t)&v8[*(int *)(v54 + 44)], &qword_10012C618);
  *(void *)uint64_t v8 = v16;
  *((void *)v8 + 1) = v18;
  v8[16] = v22;
  *((void *)v8 + 3) = v20;
  *((_WORD *)v8 + 16) = 0;
  sub_10003A978(v16, v18, v22);
  swift_bridgeObjectRetain();
  sub_1000147B8((uint64_t)v26, &qword_10012C618);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v23, v28);
  sub_1000141AC(v16, v18, v22);
  swift_bridgeObjectRelease();
  uint64_t v29 = v53[2];
  uint64_t v30 = v53[3];
  uint64_t v31 = v53[4];
  LOBYTE(KeyPath) = *((unsigned char *)v53 + 40);
  uint64_t v32 = v53[6];
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = v57;
  sub_100014754((uint64_t)v8, v57, &qword_10012D198);
  uint64_t v35 = (uint64_t *)(v34 + *(int *)(v61 + 44));
  uint64_t *v35 = v33;
  v35[1] = v30;
  swift_retain();
  sub_1000147B8((uint64_t)v8, &qword_10012D198);
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = v58;
  sub_100014754(v34, v58, &qword_10012D1A0);
  uint64_t v38 = (uint64_t *)(v37 + *(int *)(v64 + 36));
  uint64_t *v38 = v36;
  v38[1] = v29;
  swift_retain();
  sub_1000147B8(v34, &qword_10012D1A0);
  sub_10007F3FC();
  uint64_t v39 = v59;
  sub_1000E4B20();
  sub_1000147B8(v37, &qword_10012D1A8);
  uint64_t v40 = swift_getKeyPath();
  uint64_t v42 = v66;
  uint64_t v41 = v67;
  uint64_t v43 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v60, v39, v67);
  uint64_t v44 = v43 + *(int *)(v63 + 44);
  *(void *)uint64_t v44 = v40;
  *(void *)(v44 + 8) = v31;
  *(unsigned char *)(v44 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = v62;
  sub_100014754(v43, v62, &qword_10012D1B8);
  uint64_t v47 = v46 + *(int *)(v65 + 44);
  *(void *)uint64_t v47 = v45;
  *(unsigned char *)(v47 + 8) = KeyPath;
  sub_1000147B8(v43, &qword_10012D1B8);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = v68;
  sub_100014754(v46, v68, &qword_10012D1C0);
  uint64_t v50 = (uint64_t *)(v49 + *(int *)(sub_1000082B4(&qword_10012D200) + 36));
  *uint64_t v50 = v48;
  v50[1] = v32;
  return sub_1000147B8(v46, &qword_10012D1C0);
}

unint64_t sub_10007F3FC()
{
  unint64_t result = qword_10012D1C8;
  if (!qword_10012D1C8)
  {
    sub_100008354(&qword_10012D1A8);
    sub_10007F49C();
    sub_100014AC4(&qword_10012C718, &qword_10012C720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D1C8);
  }
  return result;
}

unint64_t sub_10007F49C()
{
  unint64_t result = qword_10012D1D0;
  if (!qword_10012D1D0)
  {
    sub_100008354(&qword_10012D1A0);
    sub_10007F53C();
    sub_100014AC4(&qword_10012CF18, &qword_10012CF00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D1D0);
  }
  return result;
}

unint64_t sub_10007F53C()
{
  unint64_t result = qword_10012D1D8;
  if (!qword_10012D1D8)
  {
    sub_100008354(&qword_10012D198);
    sub_10007F5DC();
    sub_100014AC4(&qword_10012C7B0, &qword_10012C618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D1D8);
  }
  return result;
}

unint64_t sub_10007F5DC()
{
  unint64_t result = qword_10012D1E0;
  if (!qword_10012D1E0)
  {
    sub_100008354(&qword_10012D1E8);
    sub_100014AC4(&qword_10012D1F0, &qword_10012D1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D1E0);
  }
  return result;
}

unint64_t sub_10007F698()
{
  unint64_t result = qword_10012D208;
  if (!qword_10012D208)
  {
    sub_100008354(&qword_10012D200);
    sub_10007F738();
    sub_100014AC4(&qword_10012A258, &qword_10012A260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D208);
  }
  return result;
}

unint64_t sub_10007F738()
{
  unint64_t result = qword_10012D210;
  if (!qword_10012D210)
  {
    sub_100008354(&qword_10012D1C0);
    sub_10007F7D8();
    sub_100014AC4(&qword_10012A168, &qword_10012A170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D210);
  }
  return result;
}

unint64_t sub_10007F7D8()
{
  unint64_t result = qword_10012D218;
  if (!qword_10012D218)
  {
    sub_100008354(&qword_10012D1B8);
    sub_100008354(&qword_10012D1A8);
    sub_10007F3FC();
    swift_getOpaqueTypeConformance2();
    sub_100014AC4(&qword_10012A158, &qword_10012A160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D218);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TVWidgetHeaderView(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TVWidgetHeaderView(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007FA18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetHeaderView()
{
  return &type metadata for TVWidgetHeaderView;
}

uint64_t sub_10007FA50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007FA6C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012D220);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000082B4(&qword_10012D228);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000082B4(&qword_10012D230);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unsigned int v6 = sub_1000E4510();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  sub_1000082B4(&qword_10012D238);
  sub_10007FC90();
  sub_1000E4F50();
  sub_1000E40A0();
  sub_10007FF6C((uint64_t)v6, (uint64_t)v10);
  uint64_t v14 = &v10[*(int *)(v8 + 44)];
  long long v15 = v19[1];
  *(_OWORD *)uint64_t v14 = v19[0];
  *((_OWORD *)v14 + 1) = v15;
  *((_OWORD *)v14 + 2) = v19[2];
  sub_1000147B8((uint64_t)v6, &qword_10012D220);
  if (a1) {
    uint64_t v16 = sub_1000E4F60();
  }
  else {
    uint64_t v16 = sub_1000E4F70();
  }
  sub_1000B66CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v16, v17);
  sub_1000147B8((uint64_t)v10, &qword_10012D228);
  return sub_10007FFD4((uint64_t)v13, a2);
}

uint64_t sub_10007FC90()
{
  uint64_t v0 = sub_1000E4CE0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000082B4(&qword_10012D240);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E4D20();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Image.ResizingMode.stretch(_:), v0);
  uint64_t v8 = sub_1000E4D10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v13 = v8;
  uint64_t v14 = 0;
  __int16 v15 = 1;
  uint64_t v16 = v21;
  char v17 = v22;
  uint64_t v18 = v23;
  char v19 = v24;
  long long v20 = v25;
  uint64_t v9 = sub_1000082B4(&qword_10012D248);
  uint64_t v10 = sub_1000800F4(&qword_10012D250, &qword_10012D248, (void (*)(void))sub_10008003C);
  sub_1000E4AB0();
  swift_release();
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  swift_getOpaqueTypeConformance2();
  sub_1000E4A50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10007FF64@<X0>(uint64_t a1@<X8>)
{
  return sub_10007FA6C(*v1, a1);
}

uint64_t sub_10007FF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000082B4(&qword_10012D220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007FFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000082B4(&qword_10012D230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10008003C()
{
  unint64_t result = qword_10012D258;
  if (!qword_10012D258)
  {
    sub_100008354(&qword_10012D260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D258);
  }
  return result;
}

uint64_t sub_1000800B0()
{
  return sub_1000800F4(&qword_10012D268, &qword_10012D230, (void (*)(void))sub_100080170);
}

uint64_t sub_1000800F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100080170()
{
  return sub_1000800F4(&qword_10012D270, &qword_10012D228, (void (*)(void))sub_1000801A0);
}

unint64_t sub_1000801A0()
{
  unint64_t result = qword_10012D278;
  if (!qword_10012D278)
  {
    sub_100008354(&qword_10012D220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D278);
  }
  return result;
}

uint64_t *sub_1000801FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      uint64_t *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (char *)v4 + v9;
    uint64_t v12 = (char *)a2 + v9;
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    v11[16] = v12[16];
    *((void *)v11 + 3) = *((void *)v12 + 3);
    v11[32] = v12[32];
    *((void *)v11 + 5) = *((void *)v12 + 5);
    v11[48] = v12[48];
    uint64_t v14 = (char *)v4 + v10;
    __int16 v15 = (char *)a2 + v10;
    uint64_t v16 = sub_1000E4320();
    char v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v17(v14, v15, v16);
    uint64_t v18 = (int *)type metadata accessor for SportsWidgetPlayByPlayLayout();
    *(void *)&v14[v18[5]] = *(void *)&v15[v18[5]];
    *(void *)&v14[v18[6]] = *(void *)&v15[v18[6]];
    *(void *)&v14[v18[7]] = *(void *)&v15[v18[7]];
    *(void *)&v14[v18[8]] = *(void *)&v15[v18[8]];
    *(void *)&v14[v18[9]] = *(void *)&v15[v18[9]];
    *(void *)&v14[v18[10]] = *(void *)&v15[v18[10]];
    *(void *)&v14[v18[11]] = *(void *)&v15[v18[11]];
    *(void *)&v14[v18[12]] = *(void *)&v15[v18[12]];
    *(void *)&v14[v18[13]] = *(void *)&v15[v18[13]];
    *(void *)&v14[v18[14]] = *(void *)&v15[v18[14]];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100080454(uint64_t a1, uint64_t a2)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1000E41D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1000E4320();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for SportsWidgetPlayByPlayLayout();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100080580(void *a1, void *a2, uint64_t a3)
{
  sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1000E41D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = v11;
  v9[16] = v10[16];
  *((void *)v9 + 3) = *((void *)v10 + 3);
  v9[32] = v10[32];
  *((void *)v9 + 5) = *((void *)v10 + 5);
  v9[48] = v10[48];
  uint64_t v12 = (char *)a1 + v8;
  uint64_t v13 = (char *)a2 + v8;
  uint64_t v14 = sub_1000E4320();
  __int16 v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v15(v12, v13, v14);
  uint64_t v16 = (int *)type metadata accessor for SportsWidgetPlayByPlayLayout();
  *(void *)&v12[v16[5]] = *(void *)&v13[v16[5]];
  *(void *)&v12[v16[6]] = *(void *)&v13[v16[6]];
  *(void *)&v12[v16[7]] = *(void *)&v13[v16[7]];
  *(void *)&v12[v16[8]] = *(void *)&v13[v16[8]];
  *(void *)&v12[v16[9]] = *(void *)&v13[v16[9]];
  *(void *)&v12[v16[10]] = *(void *)&v13[v16[10]];
  *(void *)&v12[v16[11]] = *(void *)&v13[v16[11]];
  *(void *)&v12[v16[12]] = *(void *)&v13[v16[12]];
  *(void *)&v12[v16[13]] = *(void *)&v13[v16[13]];
  *(void *)&v12[v16[14]] = *(void *)&v13[v16[14]];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_10008078C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1000E41D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)uint64_t v8 = *(void *)((char *)a2 + v7);
  *((void *)v8 + 1) = *(void *)((char *)a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[16] = v9[16];
  *((void *)v8 + 3) = *((void *)v9 + 3);
  swift_retain();
  swift_release();
  v8[32] = v9[32];
  *((void *)v8 + 5) = *((void *)v9 + 5);
  swift_retain();
  swift_release();
  v8[48] = v9[48];
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000E4320();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for SportsWidgetPlayByPlayLayout();
  *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
  *(void *)&v11[v14[6]] = *(void *)&v12[v14[6]];
  *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[8]] = *(void *)&v12[v14[8]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[9]] = *(void *)&v12[v14[9]];
  *(void *)&v11[v14[10]] = *(void *)&v12[v14[10]];
  *(void *)&v11[v14[11]] = *(void *)&v12[v14[11]];
  *(void *)&v11[v14[12]] = *(void *)&v12[v14[12]];
  swift_retain();
  swift_release();
  *(void *)&v11[v14[13]] = *(void *)&v12[v14[13]];
  *(void *)&v11[v14[14]] = *(void *)&v12[v14[14]];
  return a1;
}

char *sub_1000809DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1000E41D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  v10[48] = v11[48];
  uint64_t v13 = &a1[v9];
  uint64_t v14 = &a2[v9];
  uint64_t v15 = sub_1000E4320();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for SportsWidgetPlayByPlayLayout();
  *(void *)&v13[v16[5]] = *(void *)&v14[v16[5]];
  *(void *)&v13[v16[6]] = *(void *)&v14[v16[6]];
  *(void *)&v13[v16[7]] = *(void *)&v14[v16[7]];
  *(void *)&v13[v16[8]] = *(void *)&v14[v16[8]];
  *(void *)&v13[v16[9]] = *(void *)&v14[v16[9]];
  *(void *)&v13[v16[10]] = *(void *)&v14[v16[10]];
  *(void *)&v13[v16[11]] = *(void *)&v14[v16[11]];
  *(void *)&v13[v16[12]] = *(void *)&v14[v16[12]];
  *(void *)&v13[v16[13]] = *(void *)&v14[v16[13]];
  *(void *)&v13[v16[14]] = *(void *)&v14[v16[14]];
  return a1;
}

char *sub_100080B8C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000147B8((uint64_t)a1, &qword_100129F20);
    uint64_t v6 = sub_1000082B4(&qword_100129F20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1000E41D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)&a2[v8 + 8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  v9[16] = v10[16];
  *((void *)v9 + 3) = *((void *)v10 + 3);
  swift_release();
  v9[32] = v10[32];
  *((void *)v9 + 5) = *((void *)v10 + 5);
  swift_release();
  v9[48] = v10[48];
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1000E4320();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for SportsWidgetPlayByPlayLayout();
  *(void *)&v13[v16[5]] = *(void *)&v14[v16[5]];
  *(void *)&v13[v16[6]] = *(void *)&v14[v16[6]];
  *(void *)&v13[v16[7]] = *(void *)&v14[v16[7]];
  swift_release();
  *(void *)&v13[v16[8]] = *(void *)&v14[v16[8]];
  swift_release();
  *(void *)&v13[v16[9]] = *(void *)&v14[v16[9]];
  *(void *)&v13[v16[10]] = *(void *)&v14[v16[10]];
  *(void *)&v13[v16[11]] = *(void *)&v14[v16[11]];
  *(void *)&v13[v16[12]] = *(void *)&v14[v16[12]];
  swift_release();
  *(void *)&v13[v16[13]] = *(void *)&v14[v16[13]];
  *(void *)&v13[v16[14]] = *(void *)&v14[v16[14]];
  return a1;
}

uint64_t sub_100080DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100080DC0);
}

uint64_t sub_100080DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000082B4(&qword_100129F40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for SportsWidgetPlayByPlayLayout();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100080EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100080F08);
}

uint64_t sub_100080F08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000082B4(&qword_100129F40);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for SportsWidgetPlayByPlayLayout();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SportsWidgetPlayByPlayView()
{
  uint64_t result = qword_10012D2D8;
  if (!qword_10012D2D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100081088()
{
  sub_10000C634();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SportsWidgetPlayByPlayLayout();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100081158()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100081174@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000082B4(&qword_10012D318);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000082B4(&qword_10012D320);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000082B4(&qword_10012D328);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_1000E45C0();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v13 = sub_1000082B4(&qword_10012D330);
  sub_1000813B8(v2, &v6[*(int *)(v13 + 44)]);
  sub_100014754((uint64_t)v6, (uint64_t)v9, &qword_10012D318);
  sub_1000147B8((uint64_t)v6, &qword_10012D318);
  uint64_t v14 = v2 + *(int *)(type metadata accessor for SportsWidgetPlayByPlayView() + 24);
  type metadata accessor for SportsWidgetPlayByPlayLayout();
  uint64_t v15 = sub_1000E4F90();
  int v16 = sub_1000E42E0();
  int v17 = sub_1000E42F0();
  if (v16)
  {
    if ((v17 & ~v16) == 0) {
      goto LABEL_7;
    }
  }
  else if (!v17)
  {
    int v16 = 0;
    goto LABEL_7;
  }
  v16 |= v17;
LABEL_7:
  uint64_t v18 = &v12[*(int *)(v10 + 36)];
  uint64_t v19 = sub_1000E4320();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v14, v19);
  uint64_t v20 = sub_1000E4700();
  *(void *)&v18[*(int *)(v20 + 20)] = v15;
  *(_DWORD *)&v18[*(int *)(v20 + 24)] = v16;
  sub_100014B08((uint64_t)v9, (uint64_t)v12, &qword_10012D320);
  return sub_100014B08((uint64_t)v12, a1, &qword_10012D328);
}

uint64_t sub_1000813B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v116 = a2;
  uint64_t v98 = sub_1000082B4(&qword_10012D338);
  uint64_t v3 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v5 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000082B4(&qword_10012D340);
  __chkstk_darwin(v97);
  uint64_t v7 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000082B4(&qword_10012D348);
  __chkstk_darwin(v99);
  uint64_t v107 = (uint64_t)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000082B4(&qword_10012D350);
  __chkstk_darwin(v100);
  uint64_t v111 = (uint64_t)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000082B4(&qword_10012D358);
  __chkstk_darwin(v109);
  uint64_t v113 = (uint64_t)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000082B4(&qword_10012D360);
  uint64_t v11 = __chkstk_darwin(v112);
  uint64_t v115 = (uint64_t)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v110 = (uint64_t)&v97 - v14;
  __chkstk_darwin(v13);
  uint64_t v114 = (uint64_t)&v97 - v15;
  uint64_t v16 = sub_1000E41D0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v108 = (uint64_t)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v97 - v21;
  __chkstk_darwin(v20);
  char v24 = (char *)&v97 - v23;
  sub_1000C1F94((uint64_t)&v97 - v23);
  sub_1000E41B0();
  long long v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v118 = v16;
  uint64_t v119 = v17 + 8;
  uint64_t v117 = v25;
  v25(v24, v16);
  uint64_t v26 = a1;
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v106 = v124;
  int v105 = v125;
  uint64_t v104 = v126;
  int v103 = v127;
  uint64_t v101 = v129;
  uint64_t v102 = v128;
  sub_100081D08((uint64_t)v5);
  LOBYTE(v16) = sub_1000E4780();
  unsigned __int8 v27 = sub_1000E47A0();
  char v28 = sub_1000E4790();
  sub_1000E4790();
  if (sub_1000E4790() != v16) {
    char v28 = sub_1000E4790();
  }
  sub_1000E4790();
  if (sub_1000E4790() != v27) {
    char v28 = sub_1000E4790();
  }
  uint64_t v29 = type metadata accessor for SportsWidgetPlayByPlayView();
  type metadata accessor for SportsWidgetPlayByPlayLayout();
  sub_1000E3FB0();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = v98;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v98);
  uint64_t v39 = &v7[*(int *)(v97 + 36)];
  *uint64_t v39 = v28;
  *((void *)v39 + 1) = v31;
  *((void *)v39 + 2) = v33;
  *((void *)v39 + 3) = v35;
  *((void *)v39 + 4) = v37;
  v39[40] = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v38);
  unsigned __int8 v40 = sub_1000E4760();
  unsigned __int8 v41 = sub_1000E4770();
  char v42 = sub_1000E4790();
  sub_1000E4790();
  if (sub_1000E4790() != v40) {
    char v42 = sub_1000E4790();
  }
  sub_1000E4790();
  if (sub_1000E4790() != v41) {
    char v42 = sub_1000E4790();
  }
  sub_1000C1F94((uint64_t)v22);
  sub_1000E41B0();
  v117(v22, v118);
  sub_1000E3FB0();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = v107;
  sub_100014754((uint64_t)v7, v107, &qword_10012D340);
  uint64_t v52 = v51 + *(int *)(v99 + 36);
  *(unsigned char *)uint64_t v52 = v42;
  *(void *)(v52 + 8) = v44;
  *(void *)(v52 + 16) = v46;
  *(void *)(v52 + 24) = v48;
  *(void *)(v52 + 32) = v50;
  *(unsigned char *)(v52 + 40) = 0;
  sub_1000147B8((uint64_t)v7, &qword_10012D340);
  uint64_t v53 = v26 + *(int *)(v29 + 20);
  uint64_t v54 = *(void *)(v53 + 24);
  uint64_t v55 = sub_1000E4F50();
  uint64_t v57 = v56;
  sub_100082280(v26, 1, v54, (uint64_t)v122);
  double v58 = 1.0;
  if (*(unsigned char *)(v53 + 16)) {
    double v59 = 1.0;
  }
  else {
    double v59 = 0.0;
  }
  uint64_t v60 = sub_1000E4F50();
  uint64_t v62 = v61;
  uint64_t v63 = v26;
  uint64_t v64 = v111;
  sub_100014754(v51, v111, &qword_10012D348);
  uint64_t v65 = v64 + *(int *)(v100 + 36);
  *(void *)uint64_t v65 = v55;
  *(void *)(v65 + 8) = v57;
  long long v66 = v122[7];
  *(_OWORD *)(v65 + 112) = v122[6];
  *(_OWORD *)(v65 + 128) = v66;
  *(_OWORD *)(v65 + 144) = v122[8];
  *(void *)(v65 + 160) = v123;
  long long v67 = v122[3];
  *(_OWORD *)(v65 + 48) = v122[2];
  *(_OWORD *)(v65 + 64) = v67;
  long long v68 = v122[5];
  *(_OWORD *)(v65 + 80) = v122[4];
  *(_OWORD *)(v65 + 96) = v68;
  long long v69 = v122[1];
  *(_OWORD *)(v65 + 16) = v122[0];
  *(_OWORD *)(v65 + 32) = v69;
  *(unsigned char *)(v65 + 168) = 1;
  *(double *)(v65 + 176) = v59;
  *(void *)(v65 + 184) = v60;
  *(void *)(v65 + 192) = v62;
  sub_1000147B8(v51, &qword_10012D348);
  uint64_t v70 = *(void *)(v53 + 40);
  uint64_t v71 = sub_1000E4F50();
  uint64_t v73 = v72;
  sub_100082280(v63, 3, v70, (uint64_t)v120);
  if (!*(unsigned char *)(v53 + 32)) {
    double v58 = 0.0;
  }
  uint64_t v74 = sub_1000E4F50();
  uint64_t v76 = v75;
  uint64_t v77 = v113;
  sub_100014754(v64, v113, &qword_10012D350);
  uint64_t v78 = v77 + *(int *)(v109 + 36);
  *(void *)uint64_t v78 = v71;
  *(void *)(v78 + 8) = v73;
  long long v79 = v120[7];
  *(_OWORD *)(v78 + 112) = v120[6];
  *(_OWORD *)(v78 + 128) = v79;
  *(_OWORD *)(v78 + 144) = v120[8];
  *(void *)(v78 + 160) = v121;
  long long v80 = v120[3];
  *(_OWORD *)(v78 + 48) = v120[2];
  *(_OWORD *)(v78 + 64) = v80;
  long long v81 = v120[5];
  *(_OWORD *)(v78 + 80) = v120[4];
  *(_OWORD *)(v78 + 96) = v81;
  long long v82 = v120[1];
  *(_OWORD *)(v78 + 16) = v120[0];
  *(_OWORD *)(v78 + 32) = v82;
  *(unsigned char *)(v78 + 168) = 1;
  *(double *)(v78 + 176) = v58;
  *(void *)(v78 + 184) = v74;
  *(void *)(v78 + 192) = v76;
  sub_1000147B8(v64, &qword_10012D350);
  uint64_t v83 = v110;
  sub_100014754(v77, v110, &qword_10012D358);
  *(_WORD *)(v83 + *(int *)(v112 + 36)) = 0;
  sub_1000147B8(v77, &qword_10012D358);
  uint64_t v84 = v83;
  uint64_t v85 = v114;
  sub_100014B08(v84, v114, &qword_10012D360);
  uint64_t v86 = v108;
  sub_1000C1F94(v108);
  sub_1000E41B0();
  v117((char *)v86, v118);
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v119 = v130;
  LODWORD(v118) = v131;
  uint64_t v87 = v132;
  char v88 = v133;
  uint64_t v89 = v134;
  uint64_t v90 = v135;
  uint64_t v91 = v115;
  sub_100014754(v85, v115, &qword_10012D360);
  uint64_t v92 = v116;
  *uint64_t v116 = 0;
  *((unsigned char *)v92 + 8) = 1;
  v92[2] = v106;
  *((unsigned char *)v92 + 24) = v105;
  v92[4] = v104;
  *((unsigned char *)v92 + 40) = v103;
  uint64_t v93 = v101;
  v92[6] = v102;
  v92[7] = v93;
  uint64_t v94 = sub_1000082B4(&qword_10012D368);
  sub_100014754(v91, (uint64_t)v92 + *(int *)(v94 + 48), &qword_10012D360);
  uint64_t v95 = (char *)v92 + *(int *)(v94 + 64);
  *(void *)uint64_t v95 = 0;
  v95[8] = 1;
  *((void *)v95 + 2) = v119;
  v95[24] = v118;
  *((void *)v95 + 4) = v87;
  unsigned char v95[40] = v88;
  *((void *)v95 + 6) = v89;
  *((void *)v95 + 7) = v90;
  sub_1000147B8(v85, &qword_10012D360);
  return sub_1000147B8(v91, &qword_10012D360);
}

uint64_t sub_100081D08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v59 = a1;
  uint64_t v49 = sub_1000E41D0();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012D370);
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin(v5);
  uint64_t v46 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000082B4(&qword_10012D378) - 8;
  __chkstk_darwin(v50);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000082B4(&qword_10012D380) - 8;
  __chkstk_darwin(v51);
  uint64_t v48 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000082B4(&qword_10012D388);
  __chkstk_darwin(v58);
  uint64_t v57 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000082B4(&qword_10012D338);
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  __chkstk_darwin(v11);
  uint64_t v54 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SportsWidgetPlayByPlayView();
  uint64_t v14 = v1 + *(int *)(v13 + 20);
  uint64_t v15 = *(void *)(v14 + 8);
  uint64_t v60 = *(void *)v14;
  uint64_t v61 = v15;
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1000E4A00();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  BOOL v23 = (*(unsigned char *)(v14 + 48) & 1) == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v60 = v16;
  uint64_t v61 = v18;
  char v62 = v20 & 1;
  uint64_t v63 = v22;
  uint64_t v64 = KeyPath;
  BOOL v65 = v23;
  uint64_t v25 = v2;
  sub_1000C1F94((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v49);
  sub_1000082B4(&qword_10012D390);
  sub_1000829B0();
  uint64_t v26 = v46;
  sub_1000E4BB0();
  sub_1000141AC(v60, v61, v62);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v27 = v25 + *(int *)(v13 + 24);
  uint64_t v28 = type metadata accessor for SportsWidgetPlayByPlayLayout();
  uint64_t v29 = *(void *)(v27 + *(int *)(v28 + 28));
  uint64_t v30 = swift_getKeyPath();
  uint64_t v32 = v52;
  uint64_t v31 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v8, v26, v53);
  uint64_t v33 = (uint64_t *)&v8[*(int *)(v50 + 44)];
  *uint64_t v33 = v30;
  v33[1] = v29;
  uint64_t v34 = (uint64_t)v48;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  swift_retain();
  v35(v26, v31);
  uint64_t v36 = sub_1000E47C0();
  uint64_t v37 = swift_getKeyPath();
  sub_100014754((uint64_t)v8, v34, &qword_10012D378);
  uint64_t v38 = (uint64_t *)(v34 + *(int *)(v51 + 44));
  uint64_t *v38 = v37;
  v38[1] = v36;
  sub_1000147B8((uint64_t)v8, &qword_10012D378);
  double v39 = *(double *)(v27 + *(int *)(v28 + 24));
  if (*(unsigned char *)(v14 + 48) == 1) {
    uint64_t v40 = sub_1000E4F60();
  }
  else {
    uint64_t v40 = sub_1000E4F50();
  }
  uint64_t v42 = v57;
  sub_1000B6728(0.0, 1, 0.0, 1, v39, 0, 0.0, 1, v57, 0.0, 1, 0.0, 1, v40, v41);
  sub_1000147B8(v34, &qword_10012D380);
  sub_100082CB0(&qword_10012D3A0, &qword_10012D388, (void (*)(void))sub_100082A60);
  uint64_t v43 = v54;
  sub_1000E4A20();
  sub_1000147B8(v42, &qword_10012D388);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v55 + 32))(v59, v43, v56);
}

double sub_100082280@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a3;
  int v39 = a2;
  uint64_t v36 = sub_1000E41D0();
  uint64_t v6 = *(void *)(v36 - 8);
  uint64_t v7 = __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = *(int *)(type metadata accessor for SportsWidgetPlayByPlayView() + 24);
  uint64_t v35 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (int *)type metadata accessor for SportsWidgetPlayByPlayLayout();
  uint64_t v15 = v14[10];
  uint64_t v38 = *(void *)(v13 + v15);
  uint64_t v16 = v14[14];
  uint64_t v17 = *(void *)(v13 + v16);
  sub_1000C1F94((uint64_t)v11);
  double v18 = 0.0;
  if (sub_1000E41B0()) {
    double v19 = 0.0;
  }
  else {
    double v19 = 8.0;
  }
  char v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v21 = v11;
  uint64_t v22 = v36;
  v20(v21, v36);
  uint64_t v23 = *(void *)(v13 + v15);
  uint64_t v24 = *(void *)(v13 + v16);
  uint64_t v25 = v37;
  swift_retain();
  sub_1000C1F94((uint64_t)v9);
  if ((sub_1000E41B0() & 1) == 0) {
    double v18 = 8.0;
  }
  v20(v9, v22);
  uint64_t v26 = *(void *)(v13 + v14[12]);
  swift_retain();
  sub_1000E4000();
  uint64_t v27 = v45;
  uint64_t v28 = v47;
  uint64_t v29 = v48;
  uint64_t v30 = v49;
  uint64_t v31 = sub_1000E4F50();
  *(_DWORD *)(a4 + 9) = *(_DWORD *)v44;
  *(_DWORD *)(a4 + 12) = *(_DWORD *)&v44[3];
  *(_DWORD *)(a4 + 42) = *(_DWORD *)&v42[7];
  *(_WORD *)(a4 + 46) = v43;
  *(_DWORD *)(a4 + 57) = *(_DWORD *)v42;
  *(_DWORD *)(a4 + 60) = *(_DWORD *)&v42[3];
  *(_WORD *)(a4 + 134) = v41;
  char v32 = v39;
  *(_DWORD *)(a4 + 130) = v40;
  *(void *)a4 = v38;
  *(unsigned char *)(a4 + 8) = v32;
  *(void *)(a4 + 16) = v17;
  *(double *)(a4 + 24) = v19;
  *(void *)(a4 + 32) = v25;
  *(_WORD *)(a4 + 40) = 256;
  *(void *)(a4 + 48) = v23;
  *(unsigned char *)(a4 + 56) = v32;
  *(void *)(a4 + 64) = v24;
  *(double *)(a4 + 72) = v18;
  double result = v46;
  *(void *)(a4 + 80) = v27;
  *(double *)(a4 + 88) = result;
  *(void *)(a4 + 96) = v28;
  *(void *)(a4 + 104) = v29;
  *(void *)(a4 + 112) = v30;
  *(void *)(a4 + 120) = v26;
  *(_WORD *)(a4 + 128) = 256;
  *(void *)(a4 + 136) = v31;
  *(void *)(a4 + 144) = v34;
  return result;
}

double sub_100082518@<D0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>, CGFloat a7@<D4>, double a8@<D5>, double a9@<D6>)
{
  double v30 = a8;
  uint64_t v17 = sub_1000E4580();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat Width = a7;
  switch(a1)
  {
    case 1u:
    case 3u:
      break;
    default:
      v34.origin.x = a3;
      v34.origin.y = a4;
      v34.size.width = a5;
      v34.size.height = a6;
      CGFloat Width = CGRectGetWidth(v34);
      break;
  }
  switch(a1)
  {
    case 0u:
    case 2u:
      goto LABEL_6;
    case 1u:
    case 3u:
      double v29 = Width;
      v35.origin.x = a3;
      v35.origin.y = a4;
      v35.size.width = a5;
      v35.size.height = a6;
      CGRectGetHeight(v35);
      if (a1 >= 3u)
      {
        v39.origin.x = a3;
        v39.origin.y = a4;
        v39.size.width = a5;
        v39.size.height = a6;
        double v30 = CGRectGetMaxX(v39) - a7 - v30;
        v40.origin.x = a3;
        v40.origin.y = a4;
        v40.size.width = a5;
        v40.size.height = a6;
        CGRectGetMinY(v40);
        goto LABEL_11;
      }
      CGFloat Width = v29;
LABEL_6:
      v36.origin.x = a3;
      v36.origin.y = a4;
      v36.size.width = a5;
      v36.size.height = a6;
      double v30 = CGRectGetMinX(v36) + v30;
      CGFloat v22 = a3;
      CGFloat v23 = a4;
      CGFloat v24 = a5;
      CGFloat v25 = a6;
      if (a1 == 2)
      {
        CGRectGetMaxY(*(CGRect *)&v22);
        v37.origin.x = a3;
        v37.origin.y = a4;
        v37.size.width = a5;
        v37.size.height = a6;
        CGRectGetWidth(v37);
        v38.origin.x = a3;
        v38.origin.y = a4;
        v38.size.width = a5;
        v38.size.height = a6;
        CGRectGetWidth(v38);
        goto LABEL_13;
      }
      double v28 = CGRectGetMinY(*(CGRect *)&v22) + a9;
      if (a1)
      {
        double v29 = Width;
LABEL_11:
        v41.origin.x = a3;
        v41.origin.y = a4;
        v41.size.width = a5;
        v41.size.height = a6;
        CGRectGetHeight(v41);
        goto LABEL_13;
      }
      v42.origin.x = a3;
      v42.origin.y = a4;
      v42.size.width = a5;
      v42.size.height = a6;
      CGRectGetWidth(v42);
LABEL_13:
      (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for RoundedCornerStyle.continuous(_:), v17);
      sub_1000E48E0();
      double result = *(double *)&v31;
      long long v27 = v32;
      *(_OWORD *)a2 = v31;
      *(_OWORD *)(a2 + 16) = v27;
      *(unsigned char *)(a2 + 32) = v33;
      return result;
    default:
      JUMPOUT(0);
  }
}

double sub_100082844@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_100082518(*(unsigned char *)(v5 + 8), (uint64_t)v9, a2, a3, a4, a5, *(CGFloat *)v5, *(double *)(v5 + 16), *(double *)(v5 + 24));
  double result = *(double *)v9;
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_100082894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100082EB8();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000828F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100082EB8();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10008295C(uint64_t a1)
{
  unint64_t v2 = sub_100082EB8();

  return Shape.body.getter(a1, v2);
}

unint64_t sub_1000829B0()
{
  unint64_t result = qword_10012D398;
  if (!qword_10012D398)
  {
    sub_100008354(&qword_10012D390);
    sub_100014AC4(&qword_10012A168, &qword_10012A170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D398);
  }
  return result;
}

unint64_t sub_100082A60()
{
  unint64_t result = qword_10012D3A8;
  if (!qword_10012D3A8)
  {
    sub_100008354(&qword_10012D380);
    sub_100082B00();
    sub_100014AC4(&qword_10012C718, &qword_10012C720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D3A8);
  }
  return result;
}

unint64_t sub_100082B00()
{
  unint64_t result = qword_10012D3B0;
  if (!qword_10012D3B0)
  {
    sub_100008354(&qword_10012D378);
    sub_100008354(&qword_10012D390);
    sub_1000829B0();
    swift_getOpaqueTypeConformance2();
    sub_100014AC4(&qword_10012CF18, &qword_10012CF00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D3B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CapsuleEdgeBorder(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CapsuleEdgeBorder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CapsuleEdgeBorder()
{
  return &type metadata for CapsuleEdgeBorder;
}

uint64_t sub_100082C6C()
{
  return sub_100082CB0(&qword_10012D3B8, &qword_10012D328, (void (*)(void))sub_100082D2C);
}

uint64_t sub_100082CB0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100082D2C()
{
  unint64_t result = qword_10012D3C0;
  if (!qword_10012D3C0)
  {
    sub_100008354(&qword_10012D320);
    sub_100014AC4(&qword_10012D3C8, &qword_10012D318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D3C0);
  }
  return result;
}

uint64_t sub_100082DCC()
{
  return sub_100014AC4(&qword_10012D3D0, &qword_10012D3D8);
}

unint64_t sub_100082E0C()
{
  unint64_t result = qword_10012D3E0;
  if (!qword_10012D3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D3E0);
  }
  return result;
}

unint64_t sub_100082E64()
{
  unint64_t result = qword_10012D3E8;
  if (!qword_10012D3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D3E8);
  }
  return result;
}

unint64_t sub_100082EB8()
{
  unint64_t result = qword_10012D3F0;
  if (!qword_10012D3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D3F0);
  }
  return result;
}

id sub_100082F0C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for TVWidgetCache()) init];
  qword_100142128 = (uint64_t)result;
  return result;
}

id sub_10008301C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVWidgetCache();
  return [super dealloc];
}

uint64_t sub_1000830A4()
{
  return type metadata accessor for TVWidgetCache();
}

uint64_t type metadata accessor for TVWidgetCache()
{
  uint64_t result = qword_10012D430;
  if (!qword_10012D430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000830F8()
{
  sub_1000831FC(319, &qword_10012D440, (void (*)(uint64_t))type metadata accessor for TVWidgetEntry);
  if (v0 <= 0x3F)
  {
    sub_1000831FC(319, (unint64_t *)&qword_10012AB40, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000831FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1000E5C50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100083250()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000E3EE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v21 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtC17TVWidgetExtension13TVWidgetCache_lastKnownWidgetEntryDate;
  swift_beginAccess();
  sub_100014754(v15, (uint64_t)v4, &qword_100129F30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000147B8((uint64_t)v4, &qword_100129F30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v4, v5);
    sub_1000E3ED0();
    sub_1000E3EC0();
    char v16 = sub_1000E3E80();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17(v9, v5);
    v17(v12, v5);
    if (v16)
    {
      uint64_t result = (uint64_t)sub_1000054E4();
      if (result)
      {
        uint64_t v19 = (void *)result;
        sub_1000E5B90();
        sub_1000E3F40();

        v17(v14, v5);
        return 1;
      }
      goto LABEL_11;
    }
    v17(v14, v5);
  }
  uint64_t result = (uint64_t)sub_1000054E4();
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  char v20 = (void *)result;
  sub_1000E5B90();
  sub_1000E3F40();

  sub_1000839BC();
  return 0;
}

void sub_100083558(uint64_t a1)
{
  uint64_t v3 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000082B4(&qword_10012D448);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = type metadata accessor for TVWidgetEntry();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  int v14 = v13(a1, 1, v12);
  id v15 = sub_1000054E4();
  id v22 = v15;
  if (v14 == 1)
  {
    if (v15)
    {
      sub_1000E5B90();
      sub_1000E3F40();
      id v16 = v22;

      return;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  if (!v15) {
    goto LABEL_12;
  }
  sub_1000E5B90();
  sub_1000E3F40();

  sub_100014754(a1, (uint64_t)v11, &qword_10012D448);
  uint64_t v17 = v1 + OBJC_IVAR____TtC17TVWidgetExtension13TVWidgetCache_lastKnownWidgetEntry;
  swift_beginAccess();
  sub_1000838FC((uint64_t)v11, v17, &qword_10012D448);
  swift_endAccess();
  sub_100014754(a1, (uint64_t)v9, &qword_10012D448);
  if (v13((uint64_t)v9, 1, v12) == 1)
  {
    sub_1000147B8((uint64_t)v9, &qword_10012D448);
    uint64_t v18 = sub_1000E3EE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 1, 1, v18);
  }
  else
  {
    uint64_t v19 = sub_1000E3EE0();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v5, v9, v19);
    sub_100083960((uint64_t)v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v5, 0, 1, v19);
  }
  uint64_t v21 = v1 + OBJC_IVAR____TtC17TVWidgetExtension13TVWidgetCache_lastKnownWidgetEntryDate;
  swift_beginAccess();
  sub_1000838FC((uint64_t)v5, v21, &qword_100129F30);
  swift_endAccess();
}

uint64_t sub_1000838FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000082B4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100083960(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVWidgetEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1000839BC()
{
  uint64_t v1 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000082B4(&qword_10012D448);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = sub_1000054E4();
  if (result)
  {
    uint64_t v8 = result;
    sub_1000E5B90();
    sub_1000E3F40();

    uint64_t v9 = type metadata accessor for TVWidgetEntry();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    uint64_t v10 = v0 + OBJC_IVAR____TtC17TVWidgetExtension13TVWidgetCache_lastKnownWidgetEntry;
    swift_beginAccess();
    sub_1000838FC((uint64_t)v6, v10, &qword_10012D448);
    swift_endAccess();
    uint64_t v11 = sub_1000E3EE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
    uint64_t v12 = v0 + OBJC_IVAR____TtC17TVWidgetExtension13TVWidgetCache_lastKnownWidgetEntryDate;
    swift_beginAccess();
    sub_1000838FC((uint64_t)v3, v12, &qword_100129F30);
    return (id)swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100083BBC(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1000E3EE0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100083C94(uint64_t a1)
{
  uint64_t v2 = sub_1000E3EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100083D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E3EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100083D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E3EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100083E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E3EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_100083EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E3EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100083F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100083F50);
}

uint64_t sub_100083F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000E3EE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_10008401C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100084030);
}

uint64_t sub_100084030(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000E3EE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for TVWidgetEntry()
{
  uint64_t result = qword_10012D4A8;
  if (!qword_10012D4A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100084138()
{
  uint64_t result = sub_1000E3EE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000841D8()
{
  return sub_1000E4340();
}

uint64_t sub_1000841FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000875AC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100084228@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for TVWidgetEntry() + 20));
  if (v3)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1000E5D70();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
        }
        else
        {
          if ((v3 & 0xC000000000000001) != 0)
          {
            for (uint64_t i = 0; i != v4; ++i)
            {
              int v6 = *(unsigned __int8 *)(sub_1000E5CF0() + 74);
              if (v6 == 2 || (v6 & 1) == 0)
              {
                swift_unknownObjectRelease();
              }
              else
              {
                sub_1000E5D10();
                sub_1000E5D30();
                sub_1000E5D40();
                sub_1000E5D20();
              }
            }
          }
          else
          {
            unint64_t v7 = v3 + 32;
            do
            {
              if (*(unsigned char *)(*(void *)v7 + 74))
              {
                swift_retain();
                sub_1000E5D10();
                sub_1000E5D30();
                sub_1000E5D40();
                sub_1000E5D20();
              }
              v7 += 8;
              --v4;
            }
            while (v4);
          }
          swift_bridgeObjectRelease();
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0
            && ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
          {
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRetain();
        sub_1000E5D70();
        swift_release();
LABEL_18:
        swift_release();
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v4) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_21:
  sub_1000E57D0();
  uint64_t v8 = sub_1000E57F0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(a1, 0, 1, v8);
}

uint64_t sub_10008446C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000E3EE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

id sub_1000844D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  double v29 = a4;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v5 = sub_1000E3EE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v11 = (char *)&v26 - v10;
  uint64_t v12 = sub_1000E5640();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1;
  sub_1000E5840();
  sub_100088F80(&qword_10012D570, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  uint64_t v16 = sub_1000E5DB0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1000E3ED0();
  id result = sub_1000054E4();
  if (result)
  {
    uint64_t v20 = result;
    sub_1000082B4(&qword_10012A900);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1000EF780;
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = sub_10001D7B4();
    *(void *)(v21 + 32) = v16;
    *(void *)(v21 + 40) = v18;
    swift_bridgeObjectRetain();
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v16;
    *(void *)(v23 + 24) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v23 + v22, v9, v5);
    CGFloat v24 = (void *)(v23 + ((v7 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v25 = v27;
    *CGFloat v24 = v26;
    v24[1] = v25;
    swift_retain();
    sub_1000849DC(v28, (uint64_t)sub_100089230, v23, v29);
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10008480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v19 = a6;
  uint64_t v9 = sub_1000E3EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = sub_1000054E4();
  if (result)
  {
    uint64_t v14 = result;
    sub_1000082B4(&qword_10012A900);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1000F0F50;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_10001D7B4();
    *(void *)(v15 + 32) = a3;
    *(void *)(v15 + 40) = a4;
    swift_bridgeObjectRetain();
    sub_1000E3ED0();
    sub_1000E3E50();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(void *)(v15 + 96) = &type metadata for Double;
    *(void *)(v15 + 104) = &protocol witness table for Double;
    *(void *)(v15 + 72) = v17;
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
    return (id)v19(a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000849DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  uint64_t v69 = a1;
  *(void *)&long long v66 = sub_1000E5860();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  BOOL v65 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E5020();
  uint64_t v62 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000E5040();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000082B4(&qword_10012D448);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TVWidgetEntry();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v58 - v20;
  uint64_t v63 = a4;
  sub_100085CD4((uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000147B8((uint64_t)v14, &qword_10012D448);
  }
  else
  {
    sub_100088D58((uint64_t)v14, (uint64_t)v21);
    sub_100089108(0, (unint64_t *)&qword_10012C3F0);
    unint64_t v22 = (void *)sub_1000E5BD0();
    uint64_t v59 = type metadata accessor for TVWidgetEntry;
    sub_100088DBC((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TVWidgetEntry);
    unint64_t v23 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v68;
    *(void *)(v24 + 16) = v67;
    *(void *)(v24 + 24) = v25;
    sub_100088D58((uint64_t)v19, v24 + v23);
    uint64_t v74 = sub_100088F1C;
    uint64_t v75 = (void *)v24;
    aBlock = _NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    uint64_t v72 = sub_1000864FC;
    uint64_t v73 = &unk_100122BF8;
    uint64_t v26 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_1000E5030();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100088F80((unint64_t *)&qword_10012C3F8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000082B4(&qword_10012C400);
    sub_100014AC4((unint64_t *)&qword_10012C408, &qword_10012C400);
    sub_1000E5CA0();
    sub_1000E5BE0();
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v61);
    sub_100088FC8((uint64_t)v21, (uint64_t (*)(void))v59);
  }
  uint64_t v27 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, void))(v64 + 16))(v65, v69, v66);
  id v28 = objc_allocWithZone((Class)type metadata accessor for TVWidgetFetchOperation());
  double v29 = sub_1000A3AF8(v27);
  id result = sub_1000054E4();
  if (!result) {
    goto LABEL_18;
  }
  long long v31 = result;
  sub_1000082B4(&qword_10012A900);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1000EF780;
  uint64_t v33 = *(void *)&v29[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
  uint64_t v35 = v67;
  uint64_t v34 = v68;
  if (v33)
  {
    uint64_t v36 = *(void *)&v29[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
    CGRect v37 = v29;
    uint64_t v38 = v33;
  }
  else
  {
    long long v66 = xmmword_1000EF780;
    sub_100089108(0, (unint64_t *)&qword_10012A908);
    CGRect v39 = v29;
    CGRect v40 = (void *)sub_1000E5C10();
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = v66;
    *(void *)(v41 + 56) = type metadata accessor for TVWidgetAsyncOperation();
    *(void *)(v41 + 64) = sub_100088F80((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
    *(void *)(v41 + 32) = v39;
    CGRect v42 = v39;
    __int16 v43 = (void *)sub_1000E5C20();

    uint64_t v36 = sub_1000E5A10();
    uint64_t v38 = v44;
  }
  swift_bridgeObjectRetain();

  *(void *)(v32 + 56) = &type metadata for String;
  *(void *)(v32 + 64) = sub_10001D7B4();
  *(void *)(v32 + 32) = v36;
  *(void *)(v32 + 40) = v38;
  sub_1000E5B90();
  sub_1000E3F40();

  swift_bridgeObjectRelease();
  uint64_t v45 = swift_allocObject();
  *(unsigned char *)(v45 + 16) = 0;
  double v46 = (void *)swift_allocObject();
  v46[2] = v45;
  v46[3] = v29;
  uint64_t v47 = v63;
  v46[4] = v63;
  v46[5] = v35;
  v46[6] = v34;
  uint64_t v74 = sub_100088CFC;
  uint64_t v75 = v46;
  aBlock = _NSConcreteStackBlock;
  uint64_t v71 = 1107296256;
  uint64_t v72 = sub_1000864FC;
  uint64_t v73 = &unk_100122BA8;
  uint64_t v48 = _Block_copy(&aBlock);
  uint64_t v49 = v29;
  swift_retain();
  uint64_t v50 = v49;
  swift_retain();
  id v51 = v47;
  sub_100088D48((uint64_t)sub_100088CFC);
  swift_release();
  [v50 setCompletionBlock:v48];
  _Block_release(v48);

  swift_release();
  if (sub_1000E5850()) {
    id result = (id)sub_1000E5610();
  }
  else {
    id result = (id)sub_1000E5620();
  }
  double v53 = (v52 + -3.0) * 1000.0;
  if ((~*(void *)&v53 & 0x7FF0000000000000) != 0)
  {
    if (v53 > -9.22337204e18)
    {
      if (v53 < 9.22337204e18)
      {
        uint64_t v54 = (uint64_t)v53;
        uint64_t v55 = (void *)swift_allocObject();
        v55[2] = v45;
        v55[3] = v50;
        v55[4] = v51;
        void v55[5] = v35;
        v55[6] = v34;
        swift_retain();
        uint64_t v56 = v50;
        swift_retain();
        id v57 = v51;
        sub_1000C5E74((uint64_t)v56, v54, (uint64_t)sub_100088D18, (uint64_t)v55);

        swift_release();
        return (id)swift_release();
      }
      goto LABEL_17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

id sub_1000852B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  long long v31 = a4;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v5 = sub_1000E3EE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = sub_1000E5640();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  sub_1000E5840();
  sub_100088F80(&qword_10012D570, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  uint64_t v16 = sub_1000E5DB0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1000E3ED0();
  id result = sub_1000054E4();
  if (result)
  {
    uint64_t v20 = result;
    sub_1000082B4(&qword_10012A900);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1000EF780;
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = sub_10001D7B4();
    *(void *)(v21 + 32) = v16;
    *(void *)(v21 + 40) = v18;
    swift_bridgeObjectRetain();
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v23 = (v7 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v24 + v22, v9, v5);
    uint64_t v25 = (uint64_t *)(v24 + v23);
    *uint64_t v25 = v16;
    v25[1] = v18;
    uint64_t v26 = (void *)(v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v27 = v29;
    *uint64_t v26 = v28;
    v26[1] = v27;
    swift_retain();
    sub_1000849DC(v30, (uint64_t)sub_100088C28, v24, v31);
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000855F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7)
{
  uint64_t v60 = a6;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v10 = sub_1000E57B0();
  __chkstk_darwin(v10 - 8);
  id v57 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000082B4(&qword_10012D580);
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  __chkstk_darwin(v12);
  uint64_t v55 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000E57F0();
  uint64_t v14 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000E3EE0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)v50 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)v50 - v22, a2, v17);
  sub_1000E3ED0();
  sub_1000E3E50();
  uint64_t v25 = v24;
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
  uint64_t v54 = v17;
  uint64_t v27 = v17;
  uint64_t v28 = v26;
  v26(v21, v27);
  uint64_t v51 = type metadata accessor for TVWidgetEntry();
  uint64_t v29 = *(int *)(v51 + 20);
  uint64_t v56 = a1;
  unint64_t v30 = *(void *)(a1 + v29);
  if (v30)
  {
    v50[1] = a7;
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1000E5D70();
      if (v31)
      {
LABEL_4:
        unint64_t v62 = (unint64_t)_swiftEmptyArrayStorage;
        if (v31 < 1)
        {
          __break(1u);
        }
        else
        {
          v50[0] = v28;
          if ((v30 & 0xC000000000000001) != 0)
          {
            for (uint64_t i = 0; i != v31; ++i)
            {
              int v33 = *(unsigned __int8 *)(sub_1000E5CF0() + 74);
              if (v33 == 2 || (v33 & 1) == 0)
              {
                swift_unknownObjectRelease();
              }
              else
              {
                sub_1000E5D10();
                sub_1000E5D30();
                sub_1000E5D40();
                sub_1000E5D20();
              }
            }
          }
          else
          {
            unint64_t v34 = v30 + 32;
            do
            {
              if (*(unsigned char *)(*(void *)v34 + 74))
              {
                swift_retain();
                sub_1000E5D10();
                sub_1000E5D30();
                sub_1000E5D40();
                sub_1000E5D20();
              }
              v34 += 8;
              --v31;
            }
            while (v31);
          }
          swift_bridgeObjectRelease();
          if ((v62 & 0x8000000000000000) == 0 && (v62 & 0x4000000000000000) == 0) {
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRetain();
        sub_1000E5D70();
        swift_release();
LABEL_18:
        uint64_t v35 = v60;
        uint64_t v28 = (uint64_t (*)(char *, uint64_t))v50[0];
        swift_release();
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v31) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v60;
LABEL_22:
  sub_1000E57D0();
  sub_1000E57E0();
  int v37 = v36;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v61);
  sub_100089108(0, (unint64_t *)&qword_10012C280);
  uint64_t v38 = (void *)sub_1000E5C30();
  sub_1000E5B90();
  sub_1000E3F40();

  id result = sub_1000054E4();
  if (result)
  {
    CGRect v40 = result;
    sub_1000082B4(&qword_10012A900);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1000F3BE0;
    *(void *)(v41 + 56) = &type metadata for String;
    unint64_t v42 = sub_10001D7B4();
    *(void *)(v41 + 64) = v42;
    uint64_t v43 = v53;
    *(void *)(v41 + 32) = v52;
    *(void *)(v41 + 40) = v43;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1000E3E40();
    *(void *)(v41 + 96) = &type metadata for String;
    *(void *)(v41 + 104) = v42;
    *(void *)(v41 + 72) = v44;
    *(void *)(v41 + 80) = v45;
    sub_1000E3EA0();
    *(void *)(v41 + 136) = &type metadata for Double;
    *(void *)(v41 + 144) = &protocol witness table for Double;
    *(void *)(v41 + 112) = v46;
    *(void *)(v41 + 176) = &type metadata for Double;
    *(void *)(v41 + 184) = &protocol witness table for Double;
    *(void *)(v41 + 152) = v25;
    *(void *)(v41 + 216) = &type metadata for Float;
    *(void *)(v41 + 224) = &protocol witness table for Float;
    *(_DWORD *)(v41 + 192) = v37;
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
    sub_1000082B4(&qword_10012D588);
    unint64_t v47 = (*(unsigned __int8 *)(*(void *)(v51 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v51 - 8) + 80);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1000EF780;
    sub_100088DBC(v56, v48 + v47, (uint64_t (*)(void))type metadata accessor for TVWidgetEntry);
    sub_1000E57A0();
    sub_100088F80(qword_10012D558, (void (*)(uint64_t))type metadata accessor for TVWidgetEntry);
    uint64_t v49 = v55;
    sub_1000E5900();
    v35(v49);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v59);
    return (id)v28(v23, v54);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100085CD4@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self sharedInstance];
  unsigned __int8 v3 = [v2 isNetworkReachable];

  if ((v3 & 1) == 0)
  {
    id result = sub_1000054E4();
    if (result)
    {
      uint64_t v9 = result;
      sub_1000E5B90();
      sub_1000E3F40();

      sub_1000E3ED0();
      uint64_t v8 = type metadata accessor for TVWidgetEntry();
      *(void *)(a1 + *(int *)(v8 + 20)) = 0;
      *(unsigned char *)(a1 + *(int *)(v8 + 24)) = 2;
      goto LABEL_7;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v4 = self;
  NSString v5 = sub_1000E5A00();
  LODWORD(v4) = [v4 acknowledgementNeededForPrivacyIdentifier:v5];

  if (!v4)
  {
    uint64_t v14 = type metadata accessor for TVWidgetEntry();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v11 = v14;
    uint64_t v12 = a1;
    uint64_t v13 = 1;
    goto LABEL_9;
  }
  id result = sub_1000054E4();
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v7 = result;
  sub_1000E5B90();
  sub_1000E3F40();

  sub_1000E3ED0();
  uint64_t v8 = type metadata accessor for TVWidgetEntry();
  *(void *)(a1 + *(int *)(v8 + 20)) = 0;
  *(unsigned char *)(a1 + *(int *)(v8 + 24)) = 3;
LABEL_7:
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  uint64_t v11 = v8;
  uint64_t v12 = a1;
  uint64_t v13 = 0;
LABEL_9:

  return (id)v10(v12, v13, 1, v11);
}

uint64_t sub_100085EE4(void (*a1)(uint64_t, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000E3EE0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E3ED0();
  a1(a3, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100085FC8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1000E5020();
  uint64_t v25 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000E5040();
  uint64_t v13 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100089108(0, (unint64_t *)&qword_10012C3F0);
  uint64_t v23 = sub_1000E5BD0();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  void v16[6] = a5;
  aBlock[4] = sub_1000890D8;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000864FC;
  aBlock[3] = &unk_100122C48;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  id v18 = a2;
  id v19 = a3;
  swift_retain();
  swift_release();
  sub_1000E5030();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100088F80((unint64_t *)&qword_10012C3F8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000082B4(&qword_10012C400);
  sub_100014AC4((unint64_t *)&qword_10012C408, &qword_10012C400);
  sub_1000E5CA0();
  uint64_t v20 = (void *)v23;
  sub_1000E5BE0();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v24);
}

int *sub_1000862D8(uint64_t a1, char *a2, uint64_t a3, void (*a4)(uint64_t, char *), uint64_t a5)
{
  uint64_t v9 = (unsigned char *)(a1 + 16);
  id result = (int *)swift_beginAccess();
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    swift_beginAccess();
    unsigned char *v9 = 1;
    id result = (int *)sub_1000054E4();
    if (result)
    {
      uint64_t v11 = result;
      sub_1000082B4(&qword_10012A900);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1000EF780;
      if (*(void *)&a2[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8])
      {
        uint64_t v13 = *(void *)&a2[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
        uint64_t v14 = *(void *)&a2[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
      }
      else
      {
        sub_100089108(0, (unint64_t *)&qword_10012A908);
        uint64_t v15 = (void *)sub_1000E5C10();
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1000EF780;
        *(void *)(v16 + 56) = type metadata accessor for TVWidgetAsyncOperation();
        *(void *)(v16 + 64) = sub_100088F80((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
        *(void *)(v16 + 32) = a2;
        uint64_t v17 = a2;
        id v18 = (void *)sub_1000E5C20();

        uint64_t v13 = sub_1000E5A10();
        uint64_t v14 = v19;
      }
      *(void *)(v12 + 56) = &type metadata for String;
      *(void *)(v12 + 64) = sub_10001D7B4();
      *(void *)(v12 + 32) = v13;
      *(void *)(v12 + 40) = v14;
      swift_bridgeObjectRetain();
      sub_1000E5B90();
      sub_1000E3F40();

      swift_bridgeObjectRelease();
      return sub_10008767C(a2, 0, a4, a5);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000864FC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

int *sub_100086540(uint64_t a1, char *a2, uint64_t a3, void (*a4)(uint64_t, char *), uint64_t a5)
{
  uint64_t v9 = sub_1000E5070();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100089108(0, (unint64_t *)&qword_10012C3F0);
  uint64_t *v12 = sub_1000E5BD0();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = sub_1000E5090();
  id result = (int *)(*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  id result = (int *)swift_beginAccess();
  if (*(unsigned char *)(a1 + 16)) {
    return result;
  }
  swift_beginAccess();
  *(unsigned char *)(a1 + 16) = 1;
  id result = (int *)sub_1000054E4();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v15 = result;
  sub_1000082B4(&qword_10012A900);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000EF780;
  if (*(void *)&a2[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8])
  {
    uint64_t v17 = *(void *)&a2[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
    uint64_t v18 = *(void *)&a2[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
  }
  else
  {
    long long v24 = xmmword_1000EF780;
    sub_100089108(0, (unint64_t *)&qword_10012A908);
    uint64_t v19 = (void *)sub_1000E5C10();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = v24;
    *(void *)(v20 + 56) = type metadata accessor for TVWidgetAsyncOperation();
    *(void *)(v20 + 64) = sub_100088F80((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
    *(void *)(v20 + 32) = a2;
    uint64_t v21 = a2;
    uint64_t v22 = (void *)sub_1000E5C20();

    uint64_t v17 = sub_1000E5A10();
    uint64_t v18 = v23;
  }
  *(void *)(v16 + 56) = &type metadata for String;
  *(void *)(v16 + 64) = sub_10001D7B4();
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v18;
  swift_bridgeObjectRetain();
  sub_1000E5B90();
  sub_1000E3F40();

  swift_bridgeObjectRelease();
  return sub_10008767C(a2, 1, a4, a5);
}

uint64_t sub_100086854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000E5640();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E5840();
  unint64_t v6 = sub_100093C00((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000E3ED0();
  uint64_t result = type metadata accessor for TVWidgetEntry();
  *(void *)(a1 + *(int *)(result + 20)) = v6;
  *(unsigned char *)(a1 + *(int *)(result + 24)) = 4;
  return result;
}

id sub_100086954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000844D8(a1, a2, a3, *v3);
}

id sub_10008695C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000852B0(a1, a2, a3, *v3);
}

uint64_t sub_100086964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100015DF8;
  return TimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_100086A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100018664;
  return TimelineProvider.relevance()(a1, a2, a3);
}

uint64_t sub_100086ACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v1 = sub_1000082B4(&qword_100129EB8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012D4F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  uint64_t v46 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_10012D4F8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  uint64_t v49 = v10;
  __chkstk_darwin(v9);
  uint64_t v44 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000082B4(&qword_10012D500);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  uint64_t v51 = v13;
  __chkstk_darwin(v12);
  unint64_t v47 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [objc_allocWithZone((Class)NSOperationQueue) init];
  NSString v16 = sub_1000E5A00();
  [v15 setName:v16];

  [v15 setMaxConcurrentOperationCount:1];
  [v15 setQualityOfService:25];
  uint64_t v53 = (uint64_t)v15;
  sub_1000082B4(&qword_10012D508);
  sub_1000887CC();
  sub_10008889C();
  sub_1000E5790();
  uint64_t v17 = sub_100014AC4((unint64_t *)&qword_100129EC0, &qword_100129EB8);
  sub_1000E4670();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1000E49E0();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  uint64_t v53 = v1;
  uint64_t v54 = v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = v44;
  uint64_t v24 = v45;
  sub_1000E4630();
  sub_1000141AC(v18, v20, v22);
  swift_bridgeObjectRelease();
  uint64_t v26 = v24;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v24);
  sub_1000082B4(&qword_10012D538);
  uint64_t v27 = sub_1000E5640();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 72);
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1000F3BF0;
  unint64_t v32 = v31 + v30;
  int v33 = *(void (**)(unint64_t, void, uint64_t))(v28 + 104);
  v33(v32, enum case for WidgetFamily.systemSmall(_:), v27);
  v33(v32 + v29, enum case for WidgetFamily.systemMedium(_:), v27);
  v33(v32 + 2 * v29, enum case for WidgetFamily.systemLarge(_:), v27);
  v33(v32 + 3 * v29, enum case for WidgetFamily.systemExtraLarge(_:), v27);
  uint64_t v53 = v26;
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  int v36 = v47;
  uint64_t v35 = v48;
  sub_1000E4620();
  swift_bridgeObjectRelease();
  uint64_t v37 = v35;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v35);
  sub_1000E4560();
  uint64_t v38 = sub_1000E49E0();
  uint64_t v40 = v39;
  LOBYTE(v33) = v41 & 1;
  uint64_t v53 = v37;
  uint64_t v54 = v34;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v50;
  sub_1000E45F0();
  sub_1000141AC(v38, v40, (char)v33);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v36, v42);
}

uint64_t sub_1000871B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000E3FD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TVWidgetView(0);
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TVWidgetEntry();
  uint64_t v13 = *(void *)(a1 + *(int *)(v12 + 20));
  char v14 = *(unsigned char *)(a1 + *(int *)(v12 + 24));
  swift_bridgeObjectRetain();
  sub_1000A35E4((uint64_t)v25);
  *(void *)&v11[v9[9]] = swift_getKeyPath();
  sub_1000082B4(&qword_10012D540);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  long long v15 = v25[7];
  *((_OWORD *)v11 + 7) = v25[6];
  *((_OWORD *)v11 + 8) = v15;
  *((_OWORD *)v11 + 9) = v25[8];
  long long v16 = v25[3];
  *((_OWORD *)v11 + 3) = v25[2];
  *((_OWORD *)v11 + 4) = v16;
  long long v17 = v25[5];
  *((_OWORD *)v11 + 5) = v25[4];
  *((_OWORD *)v11 + 6) = v17;
  long long v18 = v25[1];
  *((_OWORD *)v11 + 1) = v25[0];
  *((_OWORD *)v11 + 2) = v18;
  uint64_t v19 = &v11[v9[10]];
  *(void *)uint64_t v19 = swift_getKeyPath();
  v19[8] = 0;
  uint64_t v20 = (uint64_t *)&v11[v9[11]];
  *uint64_t v20 = swift_getKeyPath();
  sub_1000082B4(&qword_10012D548);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4);
  char v22 = (uint64_t *)(a2 + *(int *)(sub_1000082B4(&qword_10012D508) + 36));
  uint64_t v23 = sub_1000082B4(&qword_10012D528);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v22 + *(int *)(v23 + 28), v7, v4);
  uint64_t *v22 = KeyPath;
  sub_100088DBC((uint64_t)v11, a2, type metadata accessor for TVWidgetView);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_100088FC8((uint64_t)v11, type metadata accessor for TVWidgetView);
}

id sub_10008745C@<X0>(uint64_t a1@<X8>)
{
  id result = sub_1000884EC();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100087490@<X0>(uint64_t a1@<X8>)
{
  return sub_100086ACC(a1);
}

uint64_t sub_1000874A0()
{
  sub_1000E4460();
  sub_100088F80(&qword_10012D550, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  sub_1000E4500();
  return v1;
}

uint64_t sub_10008751C@<X0>(unsigned char *a1@<X8>)
{
  sub_1000E4460();
  sub_100088F80(&qword_10012D550, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  uint64_t result = sub_1000E4500();
  *a1 = v3;
  return result;
}

uint64_t sub_1000875AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

int *sub_10008767C(char *a1, uint64_t a2, void (*a3)(uint64_t, char *), uint64_t a4)
{
  uint64_t v121 = a4;
  uint64_t v122 = a3;
  uint64_t v5 = sub_1000082B4(&qword_10012D448);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v120 = (uint64_t)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v107 - v8;
  uint64_t v10 = type metadata accessor for TVWidgetEntry();
  uint64_t v123 = *(void *)(v10 - 8);
  uint64_t v124 = (int *)v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v119 = (uint64_t)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v14 = (char *)&v107 - v13;
  uint64_t v15 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v15 - 8);
  long long v17 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000E3EE0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v117 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v118 = (char *)&v107 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v107 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v107 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v107 - v30;
  sub_1000E3E90();
  if (a1)
  {
    objc_sync_enter(a1);
    unint64_t v32 = v29;
    int v33 = v31;
    uint64_t v34 = &a1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__suggestedRefreshDate];
    swift_beginAccess();
    uint64_t v35 = (uint64_t)v34;
    uint64_t v31 = v33;
    uint64_t v29 = v32;
    sub_100014754(v35, (uint64_t)v17, &qword_100129F30);
    objc_sync_exit(a1);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v26, v31, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    uint64_t v116 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v116(v29, v26, v18);
    sub_1000147B8((uint64_t)v17, &qword_100129F30);
    uint64_t v36 = (uint64_t)v14;
    if (a1) {
      goto LABEL_6;
    }
LABEL_9:
    uint64_t v38 = v124;
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v123 + 56))(v9, 1, 1, v124);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v18);
  uint64_t v116 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v116(v29, v17, v18);
  uint64_t v36 = (uint64_t)v14;
  if (!a1) {
    goto LABEL_9;
  }
LABEL_6:
  objc_sync_enter(a1);
  uint64_t v37 = (uint64_t)&a1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__widgetEntry];
  swift_beginAccess();
  sub_100014754(v37, (uint64_t)v9, &qword_10012D448);
  objc_sync_exit(a1);
  uint64_t v38 = v124;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v123 + 48))(v9, 1, v124) != 1)
  {
    sub_100088D58((uint64_t)v9, v36);
    goto LABEL_11;
  }
LABEL_10:
  sub_1000E3ED0();
  *(void *)(v36 + v38[5]) = 0;
  *(unsigned char *)(v36 + v38[6]) = 2;
  sub_1000147B8((uint64_t)v9, &qword_10012D448);
  if (!a1)
  {
LABEL_29:
    v122(v36, v29);
    sub_100088FC8(v36, (uint64_t (*)(void))type metadata accessor for TVWidgetEntry);
    uint64_t v61 = *(void (**)(char *, uint64_t))(v19 + 8);
    v61(v29, v18);
    return (int *)((uint64_t (*)(char *, uint64_t))v61)(v31, v18);
  }
LABEL_11:
  uint64_t v39 = a1;
  objc_sync_enter(v39);
  uint64_t v40 = *(void *)&v39[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__error];
  swift_errorRetain();
  objc_sync_exit(v39);
  if (!v40)
  {

    goto LABEL_29;
  }
  char v41 = (void *)sub_1000E3D70();
  swift_errorRelease();
  id v42 = [v41 domain];
  uint64_t v43 = sub_1000E5A10();
  uint64_t v45 = v44;

  if (v43 == sub_1000E5A10() && v45 == v46)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v47 = sub_1000E5DC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
    {
LABEL_28:

      goto LABEL_29;
    }
  }
  id v48 = [v41 userInfo];
  uint64_t v49 = sub_1000E5910();

  uint64_t v50 = sub_1000E5A10();
  if (*(void *)(v49 + 16) && (unint64_t v52 = sub_1000354E4(v50, v51), (v53 & 1) != 0))
  {
    sub_100089028(*(void *)(v49 + 56) + 32 * v52, (uint64_t)&v126);
  }
  else
  {
    long long v126 = 0u;
    long long v127 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v127 + 1))
  {
    sub_1000147B8((uint64_t)&v126, &qword_10012D578);
    goto LABEL_28;
  }
  if (!swift_dynamicCast() || v125 != 500) {
    goto LABEL_28;
  }
  uint64_t v113 = v31;
  uint64_t result = (int *)sub_1000054E4();
  if (!result)
  {
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  id v114 = result;
  uint64_t v55 = sub_1000082B4(&qword_10012A900);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_1000EF780;
  uint64_t v57 = *(void *)&v39[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
  uint64_t v112 = v55;
  long long v115 = xmmword_1000EF780;
  uint64_t v109 = (uint64_t *)&v39[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
  if (v57)
  {
    uint64_t v58 = *(void *)&v39[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
    uint64_t v59 = v39;
    uint64_t v60 = v57;
  }
  else
  {
    sub_100089108(0, (unint64_t *)&qword_10012A908);
    uint64_t v110 = v39;
    id v108 = (id)sub_1000E5C10();
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v115;
    *(void *)(v62 + 56) = type metadata accessor for TVWidgetAsyncOperation();
    *(void *)(v62 + 64) = sub_100088F80((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
    uint64_t v63 = v110;
    *(void *)(v62 + 32) = v110;
    uint64_t v64 = v63;
    BOOL v65 = (void *)sub_1000E5C20();

    uint64_t v58 = sub_1000E5A10();
    uint64_t v60 = v66;
  }
  swift_bridgeObjectRetain();

  *(void *)(v56 + 56) = &type metadata for String;
  unint64_t v67 = sub_10001D7B4();
  *(void *)(v56 + 64) = v67;
  *(void *)(v56 + 32) = v58;
  *(void *)(v56 + 40) = v60;
  sub_1000E5B90();
  uint64_t v68 = v114;
  sub_1000E3F40();

  swift_bridgeObjectRelease();
  if (qword_100129D60 != -1) {
    swift_once();
  }
  uint64_t v69 = qword_100142128;
  char v70 = sub_100083250();
  uint64_t result = (int *)sub_1000054E4();
  uint64_t v71 = result;
  id v111 = v41;
  uint64_t v110 = (char *)v67;
  if ((v70 & 1) == 0)
  {
    if (!result)
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    sub_1000E5B90();
    sub_1000E3F40();

    uint64_t v74 = v120;
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v123 + 56))(v120, 1, 1, v124);
LABEL_41:
    sub_1000147B8(v74, &qword_10012D448);
    uint64_t result = (int *)sub_1000054E4();
    if (result)
    {
      long long v81 = result;
      uint64_t v82 = swift_allocObject();
      *(_OWORD *)(v82 + 16) = v115;
      uint64_t v83 = v109[1];
      if (v83)
      {
        uint64_t v84 = *v109;
        uint64_t v85 = v39;
        uint64_t v86 = v83;
      }
      else
      {
        sub_100089108(0, (unint64_t *)&qword_10012A908);
        uint64_t v87 = v39;
        uint64_t v88 = sub_1000E5C10();
        uint64_t v124 = v81;
        uint64_t v89 = (void *)v88;
        uint64_t v90 = swift_allocObject();
        *(_OWORD *)(v90 + 16) = v115;
        *(void *)(v90 + 56) = type metadata accessor for TVWidgetAsyncOperation();
        *(void *)(v90 + 64) = sub_100088F80((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
        *(void *)(v90 + 32) = v87;
        uint64_t v91 = v87;
        uint64_t v92 = (void *)sub_1000E5C20();

        long long v81 = v124;
        uint64_t v84 = sub_1000E5A10();
        uint64_t v86 = v93;
      }
      swift_bridgeObjectRetain();

      uint64_t v94 = v110;
      *(void *)(v82 + 56) = &type metadata for String;
      *(void *)(v82 + 64) = v94;
      *(void *)(v82 + 32) = v84;
      *(void *)(v82 + 40) = v86;
      sub_1000E5B90();
      sub_1000E3F40();

      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    goto LABEL_50;
  }
  if (!result)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  sub_1000E5B90();
  sub_1000E3F40();

  uint64_t v72 = v69 + OBJC_IVAR____TtC17TVWidgetExtension13TVWidgetCache_lastKnownWidgetEntry;
  swift_beginAccess();
  uint64_t v73 = v72;
  uint64_t v74 = v120;
  sub_100014754(v73, v120, &qword_10012D448);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v123 + 48))(v74, 1, v124) == 1) {
    goto LABEL_41;
  }
  sub_100088D58(v74, v119);
  uint64_t result = (int *)sub_1000054E4();
  if (result)
  {
    uint64_t v75 = result;
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = v115;
    uint64_t v77 = v109[1];
    if (v77)
    {
      uint64_t v78 = *v109;
      long long v79 = v39;
      uint64_t v80 = v77;
    }
    else
    {
      sub_100089108(0, (unint64_t *)&qword_10012A908);
      uint64_t v95 = v39;
      uint64_t v96 = sub_1000E5C10();
      uint64_t v124 = v75;
      uint64_t v97 = (void *)v96;
      uint64_t v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = v115;
      *(void *)(v98 + 56) = type metadata accessor for TVWidgetAsyncOperation();
      *(void *)(v98 + 64) = sub_100088F80((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
      *(void *)(v98 + 32) = v95;
      uint64_t v99 = v95;
      uint64_t v100 = (void *)sub_1000E5C20();

      uint64_t v75 = v124;
      uint64_t v78 = sub_1000E5A10();
      uint64_t v80 = v101;
    }
    swift_bridgeObjectRetain();

    uint64_t v102 = v110;
    *(void *)(v76 + 56) = &type metadata for String;
    *(void *)(v76 + 64) = v102;
    *(void *)(v76 + 32) = v78;
    *(void *)(v76 + 40) = v80;
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
    sub_100088FC8(v36, (uint64_t (*)(void))type metadata accessor for TVWidgetEntry);
    uint64_t v103 = v119;
    sub_100088DBC(v119, v36, (uint64_t (*)(void))type metadata accessor for TVWidgetEntry);
    uint64_t v104 = v117;
    sub_1000E3ED0();
    int v105 = v118;
    sub_1000E3EC0();

    uint64_t v106 = *(void (**)(char *, uint64_t))(v19 + 8);
    v106(v104, v18);
    sub_100088FC8(v103, (uint64_t (*)(void))type metadata accessor for TVWidgetEntry);
    v106(v29, v18);
    v116(v29, v105, v18);
LABEL_48:
    uint64_t v31 = v113;
    goto LABEL_29;
  }
LABEL_53:
  __break(1u);
  return result;
}

id sub_1000884EC()
{
  char v4 = &type metadata for AvocadoFeature;
  unint64_t v5 = sub_1000885F4();
  sub_1000E3F30();
  sub_100088648((uint64_t)v3);
  uint64_t v0 = sub_1000E4560();
  id result = sub_1000054E4();
  if (result)
  {
    uint64_t v2 = result;
    sub_1000E5B90();
    sub_1000E3F40();

    return (id)v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1000885F4()
{
  unint64_t result = qword_10012D4E8;
  if (!qword_10012D4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D4E8);
  }
  return result;
}

uint64_t sub_100088648(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t initializeWithCopy for TVWidget(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TVWidget(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TVWidget(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TVWidget()
{
  return &type metadata for TVWidget;
}

uint64_t sub_1000887B0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000887CC()
{
  unint64_t result = qword_10012D510;
  if (!qword_10012D510)
  {
    sub_100008354(&qword_10012D508);
    sub_100088F80(&qword_10012D518, (void (*)(uint64_t))type metadata accessor for TVWidgetView);
    sub_100014AC4((unint64_t *)&qword_10012D520, &qword_10012D528);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D510);
  }
  return result;
}

unint64_t sub_10008889C()
{
  unint64_t result = qword_10012D530;
  if (!qword_10012D530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D530);
  }
  return result;
}

uint64_t sub_1000888F0()
{
  return sub_1000E4470();
}

uint64_t sub_100088918()
{
  return sub_1000E44A0();
}

uint64_t sub_10008893C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000875AC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(char *))&EnvironmentValues.widgetRenderingMode.setter);
}

uint64_t sub_10008897C()
{
  return sub_1000E4340();
}

uint64_t sub_1000889A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000875AC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

ValueMetadata *type metadata accessor for TVWidgetEntryProvider()
{
  return &type metadata for TVWidgetEntryProvider;
}

uint64_t sub_1000889F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100088B1C()
{
  return sub_100088F80(qword_10012D558, (void (*)(uint64_t))type metadata accessor for TVWidgetEntry);
}

uint64_t sub_100088B64()
{
  uint64_t v1 = sub_1000E3EE0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

id sub_100088C28(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000E3EE0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v2 + v6;
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + v7 + 8);
  uint64_t v11 = v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *(void (**)(char *))v11;
  uint64_t v13 = *(void *)(v11 + 8);

  return sub_1000855F0(a1, a2, v8, v9, v10, v12, v13);
}

uint64_t sub_100088CE8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100088CFC()
{
  return sub_1000890F0((uint64_t (*)(void, void, void, void, void))sub_100085FC8);
}

uint64_t sub_100088D18()
{
  return sub_1000890F0((uint64_t (*)(void, void, void, void, void))sub_100086540);
}

uint64_t sub_100088D30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100088D40()
{
  return swift_release();
}

uint64_t sub_100088D48(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100088D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVWidgetEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100088DBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100088E24()
{
  uint64_t v1 = *(void *)(type metadata accessor for TVWidgetEntry() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = sub_1000E3EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100088F1C()
{
  uint64_t v1 = *(void *)(type metadata accessor for TVWidgetEntry() - 8);
  uint64_t v2 = *(void (**)(uint64_t, char *))(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100085EE4(v2, v3, v4);
}

uint64_t sub_100088F80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100088FC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100089028(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100089088()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000890D8()
{
  return sub_1000890F0((uint64_t (*)(void, void, void, void, void))sub_1000862D8);
}

uint64_t sub_1000890F0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100089108(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100089144()
{
  uint64_t v1 = sub_1000E3EE0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

id sub_100089230(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000E3EE0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10008480C(a1, a2, v7, v8, v2 + v6, v9);
}

id sub_1000892F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v22 = sub_1000082B4(&qword_10012D598);
  __chkstk_darwin(v22);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000082B4(&qword_10012D5A0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  id v21 = sub_1000884EC();
  uint64_t v11 = v10;
  char v13 = v12;
  uint64_t v15 = v14;
  id result = sub_10000557C();
  if (result)
  {
    long long v17 = result;
    sub_1000E5B90();
    sub_1000E3F40();

    sub_1000082B4(&qword_10012D5A8);
    sub_1000E4010();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v18(v7, v9, v3);
    *(void *)uint64_t v2 = v21;
    *((void *)v2 + 1) = v11;
    uint8_t v2[16] = v13 & 1;
    *((void *)v2 + 3) = v15;
    v18(&v2[*(int *)(v22 + 64)], v7, v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000E4010();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
    v19(v7, v3);
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100089550()
{
  sub_1000082B4(&qword_10012D5A8);

  return sub_1000E4010();
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_1000895D0()
{
  unint64_t result = qword_10012D590;
  if (!qword_10012D590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D590);
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgets()
{
  return &type metadata for TVWidgets;
}

uint64_t sub_100089634()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100089654()
{
  unint64_t result = qword_10012D5B0;
  if (!qword_10012D5B0)
  {
    sub_100008354(&qword_10012D5B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D5B0);
  }
  return result;
}

uint64_t initializeWithCopy for SportsWidgetScoreViewLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetScoreViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for SportsWidgetScoreViewLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetScoreViewLayout(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetScoreViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetScoreViewLayout()
{
  return &type metadata for SportsWidgetScoreViewLayout;
}

unint64_t sub_100089880()
{
  unint64_t result = qword_10012D5E0;
  if (!qword_10012D5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D5E0);
  }
  return result;
}

uint64_t sub_1000898D4()
{
  return sub_100014AC4(&qword_10012D5E8, &qword_10012D5F0);
}

uint64_t sub_100089910()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100142130);
  sub_100008498(v10, (uint64_t)qword_100142130);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_100089BF8()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_100142148);
  sub_100008498(v0, (uint64_t)qword_100142148);
  return sub_1000E3D80();
}

uint64_t sub_100089C5C()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_100142160);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100142160);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100089D14()
{
  uint64_t result = swift_getKeyPath();
  qword_100142178 = result;
  return result;
}

uint64_t sub_100089D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return _swift_task_switch(sub_100089D60, 0, 0);
}

uint64_t sub_100089D60()
{
  sub_1000E3A40();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  sub_1000E3A40();
  *(unsigned char *)(v0 + 225) = *(unsigned char *)(v0 + 226);
  if (qword_100129D80 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100142178;
  *(void *)(v0 + 152) = qword_100142178;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = sub_100014AC4(&qword_10012D7A8, &qword_10012D7B0);
  *(void *)(v0 + 168) = v5;
  void *v4 = v0;
  v4[1] = sub_100089EC4;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 225, v3, &type metadata for VideosPlaybackCellularQuality, v5);
}

uint64_t sub_100089EC4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FEC;
  }
  else {
    uint64_t v2 = sub_10008A034;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10008A034()
{
  sub_1000E3A40();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  v0[23] = v2;
  v0[24] = v3;
  v0[8] = v1;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v4 = qword_100142178;
  v0[25] = qword_100142178;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  void *v5 = v0;
  v5[1] = sub_10008A11C;
  uint64_t v6 = v0[21];
  return AppEntity._value<A, B>(for:)(v0 + 28, v4, v6);
}

uint64_t sub_10008A11C()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10001A004;
  }
  else {
    uint64_t v2 = sub_10008A28C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10008A28C()
{
  *(unsigned char *)(v0 + 227) = *(unsigned char *)(v0 + 224);
  sub_1000418B8();
  sub_1000E3A10();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008A314()
{
  if (qword_100129D80 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10008A374()
{
  unint64_t result = qword_10012D5F8;
  if (!qword_10012D5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D5F8);
  }
  return result;
}

unint64_t sub_10008A3CC()
{
  unint64_t result = qword_10012D600;
  if (!qword_10012D600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D600);
  }
  return result;
}

uint64_t sub_10008A420()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10008A454()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008A4A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129D70, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100142148, a1);
}

uint64_t sub_10008A4DC@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129D78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100142160);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_10008A558(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100015DF8;
  *(_OWORD *)(v4 + 120) = *v1;
  *(void *)(v4 + 112) = a1;
  return _swift_task_switch(sub_100089D60, 0, 0);
}

uint64_t sub_10008A60C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008C0BC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10008A634()
{
  return 0xD000000000000038;
}

unint64_t sub_10008A654()
{
  unint64_t result = qword_10012D610;
  if (!qword_10012D610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D610);
  }
  return result;
}

unint64_t sub_10008A6AC()
{
  unint64_t result = qword_10012D618;
  if (!qword_10012D618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D618);
  }
  return result;
}

uint64_t sub_10008A700(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10008A720, 0, 0);
}

uint64_t sub_10008A720()
{
  **(unsigned char **)(v0 + 16) = sub_1000B17FC() & 1;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008A7AC(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10008A7D0, 0, 0);
}

uint64_t sub_10008A7D0()
{
  sub_1000B0978(*(unsigned char *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008A84C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10008A86C, 0, 0);
}

uint64_t sub_10008A86C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t *v1 = sub_10008C4AC();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10008A8DC()
{
  unint64_t result = qword_10012D628;
  if (!qword_10012D628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D628);
  }
  return result;
}

uint64_t sub_10008A930(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10008B4FC();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10008A9E4()
{
  unint64_t result = qword_10012D638;
  if (!qword_10012D638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D638);
  }
  return result;
}

unint64_t sub_10008AA3C()
{
  unint64_t result = qword_10012D640;
  if (!qword_10012D640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D640);
  }
  return result;
}

unint64_t sub_10008AA94()
{
  unint64_t result = qword_10012D648[0];
  if (!qword_10012D648[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012D648);
  }
  return result;
}

uint64_t sub_10008AAE8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10008B4FC();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10008AB9C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10008B4FC();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10008AC50()
{
  unint64_t result = qword_10012D660;
  if (!qword_10012D660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D660);
  }
  return result;
}

unint64_t sub_10008ACA8()
{
  unint64_t result = qword_10012D668;
  if (!qword_10012D668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D668);
  }
  return result;
}

unint64_t sub_10008AD00()
{
  unint64_t result = qword_10012D670;
  if (!qword_10012D670)
  {
    sub_100008354(qword_10012D678);
    sub_10008ACA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D670);
  }
  return result;
}

uint64_t sub_10008AD74(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10008A8DC();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackCellularQualityEntity.Query()
{
  return &type metadata for TVSettingsPlaybackCellularQualityEntity.Query;
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackCellularQualityEntity()
{
  return &type metadata for TVSettingsPlaybackCellularQualityEntity;
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackCellularQualityEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsPlaybackCellularQualityEntity.UpdateIntent_value;
}

uint64_t sub_10008AE58()
{
  return sub_100014AC4(&qword_10012D690, &qword_10012D698);
}

uint64_t sub_10008AE98()
{
  sub_10008B28C();
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_10008AF2C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129D68, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100142130, a1);
}

uint64_t sub_10008AF64(uint64_t a1)
{
  unint64_t v2 = sub_10008AA94();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10008AFB0(uint64_t a1)
{
  unint64_t v2 = sub_10008A6AC();

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10008AFFC(uint64_t a1)
{
  unint64_t v2 = sub_10008B0A4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10008B04C()
{
  unint64_t result = qword_10012D6A0;
  if (!qword_10012D6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D6A0);
  }
  return result;
}

unint64_t sub_10008B0A4()
{
  unint64_t result = qword_10012D6B0;
  if (!qword_10012D6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D6B0);
  }
  return result;
}

unint64_t sub_10008B0FC()
{
  unint64_t result = qword_10012D6B8;
  if (!qword_10012D6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D6B8);
  }
  return result;
}

unint64_t sub_10008B154()
{
  unint64_t result = qword_10012D6C0;
  if (!qword_10012D6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D6C0);
  }
  return result;
}

unint64_t sub_10008B1AC()
{
  unint64_t result = qword_10012D6C8;
  if (!qword_10012D6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D6C8);
  }
  return result;
}

unint64_t sub_10008B200(void *a1)
{
  a1[1] = sub_10008B238();
  a1[2] = sub_10008B28C();
  unint64_t result = sub_10008A6AC();
  a1[3] = result;
  return result;
}

unint64_t sub_10008B238()
{
  unint64_t result = qword_10012D718;
  if (!qword_10012D718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D718);
  }
  return result;
}

unint64_t sub_10008B28C()
{
  unint64_t result = qword_10012D720;
  if (!qword_10012D720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D720);
  }
  return result;
}

unint64_t sub_10008B2E4()
{
  unint64_t result = qword_10012D728;
  if (!qword_10012D728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D728);
  }
  return result;
}

unint64_t sub_10008B338(uint64_t a1)
{
  unint64_t result = sub_10008B360();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10008B360()
{
  unint64_t result = qword_10012D760;
  if (!qword_10012D760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D760);
  }
  return result;
}

uint64_t sub_10008B3B4()
{
  return sub_100014AC4(&qword_10012D768, &qword_10012D770);
}

unint64_t sub_10008B3F4()
{
  unint64_t result = qword_10012D778;
  if (!qword_10012D778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D778);
  }
  return result;
}

unint64_t sub_10008B44C()
{
  unint64_t result = qword_10012D780;
  if (!qword_10012D780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D780);
  }
  return result;
}

unint64_t sub_10008B4A4()
{
  unint64_t result = qword_10012D788;
  if (!qword_10012D788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D788);
  }
  return result;
}

unint64_t sub_10008B4FC()
{
  unint64_t result = qword_10012D790;
  if (!qword_10012D790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D790);
  }
  return result;
}

uint64_t sub_10008B550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v1 = sub_1000E56B0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000082B4(&qword_10012D820);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  uint64_t v37 = v3;
  __chkstk_darwin(v2);
  unint64_t v32 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012D828);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  uint64_t v39 = v6;
  __chkstk_darwin(v5);
  int v33 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000082B4(&qword_10012D830);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  __chkstk_darwin(v8);
  uint64_t v34 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000082B4(&qword_10012D838);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  uint64_t v43 = v12;
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v45, "com.apple.tv.");
  HIWORD(v45[1]) = -4864;
  uint64_t v50 = (uint64_t)&type metadata for TVSettingsPlaybackCellularQualityWidget;
  sub_1000082B4(&qword_10012D840);
  v52._uint64_t countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v52);
  swift_bridgeObjectRelease();
  v31[1] = v45[0];
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1000E56A0();
  sub_1000082B4(&qword_10012CEC8);
  sub_100041860();
  sub_100041B70();
  sub_10008A6AC();
  sub_10007A258();
  uint64_t v14 = v32;
  sub_1000E56C0();
  v45[0] = &type metadata for TVSettingsPlaybackCellularQualityWidget;
  v45[0] = sub_1000E5A20();
  v45[1] = v15;
  uint64_t v50 = 0x746567646957;
  uint64_t v51 = (char *)0xE600000000000000;
  uint64_t v48 = 0x656C67676F54;
  unint64_t v49 = 0xE600000000000000;
  unint64_t v30 = sub_100014158();
  uint64_t v16 = sub_1000E5C70();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  v45[0] = v16;
  v45[1] = v18;
  uint64_t v19 = sub_100014AC4(&qword_10012D848, &qword_10012D820);
  uint64_t v20 = v33;
  uint64_t v21 = v36;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v21);
  uint64_t v50 = qword_10012D5D0;
  uint64_t v51 = off_10012D5D8;
  v45[0] = v21;
  v45[1] = &type metadata for String;
  uint64_t v46 = v19;
  unint64_t v47 = v30;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v34;
  uint64_t v24 = v38;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v24);
  v45[0] = v24;
  v45[1] = &type metadata for String;
  uint64_t v46 = OpaqueTypeConformance2;
  unint64_t v47 = v30;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v35;
  uint64_t v27 = v40;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v27);
  v45[0] = v27;
  v45[1] = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v42;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v26, v28);
}

uint64_t sub_10008BB78@<X0>(uint64_t a1@<X8>)
{
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000E4A00();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10008BBEC@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012D850);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E3DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v38 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = *a1;
  if (qword_100129C98 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_100141ED8;
  if (*(void *)(qword_100141ED8 + 16))
  {
    uint64_t v41 = v11;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000355DC(v17);
    if (v20)
    {
      uint64_t v21 = v19;
      uint64_t v40 = v7;
      uint64_t v22 = *(void *)(v18 + 56);
      uint64_t v23 = sub_1000E3B50();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v39 = v8;
      uint64_t v25 = v24;
      uint64_t v26 = v22 + *(void *)(v24 + 72) * v21;
      uint64_t v7 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v26, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v6, 0, 1, v23);
      uint64_t v8 = v39;
    }
    else
    {
      uint64_t v23 = sub_1000E3B50();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
    }
    swift_bridgeObjectRelease();
    sub_1000E3B50();
    uint64_t v28 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v6, 1, v23) != 1)
    {
      sub_1000E3B10();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v23);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v14, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v16, v7);
      uint64_t v30 = sub_1000E49F0();
      uint64_t v31 = v34;
      uint64_t v35 = v8;
      uint64_t v33 = v36;
      uint64_t v32 = v37 & 1;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v7);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v27 = sub_1000E3B50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v6, 1, 1, v27);
  }
  uint64_t result = sub_10008C834((uint64_t)v6);
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
LABEL_11:
  *a2 = v30;
  a2[1] = v31;
  a2[2] = v32;
  a2[3] = v33;
  return result;
}

uint64_t sub_10008C004()
{
  return sub_1000E5740();
}

uint64_t sub_10008C0BC()
{
  uint64_t v28 = sub_1000E3B90();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000E3DA0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_1000082B4(&qword_10012D7B8);
  sub_1000E3D80();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_1000E3A00();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v27;
  v17(v27);
  sub_10008AA94();
  uint64_t v23 = sub_1000E3A70();
  sub_1000082B4(&qword_10012D7C0);
  sub_1000E3D80();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 2;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100041860();
  sub_1000E3A60();
  return v23;
}

uint64_t sub_10008C4AC()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  __chkstk_darwin(v6 - 8);
  v9[1] = &type metadata for TVSettingsPlaybackCellularQualityEntity;
  sub_1000082B4(&qword_10012CD80);
  uint64_t v7 = sub_1000E5A20();
  sub_1000082B4(&qword_10012D5F0);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012D7A8, &qword_10012D7B0);
  sub_100041860();
  sub_1000E3C80();
  return v7;
}

uint64_t sub_10008C780@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackCellularQualityWidget()
{
  return &type metadata for TVSettingsPlaybackCellularQualityWidget;
}

uint64_t sub_10008C79C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10008C7B8(uint64_t a1)
{
  unint64_t result = sub_10008C7E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10008C7E0()
{
  unint64_t result = qword_10012D818;
  if (!qword_10012D818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D818);
  }
  return result;
}

uint64_t sub_10008C834(uint64_t a1)
{
  uint64_t v2 = sub_1000082B4(&qword_10012D850);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008C894()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10008C9E8()
{
  unint64_t result = qword_10012D858;
  if (!qword_10012D858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D858);
  }
  return result;
}

uint64_t sub_10008CA3C()
{
  return sub_100014AC4(&qword_10012D860, &qword_10012D868);
}

uint64_t sub_10008CA78()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100142180);
  sub_100008498(v10, (uint64_t)qword_100142180);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_10008CD64()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_100142198);
  sub_100008498(v0, (uint64_t)qword_100142198);
  return sub_1000E3D80();
}

uint64_t sub_10008CDC8()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_1001421B0);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_1001421B0);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10008CE80()
{
  uint64_t result = swift_getKeyPath();
  qword_1001421C8 = result;
  return result;
}

uint64_t sub_10008CEA8()
{
  type metadata accessor for TVSettingsPlaybackWifiQualityEntity();

  return swift_retain();
}

uint64_t sub_10008CEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for TVSettingsPlaybackWifiQualityEntity();
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  return _swift_task_switch(sub_10008CF80, 0, 0);
}

uint64_t sub_10008CF80()
{
  sub_1000E3A40();
  sub_1000E3A40();
  *(unsigned char *)(v0 + 113) = *(unsigned char *)(v0 + 112);
  if (qword_100129DA0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1001421C8;
  *(void *)(v0 + 56) = qword_1001421C8;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = sub_100014AC4(&qword_10012DAB8, &qword_10012DAC0);
  *(void *)(v0 + 72) = v3;
  void *v2 = v0;
  v2[1] = sub_10008D0D0;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 113, v1, &type metadata for VideosPlaybackWiFiQuality, v3);
}

uint64_t sub_10008D0D0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_100090534(v2);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_10008D4F0;
  }
  else {
    uint64_t v3 = sub_10008D224;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10008D224()
{
  sub_1000E3A40();
  uint64_t v1 = qword_1001421C8;
  v0[11] = qword_1001421C8;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  void *v2 = v0;
  v2[1] = sub_10008D2F8;
  uint64_t v3 = v0[9];
  return AppEntity._value<A, B>(for:)((char *)v0 + 114, v1, v3);
}

uint64_t sub_10008D2F8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  sub_100090534(v2);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_10008D55C;
  }
  else {
    uint64_t v3 = sub_10008D44C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10008D44C()
{
  *(unsigned char *)(v0 + 115) = *(unsigned char *)(v0 + 114);
  sub_100041DE8();
  sub_1000E3A10();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008D4F0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008D55C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008D5C8()
{
  return sub_1000E3A40();
}

uint64_t sub_10008D5EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVSettingsPlaybackWifiQualityEntity();
  __chkstk_darwin(v2 - 8);
  sub_1000905D8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000E3A50();
  return sub_100090534(a1);
}

uint64_t sub_10008D67C()
{
  if (qword_100129DA0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10008D6DC()
{
  unint64_t result = qword_10012D870;
  if (!qword_10012D870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D870);
  }
  return result;
}

unint64_t sub_10008D734()
{
  unint64_t result = qword_10012D878;
  if (!qword_10012D878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D878);
  }
  return result;
}

uint64_t sub_10008D788()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10008D7BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008D80C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129D90, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100142198, a1);
}

uint64_t sub_10008D844@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129D98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_1001421B0);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_10008D8C0(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100015DF8;
  return sub_10008CEDC(a1, v5, v4);
}

uint64_t sub_10008D96C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009009C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10008D994()
{
  return 0xD000000000000034;
}

unint64_t sub_10008D9B4()
{
  unint64_t result = qword_10012D888;
  if (!qword_10012D888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D888);
  }
  return result;
}

uint64_t sub_10008DA08()
{
  return sub_10008F314((unint64_t *)&unk_10012D890);
}

uint64_t type metadata accessor for TVSettingsPlaybackWifiQualityEntity()
{
  uint64_t result = qword_10012D960;
  if (!qword_10012D960) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008DA88(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10008DAA8, 0, 0);
}

uint64_t sub_10008DAA8()
{
  **(unsigned char **)(v0 + 16) = sub_1000B182C() & 1;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008DB34(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10008DB58, 0, 0);
}

uint64_t sub_10008DB58()
{
  sub_1000B0C68(*(unsigned char *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008DBD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000082B4(&qword_10012B4E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v38 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v4 - 8);
  char v37 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000E3D90();
  uint64_t v6 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000E3F10();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E59F0();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_1000E59D0();
  __chkstk_darwin(v13 - 8);
  uint64_t v33 = sub_1000E3DA0();
  uint64_t v14 = *(void *)(v33 - 8);
  uint64_t v15 = __chkstk_darwin(v33);
  uint64_t v35 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = type metadata accessor for TVSettingsPlaybackWifiQualityEntity();
  uint64_t v39 = v17;
  sub_1000082B4(&qword_10012CD68);
  *a1 = sub_1000E5A20();
  a1[1] = v18;
  uint64_t v34 = a1;
  sub_1000E59C0();
  v40._uint64_t countAndFlagsBits = 0x6E696D6165727453;
  v40._object = (void *)0xEA00000000002067;
  sub_1000E59B0(v40);
  int v19 = WLKIsRegulatedSKU();
  BOOL v20 = v19 == 0;
  if (v19) {
    v21._uint64_t countAndFlagsBits = 1312902231;
  }
  else {
    v21._uint64_t countAndFlagsBits = 0x69462D6957;
  }
  if (v20) {
    unsigned int v22 = (void *)0xE500000000000000;
  }
  else {
    unsigned int v22 = (void *)0xE400000000000000;
  }
  v32[3] = (char *)a1 + *(int *)(v17 + 20);
  v21._object = v22;
  sub_1000E59A0(v21);
  swift_bridgeObjectRelease();
  v41._uint64_t countAndFlagsBits = 0x7974696C61755120;
  v41._object = (void *)0xE800000000000000;
  sub_1000E59B0(v41);
  sub_1000E59E0();
  v32[1] = v11;
  sub_1000E3F00();
  uint64_t v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v24 = v6 + 104;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  void v32[2] = v24;
  uint64_t v26 = v8;
  uint64_t v27 = v8;
  uint64_t v28 = v36;
  v25(v27, enum case for LocalizedStringResource.BundleDescription.main(_:), v36);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v37, 1, 1, v33);
  uint64_t v29 = sub_1000E3B00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v38, 1, 1, v29);
  sub_1000E3B40();
  uint64_t v30 = *(int *)(v17 + 24);
  sub_1000082B4(&qword_10012D868);
  sub_1000E5990();
  sub_1000E3F00();
  v25(v26, v23, v28);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012DAB8, &qword_10012DAC0);
  sub_100041D90();
  uint64_t result = sub_1000E3C80();
  *(uint64_t *)((char *)v34 + v30) = result;
  return result;
}

uint64_t sub_10008E17C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10008E19C, 0, 0);
}

uint64_t sub_10008E19C()
{
  sub_10008DBD4(*(uint64_t **)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_10008E204()
{
  unint64_t result = qword_10012D8A0;
  if (!qword_10012D8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D8A0);
  }
  return result;
}

uint64_t sub_10008E258(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10008F35C();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10008E30C()
{
  unint64_t result = qword_10012D8B0;
  if (!qword_10012D8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D8B0);
  }
  return result;
}

unint64_t sub_10008E364()
{
  unint64_t result = qword_10012D8B8;
  if (!qword_10012D8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D8B8);
  }
  return result;
}

uint64_t sub_10008E3B8()
{
  return sub_10008F314(qword_10012D8C0);
}

uint64_t sub_10008E3EC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10008F35C();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10008E4A0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10008F35C();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10008E554()
{
  unint64_t result = qword_10012D8D8;
  if (!qword_10012D8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D8D8);
  }
  return result;
}

uint64_t sub_10008E5A8()
{
  return sub_10008F314(&qword_10012D8E0);
}

unint64_t sub_10008E5E0()
{
  unint64_t result = qword_10012D8E8;
  if (!qword_10012D8E8)
  {
    sub_100008354(qword_10012D8F0);
    sub_10008F314(&qword_10012D8E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012D8E8);
  }
  return result;
}

uint64_t sub_10008E670(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10008E204();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackWifiQualityEntity.Query()
{
  return &type metadata for TVSettingsPlaybackWifiQualityEntity.Query;
}

uint64_t *sub_10008E734(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1000E3B50();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return v4;
}

uint64_t sub_10008E838(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000E3B50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

void *sub_10008E8C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000E3B50();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

void *sub_10008E97C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E3B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10008EA3C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000E3B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10008EAD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000E3B50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_10008EB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008EB90);
}

uint64_t sub_10008EB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000E3B50();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10008EC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008EC54);
}

uint64_t sub_10008EC54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000E3B50();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10008ECFC()
{
  uint64_t result = sub_1000E3B50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackWifiQualityEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsPlaybackWifiQualityEntity.UpdateIntent_value;
}

uint64_t sub_10008EDB0()
{
  return sub_100014AC4(&qword_10012D9A0, &qword_10012D9A8);
}

uint64_t sub_10008EDF0()
{
  sub_10008F314(&qword_10012DA30);
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_10008EEA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129D88, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100142180, a1);
}

uint64_t sub_10008EED8(uint64_t a1)
{
  uint64_t v2 = sub_10008F314(qword_10012D8C0);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10008EF40(uint64_t a1)
{
  uint64_t v2 = sub_10008F314((unint64_t *)&unk_10012D890);

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10008EFA8(uint64_t a1)
{
  uint64_t v2 = sub_10008F314(&qword_10012D9C0);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10008F010()
{
  return sub_10008F314((unint64_t *)&unk_10012D9B0);
}

uint64_t sub_10008F044()
{
  return sub_10008F314(&qword_10012D9C0);
}

uint64_t sub_10008F078()
{
  return sub_10008F314(&qword_10012D9C8);
}

uint64_t sub_10008F0AC()
{
  return sub_10008F314(&qword_10012D9D0);
}

uint64_t sub_10008F0E0()
{
  return sub_10008F314(&qword_10012D9D8);
}

uint64_t sub_10008F114(void *a1)
{
  a1[1] = sub_10008F314(&qword_10012DA28);
  a1[2] = sub_10008F314(&qword_10012DA30);
  uint64_t result = sub_10008F314((unint64_t *)&unk_10012D890);
  a1[3] = result;
  return result;
}

unint64_t sub_10008F1A4()
{
  unint64_t result = qword_10012DA38;
  if (!qword_10012DA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DA38);
  }
  return result;
}

uint64_t sub_10008F1F8(uint64_t a1)
{
  uint64_t result = sub_10008F314(&qword_10012DA70);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10008F23C()
{
  return sub_100014AC4(&qword_10012DA78, &qword_10012DA80);
}

uint64_t sub_10008F278()
{
  return sub_10008F314(&qword_10012DA88);
}

uint64_t sub_10008F2AC()
{
  return sub_10008F314(&qword_10012DA90);
}

uint64_t sub_10008F2E0()
{
  return sub_10008F314(&qword_10012DA98);
}

uint64_t sub_10008F314(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TVSettingsPlaybackWifiQualityEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008F35C()
{
  unint64_t result = qword_10012DAA0;
  if (!qword_10012DAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DAA0);
  }
  return result;
}

void sub_10008F3B0()
{
  sub_1000E5CC0(20);
  int v0 = WLKIsRegulatedSKU();
  BOOL v1 = v0 == 0;
  if (v0) {
    v2._uint64_t countAndFlagsBits = 1312902231;
  }
  else {
    v2._uint64_t countAndFlagsBits = 0x69462D6957;
  }
  if (v1) {
    uint64_t v3 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v3 = (void *)0xE400000000000000;
  }
  v2._object = v3;
  sub_1000E5A70(v2);
  swift_bridgeObjectRelease();
  v4._object = (void *)0x80000001000EBBC0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_1000E5A70(v4);
  qword_1001421D0 = 0;
  *(void *)algn_1001421D8 = 0xE000000000000000;
}

void sub_10008F460()
{
  sub_1000E5CC0(35);
  swift_bridgeObjectRelease();
  int v0 = WLKIsRegulatedSKU();
  BOOL v1 = v0 == 0;
  if (v0) {
    v2._uint64_t countAndFlagsBits = 1312902231;
  }
  else {
    v2._uint64_t countAndFlagsBits = 0x69462D6957;
  }
  if (v1) {
    uint64_t v3 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v3 = (void *)0xE400000000000000;
  }
  v2._object = v3;
  sub_1000E5A70(v2);
  swift_bridgeObjectRelease();
  v4._object = (void *)0x80000001000EBBA0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000016;
  sub_1000E5A70(v4);
  qword_1001421E0 = 0x742065736F6F6843;
  *(void *)algn_1001421E8 = 0xEB00000000206568;
}

uint64_t sub_10008F530@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v1 = sub_1000E56B0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000082B4(&qword_10012D820);
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  uint64_t v26 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000082B4(&qword_10012D828);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v25 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000082B4(&qword_10012D830);
  uint64_t v32 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v29 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000082B4(&qword_10012D838);
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v30 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v38, "com.apple.tv.");
  HIWORD(v38[1]) = -4864;
  uint64_t v43 = (uint64_t)&type metadata for TVSettingsPlaybackWifiQualityWidget;
  sub_1000082B4(&qword_10012DB38);
  v45._uint64_t countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v45);
  swift_bridgeObjectRelease();
  v24[1] = v38[0];
  if (qword_100129DA8 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1000E56A0();
  sub_1000082B4(&qword_10012CEC8);
  sub_100041D90();
  sub_10004212C();
  sub_10008F314((unint64_t *)&unk_10012D890);
  sub_10007A258();
  uint64_t v7 = v26;
  sub_1000E56C0();
  v38[0] = &type metadata for TVSettingsPlaybackWifiQualityWidget;
  v38[0] = sub_1000E5A20();
  v38[1] = v8;
  uint64_t v43 = 0x746567646957;
  unint64_t v44 = 0xE600000000000000;
  uint64_t v41 = 0x656C67676F54;
  unint64_t v42 = 0xE600000000000000;
  unint64_t v9 = sub_100014158();
  uint64_t v10 = sub_1000E5C70();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  v38[0] = v10;
  v38[1] = v12;
  uint64_t v13 = sub_100014AC4(&qword_10012D848, &qword_10012D820);
  uint64_t v14 = v25;
  uint64_t v15 = v28;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v15);
  if (qword_100129DB0 != -1) {
    swift_once();
  }
  uint64_t v43 = qword_1001421E0;
  unint64_t v44 = *(void *)algn_1001421E8;
  v38[0] = v15;
  v38[1] = &type metadata for String;
  uint64_t v39 = v13;
  unint64_t v40 = v9;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = v29;
  uint64_t v18 = v33;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v18);
  v38[0] = v18;
  v38[1] = &type metadata for String;
  uint64_t v39 = OpaqueTypeConformance2;
  unint64_t v40 = v9;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  BOOL v20 = v30;
  uint64_t v21 = v35;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v21);
  v38[0] = v21;
  v38[1] = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v36;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v20, v22);
}

uint64_t sub_10008FBDC@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129DA8 != -1) {
    swift_once();
  }
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000E4A00();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10008FC80@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012D850);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E3DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v38 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = *a1;
  if (qword_100129C88 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_100141EB8;
  if (*(void *)(qword_100141EB8 + 16))
  {
    uint64_t v41 = v11;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000355DC(v17);
    if (v20)
    {
      uint64_t v21 = v19;
      uint64_t v40 = v7;
      uint64_t v22 = *(void *)(v18 + 56);
      uint64_t v23 = sub_1000E3B50();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v39 = v8;
      uint64_t v25 = v24;
      uint64_t v26 = v22 + *(void *)(v24 + 72) * v21;
      uint64_t v7 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v26, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v6, 0, 1, v23);
      uint64_t v8 = v39;
    }
    else
    {
      uint64_t v23 = sub_1000E3B50();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
    }
    swift_bridgeObjectRelease();
    sub_1000E3B50();
    uint64_t v28 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v6, 1, v23) != 1)
    {
      sub_1000E3B10();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v23);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v14, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v16, v7);
      uint64_t v30 = sub_1000E49F0();
      uint64_t v31 = v34;
      uint64_t v35 = v8;
      uint64_t v33 = v36;
      uint64_t v32 = v37 & 1;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v7);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v27 = sub_1000E3B50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v6, 1, 1, v27);
  }
  uint64_t result = sub_10008C834((uint64_t)v6);
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
LABEL_11:
  *a2 = v30;
  a2[1] = v31;
  a2[2] = v32;
  a2[3] = v33;
  return result;
}

uint64_t sub_10009009C()
{
  uint64_t v34 = sub_1000E3B90();
  uint64_t v0 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v2 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v26 - v7;
  uint64_t v9 = sub_1000082B4(&qword_10012DAC8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[1] = v11;
  uint64_t v12 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v14;
  uint64_t v15 = sub_1000E3DA0();
  uint64_t v32 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v30 = sub_1000082B4(&qword_10012DAD0);
  sub_1000E3D80();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v31 = v16 + 56;
  uint64_t v33 = v17;
  v17(v14, 1, 1, v15);
  uint64_t v18 = type metadata accessor for TVSettingsPlaybackWifiQualityEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  uint64_t v19 = sub_1000E3A00();
  char v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v8, 1, 1, v19);
  uint64_t v21 = v6;
  v20(v6, 1, 1, v19);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v22 = *(void (**)(void))(v0 + 104);
  v26[2] = v0 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v22;
  uint64_t v23 = v34;
  v22(v2);
  sub_10008F314(qword_10012D8C0);
  uint64_t v24 = v29;
  uint64_t v30 = sub_1000E3A70();
  sub_1000082B4(&qword_10012DAD8);
  sub_1000E3D80();
  v33(v24, 1, 1, v32);
  char v35 = 2;
  v20(v8, 1, 1, v19);
  v20(v21, 1, 1, v19);
  v27(v2, v28, v23);
  sub_100041D90();
  sub_1000E3A60();
  return v30;
}

uint64_t sub_100090534(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVSettingsPlaybackWifiQualityEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100090590@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for TVSettingsPlaybackWifiQualityEntity() + 24));

  return swift_retain();
}

uint64_t sub_1000905D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVSettingsPlaybackWifiQualityEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TVSettingsPlaybackWifiQualityWidget()
{
  return &type metadata for TVSettingsPlaybackWifiQualityWidget;
}

uint64_t sub_10009064C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100090668(uint64_t a1)
{
  unint64_t result = sub_100090690();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100090690()
{
  unint64_t result = qword_10012DB30;
  if (!qword_10012DB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DB30);
  }
  return result;
}

uint64_t sub_1000906E4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100090838()
{
  unint64_t result = qword_10012DB60;
  if (!qword_10012DB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DB60);
  }
  return result;
}

uint64_t sub_10009088C()
{
  return sub_100014AC4(&qword_10012DB68, &qword_10012DB70);
}

uint64_t sub_1000908C8()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_1001421F0);
  sub_100008498(v10, (uint64_t)qword_1001421F0);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_100090BB0()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_100142208);
  sub_100008498(v0, (uint64_t)qword_100142208);
  return sub_1000E3D80();
}

uint64_t sub_100090C14()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_100142220);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100142220);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100090CCC()
{
  uint64_t result = swift_getKeyPath();
  qword_100142238 = result;
  return result;
}

uint64_t sub_100090CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  return _swift_task_switch(sub_100090D18, 0, 0);
}

uint64_t sub_100090D18()
{
  sub_1000E3A40();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 136) = v1;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  sub_1000E3A40();
  *(unsigned char *)(v0 + 225) = *(unsigned char *)(v0 + 226);
  if (qword_100129DD0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100142238;
  *(void *)(v0 + 152) = qword_100142238;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = sub_100014AC4(&qword_10012DD28, &qword_10012DD30);
  *(void *)(v0 + 168) = v5;
  void *v4 = v0;
  v4[1] = sub_100090E7C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 225, v3, &type metadata for VideosDownloadCellularQuality, v5);
}

uint64_t sub_100090E7C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100019FEC;
  }
  else {
    uint64_t v2 = sub_100090FEC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100090FEC()
{
  sub_1000E3A40();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  v0[23] = v2;
  v0[24] = v3;
  v0[8] = v1;
  v0[9] = v2;
  v0[10] = v3;
  uint64_t v4 = qword_100142238;
  v0[25] = qword_100142238;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  void *v5 = v0;
  v5[1] = sub_1000910D4;
  uint64_t v6 = v0[21];
  return AppEntity._value<A, B>(for:)(v0 + 28, v4, v6);
}

uint64_t sub_1000910D4()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10001A004;
  }
  else {
    uint64_t v2 = sub_100091244;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100091244()
{
  *(unsigned char *)(v0 + 227) = *(unsigned char *)(v0 + 224);
  sub_100060D58();
  sub_1000E3A10();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000912CC()
{
  if (qword_100129DD0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10009132C()
{
  unint64_t result = qword_10012DB78;
  if (!qword_10012DB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DB78);
  }
  return result;
}

unint64_t sub_100091384()
{
  unint64_t result = qword_10012DB80;
  if (!qword_10012DB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DB80);
  }
  return result;
}

uint64_t sub_1000913D8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10009140C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009145C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129DC0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100142208, a1);
}

uint64_t sub_100091494@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129DC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_100142220);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_100091510(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100015DF8;
  *(_OWORD *)(v4 + 120) = *v1;
  *(void *)(v4 + 112) = a1;
  return _swift_task_switch(sub_100090D18, 0, 0);
}

uint64_t sub_1000915C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100093070();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1000915EC()
{
  return 0xD000000000000038;
}

unint64_t sub_10009160C()
{
  unint64_t result = qword_10012DB90;
  if (!qword_10012DB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DB90);
  }
  return result;
}

unint64_t sub_100091664()
{
  unint64_t result = qword_10012DB98;
  if (!qword_10012DB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DB98);
  }
  return result;
}

uint64_t sub_1000916B8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000916D8, 0, 0);
}

uint64_t sub_1000916D8()
{
  **(unsigned char **)(v0 + 16) = sub_1000B1868() & 1;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100091764(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100091788, 0, 0);
}

uint64_t sub_100091788()
{
  sub_1000B0F5C(*(unsigned char *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100091804(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100091824, 0, 0);
}

uint64_t sub_100091824()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t *v1 = sub_100093460();
  v1[1] = v2;
  v1[2] = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100091894()
{
  unint64_t result = qword_10012DBA8;
  if (!qword_10012DBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DBA8);
  }
  return result;
}

uint64_t sub_1000918E8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000924B4();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10009199C()
{
  unint64_t result = qword_10012DBB8;
  if (!qword_10012DBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DBB8);
  }
  return result;
}

unint64_t sub_1000919F4()
{
  unint64_t result = qword_10012DBC0;
  if (!qword_10012DBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DBC0);
  }
  return result;
}

unint64_t sub_100091A4C()
{
  unint64_t result = qword_10012DBC8[0];
  if (!qword_10012DBC8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10012DBC8);
  }
  return result;
}

uint64_t sub_100091AA0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000924B4();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100091B54(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000924B4();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100091C08()
{
  unint64_t result = qword_10012DBE0;
  if (!qword_10012DBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DBE0);
  }
  return result;
}

unint64_t sub_100091C60()
{
  unint64_t result = qword_10012DBE8;
  if (!qword_10012DBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DBE8);
  }
  return result;
}

unint64_t sub_100091CB8()
{
  unint64_t result = qword_10012DBF0;
  if (!qword_10012DBF0)
  {
    sub_100008354(qword_10012DBF8);
    sub_100091C60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DBF0);
  }
  return result;
}

uint64_t sub_100091D2C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100091894();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsDownloadCellularQualityEntity.Query()
{
  return &type metadata for TVSettingsDownloadCellularQualityEntity.Query;
}

ValueMetadata *type metadata accessor for TVSettingsDownloadCellularQualityEntity()
{
  return &type metadata for TVSettingsDownloadCellularQualityEntity;
}

ValueMetadata *type metadata accessor for TVSettingsDownloadCellularQualityEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsDownloadCellularQualityEntity.UpdateIntent_value;
}

uint64_t sub_100091E10()
{
  return sub_100014AC4(&qword_10012DC10, &qword_10012DC18);
}

uint64_t sub_100091E50()
{
  sub_100092244();
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_100091EE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129DB8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1001421F0, a1);
}

uint64_t sub_100091F1C(uint64_t a1)
{
  unint64_t v2 = sub_100091A4C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100091F68(uint64_t a1)
{
  unint64_t v2 = sub_100091664();

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_100091FB4(uint64_t a1)
{
  unint64_t v2 = sub_10009205C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100092004()
{
  unint64_t result = qword_10012DC20;
  if (!qword_10012DC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DC20);
  }
  return result;
}

unint64_t sub_10009205C()
{
  unint64_t result = qword_10012DC30;
  if (!qword_10012DC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DC30);
  }
  return result;
}

unint64_t sub_1000920B4()
{
  unint64_t result = qword_10012DC38;
  if (!qword_10012DC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DC38);
  }
  return result;
}

unint64_t sub_10009210C()
{
  unint64_t result = qword_10012DC40;
  if (!qword_10012DC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DC40);
  }
  return result;
}

unint64_t sub_100092164()
{
  unint64_t result = qword_10012DC48;
  if (!qword_10012DC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DC48);
  }
  return result;
}

unint64_t sub_1000921B8(void *a1)
{
  a1[1] = sub_1000921F0();
  a1[2] = sub_100092244();
  unint64_t result = sub_100091664();
  a1[3] = result;
  return result;
}

unint64_t sub_1000921F0()
{
  unint64_t result = qword_10012DC98;
  if (!qword_10012DC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DC98);
  }
  return result;
}

unint64_t sub_100092244()
{
  unint64_t result = qword_10012DCA0;
  if (!qword_10012DCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DCA0);
  }
  return result;
}

unint64_t sub_10009229C()
{
  unint64_t result = qword_10012DCA8;
  if (!qword_10012DCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DCA8);
  }
  return result;
}

unint64_t sub_1000922F0(uint64_t a1)
{
  unint64_t result = sub_100092318();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100092318()
{
  unint64_t result = qword_10012DCE0;
  if (!qword_10012DCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DCE0);
  }
  return result;
}

uint64_t sub_10009236C()
{
  return sub_100014AC4(&qword_10012DCE8, &qword_10012DCF0);
}

unint64_t sub_1000923AC()
{
  unint64_t result = qword_10012DCF8;
  if (!qword_10012DCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DCF8);
  }
  return result;
}

unint64_t sub_100092404()
{
  unint64_t result = qword_10012DD00;
  if (!qword_10012DD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DD00);
  }
  return result;
}

unint64_t sub_10009245C()
{
  unint64_t result = qword_10012DD08;
  if (!qword_10012DD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DD08);
  }
  return result;
}

unint64_t sub_1000924B4()
{
  unint64_t result = qword_10012DD10;
  if (!qword_10012DD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DD10);
  }
  return result;
}

uint64_t sub_100092508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v1 = sub_1000E56B0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000082B4(&qword_10012D820);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  uint64_t v37 = v3;
  __chkstk_darwin(v2);
  uint64_t v32 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012D828);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  uint64_t v39 = v6;
  __chkstk_darwin(v5);
  uint64_t v33 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000082B4(&qword_10012D830);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  __chkstk_darwin(v8);
  uint64_t v34 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000082B4(&qword_10012D838);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  uint64_t v43 = v12;
  __chkstk_darwin(v11);
  char v35 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v45, "com.apple.tv.");
  HIWORD(v45[1]) = -4864;
  uint64_t v50 = (uint64_t)&type metadata for TVSettingsDownloadCellularQualityWidget;
  sub_1000082B4(&qword_10012DDA0);
  v52._uint64_t countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v52);
  swift_bridgeObjectRelease();
  v31[1] = v45[0];
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1000E56A0();
  sub_1000082B4(&qword_10012CEC8);
  sub_100060D00();
  sub_100061010();
  sub_100091664();
  sub_10007A258();
  uint64_t v14 = v32;
  sub_1000E56C0();
  v45[0] = &type metadata for TVSettingsDownloadCellularQualityWidget;
  v45[0] = sub_1000E5A20();
  v45[1] = v15;
  uint64_t v50 = 0x746567646957;
  uint64_t v51 = (char *)0xE600000000000000;
  uint64_t v48 = 0x656C67676F54;
  unint64_t v49 = 0xE600000000000000;
  unint64_t v30 = sub_100014158();
  uint64_t v16 = sub_1000E5C70();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  v45[0] = v16;
  v45[1] = v18;
  uint64_t v19 = sub_100014AC4(&qword_10012D848, &qword_10012D820);
  char v20 = v33;
  uint64_t v21 = v36;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v21);
  uint64_t v50 = qword_10012DB50;
  uint64_t v51 = off_10012DB58;
  v45[0] = v21;
  v45[1] = &type metadata for String;
  uint64_t v46 = v19;
  unint64_t v47 = v30;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v34;
  uint64_t v24 = v38;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v24);
  v45[0] = v24;
  v45[1] = &type metadata for String;
  uint64_t v46 = OpaqueTypeConformance2;
  unint64_t v47 = v30;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v35;
  uint64_t v27 = v40;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v27);
  v45[0] = v27;
  v45[1] = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v42;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v26, v28);
}

uint64_t sub_100092B30@<X0>(uint64_t a1@<X8>)
{
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000E4A00();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100092BA4@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012D850);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E3DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v38 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = *a1;
  if (qword_100129CE8 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_100141FF0;
  if (*(void *)(qword_100141FF0 + 16))
  {
    uint64_t v41 = v11;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100035688(v17);
    if (v20)
    {
      uint64_t v21 = v19;
      uint64_t v40 = v7;
      uint64_t v22 = *(void *)(v18 + 56);
      uint64_t v23 = sub_1000E3B50();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v39 = v8;
      uint64_t v25 = v24;
      uint64_t v26 = v22 + *(void *)(v24 + 72) * v21;
      uint64_t v7 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v26, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v6, 0, 1, v23);
      uint64_t v8 = v39;
    }
    else
    {
      uint64_t v23 = sub_1000E3B50();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
    }
    swift_bridgeObjectRelease();
    sub_1000E3B50();
    uint64_t v28 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v6, 1, v23) != 1)
    {
      sub_1000E3B10();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v23);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v14, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v16, v7);
      uint64_t v30 = sub_1000E49F0();
      uint64_t v31 = v34;
      uint64_t v35 = v8;
      uint64_t v33 = v36;
      uint64_t v32 = v37 & 1;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v7);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v27 = sub_1000E3B50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v6, 1, 1, v27);
  }
  uint64_t result = sub_10008C834((uint64_t)v6);
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
LABEL_11:
  *a2 = v30;
  a2[1] = v31;
  a2[2] = v32;
  a2[3] = v33;
  return result;
}

uint64_t sub_100092FBC()
{
  return sub_1000E5740();
}

uint64_t sub_100093070()
{
  uint64_t v28 = sub_1000E3B90();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000E3DA0();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_1000082B4(&qword_10012DD38);
  sub_1000E3D80();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  uint64_t v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v14 = sub_1000E3A00();
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v29 = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v5, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v20 = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v27;
  v17(v27);
  sub_100091A4C();
  uint64_t v23 = sub_1000E3A70();
  sub_1000082B4(&qword_10012DD40);
  sub_1000E3D80();
  v25(v10, 1, 1, v26);
  LOBYTE(v29) = 2;
  v15(v16, 1, 1, v14);
  v15(v5, 1, 1, v14);
  v21(v18, v22, v28);
  sub_100060D00();
  sub_1000E3A60();
  return v23;
}

uint64_t sub_100093460()
{
  uint64_t v0 = sub_1000E3D90();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000E3F10();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000E59F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1000E3DA0();
  __chkstk_darwin(v6 - 8);
  v9[1] = &type metadata for TVSettingsDownloadCellularQualityEntity;
  sub_1000082B4(&qword_10012CD88);
  uint64_t v7 = sub_1000E5A20();
  sub_1000082B4(&qword_10012DB70);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012DD28, &qword_10012DD30);
  sub_100060D00();
  sub_1000E3C80();
  return v7;
}

uint64_t sub_100093734@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

ValueMetadata *type metadata accessor for TVSettingsDownloadCellularQualityWidget()
{
  return &type metadata for TVSettingsDownloadCellularQualityWidget;
}

uint64_t sub_100093750()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10009376C(uint64_t a1)
{
  unint64_t result = sub_100093794();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100093794()
{
  unint64_t result = qword_10012DD98;
  if (!qword_10012DD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DD98);
  }
  return result;
}

uint64_t sub_1000937E8()
{
  return swift_getOpaqueTypeConformance2();
}

UIImage sub_100093938()
{
  sub_1000939B8();
  v1._object = (void *)0x80000001000EBDD0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  result.super.isa = sub_1000E5C00(v1).super.isa;
  qword_100142240 = (uint64_t)result.super.isa;
  return result;
}

uint64_t sub_100093984()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TVWidgetPlaceholderDataProvider()
{
  return self;
}

unint64_t sub_1000939B8()
{
  unint64_t result = qword_10012DE40;
  if (!qword_10012DE40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10012DE40);
  }
  return result;
}

uint64_t sub_1000939F8(char a1, void *a2)
{
  switch(a1)
  {
    case 1:
      if (qword_100129DD8 != -1) {
        swift_once();
      }
      uint64_t v3 = (void *)qword_100142240;
      long long v11 = xmmword_1000F6610;
      long long v4 = xmmword_1000F6620;
      goto LABEL_8;
    case 2:
      if (qword_100129DD8 != -1) {
        swift_once();
      }
      uint64_t v3 = (void *)qword_100142240;
      id v6 = (id)qword_100142240;
      long long v7 = 0uLL;
      long long v8 = 0uLL;
      goto LABEL_14;
    case 3:
      uint64_t v3 = 0;
      long long v10 = xmmword_1000F6620;
      long long v11 = xmmword_1000F6610;
      goto LABEL_13;
    default:
      if (qword_100129DD8 != -1) {
        swift_once();
      }
      uint64_t v3 = (void *)qword_100142240;
      long long v11 = xmmword_1000F6610;
      long long v4 = xmmword_1000F6630;
LABEL_8:
      long long v10 = v4;
      id v5 = v3;
LABEL_13:
      v15._uint64_t countAndFlagsBits = sub_1000E5DB0();
      sub_1000E5A70(v15);
      swift_bridgeObjectRelease();
      uint64_t v12 = a2;
      v16._uint64_t countAndFlagsBits = sub_1000E5DB0();
      sub_1000E5A70(v16);
      swift_bridgeObjectRelease();
      long long v8 = v10;
      long long v7 = v11;
LABEL_14:
      uint64_t v12 = v3;
      long long v13 = v7;
      long long v14 = v8;
      type metadata accessor for TVWidgetContentViewModel();
      swift_allocObject();
      return sub_1000961B4((uint64_t)&v12);
  }
}

unint64_t sub_100093C00(uint64_t a1)
{
  uint64_t v2 = sub_1000E5640();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_1000939F8(0, 0);
    sub_1000E5AB0();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000E5AF0();
    }
    sub_1000E5B00();
    sub_1000E5AE0();
    sub_1000939F8(3, 0);
    sub_1000E5AB0();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000E5AF0();
    }
    sub_1000E5B00();
    sub_1000E5AE0();
    sub_1000939F8(3, (void *)1);
    sub_1000E5AB0();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000E5AF0();
    }
    sub_1000E5B00();
    sub_1000E5AE0();
    char v7 = 3;
LABEL_19:
    uint64_t v8 = 2;
    goto LABEL_20;
  }
  if (v6 == enum case for WidgetFamily.systemMedium(_:))
  {
    sub_1000939F8(0, 0);
    sub_1000E5AB0();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000E5AF0();
    }
    sub_1000E5B00();
    sub_1000E5AE0();
    char v7 = 0;
    uint64_t v8 = 1;
    goto LABEL_20;
  }
  if (v6 == enum case for WidgetFamily.systemLarge(_:))
  {
    sub_1000939F8(2, 0);
    sub_1000E5AB0();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000E5AF0();
    }
    sub_1000E5B00();
    sub_1000E5AE0();
    sub_1000939F8(1, (void *)1);
    sub_1000E5AB0();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000E5AF0();
    }
    sub_1000E5B00();
    sub_1000E5AE0();
    char v7 = 1;
    goto LABEL_19;
  }
  if (v6 != enum case for WidgetFamily.systemExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v11;
  }
  sub_1000939F8(2, 0);
  sub_1000E5AB0();
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000E5AF0();
  }
  sub_1000E5B00();
  sub_1000E5AE0();
  sub_1000939F8(1, (void *)1);
  sub_1000E5AB0();
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000E5AF0();
  }
  sub_1000E5B00();
  sub_1000E5AE0();
  sub_1000939F8(1, (void *)2);
  sub_1000E5AB0();
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000E5AF0();
  }
  sub_1000E5B00();
  sub_1000E5AE0();
  sub_1000939F8(1, (void *)3);
  sub_1000E5AB0();
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000E5AF0();
  }
  sub_1000E5B00();
  sub_1000E5AE0();
  sub_1000939F8(1, (void *)4);
  sub_1000E5AB0();
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000E5AF0();
  }
  sub_1000E5B00();
  sub_1000E5AE0();
  sub_1000939F8(1, (void *)5);
  sub_1000E5AB0();
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000E5AF0();
  }
  sub_1000E5B00();
  sub_1000E5AE0();
  char v7 = 1;
  uint64_t v8 = 6;
LABEL_20:
  sub_1000939F8(v7, (void *)v8);
  sub_1000E5AB0();
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000E5AF0();
  }
  sub_1000E5B00();
  sub_1000E5AE0();
  return v11;
}

id sub_1000941A0()
{
  type metadata accessor for TVSettingsDataProxy();
  uint64_t v0 = swift_allocObject();
  id result = [self sharedPreferences];
  *(void *)(v0 + 16) = result;
  qword_100142248 = v0;
  return result;
}

uint64_t sub_1000941FC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TVSettingsDataProxy()
{
  return self;
}

unint64_t sub_100094258(char a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
    case 2:
    case 4:
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD000000000000026;
      break;
    case 11:
      unint64_t result = 0xD000000000000024;
      break;
    case 12:
      unint64_t result = 0xD000000000000012;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 14:
      unint64_t result = 0xD000000000000019;
      break;
    case 15:
      unint64_t result = 0xD000000000000012;
      break;
    case 16:
      unint64_t result = 0xD000000000000018;
      break;
    case 17:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 18:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 19:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

void *sub_100094494()
{
  sub_1000082B4(&qword_10012DF10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000F3C00;
  sub_1000082B4(&qword_10012A7C8);
  *(void *)(inited + 32) = sub_1000E5A20();
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 48) = 1;
  type metadata accessor for TVSettingsPlaybackWifiQualityEntity();
  sub_1000082B4(&qword_10012CD68);
  *(void *)(inited + 56) = sub_1000E5A20();
  *(void *)(inited + 64) = v2;
  *(unsigned char *)(inited + 72) = 3;
  sub_1000082B4(&qword_10012CD80);
  *(void *)(inited + 80) = sub_1000E5A20();
  *(void *)(inited + 88) = v3;
  *(unsigned char *)(inited + 96) = 2;
  sub_1000082B4(&qword_10012CA90);
  *(void *)(inited + 104) = sub_1000E5A20();
  *(void *)(inited + 112) = v4;
  *(unsigned char *)(inited + 120) = 4;
  type metadata accessor for TVSettingsDownloadWifiQualityEntity();
  sub_1000082B4(&qword_10012CD70);
  *(void *)(inited + 128) = sub_1000E5A20();
  *(void *)(inited + 136) = v5;
  *(unsigned char *)(inited + 144) = 5;
  sub_1000082B4(&qword_10012CD88);
  *(void *)(inited + 152) = sub_1000E5A20();
  *(void *)(inited + 160) = v6;
  *(unsigned char *)(inited + 168) = 6;
  sub_1000082B4(&qword_10012BCB8);
  *(void *)(inited + 176) = sub_1000E5A20();
  *(void *)(inited + 184) = v7;
  *(unsigned char *)(inited + 192) = 10;
  sub_1000082B4(&qword_10012A588);
  *(void *)(inited + 200) = sub_1000E5A20();
  *(void *)(inited + 208) = v8;
  *(unsigned char *)(inited + 216) = 7;
  sub_1000082B4(&qword_10012B0C0);
  *(void *)(inited + 224) = sub_1000E5A20();
  *(void *)(inited + 232) = v9;
  *(unsigned char *)(inited + 240) = 13;
  sub_1000082B4(&qword_10012CD90);
  *(void *)(inited + 248) = sub_1000E5A20();
  *(void *)(inited + 256) = v10;
  *(unsigned char *)(inited + 264) = 12;
  sub_1000082B4(&qword_10012CD98);
  *(void *)(inited + 272) = sub_1000E5A20();
  *(void *)(inited + 280) = v11;
  *(unsigned char *)(inited + 288) = 16;
  sub_1000082B4(&qword_10012CD78);
  *(void *)(inited + 296) = sub_1000E5A20();
  *(void *)(inited + 304) = v12;
  *(unsigned char *)(inited + 312) = 15;
  sub_1000082B4(&qword_10012B3D0);
  *(void *)(inited + 320) = sub_1000E5A20();
  *(void *)(inited + 328) = v13;
  *(unsigned char *)(inited + 336) = 19;
  unint64_t result = (void *)sub_100034874(inited);
  off_10012DE48 = result;
  return result;
}

uint64_t sub_10009475C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_100094258(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_100094258(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1000E5DC0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000947E8()
{
  char v1 = *v0;
  sub_1000E5E00();
  sub_100094258(v1);
  sub_1000E5A50();
  swift_bridgeObjectRelease();
  return sub_1000E5E20();
}

uint64_t sub_10009484C()
{
  sub_100094258(*v0);
  sub_1000E5A50();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000948A0()
{
  char v1 = *v0;
  sub_1000E5E00();
  sub_100094258(v1);
  sub_1000E5A50();
  swift_bridgeObjectRelease();
  return sub_1000E5E20();
}

uint64_t sub_100094900@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100094BB8();
  *a1 = result;
  return result;
}

unint64_t sub_100094930@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100094258(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t getEnumTagSinglePayload for TVPreferencesStoreKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TVPreferencesStoreKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100094AB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVPreferencesStoreKey()
{
  return &type metadata for TVPreferencesStoreKey;
}

unint64_t sub_100094AF4()
{
  unint64_t result = qword_10012DF18;
  if (!qword_10012DF18)
  {
    sub_100008354(&qword_10012DF20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DF18);
  }
  return result;
}

void sub_100094B50(void *a1@<X8>)
{
  *a1 = &off_1001205E0;
}

unint64_t sub_100094B64()
{
  unint64_t result = qword_10012DF28;
  if (!qword_10012DF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DF28);
  }
  return result;
}

uint64_t sub_100094BB8()
{
  unint64_t v0 = sub_1000E5DE0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

double sub_100094C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_1000E5640();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v24 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v8 = (char *)&v21 - v7;
  uint64_t v9 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  v9((char *)&v21 - v7, enum case for WidgetFamily.systemLarge(_:), v3);
  sub_10002CEFC();
  uint64_t v22 = a1;
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v11 = v25;
  uint64_t v10 = v26;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v8, v3);
  double result = 18.0;
  if (v10 != v11 && (*(unsigned char *)(v23 + 72) & 1) == 0)
  {
    ((void (*)(char *, void, uint64_t, double))v9)(v8, enum case for WidgetFamily.systemSmall(_:), v3, 18.0);
    uint64_t v14 = v22;
    sub_1000E5AA0();
    sub_1000E5AA0();
    uint64_t v15 = v25;
    uint64_t v23 = v26;
    v12(v8, v3);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v24, v14, v3);
    if (v23 == v15)
    {
      v12(v24, v3);
    }
    else
    {
      v9(v8, enum case for WidgetFamily.systemMedium(_:), v3);
      Swift::String v16 = v24;
      sub_1000E5AA0();
      sub_1000E5AA0();
      uint64_t v18 = v25;
      uint64_t v17 = v26;
      v12(v8, v3);
      v12(v16, v3);
      double result = 0.0;
      if (v17 != v18) {
        return result;
      }
    }
    uint64_t v19 = sub_10002BF1C();
    char v20 = sub_1000E5BF0();

    double result = 14.0;
    if (v20) {
      return 17.0;
    }
  }
  return result;
}

uint64_t destroy for TVWidgetMetadataViewLayout()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TVWidgetMetadataViewLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TVWidgetMetadataViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for TVWidgetMetadataViewLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TVWidgetMetadataViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVWidgetMetadataViewLayout(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVWidgetMetadataViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetMetadataViewLayout()
{
  return &type metadata for TVWidgetMetadataViewLayout;
}

uint64_t sub_1000951D4()
{
  uint64_t v0 = sub_1000E41D0();
  sub_100008434(v0, qword_100142250);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_100142250);
  uint64_t v2 = enum case for DynamicTypeSize.xxxLarge(_:);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

ValueMetadata *type metadata accessor for SportsWidgetViewLayout()
{
  return &type metadata for SportsWidgetViewLayout;
}

double sub_10009526C(uint64_t a1, void *a2, uint64_t a3, void *a4, char *a5, uint64_t a6)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v47 = a3;
  uint64_t v48 = sub_1000E41F0();
  uint64_t v9 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v46 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000E41D0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  unint64_t v49 = (char *)&v44 - v22;
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  if (a2)
  {
    v53._uint64_t countAndFlagsBits = a1;
    v53._object = a2;
    sub_1000E5A70(v53);
    v54._uint64_t countAndFlagsBits = 32;
    v54._object = (void *)0xE100000000000000;
    sub_1000E5A70(v54);
  }
  v55._uint64_t countAndFlagsBits = 0x38383A383838;
  v55._object = (void *)0xE600000000000000;
  sub_1000E5A70(v55);
  if (a4)
  {
    v50._uint64_t countAndFlagsBits = 32;
    v50._object = (void *)0xE100000000000000;
    v56._uint64_t countAndFlagsBits = v47;
    v56._object = a4;
    sub_1000E5A70(v56);
    sub_1000E5A70(v50);
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = v9;
  uint64_t v23 = v44;
  if (qword_100129BC0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_100008498(v11, (uint64_t)qword_100141D08);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v25(v18, v24, v11);
  sub_1000957CC();
  if (sub_1000E5940())
  {
    uint64_t v26 = v21;
    uint64_t v27 = v18;
  }
  else
  {
    uint64_t v26 = v21;
    uint64_t v27 = v23;
  }
  v25(v26, (uint64_t)v27, v11);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v18, v11);
  if (qword_100129DF0 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_100008498(v11, (uint64_t)qword_100142250);
  v25(v15, v29, v11);
  if (sub_1000E5930()) {
    uint64_t v30 = v15;
  }
  else {
    uint64_t v30 = v21;
  }
  v25(v49, (uint64_t)v30, v11);
  v28(v15, v11);
  v28(v21, v11);
  uint64_t v31 = sub_10002BF1C();
  uint64_t v33 = v46;
  uint64_t v32 = v47;
  uint64_t v34 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v45, v48);
  int v35 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v33, v34);
  if (v35 != enum case for LegibilityWeight.regular(_:) && v35 != enum case for LegibilityWeight.bold(_:)) {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  }
  id v36 = [self traitCollectionWithPreferredContentSizeCategory:v31];
  id v37 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:v36];
  uint64_t v38 = self;
  [v37 pointSize];
  id v39 = [v38 monospacedDigitSystemFontOfSize:];

  id v40 = v39;
  sub_1000E5A90();
  double v42 = v41;
  swift_bridgeObjectRelease();

  v28(v49, v11);
  return v42;
}

unint64_t sub_1000957CC()
{
  unint64_t result = qword_10012A0D8;
  if (!qword_10012A0D8)
  {
    sub_1000E41D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012A0D8);
  }
  return result;
}

uint64_t destroy for SportsWidgetGenericClockViewLayout()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SportsWidgetGenericClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetGenericClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for SportsWidgetGenericClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for SportsWidgetGenericClockViewLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetGenericClockViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetGenericClockViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetGenericClockViewLayout()
{
  return &type metadata for SportsWidgetGenericClockViewLayout;
}

uint64_t initializeWithCopy for TVWidgetGradientViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TVWidgetGradientViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for TVWidgetGradientViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for TVWidgetGradientViewLayout()
{
  return &type metadata for TVWidgetGradientViewLayout;
}

unsigned char *storeEnumTagSinglePayload for TVWidgetGradientViewDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100095CCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetGradientViewDirection()
{
  return &type metadata for TVWidgetGradientViewDirection;
}

unint64_t sub_100095D08()
{
  unint64_t result = qword_10012DF30;
  if (!qword_10012DF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012DF30);
  }
  return result;
}

unint64_t sub_100095D5C()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + 40))
  {
    unint64_t v2 = *(void *)(v0 + 32);
  }
  else
  {
    unint64_t v7 = sub_100095EB8();
    uint64_t v8 = v3;
    v9._uint64_t countAndFlagsBits = 45;
    v9._object = (void *)0xE100000000000000;
    sub_1000E5A70(v9);
    if (*(unsigned char *)(v0 + 24)) {
      v4._uint64_t countAndFlagsBits = 1702195828;
    }
    else {
      v4._uint64_t countAndFlagsBits = 0x65736C6166;
    }
    if (*(unsigned char *)(v0 + 24)) {
      uint64_t v5 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v5 = (void *)0xE500000000000000;
    }
    v4._object = v5;
    sub_1000E5A70(v4);
    swift_bridgeObjectRelease();
    unint64_t v2 = v7;
    *(void *)(v1 + 32) = v7;
    *(void *)(v1 + 40) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100095E28()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TVWidgetContentRefinedViewModel()
{
  return self;
}

unint64_t sub_100095E8C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100095D5C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100095EB8()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel____lazy_storage___id);
  if (*(void *)(v0 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel____lazy_storage___id + 8))
  {
    unint64_t v2 = *v1;
  }
  else
  {
    unint64_t v2 = sub_100095F34(v0);
    unint64_t *v1 = v2;
    v1[1] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t sub_100095F34(uint64_t a1)
{
  uint64_t v2 = sub_1000E3E00();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000082B4(&qword_100129F38);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *(unsigned char *)(a1 + 73);
  uint64_t v10 = a1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_actionURL;
  swift_beginAccess();
  sub_100014754(v10, (uint64_t)v8, &qword_100129F38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    unint64_t v11 = 0xD00000000000001ELL;
    sub_1000147B8((uint64_t)v8, &qword_100129F38);
    uint64_t v12 = *(void *)(a1 + 24);
    if (!v12) {
      return v11;
    }
    uint64_t v13 = *(void **)(a1 + 40);
    if (!v13) {
      return v11;
    }
    uint64_t v14 = *(void *)(a1 + 32);
    uint64_t v22 = *(void *)(a1 + 16);
    uint64_t v23 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24._uint64_t countAndFlagsBits = 45;
    v24._object = (void *)0xE100000000000000;
    sub_1000E5A70(v24);
    v25._uint64_t countAndFlagsBits = v14;
    v25._object = v13;
    sub_1000E5A70(v25);
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1000147B8((uint64_t)v8, &qword_100129F38);
    uint64_t v15 = sub_1000E3DD0();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v22 = v15;
    uint64_t v23 = v17;
  }
  v26._uint64_t countAndFlagsBits = 45;
  v26._object = (void *)0xE100000000000000;
  sub_1000E5A70(v26);
  if (v9) {
    v18._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v18._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (v9) {
    uint64_t v19 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v19 = (void *)0xE500000000000000;
  }
  v18._object = v19;
  sub_1000E5A70(v18);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1000961B4(uint64_t a1)
{
  *(void *)(v1 + 64) = 0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(unsigned char *)(v1 + 72) = 1;
  *(_WORD *)(v1 + 73) = 514;
  uint64_t v2 = v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_actionURL;
  uint64_t v3 = sub_1000E3E00();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  uint64_t v5 = v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate;
  uint64_t v6 = sub_1000E3EE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  uint64_t v8 = (void **)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_image);
  *(void *)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_image) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_isExpiring) = 0;
  v7(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_refreshDate, 1, 1, v6);
  char v9 = (void *)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_cropCode);
  void *v9 = 0;
  v9[1] = 0;
  v4(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_imageUrl, 1, 1, v3);
  uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel____lazy_storage___id);
  void *v10 = 0;
  v10[1] = 0;
  sub_100014B08(a1 + 8, (uint64_t)v16, &qword_10012E288);
  sub_100014B08((uint64_t)v16, v1 + 16, &qword_10012E288);
  sub_10005F5A4((uint64_t)v16);
  swift_bridgeObjectRelease();
  sub_100014B08(a1 + 24, (uint64_t)v15, &qword_10012E288);
  sub_100014B08((uint64_t)v15, v1 + 32, &qword_10012E288);
  sub_10005F5A4((uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_100014B08(a1, (uint64_t)v14, &qword_10012E290);
  unint64_t v11 = *v8;
  sub_100014B08((uint64_t)v14, (uint64_t)v8, &qword_10012E290);

  sub_1000974C4((uint64_t)v16);
  sub_1000974C4((uint64_t)v15);
  return v1;
}

uint64_t sub_100096404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000E3D10();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v28 - v9;
  uint64_t v11 = sub_1000082B4(&qword_10012E2A0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000E3D60();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E3D40();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000147B8((uint64_t)v13, &qword_10012E2A0);
    uint64_t v18 = sub_1000E3E00();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(a2, a1, v18);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(a2, 0, 1, v18);
  }
  else
  {
    v28[0] = v8;
    v28[1] = a2;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    uint64_t v21 = sub_1000E3D20();
    if (v21) {
      uint64_t v22 = (void *)v21;
    }
    else {
      uint64_t v22 = _swiftEmptyArrayStorage;
    }
    id v23 = [self mainBundle];
    id v24 = [v23 bundleIdentifier];

    if (v24)
    {
      sub_1000E5A10();
    }
    sub_1000E3D00();
    swift_bridgeObjectRelease();
    uint64_t v25 = v28[0];
    (*(void (**)(void, char *, uint64_t))(v5 + 16))(v28[0], v10, v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v22 = (void *)sub_1000974F0(0, v22[2] + 1, 1, v22);
    }
    unint64_t v27 = v22[2];
    unint64_t v26 = v22[3];
    if (v27 >= v26 >> 1) {
      uint64_t v22 = (void *)sub_1000974F0(v26 > 1, v27 + 1, 1, v22);
    }
    v22[2] = v27 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))((unint64_t)v22+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v27, v25, v4);
    sub_1000E3D30();
    sub_1000E3D50();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

id sub_100096828()
{
  uint64_t v1 = sub_1000082B4(&qword_10012E298);
  __chkstk_darwin(v1 - 8);
  uint64_t v72 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000082B4(&qword_100129F30);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v73 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v66 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v74 = (char *)&v66 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v66 - v11;
  uint64_t v13 = sub_1000E3EE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v66 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v66 - v21;
  uint64_t v75 = v0;
  uint64_t v23 = v0 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate;
  swift_beginAccess();
  sub_100014754(v23, (uint64_t)v12, &qword_100129F30);
  id v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v24(v12, 1, v13) == 1) {
    return (id)sub_1000147B8((uint64_t)v12, &qword_100129F30);
  }
  char v70 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v24;
  uint64_t v71 = v8;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v12, v13);
  sub_1000E3ED0();
  sub_1000E3EC0();
  unint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v17, v13);
  char v27 = sub_1000E3E80();
  v26(v20, v13);
  uint64_t v68 = v14;
  uint64_t v69 = v26;
  unint64_t v67 = v20;
  if (v27)
  {
    uint64_t v28 = v75;
    *(unsigned char *)(v75 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_isExpiring) = 1;
    sub_1000E3ED0();
    sub_1000E3EC0();
    v26(v17, v13);
    char v29 = sub_1000E3E80();
    v26(v20, v13);
    if (v29)
    {
      uint64_t v30 = v68;
      uint64_t v31 = v74;
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v74, v22, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v13);
      uint64_t v32 = (uint64_t)v31;
    }
    else
    {
      uint64_t v38 = v74;
      sub_1000E3EC0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v38, 0, 1, v13);
      uint64_t v32 = (uint64_t)v38;
    }
    uint64_t v39 = (uint64_t)v71;
    sub_100014B08(v32, (uint64_t)v71, &qword_100129F30);
    uint64_t v36 = v28 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_refreshDate;
    swift_beginAccess();
    uint64_t v37 = v39;
  }
  else
  {
    uint64_t v33 = v74;
    sub_1000E3EC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v33, 0, 1, v13);
    uint64_t v34 = (uint64_t)v33;
    uint64_t v35 = (uint64_t)v71;
    sub_100014B08(v34, (uint64_t)v71, &qword_100129F30);
    uint64_t v36 = v75 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_refreshDate;
    swift_beginAccess();
    uint64_t v37 = v35;
  }
  sub_1000838FC(v37, v36, &qword_100129F30);
  swift_endAccess();
  uint64_t v40 = v13;
  uint64_t v74 = (char *)(v14 + 8);
  uint64_t v71 = v22;
  id result = sub_1000054E4();
  if (!result)
  {
    __break(1u);
    return result;
  }
  double v41 = result;
  sub_1000082B4(&qword_10012A900);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1000F2510;
  uint64_t v43 = v75;
  uint64_t v44 = *(void *)(v75 + 16);
  unint64_t v45 = *(void *)(v75 + 24);
  *(void *)(v42 + 56) = &type metadata for String;
  unint64_t v46 = sub_10001D7B4();
  *(void *)(v42 + 64) = v46;
  if (v45) {
    uint64_t v47 = v44;
  }
  else {
    uint64_t v47 = 7104878;
  }
  unint64_t v48 = 0xE300000000000000;
  if (v45) {
    unint64_t v48 = v45;
  }
  *(void *)(v42 + 32) = v47;
  *(void *)(v42 + 40) = v48;
  uint64_t v49 = v43 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_refreshDate;
  swift_beginAccess();
  uint64_t v50 = v49;
  uint64_t v51 = v73;
  sub_100014754(v50, v73, &qword_100129F30);
  if (v70(v51, 1, v40))
  {
    swift_bridgeObjectRetain();
    sub_1000147B8(v51, &qword_100129F30);
    unint64_t v52 = (uint64_t *)(v42 + 72);
    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v46;
    uint64_t v53 = (uint64_t)v72;
    Swift::String v54 = (uint64_t (*)(uint64_t, uint64_t))v69;
  }
  else
  {
    Swift::String v56 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v51, v40);
    swift_bridgeObjectRetain();
    sub_1000147B8(v51, &qword_100129F30);
    uint64_t v53 = (uint64_t)v72;
    sub_1000E3F00();
    uint64_t v57 = sub_1000E3F10();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v53, 0, 1, v57);
    uint64_t v58 = sub_1000E3E30();
    unint64_t v55 = v59;
    sub_1000147B8(v53, &qword_10012E298);
    uint64_t v60 = v56;
    Swift::String v54 = (uint64_t (*)(uint64_t, uint64_t))v69;
    v69(v60, v40);
    unint64_t v52 = (uint64_t *)(v42 + 72);
    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v46;
    if (v55)
    {
      *unint64_t v52 = v58;
      goto LABEL_20;
    }
  }
  *unint64_t v52 = 7104878;
  unint64_t v55 = 0xE300000000000000;
LABEL_20:
  *(void *)(v42 + 80) = v55;
  sub_1000E3F00();
  uint64_t v61 = sub_1000E3F10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v53, 0, 1, v61);
  uint64_t v62 = (uint64_t)v71;
  uint64_t v63 = sub_1000E3E30();
  uint64_t v65 = v64;
  sub_1000147B8(v53, &qword_10012E298);
  *(void *)(v42 + 136) = &type metadata for String;
  *(void *)(v42 + 144) = v46;
  *(void *)(v42 + 112) = v63;
  *(void *)(v42 + 120) = v65;
  sub_1000E5B90();
  sub_1000E3F40();

  swift_bridgeObjectRelease();
  return (id)v54(v62, v40);
}

double sub_100096FD4(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2) {
    goto LABEL_6;
  }
  double result = *(double *)&a1;
  if ((a4 & 1) == 0 && *(double *)&a1 > 0.0)
  {
    double v6 = *(double *)&a3;
    if (*(double *)&a3 > 0.0) {
      goto LABEL_15;
    }
  }
  if ((*(unsigned char *)(v4 + 72) & 1) != 0 || *(double *)&a1 <= 0.0 || (double v8 = *(double *)(v4 + 64), v8 <= 0.0))
  {
LABEL_6:
    double result = 0.0;
    if (a4) {
      return result;
    }
    if (*(unsigned char *)(v4 + 72)) {
      return result;
    }
    if (*(double *)&a3 <= 0.0) {
      return result;
    }
    double v7 = *(double *)(v4 + 64);
    if (v7 <= 0.0) {
      return result;
    }
    double result = v7 * *(double *)&a3;
    double v6 = *(double *)&a3;
  }
  else
  {
    double v6 = *(double *)&a1 / v8;
  }
LABEL_15:
  if (v6 <= 624.0)
  {
    if (result <= 1296.0) {
      return result;
    }
  }
  else
  {
    double result = result / v6 * 624.0;
  }
  if (result > 1296.0) {
    return 1296.0;
  }
  return result;
}

uint64_t sub_1000970B0(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  if ((a1 & 1) != 0 && a3 >> 60 != 15)
  {
    id v8 = objc_allocWithZone((Class)UIImage);
    sub_100054178(a2, a3);
    Class isa = sub_1000E3E10().super.isa;
    id v10 = [v8 initWithData:isa];

    if (v10)
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      sub_1000540D8(a2, a3);
      if (Strong)
      {
        uint64_t v12 = *(void **)(Strong + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_image);
        *(void *)(Strong + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_image) = v10;
        swift_release();
      }
      else
      {
      }
    }
    else
    {
      sub_1000540D8(a2, a3);
    }
  }
  return a5();
}

uint64_t sub_1000971CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000147B8(v0 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_actionURL, &qword_100129F38);
  sub_1000147B8(v0 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate, &qword_100129F30);

  sub_1000147B8(v0 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_refreshDate, &qword_100129F30);
  swift_bridgeObjectRelease();
  sub_1000147B8(v0 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_imageUrl, &qword_100129F38);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000972A4()
{
  sub_1000971CC();

  return swift_deallocClassInstance();
}

uint64_t sub_1000972FC()
{
  return type metadata accessor for TVWidgetContentViewModel();
}

uint64_t type metadata accessor for TVWidgetContentViewModel()
{
  uint64_t result = qword_10012E038;
  if (!qword_10012E038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100097350()
{
  sub_100022D6C(319, (unint64_t *)&qword_10012AA70, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_100022D6C(319, (unint64_t *)&qword_10012AB40, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

unint64_t sub_100097498@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100095EB8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000974C4(uint64_t a1)
{
  return a1;
}

size_t sub_1000974F0(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000082B4(&qword_10012E2A8);
  uint64_t v10 = *(void *)(sub_1000E3D10() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  unint64_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_1000E3D10() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

uint64_t sub_1000976C4(void *a1)
{
  uint64_t v3 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v3 - 8);
  uint64_t v62 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000E3E00();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v6 = v55;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000082B4(&qword_100129F38);
  __chkstk_darwin(v9 - 8);
  uint64_t v56 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 64) = 0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(unsigned char *)(v1 + 72) = 1;
  *(_WORD *)(v1 + 73) = 514;
  uint64_t v57 = v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_actionURL;
  uint64_t v11 = *(void (**)(void))(v6 + 56);
  v11();
  uint64_t v12 = v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_rentalExpirationDate;
  uint64_t v13 = sub_1000E3EE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v16 = v14 + 56;
  uint64_t v61 = v12;
  v15(v12, 1, 1, v13);
  uint64_t v63 = OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_image;
  *(void *)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_image) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_isExpiring) = 0;
  unint64_t v59 = v15;
  uint64_t v60 = v13;
  uint64_t v58 = v16;
  v15(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_refreshDate, 1, 1, v13);
  uint64_t v17 = (uint64_t *)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_cropCode);
  uint64_t *v17 = 0;
  v17[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_imageUrl, 1, 1, v5);
  uint64_t v18 = (void *)(v1 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel____lazy_storage___id);
  void *v18 = 0;
  v18[1] = 0;
  id v19 = [a1 title];
  uint64_t v20 = sub_1000E5A10();
  uint64_t v22 = v21;

  *(void *)(v1 + 16) = v20;
  *(void *)(v1 + 24) = v22;
  swift_bridgeObjectRelease();
  id v23 = [a1 subtitleComposed];
  uint64_t v24 = sub_1000E5A10();
  unint64_t v26 = v25;

  swift_bridgeObjectRelease();
  uint64_t v27 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v27 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (v27) {
    uint64_t v28 = &selRef_subtitleComposed;
  }
  else {
    uint64_t v28 = &selRef_subtitle;
  }
  id v29 = [a1 *v28];
  uint64_t v30 = sub_1000E5A10();
  uint64_t v32 = v31;

  *(void *)(v1 + 32) = v30;
  *(void *)(v1 + 40) = v32;
  swift_bridgeObjectRelease();
  id v33 = [a1 imageURLTemplate];
  uint64_t v34 = sub_1000E5A10();
  uint64_t v36 = v35;

  *(void *)(v1 + 48) = v34;
  *(void *)(v1 + 56) = v36;
  swift_bridgeObjectRelease();
  [a1 imageAspectRatio];
  *(void *)(v1 + 64) = v37;
  *(unsigned char *)(v1 + 72) = 0;
  id v38 = [a1 actionURL];
  sub_1000E3DE0();

  uint64_t v39 = v56;
  sub_100096404((uint64_t)v8, v56);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v5);
  uint64_t v40 = v57;
  swift_beginAccess();
  sub_1000838FC(v39, v40, &qword_100129F38);
  swift_endAccess();
  *(unsigned char *)(v1 + 73) = [a1 isLiveEvent];
  id v41 = [a1 rentalExpirationDate];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = (uint64_t)v62;
    sub_1000E3EB0();

    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v43 = (uint64_t)v62;
    uint64_t v44 = 1;
  }
  v59(v43, v44, 1, v60);
  uint64_t v45 = v61;
  swift_beginAccess();
  sub_1000838FC(v43, v45, &qword_100129F30);
  swift_endAccess();
  *(unsigned char *)(v1 + 74) = [a1 isNewEpisode];
  id v46 = [a1 cropCode];
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v48 = sub_1000E5A10();
    uint64_t v50 = v49;
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v50 = 0;
  }
  uint64_t *v17 = v48;
  v17[1] = v50;
  swift_bridgeObjectRelease();
  if (qword_100129DD8 != -1) {
    swift_once();
  }
  uint64_t v51 = (void *)qword_100142240;
  unint64_t v52 = *(void **)(v1 + v63);
  *(void *)(v1 + v63) = qword_100142240;
  id v53 = v51;

  sub_100096828();
  return v1;
}

uint64_t sub_100097C3C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, NSObject *a8)
{
  uint64_t v16 = sub_1000082B4(&qword_100129F38);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  id v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v59 = (uint64_t)&v55 - v21;
  __chkstk_darwin(v20);
  uint64_t v56 = (char *)&v55 - v22;
  id v23 = (void *)swift_allocObject();
  void v23[2] = a6;
  v23[3] = a7;
  uint64_t v58 = a7;
  uint64_t v60 = v23;
  v23[4] = a8;
  if (*(void *)(a5 + 56))
  {
    uint64_t v57 = a6;
    double v24 = sub_100096FD4(a1, a2 & 1, a3, a4 & 1);
    if (v24 <= 0.0)
    {
      uint64_t v28 = v57;
      swift_retain();
      id v29 = a8;
      uint64_t v34 = a8;
    }
    else
    {
      double v26 = v24;
      double v27 = v25;
      uint64_t v28 = v57;
      swift_retain();
      id v29 = a8;
      uint64_t v30 = a8;
      if (v27 > 0.0)
      {
        swift_bridgeObjectRetain();
        NSString v31 = sub_1000E5A00();
        swift_bridgeObjectRelease();
        if (*(void *)(a5 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_cropCode + 8))
        {
          swift_bridgeObjectRetain();
          NSString v32 = sub_1000E5A00();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v32 = 0;
        }
        uint64_t v35 = (uint64_t)v56;
        id v36 = [self artworkURLFromTemplate:v31 forSize:v32 cropCode:0 format:v26];

        if (v36)
        {
          sub_1000E3DE0();

          uint64_t v37 = sub_1000E3E00();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v35, 0, 1, v37);
        }
        else
        {
          uint64_t v38 = sub_1000E3E00();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v35, 1, 1, v38);
        }
        uint64_t v28 = v57;
        uint64_t v39 = v59;
        sub_100014B08(v35, v59, &qword_100129F38);
        uint64_t v40 = a5 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_imageUrl;
        swift_beginAccess();
        sub_1000838FC(v39, v40, &qword_100129F38);
        swift_endAccess();
      }
    }
  }
  else
  {
    swift_retain();
    id v33 = a8;
    id v29 = a8;
    uint64_t v28 = a6;
  }
  uint64_t v41 = a5 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_imageUrl;
  swift_beginAccess();
  sub_100014754(v41, (uint64_t)v19, &qword_100129F38);
  uint64_t v42 = sub_1000E3E00();
  uint64_t v43 = *(void *)(v42 - 8);
  int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v19, 1, v42);
  sub_1000147B8((uint64_t)v19, &qword_100129F38);
  if (v44 != 1)
  {
    uint64_t v47 = v59;
    sub_100014754(v41, v59, &qword_100129F38);
    type metadata accessor for TVWidgetImageLoader();
    uint64_t v48 = swift_allocObject();
    unint64_t v61 = 0xD000000000000013;
    unint64_t v62 = 0x80000001000EBFE0;
    sub_1000E3F70();
    uint64_t v49 = v48 + OBJC_IVAR____TtC17TVWidgetExtension19TVWidgetImageLoader_url;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v48 + OBJC_IVAR____TtC17TVWidgetExtension19TVWidgetImageLoader_url, 1, 1, v42);
    swift_beginAccess();
    sub_1000838FC(v47, v49, &qword_100129F38);
    swift_endAccess();
    uint64_t v50 = swift_allocObject();
    swift_weakInit();
    uint64_t v51 = (void *)swift_allocObject();
    v51[2] = v50;
    v51[3] = sub_1000982B0;
    v51[4] = v60;
    swift_retain();
    swift_retain();
    sub_1000530E8((uint64_t)sub_100098334, (uint64_t)v51);
    swift_release();
    swift_release();
    swift_setDeallocating();
    uint64_t v52 = v48 + OBJC_IVAR____TtC17TVWidgetExtension19TVWidgetImageLoader__identifier;
    uint64_t v53 = sub_1000082B4(&qword_10012C410);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
    sub_1000147B8(v48 + OBJC_IVAR____TtC17TVWidgetExtension19TVWidgetImageLoader_url, &qword_100129F38);
    swift_deallocClassInstance();
    return swift_release();
  }
  id v45 = sub_1000054E4();
  if (v45)
  {
    id v46 = v45;
    sub_1000E5B90();
    sub_1000E3F40();

    sub_1000A70A8(v28, v58, v29);
    return swift_release();
  }

  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100098270()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000982B0()
{
  sub_1000A70A8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(NSObject **)(v0 + 32));
}

uint64_t sub_1000982BC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000982F4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100098334(char a1, uint64_t a2, unint64_t a3)
{
  return sub_1000970B0(a1, a2, a3, *(void *)(v3 + 16), *(uint64_t (**)(void))(v3 + 24));
}

id sub_100098340(void *a1, CGFloat a2, CGFloat a3)
{
  UIGraphicsBeginImageContextWithOptions(*(CGSize *)&a2, 0, 0.0);
  [a1 setFill];
  v11.origin.x = 0.0;
  v11.origin.y = 0.0;
  v11.size.width = a2;
  v11.size.height = a3;
  UIRectFill(v11);
  uint64_t v6 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  if (!v6) {
    goto LABEL_5;
  }
  uint64_t v7 = [(UIImage *)v6 CGImage];
  if (!v7)
  {

LABEL_5:
    return 0;
  }
  uint64_t v8 = v7;
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithCGImage:v7];

  return v9;
}

unint64_t sub_100098424()
{
  unint64_t result = qword_10012E2B0;
  if (!qword_10012E2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E2B0);
  }
  return result;
}

uint64_t sub_100098478()
{
  return sub_100014AC4(&qword_10012E2B8, &qword_10012E2C0);
}

uint64_t sub_1000984B4()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1000E3D90();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E3F10();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000E59F0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000E3DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1000E3C50();
  sub_100008434(v10, qword_100142298);
  sub_100008498(v10, (uint64_t)qword_100142298);
  sub_1000E5990();
  sub_1000E3F00();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1000E3C40();
}

uint64_t sub_1000987A0()
{
  uint64_t v0 = sub_1000E3DA0();
  sub_100008434(v0, qword_1001422B0);
  sub_100008498(v0, (uint64_t)qword_1001422B0);
  return sub_1000E3D80();
}

uint64_t sub_100098804()
{
  uint64_t v0 = sub_1000082B4(&qword_10012A5F0);
  sub_100008434(v0, qword_1001422C8);
  uint64_t v1 = sub_100008498(v0, (uint64_t)qword_1001422C8);
  sub_1000E3AA0();
  uint64_t v2 = sub_1000E3AB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1000988BC()
{
  uint64_t result = swift_getKeyPath();
  qword_1001422E0 = result;
  return result;
}

uint64_t sub_1000988E4()
{
  type metadata accessor for TVSettingsDownloadWifiQualityEntity();

  return swift_retain();
}

uint64_t sub_100098918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for TVSettingsDownloadWifiQualityEntity();
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  return _swift_task_switch(sub_1000989BC, 0, 0);
}

uint64_t sub_1000989BC()
{
  sub_1000E3A40();
  sub_1000E3A40();
  *(unsigned char *)(v0 + 113) = *(unsigned char *)(v0 + 112);
  if (qword_100129E10 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1001422E0;
  *(void *)(v0 + 56) = qword_1001422E0;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = sub_100014AC4(&qword_10012E510, &qword_10012E518);
  *(void *)(v0 + 72) = v3;
  void *v2 = v0;
  v2[1] = sub_100098B0C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 113, v1, &type metadata for VideosDownloadWiFiQuality, v3);
}

uint64_t sub_100098B0C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_10009BA2C(v2);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_10008D4F0;
  }
  else {
    uint64_t v3 = sub_100098C60;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100098C60()
{
  sub_1000E3A40();
  uint64_t v1 = qword_1001422E0;
  v0[11] = qword_1001422E0;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  void *v2 = v0;
  v2[1] = sub_100098D34;
  uint64_t v3 = v0[9];
  return AppEntity._value<A, B>(for:)((char *)v0 + 114, v1, v3);
}

uint64_t sub_100098D34()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  sub_10009BA2C(v2);
  swift_release();
  if (v0) {
    uint64_t v3 = sub_10008D55C;
  }
  else {
    uint64_t v3 = sub_100098E88;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100098E88()
{
  *(unsigned char *)(v0 + 115) = *(unsigned char *)(v0 + 114);
  sub_100061288();
  sub_1000E3A10();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100098F2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVSettingsDownloadWifiQualityEntity();
  __chkstk_darwin(v2 - 8);
  sub_10009BAD0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000E3A50();
  return sub_10009BA2C(a1);
}

uint64_t sub_100098FBC()
{
  if (qword_100129E10 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10009901C()
{
  unint64_t result = qword_10012E2C8;
  if (!qword_10012E2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E2C8);
  }
  return result;
}

unint64_t sub_100099074()
{
  unint64_t result = qword_10012E2D0;
  if (!qword_10012E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E2D0);
  }
  return result;
}

uint64_t sub_1000990C8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1000990FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009914C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129E00, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1001422B0, a1);
}

uint64_t sub_100099184@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129E08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000082B4(&qword_10012A5F0);
  uint64_t v3 = sub_100008498(v2, (uint64_t)qword_1001422C8);

  return sub_1000185F8(v3, a1);
}

uint64_t sub_100099200(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100015DF8;
  return sub_100098918(a1, v5, v4);
}

uint64_t sub_1000992AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009B594();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1000992D4()
{
  return 0xD000000000000034;
}

unint64_t sub_1000992F4()
{
  unint64_t result = qword_10012E2E0;
  if (!qword_10012E2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E2E0);
  }
  return result;
}

uint64_t sub_100099348()
{
  return sub_10009A80C((unint64_t *)&unk_10012E2E8);
}

uint64_t type metadata accessor for TVSettingsDownloadWifiQualityEntity()
{
  uint64_t result = qword_10012E3B8;
  if (!qword_10012E3B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000993C8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1000993E8, 0, 0);
}

uint64_t sub_1000993E8()
{
  **(unsigned char **)(v0 + 16) = sub_1000B1898() & 1;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100099474(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_100099498, 0, 0);
}

uint64_t sub_100099498()
{
  sub_1000B1248(*(unsigned char *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100099514@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000082B4(&qword_10012B4E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v38 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v4 - 8);
  uint64_t v37 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000E3D90();
  uint64_t v6 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000E3F10();
  __chkstk_darwin(v9 - 8);
  CGRect v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E59F0();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_1000E59D0();
  __chkstk_darwin(v13 - 8);
  uint64_t v33 = sub_1000E3DA0();
  uint64_t v14 = *(void *)(v33 - 8);
  uint64_t v15 = __chkstk_darwin(v33);
  uint64_t v35 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = type metadata accessor for TVSettingsDownloadWifiQualityEntity();
  uint64_t v39 = v17;
  sub_1000082B4(&qword_10012CD70);
  *a1 = sub_1000E5A20();
  a1[1] = v18;
  uint64_t v34 = a1;
  sub_1000E59C0();
  v40._uint64_t countAndFlagsBits = 0x64616F6C6E776F44;
  v40._object = (void *)0xEA00000000002073;
  sub_1000E59B0(v40);
  int v19 = WLKIsRegulatedSKU();
  BOOL v20 = v19 == 0;
  if (v19) {
    v21._uint64_t countAndFlagsBits = 1312902231;
  }
  else {
    v21._uint64_t countAndFlagsBits = 0x69462D6957;
  }
  if (v20) {
    uint64_t v22 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v22 = (void *)0xE400000000000000;
  }
  v32[3] = (char *)a1 + *(int *)(v17 + 20);
  v21._object = v22;
  sub_1000E59A0(v21);
  swift_bridgeObjectRelease();
  v41._uint64_t countAndFlagsBits = 0x7974696C61755120;
  v41._object = (void *)0xE800000000000000;
  sub_1000E59B0(v41);
  sub_1000E59E0();
  v32[1] = v11;
  sub_1000E3F00();
  uint64_t v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v24 = v6 + 104;
  double v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  void v32[2] = v24;
  double v26 = v8;
  double v27 = v8;
  uint64_t v28 = v36;
  v25(v27, enum case for LocalizedStringResource.BundleDescription.main(_:), v36);
  sub_1000E3DB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v37, 1, 1, v33);
  uint64_t v29 = sub_1000E3B00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v38, 1, 1, v29);
  sub_1000E3B40();
  uint64_t v30 = *(int *)(v17 + 24);
  sub_1000082B4(&qword_10012E2C0);
  sub_1000E5990();
  sub_1000E3F00();
  v25(v26, v23, v28);
  sub_1000E3DB0();
  sub_100014AC4(&qword_10012E510, &qword_10012E518);
  sub_100061230();
  uint64_t result = sub_1000E3C80();
  *(uint64_t *)((char *)v34 + v30) = result;
  return result;
}

uint64_t sub_100099ABC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100099ADC, 0, 0);
}

uint64_t sub_100099ADC()
{
  sub_100099514(*(uint64_t **)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_100099B44()
{
  unint64_t result = qword_10012E2F8;
  if (!qword_10012E2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E2F8);
  }
  return result;
}

uint64_t sub_100099B98(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10009A854();
  void *v4 = v2;
  v4[1] = sub_100016604;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100099C4C()
{
  unint64_t result = qword_10012E308;
  if (!qword_10012E308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E308);
  }
  return result;
}

unint64_t sub_100099CA4()
{
  unint64_t result = qword_10012E310;
  if (!qword_10012E310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E310);
  }
  return result;
}

uint64_t sub_100099CF8()
{
  return sub_10009A80C(qword_10012E318);
}

uint64_t sub_100099D2C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10009A854();
  void *v5 = v2;
  v5[1] = sub_1000168D4;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100099DE0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10009A854();
  void *v4 = v2;
  v4[1] = sub_100018660;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100099E94()
{
  unint64_t result = qword_10012E330;
  if (!qword_10012E330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E330);
  }
  return result;
}

uint64_t sub_100099EE8()
{
  return sub_10009A80C(&qword_10012E338);
}

unint64_t sub_100099F20()
{
  unint64_t result = qword_10012E340;
  if (!qword_10012E340)
  {
    sub_100008354(qword_10012E348);
    sub_10009A80C(&qword_10012E338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E340);
  }
  return result;
}

uint64_t sub_100099FB0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100099B44();
  void *v5 = v2;
  v5[1] = sub_100018664;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TVSettingsDownloadWifiQualityEntity.Query()
{
  return &type metadata for TVSettingsDownloadWifiQualityEntity.Query;
}

uint64_t sub_10009A074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009A088);
}

uint64_t sub_10009A088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000E3B50();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10009A138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009A14C);
}

uint64_t sub_10009A14C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000E3B50();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10009A1F4()
{
  uint64_t result = sub_1000E3B50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TVSettingsDownloadWifiQualityEntity.UpdateIntent_value()
{
  return &type metadata for TVSettingsDownloadWifiQualityEntity.UpdateIntent_value;
}

uint64_t sub_10009A2A8()
{
  return sub_100014AC4(&qword_10012E3F8, &qword_10012E400);
}

uint64_t sub_10009A2E8()
{
  sub_10009A80C(&qword_10012E488);
  uint64_t v2 = sub_1000E3BA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_100017844(v3, v0, v2, v1);
}

uint64_t sub_10009A398@<X0>(uint64_t a1@<X8>)
{
  return sub_1000171E8(&qword_100129DF8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100142298, a1);
}

uint64_t sub_10009A3D0(uint64_t a1)
{
  uint64_t v2 = sub_10009A80C(qword_10012E318);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10009A438(uint64_t a1)
{
  uint64_t v2 = sub_10009A80C((unint64_t *)&unk_10012E2E8);

  return _UniqueEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10009A4A0(uint64_t a1)
{
  uint64_t v2 = sub_10009A80C(&qword_10012E418);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10009A508()
{
  return sub_10009A80C((unint64_t *)&unk_10012E408);
}

uint64_t sub_10009A53C()
{
  return sub_10009A80C(&qword_10012E418);
}

uint64_t sub_10009A570()
{
  return sub_10009A80C(&qword_10012E420);
}

uint64_t sub_10009A5A4()
{
  return sub_10009A80C(&qword_10012E428);
}

uint64_t sub_10009A5D8()
{
  return sub_10009A80C(&qword_10012E430);
}

uint64_t sub_10009A60C(void *a1)
{
  a1[1] = sub_10009A80C(&qword_10012E480);
  a1[2] = sub_10009A80C(&qword_10012E488);
  uint64_t result = sub_10009A80C((unint64_t *)&unk_10012E2E8);
  a1[3] = result;
  return result;
}

unint64_t sub_10009A69C()
{
  unint64_t result = qword_10012E490;
  if (!qword_10012E490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E490);
  }
  return result;
}

uint64_t sub_10009A6F0(uint64_t a1)
{
  uint64_t result = sub_10009A80C(&qword_10012E4C8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10009A734()
{
  return sub_100014AC4(&qword_10012E4D0, &qword_10012E4D8);
}

uint64_t sub_10009A770()
{
  return sub_10009A80C(&qword_10012E4E0);
}

uint64_t sub_10009A7A4()
{
  return sub_10009A80C(&qword_10012E4E8);
}

uint64_t sub_10009A7D8()
{
  return sub_10009A80C(&qword_10012E4F0);
}

uint64_t sub_10009A80C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TVSettingsDownloadWifiQualityEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009A854()
{
  unint64_t result = qword_10012E4F8;
  if (!qword_10012E4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E4F8);
  }
  return result;
}

void sub_10009A8A8()
{
  sub_1000E5CC0(19);
  int v0 = WLKIsRegulatedSKU();
  BOOL v1 = v0 == 0;
  if (v0) {
    v2._uint64_t countAndFlagsBits = 1312902231;
  }
  else {
    v2._uint64_t countAndFlagsBits = 0x69462D6957;
  }
  if (v1) {
    uint64_t v3 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v3 = (void *)0xE400000000000000;
  }
  v2._object = v3;
  sub_1000E5A70(v2);
  swift_bridgeObjectRelease();
  v4._object = (void *)0x80000001000EC1F0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_1000E5A70(v4);
  qword_1001422E8 = 0;
  unk_1001422F0 = 0xE000000000000000;
}

void sub_10009A958()
{
  sub_1000E5CC0(35);
  swift_bridgeObjectRelease();
  int v0 = WLKIsRegulatedSKU();
  BOOL v1 = v0 == 0;
  if (v0) {
    v2._uint64_t countAndFlagsBits = 1312902231;
  }
  else {
    v2._uint64_t countAndFlagsBits = 0x69462D6957;
  }
  if (v1) {
    uint64_t v3 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v3 = (void *)0xE400000000000000;
  }
  v2._object = v3;
  sub_1000E5A70(v2);
  swift_bridgeObjectRelease();
  v4._object = (void *)0x80000001000EC1D0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000016;
  sub_1000E5A70(v4);
  qword_1001422F8 = 0x742065736F6F6843;
  unk_100142300 = 0xEB00000000206568;
}

uint64_t sub_10009AA28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v1 = sub_1000E56B0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000082B4(&qword_10012D820);
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  double v26 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000082B4(&qword_10012D828);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  double v25 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000082B4(&qword_10012D830);
  uint64_t v32 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v29 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000082B4(&qword_10012D838);
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v30 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v38, "com.apple.tv.");
  HIWORD(v38[1]) = -4864;
  uint64_t v43 = (uint64_t)&type metadata for TVSettingsDownloadWifiQualityWidget;
  sub_1000082B4(&qword_10012E590);
  v45._uint64_t countAndFlagsBits = sub_1000E5A20();
  sub_1000E5A70(v45);
  swift_bridgeObjectRelease();
  v24[1] = v38[0];
  if (qword_100129E18 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1000E56A0();
  sub_1000082B4(&qword_10012CEC8);
  sub_100061230();
  sub_10006157C();
  sub_10009A80C((unint64_t *)&unk_10012E2E8);
  sub_10007A258();
  uint64_t v7 = v26;
  sub_1000E56C0();
  v38[0] = &type metadata for TVSettingsDownloadWifiQualityWidget;
  v38[0] = sub_1000E5A20();
  v38[1] = v8;
  uint64_t v43 = 0x746567646957;
  unint64_t v44 = 0xE600000000000000;
  uint64_t v41 = 0x656C67676F54;
  unint64_t v42 = 0xE600000000000000;
  unint64_t v9 = sub_100014158();
  uint64_t v10 = sub_1000E5C70();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  v38[0] = v10;
  v38[1] = v12;
  uint64_t v13 = sub_100014AC4(&qword_10012D848, &qword_10012D820);
  uint64_t v14 = v25;
  uint64_t v15 = v28;
  sub_1000E4640();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v15);
  if (qword_100129E20 != -1) {
    swift_once();
  }
  uint64_t v43 = qword_1001422F8;
  unint64_t v44 = unk_100142300;
  v38[0] = v15;
  v38[1] = &type metadata for String;
  uint64_t v39 = v13;
  unint64_t v40 = v9;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = v29;
  uint64_t v18 = v33;
  sub_1000E4600();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v18);
  v38[0] = v18;
  v38[1] = &type metadata for String;
  uint64_t v39 = OpaqueTypeConformance2;
  unint64_t v40 = v9;
  uint64_t v19 = swift_getOpaqueTypeConformance2();
  BOOL v20 = v30;
  uint64_t v21 = v35;
  sub_1000E4650();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v21);
  v38[0] = v21;
  v38[1] = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v36;
  sub_1000E4610();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v20, v22);
}

uint64_t sub_10009B0D4@<X0>(uint64_t a1@<X8>)
{
  if (qword_100129E18 != -1) {
    swift_once();
  }
  sub_100014158();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000E4A00();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10009B178@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012D850);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E3DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v38 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = *a1;
  if (qword_100129CD8 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_100141FD0;
  if (*(void *)(qword_100141FD0 + 16))
  {
    uint64_t v41 = v11;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100035688(v17);
    if (v20)
    {
      uint64_t v21 = v19;
      uint64_t v40 = v7;
      uint64_t v22 = *(void *)(v18 + 56);
      uint64_t v23 = sub_1000E3B50();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v39 = v8;
      uint64_t v25 = v24;
      uint64_t v26 = v22 + *(void *)(v24 + 72) * v21;
      uint64_t v7 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v6, v26, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v6, 0, 1, v23);
      uint64_t v8 = v39;
    }
    else
    {
      uint64_t v23 = sub_1000E3B50();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
    }
    swift_bridgeObjectRelease();
    sub_1000E3B50();
    uint64_t v28 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v6, 1, v23) != 1)
    {
      sub_1000E3B10();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v23);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v14, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v16, v7);
      uint64_t v30 = sub_1000E49F0();
      uint64_t v31 = v34;
      uint64_t v35 = v8;
      uint64_t v33 = v36;
      uint64_t v32 = v37 & 1;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v7);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v27 = sub_1000E3B50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v6, 1, 1, v27);
  }
  uint64_t result = sub_10008C834((uint64_t)v6);
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
LABEL_11:
  *a2 = v30;
  a2[1] = v31;
  a2[2] = v32;
  a2[3] = v33;
  return result;
}

uint64_t sub_10009B594()
{
  uint64_t v34 = sub_1000E3B90();
  uint64_t v0 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v2 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000082B4(&qword_10012A5C8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v26 - v7;
  uint64_t v9 = sub_1000082B4(&qword_10012E520);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[1] = v11;
  uint64_t v12 = sub_1000082B4(&qword_10012A580);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v14;
  uint64_t v15 = sub_1000E3DA0();
  uint64_t v32 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v30 = sub_1000082B4(&qword_10012E528);
  sub_1000E3D80();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v31 = v16 + 56;
  uint64_t v33 = v17;
  v17(v14, 1, 1, v15);
  uint64_t v18 = type metadata accessor for TVSettingsDownloadWifiQualityEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  uint64_t v19 = sub_1000E3A00();
  char v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v8, 1, 1, v19);
  uint64_t v21 = v6;
  v20(v6, 1, 1, v19);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v22 = *(void (**)(void))(v0 + 104);
  v26[2] = v0 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v22;
  uint64_t v23 = v34;
  v22(v2);
  sub_10009A80C(qword_10012E318);
  uint64_t v24 = v29;
  uint64_t v30 = sub_1000E3A70();
  sub_1000082B4(&qword_10012E530);
  sub_1000E3D80();
  v33(v24, 1, 1, v32);
  char v35 = 2;
  v20(v8, 1, 1, v19);
  v20(v21, 1, 1, v19);
  v27(v2, v28, v23);
  sub_100061230();
  sub_1000E3A60();
  return v30;
}

uint64_t sub_10009BA2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVSettingsDownloadWifiQualityEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009BA88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for TVSettingsDownloadWifiQualityEntity() + 24));

  return swift_retain();
}

uint64_t sub_10009BAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVSettingsDownloadWifiQualityEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TVSettingsDownloadWifiQualityWidget()
{
  return &type metadata for TVSettingsDownloadWifiQualityWidget;
}

uint64_t sub_10009BB44()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10009BB60(uint64_t a1)
{
  unint64_t result = sub_10009BB88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10009BB88()
{
  unint64_t result = qword_10012E588;
  if (!qword_10012E588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E588);
  }
  return result;
}

uint64_t sub_10009BBDC()
{
  sub_1000E50F0();
  sub_1000A1B84();
  id v0 = objc_allocWithZone((Class)sub_1000E5580());
  uint64_t result = sub_1000E5570();
  qword_10012E598 = result;
  return result;
}

uint64_t sub_10009BC38()
{
  uint64_t v0 = sub_1000E5550();
  __chkstk_darwin(v0 - 8);
  sub_1000E50F0();
  sub_1000A1B84();
  id v1 = objc_allocWithZone((Class)sub_1000E5580());
  uint64_t v2 = sub_1000E5570();
  sub_1000E5540();
  uint64_t result = sub_1000E5560();
  qword_10012E5A0 = v2;
  return result;
}

id sub_10009BCEC()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v0 setDateStyle:0];
  id result = [v0 setTimeStyle:1];
  qword_10012E5A8 = (uint64_t)v0;
  return result;
}

id sub_10009BD50(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v66 = a3;
  int v65 = a2;
  uint64_t v4 = sub_1000E5590();
  uint64_t v68 = *(void *)(v4 - 8);
  uint64_t v69 = v4;
  __chkstk_darwin(v4);
  unint64_t v67 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000082B4(&qword_10012E5B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000E5530();
  uint64_t v70 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E5460();
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v73 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v71 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t v17 = sub_1000E52C0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v75 = v17;
  uint64_t v76 = v18;
  __chkstk_darwin(v17);
  uint64_t v74 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000082B4(&qword_10012E5B0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000E5160();
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unsigned int v28 = (char *)&v63 - v27;
  uint64_t v29 = a1;
  uint64_t v31 = v30;
  sub_100014754(v29, (uint64_t)v22, &qword_10012E5B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v22, 1, v23) == 1)
  {
    uint64_t v32 = &qword_10012E5B0;
    uint64_t v33 = (uint64_t)v22;
LABEL_3:
    sub_1000147B8(v33, v32);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v22, v23);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v26, v28, v23);
  if ((*(unsigned int (**)(char *, uint64_t))(v31 + 88))(v26, v23) != enum case for SportsActivityClock.soccer(_:))
  {
    uint64_t v40 = *(void (**)(char *, uint64_t))(v31 + 8);
    v40(v28, v23);
    v40(v26, v23);
    return 0;
  }
  uint64_t v63 = v16;
  uint64_t v64 = v28;
  (*(void (**)(char *, uint64_t))(v31 + 96))(v26, v23);
  uint64_t v34 = v75;
  uint64_t v35 = v76;
  uint64_t v36 = v74;
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v74, v26, v75);
  uint64_t v37 = v31;
  sub_1000E52A0();
  sub_1000E5520();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v11, v9);
  uint64_t v38 = v72;
  uint64_t v39 = v73;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v8, 1, v73) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v64, v23);
    uint64_t v32 = &qword_10012E5B8;
    uint64_t v33 = (uint64_t)v8;
    goto LABEL_3;
  }
  uint64_t v43 = v63;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v63, v8, v39);
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v71, enum case for SportingEventClockPeriodType.shootouts(_:), v39);
  sub_1000A1AD8(&qword_10012E5C0, (void (*)(uint64_t))&type metadata accessor for SportingEventClockPeriodType);
  sub_1000E5AA0();
  sub_1000E5AA0();
  if (v79 == v77 && v80 == v78) {
    char v44 = 1;
  }
  else {
    char v44 = sub_1000E5DC0();
  }
  uint64_t v45 = v76;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v46 = *(void (**)(char *, uint64_t))(v38 + 8);
  v46(v71, v39);
  if ((v44 & 1) == 0)
  {
    v46(v43, v39);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v64, v23);
    return 0;
  }
  uint64_t v47 = sub_1000E5180();
  uint64_t v49 = (uint64_t)v67;
  uint64_t v48 = v68;
  uint64_t v50 = v69;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v67, enum case for SportingEventCompetitorScoreStatisticType.StatisticName.shootout(_:), v69);
  if (*(void *)(v47 + 16) && (unint64_t v51 = sub_10003572C(v49), (v52 & 1) != 0)) {
    uint64_t v53 = *(void *)(*(void *)(v47 + 56) + 8 * v51);
  }
  else {
    uint64_t v53 = 0;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v50);
  id result = [self sharedInstance];
  if (result)
  {
    Swift::String v54 = result;
    int v55 = v65;
    NSString v56 = sub_1000E5A00();
    id v57 = [v54 localizedStringForKey:v56];

    if (v57)
    {
      uint64_t v58 = sub_1000E5A10();
      uint64_t v60 = v59;

      if (v55 == 2)
      {
LABEL_23:
        uint64_t v79 = v58;
        uint64_t v80 = v60;
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v60 = (void *)0xE100000000000000;
      uint64_t v58 = 80;
      if (v55 == 2) {
        goto LABEL_23;
      }
    }
    if ((v55 & 1) == 0)
    {
      uint64_t v77 = v53;
      uint64_t v79 = sub_1000E5DB0();
      uint64_t v80 = v61;
      v81._uint64_t countAndFlagsBits = 32;
      v81._object = (void *)0xE100000000000000;
      sub_1000E5A70(v81);
      v62._uint64_t countAndFlagsBits = v58;
      v62._object = v60;
LABEL_29:
      sub_1000E5A70(v62);
      swift_bridgeObjectRelease();
      uint64_t v41 = v79;
      v46(v63, v39);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v74, v75);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v64, v23);
      return (id)v41;
    }
    uint64_t v79 = v58;
    uint64_t v80 = v60;
    v82._uint64_t countAndFlagsBits = 32;
    v82._object = (void *)0xE100000000000000;
    sub_1000E5A70(v82);
LABEL_28:
    uint64_t v77 = v53;
    v62._uint64_t countAndFlagsBits = sub_1000E5DB0();
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009C614@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v105 = a3;
  uint64_t v106 = a2;
  uint64_t v107 = sub_1000082B4(&qword_10012E5D0);
  uint64_t v4 = __chkstk_darwin(v107);
  uint64_t v101 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v98 = (char *)&v80 - v6;
  uint64_t v99 = sub_1000082B4(&qword_100129F28);
  __chkstk_darwin(v99);
  uint64_t v100 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000E3EE0();
  uint64_t v97 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v80 - v12;
  uint64_t v14 = sub_1000082B4(&qword_10012E5D8);
  __chkstk_darwin(v14 - 8);
  Swift::String v81 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000E52C0();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  Swift::String v82 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000E5400();
  uint64_t v87 = *(void *)(v88 - 8);
  uint64_t v17 = __chkstk_darwin(v88);
  uint64_t v85 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v86 = (char *)&v80 - v19;
  uint64_t v104 = type metadata accessor for SportsWidgetClock(0);
  __chkstk_darwin(v104);
  uint64_t v102 = (uint64_t *)((char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v93 = sub_1000E5530();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v90 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000E5500();
  uint64_t v95 = *(void *)(v22 - 8);
  uint64_t v96 = v22;
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v91 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v94 = (char *)&v80 - v25;
  uint64_t v26 = sub_1000E53A0();
  uint64_t v89 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  unsigned int v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000082B4(&qword_10012E5B0);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v32 = (char *)&v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v80 - v33;
  uint64_t v35 = a1;
  sub_100014754(a1, (uint64_t)&v80 - v33, &qword_10012E5B0);
  uint64_t v36 = sub_1000E5160();
  uint64_t v37 = *(void *)(v36 - 8);
  int v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36);
  uint64_t v103 = v34;
  if (v38 != 1)
  {
    uint64_t v80 = v35;
    sub_100014754((uint64_t)v34, (uint64_t)v32, &qword_10012E5B0);
    int v56 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v32, v36);
    if (v56 == enum case for SportsActivityClock.generic(_:))
    {
      (*(void (**)(char *, uint64_t))(v37 + 96))(v32, v36);
      uint64_t v57 = v89;
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v28, v32, v26);
      uint64_t v58 = v90;
      sub_1000E5390();
      uint64_t v59 = v94;
      uint64_t v60 = v106;
      sub_1000E5510();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v93);
      uint64_t v62 = v95;
      uint64_t v61 = v96;
      uint64_t v63 = (uint64_t)v91;
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v91, v59, v96);
      int v55 = v102;
      sub_10009D25C(v63, v102);

      sub_1000147B8(v80, &qword_10012E5B0);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v26);
      goto LABEL_10;
    }
    if (v56 == enum case for SportsActivityClock.baseball(_:))
    {
      (*(void (**)(char *, uint64_t))(v37 + 96))(v32, v36);
      uint64_t v64 = v87;
      int v65 = v86;
      uint64_t v66 = v88;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v32, v88);
      uint64_t v67 = (uint64_t)v85;
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v85, v65, v66);
      sub_1000A061C(v67, (uint64_t)v108);

      sub_1000147B8(v80, &qword_10012E5B0);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
      long long v68 = v108[1];
      int v55 = v102;
      *(_OWORD *)uint64_t v102 = v108[0];
      *((_OWORD *)v55 + 1) = v68;
      *((_OWORD *)v55 + 2) = v108[2];
      *((unsigned char *)v55 + 48) = v109;
      goto LABEL_10;
    }
    if (v56 == enum case for SportsActivityClock.soccer(_:))
    {
      (*(void (**)(char *, uint64_t))(v37 + 96))(v32, v36);
      uint64_t v69 = v83;
      uint64_t v70 = v82;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v32, v84);
      uint64_t v71 = v90;
      sub_1000E52A0();
      uint64_t v72 = v94;
      uint64_t v73 = v106;
      sub_1000E5510();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v71, v93);
      uint64_t v75 = v95;
      uint64_t v74 = v96;
      uint64_t v76 = (uint64_t)v91;
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v91, v72, v96);
      uint64_t v77 = (uint64_t)v81;
      sub_1000E52B0();
      int v55 = v102;
      sub_10009DAB8(v76, v77, v102);

      sub_1000147B8(v80, &qword_10012E5B0);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v84);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v36);
    uint64_t v35 = v80;
  }
  sub_1000E3ED0();
  sub_1000E3ED0();
  sub_1000A1AD8((unint64_t *)&qword_10012AB38, (void (*)(uint64_t))&type metadata accessor for Date);
  char v39 = sub_1000E5950();

  uint64_t result = sub_1000147B8(v35, &qword_10012E5B0);
  if (v39)
  {
    uint64_t v41 = v13;
    uint64_t v42 = v107;
    uint64_t v43 = v97;
    char v44 = v98;
    uint64_t v45 = &v98[*(int *)(v107 + 48)];
    id v46 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
    v46(v98, v41, v8);
    uint64_t v106 = v45;
    v46(v45, v11, v8);
    uint64_t v47 = v101;
    uint64_t v48 = &v101[*(int *)(v42 + 48)];
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    v49(v101, v44, v8);
    v49(v48, v45, v8);
    uint64_t v50 = (uint64_t)v100;
    v46(v100, v47, v8);
    unint64_t v51 = *(void (**)(char *, uint64_t))(v43 + 8);
    v51(v48, v8);
    char v52 = v51;
    uint64_t v53 = &v47[*(int *)(v107 + 48)];
    v46(v47, v44, v8);
    v46(v53, v106, v8);
    v46((char *)(v50 + *(int *)(v99 + 36)), v53, v8);
    v52(v47, v8);
    Swift::String v54 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
    int v55 = v102;
    sub_100014B08(v50, (uint64_t)v102 + v54[8], &qword_100129F28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))((char *)v55 + v54[9], 1, 1, v8);
    *int v55 = 0;
    v55[1] = 0xE000000000000000;
    v55[3] = 0;
    v55[4] = 0;
    v55[2] = 0;
    *(_OWORD *)(v55 + 5) = xmmword_1000F71D0;
    v55[7] = 0xE000000000000000;
    *((unsigned char *)v55 + v54[10]) = 0;
    *((unsigned char *)v55 + v54[11]) = 0;
LABEL_10:
    uint64_t v78 = v105;
    uint64_t v79 = (uint64_t)v103;
    swift_storeEnumTagMultiPayload();
    sub_1000A1B20((uint64_t)v55, v78);
    return sub_1000147B8(v79, &qword_10012E5B0);
  }
  __break(1u);
  return result;
}

uint64_t sub_10009D25C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v77 = sub_1000082B4(&qword_10012E5D0);
  uint64_t v4 = __chkstk_darwin(v77);
  uint64_t v67 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v69 = (char *)&v66 - v6;
  uint64_t v7 = sub_1000E3EE0();
  uint64_t v76 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v71 = (int *)((char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v70 = (char *)&v66 - v10;
  uint64_t v11 = sub_1000082B4(&qword_10012E5E0);
  __chkstk_darwin(v11 - 8);
  uint64_t v79 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000082B4(&qword_100129F28);
  uint64_t v13 = *(void *)(v78 - 8);
  uint64_t v14 = __chkstk_darwin(v78);
  long long v68 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v72 = (uint64_t)&v66 - v16;
  uint64_t v17 = sub_1000082B4(&qword_10012E5E8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v74 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v73 = (char *)&v66 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v66 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v66 - v25;
  uint64_t v27 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a2 = sub_1000E54D0();
  a2[1] = v30;
  a2[2] = sub_1000E54C0();
  a2[3] = v31;
  a2[4] = sub_1000E54E0();
  a2[5] = v32;
  a2[6] = sub_1000E54F0();
  a2[7] = v33;
  Swift::String v82 = a2;
  uint64_t v83 = a1;
  sub_1000E54B0();
  uint64_t v34 = sub_1000E54A0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v80 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  uint64_t v81 = v35 + 48;
  int v36 = v80(v26, 1, v34);
  uint64_t v75 = v35;
  if (v36 == 1)
  {
    sub_1000147B8((uint64_t)v26, &qword_10012E5E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v29, 1, 1, v7);
  }
  else
  {
    sub_1000E5480();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v34);
  }
  uint64_t v37 = v7;
  int v38 = (int *)type metadata accessor for SportsWidgetGenericClockViewModel(0);
  sub_100014B08((uint64_t)v29, (uint64_t)v82 + v38[9], &qword_100129F30);
  sub_1000E54B0();
  if (v80(v24, 1, v34) == 1)
  {
    sub_1000147B8((uint64_t)v24, &qword_10012E5E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v79, 1, 1, v78);
  }
  else
  {
    uint64_t v39 = v79;
    sub_1000E5470();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v24, v34);
    uint64_t v40 = v78;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v39, 0, 1, v78);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v39, 1, v40) != 1)
    {
      uint64_t v58 = v72;
      sub_100014B08(v79, v72, &qword_100129F28);
      goto LABEL_10;
    }
  }
  uint64_t v41 = v70;
  sub_1000E3ED0();
  uint64_t v42 = v71;
  sub_1000E3E90();
  sub_1000A1AD8((unint64_t *)&qword_10012AB38, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = sub_1000E5950();
  if ((result & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v44 = v76;
  uint64_t v45 = v77;
  id v46 = v69;
  uint64_t v47 = &v69[*(int *)(v77 + 48)];
  uint64_t v66 = v34;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  v48(v69, v41, v37);
  v48(v47, (char *)v42, v37);
  uint64_t v49 = *(int *)(v45 + 48);
  uint64_t v71 = v38;
  uint64_t v50 = v67;
  unint64_t v51 = &v67[v49];
  uint64_t v52 = v37;
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v53(v67, v46, v37);
  v53(v51, v47, v37);
  uint64_t v54 = (uint64_t)v68;
  v48(v68, v50, v52);
  int v55 = *(void (**)(char *, uint64_t))(v44 + 8);
  v55(v51, v52);
  int v56 = &v50[*(int *)(v77 + 48)];
  v48(v50, v46, v52);
  v48(v56, v47, v52);
  v48((char *)(v54 + *(int *)(v78 + 36)), v56, v52);
  uint64_t v34 = v66;
  uint64_t v57 = v50;
  int v38 = v71;
  v55(v57, v52);
  uint64_t v58 = v72;
  sub_100014B08(v54, v72, &qword_100129F28);
  sub_1000147B8(v79, &qword_10012E5E0);
LABEL_10:
  sub_100014B08(v58, (uint64_t)v82 + v38[8], &qword_100129F28);
  uint64_t v59 = (uint64_t)v73;
  sub_1000E54B0();
  if (v80((char *)v59, 1, v34) == 1)
  {
    sub_1000147B8(v59, &qword_10012E5E8);
    char v60 = 1;
  }
  else
  {
    char v60 = sub_1000E5490();
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v59, v34);
  }
  char v61 = v60 & 1;
  uint64_t v62 = v82;
  uint64_t v63 = v83;
  *((unsigned char *)v82 + v38[10]) = v61;
  uint64_t v64 = (uint64_t)v74;
  sub_1000E54B0();
  uint64_t v65 = sub_1000E5500();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v63, v65);
  LOBYTE(v63) = v80((char *)v64, 1, v34) != 1;
  uint64_t result = sub_1000147B8(v64, &qword_10012E5E8);
  *((unsigned char *)v62 + v38[11]) = v63;
  return result;
}

uint64_t sub_10009DAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v63 = a3;
  uint64_t v4 = sub_1000E5430();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v80 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v84 = (char *)v57 - v7;
  uint64_t v66 = sub_1000E5450();
  uint64_t v74 = *(void *)(v66 - 8);
  uint64_t v8 = __chkstk_darwin(v66);
  uint64_t v65 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v77 = (char *)v57 - v10;
  uint64_t v11 = sub_1000082B4(&qword_10012E5D8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000E5420();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000E5500();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a1, v18);
  uint64_t v23 = v63;
  uint64_t v24 = (uint64_t)v21;
  uint64_t v25 = v64;
  sub_10009D25C(v24, v63);
  sub_100014754(v25, (uint64_t)v13, &qword_10012E5D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000147B8(v25, &qword_10012E5D8);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
    sub_1000147B8((uint64_t)v13, &qword_10012E5D8);
    uint64_t v26 = 0;
    goto LABEL_29;
  }
  uint64_t v62 = v22;
  uint64_t v60 = v19;
  uint64_t v61 = v15;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  uint64_t v27 = sub_1000E5410();
  int64_t v28 = *(void *)(v27 + 16);
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v29 = v18;
  if (v28)
  {
    uint64_t v58 = v17;
    uint64_t v59 = v14;
    uint64_t v87 = _swiftEmptyArrayStorage;
    int64_t v72 = v28;
    sub_10006B2D8(0, v28, 0);
    uint64_t v30 = 0;
    uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
    unint64_t v31 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    v57[1] = v27;
    unint64_t v70 = v27 + v31;
    uint64_t v69 = *(void *)(v74 + 72);
    Swift::String v82 = (uint64_t (**)(char *, uint64_t))(v67 + 88);
    uint64_t v83 = v67 + 16;
    int v81 = enum case for CompetitorShootoutsViewModel.ShootoutState.empty(_:);
    int v79 = enum case for CompetitorShootoutsViewModel.ShootoutState.miss(_:);
    int v78 = enum case for CompetitorShootoutsViewModel.ShootoutState.goal(_:);
    uint64_t v32 = (void (**)(char *, uint64_t))(v67 + 8);
    v74 += 16;
    long long v68 = (void (**)(char *, uint64_t))(v74 - 8);
    uint64_t v33 = v66;
    uint64_t v34 = v65;
    uint64_t v73 = v29;
    while (1)
    {
      uint64_t v76 = v30;
      uint64_t v35 = v77;
      int v36 = v71;
      v71(v77, (char *)(v70 + v69 * v30), v33);
      v36(v34, v35, v33);
      uint64_t v37 = sub_1000E5440();
      int64_t v38 = *(void *)(v37 + 16);
      if (v38) {
        break;
      }
      id v46 = _swiftEmptyArrayStorage;
LABEL_21:
      uint64_t v49 = *v68;
      (*v68)(v34, v33);
      swift_bridgeObjectRelease();
      v49(v77, v33);
      uint64_t v26 = v87;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10006B2D8(0, v26[2] + 1, 1);
        uint64_t v26 = v87;
      }
      uint64_t v50 = v76;
      unint64_t v52 = v26[2];
      unint64_t v51 = v26[3];
      if (v52 >= v51 >> 1)
      {
        sub_10006B2D8((char *)(v51 > 1), v52 + 1, 1);
        uint64_t v50 = v76;
        uint64_t v26 = v87;
      }
      uint64_t v30 = v50 + 1;
      v26[2] = v52 + 1;
      v26[v52 + 4] = v46;
      uint64_t v29 = v73;
      if (v30 == v72)
      {
        uint64_t v23 = v63;
        uint64_t v53 = v62;
        uint64_t v54 = v64;
        uint64_t v14 = v59;
        uint64_t v55 = v61;
        uint64_t v17 = v58;
        goto LABEL_28;
      }
    }
    uint64_t v86 = _swiftEmptyArrayStorage;
    sub_10006B2F8(0, v38, 0);
    uint64_t v39 = *(unsigned __int8 *)(v67 + 80);
    uint64_t v75 = v37;
    uint64_t v40 = v37 + ((v39 + 32) & ~v39);
    uint64_t v85 = *(void *)(v67 + 72);
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v42 = v80;
    while (1)
    {
      uint64_t v43 = v84;
      v41(v84, v40, v4);
      v41(v42, (uint64_t)v43, v4);
      int v44 = (*v82)(v42, v4);
      if (v44 != v81)
      {
        if (v44 == v79)
        {
          char v45 = 1;
          goto LABEL_13;
        }
        if (v44 == v78)
        {
          char v45 = 2;
          goto LABEL_13;
        }
        (*v32)(v42, v4);
      }
      char v45 = 0;
LABEL_13:
      (*v32)(v43, v4);
      id v46 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10006B2F8(0, v46[2] + 1, 1);
        uint64_t v42 = v80;
        id v46 = v86;
      }
      unint64_t v48 = v46[2];
      unint64_t v47 = v46[3];
      if (v48 >= v47 >> 1)
      {
        sub_10006B2F8((char *)(v47 > 1), v48 + 1, 1);
        uint64_t v42 = v80;
        id v46 = v86;
      }
      v46[2] = v48 + 1;
      *((unsigned char *)v46 + v48 + 32) = v45;
      v40 += v85;
      if (!--v38)
      {
        uint64_t v33 = v66;
        uint64_t v34 = v65;
        goto LABEL_21;
      }
    }
  }
  uint64_t v55 = v61;
  uint64_t v53 = v62;
  uint64_t v54 = v64;
LABEL_28:
  sub_1000147B8(v54, &qword_10012E5D8);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v53, v29);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v14);
LABEL_29:
  uint64_t result = type metadata accessor for SportsWidgetSoccerClockViewModel(0);
  *(uint64_t *)((char *)v23 + *(int *)(result + 20)) = (uint64_t)v26;
  return result;
}

uint64_t sub_10009E2C0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v81 = a3;
  uint64_t v7 = sub_1000E5380();
  uint64_t v80 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v78 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000E5290();
  uint64_t v79 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v77 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000082B4(&qword_10012E5C8);
  __chkstk_darwin(v10 - 8);
  uint64_t v74 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E5150();
  uint64_t v75 = *(void *)(v12 - 8);
  uint64_t v76 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v69 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v68 = (char *)&v68 - v15;
  uint64_t v16 = sub_1000082B4(&qword_10012E5B0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000E5250();
  uint64_t v83 = *(void *)(v19 - 8);
  uint64_t v84 = v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000E51A0();
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000E55B0();
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E51C0();
  uint64_t v85 = a1;
  sub_1000E5300();
  uint64_t v28 = sub_1000E51B0();
  if (*(void *)(v28 + 16))
  {
    uint64_t v72 = v7;
    uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v83 + 16);
    unint64_t v70 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    uint64_t v71 = v29;
    v29(v21, v28 + v70, v84);
    swift_bridgeObjectRelease();
    sub_1000E5370();
    sub_10009FFF8((uint64_t)v27, (uint64_t)v24, (uint64_t)v21, 0, 0, (uint64_t)v18, 0, (uint64_t)v86);
    long long v30 = v86[5];
    *(_OWORD *)(a4 + 64) = v86[4];
    *(_OWORD *)(a4 + 80) = v30;
    *(_OWORD *)(a4 + 96) = v86[6];
    *(unsigned char *)(a4 + 112) = v87;
    long long v31 = v86[1];
    *(_OWORD *)a4 = v86[0];
    *(_OWORD *)(a4 + 16) = v31;
    long long v32 = v86[3];
    *(_OWORD *)(a4 + 32) = v86[2];
    *(_OWORD *)(a4 + 48) = v32;
    sub_1000E51C0();
    sub_1000E5310();
    uint64_t v73 = a2;
    uint64_t v33 = sub_1000E51B0();
    if (*(void *)(v33 + 16) >= 2uLL)
    {
      v71(v21, v33 + v70 + *(void *)(v83 + 72), v84);
      swift_bridgeObjectRelease();
      uint64_t v34 = v85;
      sub_1000E5370();
      sub_10009FFF8((uint64_t)v27, (uint64_t)v24, (uint64_t)v21, 1, 0, (uint64_t)v18, 0, (uint64_t)v88);
      long long v35 = v88[3];
      *(_OWORD *)(a4 + 184) = v88[4];
      long long v36 = v88[6];
      *(_OWORD *)(a4 + 200) = v88[5];
      *(_OWORD *)(a4 + 216) = v36;
      *(_OWORD *)(a4 + 120) = v88[0];
      long long v37 = v88[2];
      *(_OWORD *)(a4 + 136) = v88[1];
      *(_OWORD *)(a4 + 152) = v37;
      *(unsigned char *)(a4 + 232) = v89;
      *(_OWORD *)(a4 + 168) = v35;
      sub_1000E5370();
      uint64_t v27 = v34;
      if (qword_100129E28 == -1) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  int64_t v38 = (void *)qword_10012E598;
  uint64_t v39 = (int *)type metadata accessor for SportsWidgetContentViewModel(0);
  sub_10009C614((uint64_t)v18, (char *)v38, a4 + v39[6]);
  uint64_t v40 = (uint64_t)v74;
  sub_1000E5360();
  uint64_t v42 = v75;
  uint64_t v41 = v76;
  int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v40, 1, v76);
  uint64_t v44 = v73;
  if (v43 == 1)
  {
    sub_1000147B8(v40, &qword_10012E5C8);
    uint64_t v45 = sub_1000E4C30();
    uint64_t v46 = sub_1000E4C30();
    uint64_t v47 = a4 + v39[8];
    *(void *)uint64_t v47 = 0;
    *(void *)(v47 + 8) = 0xE000000000000000;
    *(unsigned char *)(v47 + 16) = 0;
    *(void *)(v47 + 24) = v45;
    *(unsigned char *)(v47 + 32) = 0;
    *(void *)(v47 + 40) = v46;
    *(unsigned char *)(v47 + 48) = 0;
  }
  else
  {
    unint64_t v48 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v68, v40, v41);
    uint64_t v49 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v69, v48, v41);
    uint64_t v50 = sub_1000E51B0();
    sub_1000A03A0(v49, v50, (uint64_t)v90);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v48, v41);
    uint64_t v51 = a4 + v39[8];
    long long v52 = v90[1];
    *(_OWORD *)uint64_t v51 = v90[0];
    *(_OWORD *)(v51 + 16) = v52;
    *(_OWORD *)(v51 + 32) = v90[2];
    *(unsigned char *)(v51 + 48) = v91;
  }
  uint64_t v53 = v79;
  uint64_t v54 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v77, v44, v82);
  uint64_t v55 = v80;
  uint64_t v56 = (uint64_t)v78;
  uint64_t v57 = v72;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v78, v27, v72);
  id v58 = sub_1000A0864(v54, v56);
  uint64_t v59 = (void *)(a4 + v39[7]);
  *uint64_t v59 = v58;
  v59[1] = v60;
  v59[2] = v61;
  v59[3] = v62;
  *(unsigned char *)(a4 + v39[9]) = sub_1000E5320() & 1;
  *(unsigned char *)(a4 + v39[10]) = sub_1000E5340() & 1;
  *(unsigned char *)(a4 + v39[11]) = sub_1000E5330() & 1;
  *(unsigned char *)(a4 + v39[12]) = sub_1000E52D0() & 1;
  sub_1000E51D0();
  sub_1000E3DF0();
  swift_bridgeObjectRelease();
  sub_1000E50E0();
  uint64_t v63 = sub_1000E50D0();
  uint64_t v65 = v64;
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v44, v82);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v27, v57);
  uint64_t v67 = (uint64_t *)(a4 + v39[15]);
  *uint64_t v67 = v63;
  v67[1] = v65;
  *(unsigned char *)(a4 + v39[14]) = v81 & 1;
  return result;
}

uint64_t sub_10009EAA4@<X0>(void (*a1)(void, void, void)@<X0>, void (*a2)(char *, void, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1000E5380();
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  __chkstk_darwin(v10);
  uint64_t v88 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E5290();
  uint64_t v89 = *(void *)(v12 - 8);
  uint64_t v90 = v12;
  __chkstk_darwin(v12);
  char v87 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000082B4(&qword_10012E5C8);
  __chkstk_darwin(v14 - 8);
  uint64_t v83 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000E5150();
  uint64_t v84 = *(void *)(v16 - 8);
  uint64_t v85 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v74 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v73 = (char *)&v73 - v19;
  uint64_t v20 = sub_1000082B4(&qword_10012E5B0);
  __chkstk_darwin(v20 - 8);
  uint64_t v99 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000E5250();
  uint64_t v96 = *(void *)(v22 - 8);
  uint64_t v97 = v22;
  __chkstk_darwin(v22);
  uint64_t v98 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000E51A0();
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000E55B0();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  long long v30 = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v28;
  uint64_t v93 = *(void (**)(char *, void, uint64_t))(v28 + 16);
  v93(v30, a1, v27);
  uint64_t v95 = v26;
  sub_1000E5300();
  uint64_t v100 = a3;
  uint64_t v31 = sub_1000E51B0();
  if (*(void *)(v31 + 16))
  {
    int v82 = a4;
    uint64_t v94 = a1;
    a1 = (void (*)(void, void, void))(v96 + 16);
    long long v32 = *(void (**)(char *, unint64_t, uint64_t))(v96 + 16);
    unint64_t v78 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
    a4 = (uint64_t)v98;
    uint64_t v80 = v32;
    v32(v98, v31 + v78, v97);
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_1000E5160();
    uint64_t v34 = *(void *)(v33 - 8);
    long long v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
    uint64_t v36 = (uint64_t)v99;
    uint64_t v79 = v33;
    uint64_t v76 = v34 + 56;
    uint64_t v77 = v35;
    ((void (*)(char *, uint64_t, uint64_t))v35)(v99, 1, 1);
    sub_10009FFF8((uint64_t)v30, (uint64_t)v95, a4, 0, 0, v36, 0, (uint64_t)v101);
    long long v37 = v101[5];
    *(_OWORD *)(a5 + 64) = v101[4];
    *(_OWORD *)(a5 + 80) = v37;
    *(_OWORD *)(a5 + 96) = v101[6];
    *(unsigned char *)(a5 + 112) = v102;
    long long v38 = v101[1];
    *(_OWORD *)a5 = v101[0];
    *(_OWORD *)(a5 + 16) = v38;
    long long v39 = v101[3];
    *(_OWORD *)(a5 + 32) = v101[2];
    *(_OWORD *)(a5 + 48) = v39;
    int v81 = v30;
    v93(v30, v94, v27);
    uint64_t v93 = a2;
    sub_1000E5310();
    uint64_t v40 = sub_1000E51B0();
    if (*(void *)(v40 + 16) >= 2uLL)
    {
      uint64_t v75 = v27;
      uint64_t v41 = (uint64_t)v98;
      v80(v98, v40 + v78 + *(void *)(v96 + 72), v97);
      swift_bridgeObjectRelease();
      uint64_t v42 = (uint64_t)v99;
      v77(v99, 1, 1, v79);
      sub_10009FFF8((uint64_t)v81, (uint64_t)v95, v41, 0, 0, v42, 0, (uint64_t)v103);
      long long v43 = v103[3];
      *(_OWORD *)(a5 + 184) = v103[4];
      long long v44 = v103[6];
      *(_OWORD *)(a5 + 200) = v103[5];
      *(_OWORD *)(a5 + 216) = v44;
      *(_OWORD *)(a5 + 120) = v103[0];
      long long v45 = v103[2];
      *(_OWORD *)(a5 + 136) = v103[1];
      *(_OWORD *)(a5 + 152) = v45;
      *(unsigned char *)(a5 + 232) = v104;
      *(_OWORD *)(a5 + 168) = v43;
      a1 = (void (*)(void, void, void))v93;
      sub_1000E5370();
      a4 = v42;
      if (qword_100129E28 == -1) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  uint64_t v46 = (void *)qword_10012E598;
  uint64_t v47 = (int *)type metadata accessor for SportsWidgetDynamicIslandExpandedViewModel(0);
  sub_10009C614(a4, (char *)v46, a5 + v47[6]);
  uint64_t v48 = (uint64_t)v83;
  sub_1000E5360();
  uint64_t v50 = v84;
  uint64_t v49 = v85;
  int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v48, 1, v85);
  uint64_t v52 = v100;
  if (v51 == 1)
  {
    sub_1000147B8(v48, &qword_10012E5C8);
    uint64_t v53 = sub_1000E4C30();
    uint64_t v54 = sub_1000E4C30();
    uint64_t v55 = a5 + v47[7];
    *(void *)uint64_t v55 = 0;
    *(void *)(v55 + 8) = 0xE000000000000000;
    *(unsigned char *)(v55 + 16) = 0;
    *(void *)(v55 + 24) = v53;
    *(unsigned char *)(v55 + 32) = 0;
    *(void *)(v55 + 40) = v54;
    *(unsigned char *)(v55 + 48) = 0;
  }
  else
  {
    uint64_t v56 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v73, v48, v49);
    uint64_t v57 = (uint64_t)v74;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v74, v56, v49);
    uint64_t v58 = sub_1000E51B0();
    sub_1000A03A0(v57, v58, (uint64_t)v105);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v56, v49);
    uint64_t v59 = a5 + v47[7];
    long long v60 = v105[1];
    *(_OWORD *)uint64_t v59 = v105[0];
    *(_OWORD *)(v59 + 16) = v60;
    *(_OWORD *)(v59 + 32) = v105[2];
    *(unsigned char *)(v59 + 48) = v106;
  }
  uint64_t v61 = v89;
  uint64_t v62 = v90;
  uint64_t v63 = (uint64_t)v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v87, v52, v90);
  uint64_t v65 = v91;
  uint64_t v64 = v92;
  uint64_t v66 = (uint64_t)v88;
  (*(void (**)(char *, void, uint64_t))(v91 + 16))(v88, a1, v92);
  id v67 = sub_1000A0864(v63, v66);
  long long v68 = (void *)(a5 + v47[8]);
  *long long v68 = v67;
  v68[1] = v69;
  v68[2] = v70;
  v68[3] = v71;
  *(unsigned char *)(a5 + v47[9]) = sub_1000E5320() & 1;
  *(unsigned char *)(a5 + v47[10]) = sub_1000E5340() & 1;
  LOBYTE(v66) = sub_1000E5330();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v100, v62);
  (*(void (**)(void (*)(void, void, void), uint64_t))(v65 + 8))(a1, v64);
  uint64_t result = (*(uint64_t (**)(void (*)(void, void, void), uint64_t))(v86 + 8))(v94, v75);
  *(unsigned char *)(a5 + v47[11]) = v66 & 1;
  *(unsigned char *)(a5 + v47[12]) = v82 & 1;
  return result;
}

uint64_t sub_10009F31C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1000E5380();
  uint64_t v98 = *(void *)(v10 - 8);
  uint64_t v99 = v10;
  __chkstk_darwin(v10);
  uint64_t v94 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E5290();
  uint64_t v96 = *(void *)(v12 - 8);
  uint64_t v97 = v12;
  __chkstk_darwin(v12);
  uint64_t v92 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000082B4(&qword_10012E5C8);
  __chkstk_darwin(v14 - 8);
  uint64_t v89 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000E5150();
  uint64_t v90 = *(void *)(v16 - 8);
  uint64_t v91 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v84 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v83 = (char *)&v81 - v19;
  uint64_t v20 = sub_1000082B4(&qword_10012E5B0);
  __chkstk_darwin(v20 - 8);
  uint64_t v103 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v102 + 1) = sub_1000E5250();
  uint64_t v101 = *(void *)(*((void *)&v102 + 1) - 8);
  __chkstk_darwin(*((void *)&v102 + 1));
  uint64_t v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000E51A0();
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000E55B0();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  long long v30 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = v28;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v104 = v32;
  uint64_t v95 = v31;
  ((void (*)(char *, uint64_t))v31)(v30, a1);
  *(void *)&long long v102 = v26;
  sub_1000E5300();
  uint64_t v105 = a3;
  uint64_t v33 = sub_1000E51B0();
  if (!*(void *)(v33 + 16))
  {
    __break(1u);
    goto LABEL_20;
  }
  int v88 = a4;
  a3 = v101 + 16;
  uint64_t v34 = *(void (**)(char *, unint64_t, void))(v101 + 16);
  unint64_t v85 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  uint64_t v86 = v34;
  v34(v23, v33 + v85, *((void *)&v102 + 1));
  swift_bridgeObjectRelease();
  char v35 = sub_1000E5350();
  uint64_t v100 = a1;
  char v36 = v35;
  a4 = (uint64_t)v103;
  sub_1000E5370();
  char v87 = v23;
  sub_10009FFF8((uint64_t)v30, v102, (uint64_t)v23, 0, v36 & 1, a4, 1, (uint64_t)v106);
  long long v37 = v106[5];
  long long v38 = v106[6];
  long long v39 = v106[3];
  *(_OWORD *)(a5 + 64) = v106[4];
  *(_OWORD *)(a5 + 80) = v37;
  *(_OWORD *)(a5 + 96) = v38;
  long long v40 = v106[1];
  long long v41 = v106[2];
  *(_OWORD *)a5 = v106[0];
  *(_OWORD *)(a5 + 16) = v40;
  a1 = *((void *)&v106[0] + 1);
  uint64_t v82 = *(void *)&v106[0];
  *(unsigned char *)(a5 + 112) = v107;
  *(_OWORD *)(a5 + 32) = v41;
  *(_OWORD *)(a5 + 48) = v39;
  v95(v30, v100, v104);
  swift_bridgeObjectRetain();
  sub_1000E5310();
  uint64_t v42 = sub_1000E51B0();
  if (*(void *)(v42 + 16) < 2uLL)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v95 = (void (*)(char *, uint64_t, uint64_t))a1;
  uint64_t v43 = (uint64_t)v87;
  v86(v87, v42 + v85 + *(void *)(v101 + 72), *((void *)&v102 + 1));
  swift_bridgeObjectRelease();
  char v44 = sub_1000E5350();
  a4 = (uint64_t)v103;
  sub_1000E5370();
  sub_10009FFF8((uint64_t)v30, v102, v43, 0, v44 & 1, a4, 1, (uint64_t)v108);
  long long v45 = v108[3];
  *(_OWORD *)(a5 + 184) = v108[4];
  long long v46 = v108[6];
  *(_OWORD *)(a5 + 200) = v108[5];
  *(_OWORD *)(a5 + 216) = v46;
  *(_OWORD *)(a5 + 120) = v108[0];
  long long v47 = v108[2];
  *(_OWORD *)(a5 + 136) = v108[1];
  *(_OWORD *)(a5 + 152) = v47;
  long long v102 = v108[0];
  *(unsigned char *)(a5 + 232) = v109;
  *(_OWORD *)(a5 + 168) = v45;
  swift_bridgeObjectRetain();
  a3 = a2;
  if (sub_1000E5350())
  {
    a1 = v90;
    a2 = v91;
    if (qword_100129E30 == -1)
    {
LABEL_5:
      uint64_t v48 = &qword_10012E5A0;
      goto LABEL_9;
    }
LABEL_21:
    swift_once();
    goto LABEL_5;
  }
  a1 = v90;
  a2 = v91;
  if (qword_100129E28 != -1) {
    swift_once();
  }
  uint64_t v48 = &qword_10012E598;
LABEL_9:
  id v49 = (id)*v48;
  sub_1000E5370();
  uint64_t v50 = (int *)type metadata accessor for SportsWatchWidgetViewModel(0);
  uint64_t v51 = a5 + v50[6];
  uint64_t v52 = (char *)v49;
  sub_10009C614(a4, v52, v51);
  uint64_t v53 = (uint64_t)v89;
  sub_1000E5360();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(a1 + 48))(v53, 1, a2) == 1)
  {
    sub_1000147B8(v53, &qword_10012E5C8);
    uint64_t v54 = sub_1000E4C30();
    uint64_t v55 = sub_1000E4C30();
    uint64_t v56 = a5 + v50[8];
    *(void *)uint64_t v56 = 0;
    *(void *)(v56 + 8) = 0xE000000000000000;
    *(unsigned char *)(v56 + 16) = 0;
    *(void *)(v56 + 24) = v54;
    *(unsigned char *)(v56 + 32) = 0;
    *(void *)(v56 + 40) = v55;
    *(unsigned char *)(v56 + 48) = 0;
    uint64_t v57 = v105;
  }
  else
  {
    uint64_t v58 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(a1 + 32))(v83, v53, a2);
    uint64_t v59 = (uint64_t)v84;
    (*(void (**)(char *, char *, uint64_t))(a1 + 16))(v84, v58, a2);
    uint64_t v57 = v105;
    uint64_t v60 = sub_1000E51B0();
    sub_1000A03A0(v59, v60, (uint64_t)v110);
    (*(void (**)(char *, uint64_t))(a1 + 8))(v58, a2);
    uint64_t v61 = a5 + v50[8];
    long long v62 = v110[1];
    *(_OWORD *)uint64_t v61 = v110[0];
    *(_OWORD *)(v61 + 16) = v62;
    *(_OWORD *)(v61 + 32) = v110[2];
    *(unsigned char *)(v61 + 48) = v111;
  }
  char v63 = v107;
  uint64_t v64 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v92, v57, v97);
  uint64_t v65 = (uint64_t)v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v94, a3, v99);
  id v66 = sub_1000A0864(v64, v65);
  id v67 = (void *)(a5 + v50[7]);
  *id v67 = v66;
  v67[1] = v68;
  v67[2] = v69;
  v67[3] = v70;
  *(unsigned char *)(a5 + v50[9]) = sub_1000E5320() & 1;
  *(unsigned char *)(a5 + v50[10]) = sub_1000E5340() & 1;
  *(unsigned char *)(a5 + v50[11]) = sub_1000E5330() & 1;
  if (v63)
  {
    swift_bridgeObjectRelease();
    uint64_t v72 = v82;
    uint64_t v73 = v95;
LABEL_17:
    uint64_t v74 = (void *)(a5 + v50[12]);
    *uint64_t v74 = v72;
    v74[1] = v73;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  if (v109)
  {
    uint64_t v73 = (void (*)(char *, uint64_t, uint64_t))*((void *)&v102 + 1);
    uint64_t v72 = v102;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t v71 = (void *)(a5 + v50[12]);
  *uint64_t v71 = 0;
  v71[1] = 0;
LABEL_18:
  *(unsigned char *)(a5 + v50[13]) = v88 & 1;
  *(unsigned char *)(a5 + v50[14]) = sub_1000E5350() & 1;
  sub_1000E50E0();
  uint64_t v75 = v105;
  uint64_t v76 = sub_1000E50D0();
  uint64_t v78 = v77;

  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v75, v97);
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(a3, v99);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 8))(v100, v104);
  uint64_t v80 = (uint64_t *)(a5 + v50[15]);
  uint64_t *v80 = v76;
  v80[1] = v78;
  return result;
}

uint64_t sub_10009FC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unsigned __int8 a11, unsigned __int8 a12)
{
  uint64_t v65 = a8;
  uint64_t v58 = a6;
  uint64_t v59 = a7;
  uint64_t v60 = a5;
  int v63 = a11;
  int v64 = a12;
  uint64_t v62 = a10;
  uint64_t v17 = sub_1000E5210();
  uint64_t v56 = *(void *)(v17 - 8);
  uint64_t v57 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000E5590();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a2;
  uint64_t v25 = a2;
  uint64_t v26 = a4;
  uint64_t v27 = (uint64_t)sub_10009BD50(v25, a3 & 1, a4);
  uint64_t v61 = a1;
  if (v28)
  {
    uint64_t v29 = v24;
    uint64_t v30 = v56;
  }
  else
  {
    uint64_t v55 = v21;
    uint64_t v31 = sub_1000E5180();
    sub_1000E55A0();
    if (*(void *)(v31 + 16))
    {
      unint64_t v32 = sub_10003572C((uint64_t)v23);
      uint64_t v29 = v24;
      uint64_t v33 = v55;
      uint64_t v30 = v56;
      if (v34) {
        uint64_t v35 = *(void *)(*(void *)(v31 + 56) + 8 * v32);
      }
      else {
        uint64_t v35 = 0;
      }
    }
    else
    {
      uint64_t v35 = 0;
      uint64_t v29 = v24;
      uint64_t v33 = v55;
      uint64_t v30 = v56;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v20);
    uint64_t v66 = v35;
    uint64_t v27 = sub_1000E5DB0();
  }
  a9[6] = v27;
  a9[7] = v28;
  uint64_t v36 = sub_1000E5170();
  uint64_t v38 = v37;
  uint64_t v39 = v60;
  sub_1000E5220();
  uint64_t v40 = sub_1000E51F0();
  uint64_t v42 = v41;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v57);
  *a9 = v36;
  a9[1] = v38;
  a9[2] = 0;
  a9[3] = 0;
  a9[4] = v40;
  a9[5] = v42;
  uint64_t v43 = (int *)type metadata accessor for SportsWidgetDynamicIslandCompactViewModel(0);
  sub_1000E3DF0();
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_1000E51E0();
  uint64_t v46 = v45;
  uint64_t v47 = sub_1000E5250();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v39, v47);
  uint64_t v48 = sub_1000E51A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v26, v48);
  sub_1000147B8(v29, &qword_10012E5B0);
  uint64_t v49 = sub_1000E55B0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v61, v49);
  uint64_t v51 = (uint64_t *)((char *)a9 + v43[7]);
  *uint64_t v51 = v44;
  v51[1] = v46;
  uint64_t v52 = (uint64_t *)((char *)a9 + v43[8]);
  uint64_t v53 = v62;
  *uint64_t v52 = v65;
  v52[1] = v53;
  *((unsigned char *)a9 + v43[9]) = v63 & 1;
  *((unsigned char *)a9 + v43[10]) = v64 & 1;
  return result;
}

uint64_t sub_10009FFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  LODWORD(v57) = a7;
  LODWORD(v55) = a4;
  uint64_t v61 = a1;
  uint64_t v54 = sub_1000E5210();
  uint64_t v56 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000E5590();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000E5170();
  uint64_t v58 = v20;
  uint64_t v59 = v19;
  uint64_t v60 = a6;
  if ((a5 & 1) != 0 && (id v21 = sub_10009BD50(a6, v55 & 1, a2), v22))
  {
    uint64_t v23 = v22;
    uint64_t v55 = (uint64_t)v21;
  }
  else
  {
    uint64_t v24 = sub_1000E5180();
    sub_1000E55A0();
    if (*(void *)(v24 + 16) && (unint64_t v25 = sub_10003572C((uint64_t)v18), (v26 & 1) != 0)) {
      uint64_t v27 = *(void *)(*(void *)(v24 + 56) + 8 * v25);
    }
    else {
      uint64_t v27 = 0;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v62 = v27;
    uint64_t v55 = sub_1000E5DB0();
    uint64_t v23 = v28;
  }
  char v29 = v57;
  uint64_t v30 = v56;
  uint64_t v31 = sub_1000E51E0();
  uint64_t v33 = v32;
  sub_1000E5220();
  char v34 = (void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v56 = v33;
  uint64_t v57 = v31;
  if (v29) {
    uint64_t v35 = sub_1000E5200();
  }
  else {
    uint64_t v35 = sub_1000E51F0();
  }
  uint64_t v37 = v35;
  uint64_t v38 = v36;
  (*v34)(v14, v54);
  uint64_t v39 = sub_1000E5170();
  uint64_t v41 = v40;
  char v63 = sub_1000E5190() & 1;
  uint64_t v42 = sub_1000E5240();
  uint64_t v44 = Color.init(hex:)(v42, v43);
  if (!v44) {
    uint64_t v44 = sub_1000E4C30();
  }
  uint64_t v45 = v44;
  char v46 = sub_1000E5230();
  sub_1000147B8(v60, &qword_10012E5B0);
  uint64_t v47 = sub_1000E5250();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(a3, v47);
  uint64_t v48 = sub_1000E51A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(a2, v48);
  uint64_t v49 = sub_1000E55B0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v61, v49);
  char v51 = v63;
  uint64_t v52 = v58;
  *(void *)a8 = v59;
  *(void *)(a8 + 8) = v52;
  *(void *)(a8 + 16) = v55;
  *(void *)(a8 + 24) = v23;
  uint64_t v53 = v56;
  *(void *)(a8 + 32) = v57;
  *(void *)(a8 + 40) = v53;
  *(void *)(a8 + 48) = v39;
  *(void *)(a8 + 56) = v41;
  *(void *)(a8 + 64) = 0;
  *(void *)(a8 + 72) = 0;
  *(void *)(a8 + 80) = v37;
  *(void *)(a8 + 88) = v38;
  *(unsigned char *)(a8 + 96) = v46 & 1;
  *(void *)(a8 + 104) = v45;
  *(unsigned char *)(a8 + 112) = v51;
  return result;
}

uint64_t sub_1000A03A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000E5250();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E5140();
  uint64_t v12 = v11;
  uint64_t v36 = a1;
  uint64_t result = sub_1000E5120();
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  int v35 = result;
  uint64_t v33 = v12;
  uint64_t v34 = v10;
  uint64_t v14 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v31(v9, v14, v6);
  uint64_t v15 = sub_1000E5240();
  uint64_t v17 = v16;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v7 + 8);
  v32(v9, v6);
  uint64_t v18 = Color.init(hex:)(v15, v17);
  if (!v18) {
    uint64_t v18 = sub_1000E4C10();
  }
  uint64_t v19 = v18;
  char v38 = v35 & 1;
  uint64_t result = sub_1000E5130();
  if (*(void *)(a2 + 16) < 2uLL) {
    goto LABEL_9;
  }
  int v35 = result;
  v31(v9, v14 + *(void *)(v7 + 72), v6);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1000E5240();
  uint64_t v22 = v21;
  v32(v9, v6);
  uint64_t v23 = Color.init(hex:)(v20, v22);
  if (!v23) {
    uint64_t v23 = sub_1000E4C10();
  }
  uint64_t v24 = v23;
  uint64_t v25 = v33;
  char v37 = v35 & 1;
  uint64_t v26 = v36;
  char v27 = sub_1000E5110();
  uint64_t v28 = sub_1000E5150();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v26, v28);
  char v29 = v38;
  char v30 = v37;
  *(void *)a3 = v34;
  *(void *)(a3 + 8) = v25;
  *(unsigned char *)(a3 + 16) = v29;
  *(void *)(a3 + 24) = v19;
  *(unsigned char *)(a3 + 32) = v30;
  *(void *)(a3 + 40) = v24;
  *(unsigned char *)(a3 + 48) = v27 & 1;
  return result;
}

uint64_t sub_1000A061C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = sub_1000E5500();
  uint64_t v4 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000E5530();
  uint64_t v7 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E53C0();
  uint64_t v22 = v11;
  uint64_t v23 = v10;
  sub_1000E53B0();
  if (qword_100129E28 != -1) {
    swift_once();
  }
  sub_1000E5510();
  uint64_t v12 = sub_1000E54D0();
  uint64_t v14 = v13;
  char v26 = sub_1000E53F0() & 1;
  uint64_t v15 = sub_1000E53E0();
  uint64_t v16 = sub_1000E53D0();
  uint64_t v17 = sub_1000E5400();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  char v19 = v26;
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v16;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v14;
  uint64_t v20 = v22;
  *(void *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v20;
  *(unsigned char *)(a2 + 48) = v19;
  return result;
}

id sub_1000A0864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000082B4(&qword_100129F30);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000E5270();
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E3EE0();
  uint64_t v55 = *(void *)(v10 - 8);
  uint64_t v56 = v10;
  __chkstk_darwin(v10);
  uint64_t v54 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000E55B0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000E52E0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a2;
  sub_1000E52F0();
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 != enum case for SportsActivityContentState.EventInfoState.preGame(_:))
  {
    if (v20 != enum case for SportsActivityContentState.EventInfoState.startingSoon(_:))
    {
      uint64_t v34 = sub_1000E5380();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v59, v34);
      uint64_t v35 = sub_1000E5290();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(a1, v35);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return 0;
    }
    id result = [self sharedInstance];
    if (result)
    {
      uint64_t v24 = result;
      NSString v25 = sub_1000E5A00();
      id v26 = [v24 localizedStringForKey:v25];

      if (v26)
      {
        uint64_t v27 = sub_1000E5A10();
      }
      else
      {
        uint64_t v27 = 0;
      }
      uint64_t v40 = sub_1000E5380();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v59, v40);
      uint64_t v41 = sub_1000E5290();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(a1, v41);
      return (id)v27;
    }
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  sub_1000E51C0();
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  uint64_t v22 = a1;
  if (v21 == enum case for Sport.baseball(_:))
  {
    id result = [self sharedInstance];
    if (result)
    {
LABEL_11:
      char v29 = result;
      NSString v30 = sub_1000E5A00();
      id v31 = [v29 localizedStringForKey:v30];

      uint64_t v33 = v55;
      uint64_t v32 = v56;
      if (v31)
      {
        uint64_t v27 = sub_1000E5A10();

        goto LABEL_26;
      }
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_33;
  }
  int v28 = v21;
  if (v21 == enum case for Sport.basketball(_:))
  {
    id result = [self sharedInstance];
    if (result) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
  int v36 = enum case for Sport.soccer(_:);
  id result = [self sharedInstance];
  char v37 = result;
  if (v28 == v36)
  {
    if (result)
    {
      NSString v38 = sub_1000E5A00();
      id v39 = [v37 localizedStringForKey:v38];

      uint64_t v22 = a1;
      uint64_t v33 = v55;
      uint64_t v32 = v56;
      if (v39)
      {
        uint64_t v27 = sub_1000E5A10();

        goto LABEL_26;
      }
LABEL_18:
      uint64_t v27 = 0;
LABEL_26:
      uint64_t v45 = v57;
      uint64_t v44 = v58;
      sub_1000E5280();
      sub_1000E5260();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v44);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v6, 1, v32) == 1)
      {
        sub_1000147B8((uint64_t)v6, &qword_100129F30);
        uint64_t v46 = sub_1000E5380();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v59, v46);
        uint64_t v47 = sub_1000E5290();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v22, v47);
      }
      else
      {
        uint64_t v48 = v54;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v54, v6, v32);
        if (qword_100129E38 != -1) {
          swift_once();
        }
        uint64_t v49 = (void *)qword_10012E5A8;
        Class isa = sub_1000E3E60().super.isa;
        id v51 = [v49 stringFromDate:isa];

        sub_1000E5A10();
        uint64_t v52 = sub_1000E5380();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v59, v52);
        uint64_t v53 = sub_1000E5290();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v22, v53);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v48, v32);
      }
      return (id)v27;
    }
    goto LABEL_35;
  }
  if (result)
  {
    NSString v42 = sub_1000E5A00();
    id v43 = [v37 localizedStringForKey:v42];

    uint64_t v22 = a1;
    if (v43)
    {
      uint64_t v27 = sub_1000E5A10();
    }
    else
    {
      uint64_t v27 = 0;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v33 = v55;
    uint64_t v32 = v56;
    goto LABEL_26;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1000A11A8@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v112 = a1;
  uint64_t v106 = sub_1000E5590();
  uint64_t v103 = *(void *)(v106 - 8);
  uint64_t v5 = __chkstk_darwin(v106);
  uint64_t v101 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v100 = (char *)&v74 - v7;
  uint64_t v8 = sub_1000082B4(&qword_10012E5B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v110 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000E5250();
  uint64_t v109 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1000E51A0();
  uint64_t v99 = *(void *)(v105 - 8);
  uint64_t v13 = __chkstk_darwin(v105);
  uint64_t v98 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v97 = (char *)&v74 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v74 - v17;
  uint64_t v19 = sub_1000E55B0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  NSString v25 = (char *)&v74 - v24;
  sub_1000E51C0();
  uint64_t v102 = v20;
  uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 16);
  uint64_t v26 = v20 + 16;
  char v107 = v23;
  char v111 = v25;
  uint64_t v104 = v27;
  v27((uint64_t)v23, v25, v19);
  id v108 = v18;
  sub_1000E5300();
  uint64_t result = sub_1000E51B0();
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_24;
  }
  char v29 = *(void (**)(char *, unint64_t, uint64_t))(v109 + 16);
  unint64_t v77 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  uint64_t v79 = v29;
  uint64_t v80 = v10;
  v29(v12, result + v77, v10);
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_1000E5160();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  uint64_t v33 = (uint64_t)v110;
  uint64_t v78 = v30;
  uint64_t v75 = v31 + 56;
  uint64_t v76 = v32;
  ((void (*)(char *, uint64_t, uint64_t))v32)(v110, 1, 1);
  uint64_t v96 = v26;
  uint64_t v34 = (uint64_t)v107;
  uint64_t v81 = v12;
  sub_10009FFF8((uint64_t)v107, (uint64_t)v108, (uint64_t)v12, 0, 0, v33, 0, (uint64_t)v121);
  uint64_t v92 = v121[1];
  uint64_t v93 = v121[0];
  uint64_t v90 = v121[3];
  uint64_t v91 = v121[2];
  uint64_t v88 = v121[5];
  uint64_t v89 = v121[4];
  uint64_t v86 = v121[7];
  uint64_t v87 = v121[6];
  uint64_t v84 = v121[9];
  uint64_t v85 = v121[8];
  uint64_t v82 = v121[11];
  uint64_t v83 = v121[10];
  char v120 = v122;
  uint64_t v94 = v123;
  uint64_t v95 = v19;
  char v119 = v124;
  v104(v34, v111, v19);
  sub_1000E5310();
  uint64_t v104 = a2;
  uint64_t result = sub_1000E51B0();
  if (*(void *)(result + 16) < 2uLL)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v35 = (uint64_t)v81;
  v79(v81, result + v77 + *(void *)(v109 + 72), v80);
  swift_bridgeObjectRelease();
  uint64_t v36 = (uint64_t)v110;
  v76(v110, 1, 1, v78);
  sub_10009FFF8((uint64_t)v107, (uint64_t)v108, v35, 0, 0, v36, 0, (uint64_t)v125);
  id v108 = (char *)v125[1];
  uint64_t v109 = v125[0];
  char v107 = (char *)v125[2];
  uint64_t v96 = v125[3];
  uint64_t v80 = v125[5];
  uint64_t v81 = (char *)v125[4];
  uint64_t v78 = v125[7];
  uint64_t v79 = (void (*)(char *, unint64_t, uint64_t))v125[6];
  uint64_t v76 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v125[9];
  unint64_t v77 = v125[8];
  uint64_t v74 = v125[11];
  uint64_t v75 = v125[10];
  char v118 = v126;
  uint64_t v110 = v127;
  char v117 = v128;
  char v37 = v97;
  sub_1000E5300();
  uint64_t v38 = sub_1000E5180();
  id v39 = *(void (**)(char *, uint64_t))(v99 + 8);
  v39(v37, v105);
  uint64_t v40 = (uint64_t)v100;
  sub_1000E55A0();
  if (*(void *)(v38 + 16) && (unint64_t v41 = sub_10003572C(v40), (v42 & 1) != 0)) {
    uint64_t v43 = *(void *)(*(void *)(v38 + 56) + 8 * v41);
  }
  else {
    uint64_t v43 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
  v44(v40, v106);
  uint64_t v45 = v98;
  sub_1000E5310();
  uint64_t v46 = sub_1000E5180();
  v39(v45, v105);
  uint64_t v47 = (uint64_t)v101;
  sub_1000E55A0();
  if (*(void *)(v46 + 16) && (unint64_t v48 = sub_10003572C(v47), (v49 & 1) != 0)) {
    uint64_t v50 = *(void *)(*(void *)(v46 + 56) + 8 * v48);
  }
  else {
    uint64_t v50 = 0;
  }
  swift_bridgeObjectRelease();
  v44(v47, v106);
  if (v50 >= v43)
  {
    uint64_t v56 = v104;
    if (v43 >= v50)
    {
      double v54 = 1.0;
      if (v122) {
        double v52 = 2.0;
      }
      else {
        double v52 = 1.0;
      }
      if (v122) {
        double v51 = 1.0;
      }
      else {
        double v51 = 2.0;
      }
    }
    else
    {
      double v51 = 2.0;
      double v52 = 1.0;
      double v54 = 0.6;
    }
    double v53 = 1.0;
    uint64_t v55 = v112;
  }
  else
  {
    double v51 = 1.0;
    double v52 = 2.0;
    double v53 = 0.6;
    double v54 = 1.0;
    uint64_t v55 = v112;
    uint64_t v56 = v104;
  }
  sub_1000E50E0();
  uint64_t v57 = sub_1000E50D0();
  uint64_t v59 = v58;
  uint64_t v60 = sub_1000E5290();
  (*(void (**)(void (*)(uint64_t, char *, uint64_t), uint64_t))(*(void *)(v60 - 8) + 8))(v56, v60);
  uint64_t v61 = sub_1000E5380();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v55, v61);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v111, v95);
  uint64_t v62 = v92;
  *(void *)a3 = v93;
  *(void *)(a3 + 8) = v62;
  uint64_t v63 = v90;
  *(void *)(a3 + 16) = v91;
  *(void *)(a3 + 24) = v63;
  uint64_t v64 = v88;
  *(void *)(a3 + 32) = v89;
  *(void *)(a3 + 40) = v64;
  uint64_t v65 = v86;
  *(void *)(a3 + 48) = v87;
  *(void *)(a3 + 56) = v65;
  uint64_t v66 = v84;
  *(void *)(a3 + 64) = v85;
  *(void *)(a3 + 72) = v66;
  uint64_t v67 = v82;
  *(void *)(a3 + 80) = v83;
  *(void *)(a3 + 88) = v67;
  *(unsigned char *)(a3 + 96) = v120;
  *(_DWORD *)(a3 + 100) = *(_DWORD *)&v116[3];
  *(_DWORD *)(a3 + 97) = *(_DWORD *)v116;
  *(void *)(a3 + 104) = v94;
  *(unsigned char *)(a3 + 112) = v119;
  *(_DWORD *)(a3 + 116) = *(_DWORD *)&v115[3];
  *(_DWORD *)(a3 + 113) = *(_DWORD *)v115;
  uint64_t v68 = (uint64_t)v108;
  *(void *)(a3 + 120) = v109;
  *(void *)(a3 + 128) = v68;
  uint64_t v69 = v96;
  *(void *)(a3 + 136) = v107;
  *(void *)(a3 + 144) = v69;
  uint64_t v70 = v80;
  *(void *)(a3 + 152) = v81;
  *(void *)(a3 + 160) = v70;
  uint64_t v71 = v78;
  *(void *)(a3 + 168) = v79;
  *(void *)(a3 + 176) = v71;
  uint64_t v72 = v76;
  *(void *)(a3 + 184) = v77;
  *(void *)(a3 + 192) = v72;
  uint64_t v73 = v74;
  *(void *)(a3 + 200) = v75;
  *(void *)(a3 + 208) = v73;
  *(unsigned char *)(a3 + 216) = v118;
  *(_DWORD *)(a3 + 220) = *(_DWORD *)&v114[3];
  *(_DWORD *)(a3 + 217) = *(_DWORD *)v114;
  *(void *)(a3 + 224) = v110;
  *(unsigned char *)(a3 + 232) = v117;
  *(_DWORD *)(a3 + 236) = *(_DWORD *)&v113[3];
  *(_DWORD *)(a3 + 233) = *(_DWORD *)v113;
  *(void *)(a3 + 272) = v57;
  *(void *)(a3 + 280) = v59;
  *(double *)(a3 + 240) = v52;
  *(double *)(a3 + 248) = v51;
  *(double *)(a3 + 256) = v54;
  *(double *)(a3 + 264) = v53;
  return result;
}

uint64_t sub_1000A1AD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A1B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsWidgetClock(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000A1B84()
{
  unint64_t result = qword_10012E5F0;
  if (!qword_10012E5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E5F0);
  }
  return result;
}

uint64_t destroy for SportsWidgetStaleView()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SportsWidgetStaleView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SportsWidgetStaleView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for SportsWidgetStaleView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for SportsWidgetStaleView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsWidgetStaleView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsWidgetStaleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetStaleView()
{
  return &type metadata for SportsWidgetStaleView;
}

uint64_t sub_1000A1EB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A1ECC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = sub_1000082B4(&qword_10012E5F8);
  __chkstk_darwin(v49);
  long long v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000082B4(&qword_10012E600);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000082B4(&qword_10012E608);
  __chkstk_darwin(v50);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000082B4(&qword_10012E610);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)v1)
  {
    case 1:
      *(void *)uint64_t v12 = sub_1000E45C0();
      *((void *)v12 + 1) = 0;
      unsigned char v12[16] = 1;
      uint64_t v39 = sub_1000082B4(&qword_10012E668);
      sub_1000A271C(v1, (uint64_t)&v12[*(int *)(v39 + 44)]);
      sub_100014754((uint64_t)v12, (uint64_t)v7, &qword_10012E610);
      swift_storeEnumTagMultiPayload();
      sub_1000082B4(&qword_10012E658);
      sub_1000A2E94(&qword_10012E648, &qword_10012E610);
      sub_1000A2E94(&qword_10012E650, &qword_10012E658);
      sub_1000E4690();
      sub_100014754((uint64_t)v9, (uint64_t)v4, &qword_10012E608);
      swift_storeEnumTagMultiPayload();
      sub_1000082B4(&qword_10012E638);
      sub_1000A2DF8();
      sub_1000A2EE4();
      sub_1000E4690();
      sub_1000147B8((uint64_t)v9, &qword_10012E608);
      uint64_t result = sub_1000147B8((uint64_t)v12, &qword_10012E610);
      break;
    case 2:
      uint64_t v22 = sub_1000E45C0();
      sub_1000A2AFC((uint64_t)v62);
      uint64_t v23 = *(void *)&v62[8];
      uint64_t v48 = a1;
      char v24 = v62[16];
      uint64_t v25 = *(void *)&v62[32];
      uint64_t v26 = *(void *)&v62[40];
      char v27 = v62[48];
      *(void *)&v56[0] = v22;
      *(_OWORD *)((char *)v56 + 8) = xmmword_1000F71E0;
      uint64_t v43 = *(void *)v62;
      uint64_t v44 = *(void *)&v62[24];
      *((void *)&v56[1] + 1) = *(void *)v62;
      *(void *)&long long v57 = *(void *)&v62[8];
      *((void *)&v57 + 1) = v62[16];
      long long v58 = *(_OWORD *)&v62[24];
      *(void *)&v59[0] = *(void *)&v62[40];
      uint64_t v46 = *(void *)&v62[40];
      uint64_t v47 = *(void *)&v62[32];
      *((void *)&v59[0] + 1) = v62[48];
      *(void *)&v59[1] = *(void *)&v62[56];
      uint64_t v45 = v62[48];
      BYTE8(v59[1]) = 0;
      sub_10003A978(*(uint64_t *)v62, *(uint64_t *)&v62[8], v62[16]);
      swift_bridgeObjectRetain();
      sub_10003A978(v25, v26, v27);
      swift_bridgeObjectRetain();
      sub_1000082B4(&qword_10012E618);
      sub_1000082B4(&qword_10012E620);
      sub_1000A2E94(&qword_10012E628, &qword_10012E618);
      sub_1000A2E94(&qword_10012E630, &qword_10012E620);
      sub_1000E4690();
      uint64_t v28 = *(void *)&v62[80];
      char v29 = v62[88];
      long long v30 = *(_OWORD *)&v62[16];
      *(_OWORD *)long long v4 = *(_OWORD *)v62;
      *((_OWORD *)v4 + 1) = v30;
      long long v31 = *(_OWORD *)&v62[48];
      *((_OWORD *)v4 + 2) = *(_OWORD *)&v62[32];
      *((_OWORD *)v4 + 3) = v31;
      *((_OWORD *)v4 + 4) = *(_OWORD *)&v62[64];
      *((void *)v4 + 10) = v28;
      v4[88] = v29;
      swift_storeEnumTagMultiPayload();
      sub_1000082B4(&qword_10012E638);
      sub_1000A2DF8();
      sub_1000A2EE4();
      sub_1000E4690();
      sub_1000141AC(v43, v23, v24);
      swift_bridgeObjectRelease();
      sub_1000141AC(v47, v46, v45);
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t v33 = sub_1000E45C0();
      uint64_t v34 = v1[10];
      swift_retain();
      sub_1000E4F50();
      sub_1000E40A0();
      *(void *)&v56[0] = v33;
      *(_OWORD *)((char *)v56 + 8) = xmmword_1000F71E0;
      *((void *)&v56[1] + 1) = v34;
      *(void *)&long long v57 = 256;
      *((void *)&v57 + 1) = v70;
      *(void *)&long long v58 = v71;
      *((void *)&v58 + 1) = v72;
      *(void *)&v59[0] = v73;
      *(_OWORD *)((char *)v59 + 8) = v74;
      BYTE8(v59[1]) = 1;
      swift_retain();
      sub_1000082B4(&qword_10012E618);
      sub_1000082B4(&qword_10012E620);
      sub_1000A2E94(&qword_10012E628, &qword_10012E618);
      sub_1000A2E94(&qword_10012E630, &qword_10012E620);
      sub_1000E4690();
      uint64_t v35 = *(void *)&v62[80];
      char v36 = v62[88];
      long long v37 = *(_OWORD *)&v62[16];
      *(_OWORD *)long long v4 = *(_OWORD *)v62;
      *((_OWORD *)v4 + 1) = v37;
      long long v38 = *(_OWORD *)&v62[48];
      *((_OWORD *)v4 + 2) = *(_OWORD *)&v62[32];
      *((_OWORD *)v4 + 3) = v38;
      *((_OWORD *)v4 + 4) = *(_OWORD *)&v62[64];
      *((void *)v4 + 10) = v35;
      v4[88] = v36;
      swift_storeEnumTagMultiPayload();
      sub_1000082B4(&qword_10012E638);
      sub_1000A2DF8();
      sub_1000A2EE4();
      sub_1000E4690();
      goto LABEL_5;
    default:
      uint64_t v47 = sub_1000E45C0();
      uint64_t v48 = a1;
      uint64_t v13 = v1[3];
      uint64_t v45 = v1[2];
      uint64_t v46 = v13;
      uint64_t v14 = v1[10];
      sub_1000E4F50();
      sub_1000E40A0();
      char v15 = v65;
      uint64_t v43 = v66;
      uint64_t v44 = v64;
      char v16 = v67;
      uint64_t v41 = v69;
      uint64_t v42 = v68;
      swift_retain();
      sub_1000E4F50();
      sub_1000E40A0();
      char v55 = 1;
      char v54 = v15;
      char v53 = v16;
      unsigned __int8 v52 = v71;
      unsigned __int8 v51 = v73;
      *(void *)&v56[0] = 0;
      BYTE8(v56[0]) = 1;
      *(void *)&v56[1] = v44;
      BYTE8(v56[1]) = v15;
      *(void *)&long long v57 = v43;
      BYTE8(v57) = v16;
      *(void *)&long long v58 = v42;
      *((void *)&v58 + 1) = v41;
      *(void *)&v59[0] = v14;
      WORD4(v59[0]) = 256;
      *(void *)&v59[1] = v70;
      BYTE8(v59[1]) = v71;
      *(void *)&long long v60 = v72;
      BYTE8(v60) = v73;
      long long v61 = v74;
      char v63 = 1;
      *(_OWORD *)&v62[119] = v74;
      *(_OWORD *)&v62[103] = v60;
      *(_OWORD *)&v62[87] = v59[1];
      *(_OWORD *)&v62[71] = v59[0];
      *(_OWORD *)&v62[55] = v58;
      *(_OWORD *)&v62[39] = v57;
      *(_OWORD *)&v62[23] = v56[1];
      *(_OWORD *)&v62[7] = v56[0];
      *(void *)uint64_t v7 = v47;
      *((void *)v7 + 1) = 0;
      v7[16] = 1;
      long long v17 = *(_OWORD *)&v62[16];
      *(_OWORD *)(v7 + 17) = *(_OWORD *)v62;
      long long v18 = *(_OWORD *)&v62[80];
      *(_OWORD *)(v7 + 81) = *(_OWORD *)&v62[64];
      long long v19 = *(_OWORD *)&v62[32];
      *(_OWORD *)(v7 + 65) = *(_OWORD *)&v62[48];
      *(_OWORD *)(v7 + 49) = v19;
      *(_OWORD *)(v7 + 33) = v17;
      long long v20 = *(_OWORD *)&v62[96];
      long long v21 = *(_OWORD *)&v62[112];
      *((void *)v7 + 18) = *(void *)&v62[127];
      *(_OWORD *)(v7 + 129) = v21;
      *(_OWORD *)(v7 + 113) = v20;
      *(_OWORD *)(v7 + 97) = v18;
      swift_storeEnumTagMultiPayload();
      sub_1000A2F80((uint64_t)v56);
      sub_1000082B4(&qword_10012E658);
      sub_1000A2E94(&qword_10012E648, &qword_10012E610);
      sub_1000A2E94(&qword_10012E650, &qword_10012E658);
      sub_1000E4690();
      sub_100014754((uint64_t)v9, (uint64_t)v4, &qword_10012E608);
      swift_storeEnumTagMultiPayload();
      sub_1000082B4(&qword_10012E638);
      sub_1000A2DF8();
      sub_1000A2EE4();
      sub_1000E4690();
      sub_1000147B8((uint64_t)v9, &qword_10012E608);
LABEL_5:
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_1000A271C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = sub_1000082B4(&qword_10012B1F0) - 8;
  __chkstk_darwin(v39);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E4230();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000082B4(&qword_10012E670);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000082B4(&qword_10012E678);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = __chkstk_darwin(v14);
  long long v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v38 = (uint64_t)v31 - v19;
  v31[1] = a1[6];
  void v31[2] = a1[7];
  uint64_t v20 = a1[9];
  uint64_t v21 = a1[11];
  sub_1000E4F50();
  sub_1000E40A0();
  uint64_t v37 = v40;
  int v36 = v41;
  uint64_t v35 = v42;
  int v34 = v43;
  uint64_t v33 = v44;
  uint64_t v32 = v45;
  uint64_t v22 = (char *)v9 + *(int *)(v7 + 28);
  uint64_t v23 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v24 = sub_1000E4580();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v22, v23, v24);
  void *v9 = v20;
  v9[1] = v20;
  sub_1000A2FAC((uint64_t)v9, (uint64_t)v5);
  *(_WORD *)&v5[*(int *)(v39 + 44)] = 256;
  sub_100014754((uint64_t)v5, (uint64_t)&v13[*(int *)(v11 + 44)], &qword_10012B1F0);
  *(void *)uint64_t v13 = v21;
  *((_WORD *)v13 + 4) = 256;
  swift_retain_n();
  sub_1000147B8((uint64_t)v5, &qword_10012B1F0);
  sub_1000A3010((uint64_t)v9);
  swift_release();
  sub_1000E4F50();
  sub_1000E40A0();
  sub_100014754((uint64_t)v13, (uint64_t)v18, &qword_10012E670);
  uint64_t v25 = &v18[*(int *)(v15 + 44)];
  long long v26 = v47;
  *(_OWORD *)uint64_t v25 = v46;
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v48;
  sub_1000147B8((uint64_t)v13, &qword_10012E670);
  uint64_t v27 = v38;
  sub_1000A306C((uint64_t)v18, v38);
  sub_100014754(v27, (uint64_t)v18, &qword_10012E678);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = v37;
  *(unsigned char *)(a2 + 24) = v36;
  *(void *)(a2 + 32) = v35;
  *(unsigned char *)(a2 + 40) = v34;
  uint64_t v28 = v32;
  *(void *)(a2 + 48) = v33;
  *(void *)(a2 + 56) = v28;
  uint64_t v29 = sub_1000082B4(&qword_10012E680);
  sub_100014754((uint64_t)v18, a2 + *(int *)(v29 + 48), &qword_10012E678);
  sub_1000147B8(v27, &qword_10012E678);
  return sub_1000147B8((uint64_t)v18, &qword_10012E678);
}

uint64_t sub_1000A2AFC@<X0>(uint64_t a1@<X8>)
{
  sub_1000E50B0();
  sub_100014158();
  uint64_t v2 = sub_1000E4A00();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  id v37 = self;
  id v7 = [v37 labelColor];
  sub_1000E4BD0();
  uint64_t v8 = sub_1000E4940();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_release();
  sub_1000141AC(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_1000E47C0();
  uint64_t v13 = sub_1000E4970();
  uint64_t v39 = v14;
  uint64_t v40 = v13;
  char v16 = v15;
  uint64_t v41 = v17;
  swift_release();
  char v38 = v16 & 1;
  sub_1000141AC(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  sub_1000E50C0();
  uint64_t v18 = sub_1000E4A00();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  id v23 = [v37 labelColor];
  sub_1000E4BD0();
  uint64_t v24 = sub_1000E4940();
  uint64_t v26 = v25;
  char v28 = v27;
  swift_release();
  sub_1000141AC(v18, v20, v22);
  swift_bridgeObjectRelease();
  sub_1000E47C0();
  uint64_t v29 = sub_1000E4970();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v35 = v34;
  swift_release();
  sub_1000141AC(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  *(void *)a1 = v40;
  *(void *)(a1 + 8) = v39;
  *(unsigned char *)(a1 + 16) = v38;
  *(void *)(a1 + 24) = v41;
  *(void *)(a1 + 32) = v29;
  *(void *)(a1 + 40) = v31;
  *(unsigned char *)(a1 + 48) = v33 & 1;
  *(void *)(a1 + 56) = v35;
  sub_10003A978(v40, v39, v38);
  swift_bridgeObjectRetain();
  sub_10003A978(v29, v31, v33 & 1);
  swift_bridgeObjectRetain();
  sub_1000141AC(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  sub_1000141AC(v40, v39, v38);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A2DAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A1ECC(a1);
}

unint64_t sub_1000A2DF8()
{
  unint64_t result = qword_10012E640;
  if (!qword_10012E640)
  {
    sub_100008354(&qword_10012E608);
    sub_1000A2E94(&qword_10012E648, &qword_10012E610);
    sub_1000A2E94(&qword_10012E650, &qword_10012E658);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E640);
  }
  return result;
}

uint64_t sub_1000A2E94(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A2EE4()
{
  unint64_t result = qword_10012E660;
  if (!qword_10012E660)
  {
    sub_100008354(&qword_10012E638);
    sub_1000A2E94(&qword_10012E628, &qword_10012E618);
    sub_1000A2E94(&qword_10012E630, &qword_10012E620);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E660);
  }
  return result;
}

uint64_t sub_1000A2F80(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000A2FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000E4230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A3010(uint64_t a1)
{
  uint64_t v2 = sub_1000E4230();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000A306C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000082B4(&qword_10012E678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SportsWidgetStaleView.Position(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A31A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsWidgetStaleView.Position()
{
  return &type metadata for SportsWidgetStaleView.Position;
}

unint64_t sub_1000A31DC()
{
  unint64_t result = qword_10012E688;
  if (!qword_10012E688)
  {
    sub_100008354(&qword_10012E690);
    sub_1000A2DF8();
    sub_1000A2EE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E688);
  }
  return result;
}

unint64_t sub_1000A325C()
{
  unint64_t result = qword_10012E698;
  if (!qword_10012E698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E698);
  }
  return result;
}

uint64_t destroy for TVWidgetViewLayout()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for TVWidgetViewLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TVWidgetViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TVWidgetViewLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for TVWidgetViewLayout(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TVWidgetViewLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVWidgetViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetViewLayout()
{
  return &type metadata for TVWidgetViewLayout;
}

double sub_1000A35E4@<D0>(uint64_t a1@<X8>)
{
  sub_1000082B4(&qword_10012E6A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000F0F50;
  type metadata accessor for CGColor(0);
  sub_1000E3F20();
  *(void *)(v2 + 32) = sub_1000E4C90();
  sub_1000E3F20();
  *(void *)(v2 + 40) = sub_1000E4C90();
  sub_1000E5AE0();
  sub_1000E4EF0();
  sub_1000E4FE0();
  sub_1000E4FF0();
  sub_1000E4190();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000F0F50;
  *(void *)(v3 + 32) = sub_1000E4C30();
  *(void *)(v3 + 40) = sub_1000E4C30();
  sub_1000E5AE0();
  sub_1000E4EF0();
  sub_1000E4FE0();
  sub_1000E4FF0();
  sub_1000E4190();
  sub_1000E40C0();
  sub_1000E40C0();
  sub_1000E40B0();
  swift_release();
  swift_release();
  sub_1000E40D0();
  uint64_t v4 = sub_1000E40E0();
  swift_release();
  swift_release();
  *(void *)a1 = 0x3FFC71C71C71C71CLL;
  *(void *)(a1 + 8) = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(void *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v14;
  *(void *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = v15;
  *(void *)(a1 + 72) = v16;
  *(void *)(a1 + 80) = v17;
  *(_OWORD *)(a1 + 88) = xmmword_1000F72F0;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(a1 + 104) = _Q0;
  double result = 14.0;
  *(_OWORD *)(a1 + 120) = xmmword_1000F7300;
  *(void *)(a1 + 136) = v4;
  return result;
}

double sub_1000A3858(uint64_t a1)
{
  uint64_t v2 = sub_1000E5640();
  uint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  long long v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v19 - v7;
  uint64_t v20 = (void (*)(char *, void, uint64_t))v3[13];
  v20((char *)v19 - v7, enum case for WidgetFamily.systemSmall(_:), v2);
  sub_10002CEFC();
  sub_1000E5AA0();
  sub_1000E5AA0();
  uint64_t v10 = v22;
  uint64_t v9 = v23;
  char v21 = (void (*)(char *, uint64_t))v3[1];
  v21(v8, v2);
  uint64_t v11 = (void (*)(char *, uint64_t, uint64_t))v3[2];
  v19[1] = a1;
  v11(v6, a1, v2);
  if (v9 == v10)
  {
    v21(v6, v2);
    return 16.0;
  }
  else
  {
    uint64_t v13 = (void (*)(char *, void, uint64_t, double))v20;
    v20(v8, enum case for WidgetFamily.systemLarge(_:), v2);
    sub_1000E5AA0();
    sub_1000E5AA0();
    uint64_t v15 = v22;
    uint64_t v14 = v23;
    uint64_t v16 = v21;
    v21(v8, v2);
    v16(v6, v2);
    double result = 16.0;
    if (v14 != v15)
    {
      v13(v8, enum case for WidgetFamily.systemMedium(_:), v2, 16.0);
      sub_1000E5AA0();
      sub_1000E5AA0();
      uint64_t v18 = v22;
      uint64_t v17 = v23;
      v16(v8, v2);
      double result = 0.0;
      if (v17 == v18) {
        return 8.0;
      }
    }
  }
  return result;
}

char *sub_1000A3AF8(uint64_t a1)
{
  uint64_t v3 = sub_1000E5640();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = &v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__widgetEntry];
  uint64_t v8 = type metadata accessor for TVWidgetEntry();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = &v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__suggestedRefreshDate];
  uint64_t v10 = sub_1000E3EE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__error] = 0;
  uint64_t v11 = &v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation_context];
  uint64_t v12 = sub_1000E5860();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  Operation = (objc_class *)type metadata accessor for TVWidgetFetchOperation();
  v52.receiver = v1;
  v52.super_class = Operation;
  uint64_t v15 = (char *)[super init];
  uint64_t v49 = a1;
  sub_1000E5840();
  sub_1000A7C94(&qword_10012D570, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  uint64_t v16 = sub_1000E5DB0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v50 = v16;
  uint64_t v51 = v18;
  swift_bridgeObjectRetain();
  v53._uint64_t countAndFlagsBits = 45;
  v53._object = (void *)0xE100000000000000;
  sub_1000E5A70(v53);
  swift_bridgeObjectRelease();
  uint64_t v19 = v50;
  uint64_t v20 = v51;
  char v21 = (uint64_t *)&v15[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
  uint64_t v22 = *(void **)&v15[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
  uint64_t v23 = (_OWORD *)&unk_1000EF000;
  if (v22)
  {
    uint64_t v24 = *v21;
    uint64_t v25 = v15;
    uint64_t v26 = v22;
  }
  else
  {
    sub_100089108(0, (unint64_t *)&qword_10012A908);
    char v27 = v15;
    char v28 = (void *)sub_1000E5C10();
    sub_1000082B4(&qword_10012A900);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1000EF780;
    *(void *)(v29 + 56) = type metadata accessor for TVWidgetAsyncOperation();
    *(void *)(v29 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
    *(void *)(v29 + 32) = v27;
    uint64_t v30 = v27;
    uint64_t v23 = &unk_1000EF000;
    uint64_t v31 = (void *)sub_1000E5C20();

    uint64_t v24 = sub_1000E5A10();
    uint64_t v26 = v32;
  }
  swift_bridgeObjectRetain();

  uint64_t v50 = v19;
  uint64_t v51 = v20;
  swift_bridgeObjectRetain();
  v54._uint64_t countAndFlagsBits = v24;
  v54._object = v26;
  sub_1000E5A70(v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v51;
  *char v21 = v50;
  v21[1] = v33;

  swift_bridgeObjectRelease();
  double result = (char *)sub_1000054E4();
  if (result)
  {
    uint64_t v35 = result;
    sub_1000082B4(&qword_10012A900);
    uint64_t v36 = swift_allocObject();
    long long v37 = v23[120];
    *(_OWORD *)(v36 + 16) = v37;
    uint64_t v38 = v21[1];
    if (v38)
    {
      uint64_t v39 = *v21;
      uint64_t v40 = v15;
      uint64_t v41 = v38;
    }
    else
    {
      long long v48 = v37;
      sub_100089108(0, (unint64_t *)&qword_10012A908);
      uint64_t v42 = v15;
      unsigned __int8 v43 = (void *)sub_1000E5C10();
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = v48;
      *(void *)(v44 + 56) = type metadata accessor for TVWidgetAsyncOperation();
      *(void *)(v44 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
      *(void *)(v44 + 32) = v42;
      uint64_t v45 = v42;
      long long v46 = (void *)sub_1000E5C20();

      uint64_t v39 = sub_1000E5A10();
      uint64_t v41 = v47;
    }
    swift_bridgeObjectRetain();

    *(void *)(v36 + 56) = &type metadata for String;
    *(void *)(v36 + 64) = sub_10001D7B4();
    *(void *)(v36 + 32) = v39;
    *(void *)(v36 + 40) = v41;
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v49, v12);
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A4084()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation_context;
  uint64_t v2 = sub_1000E5860();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1000147B8(v0 + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__widgetEntry, &qword_10012D448);
  sub_1000147B8(v0 + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__suggestedRefreshDate, &qword_100129F30);

  return swift_errorRelease();
}

id sub_1000A4130()
{
  uint64_t v1 = v0;
  id result = sub_1000054E4();
  if (result)
  {
    uint64_t v3 = result;
    sub_1000082B4(&qword_10012A900);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1000EF780;
    uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
    if (v5)
    {
      uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
      id v7 = v1;
      uint64_t v8 = v5;
    }
    else
    {
      sub_100089108(0, (unint64_t *)&qword_10012A908);
      uint64_t v9 = v0;
      uint64_t v10 = (void *)sub_1000E5C10();
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1000EF780;
      *(void *)(v11 + 56) = type metadata accessor for TVWidgetAsyncOperation();
      *(void *)(v11 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
      *(void *)(v11 + 32) = v9;
      uint64_t v12 = v9;
      uint64_t v13 = (void *)sub_1000E5C20();

      uint64_t v6 = sub_1000E5A10();
      uint64_t v8 = v14;
    }
    swift_bridgeObjectRetain();

    *(void *)(v4 + 56) = &type metadata for String;
    *(void *)(v4 + 64) = sub_10001D7B4();
    *(void *)(v4 + 32) = v6;
    *(void *)(v4 + 40) = v8;
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
    v15.receiver = v1;
    v15.super_class = (Class)type metadata accessor for TVWidgetFetchOperation();
    return [super dealloc];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A43FC()
{
  return type metadata accessor for TVWidgetFetchOperation();
}

uint64_t type metadata accessor for TVWidgetFetchOperation()
{
  uint64_t result = qword_10012E6E8;
  if (!qword_10012E6E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000A4450()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000082B4(&qword_100129F30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v59 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v57 - v5;
  uint64_t v7 = sub_1000082B4(&qword_10012D448);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v57 - v11;
  uint64_t v13 = sub_1000E5640();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v57 - v18;
  id v20 = [self ams_sharedAccountStore];
  id v21 = [v20 ams_activeiTunesAccount];

  if (!v21)
  {
    id v25 = sub_1000054E4();
    if (v25)
    {
      uint64_t v26 = v25;
      sub_1000082B4(&qword_10012A900);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1000EF780;
      uint64_t v28 = (uint64_t)v59;
      if (*(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8])
      {
        uint64_t v29 = *(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
        uint64_t v30 = *(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
      }
      else
      {
        long long v58 = xmmword_1000EF780;
        sub_100089108(0, (unint64_t *)&qword_10012A908);
        uint64_t v31 = (void *)sub_1000E5C10();
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v58;
        *(void *)(v32 + 56) = type metadata accessor for TVWidgetAsyncOperation();
        *(void *)(v32 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
        *(void *)(v32 + 32) = v1;
        uint64_t v33 = v1;
        uint64_t v34 = (void *)sub_1000E5C20();

        uint64_t v29 = sub_1000E5A10();
        uint64_t v30 = v35;
      }
      *(void *)(v27 + 56) = &type metadata for String;
      *(void *)(v27 + 64) = sub_10001D7B4();
      *(void *)(v27 + 32) = v29;
      *(void *)(v27 + 40) = v30;
      swift_bridgeObjectRetain();
      sub_1000E5B90();
      sub_1000E3F40();

      swift_bridgeObjectRelease();
      sub_1000E3ED0();
      uint64_t v36 = type metadata accessor for TVWidgetEntry();
      uint64_t v37 = v36;
      *(void *)&v12[*(int *)(v36 + 20)] = 0;
      v12[*(int *)(v36 + 24)] = 1;
      goto LABEL_13;
    }
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  sub_1000E5840();
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v19, v13);
  if (v22 != enum case for WidgetFamily.systemSmall(_:))
  {
    if (v22 == enum case for WidgetFamily.systemMedium(_:))
    {
      uint64_t v24 = 2;
      uint64_t v23 = 1;
      goto LABEL_16;
    }
    if (v22 == enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t v24 = 3;
      uint64_t v23 = 2;
      goto LABEL_16;
    }
    if (v22 == enum case for WidgetFamily.systemExtraLarge(_:))
    {
      uint64_t v24 = 7;
      uint64_t v23 = 3;
      goto LABEL_16;
    }
    uint64_t v45 = v19;
    long long v46 = *(void (**)(char *, uint64_t))(v14 + 8);
    v46(v45, v13);
    *(void *)&long long v58 = sub_1000054E4();
    if ((void)v58)
    {
      v57[1] = sub_1000082B4(&qword_10012A900);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1000F0F50;
      sub_1000E5840();
      uint64_t v48 = sub_1000E5630();
      v46(v17, v13);
      *(void *)(v47 + 56) = &type metadata for Int;
      *(void *)(v47 + 64) = &protocol witness table for Int;
      *(void *)(v47 + 32) = v48;
      if (*(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8])
      {
        uint64_t v49 = *(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
        uint64_t v50 = *(void *)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
      }
      else
      {
        sub_100089108(0, (unint64_t *)&qword_10012A908);
        uint64_t v51 = (void *)sub_1000E5C10();
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_1000EF780;
        *(void *)(v52 + 56) = type metadata accessor for TVWidgetAsyncOperation();
        *(void *)(v52 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
        *(void *)(v52 + 32) = v1;
        Swift::String v53 = v1;
        Swift::String v54 = (void *)sub_1000E5C20();

        uint64_t v49 = sub_1000E5A10();
        uint64_t v50 = v55;
      }
      uint64_t v28 = (uint64_t)v59;
      uint64_t v56 = (void *)v58;
      *(void *)(v47 + 96) = &type metadata for String;
      *(void *)(v47 + 104) = sub_10001D7B4();
      *(void *)(v47 + 72) = v49;
      *(void *)(v47 + 80) = v50;
      swift_bridgeObjectRetain();
      sub_1000E5B90();
      sub_1000E3F40();

      swift_bridgeObjectRelease();
      sub_1000E3ED0();
      uint64_t v36 = type metadata accessor for TVWidgetEntry();
      uint64_t v37 = v36;
      *(void *)&v12[*(int *)(v36 + 20)] = 0;
      v12[*(int *)(v36 + 24)] = 2;
LABEL_13:
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v12, 0, 1, v37);
      objc_sync_enter(v1);
      sub_100014754((uint64_t)v12, (uint64_t)v10, &qword_10012D448);
      uint64_t v38 = (uint64_t)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__widgetEntry];
      swift_beginAccess();
      sub_1000838FC((uint64_t)v10, v38, &qword_10012D448);
      swift_endAccess();
      objc_sync_exit(v1);
      sub_1000147B8((uint64_t)v12, &qword_10012D448);
      sub_1000E3E90();
      uint64_t v39 = sub_1000E3EE0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v6, 0, 1, v39);
      objc_sync_enter(v1);
      sub_100014754((uint64_t)v6, v28, &qword_100129F30);
      uint64_t v40 = (uint64_t)&v1[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__suggestedRefreshDate];
      swift_beginAccess();
      sub_1000838FC(v28, v40, &qword_100129F30);
      swift_endAccess();
      objc_sync_exit(v1);
      sub_1000147B8((uint64_t)v6, &qword_100129F30);
      sub_10001D16C();
      return;
    }
    goto LABEL_24;
  }
  uint64_t v23 = 0;
  uint64_t v24 = 3;
LABEL_16:
  uint64_t v41 = self;
  uint64_t v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v42;
  *(void *)(v43 + 24) = v24;
  aBlock[4] = sub_1000A7838;
  aBlock[5] = v43;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A75C8;
  aBlock[3] = &unk_100123730;
  uint64_t v44 = _Block_copy(aBlock);
  swift_release();
  [v41 fetchUpNext:v23 withCompletion:v44];
  _Block_release(v44);
}

char *sub_1000A4D08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v257 = sub_1000E5820();
  uint64_t v247 = *(void (***)(char *, uint64_t))(v257 - 8);
  __chkstk_darwin(v257);
  uint64_t v256 = (char *)&v241 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = sub_1000E5020();
  uint64_t v252 = *(void *)(v253 - 8);
  __chkstk_darwin(v253);
  uint64_t v250 = (char *)&v241 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_1000E5040();
  uint64_t v249 = *(void *)(v251 - 8);
  __chkstk_darwin(v251);
  uint64_t v248 = (char *)&v241 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000082B4(&qword_10012E298);
  __chkstk_darwin(v10 - 8);
  uint64_t v254 = (char *)&v241 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000082B4(&qword_10012D448);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  unint64_t v258 = (unint64_t)&v241 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v241 - v15;
  uint64_t v17 = sub_1000082B4(&qword_100129F30);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  id v20 = ((char *)&v241 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v268 = (uint64_t)&v241 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v269 = (char *)&v241 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v241 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v241 - v28;
  uint64_t v30 = sub_1000E3EE0();
  uint64_t v270 = *(void *)(v30 - 8);
  uint64_t v31 = __chkstk_darwin(v30);
  v255 = (char *)&v241 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  *(void *)&long long v267 = (char *)&v241 - v34;
  __chkstk_darwin(v33);
  v271 = (char *)&v241 - v35;
  swift_beginAccess();
  uint64_t result = (char *)swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v37 = result;
  uint64_t v272 = v30;
  uint64_t v273 = result;
  if (a1)
  {
    id v38 = [a1 expirationDate];
    if (v38)
    {
      uint64_t v39 = v38;
      sub_1000E3EB0();

      uint64_t v40 = v270;
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v270 + 56);
      uint64_t v42 = v27;
      uint64_t v43 = 0;
    }
    else
    {
      uint64_t v40 = v270;
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v270 + 56);
      uint64_t v42 = v27;
      uint64_t v43 = 1;
    }
    uint64_t v264 = v41;
    v41(v42, v43, 1, v30);
    sub_1000A7A98((uint64_t)v27, (uint64_t)v29);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v29, 1, v30) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v271, v29, v30);
      if (!a2) {
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v264 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v270 + 56);
    v264(v29, 1, 1, v30);
  }
  sub_1000E3E90();
  sub_1000147B8((uint64_t)v29, &qword_100129F30);
  if (!a2)
  {
    if (!a1)
    {
LABEL_83:
      uint64_t result = (char *)sub_1000054E4();
      if (result)
      {
        Swift::String v209 = result;
        sub_1000082B4(&qword_10012A900);
        uint64_t v210 = swift_allocObject();
        *(_OWORD *)(v210 + 16) = xmmword_1000EF780;
        uint64_t v211 = *(void *)&v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
        if (v211)
        {
          uint64_t v212 = *(void *)&v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
          uint64_t v213 = v37;
          uint64_t v214 = v211;
        }
        else
        {
          long long v267 = xmmword_1000EF780;
          sub_100089108(0, (unint64_t *)&qword_10012A908);
          uint64_t v215 = v37;
          uint64_t v216 = (void *)sub_1000E5C10();
          uint64_t v217 = swift_allocObject();
          *(_OWORD *)(v217 + 16) = v267;
          *(void *)(v217 + 56) = type metadata accessor for TVWidgetAsyncOperation();
          *(void *)(v217 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
          *(void *)(v217 + 32) = v215;
          uint64_t v218 = v215;
          uint64_t v219 = (void *)sub_1000E5C20();

          uint64_t v212 = sub_1000E5A10();
          uint64_t v214 = v220;

          uint64_t v37 = v273;
        }
        swift_bridgeObjectRetain();

        *(void *)(v210 + 56) = &type metadata for String;
        *(void *)(v210 + 64) = sub_10001D7B4();
        *(void *)(v210 + 32) = v212;
        *(void *)(v210 + 40) = v214;
        sub_1000E5B90();
        sub_1000E3F40();

        swift_bridgeObjectRelease();
        sub_1000E3ED0();
        uint64_t v221 = type metadata accessor for TVWidgetEntry();
        *(void *)&v16[*(int *)(v221 + 20)] = 0;
        v16[*(int *)(v221 + 24)] = 4;
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v221 - 8) + 56))(v16, 0, 1, v221);
        objc_sync_enter(v37);
        uint64_t v222 = v258;
        sub_100014754((uint64_t)v16, v258, &qword_10012D448);
        uint64_t v223 = (uint64_t)&v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__widgetEntry];
        swift_beginAccess();
        sub_1000838FC(v222, v223, &qword_10012D448);
        swift_endAccess();
        objc_sync_exit(v37);
        sub_1000147B8((uint64_t)v16, &qword_10012D448);
        uint64_t v224 = v37;
        uint64_t v226 = (uint64_t)v269;
        uint64_t v225 = v270;
        uint64_t v228 = v271;
        uint64_t v227 = v272;
        (*(void (**)(char *, char *, uint64_t))(v270 + 16))(v269, v271, v272);
        v264((char *)v226, 0, 1, v227);
        objc_sync_enter(v224);
        uint64_t v229 = v268;
        sub_100014754(v226, v268, &qword_100129F30);
        uint64_t v230 = (uint64_t)v224 + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__suggestedRefreshDate;
        swift_beginAccess();
        sub_1000838FC(v229, v230, &qword_100129F30);
        swift_endAccess();
        objc_sync_exit(v224);
        sub_1000147B8(v226, &qword_100129F30);
        sub_10001D16C();

        return (char *)(*(uint64_t (**)(char *, uint64_t))(v225 + 8))(v228, v227);
      }
      goto LABEL_97;
    }
LABEL_15:
    id v56 = [a1 items];
    sub_100089108(0, &qword_10012E6F8);
    unint64_t v57 = sub_1000E5AC0();

    if (v57 >> 62) {
      goto LABEL_81;
    }
    if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        uint64_t v242 = v16;
        uint64_t v16 = (char *)sub_1000A7858(a4, v57);
        *(void *)&long long v263 = v58;
        uint64_t v60 = v59;
        unint64_t v62 = v61;
        swift_bridgeObjectRelease();
        unint64_t v57 = (unint64_t)_swiftEmptyArrayStorage;
        unint64_t v276 = (unint64_t)_swiftEmptyArrayStorage;
        a4 = v62 >> 1;
        uint64_t v63 = v272;
        v265 = v16;
        if (v60 == a4) {
          goto LABEL_41;
        }
        uint64_t v262 = (unsigned int (**)(NSObject *, uint64_t, uint64_t))(v270 + 48);
        v246 = (void (**)(void, NSObject *, uint64_t))(v270 + 32);
        uint64_t v64 = (char *)(v270 + 8);
        *(void *)&long long v244 = v270 + 16;
        swift_unknownObjectRetain();
        long long v260 = xmmword_1000F2510;
        long long v245 = xmmword_1000EF780;
        long long v243 = xmmword_1000F0F50;
        uint64_t v266 = v64;
        uint64_t v259 = v20;
        unint64_t v261 = a4;
        while (v60 < a4)
        {
          uint64_t v82 = *(void **)(v263 + 8 * v60);
          type metadata accessor for TVWidgetContentViewModel();
          swift_allocObject();
          id v83 = v82;
          uint64_t v84 = sub_1000976C4(v83);
          swift_retain();
          sub_1000E5AB0();
          if (*(void *)((v276 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v276 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1000E5AF0();
          }
          sub_1000E5B00();
          sub_1000E5AE0();
          uint64_t v85 = v84 + OBJC_IVAR____TtC17TVWidgetExtension24TVWidgetContentViewModel_refreshDate;
          swift_beginAccess();
          sub_100014754(v85, (uint64_t)v20, &qword_100129F30);
          if ((*v262)(v20, 1, v63) == 1)
          {
            sub_1000147B8((uint64_t)v20, &qword_100129F30);
          }
          else
          {
            uint64_t v86 = (char *)v267;
            (*v246)(v267, v20, v63);
            if (sub_1000E3E80())
            {
              uint64_t v87 = v255;
              sub_1000E3ED0();
              char v88 = sub_1000E3E70();
              uint64_t v89 = *(void (**)(char *, uint64_t))v64;
              (*(void (**)(char *, uint64_t))v64)(v87, v63);
              if (v88)
              {
                uint64_t v90 = v271;
                v89(v271, v63);
                (*(void (**)(char *, char *, uint64_t))v244)(v90, v86, v63);
                uint64_t result = (char *)sub_1000054E4();
                if (!result) {
                  goto LABEL_96;
                }
                uint64_t v91 = result;
                sub_1000082B4(&qword_10012A900);
                uint64_t v92 = swift_allocObject();
                *(_OWORD *)(v92 + 16) = v243;
                id v93 = v273;
                uint64_t v94 = *(void *)&v273[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
                if (v94)
                {
                  uint64_t v95 = *(void *)&v273[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
                  uint64_t v96 = v273;
                  uint64_t v97 = v94;
                }
                else
                {
                  sub_100089108(0, (unint64_t *)&qword_10012A908);
                  id v98 = v93;
                  uint64_t v99 = sub_1000E5C10();
                  v241 = v89;
                  uint64_t v100 = (void *)v99;
                  uint64_t v101 = swift_allocObject();
                  *(_OWORD *)(v101 + 16) = v245;
                  *(void *)(v101 + 56) = type metadata accessor for TVWidgetAsyncOperation();
                  *(void *)(v101 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
                  *(void *)(v101 + 32) = v98;
                  id v102 = v98;
                  uint64_t v103 = (void *)sub_1000E5C20();

                  uint64_t v89 = v241;
                  uint64_t v95 = sub_1000E5A10();
                  uint64_t v97 = v104;
                }
                swift_bridgeObjectRetain();

                *(void *)(v92 + 56) = &type metadata for String;
                unint64_t v105 = sub_10001D7B4();
                *(void *)(v92 + 64) = v105;
                *(void *)(v92 + 32) = v95;
                *(void *)(v92 + 40) = v97;
                uint64_t v106 = (uint64_t)v254;
                sub_1000E3F00();
                uint64_t v107 = sub_1000E3F10();
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v106, 0, 1, v107);
                uint64_t v108 = sub_1000E3E30();
                uint64_t v110 = v109;
                sub_1000147B8(v106, &qword_10012E298);
                *(void *)(v92 + 96) = &type metadata for String;
                *(void *)(v92 + 104) = v105;
                *(void *)(v92 + 72) = v108;
                *(void *)(v92 + 80) = v110;
                sub_1000E5B90();
                sub_1000E3F40();

                swift_bridgeObjectRelease();
                v89((char *)v267, v272);
              }
              else
              {
                v89(v86, v63);
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t))v64)(v86, v63);
            }
          }
          uint64_t result = (char *)sub_1000054E4();
          if (!result)
          {
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
            goto LABEL_95;
          }
          unint64_t v57 = (unint64_t)result;
          sub_1000082B4(&qword_10012A900);
          uint64_t v111 = swift_allocObject();
          *(_OWORD *)(v111 + 16) = v260;
          id v70 = v273;
          uint64_t v112 = *(void *)&v273[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
          if (v112)
          {
            uint64_t v71 = *(void *)&v273[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
            uint64_t v113 = v273;
            uint64_t v73 = v112;
          }
          else
          {
            sub_100089108(0, (unint64_t *)&qword_10012A908);
            id v65 = v70;
            uint64_t v66 = (void *)sub_1000E5C10();
            uint64_t v67 = swift_allocObject();
            *(_OWORD *)(v67 + 16) = v245;
            *(void *)(v67 + 56) = type metadata accessor for TVWidgetAsyncOperation();
            *(void *)(v67 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
            *(void *)(v67 + 32) = v65;
            id v68 = v65;
            uint64_t v69 = (void *)sub_1000E5C20();

            id v70 = v273;
            uint64_t v71 = sub_1000E5A10();
            uint64_t v73 = v72;
          }
          ++v60;
          swift_bridgeObjectRetain();

          *(void *)(v111 + 56) = &type metadata for String;
          unint64_t v74 = sub_10001D7B4();
          *(void *)(v111 + 64) = v74;
          *(void *)(v111 + 32) = v71;
          *(void *)(v111 + 40) = v73;
          id v75 = [v83 identifier];
          uint64_t v76 = sub_1000E5A10();
          uint64_t v78 = v77;

          *(void *)(v111 + 96) = &type metadata for String;
          *(void *)(v111 + 104) = v74;
          *(void *)(v111 + 72) = v76;
          *(void *)(v111 + 80) = v78;
          id v79 = [v83 title];
          uint64_t v37 = (char *)sub_1000E5A10();
          uint64_t v81 = v80;

          *(void *)(v111 + 136) = &type metadata for String;
          *(void *)(v111 + 144) = v74;
          *(void *)(v111 + 112) = v37;
          *(void *)(v111 + 120) = v81;
          sub_1000E5B90();
          sub_1000E3F40();

          swift_release();
          swift_bridgeObjectRelease();
          a4 = v261;
          uint64_t v63 = v272;
          uint64_t v16 = v265;
          uint64_t v64 = v266;
          id v20 = v259;
          if (v261 == v60)
          {
            swift_unknownObjectRelease();
            unint64_t v57 = v276;
            uint64_t v37 = v273;
LABEL_41:
            uint64_t v129 = (uint64_t)v242;
            sub_1000E3ED0();
            uint64_t v130 = type metadata accessor for TVWidgetEntry();
            *(void *)(v129 + *(int *)(v130 + 20)) = v57;
            *(unsigned char *)(v129 + *(int *)(v130 + 24)) = 4;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v129, 0, 1, v130);
            swift_bridgeObjectRetain();
            objc_sync_enter(v37);
            uint64_t v131 = v258;
            sub_100014754(v129, v258, &qword_10012D448);
            uint64_t v132 = (uint64_t)&v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__widgetEntry];
            swift_beginAccess();
            sub_1000838FC(v131, v132, &qword_10012D448);
            swift_endAccess();
            objc_sync_exit(v37);
            sub_1000147B8(v129, &qword_10012D448);
            uint64_t v133 = (uint64_t)v269;
            uint64_t v134 = v270 + 16;
            (*(void (**)(char *, char *, uint64_t))(v270 + 16))(v269, v271, v63);
            v246 = (void (**)(void, NSObject *, uint64_t))(v134 + 40);
            v264((char *)v133, 0, 1, v63);
            objc_sync_enter(v37);
            uint64_t v135 = v268;
            sub_100014754(v133, v268, &qword_100129F30);
            uint64_t v136 = (uint64_t)&v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__suggestedRefreshDate];
            swift_beginAccess();
            uint64_t v254 = (char *)v136;
            sub_1000838FC(v135, v136, &qword_100129F30);
            swift_endAccess();
            objc_sync_exit(v37);
            sub_1000147B8(v133, &qword_100129F30);
            LOBYTE(v134) = [v37 isCancelled];
            uint64_t result = (char *)sub_1000054E4();
            char v137 = result;
            if (v134)
            {
              if (result)
              {
                swift_bridgeObjectRelease();
                sub_1000082B4(&qword_10012A900);
                uint64_t v138 = swift_allocObject();
                *(_OWORD *)(v138 + 16) = xmmword_1000EF780;
                uint64_t v139 = *(void *)&v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
                if (v139)
                {
                  uint64_t v140 = *(void *)&v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
                  uint64_t v141 = v37;
                  uint64_t v142 = v139;
                }
                else
                {
                  long long v267 = xmmword_1000EF780;
                  sub_100089108(0, (unint64_t *)&qword_10012A908);
                  uint64_t v150 = v37;
                  uint64_t v151 = (void *)sub_1000E5C10();
                  uint64_t v152 = swift_allocObject();
                  *(_OWORD *)(v152 + 16) = v267;
                  *(void *)(v152 + 56) = type metadata accessor for TVWidgetAsyncOperation();
                  *(void *)(v152 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
                  *(void *)(v152 + 32) = v150;
                  uint64_t v153 = v150;
                  uint64_t v154 = (void *)sub_1000E5C20();

                  uint64_t v140 = sub_1000E5A10();
                  uint64_t v142 = v155;

                  uint64_t v37 = v273;
                }
                swift_bridgeObjectRetain();

                *(void *)(v138 + 56) = &type metadata for String;
                *(void *)(v138 + 64) = sub_10001D7B4();
                *(void *)(v138 + 32) = v140;
                *(void *)(v138 + 40) = v142;
                sub_1000E5B90();
                sub_1000E3F40();

                swift_bridgeObjectRelease();
                uint64_t v156 = (uint64_t)v269;
                sub_1000E3E90();
                uint64_t v157 = v272;
                v264((char *)v156, 0, 1, v272);
                objc_sync_enter(v37);
                uint64_t v158 = v268;
                sub_100014754(v156, v268, &qword_100129F30);
                uint64_t v159 = (uint64_t)v254;
                swift_beginAccess();
                sub_1000838FC(v158, v159, &qword_100129F30);
                swift_endAccess();
                objc_sync_exit(v37);
                sub_1000147B8(v156, &qword_100129F30);
                sub_10001D16C();
                swift_unknownObjectRelease();

                return (char *)(*(uint64_t (**)(char *, uint64_t))(v270 + 8))(v271, v157);
              }
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
              return result;
            }
            if (!result) {
              goto LABEL_99;
            }
            uint64_t v143 = sub_1000082B4(&qword_10012A900);
            uint64_t v144 = swift_allocObject();
            long long v263 = xmmword_1000F0F50;
            *(_OWORD *)(v144 + 16) = xmmword_1000F0F50;
            uint64_t v145 = (uint64_t *)&v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
            uint64_t v146 = *(void *)&v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
            if (v146)
            {
              uint64_t v147 = *v145;
              uint64_t v148 = v37;
              uint64_t v149 = v146;
            }
            else
            {
              sub_100089108(0, (unint64_t *)&qword_10012A908);
              uint64_t v160 = v37;
              char v161 = (void *)sub_1000E5C10();
              uint64_t v162 = swift_allocObject();
              *(_OWORD *)(v162 + 16) = xmmword_1000EF780;
              *(void *)(v162 + 56) = type metadata accessor for TVWidgetAsyncOperation();
              *(void *)(v162 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
              *(void *)(v162 + 32) = v160;
              uint64_t v163 = v160;
              uint64_t v164 = (void *)sub_1000E5C20();

              uint64_t v37 = v273;
              uint64_t v147 = sub_1000E5A10();
              uint64_t v149 = v165;
            }
            swift_bridgeObjectRetain();

            *(void *)(v144 + 56) = &type metadata for String;
            uint64_t v262 = (unsigned int (**)(NSObject *, uint64_t, uint64_t))sub_10001D7B4();
            *(void *)(v144 + 64) = v262;
            *(void *)(v144 + 32) = v147;
            *(void *)(v144 + 40) = v149;
            unint64_t v166 = v276;
            if (v276 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v167 = sub_1000E5D70();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v167 = *(void *)((v276 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            *(void *)(v144 + 96) = &type metadata for Int;
            *(void *)(v144 + 104) = &protocol witness table for Int;
            *(void *)(v144 + 72) = v167;
            sub_1000E5B90();
            sub_1000E3F40();

            swift_bridgeObjectRelease();
            id v20 = dispatch_group_create();
            if (v166 >> 62)
            {
              swift_bridgeObjectRetain();
              unint64_t v57 = sub_1000E5D70();
              if (v57) {
                goto LABEL_55;
              }
            }
            else
            {
              unint64_t v57 = *(void *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v57)
              {
LABEL_55:
                *(void *)&long long v260 = &v37[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation_context];
                unint64_t v261 = v166 & 0xC000000000000001;
                ++v247;
                uint64_t v168 = 4;
                long long v244 = xmmword_1000EF780;
                uint64_t v259 = v143;
                unint64_t v258 = v166;
                v255 = (char *)v57;
                *(void *)&long long v245 = v20;
                do
                {
                  uint64_t v16 = (char *)(v168 - 4);
                  if (v261)
                  {
                    uint64_t v183 = sub_1000E5CF0();
                    a4 = v168 - 3;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_80;
                    }
                  }
                  else
                  {
                    uint64_t v183 = swift_retain();
                    a4 = v168 - 3;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_80;
                    }
                  }
                  *(void *)&long long v267 = v183;
                  dispatch_group_enter(v20);
                  unsigned __int8 v184 = [v37 isCancelled];
                  uint64_t v266 = (char *)a4;
                  if (v184)
                  {
                    uint64_t result = (char *)sub_1000054E4();
                    if (!result) {
                      goto LABEL_93;
                    }
                    uint64_t v185 = result;
                    uint64_t v186 = swift_allocObject();
                    *(_OWORD *)(v186 + 16) = v263;
                    uint64_t v187 = v145[1];
                    if (v187)
                    {
                      uint64_t v188 = *v145;
                      uint64_t v189 = v37;
                      uint64_t v190 = v187;
                    }
                    else
                    {
                      sub_100089108(0, (unint64_t *)&qword_10012A908);
                      uint64_t v194 = v37;
                      uint64_t v195 = (void *)sub_1000E5C10();
                      uint64_t v196 = swift_allocObject();
                      *(_OWORD *)(v196 + 16) = v244;
                      *(void *)(v196 + 56) = type metadata accessor for TVWidgetAsyncOperation();
                      *(void *)(v196 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
                      *(void *)(v196 + 32) = v194;
                      uint64_t v197 = v194;
                      uint64_t v198 = (void *)sub_1000E5C20();

                      uint64_t v37 = v273;
                      uint64_t v188 = sub_1000E5A10();
                      uint64_t v190 = v199;
                    }
                    swift_bridgeObjectRetain();

                    uint64_t v200 = v262;
                    *(void *)(v186 + 56) = &type metadata for String;
                    *(void *)(v186 + 64) = v200;
                    *(void *)(v186 + 32) = v188;
                    *(void *)(v186 + 40) = v190;
                    *(void *)(v186 + 96) = &type metadata for Int;
                    *(void *)(v186 + 104) = &protocol witness table for Int;
                    *(void *)(v186 + 72) = v16;
                    sub_1000E5B90();
                    sub_1000E3F40();

                    swift_bridgeObjectRelease();
                    uint64_t v201 = (uint64_t)v269;
                    sub_1000E3E90();
                    v264((char *)v201, 0, 1, v272);
                    objc_sync_enter(v37);
                    uint64_t v202 = v268;
                    sub_100014754(v201, v268, &qword_100129F30);
                    uint64_t v203 = (uint64_t)v254;
                    swift_beginAccess();
                    sub_1000838FC(v202, v203, &qword_100129F30);
                    swift_endAccess();
                    objc_sync_exit(v37);
                    sub_1000147B8(v201, &qword_100129F30);
                    id v20 = v245;
                    dispatch_group_leave((dispatch_group_t)v245);
                    unint64_t v57 = v267;
                  }
                  else
                  {
                    uint64_t v191 = v256;
                    sub_1000E5830();
                    swift_getKeyPath();
                    uint64_t v192 = sub_1000E5810();
                    swift_release();
                    (*v247)(v191, v257);
                    if (v192)
                    {
                      if (*(void *)(v192 + 16)) {
                        double v193 = *(double *)(v192 + 32);
                      }
                      else {
                        double v193 = 3.0;
                      }
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      double v193 = 3.0;
                    }
                    uint64_t result = (char *)sub_1000054E4();
                    if (!result) {
                      goto LABEL_94;
                    }
                    uint64_t v204 = result;
                    uint64_t v205 = swift_allocObject();
                    *(_OWORD *)(v205 + 16) = v263;
                    uint64_t v206 = v145[1];
                    if (v206)
                    {
                      uint64_t v174 = *v145;
                      int v207 = v37;
                      uint64_t v176 = v206;
                    }
                    else
                    {
                      sub_100089108(0, (unint64_t *)&qword_10012A908);
                      uint64_t v169 = v37;
                      uint64_t v170 = (void *)sub_1000E5C10();
                      uint64_t v171 = swift_allocObject();
                      *(_OWORD *)(v171 + 16) = v244;
                      *(void *)(v171 + 56) = type metadata accessor for TVWidgetAsyncOperation();
                      *(void *)(v171 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
                      *(void *)(v171 + 32) = v169;
                      uint64_t v172 = v169;
                      uint64_t v173 = (void *)sub_1000E5C20();

                      uint64_t v37 = v273;
                      uint64_t v174 = sub_1000E5A10();
                      uint64_t v176 = v175;
                    }
                    swift_bridgeObjectRetain();

                    uint64_t v177 = v262;
                    *(void *)(v205 + 56) = &type metadata for String;
                    *(void *)(v205 + 64) = v177;
                    *(void *)(v205 + 32) = v174;
                    *(void *)(v205 + 40) = v176;
                    *(void *)(v205 + 96) = &type metadata for Int;
                    *(void *)(v205 + 104) = &protocol witness table for Int;
                    *(void *)(v205 + 72) = v16;
                    sub_1000E5B90();
                    sub_1000E3F40();

                    swift_bridgeObjectRelease();
                    sub_1000E5800();
                    *(double *)&uint64_t v179 = v193 * v178;
                    uint64_t v180 = swift_allocObject();
                    swift_unknownObjectWeakInit();
                    swift_retain();
                    uint64_t v181 = v20;
                    uint64_t v182 = v179;
                    unint64_t v57 = v267;
                    sub_100097C3C(v182, 0, 0, 0, v267, v180, v168 - 4, v181);

                    swift_release_n();
                  }
                  swift_release();
                  ++v168;
                }
                while (v266 != v255);
              }
            }
            swift_bridgeObjectRelease();
            sub_100089108(0, (unint64_t *)&qword_10012C3F0);
            uint64_t v231 = (void *)sub_1000E5BD0();
            uint64_t v232 = swift_allocObject();
            swift_unknownObjectWeakInit();
            unint64_t v233 = v276;
            uint64_t v234 = swift_allocObject();
            *(void *)(v234 + 16) = v232;
            *(void *)(v234 + 24) = v233;
            aBlock[4] = sub_1000A7A90;
            aBlock[5] = v234;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1000864FC;
            aBlock[3] = &unk_100123780;
            uint64_t v235 = v20;
            uint64_t v236 = v37;
            uint64_t v237 = _Block_copy(aBlock);
            swift_retain();
            uint64_t v238 = v248;
            sub_1000E5030();
            uint64_t v274 = _swiftEmptyArrayStorage;
            sub_1000A7C94((unint64_t *)&qword_10012C3F8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            sub_1000082B4(&qword_10012C400);
            sub_100054074();
            uint64_t v239 = v250;
            uint64_t v240 = v253;
            sub_1000E5CA0();
            sub_1000E5BB0();
            _Block_release(v237);

            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v252 + 8))(v239, v240);
            (*(void (**)(char *, uint64_t))(v249 + 8))(v238, v251);
            (*(void (**)(char *, uint64_t))(v270 + 8))(v271, v272);
            swift_release();
            return (char *)swift_release();
          }
        }
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        swift_bridgeObjectRetain();
        uint64_t v208 = sub_1000E5D70();
        swift_bridgeObjectRelease();
      }
      while (v208);
    }
    swift_bridgeObjectRelease();
    goto LABEL_83;
  }
LABEL_12:
  uint64_t v44 = (uint64_t)v16;
  uint64_t result = (char *)sub_1000054E4();
  if (!result)
  {
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  uint64_t v45 = result;
  sub_1000082B4(&qword_10012A900);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1000F0F50;
  aBlock[0] = a2;
  sub_1000082B4(&qword_10012E700);
  uint64_t v47 = sub_1000E5C40();
  uint64_t v49 = v48;
  *(void *)(v46 + 56) = &type metadata for String;
  unint64_t v50 = sub_10001D7B4();
  *(void *)(v46 + 64) = v50;
  *(void *)(v46 + 32) = v47;
  *(void *)(v46 + 40) = v49;
  uint64_t v51 = v273;
  uint64_t v52 = *(void *)&v273[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8];
  if (v52)
  {
    uint64_t v53 = *(void *)&v273[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier];
    Swift::String v54 = v273;
    uint64_t v55 = v52;
  }
  else
  {
    sub_100089108(0, (unint64_t *)&qword_10012A908);
    id v114 = v51;
    long long v115 = (void *)sub_1000E5C10();
    uint64_t v116 = swift_allocObject();
    *(_OWORD *)(v116 + 16) = xmmword_1000EF780;
    *(void *)(v116 + 56) = type metadata accessor for TVWidgetAsyncOperation();
    *(void *)(v116 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
    *(void *)(v116 + 32) = v114;
    char v117 = v114;
    char v118 = (void *)sub_1000E5C20();

    uint64_t v53 = sub_1000E5A10();
    uint64_t v55 = v119;

    uint64_t v51 = v273;
  }
  swift_bridgeObjectRetain();

  *(void *)(v46 + 96) = &type metadata for String;
  *(void *)(v46 + 104) = v50;
  *(void *)(v46 + 72) = v53;
  *(void *)(v46 + 80) = v55;
  sub_1000E5B90();
  sub_1000E3F40();

  swift_bridgeObjectRelease();
  swift_errorRetain();
  objc_sync_enter(v51);
  *(void *)&v51[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__error] = a2;
  swift_errorRetain();
  swift_errorRelease();
  objc_sync_exit(v51);
  swift_errorRelease();
  sub_1000E3ED0();
  uint64_t v120 = type metadata accessor for TVWidgetEntry();
  *(void *)(v44 + *(int *)(v120 + 20)) = 0;
  *(unsigned char *)(v44 + *(int *)(v120 + 24)) = 2;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v44, 0, 1, v120);
  objc_sync_enter(v51);
  uint64_t v121 = v258;
  sub_100014754(v44, v258, &qword_10012D448);
  uint64_t v122 = (uint64_t)&v51[OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__widgetEntry];
  swift_beginAccess();
  sub_1000838FC(v121, v122, &qword_10012D448);
  swift_endAccess();
  objc_sync_exit(v51);
  sub_1000147B8(v44, &qword_10012D448);
  uint64_t v123 = (uint64_t)v269;
  sub_1000E3E90();
  char v124 = v51;
  uint64_t v125 = v270;
  uint64_t v126 = v272;
  v264((char *)v123, 0, 1, v272);
  objc_sync_enter(v124);
  uint64_t v127 = v268;
  sub_100014754(v123, v268, &qword_100129F30);
  uint64_t v128 = (uint64_t)v124 + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetFetchOperation__suggestedRefreshDate;
  swift_beginAccess();
  sub_1000838FC(v127, v128, &qword_100129F30);
  swift_endAccess();
  objc_sync_exit(v124);
  sub_1000147B8(v123, &qword_100129F30);
  sub_10001D16C();

  return (char *)(*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v271, v126);
}

void sub_1000A70A8(uint64_t a1, uint64_t a2, NSObject *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  uint64_t v6 = (void *)Strong;
  uint64_t v7 = (uint64_t *)(Strong + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier);
  uint64_t v8 = *(void *)(Strong + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8);
  if (v8)
  {
    uint64_t v9 = *v7;
    uint64_t v10 = v8;
  }
  else
  {
    sub_100089108(0, (unint64_t *)&qword_10012A908);
    uint64_t v11 = (void *)sub_1000E5C10();
    sub_1000082B4(&qword_10012A900);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1000EF780;
    *(void *)(v12 + 56) = type metadata accessor for TVWidgetAsyncOperation();
    *(void *)(v12 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
    *(void *)(v12 + 32) = v6;
    id v13 = v6;
    uint64_t v14 = (void *)sub_1000E5C20();

    uint64_t v9 = sub_1000E5A10();
    uint64_t v10 = v15;
  }
  swift_bridgeObjectRetain();

  id v16 = sub_1000054E4();
  if (v16)
  {
    uint64_t v17 = v16;
    sub_1000082B4(&qword_10012A900);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1000F0F50;
    *(void *)(v18 + 56) = &type metadata for String;
    unint64_t v19 = sub_10001D7B4();
    *(void *)(v18 + 32) = v9;
    *(void *)(v18 + 40) = v10;
    *(void *)(v18 + 96) = &type metadata for Int;
    *(void *)(v18 + 104) = &protocol witness table for Int;
    *(void *)(v18 + 64) = v19;
    *(void *)(v18 + 72) = a2;
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
LABEL_7:
    dispatch_group_leave(a3);
    return;
  }
  __break(1u);
}

void sub_1000A72B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000082B4(&qword_10012D448);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = (uint64_t *)(Strong + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier);
    uint64_t v9 = *(void *)(Strong + OBJC_IVAR____TtC17TVWidgetExtension22TVWidgetAsyncOperation__logIdentifier + 8);
    if (v9)
    {
      uint64_t v10 = *v8;
      uint64_t v11 = v9;
    }
    else
    {
      sub_100089108(0, (unint64_t *)&qword_10012A908);
      uint64_t v12 = (void *)sub_1000E5C10();
      sub_1000082B4(&qword_10012A900);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1000EF780;
      *(void *)(v13 + 56) = type metadata accessor for TVWidgetAsyncOperation();
      *(void *)(v13 + 64) = sub_1000A7C94((unint64_t *)&qword_10012A910, (void (*)(uint64_t))type metadata accessor for TVWidgetAsyncOperation);
      *(void *)(v13 + 32) = v7;
      id v14 = v7;
      uint64_t v15 = (void *)sub_1000E5C20();

      uint64_t v10 = sub_1000E5A10();
      uint64_t v11 = v16;
    }
    swift_bridgeObjectRetain();

    id v17 = sub_1000054E4();
    if (!v17)
    {
      __break(1u);
      return;
    }
    uint64_t v18 = v17;
    sub_1000082B4(&qword_10012A900);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1000EF780;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_10001D7B4();
    *(void *)(v19 + 32) = v10;
    *(void *)(v19 + 40) = v11;
    sub_1000E5B90();
    sub_1000E3F40();

    swift_bridgeObjectRelease();
  }
  if (qword_100129D60 != -1) {
    swift_once();
  }
  sub_1000E3ED0();
  uint64_t v20 = type metadata accessor for TVWidgetEntry();
  *(void *)&v5[*(int *)(v20 + 20)] = a2;
  v5[*(int *)(v20 + 24)] = 4;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 0, 1, v20);
  swift_bridgeObjectRetain();
  sub_100083558((uint64_t)v5);
  sub_1000147B8((uint64_t)v5, &qword_10012D448);
  swift_beginAccess();
  uint64_t v21 = swift_unknownObjectWeakLoadStrong();
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    sub_10001D16C();
  }
}

void sub_1000A75C8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1000A7684()
{
  sub_1000E5860();
  if (v0 <= 0x3F)
  {
    sub_1000831FC(319, &qword_10012D440, (void (*)(uint64_t))type metadata accessor for TVWidgetEntry);
    if (v1 <= 0x3F)
    {
      sub_1000831FC(319, (unint64_t *)&qword_10012AB40, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1000A77C8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A7800()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

char *sub_1000A7838(void *a1, uint64_t a2)
{
  return sub_1000A4D08(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1000A7840(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000A7850()
{
  return swift_release();
}

uint64_t sub_1000A7858(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000E5D70();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000E5D70();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1000E5D70();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_100089108(0, &qword_10012E6F8);
    Swift::Int v10 = 0;
    do
    {
      Swift::Int v11 = v10 + 1;
      sub_1000E5CE0(v10);
      Swift::Int v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1000E5D80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_1000A79FC@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E4350();
  *a1 = v3;
  return result;
}

uint64_t sub_1000A7A28()
{
  return sub_1000E4360();
}

uint64_t sub_1000A7A50()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000A7A90()
{
  sub_1000A72B0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000A7A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000082B4(&qword_100129F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A7B00(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000E5D70();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000E5D70();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1000E5D70();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for TVWidgetContentViewModel();
    Swift::Int v10 = 0;
    do
    {
      Swift::Int v11 = v10 + 1;
      sub_1000E5CE0(v10);
      Swift::Int v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1000E5D80();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_1000A7C94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for TVWidgetImageView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  unint64_t v2 = *(void **)(a1 + 128);
}

uint64_t initializeWithCopy for TVWidgetImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  uint64_t v7 = *(void **)(a2 + 128);
  uint64_t v6 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = v7;
  *(void *)(a1 + 136) = v6;
  long long v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  id v9 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  id v10 = v7;
  return a1;
}

uint64_t assignWithCopy for TVWidgetImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  long long v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v7 = *(void **)(a2 + 128);
  long long v8 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = v7;
  id v9 = v7;

  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  return a1;
}

__n128 initializeWithTake for TVWidgetImageView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for TVWidgetImageView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVWidgetImageView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVWidgetImageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetImageView()
{
  return &type metadata for TVWidgetImageView;
}

uint64_t sub_1000A80F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A8114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012E720);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1000082B4(&qword_10012E728);
  __chkstk_darwin(v145);
  uint64_t v146 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000082B4(&qword_10012E730);
  __chkstk_darwin(v8 - 8);
  uint64_t v144 = (uint64_t)v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1000E4230();
  __chkstk_darwin(v140);
  char v137 = (char *)v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000082B4(&qword_10012E738);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000E4CE0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000082B4(&qword_10012E740);
  uint64_t v132 = *(void *)(v18 - 8);
  uint64_t v133 = v18;
  __chkstk_darwin(v18);
  uint64_t v129 = (char *)v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_1000082B4(&qword_10012B1E0);
  __chkstk_darwin(v130);
  uint64_t v21 = (char *)v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_1000082B4(&qword_10012B1D0);
  __chkstk_darwin(v131);
  uint64_t v23 = (char *)v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_1000082B4(&qword_10012B1C0);
  __chkstk_darwin(v136);
  uint64_t v134 = (uint64_t)v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_1000082B4(&qword_10012B1B0);
  __chkstk_darwin(v135);
  uint64_t v138 = (uint64_t)v119 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_1000082B4(&qword_10012B1A0);
  uint64_t v126 = *(void *)(v139 - 8);
  uint64_t v26 = __chkstk_darwin(v139);
  uint64_t v127 = v27;
  uint64_t v128 = (uint64_t)v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v143 = (char *)v119 - v28;
  uint64_t v29 = sub_1000082B4(&qword_10012B158);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v141 = (char *)v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v142 = (uint64_t)v119 - v32;
  uint64_t v33 = sub_1000082B4(&qword_10012B170);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v34);
  __chkstk_darwin(v35);
  uint64_t v147 = (char *)v119 - v38;
  uint64_t v39 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v121 = v37;
    uint64_t v123 = v36;
    char v124 = v6;
    uint64_t v125 = a2;
    id v122 = v39;
    sub_1000E4CC0();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Image.ResizingMode.stretch(_:), v14);
    sub_1000E4D10();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_1000E55F0();
    uint64_t v40 = sub_1000E5600();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v13, 0, 1, v40);
    uint64_t v41 = v129;
    sub_1000E4D00();
    swift_release();
    sub_1000147B8((uint64_t)v13, &qword_10012E738);
    long long v42 = *(_OWORD *)(a1 + 160);
    long long v186 = *(_OWORD *)(a1 + 144);
    long long v187 = v42;
    long long v188 = *(_OWORD *)(a1 + 176);
    long long v43 = *(_OWORD *)(a1 + 96);
    long long v182 = *(_OWORD *)(a1 + 80);
    long long v183 = v43;
    long long v44 = *(_OWORD *)(a1 + 112);
    long long v185 = *(_OWORD *)(a1 + 128);
    long long v184 = v44;
    long long v45 = *(_OWORD *)(a1 + 32);
    long long v178 = *(_OWORD *)(a1 + 16);
    long long v179 = v45;
    long long v47 = *(_OWORD *)(a1 + 48);
    long long v46 = *(_OWORD *)(a1 + 64);
    uint64_t v120 = a1;
    long long v181 = v46;
    long long v180 = v47;
    uint64_t v48 = v178;
    char v49 = BYTE8(v46);
    v119[3] = BYTE8(v46);
    uint64_t v51 = v132;
    uint64_t v50 = v133;
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v21, v41, v133);
    uint64_t v52 = &v21[*(int *)(v130 + 36)];
    *(void *)uint64_t v52 = v48;
    v52[8] = 0;
    v52[9] = v49;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v41, v50);
    uint64_t v53 = v181;
    uint64_t v54 = v140;
    uint64_t v55 = v137;
    id v56 = &v137[*(int *)(v140 + 20)];
    uint64_t v57 = enum case for RoundedCornerStyle.continuous(_:);
    LODWORD(v133) = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v58 = sub_1000E4580();
    uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 104);
    v59(v56, v57, v58);
    *(void *)uint64_t v55 = v53;
    *((void *)v55 + 1) = v53;
    uint64_t v60 = (uint64_t)&v23[*(int *)(v131 + 36)];
    sub_1000A2FAC((uint64_t)v55, v60);
    *(_WORD *)(v60 + *(int *)(sub_1000082B4(&qword_10012B1F0) + 36)) = 256;
    sub_100014754((uint64_t)v21, (uint64_t)v23, &qword_10012B1E0);
    sub_1000A3010((uint64_t)v55);
    sub_1000147B8((uint64_t)v21, &qword_10012B1E0);
    char v61 = sub_1000E4750();
    uint64_t v62 = v134;
    sub_100014754((uint64_t)v23, v134, &qword_10012B1D0);
    *(unsigned char *)(v62 + *(int *)(v136 + 36)) = v61;
    sub_1000147B8((uint64_t)v23, &qword_10012B1D0);
    uint64_t v63 = v180;
    uint64_t v64 = *((void *)&v179 + 1);
    uint64_t v65 = *((void *)&v180 + 1);
    uint64_t v66 = v138;
    sub_100014754(v62, v138, &qword_10012B1C0);
    uint64_t v67 = (void *)(v66 + *(int *)(v135 + 36));
    *uint64_t v67 = v63;
    v67[1] = v64;
    v67[2] = 0;
    v67[3] = v65;
    swift_retain();
    sub_1000147B8(v62, &qword_10012B1C0);
    v59(&v55[*(int *)(v54 + 20)], v133, v58);
    *(void *)uint64_t v55 = v53;
    *((void *)v55 + 1) = v53;
    uint64_t v68 = *((void *)&v178 + 1);
    swift_retain();
    sub_1000E4000();
    uint64_t v69 = v144;
    sub_1000A2FAC((uint64_t)v55, v144);
    uint64_t v70 = v69 + *(int *)(sub_1000082B4(&qword_10012E750) + 36);
    long long v71 = v190;
    *(_OWORD *)uint64_t v70 = v189;
    *(_OWORD *)(v70 + 16) = v71;
    *(void *)(v70 + 32) = v191;
    uint64_t v72 = sub_1000082B4(&qword_10012E758);
    *(void *)(v69 + *(int *)(v72 + 52)) = v68;
    *(_WORD *)(v69 + *(int *)(v72 + 56)) = 256;
    uint64_t v73 = sub_1000E4F50();
    uint64_t v75 = v74;
    uint64_t v76 = (uint64_t *)(v69 + *(int *)(sub_1000082B4(&qword_10012E760) + 36));
    uint64_t *v76 = v73;
    v76[1] = v75;
    sub_1000A3010((uint64_t)v55);
    uint64_t v77 = sub_1000E4F50();
    uint64_t v79 = v78;
    uint64_t v80 = (uint64_t)v143;
    uint64_t v81 = (uint64_t)&v143[*(int *)(v139 + 36)];
    sub_100014754(v69, v81, &qword_10012E730);
    uint64_t v82 = (uint64_t *)(v81 + *(int *)(sub_1000082B4(&qword_10012B200) + 36));
    *uint64_t v82 = v77;
    v82[1] = v79;
    sub_100014754(v66, v80, &qword_10012B1B0);
    sub_1000147B8(v69, &qword_10012E730);
    sub_1000147B8(v66, &qword_10012B1B0);
    if (sub_1000E3FE0())
    {
      uint64_t v83 = v128;
      sub_100014754(v80, v128, &qword_10012B1A0);
      unint64_t v84 = (*(unsigned __int8 *)(v126 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
      uint64_t v85 = swift_allocObject();
      sub_100014B08(v83, v85 + v84, &qword_10012B1A0);
      uint64_t v86 = v146;
      *uint64_t v146 = sub_1000A9558;
      v86[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v85;
    }
    else
    {
      sub_100014754(v80, (uint64_t)v146, &qword_10012B1A0);
    }
    uint64_t v90 = (uint64_t)v147;
    swift_storeEnumTagMultiPayload();
    sub_1000082B4(&qword_10012B190);
    sub_100014AC4(&qword_10012B188, &qword_10012B190);
    sub_100030EC8();
    uint64_t v91 = (uint64_t)v141;
    sub_1000E4690();
    uint64_t v92 = v142;
    sub_100014B08(v91, v142, &qword_10012B158);
    sub_1000147B8(v80, &qword_10012B1A0);
    char v93 = (void)v182 != 0;
    uint64_t v94 = v120;
    sub_100052A18(v120);
    uint64_t v95 = v121;
    sub_100030A40(v93, v92, v94, v121);
    sub_1000147B8(v92, &qword_10012B158);
    sub_100014B08(v95, v90, &qword_10012B170);
    uint64_t v96 = (uint64_t)v124;
    if (*(unsigned char *)(v94 + 8))
    {
      v161[0] = xmmword_1000F73D0;
      sub_1000528F4((uint64_t)&v178);
      type metadata accessor for CGSize(0);
      sub_1000E4DA0();
      uint64_t v97 = v177[0];
      uint64_t v98 = v177[1];
      uint64_t v99 = v177[2];
      unsigned __int8 v100 = sub_1000E4780();
      char v101 = sub_1000E4790();
      sub_1000E4790();
      if (sub_1000E4790() != v100) {
        char v101 = sub_1000E4790();
      }
      sub_1000E3FB0();
      uint64_t v103 = v102;
      uint64_t v105 = v104;
      uint64_t v107 = v106;
      uint64_t v109 = v108;
      unsigned __int8 v110 = sub_1000E4760();
      char v111 = sub_1000E4790();
      sub_1000E4790();
      if (sub_1000E4790() != v110) {
        char v111 = sub_1000E4790();
      }
      long long v158 = v186;
      long long v159 = v187;
      long long v160 = v188;
      long long v154 = v182;
      long long v155 = v183;
      long long v156 = v184;
      long long v157 = v185;
      long long v150 = v178;
      long long v151 = v179;
      long long v152 = v180;
      long long v153 = v181;
      char v148 = 0;
      sub_1000E3FB0();
      v149[0] = 0;
      v161[8] = v158;
      v161[9] = v159;
      v161[10] = v160;
      v161[4] = v154;
      v161[5] = v155;
      v161[6] = v156;
      v161[7] = v157;
      v161[0] = v150;
      v161[1] = v151;
      v161[2] = v152;
      v161[3] = v153;
      uint64_t v162 = v97;
      uint64_t v163 = v98;
      uint64_t v164 = v99;
      char v165 = v101;
      uint64_t v166 = v103;
      uint64_t v167 = v105;
      uint64_t v168 = v107;
      uint64_t v169 = v109;
      char v170 = v148;
      char v171 = v111;
      uint64_t v172 = v112;
      uint64_t v173 = v113;
      uint64_t v174 = v114;
      uint64_t v175 = v115;
      char v176 = 0;
      nullsub_1(v161);
    }
    else
    {
      sub_1000A91D8((uint64_t)v161);
    }
    sub_100014B08((uint64_t)v161, (uint64_t)v177, &qword_10012E768);
    uint64_t v116 = v123;
    sub_100014754(v90, v123, &qword_10012B170);
    sub_100014B08((uint64_t)v177, (uint64_t)v149, &qword_10012E768);
    sub_100014754(v116, v96, &qword_10012B170);
    uint64_t v117 = v96 + *(int *)(sub_1000082B4(&qword_10012E770) + 48);
    sub_100014B08((uint64_t)v149, (uint64_t)&v150, &qword_10012E768);
    sub_1000A9284((uint64_t)&v150, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000A9208);

    sub_100014B08((uint64_t)&v150, v117, &qword_10012E768);
    sub_1000147B8(v90, &qword_10012B170);
    sub_100014B08((uint64_t)v149, (uint64_t)v161, &qword_10012E768);
    sub_1000A9284((uint64_t)v161, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000A9318);
    sub_1000147B8(v116, &qword_10012B170);
    uint64_t v118 = sub_1000082B4(&qword_10012E748);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v96, 0, 1, v118);
    return sub_100014B08(v96, v125, &qword_10012E720);
  }
  else
  {
    uint64_t v87 = sub_1000082B4(&qword_10012E748);
    char v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56);
    return v88(a2, 1, 1, v87);
  }
}

uint64_t sub_1000A9044@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012E778);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E40F0();
  sub_1000E4F30();
  sub_1000E40A0();
  sub_100014754(a1, (uint64_t)v7, &qword_10012B1A0);
  uint64_t v8 = &v7[*(int *)(v5 + 44)];
  long long v9 = v11[1];
  *(_OWORD *)uint64_t v8 = v11[0];
  *((_OWORD *)v8 + 1) = v9;
  *((_OWORD *)v8 + 2) = v11[2];
  sub_100014754((uint64_t)v7, a2, &qword_10012E778);
  *(_WORD *)(a2 + *(int *)(sub_1000082B4(&qword_10012E780) + 36)) = 0;
  return sub_1000147B8((uint64_t)v7, &qword_10012E778);
}

uint64_t sub_1000A915C@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = v1[9];
  v12[8] = v1[8];
  v12[9] = v3;
  long long v4 = v1[11];
  v12[10] = v1[10];
  v12[11] = v4;
  long long v5 = v1[5];
  v12[4] = v1[4];
  v12[5] = v5;
  long long v6 = v1[7];
  v12[6] = v1[6];
  v12[7] = v6;
  long long v7 = v1[1];
  v12[0] = *v1;
  v12[1] = v7;
  long long v8 = v1[3];
  void v12[2] = v1[2];
  v12[3] = v8;
  *a1 = sub_1000E4F00();
  a1[1] = v9;
  uint64_t v10 = sub_1000082B4(&qword_10012E718);
  return sub_1000A8114((uint64_t)v12, (uint64_t)a1 + *(int *)(v10 + 44));
}

double sub_1000A91D8(uint64_t a1)
{
  *(unsigned char *)(a1 + 288) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void sub_1000A9208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v15 = a15;
  }
}

uint64_t sub_1000A9284(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v7 = *(unsigned char *)(a1 + 288);
  long long v5 = *(_OWORD *)(a1 + 240);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    *(void *)(a1 + 272),
    *(void *)(a1 + 280),
    v7);
  return a1;
}

uint64_t sub_1000A9318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  if (a2)
  {
    swift_release();
    swift_release();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A938C()
{
  unint64_t v1 = (int *)(sub_1000082B4(&qword_10012B1A0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1000082B4(&qword_10012E740);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = *(int *)(sub_1000082B4(&qword_10012B1D0) + 36);
  uint64_t v9 = sub_1000E4230();
  uint64_t v10 = v6 + v8 + *(int *)(v9 + 20);
  uint64_t v11 = sub_1000E4580();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  sub_1000082B4(&qword_10012B1B0);
  swift_release();
  v12(v6 + v1[11] + *(int *)(v9 + 20), v11);
  sub_1000082B4(&qword_10012E750);
  swift_bridgeObjectRelease();
  sub_1000082B4(&qword_10012E758);
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000A9558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1000082B4(&qword_10012B1A0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000A9044(v4, a1);
}

uint64_t destroy for TVWidgetLiveBadge(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TVWidgetLiveBadge(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  uint64_t v6 = *(void **)(a2 + 112);
  uint64_t v5 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = v6;
  *(void *)(a1 + 120) = v5;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_retain();
  swift_retain();
  swift_retain();
  id v9 = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TVWidgetLiveBadge(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  long long v4 = *(void **)(a2 + 112);
  uint64_t v5 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v4;
  id v6 = v4;

  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TVWidgetLiveBadge(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for TVWidgetLiveBadge(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  long long v5 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TVWidgetLiveBadge(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVWidgetLiveBadge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVWidgetLiveBadge()
{
  return &type metadata for TVWidgetLiveBadge;
}

uint64_t sub_1000A9A04()
{
  return sub_100014AC4(&qword_10012E788, &qword_10012E790);
}

uint64_t sub_1000A9A40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A9A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v69 = a2;
  uint64_t v2 = sub_1000082B4(&qword_10012E7E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v68 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000082B4(&qword_10012E7E8) - 8;
  __chkstk_darwin(v4);
  uint64_t v60 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_1000E45B0();
  uint64_t v6 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  long long v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000082B4(&qword_10012E7F0) - 8;
  __chkstk_darwin(v56);
  long long v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000082B4(&qword_10012E7F8) - 8;
  __chkstk_darwin(v61);
  uint64_t v59 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000082B4(&qword_10012E800) - 8;
  __chkstk_darwin(v64);
  uint64_t v62 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000082B4(&qword_10012E808) - 8;
  __chkstk_darwin(v65);
  uint64_t v63 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000082B4(&qword_10012E810) - 8;
  __chkstk_darwin(v66);
  uint64_t v57 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E4560();
  uint64_t v15 = sub_1000E49E0();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v55 = v6;
  uint64_t v23 = v58;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ContentSizeCategory.large(_:), v58);
  uint64_t v24 = *(int *)(v4 + 36);
  uint64_t v25 = v60;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v60 + v24, v8, v23);
  *uint64_t v25 = KeyPath;
  sub_100014754((uint64_t)v25, (uint64_t)&v10[*(int *)(v56 + 44)], &qword_10012E7E8);
  *(void *)long long v10 = v15;
  *((void *)v10 + 1) = v17;
  v10[16] = v21;
  *((void *)v10 + 3) = v19;
  sub_10003A978(v15, v17, v21);
  swift_bridgeObjectRetain();
  sub_1000147B8((uint64_t)v25, &qword_10012E7E8);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v23);
  sub_1000141AC(v15, v17, v21);
  swift_bridgeObjectRelease();
  uint64_t v26 = v59;
  sub_100014754((uint64_t)v10, v59, &qword_10012E7F0);
  *(_WORD *)(v26 + *(int *)(v61 + 44)) = 256;
  sub_1000147B8((uint64_t)v10, &qword_10012E7F0);
  sub_1000E4840();
  uint64_t v27 = enum case for Font.Design.rounded(_:);
  uint64_t v28 = sub_1000E4820();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v68, v27, v28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
  uint64_t v31 = (uint64_t)v57;
  uint64_t v32 = sub_1000E4850();
  sub_1000147B8(v30, &qword_10012E7E0);
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = v62;
  sub_100014754(v26, v62, &qword_10012E7F8);
  uint64_t v35 = (uint64_t *)(v34 + *(int *)(v64 + 44));
  uint64_t *v35 = v33;
  v35[1] = v32;
  sub_1000147B8(v26, &qword_10012E7F8);
  uint64_t v36 = sub_1000E4C40();
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = v63;
  sub_100014754(v34, v63, &qword_10012E800);
  uint64_t v39 = (uint64_t *)(v38 + *(int *)(v65 + 44));
  *uint64_t v39 = v37;
  v39[1] = v36;
  sub_1000147B8(v34, &qword_10012E800);
  sub_1000E4F50();
  sub_1000E40A0();
  sub_100014754(v38, v31, &qword_10012E808);
  uint64_t v40 = (_OWORD *)(v31 + *(int *)(v66 + 44));
  long long v41 = v71;
  _OWORD *v40 = v70;
  v40[1] = v41;
  void v40[2] = v72;
  sub_1000147B8(v38, &qword_10012E808);
  LOBYTE(v37) = sub_1000E4750();
  char v42 = sub_1000E4790();
  sub_1000E4790();
  if (sub_1000E4790() != v37) {
    char v42 = sub_1000E4790();
  }
  sub_1000E3FB0();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = v69;
  sub_100014754(v31, v69, &qword_10012E810);
  uint64_t v52 = v51 + *(int *)(sub_1000082B4(&qword_10012E818) + 36);
  *(unsigned char *)uint64_t v52 = v42;
  *(void *)(v52 + 8) = v44;
  *(void *)(v52 + 16) = v46;
  *(void *)(v52 + 24) = v48;
  *(void *)(v52 + 32) = v50;
  *(unsigned char *)(v52 + 40) = 0;
  return sub_1000147B8(v31, &qword_10012E810);
}

uint64_t sub_1000AA16C(uint64_t a1)
{
  uint64_t v2 = sub_1000E45B0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1000E4380();
}

uint64_t sub_1000AA234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v37 = sub_1000E4230();
  __chkstk_darwin(v37);
  uint64_t v38 = (double *)((char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_1000082B4(&qword_10012E738);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000E4CE0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000082B4(&qword_10012E740);
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000082B4(&qword_10012E820);
  __chkstk_darwin(v35);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000082B4(qword_10012E828);
  uint64_t v39 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000939B8();
  double v18 = *(double *)(v1 + 120);
  id v19 = sub_100098340(*(id *)(v1 + 112), v18 + v18, v18);
  if (v19)
  {
    id v34 = v19;
    sub_1000E4CC0();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.ResizingMode.stretch(_:), v6);
    sub_1000E4D10();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1000E55F0();
    uint64_t v20 = sub_1000E5600();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 0, 1, v20);
    sub_1000E4D00();
    swift_release();
    sub_1000147B8((uint64_t)v5, &qword_10012E738);
    uint64_t v21 = v36;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v36);
    *(_WORD *)&v14[*(int *)(v35 + 36)] = 256;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
    double v22 = v18 * 0.5;
    uint64_t v23 = v38;
    uint64_t v24 = (char *)v38 + *(int *)(v37 + 20);
    uint64_t v25 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v26 = sub_1000E4580();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
    *uint64_t v23 = v22;
    v23[1] = v22;
    uint64_t v27 = v40;
    uint64_t v28 = (uint64_t)&v17[*(int *)(v40 + 36)];
    sub_1000A2FAC((uint64_t)v23, v28);
    *(_WORD *)(v28 + *(int *)(sub_1000082B4(&qword_10012B1F0) + 36)) = 256;
    sub_100014754((uint64_t)v14, (uint64_t)v17, &qword_10012E820);
    sub_1000A3010((uint64_t)v23);

    sub_1000147B8((uint64_t)v14, &qword_10012E820);
    uint64_t v29 = v41;
    sub_100014B08((uint64_t)v17, v41, qword_10012E828);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v29, 0, 1, v27);
  }
  else
  {
    uint64_t v31 = v40;
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
    uint64_t v33 = v41;
    return v32(v33, 1, 1, v31);
  }
}

uint64_t sub_1000AA788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v33 = a1;
  uint64_t v3 = sub_1000E4230();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (double *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000082B4(&qword_10012E798);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000082B4(&qword_10012E7A0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000082B4(&qword_10012E7A8);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_1000E4510();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  double v18 = (uint64_t *)&v9[*(int *)(sub_1000082B4(&qword_10012E7B0) + 44)];
  uint64_t *v18 = sub_1000E4F50();
  v18[1] = v19;
  uint64_t v20 = sub_1000082B4(&qword_10012E7B8);
  sub_1000AAACC(v2, (uint64_t)v18 + *(int *)(v20 + 44));
  long long v34 = *(_OWORD *)(v2 + 176);
  *(void *)&long long v35 = *(void *)(v2 + 192);
  sub_1000082B4(&qword_10012E7C0);
  sub_1000E4DB0();
  double v21 = *(double *)(v2 + 120);
  sub_1000E4F50();
  sub_1000E40A0();
  sub_100014754((uint64_t)v9, (uint64_t)v13, &qword_10012E798);
  double v22 = &v13[*(int *)(v11 + 44)];
  long long v23 = v35;
  *(_OWORD *)double v22 = v34;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v36;
  sub_1000147B8((uint64_t)v9, &qword_10012E798);
  sub_100014754((uint64_t)v13, (uint64_t)v17, &qword_10012E7A0);
  *(_WORD *)&v17[*(int *)(v15 + 44)] = 256;
  sub_1000147B8((uint64_t)v13, &qword_10012E7A0);
  double v24 = v21 * 0.5;
  uint64_t v25 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v26 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v27 = sub_1000E4580();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  double *v6 = v24;
  v6[1] = v24;
  uint64_t v28 = sub_1000082B4(&qword_10012E7C8);
  uint64_t v29 = v33;
  uint64_t v30 = v33 + *(int *)(v28 + 36);
  sub_1000A2FAC((uint64_t)v6, v30);
  *(_WORD *)(v30 + *(int *)(sub_1000082B4(&qword_10012B1F0) + 36)) = 256;
  sub_100014754((uint64_t)v17, v29, &qword_10012E7A8);
  sub_1000A3010((uint64_t)v6);
  return sub_1000147B8((uint64_t)v17, &qword_10012E7A8);
}

uint64_t sub_1000AAACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000082B4(&qword_10012E7D0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23 - v8;
  sub_1000AA234((uint64_t)&v23 - v8);
  long long v23 = *(_OWORD *)(a1 + 176);
  uint64_t v24 = *(void *)(a1 + 192);
  sub_1000082B4(&qword_10012E7C0);
  sub_1000E4DC0();
  uint64_t v10 = v25;
  uint64_t v11 = v26;
  uint64_t v12 = v27;
  uint64_t v13 = v28;
  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v14 + 176) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v14 + 192) = v15;
  *(void *)(v14 + 208) = *(void *)(a1 + 192);
  long long v16 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v14 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v14 + 128) = v16;
  long long v17 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v14 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v14 + 160) = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v14 + 64) = v18;
  long long v19 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v14 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v14 + 96) = v19;
  long long v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 32) = v20;
  sub_100014754((uint64_t)v9, (uint64_t)v7, &qword_10012E7D0);
  sub_100014754((uint64_t)v7, a2, &qword_10012E7D0);
  double v21 = (void *)(a2 + *(int *)(sub_1000082B4(&qword_10012E7D8) + 48));
  *double v21 = v10;
  v21[1] = v11;
  v21[2] = v12;
  v21[3] = v13;
  void v21[4] = sub_1000AAD6C;
  v21[5] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000AAD74(a1);
  sub_1000147B8((uint64_t)v9, &qword_10012E7D0);
  swift_release();
  swift_release();
  swift_release();
  return sub_1000147B8((uint64_t)v7, &qword_10012E7D0);
}

uint64_t sub_1000AACB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AA788(a1);
}

uint64_t sub_1000AAD14()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 216, 7);
}

uint64_t sub_1000AAD6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A9A5C(v1 + 16, a1);
}

uint64_t sub_1000AAD74(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 112);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v3 = v2;
  return a1;
}

uint64_t sub_1000AADDC()
{
  return sub_1000E4370();
}

uint64_t sub_1000AAE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v24 = *(void *)(a1 + 16);
  sub_100008354(&qword_10012E8D0);
  sub_1000E41E0();
  uint64_t v34 = *(void *)(a1 + 24);
  uint64_t v4 = v34;
  uint64_t v35 = sub_100014AC4(&qword_10012E8D8, &qword_10012E8D0);
  uint64_t v27 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  swift_getWitnessTable();
  uint64_t v5 = sub_1000E4E70();
  uint64_t v26 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - v6;
  sub_100008354(&qword_10012E8E0);
  uint64_t v8 = sub_1000E41E0();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = v24;
  uint64_t v29 = v24;
  uint64_t v30 = v4;
  uint64_t v31 = v2;
  sub_1000E4F50();
  sub_1000E4E60();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v4;
  long long v16 = v2[1];
  long long v17 = v2[2];
  *(_OWORD *)(v15 + 32) = *v2;
  *(_OWORD *)(v15 + 48) = v16;
  *(_OWORD *)(v15 + 64) = v17;
  uint64_t v36 = *(void *)v2;
  sub_1000311DC((uint64_t)&v36);
  swift_retain();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000ABA6C();
  sub_1000ABAC0();
  sub_1000E4B40();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
  uint64_t v19 = sub_100014AC4(&qword_10012E8F8, &qword_10012E8E0);
  uint64_t v32 = WitnessTable;
  uint64_t v33 = v19;
  uint64_t v20 = swift_getWitnessTable();
  sub_100071DD0(v11, v8, v20);
  double v21 = *(void (**)(char *, uint64_t))(v25 + 8);
  v21(v11, v8);
  sub_100071DD0(v13, v8, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v13, v8);
}

uint64_t sub_1000AB1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v22 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008354(&qword_10012E8D0);
  uint64_t v8 = sub_1000E41E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v21 - v14;
  (*(void (**)(uint64_t))(a1 + 32))(v13);
  uint64_t v27 = sub_1000AB464;
  uint64_t v28 = 0;
  sub_1000E4F50();
  sub_1000082B4(&qword_10012E908);
  sub_100014AC4(&qword_10012E910, &qword_10012E908);
  uint64_t v16 = v23;
  sub_1000E4AA0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, a2);
  uint64_t v17 = sub_100014AC4(&qword_10012E8D8, &qword_10012E8D0);
  uint64_t v25 = v16;
  uint64_t v26 = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100071DD0(v12, v8, WitnessTable);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  sub_100071DD0(v15, v8, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v19)(v15, v8);
}

uint64_t sub_1000AB464@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000E4C30();
  uint64_t result = sub_1000E40F0();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_1000AB4A4()
{
  return sub_1000E4E80();
}

uint64_t sub_1000AB510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AAE04(a1, a2);
}

void sub_1000AB54C()
{
  xmmword_10012E708 = 0uLL;
}

double sub_1000AB55C@<D0>(_OWORD *a1@<X8>)
{
  if (qword_100129E40 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_10012E708;
  *a1 = xmmword_10012E708;
  return result;
}

void *sub_1000AB5BC(uint64_t a1, void *(*a2)(uint64_t *__return_ptr))
{
  return a2(&v3);
}

uint64_t sub_1000AB608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000AB610()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000AB654(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1000AB6AC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1000AB734(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  long long v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for ChildSizeReader()
{
  return sub_10007A3D0();
}

uint64_t sub_1000AB79C()
{
  return sub_1000AB7D8(&qword_10012E8B0, &qword_10012E7C8, (void (*)(void))sub_1000AB87C);
}

uint64_t sub_1000AB7D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    a3();
    sub_100014AC4(&qword_10012B1E8, &qword_10012B1F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000AB87C()
{
  return sub_1000AB8AC(&qword_10012E8B8, &qword_10012E7A8, (void (*)(void))sub_1000AB928);
}

uint64_t sub_1000AB8AC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008354(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000AB928()
{
  unint64_t result = qword_10012E8C0;
  if (!qword_10012E8C0)
  {
    sub_100008354(&qword_10012E7A0);
    sub_100014AC4(&qword_10012E8C8, &qword_10012E798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E8C0);
  }
  return result;
}

uint64_t sub_1000AB9C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000ABA0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AB1A8(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1000ABA18()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1000ABA60()
{
  return sub_1000AB4A4();
}

unint64_t sub_1000ABA6C()
{
  unint64_t result = qword_10012E8E8;
  if (!qword_10012E8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E8E8);
  }
  return result;
}

unint64_t sub_1000ABAC0()
{
  unint64_t result = qword_10012E8F0;
  if (!qword_10012E8F0)
  {
    type metadata accessor for CGSize(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10012E8F0);
  }
  return result;
}