void *sub_100146E24(uint64_t a1)
{
  id v2;
  uint64_t v3;
  NSString v4;
  uint64_t v5;
  void *v6;
  unsigned char v8[16];
  uint64_t v9;

  v2 = [objc_allocWithZone((Class)NLTokenizer) initWithUnit:1];
  v3 = type metadata accessor for AttributedString.CharacterView();
  __chkstk_darwin(v3);
  type metadata accessor for AttributedString();
  sub_100147040(&qword_100266740, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  dispatch thunk of AttributedStringProtocol.characters.getter();
  sub_100147040((unint64_t *)&unk_1002699D0, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  String.init<A>(_:)();
  v4 = String._bridgeToObjectiveC()();
  [v2 setString:v4];
  swift_bridgeObjectRelease();

  v5 = NLTokenizer.tokens(for:)();
  v9 = a1;
  v6 = sub_1001448FC((void (*)(long long *))sub_100146FD8, (uint64_t)v8, v5);
  swift_bridgeObjectRelease();

  return v6;
}

uint64_t sub_100146FD8(long long *a1)
{
  return sub_100146B40(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for TranscriptionFormatter.PartialResult()
{
  uint64_t result = qword_100269558;
  if (!qword_100269558) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100147040(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100147088(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for AttributedString.Index();
    v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t v13 = sub_100028654(&qword_100266770);
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
  }
  return a1;
}

uint64_t sub_1001471C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for AttributedString.Index();
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = v5 + *(int *)(sub_100028654(&qword_100266770) + 36);

  return v9(v7, v6);
}

uint64_t sub_1001472A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString.Index();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = sub_100028654(&qword_100266770);
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  return a1;
}

uint64_t sub_100147394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString.Index();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  uint64_t v12 = sub_100028654(&qword_100266770);
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  return a1;
}

uint64_t sub_100147480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString.Index();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = sub_100028654(&qword_100266770);
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  return a1;
}

uint64_t sub_10014756C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString.Index();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = sub_100028654(&qword_100266770);
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  return a1;
}

uint64_t sub_100147658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10014766C);
}

uint64_t sub_10014766C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100028654(&qword_100266770);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100147768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10014777C);
}

uint64_t sub_10014777C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for AttributedString();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100028654(&qword_100266770);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_100147884()
{
  type metadata accessor for AttributedString();
  if (v0 <= 0x3F)
  {
    sub_10013E198();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

id sub_1001479F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StereoOrientationProvider();
  return [super dealloc];
}

uint64_t sub_100147A68(void *a1)
{
  id v3 = [self currentDevice];
  id v4 = [v3 userInterfaceIdiom];

  uint64_t v5 = &OBJC_IVAR____TtC10VoiceMemos25StereoOrientationProvider_interfaceOrientation;
  if (v4 != (id)1) {
    uint64_t v5 = &OBJC_IVAR____TtC10VoiceMemos25StereoOrientationProvider_deviceOrientation;
  }
  uint64_t v6 = *(void *)(v1 + *v5);
  if ((unint64_t)(v6 - 1) >= 4) {
    uint64_t v7 = 3;
  }
  else {
    uint64_t v7 = v6;
  }
  id v8 = [a1 orientation];
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v9 = v8;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    v17 = AVAudioSessionOrientationBack;

    swift_bridgeObjectRelease_n();
    return v7;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  v16 = AVAudioSessionOrientationBack;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_12:
    if ((unint64_t)(v7 - 1) > 3) {
      return 1;
    }
    else {
      return qword_1001F7720[v7 - 1];
    }
  }
  return v7;
}

uint64_t sub_100147C24()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100147C64(unsigned char *a1)
{
  uint64_t v2 = sub_100028654(&qword_1002699E0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    sub_100147EA4();
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(result + 32);
    if (v7)
    {
      uint64_t v8 = *(void *)(result + 24);
      uint64_t v9 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
      uint64_t v10 = (void *)swift_allocObject();
      v10[2] = 0;
      v10[3] = 0;
      v10[4] = v6;
      v10[5] = v8;
      v10[6] = v7;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_10001E1A8((uint64_t)v4, (uint64_t)&unk_100269700, (uint64_t)v10);
      swift_release();
    }
  }
  return swift_release();
}

uint64_t sub_100147DFC()
{
  if (*(void *)(*(void *)(v0 + 16) + 16))
  {
    swift_retain();
    uint64_t v1 = Activity.id.getter();
    sub_10011D994(v1, v2);
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_10000C4A4(v0 + 40);
  swift_release();

  return swift_deallocClassInstance();
}

void sub_100147EA4()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + 32) && *(void *)(*(void *)(v0 + 16) + 16))
  {
    swift_retain();
    uint64_t v2 = Activity.id.getter();
    sub_10011D994(v2, v3);
    swift_release();
    swift_bridgeObjectRelease();
  }
  id v4 = [self sharedInstance];
  id v5 = [v4 activeAudioRecorder];

  if (v5)
  {
    uint64_t v6 = (unsigned __int8 *)[v5 context];
    int v7 = v6[OBJC_IVAR____TtC10VoiceMemos18VMRecordingContext_isActionButtonInitiated];

    uint64_t v8 = sub_10011C99C(v7);
    uint64_t v10 = v9;
    swift_unknownObjectRelease();
    *(void *)(v1 + 24) = v8;
    *(void *)(v1 + 32) = v10;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100147FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return _swift_task_switch(sub_100147FF0, 0, 0);
}

uint64_t sub_100147FF0()
{
  v0[5] = *(void *)(v0[2] + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10014808C;
  return sub_10011D238(0);
}

uint64_t sub_10014808C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100148188, 0, 0);
}

uint64_t sub_100148188()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[7] = Strong;
  if (Strong)
  {
    uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_1002662E8 + dword_1002662E8);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[8] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10014828C;
    return v6();
  }
  else
  {
    if (sub_10011D994(v0[3], v0[4]))
    {
      uint64_t v4 = v0[2];
      *(void *)(v4 + 24) = 0;
      *(void *)(v4 + 32) = 0;
      swift_bridgeObjectRelease();
    }
    id v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_10014828C()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_1001483A4, 0, 0);
}

uint64_t sub_1001483A4()
{
  if (sub_10011D994(v0[3], v0[4]))
  {
    uint64_t v1 = v0[2];
    *(void *)(v1 + 24) = 0;
    *(void *)(v1 + 32) = 0;
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10014841C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100148464()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_100015B60;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return _swift_task_switch(sub_100147FF0, 0, 0);
}

void sub_100148520()
{
  uint64_t v1 = v0;
  id v2 = [v0 entityInteraction];
  swift_unknownObjectRelease();
  if (!v2)
  {
    sub_1000DC560();
    id v3 = objc_allocWithZone((Class)type metadata accessor for UIAppEntityInteraction());
    id v6 = (id)UIAppEntityInteraction.init(entity:)();
    id v4 = [v1 view];
    if (v4)
    {
      long long v5 = v4;
      [v4 addInteraction:v6];

      [v1 setEntityInteraction:v6];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1001486A4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for CSSearchQuery.Results();
  v2[5] = swift_task_alloc();
  return _swift_task_switch(sub_100148738, 0, 0);
}

uint64_t sub_100148738()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = sub_100028654(&qword_100269750);
  v0[6] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[7] = v4;
  uint64_t v5 = swift_task_alloc();
  v0[8] = v5;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = v2;
  v6._object = v1;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 1684218410;
  v7._object = (void *)0xE400000000000000;
  String.append(_:)(v7);
  id v8 = objc_allocWithZone((Class)CSSearchQuery);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithQueryString:v9 queryContext:0];

  CSSearchQuery.results.getter();
  uint64_t v11 = type metadata accessor for URL();
  v0[9] = v11;
  sub_100149C34();
  AsyncCompactMapSequence.init(_:transform:)();
  uint64_t v12 = sub_100028654(&qword_100269770);
  v0[10] = v12;
  v0[11] = *(void *)(v12 - 8);
  v0[12] = swift_task_alloc();
  uint64_t v13 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v13, v5, v3);
  sub_100027F5C(&qword_100269778, &qword_100269750);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  swift_task_dealloc();
  uint64_t v14 = *(void *)(v11 - 8);
  v0[13] = v14;
  v0[14] = _swiftEmptyArrayStorage;
  v0[15] = v14;
  v0[16] = *(void *)(v14 + 64);
  v0[17] = swift_task_alloc();
  sub_100028654(&qword_100269FB0);
  uint64_t v15 = swift_task_alloc();
  v0[18] = v15;
  uint64_t v16 = sub_100027F5C((unint64_t *)&unk_100269780, &qword_100269770);
  v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  void *v17 = v0;
  v17[1] = sub_100148B08;
  uint64_t v18 = v0[10];
  return dispatch thunk of AsyncIteratorProtocol.next()(v15, v18, v16);
}

uint64_t sub_100148B08()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[11];
    uint64_t v3 = v2[12];
    uint64_t v5 = v2[10];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    Swift::String v6 = sub_100148FD8;
  }
  else
  {
    Swift::String v6 = sub_100148C4C;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100148C4C()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[9];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  uint64_t v5 = v0[17];
  if (v4 == 1)
  {
    uint64_t v7 = v0[7];
    uint64_t v6 = v0[8];
    uint64_t v8 = v0[6];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    sub_10011A1AC(v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    NSString v9 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v10 = v0[14];
    return v9(v10);
  }
  else
  {
    uint64_t v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
    v12(v0[17], v1, v3);
    swift_task_dealloc();
    uint64_t v13 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v13, v5, v3);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = v0[14];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v15 = sub_10015E7B4(0, *(void *)(v15 + 16) + 1, 1, v0[14]);
    }
    unint64_t v17 = *(void *)(v15 + 16);
    unint64_t v16 = *(void *)(v15 + 24);
    if (v17 >= v16 >> 1) {
      unint64_t v15 = sub_10015E7B4(v16 > 1, v17 + 1, 1, v15);
    }
    uint64_t v18 = v0[17];
    uint64_t v19 = v0[15];
    uint64_t v20 = v0[9];
    *(void *)(v15 + 16) = v17 + 1;
    v12(v15+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v17, v13, v20);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_task_dealloc();
    uint64_t v21 = v0[13];
    v0[14] = v15;
    v0[15] = v21;
    v0[16] = *(void *)(v21 + 64);
    v0[17] = swift_task_alloc();
    sub_100028654(&qword_100269FB0);
    uint64_t v22 = swift_task_alloc();
    v0[18] = v22;
    uint64_t v23 = sub_100027F5C((unint64_t *)&unk_100269780, &qword_100269770);
    v24 = (void *)swift_task_alloc();
    v0[19] = v24;
    void *v24 = v0;
    v24[1] = sub_100148B08;
    uint64_t v25 = v0[10];
    return dispatch thunk of AsyncIteratorProtocol.next()(v22, v25, v23);
  }
}

uint64_t sub_100148FD8()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  int v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100149090(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1001490B0, 0, 0);
}

uint64_t sub_1001490B0()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = (void *)CSSearchQuery.Results.Item.item.getter();
  id v3 = [v2 uniqueIdentifier];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100149164(v1);
  swift_bridgeObjectRelease();
  int v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100149164@<X0>(char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100028654(&qword_100269FB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_10011A1AC((uint64_t)v8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
  }
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v10(v5, v8, v2);
  uint64_t v11 = URL.scheme.getter();
  if (!v12) {
    goto LABEL_9;
  }
  if (v11 == 0x616465726F632D78 && v12 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_11:
    v10(a1, v5, v2);
    uint64_t v15 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v15, 1, v2);
  }
LABEL_9:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v15 = 1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v15, 1, v2);
}

uint64_t sub_100149518(int a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  v2[3] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100269740 + dword_100269740);
  uint64_t v6 = (void *)swift_task_alloc();
  v2[4] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1001495E8;
  return v8(v3, v5);
}

uint64_t sub_1001495E8()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v5 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    Class isa = 0;
    uint64_t v7 = (void *)v5;
  }
  else
  {
    type metadata accessor for URL();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    uint64_t v7 = isa;
  }
  uint64_t v8 = *(void (***)(void, void, void))(v3 + 16);
  ((void (**)(void, Class, uint64_t))v8)[2](v8, isa, v5);

  _Block_release(v8);
  uint64_t v9 = *(uint64_t (**)(void))(v4 + 8);
  return v9();
}

id sub_1001497BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RCTranscriptionSearch();
  return [super dealloc];
}

uint64_t type metadata accessor for RCTranscriptionSearch()
{
  return self;
}

uint64_t sub_100149814()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100149854()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100015B60;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_100269730 + dword_100269730);
  return v5(v2, v3);
}

uint64_t sub_100149910(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100149930, 0, 0);
}

uint64_t sub_100149930()
{
  if (qword_100264560 != -1) {
    swift_once();
  }
  id v1 = (id)qword_100275388;
  swift_retain();
  CurrentValueSubject.value.getter();
  swift_release();

  if (*(unsigned char *)(v0 + 40) == 1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 32) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100149A84;
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 24);
    return sub_1001486A4(v4, v3);
  }
  else
  {
    uint64_t v6 = *(uint64_t (**)(void *))(v0 + 8);
    return v6(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100149A84(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_100149B84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = a2;
  v5[1] = sub_100031604;
  return _swift_task_switch(sub_1001490B0, 0, 0);
}

unint64_t sub_100149C34()
{
  unint64_t result = qword_100269768;
  if (!qword_100269768)
  {
    type metadata accessor for CSSearchQuery.Results();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269768);
  }
  return result;
}

uint64_t sub_100149C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000285F8(a1, &qword_1002699E0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_100028654(&qword_100265540);
  return swift_task_create();
}

uint64_t sub_100149E40(uint64_t a1, uint64_t a2)
{
  return sub_10014CD4C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_100149E5C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  int v5 = a3;
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 40);
  unsigned int v8 = *(unsigned __int8 *)(v3 + 48);
  switch(a3 >> 5)
  {
    case 1:
      if ((v8 & 0xE0) != 0x20) {
        goto LABEL_54;
      }
      goto LABEL_5;
    case 2:
      if ((v8 & 0xE0) != 0x40) {
        goto LABEL_54;
      }
      if (v6 == result && v7 == a2)
      {
        if ((v5 & 1) != (v8 & 1)) {
          goto LABEL_54;
        }
        return result;
      }
      unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) != 0 && ((v5 ^ v8) & 1) == 0) {
        return result;
      }
      goto LABEL_54;
    case 3:
      if ((v8 & 0xE0) != 0x60 || ((((result & 1) == 0) ^ v6) & 1) == 0) {
        goto LABEL_54;
      }
      return result;
    case 4:
      if (a2 | result || v5 != 128)
      {
        if (result == 1 && !a2 && v5 == 128)
        {
          BOOL v12 = (v8 & 0xE0) == 0x80 && v6 == 1;
        }
        else
        {
          if (result == 2 && !a2 && v5 == 128)
          {
            if ((v8 & 0xE0) != 0x80 || v6 != 2 || v7) {
              goto LABEL_54;
            }
            goto LABEL_53;
          }
          BOOL v12 = (v8 & 0xE0) == 0x80 && v6 == 3;
        }
        if (!v12 || v7 != 0) {
          goto LABEL_54;
        }
      }
      else if ((v8 & 0xE0) != 0x80 || (v7 | v6) != 0)
      {
        goto LABEL_54;
      }
LABEL_53:
      if (v8 == 128) {
        return result;
      }
LABEL_54:
      unint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        uint64_t v14 = *(void *)(result + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_dataProvider);
        uint64_t v15 = *(void *)(v14 + 32);
        uint64_t v16 = *(void *)(v14 + 40);
        unsigned __int8 v17 = *(unsigned char *)(v14 + 48);
        swift_retain();
        sub_10014C918(v15, v16, v17);
        sub_1000FECAC(v15, v16, v17);
        sub_10014C940(v15, v16, v17);
        swift_unknownObjectRelease();
        return swift_release();
      }
      return result;
    default:
      if (v8 >= 0x20) {
        goto LABEL_54;
      }
LABEL_5:
      if (v6 == result && v7 == a2) {
        return result;
      }
      unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if (result) {
        return result;
      }
      goto LABEL_54;
  }
}

id sub_10014A098(void *a1)
{
  if (a1)
  {
    [a1 currentTime];
    uint64_t v3 = *(void **)(v1 + 56);
    if (v3)
    {
      double v4 = v2;
      id result = [v3 currentTime];
      if (v4 == v6) {
        return result;
      }
    }
  }
  else
  {
    id result = *(id *)(v1 + 56);
    if (!result) {
      return result;
    }
    [result currentTime];
  }
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100018828();
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10014A138()
{
  if (*(void *)(v0 + 104))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  sub_10000C4A4(v0 + 16);
  sub_10014C940(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10014A1DC()
{
  sub_10014A138();

  return swift_deallocClassInstance();
}

uint64_t sub_10014A210()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  unsigned __int8 v3 = *(unsigned char *)(v0 + 48);
  *(unsigned char *)(v0 + 48) = 0x80;
  sub_10014C918(v1, v2, v3);
  sub_10014C940(v1, v2, v3);
  sub_100149E5C(v1, v2, v3);
  sub_10014C940(v1, v2, v3);
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 80) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100018828();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10014A2E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100028654(&qword_1002699E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + 96);
  if (!v11)
  {
LABEL_12:
    *(void *)(v3 + 112) = 0;
    *(void *)(v3 + 120) = 0;
    swift_bridgeObjectRelease();
    *(void *)(v3 + 88) = a1;
    *(void *)(v3 + 96) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v18 = static MainActor.shared.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = &protocol witness table for MainActor;
    *(void *)(v19 + 32) = v4;
    *(void *)(v19 + 40) = a1;
    *(void *)(v19 + 48) = a2;
    *(unsigned char *)(v19 + 56) = a3 & 1;
    *(void *)(v4 + 104) = sub_10001E1A8((uint64_t)v10, (uint64_t)&unk_1002699F0, v19);
    return swift_release();
  }
  BOOL v12 = *(void *)(v3 + 88) == a1 && v11 == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (*(void *)(v3 + 104))
    {
      swift_retain();
      Task.cancel()();
      swift_release();
    }
    goto LABEL_12;
  }
  uint64_t v13 = *(void *)(v3 + 32);
  uint64_t v14 = *(void *)(v3 + 40);
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a2;
  unsigned __int8 v15 = *(unsigned char *)(v3 + 48);
  *(unsigned char *)(v3 + 48) = 32;
  swift_bridgeObjectRetain();
  sub_10014C918(v13, v14, v15);
  sub_10014C940(v13, v14, v15);
  sub_100149E5C(v13, v14, v15);

  return sub_10014C940(v13, v14, v15);
}

uint64_t sub_10014A53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 113) = a7;
  *(void *)(v7 + 32) = a5;
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v7 + 48) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 56) = v9;
  *(void *)(v7 + 64) = v8;
  return _swift_task_switch(sub_10014A5DC, v9, v8);
}

uint64_t sub_10014A5DC()
{
  if (static Task<>.isCancelled.getter())
  {
    swift_release();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = type metadata accessor for AttributedString();
    *(void *)(v0 + 72) = v3;
    *(void *)(v0 + 80) = *(void *)(v3 - 8);
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 88) = v4;
    int v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v5;
    *int v5 = v0;
    v5[1] = sub_10014A71C;
    char v6 = *(unsigned char *)(v0 + 113);
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v8 = *(void *)(v0 + 40);
    return sub_10014B150(v4, v7, v8, v6);
  }
}

uint64_t sub_10014A71C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    int v5 = sub_10014A900;
  }
  else {
    int v5 = sub_10014A858;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10014A858()
{
  swift_release();
  char v1 = static Task<>.isCancelled.getter();
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[9];
  if ((v1 & 1) == 0) {
    sub_10014C464(v0[4], v0[5], v0[11]);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  int v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10014A900()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  swift_task_dealloc();
  *(void *)(v0 + 16) = v1;
  swift_errorRetain();
  sub_100028654((uint64_t *)&unk_1002699C0);
  if (swift_dynamicCast()) {
    BOOL v2 = *(unsigned char *)(v0 + 112) == 4;
  }
  else {
    BOOL v2 = 0;
  }
  if (v2)
  {
    swift_errorRelease();
    if ((static Task<>.isCancelled.getter() & 1) == 0)
    {
      uint64_t v3 = *(void *)(v0 + 32);
      uint64_t v4 = *(void *)(v0 + 40);
      uint64_t v5 = *(void *)(v0 + 24);
      *(void *)(v5 + 112) = v3;
      *(void *)(v5 + 120) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1000F3BB0();
      swift_allocError();
      *char v6 = 4;
      sub_10014C60C(v3, v4);
      swift_errorRelease();
    }
  }
  else
  {
    swift_errorRelease();
    if ((static Task<>.isCancelled.getter() & 1) == 0) {
      sub_10014C60C(*(void *)(v0 + 32), *(void *)(v0 + 40));
    }
  }
  swift_errorRelease();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_10014AA70(void *a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    uint64_t v3 = qword_100264530;
    uint64_t v4 = a1;
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10002272C(v5, (uint64_t)qword_100275340);
    char v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      sub_10002F3B8(0xD00000000000001ALL, 0x80000001001EF220, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s Beginning live transcription observation", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *(void *)&v4[OBJC_IVAR____TtC10VoiceMemos19RCLiveTranscription_delegate + 8] = &off_100227FE8;
    swift_unknownObjectWeakAssign();
  }
  else
  {
    if (qword_100264530 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10002272C(v9, (uint64_t)qword_100275340);
    os_log_type_t v10 = static os_log_type_t.error.getter();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      sub_10002F3B8(0xD00000000000001ALL, 0x80000001001EF220, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s Unable to begin live transcription.", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v14 = *(void *)(v2 + 32);
    uint64_t v15 = *(void *)(v2 + 40);
    *(_OWORD *)(v2 + 32) = xmmword_1001F77F0;
    unsigned __int8 v16 = *(unsigned char *)(v2 + 48);
    *(unsigned char *)(v2 + 48) = 0x80;
    sub_10014C918(v14, v15, v16);
    sub_10014C940(v14, v15, v16);
    sub_100149E5C(v14, v15, v16);
    sub_10014C940(v14, v15, v16);
  }
}

uint64_t sub_10014ADC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_100264628 != -1) {
    swift_once();
  }
  swift_retain();
  CurrentValueSubject.value.getter();
  swift_release();
  BOOL v7 = (v17 & 0xC0) == 0x80 && v16 == 2;
  if (!v7 || v17 != 128)
  {
    sub_10001576C(v16, v17);
    uint64_t v8 = *(void *)(v3 + 32);
    uint64_t v9 = *(void *)(v3 + 40);
    unsigned __int8 v10 = *(unsigned char *)(v3 + 48);
LABEL_8:
    *(_OWORD *)(v3 + 32) = xmmword_1001F77F0;
    *(unsigned char *)(v3 + 48) = 0x80;
    sub_10014C918(v8, v9, v10);
    sub_10014C940(v8, v9, v10);
    sub_100149E5C(v8, v9, v10);
    return sub_10014C940(v8, v9, v10);
  }
  uint64_t v15 = a1;
  uint64_t v13 = *(void *)(v3 + 32);
  uint64_t v12 = *(void *)(v3 + 40);
  int v14 = *(char *)(v3 + 48);
  if (v14 < 0 && (v12 | v13 || v14 != -128) && (v13 != 1 || v12 || v14 != -128))
  {
    uint64_t v9 = 0;
    unsigned __int8 v10 = 0x80;
    uint64_t v8 = 3;
    if (v13 != 2 || v12 || v14 != -128) {
      goto LABEL_8;
    }
  }
  *(_OWORD *)(v3 + 32) = xmmword_1001F7800;
  *(unsigned char *)(v3 + 48) = 0x80;
  sub_10014C918(v13, v12, v14);
  sub_10014C940(v13, v12, v14);
  sub_100149E5C(v13, v12, v14);
  sub_10014C940(v13, v12, v14);
  *(void *)(v3 + 64) = v15;
  *(void *)(v3 + 72) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100018828();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10014AFF8(uint64_t result, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = result;
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  int v9 = *(char *)(v3 + 48);
  if ((v9 & 0x80000000) == 0
    || !(v8 | v7) && v9 == -128
    || (v7 == 1 ? (BOOL v10 = v8 == 0) : (BOOL v10 = 0),
        v10 && v9 == -128 || (v7 == 2 ? (BOOL v11 = v8 == 0) : (BOOL v11 = 0), v11 && v9 == -128)))
  {
    uint64_t v12 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v12 = result & 0xFFFFFFFFFFFFLL;
    }
    *(void *)(v3 + 32) = v12 != 0;
    *(void *)(v3 + 40) = 0;
    *(unsigned char *)(v3 + 48) = 96;
    sub_10014C918(v7, v8, v9);
    sub_10014C940(v7, v8, v9);
    sub_100149E5C(v7, v8, v9);
    sub_10014C940(v7, v8, v9);
    *(void *)(v3 + 64) = v6;
    *(void *)(v3 + 72) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 80) = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_100018828();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10014B150(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 248) = a4;
  *(void *)(v5 + 80) = a3;
  *(void *)(v5 + 88) = v4;
  *(void *)(v5 + 64) = a1;
  *(void *)(v5 + 72) = a2;
  uint64_t v6 = type metadata accessor for DecodingError();
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = *(void *)(v6 - 8);
  *(void *)(v5 + 112) = swift_task_alloc();
  *(void *)(v5 + 120) = swift_task_alloc();
  *(void *)(v5 + 128) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 136) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 144) = v8;
  *(void *)(v5 + 152) = v7;
  return _swift_task_switch(sub_10014B268, v8, v7);
}

uint64_t sub_10014B268()
{
  uint64_t v16 = v0;
  if (qword_100264548 != -1) {
    swift_once();
  }
  v0[20] = qword_100275358;
  if (qword_100264530 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[21] = sub_10002272C(v1, (uint64_t)qword_100275340);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[7] = sub_10002F3B8(0xD000000000000038, 0x80000001001EF1E0, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s Retrieving existing transcription", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(v6 + 40);
  *(void *)(v6 + 32) = v0[9];
  *(void *)(v6 + 40) = v5;
  unsigned __int8 v9 = *(unsigned char *)(v6 + 48);
  *(unsigned char *)(v6 + 48) = 0;
  swift_bridgeObjectRetain();
  sub_10014C918(v7, v8, v9);
  sub_10014C940(v7, v8, v9);
  sub_100149E5C(v7, v8, v9);
  sub_10014C940(v7, v8, v9);
  sub_100028654(&qword_100266620);
  uint64_t v10 = swift_task_alloc();
  v0[22] = v10;
  BOOL v11 = (void *)swift_task_alloc();
  v0[23] = v11;
  *BOOL v11 = v0;
  v11[1] = sub_10014B534;
  uint64_t v12 = v0[9];
  uint64_t v13 = v0[10];
  return sub_1000EDDD4(v10, v12, v13);
}

uint64_t sub_10014B534()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_10014BE20;
  }
  else {
    uint64_t v5 = sub_10014B670;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10014B670()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000285F8(v1, &qword_100266620);
    swift_task_dealloc();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      *(void *)(v0 + 40) = sub_10002F3B8(0xD000000000000038, 0x80000001001EF1E0, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s No transcription found. Beginning new transcription.", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v9 = *(void *)(v8 + 32);
    uint64_t v10 = *(void *)(v8 + 40);
    *(void *)(v8 + 32) = *(void *)(v0 + 72);
    *(void *)(v8 + 40) = v7;
    unsigned __int8 v11 = *(unsigned char *)(v8 + 48);
    *(unsigned char *)(v8 + 48) = 32;
    swift_bridgeObjectRetain();
    sub_10014C918(v9, v10, v11);
    sub_10014C940(v9, v10, v11);
    sub_100149E5C(v9, v10, v11);
    sub_10014C940(v9, v10, v11);
    *(void *)(v0 + 200) = v2;
    *(void *)(v0 + 208) = v3;
    *(void *)(v0 + 216) = *(void *)(v3 + 64);
    uint64_t v12 = swift_task_alloc();
    *(void *)(v0 + 224) = v12;
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10014B9D0;
    char v14 = *(unsigned char *)(v0 + 248);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    return sub_1000EE780(v12, v15, v16, v14);
  }
  else
  {
    swift_release();
    (*(void (**)(void, void, uint64_t))(v3 + 32))(*(void *)(v0 + 64), *(void *)(v0 + 176), v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_10014B9D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    os_log_type_t v5 = sub_10014C3D0;
  }
  else {
    os_log_type_t v5 = sub_10014BB0C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10014BB0C()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  swift_release();
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v1, v2);
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[25];
    uint64_t v14 = v0[26];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[3] = sub_10002F3B8(0xD000000000000038, 0x80000001001EF1E0, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2080;
    type metadata accessor for AttributedString.CharacterView();
    swift_task_alloc();
    sub_100106F3C(&qword_100266740, (void (*)(uint64_t))&type metadata accessor for AttributedString);
    dispatch thunk of AttributedStringProtocol.characters.getter();
    sub_100106F3C((unint64_t *)&unk_1002699D0, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
    uint64_t v9 = String.init<A>(_:)();
    unint64_t v11 = v10;
    swift_task_dealloc();
    v0[4] = sub_10002F3B8(v9, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v7);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s Transcription complete. Results: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(uint64_t, void))(v0[26] + 8))(v4, v0[25]);
  }

  swift_task_dealloc();
  (*(void (**)(void, void, void))(v0[26] + 32))(v0[8], v0[28], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10014BE20()
{
  uint64_t v42 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  swift_task_dealloc();
  *(void *)(v0 + 16) = v1;
  swift_errorRetain();
  sub_100028654((uint64_t *)&unk_1002699C0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v2 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 104);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v2, v4);
    char v6 = RCCatchTranscriptionDecodingError();
    uint64_t v7 = *(void *)(v0 + 120);
    if (v6)
    {
      uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 104) + 16);
      v8(*(void *)(v0 + 112), v7, *(void *)(v0 + 96));
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      BOOL v11 = os_log_type_enabled(v9, v10);
      uint64_t v13 = *(void *)(v0 + 104);
      uint64_t v12 = *(void *)(v0 + 112);
      uint64_t v14 = *(void *)(v0 + 96);
      if (v11)
      {
        v40 = v9;
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        v39 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 138412290;
        swift_allocError();
        v8(v16, v12, v14);
        uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 48) = v17;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v39 = v17;
        uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v18(v12, v14);
        _os_log_impl((void *)&_mh_execute_header, v40, v10, "Catching decode failure so that file can be re-transcribed, error = %@", v15, 0xCu);
        sub_100028654(&qword_100265560);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v18(v12, v14);
      }
      v18(*(void *)(v0 + 120), *(void *)(v0 + 96));
      swift_errorRelease();
      v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315138;
        *(void *)(v0 + 40) = sub_10002F3B8(0xD000000000000038, 0x80000001001EF1E0, &v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s No transcription found. Beginning new transcription.", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v27 = *(void *)(v0 + 80);
      uint64_t v28 = *(void *)(v0 + 88);
      uint64_t v29 = *(void *)(v28 + 32);
      uint64_t v30 = *(void *)(v28 + 40);
      *(void *)(v28 + 32) = *(void *)(v0 + 72);
      *(void *)(v28 + 40) = v27;
      unsigned __int8 v31 = *(unsigned char *)(v28 + 48);
      *(unsigned char *)(v28 + 48) = 32;
      swift_bridgeObjectRetain();
      sub_10014C918(v29, v30, v31);
      sub_10014C940(v29, v30, v31);
      sub_100149E5C(v29, v30, v31);
      sub_10014C940(v29, v30, v31);
      uint64_t v32 = type metadata accessor for AttributedString();
      *(void *)(v0 + 200) = v32;
      uint64_t v33 = *(void *)(v32 - 8);
      *(void *)(v0 + 208) = v33;
      *(void *)(v0 + 216) = *(void *)(v33 + 64);
      uint64_t v34 = swift_task_alloc();
      *(void *)(v0 + 224) = v34;
      v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v35;
      void *v35 = v0;
      v35[1] = sub_10014B9D0;
      char v36 = *(unsigned char *)(v0 + 248);
      uint64_t v37 = *(void *)(v0 + 72);
      uint64_t v38 = *(void *)(v0 + 80);
      return sub_1000EE780(v34, v37, v38, v36);
    }
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v20 = *(void *)(v0 + 104);
    swift_release();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v21, v7, v19);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v7, v19);
    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_10014C3D0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10014C464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100106664(a3);
  uint64_t v7 = v6;
  unint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v12 = v6 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v13 = *(void *)(v3 + 32);
  uint64_t v14 = *(void *)(v3 + 40);
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a2;
  unsigned __int8 v15 = *(unsigned char *)(v3 + 48);
  *(unsigned char *)(v3 + 48) = (v12 != 0) | 0x40;
  swift_bridgeObjectRetain();
  sub_10014C918(v13, v14, v15);
  sub_10014C940(v13, v14, v15);
  sub_100149E5C(v13, v14, v15);
  sub_10014C940(v13, v14, v15);
  *(void *)(v3 + 64) = v7;
  *(void *)(v3 + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100018828();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(v3 + 88);
  uint64_t v17 = *(void *)(v3 + 96);
  if (v17)
  {
    if (result == a1 && v17 == a2 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      *(void *)(v3 + 88) = 0;
      *(void *)(v3 + 96) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10014C60C(uint64_t a1, uint64_t a2)
{
  if (qword_100264530 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10002272C(v5, (uint64_t)qword_100275340);
  os_log_type_t v6 = static os_log_type_t.error.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    sub_10002F3B8(0xD000000000000037, 0x80000001001EF1A0, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v10 = Error.localizedDescription.getter();
    sub_10002F3B8(v10, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s Failed to transcribe with error - %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v12 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 40);
  *(_OWORD *)(v2 + 32) = xmmword_1001F7810;
  unsigned __int8 v14 = *(unsigned char *)(v2 + 48);
  *(unsigned char *)(v2 + 48) = 0x80;
  sub_10014C918(v12, v13, v14);
  sub_10014C940(v12, v13, v14);
  sub_100149E5C(v12, v13, v14);
  sub_10014C940(v12, v13, v14);
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100018828();
    swift_unknownObjectRelease();
  }
  uint64_t result = *(void *)(v2 + 88);
  uint64_t v16 = *(void *)(v2 + 96);
  if (v16)
  {
    if (result == a1 && v16 == a2 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      *(void *)(v2 + 88) = 0;
      *(void *)(v2 + 96) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10014C918(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0x5Fu) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for TranscriptViewDataProvider.TranscriptionState(uint64_t a1)
{
  return sub_10014C940(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_10014C940(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0x5Fu) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s10VoiceMemos26TranscriptViewDataProviderC18TranscriptionStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10014C918(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TranscriptViewDataProvider.TranscriptionState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10014C918(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10014C940(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TranscriptViewDataProvider.TranscriptionState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10014C940(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptViewDataProvider.TranscriptionState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TranscriptViewDataProvider.TranscriptionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 124;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_10014CAEC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 5;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_10014CB0C(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x1Fu;
  return result;
}

uint64_t sub_10014CB1C(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 1 | (32 * a2);
  }
  else
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewDataProvider.TranscriptionState()
{
  return &type metadata for TranscriptViewDataProvider.TranscriptionState;
}

uint64_t sub_10014CB58(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unsigned int v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *unsigned int v3 = v2;
  v3[1] = sub_10014CC38;
  return v5(v2 + 32);
}

uint64_t sub_10014CC38()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  unsigned int v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_10014CD4C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  switch(a3 >> 5)
  {
    case 1:
      if ((a6 & 0xE0) != 0x20) {
        goto LABEL_39;
      }
      goto LABEL_5;
    case 2:
      if ((a6 & 0xE0) != 0x40) {
        goto LABEL_39;
      }
      if (a1 == a4 && a2 == a5 || (char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), v10 = 0, (v9 & 1) != 0)) {
        char v10 = ((a3 & 1) == 0) ^ a6;
      }
      return v10 & 1;
    case 3:
      if ((a6 & 0xE0) != 0x60) {
        goto LABEL_39;
      }
      char v10 = ((a1 & 1) == 0) ^ a4;
      return v10 & 1;
    case 4:
      if (a2 | a1 || a3 != 128)
      {
        if (a1 == 1 && !a2 && a3 == 128)
        {
          if ((a6 & 0xE0) != 0x80 || a4 != 1) {
            goto LABEL_39;
          }
        }
        else if (a1 == 2 && !a2 && a3 == 128)
        {
          if ((a6 & 0xE0) != 0x80 || a4 != 2) {
            goto LABEL_39;
          }
        }
        else if ((a6 & 0xE0) != 0x80 || a4 != 3)
        {
          goto LABEL_39;
        }
        if (a5) {
          goto LABEL_39;
        }
      }
      else if ((a6 & 0xE0) != 0x80 || a5 | a4)
      {
        goto LABEL_39;
      }
      if (a6 == 128)
      {
LABEL_38:
        char v10 = 1;
        return v10 & 1;
      }
LABEL_39:
      char v10 = 0;
      return v10 & 1;
    default:
      if (a6 >= 0x20u) {
        goto LABEL_39;
      }
LABEL_5:
      if (a1 == a4 && a2 == a5) {
        goto LABEL_38;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_10014CF08()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014CF40()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_10014CF88(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_100015B60;
  return sub_10014A53C(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10014D060()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014D098(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100015B60;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100269A08 + dword_100269A08);
  return v6(a1, v4);
}

unint64_t sub_10014D158()
{
  unint64_t result = qword_100269A18;
  if (!qword_100269A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269A18);
  }
  return result;
}

unint64_t sub_10014D1B0()
{
  unint64_t result = qword_100269A20;
  if (!qword_100269A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269A20);
  }
  return result;
}

uint64_t sub_10014D204()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10014D238()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10014D288()
{
  unint64_t result = qword_100269A28;
  if (!qword_100269A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269A28);
  }
  return result;
}

uint64_t sub_10014D2DC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100031F50(v0, qword_1002755C0);
  sub_10002272C(v0, (uint64_t)qword_1002755C0);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10014D340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a3;
  v4[32] = a4;
  v4[29] = a1;
  v4[30] = a2;
  v4[33] = type metadata accessor for MainActor();
  v4[34] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[35] = v6;
  v4[36] = v5;
  return _swift_task_switch(sub_10014D3E0, v6, v5);
}

uint64_t sub_10014D3E0()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  *(void *)(v0 + 296) = v1;
  *(void *)(v0 + 304) = v3;
  uint64_t v5 = *(void *)(v0 + 88);
  *(void *)(v0 + 312) = v4;
  *(void *)(v0 + 320) = v5;
  if (v1)
  {
    IntentParameter.wrappedValue.getter();
    uint64_t v6 = *(void *)(v0 + 96);
    long long v7 = *(_OWORD *)(v0 + 104);
    long long v8 = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 328) = v7;
    *(_OWORD *)(v0 + 344) = v8;
    uint64_t v9 = v7;
    if ((void)v7)
    {
      AppDependency.wrappedValue.getter();
      sub_10001510C((void *)(v0 + 136), *(void *)(v0 + 160));
      *(void *)(v0 + 360) = static MainActor.shared.getter();
      unsigned __int8 v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10026A1A0
                                                                                + dword_10026A1A0);
      char v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v10;
      void *v10 = v0;
      v10[1] = sub_10014D5D0;
      return v14(v0 + 16, v2, v1, v6, v9);
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  sub_1000E72E4();
  swift_allocError();
  *uint64_t v12 = 1;
  swift_willThrow();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10014D5D0()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_10014D8D8;
  }
  else {
    uint64_t v4 = sub_10014D728;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10014D728()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 288);
  return _swift_task_switch(sub_10014D78C, v1, v2);
}

uint64_t sub_10014D78C()
{
  swift_release();
  sub_10002F48C(v0 + 136);
  long long v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 192) = v1;
  *(void *)(v0 + 208) = *(void *)(v0 + 48);
  sub_100035ED4();
  static IntentResult.result<A>(value:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 16);
  sub_100027334(v0 + 216);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10014D8D8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 288);
  return _swift_task_switch(sub_10014D93C, v1, v2);
}

uint64_t sub_10014D93C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10002F48C(v0 + 136);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10014DA1C@<X0>(uint64_t a1@<X8>)
{
  if (qword_100264650 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10002272C(v2, (uint64_t)qword_1002755C0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10014DAC4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *long long v7 = v2;
  v7[1] = sub_100015B60;
  return sub_10014D340(a1, v4, v5, v6);
}

uint64_t sub_10014DB78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10014DBF0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_10014DBA4(uint64_t a1)
{
  unint64_t v2 = sub_10014D288();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for RCCombineRecordings()
{
  return &type metadata for RCCombineRecordings;
}

uint64_t sub_10014DBF0()
{
  uint64_t v36 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  v35 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100028654((uint64_t *)&unk_100265EB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v7 = (char *)&v21 - v6;
  uint64_t v34 = sub_100028654(&qword_1002684D0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v28 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v32 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  unint64_t v33 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v11 = sub_100028654(&qword_100268B00);
  uint64_t v25 = *(void *)(*(void *)(v11 - 8) + 64);
  __n128 v12 = __chkstk_darwin(v11 - 8);
  unsigned __int8 v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v9 + 56);
  uint64_t v27 = v9 + 56;
  uint64_t v29 = v14;
  unint64_t v30 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v14((char *)&v21 - v30, 1, 1, v8, v12);
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  unint64_t v26 = 0x80000001001EDB80;
  IntentDialog.init(stringLiteral:)();
  uint64_t v15 = type metadata accessor for IntentDialog();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v7, 0, 1, v15);
  uint64_t v21 = v4;
  v16(v4, 1, 1, v15);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  uint64_t v23 = v0 + 104;
  v24 = (void (*)(char *, void, uint64_t))v17;
  v17(v35);
  sub_10012E6E8();
  sub_10002738C();
  uint64_t v31 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
  __chkstk_darwin(v31);
  uint64_t v18 = LocalizedStringResource.init(stringLiteral:)();
  __n128 v19 = __chkstk_darwin(v18);
  v29((char *)&v21 - v30, 1, 1, v28, v19);
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  IntentDialog.init(stringLiteral:)();
  v16(v7, 0, 1, v15);
  v16(v21, 1, 1, v15);
  v24(v35, v22, v36);
  IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
  sub_100028654(&qword_100269A38);
  unint64_t v37 = 0xD000000000000027;
  unint64_t v38 = 0x80000001001ED640;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v31;
}

uint64_t sub_10014E110(double a1, double a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void *)(result + 40);
    uint64_t v5 = *(unsigned __int8 *)(result + 48);
    int v6 = *(unsigned __int8 *)(result + 49);
    int v7 = *(unsigned __int8 *)(result + 50);
    int v8 = *(unsigned __int8 *)(result + 51);
    int v9 = *(unsigned __int8 *)(result + 52);
    double v10 = *(double *)(result + 56);
    *(unsigned char *)(result + 49) = 1;
    *(unsigned char *)(result + 50) = v7;
    *(unsigned char *)(result + 51) = v8;
    *(unsigned char *)(result + 52) = v9;
    uint64_t v11 = *(unsigned __int16 *)(result + 32);
    sub_100015758(v4, v5);
    sub_100015758(v4, v5);
    sub_100015758(v4, v5);
    sub_10001576C(v4, v5);
    uint64_t v12 = 256;
    if (!v6) {
      uint64_t v12 = 0;
    }
    uint64_t v13 = v12 | v5;
    uint64_t v14 = 0x10000;
    if (!v7) {
      uint64_t v14 = 0;
    }
    uint64_t v15 = 0x1000000;
    if (!v8) {
      uint64_t v15 = 0;
    }
    uint64_t v16 = v13 | v14 | v15;
    uint64_t v17 = &_mh_execute_header;
    if (!v9) {
      uint64_t v17 = 0;
    }
    sub_100015780(v11, v4, v16 | (unint64_t)v17, v10);
    sub_10001576C(v4, v5);
    sub_10001576C(v4, v5);
    uint64_t result = swift_unknownObjectRelease();
  }
  if (a2 <= 150.0)
  {
    if (a2 >= -150.0) {
      return result;
    }
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    char v18 = 1;
  }
  else
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    char v18 = 0;
  }
  sub_1000D3C20(v18);

  return swift_unknownObjectRelease();
}

void *sub_10014E2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10001510C((void *)(v2 + 16), *(void *)(v2 + 40));
  uint64_t v6 = *(void *)(*result + 80);
  uint64_t v7 = *(void *)(v6 + 16);
  long long v8 = 0uLL;
  if (v7)
  {
    int v9 = (uint64_t *)(v6 + 56);
    do
    {
      uint64_t v10 = *(v9 - 1);
      if (v10 <= a1)
      {
        if (__OFSUB__(a1, v10))
        {
          __break(1u);
          return result;
        }
        uint64_t v11 = *v9;
        if (a1 - v10 < *v9)
        {
          char v12 = 0;
          long long v8 = *(_OWORD *)(v9 - 3);
          goto LABEL_9;
        }
      }
      v9 += 4;
      --v7;
    }
    while (v7);
  }
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  char v12 = 1;
LABEL_9:
  *(_OWORD *)a2 = v8;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  *(unsigned char *)(a2 + 32) = v12;
  return result;
}

uint64_t sub_10014E374()
{
  sub_10002F48C(v0 + 16);
  sub_10000C4A4(v0 + 56);
  sub_10000C4A4(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t destroy for RCMoreButtonHelperController()
{
  swift_unknownObjectWeakDestroy();

  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for RCMoreButtonHelperController(uint64_t a1)
{
  return a1;
}

uint64_t assignWithCopy for RCMoreButtonHelperController(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for RCMoreButtonHelperController(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for RCMoreButtonHelperController(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for RCMoreButtonHelperController()
{
  return &type metadata for RCMoreButtonHelperController;
}

id sub_10014E4E4(uint64_t a1)
{
  return [v1 performControlsAction:a1 position:0 source:0.0];
}

uint64_t destroy for TranscriptViewConfiguration(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 != 255) {
    uint64_t result = sub_100018110(*(void *)(a1 + 8), *(void *)(a1 + 16), v3 & 1);
  }
  int v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 != 255)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v6 = *(void *)(a1 + 56);
    uint64_t v7 = *(void *)(a1 + 64);
    uint64_t v8 = *(void *)(a1 + 72);
    return sub_100036148(v5, v6, v7, v8, v4 & 1);
  }
  return result;
}

uint64_t initializeWithCopy for TranscriptViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  int v4 = (_OWORD *)(a1 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *int v4 = *(_OWORD *)(a2 + 8);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  }
  else
  {
    char v6 = v5 & 1;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    sub_1000184D8(v7, v8, v6);
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v6;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  int v9 = *(unsigned __int8 *)(a2 + 80);
  if (v9 == 255)
  {
    long long v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  }
  else
  {
    char v11 = v9 & 1;
    uint64_t v12 = *(void *)(a2 + 48);
    uint64_t v13 = *(void *)(a2 + 56);
    uint64_t v14 = *(void *)(a2 + 64);
    uint64_t v15 = *(void *)(a2 + 72);
    sub_100036108(v12, v13, v14, v15, v9 & 1);
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v14;
    *(void *)(a1 + 72) = v15;
    *(unsigned char *)(a1 + 80) = v11;
  }
  *(_WORD *)(a1 + 81) = *(_WORD *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t assignWithCopy for TranscriptViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = (long long *)(a1 + 8);
  int v5 = (long long *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v6 == 255)
    {
      long long v8 = *v5;
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *int v4 = v8;
    }
    else
    {
      char v15 = v6 & 1;
      uint64_t v16 = *(void *)(a2 + 8);
      uint64_t v17 = *(void *)(a2 + 16);
      sub_1000184D8(v16, v17, v6 & 1);
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v17;
      *(unsigned char *)(a1 + 24) = v15;
    }
  }
  else if (v6 == 255)
  {
    sub_10014E88C(a1 + 8);
    char v7 = *(unsigned char *)(a2 + 24);
    *int v4 = *v5;
    *(unsigned char *)(a1 + 24) = v7;
  }
  else
  {
    char v9 = v6 & 1;
    uint64_t v10 = *(void *)(a2 + 8);
    uint64_t v11 = *(void *)(a2 + 16);
    sub_1000184D8(v10, v11, v6 & 1);
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(a1 + 16);
    char v14 = *(unsigned char *)(a1 + 24);
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v11;
    *(unsigned char *)(a1 + 24) = v9;
    sub_100018110(v12, v13, v14);
  }
  uint64_t v18 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v18;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  __n128 v19 = (long long *)(a1 + 48);
  uint64_t v20 = (long long *)(a2 + 48);
  int v21 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v21 == 255)
    {
      long long v24 = *v20;
      long long v25 = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *__n128 v19 = v24;
      *(_OWORD *)(a1 + 64) = v25;
    }
    else
    {
      char v36 = v21 & 1;
      uint64_t v37 = *(void *)(a2 + 48);
      uint64_t v38 = *(void *)(a2 + 56);
      uint64_t v39 = *(void *)(a2 + 64);
      uint64_t v40 = *(void *)(a2 + 72);
      sub_100036108(v37, v38, v39, v40, v21 & 1);
      *(void *)(a1 + 48) = v37;
      *(void *)(a1 + 56) = v38;
      *(void *)(a1 + 64) = v39;
      *(void *)(a1 + 72) = v40;
      *(unsigned char *)(a1 + 80) = v36;
    }
  }
  else if (v21 == 255)
  {
    sub_10014E8C0(a1 + 48);
    char v22 = *(unsigned char *)(a2 + 80);
    long long v23 = *(_OWORD *)(a2 + 64);
    *__n128 v19 = *v20;
    *(_OWORD *)(a1 + 64) = v23;
    *(unsigned char *)(a1 + 80) = v22;
  }
  else
  {
    char v26 = v21 & 1;
    uint64_t v27 = *(void *)(a2 + 48);
    uint64_t v28 = *(void *)(a2 + 56);
    uint64_t v29 = *(void *)(a2 + 64);
    uint64_t v30 = *(void *)(a2 + 72);
    sub_100036108(v27, v28, v29, v30, v21 & 1);
    uint64_t v31 = *(void *)(a1 + 48);
    uint64_t v32 = *(void *)(a1 + 56);
    uint64_t v33 = *(void *)(a1 + 64);
    uint64_t v34 = *(void *)(a1 + 72);
    char v35 = *(unsigned char *)(a1 + 80);
    *(void *)(a1 + 48) = v27;
    *(void *)(a1 + 56) = v28;
    *(void *)(a1 + 64) = v29;
    *(void *)(a1 + 72) = v30;
    *(unsigned char *)(a1 + 80) = v26;
    sub_100036148(v31, v32, v33, v34, v35);
  }
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  uint64_t v41 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v41;
  return a1;
}

uint64_t sub_10014E88C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10014E8C0(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for TranscriptViewConfiguration(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for TranscriptViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  int v4 = (_OWORD *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  if (v5 == 255) {
    goto LABEL_4;
  }
  int v6 = *(unsigned __int8 *)(a2 + 24);
  if (v6 == 255)
  {
    sub_10014E88C(a1 + 8);
LABEL_4:
    *(_OWORD *)(a1 + 8) = *v4;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  sub_100018110(v7, v8, v5 & 1);
LABEL_6:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  int v9 = *(unsigned __int8 *)(a1 + 80);
  if (v9 != 255)
  {
    int v10 = *(unsigned __int8 *)(a2 + 80);
    if (v10 != 255)
    {
      uint64_t v12 = *(void *)(a1 + 48);
      uint64_t v13 = *(void *)(a1 + 56);
      uint64_t v14 = *(void *)(a1 + 64);
      uint64_t v15 = *(void *)(a1 + 72);
      long long v16 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v16;
      *(unsigned char *)(a1 + 80) = v10 & 1;
      sub_100036148(v12, v13, v14, v15, v9 & 1);
      goto LABEL_11;
    }
    sub_10014E8C0(a1 + 48);
  }
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_11:
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptViewConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 97)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptViewConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewConfiguration()
{
  return &type metadata for TranscriptViewConfiguration;
}

uint64_t destroy for EmptyStateStyle(uint64_t a1)
{
  return sub_100036148(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for EmptyStateStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100036108(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for EmptyStateStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100036108(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_100036148(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for EmptyStateStyle(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for EmptyStateStyle(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_100036148(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmptyStateStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EmptyStateStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10014ECD8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_10014ECE0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for EmptyStateStyle()
{
  return &type metadata for EmptyStateStyle;
}

uint64_t destroy for HighlightStyle(uint64_t a1)
{
  return sub_100018110(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s10VoiceMemos14HighlightStyleOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000184D8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for HighlightStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000184D8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100018110(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for HighlightStyle(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100018110(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HighlightStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HighlightStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HighlightStyle()
{
  return &type metadata for HighlightStyle;
}

uint64_t sub_10014EE98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a2;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      goto LABEL_7;
    }
    return 0;
  }
  if (!*(unsigned char *)(a2 + 16)) {
    return 0;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a1 + 8);
  if ((sub_100018514(v4, v5) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = v6;
  uint64_t v4 = v7;
LABEL_7:

  return sub_100018514(v4, v5);
}

uint64_t sub_10014EF14(uint64_t a1, uint64_t a2)
{
  sub_100143548(a1, (uint64_t)v4);
  sub_100143548(a2, (uint64_t)v5);
  return sub_10014EFCC((uint64_t)v4, (uint64_t)v5) & 1;
}

BOOL sub_10014EF60(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  char v12 = *(unsigned char *)(a1 + 96);
  long long v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  char v14 = *(unsigned char *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_100018214((uint64_t)v11, (uint64_t)v13);
}

uint64_t sub_10014EFCC(uint64_t a1, uint64_t a2)
{
  sub_100143548(a1, (uint64_t)&v19);
  uint64_t v3 = v19;
  if ((v23 & 1) == 0)
  {
    uint64_t v11 = v20;
    sub_100143548(a2, (uint64_t)&v14);
    if ((v18 & 1) == 0)
    {
      if (v3 == v14 && v11 == v15) {
        goto LABEL_24;
      }
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      return v10 & 1;
    }
LABEL_10:
    char v10 = 0;
    return v10 & 1;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v22;
  sub_100143548(a2, (uint64_t)&v14);
  if (v18 != 1) {
    goto LABEL_10;
  }
  uint64_t v7 = v16;
  uint64_t v8 = v17;
  if (!v5)
  {
    if (!v15) {
      goto LABEL_17;
    }
    goto LABEL_10;
  }
  if (!v15) {
    goto LABEL_10;
  }
  if (v3 == v14 && v5 == v15 || (char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), v10 = 0, (v9 & 1) != 0))
  {
LABEL_17:
    if (v6)
    {
      if (v8 && (v4 == v7 && v6 == v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
        goto LABEL_24;
      }
    }
    else if (!v8)
    {
LABEL_24:
      char v10 = 1;
      return v10 & 1;
    }
    goto LABEL_10;
  }
  return v10 & 1;
}

unsigned char *storeEnumTagSinglePayload for AutoScrollStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014F1D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoScrollStyle()
{
  return &type metadata for AutoScrollStyle;
}

unint64_t sub_10014F210()
{
  unint64_t result = qword_100269B80[0];
  if (!qword_100269B80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100269B80);
  }
  return result;
}

unint64_t sub_10014F268()
{
  unint64_t result = qword_100269C08;
  if (!qword_100269C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269C08);
  }
  return result;
}

unint64_t sub_10014F2C0()
{
  unint64_t result = qword_100269C10;
  if (!qword_100269C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269C10);
  }
  return result;
}

unint64_t sub_10014F318()
{
  unint64_t result = qword_100269C18;
  if (!qword_100269C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269C18);
  }
  return result;
}

uint64_t sub_10014F36C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100031F50(v0, qword_1002755D8);
  sub_10002272C(v0, (uint64_t)qword_1002755D8);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10014F3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  v3[15] = type metadata accessor for MainActor();
  v3[16] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[17] = v5;
  v3[18] = v4;
  return _swift_task_switch(sub_10014F470, v5, v4);
}

uint64_t sub_10014F470()
{
  IntentParameter.wrappedValue.getter();
  if (*(unsigned char *)(v0 + 192) == 1)
  {
    AppDependency.wrappedValue.getter();
    uint64_t v1 = *sub_10001510C((void *)(v0 + 56), *(void *)(v0 + 80));
    long long v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    *long long v2 = v0;
    v2[1] = sub_10014F5E0;
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 112);
    return sub_10015752C(v4, v3, v1);
  }
  else
  {
    AppDependency.wrappedValue.getter();
    sub_10001510C((void *)(v0 + 16), *(void *)(v0 + 40));
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    unsigned int v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v6;
    *unsigned int v6 = v0;
    v6[1] = sub_10014F804;
    return sub_100156FA4();
  }
}

uint64_t sub_10014F5E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_10014F794;
  }
  else {
    uint64_t v5 = sub_10014F71C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10014F71C()
{
  swift_release();
  sub_10002F48C(v0 + 56);
  static IntentResult.result<>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10014F794()
{
  swift_release();
  sub_10002F48C(v0 + 56);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10014F804()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_10014FA3C;
  }
  else {
    uint64_t v4 = sub_10014F960;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10014F960()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  return _swift_task_switch(sub_10014F9C4, v1, v2);
}

uint64_t sub_10014F9C4()
{
  swift_release();
  sub_10002F48C(v0 + 16);
  static IntentResult.result<>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10014FA3C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  return _swift_task_switch(sub_10014FAA0, v1, v2);
}

uint64_t sub_10014FAA0()
{
  swift_release();
  sub_10002F48C(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10014FB10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10014FB4C()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_10014FB88()
{
  unint64_t result = qword_100269C20;
  if (!qword_100269C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269C20);
  }
  return result;
}

unint64_t sub_10014FBE0()
{
  unint64_t result = qword_100269C28;
  if (!qword_100269C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269C28);
  }
  return result;
}

uint64_t sub_10014FC34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10014FC50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10014FCA0@<X0>(uint64_t a1@<X8>)
{
  if (qword_100264658 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10002272C(v2, (uint64_t)qword_1002755D8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10014FD48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for IntentAuthenticationPolicy.alwaysAllowed(_:);
  uint64_t v3 = type metadata accessor for IntentAuthenticationPolicy();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_10014FDBC(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100015B60;
  return sub_10014F3D0(a1, v5, v4);
}

uint64_t sub_10014FE68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10014FEE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10014FE90(uint64_t a1)
{
  unint64_t v2 = sub_10014F2C0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for RCControlCenterToggleRecording()
{
  return &type metadata for RCControlCenterToggleRecording;
}

uint64_t sub_10014FEE0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100028654((uint64_t *)&unk_100265EB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100028654(&qword_100269C38);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100028654(&qword_100269C40);
  uint64_t v10 = type metadata accessor for LocalizedStringResource();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v12 = sub_100028654(&qword_100268B00);
  __n128 v13 = __chkstk_darwin(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))((char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v10, v13);
  char v20 = 2;
  uint64_t v15 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  uint64_t v16 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  uint64_t v17 = IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  sub_100028654(&qword_100269C48);
  v19[1] = 0xD00000000000002FLL;
  v19[2] = 0x80000001001ED610;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v17;
}

void sub_100150328(void *a1)
{
  uint64_t v2 = v1;
  if (a1) {
    [a1 removeTimeObserver:v1];
  }
  uint64_t v3 = OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_timeController;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_timeController);
  if (v4)
  {
    [v4 addTimeObserver:v1];
    uint64_t v5 = *(void *)(v1 + v3);
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_dataProvider);
  uint64_t v7 = *(void **)(v6 + 56);
  *(void *)(v6 + 56) = v5;
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_10014A098(v7);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(*(void *)(v2 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_interactionDelegate) + 56) = *(void *)(v2 + v3);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_configurationMediator);
  uint64_t v9 = *(void *)(v2 + v3);
  swift_unknownObjectRetain();
  id v10 = v8;
  sub_1000F81F0(v9);
}

id sub_1001508B8()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_isDisplayingTranscriptView) = 1;
  char v1 = *(unsigned char *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_isWindowSceneInForeground);
  id result = *(id *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_timeController);
  if (!result)
  {
    if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_isWindowSceneInForeground)) {
      return result;
    }
    goto LABEL_6;
  }
  id result = [result timeControllerState];
  if (result) {
    char v3 = 0;
  }
  else {
    char v3 = v1;
  }
  if (v3)
  {
LABEL_6:
    sub_10001510C((void *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_transcriptViewPresenter), *(void *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_transcriptViewPresenter + 24));
    return (id)sub_1001428DC();
  }
  return result;
}

uint64_t sub_100150994()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_contextProvider);
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 48);
  int v4 = *(unsigned __int8 *)(v1 + 49);
  int v5 = *(unsigned __int8 *)(v1 + 50);
  int v6 = *(unsigned __int8 *)(v1 + 51);
  int v7 = *(unsigned __int8 *)(v1 + 52);
  double v8 = *(double *)(v1 + 56);
  *(unsigned char *)(v1 + 49) = v4;
  *(unsigned char *)(v1 + 50) = v5;
  *(unsigned char *)(v1 + 51) = v6;
  *(unsigned char *)(v1 + 52) = 1;
  uint64_t v9 = *(unsigned __int16 *)(v1 + 32);
  sub_100015758(v2, v3);
  sub_100015758(v2, v3);
  sub_100015758(v2, v3);
  swift_retain();
  sub_10001576C(v2, v3);
  uint64_t v10 = 256;
  if (!v4) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v3;
  uint64_t v12 = 0x10000;
  if (!v5) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 0x1000000;
  if (!v6) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v11 | v12 | v13;
  uint64_t v15 = &_mh_execute_header;
  if (!v7) {
    uint64_t v15 = 0;
  }
  sub_100015780(v9, v2, v14 | (unint64_t)v15, v8);
  sub_10001576C(v2, v3);
  sub_10001576C(v2, v3);

  return swift_release();
}

uint64_t sub_100150B0C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_contextProvider);
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 48);
  int v4 = *(unsigned __int8 *)(v1 + 49);
  int v5 = *(unsigned __int8 *)(v1 + 50);
  int v6 = *(unsigned __int8 *)(v1 + 51);
  int v7 = *(unsigned __int8 *)(v1 + 52);
  double v8 = *(double *)(v1 + 56);
  *(unsigned char *)(v1 + 49) = v4;
  *(unsigned char *)(v1 + 50) = v5;
  *(_WORD *)(v1 + 51) = v6;
  uint64_t v9 = *(unsigned __int16 *)(v1 + 32);
  sub_100015758(v2, v3);
  sub_100015758(v2, v3);
  sub_100015758(v2, v3);
  swift_retain();
  sub_10001576C(v2, v3);
  uint64_t v10 = 256;
  if (!v4) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v3;
  uint64_t v12 = 0x10000;
  if (!v5) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 0x1000000;
  if (!v6) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v11 | v12 | v13;
  uint64_t v15 = &_mh_execute_header;
  if (!v7) {
    uint64_t v15 = 0;
  }
  sub_100015780(v9, v2, v14 | (unint64_t)v15, v8);
  sub_10001576C(v2, v3);
  sub_10001576C(v2, v3);

  return swift_release();
}

id sub_100150C80()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptViewCoordinator();
  [super dealloc];
}

id sub_100150D70()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_isDisplayingTranscriptView) == 1) {
    int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_isWindowSceneInForeground);
  }
  else {
    int v1 = 0;
  }
  id result = *(id *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_timeController);
  if (result) {
    id result = [result timeControllerState];
  }
  if (v1)
  {
    sub_10001510C((void *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_transcriptViewPresenter), *(void *)(v0 + OBJC_IVAR____TtC10VoiceMemos25TranscriptViewCoordinator_transcriptViewPresenter + 24));
    return (id)sub_1001428DC();
  }
  return result;
}

uint64_t sub_100150DF0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100150FEC()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    int v1 = (void *)result;
    sub_100151830(result + OBJC_IVAR____TtC10VoiceMemos24RCMoreActionsMenuCreator_controller, (uint64_t)v5);

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = (void *)Strong;
      int v4 = (void *)swift_unknownObjectWeakLoadStrong();
      [v3 performControlsAction:29 position:v4 source:0.0];

      swift_unknownObjectRelease();
    }
    return sub_10003489C((uint64_t)v5);
  }
  return result;
}

uint64_t sub_1001510A0(uint64_t a1, uint64_t a2)
{
  return sub_100151678(a1, a2, 23);
}

uint64_t sub_1001510A8()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    int v1 = (void *)result;
    sub_100151830(result + OBJC_IVAR____TtC10VoiceMemos24RCMoreActionsMenuCreator_controller, (uint64_t)v2);

    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_getObjectType();
      sub_10014E4E4(23);
      sub_10014E4E4(45);
      swift_unknownObjectRelease();
    }
    return sub_10003489C((uint64_t)v2);
  }
  return result;
}

uint64_t sub_10015114C(uint64_t a1, uint64_t a2)
{
  return sub_100151678(a1, a2, 46);
}

uint64_t sub_100151154(uint64_t a1, uint64_t a2)
{
  return sub_100151678(a1, a2, 44);
}

uint64_t sub_10015115C(void (*a1)(uint64_t))
{
  sub_100028654(&qword_100264998);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001F2010;
  *(void *)(v2 + 32) = sub_1001511F8();
  specialized Array._endMutation()();
  a1(v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001511F8()
{
  id v0 = [self sharedStyleProvider];
  int v1 = self;
  id v2 = [v1 sharedRecordingsModelInteractor];
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 isFavoriteForUUID:v3];

  id v5 = [v0 favoriteActivitySystemImageName:v4];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [self systemImageNamed:v6];

  id v8 = [v1 sharedRecordingsModelInteractor];
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 isFavoriteForUUID:v9];

  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  id v12 = [v1 sharedRecordingsModelInteractor];
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v14 = [v12 isFavoriteForUUID:v13];

  sub_100151774();
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = v14;
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1001515AC(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v5 = (void *)result;
    sub_100151830(result + OBJC_IVAR____TtC10VoiceMemos24RCMoreActionsMenuCreator_controller, (uint64_t)v7);

    if (swift_unknownObjectWeakLoadStrong())
    {
      if (a3) {
        uint64_t v6 = 39;
      }
      else {
        uint64_t v6 = 38;
      }
      swift_getObjectType();
      sub_10014E4E4(v6);
      swift_unknownObjectRelease();
    }
    return sub_10003489C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_100151650(uint64_t a1, uint64_t a2)
{
  return sub_100151678(a1, a2, 13);
}

uint64_t sub_100151658(uint64_t a1, uint64_t a2)
{
  return sub_100151678(a1, a2, 42);
}

uint64_t sub_100151660(uint64_t a1, uint64_t a2)
{
  return sub_100151678(a1, a2, 31);
}

uint64_t sub_100151668(uint64_t a1, uint64_t a2)
{
  return sub_100151678(a1, a2, 47);
}

uint64_t sub_100151670(uint64_t a1, uint64_t a2)
{
  return sub_100151678(a1, a2, 37);
}

uint64_t sub_100151678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v5 = (void *)result;
    sub_100151830(result + OBJC_IVAR____TtC10VoiceMemos24RCMoreActionsMenuCreator_controller, (uint64_t)v6);

    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_getObjectType();
      sub_10014E4E4(a3);
      swift_unknownObjectRelease();
    }
    return sub_10003489C((uint64_t)v6);
  }
  return result;
}

id sub_100151740()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RCMoreActionsMenuCreator();
  return [super dealloc];
}

unint64_t sub_100151774()
{
  unint64_t result = qword_100266358;
  if (!qword_100266358)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100266358);
  }
  return result;
}

uint64_t sub_1001517B4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001517EC()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100151824(uint64_t a1)
{
  return sub_1001515AC(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_100151830(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_10015188C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  id v5 = &v2[OBJC_IVAR____TtC10VoiceMemos24RCMoreActionsMenuCreator_recordingUUID];
  *(void *)id v5 = a1;
  *((void *)v5 + 1) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  sub_100021CC8((uint64_t)v8, (uint64_t)&v2[OBJC_IVAR____TtC10VoiceMemos24RCMoreActionsMenuCreator_controller]);
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for RCMoreActionsMenuCreator();
  return [super init];
}

id sub_1001519B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VMDateTime();
  [super dealloc];
}

uint64_t type metadata accessor for VMDateTime()
{
  return self;
}

uint64_t sub_100151A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1000285F8(a1, &qword_1002699E0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_100151B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000285F8(a1, &qword_1002699E0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  type metadata accessor for AttributedString();
  return swift_task_create();
}

uint64_t sub_100151D1C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = type metadata accessor for IntentSystemContext.Source();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_100028654(&qword_10026A088);
  v2[11] = swift_task_alloc();
  sub_100028654((uint64_t *)&unk_10026A090);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for IntentSystemContext();
  v2[15] = v4;
  unsigned char v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[18] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[19] = v6;
  v2[20] = v5;
  return _swift_task_switch(sub_100151EEC, v6, v5);
}

uint64_t sub_100151EEC()
{
  v0[4] = v0[5];
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[11];
  uint64_t v29 = v0[10];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  sub_10003629C();
  AppIntent.systemContext.getter();
  IntentSystemContext.source.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v5, enum case for IntentSystemContext.Source.actionButton(_:), v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  uint64_t v9 = v6 + *(int *)(v29 + 48);
  sub_10002869C(v4, v6, (uint64_t *)&unk_10026A090);
  sub_10002869C(v5, v9, (uint64_t *)&unk_10026A090);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v10(v6, 1, v7) == 1)
  {
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[7];
    sub_1000285F8(v0[13], (uint64_t *)&unk_10026A090);
    sub_1000285F8(v11, (uint64_t *)&unk_10026A090);
    if (v10(v9, 1, v12) == 1)
    {
      sub_1000285F8(v0[11], (uint64_t *)&unk_10026A090);
      char v13 = 1;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v14 = v0[7];
  sub_10002869C(v0[11], v0[12], (uint64_t *)&unk_10026A090);
  unsigned int v15 = v10(v9, 1, v14);
  uint64_t v17 = v0[13];
  uint64_t v16 = v0[14];
  uint64_t v18 = v0[12];
  if (v15 == 1)
  {
    uint64_t v19 = v0[7];
    uint64_t v20 = v0[8];
    sub_1000285F8(v0[13], (uint64_t *)&unk_10026A090);
    sub_1000285F8(v16, (uint64_t *)&unk_10026A090);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
LABEL_6:
    sub_1000285F8(v0[11], &qword_10026A088);
    char v13 = 0;
    goto LABEL_8;
  }
  uint64_t v30 = v0[11];
  uint64_t v22 = v0[8];
  uint64_t v21 = v0[9];
  uint64_t v23 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v9, v23);
  sub_1001638B4(&qword_10026A0A8, (void (*)(uint64_t))&type metadata accessor for IntentSystemContext.Source);
  char v13 = dispatch thunk of static Equatable.== infix(_:_:)();
  long long v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v24(v21, v23);
  sub_1000285F8(v17, (uint64_t *)&unk_10026A090);
  sub_1000285F8(v16, (uint64_t *)&unk_10026A090);
  v24(v18, v23);
  sub_1000285F8(v30, (uint64_t *)&unk_10026A090);
LABEL_8:
  IntentParameter.wrappedValue.getter();
  uint64_t v26 = v0[2];
  uint64_t v25 = v0[3];
  v0[21] = v25;
  uint64_t v27 = (void *)swift_task_alloc();
  v0[22] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_100152288;
  return sub_100153A30(v13 & 1, v26, v25);
}

uint64_t sub_100152288()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 152);
    uint64_t v4 = *(void *)(v2 + 160);
    uint64_t v5 = sub_100152454;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 152);
    uint64_t v4 = *(void *)(v2 + 160);
    uint64_t v5 = sub_1001523A4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1001523A4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100152454()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100152518(uint64_t a1)
{
  v1[4] = a1;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for IntentSystemContext.Source();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = sub_100028654(&qword_10026A088);
  v1[12] = swift_task_alloc();
  sub_100028654((uint64_t *)&unk_10026A090);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OSSignpostID();
  v1[16] = v4;
  v1[17] = *(void *)(v4 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v1[21] = v5;
  v1[22] = *(void *)(v5 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for OSSignposter();
  v1[24] = v6;
  v1[25] = *(void *)(v6 - 8);
  v1[26] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for IntentSystemContext();
  v1[27] = v7;
  v1[28] = *(void *)(v7 - 8);
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[31] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[32] = v9;
  v1[33] = v8;
  return _swift_task_switch(sub_100152884, v9, v8);
}

uint64_t sub_100152884()
{
  if ([*(id *)(v0 + 32) isRecording])
  {
    uint64_t v1 = *(void **)(v0 + 32);
    swift_release();
    if ([v1 audioRecorder])
    {
      *(void *)(v0 + 24) = &OBJC_PROTOCOL___VMAudioRecorder;
      uint64_t v2 = swift_dynamicCastObjCProtocolConditional();
      if (v2
        && ((uint64_t v3 = (void *)v2,
             swift_getObjectType(),
             sub_100025F4C(0, (unint64_t *)&qword_100269240),
             swift_dynamicCastMetatype())
          ? (uint64_t v4 = v3)
          : (uint64_t v4 = 0),
            v4))
      {
        uint64_t v5 = *(void *)(v0 + 240);
        uint64_t v7 = *(void *)(v0 + 216);
        uint64_t v6 = *(void *)(v0 + 224);
        uint64_t v8 = type metadata accessor for Date();
        uint64_t v9 = *(void *)(v8 - 8);
        uint64_t v66 = swift_task_alloc();
        sub_100121178();
        AppIntent.systemContext.getter();
        sub_100028654(&qword_100265A20);
        uint64_t v10 = swift_task_alloc();
        IntentSystemContext.preciseTimestamp.getter();
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
        {
          swift_unknownObjectRelease();
          sub_1000285F8(v10, &qword_100265A20);
          swift_task_dealloc();
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v66, v10, v8);
          swift_task_dealloc();
          RCCurrentMediaTime();
          double v54 = v53;
          uint64_t v55 = swift_task_alloc();
          Date.init()();
          Date.timeIntervalSince(_:)();
          double v57 = v56;
          v58 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
          v58(v55, v8);
          swift_task_dealloc();
          [v4 setStopRecordingTime:v54 + v57];
          swift_unknownObjectRelease();
          v58(v66, v8);
        }
        swift_task_dealloc();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    if (![*(id *)(v0 + 32) isRecording])
    {
      sub_100163A20();
      swift_allocError();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v63 = *(uint64_t (**)(void))(v0 + 8);
LABEL_39:
      return v63();
    }
    if ([*(id *)(v0 + 32) audioRecorder])
    {
      *(void *)(v0 + 16) = &OBJC_PROTOCOL___VMAudioRecorder;
      uint64_t v59 = swift_dynamicCastObjCProtocolConditional();
      if (v59)
      {
        uint64_t v60 = v59;
        swift_getObjectType();
        sub_100025F4C(0, (unint64_t *)&qword_100269240);
        if (!swift_dynamicCastMetatype()) {
          uint64_t v60 = 0;
        }
        if (v60)
        {
          v61 = *(void **)(v0 + 32);
          uint64_t ObjectType = swift_getObjectType();
          sub_100154F7C((uint64_t)nullsub_9, 0, ObjectType);
          [v61 performAction:4 atPosition:0 forUUID:0 sourceController:0 source:0.0];
          swift_unknownObjectRelease();
LABEL_38:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v63 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_39;
        }
      }
      swift_unknownObjectRelease();
    }
    [*(id *)(v0 + 32) performAction:4 atPosition:0 forUUID:0 sourceController:0 source:0.0];
    goto LABEL_38;
  }
  if (qword_100264530 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_10002272C(v13, (uint64_t)qword_100275340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
  OSSignposter.init(logger:)();
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  unsigned int v15 = OSSignposter.logHandle.getter();
  os_signpost_type_t v16 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v17 = *(void *)(v0 + 152);
    uint64_t v18 = *(void *)(v0 + 128);
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    unint64_t v21 = (v19 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v20(v17, *(void *)(v0 + 160), v18);
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    os_signpost_id_t v23 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, v16, v23, "ToggleRecordingStart", "", v22, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 136);

    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    unint64_t v21 = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v25 = *(void *)(v0 + 224);
  uint64_t v26 = *(void *)(v0 + 232);
  uint64_t v28 = *(void *)(v0 + 152);
  uint64_t v27 = *(void *)(v0 + 160);
  uint64_t v29 = *(void *)(v0 + 128);
  uint64_t v64 = *(void *)(v0 + 120);
  uint64_t v65 = *(void *)(v0 + 216);
  uint64_t v30 = *(void *)(v0 + 112);
  uint64_t v31 = *(void *)(v0 + 96);
  uint64_t v67 = *(void *)(v0 + 88);
  uint64_t v32 = *(void *)(v0 + 64);
  uint64_t v33 = *(void *)(v0 + 72);
  *(void *)(v0 + 272) = v20;
  *(void *)(v0 + 280) = v21;
  v20(v28, v27, v29);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(void *)(v0 + 288) = OSSignpostIntervalState.init(id:isOpen:)();
  sub_100121178();
  AppIntent.systemContext.getter();
  IntentSystemContext.source.getter();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v65);
  (*(void (**)(uint64_t, void, uint64_t))(v33 + 104))(v30, enum case for IntentSystemContext.Source.actionButton(_:), v32);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  uint64_t v34 = v31 + *(int *)(v67 + 48);
  sub_10002869C(v64, v31, (uint64_t *)&unk_10026A090);
  sub_10002869C(v30, v34, (uint64_t *)&unk_10026A090);
  char v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  if (v35(v31, 1, v32) != 1)
  {
    uint64_t v39 = *(void *)(v0 + 64);
    sub_10002869C(*(void *)(v0 + 96), *(void *)(v0 + 104), (uint64_t *)&unk_10026A090);
    int v40 = v35(v34, 1, v39);
    uint64_t v42 = *(void *)(v0 + 112);
    uint64_t v41 = *(void *)(v0 + 120);
    uint64_t v43 = *(void *)(v0 + 104);
    if (v40 != 1)
    {
      uint64_t v46 = *(void *)(v0 + 96);
      uint64_t v48 = *(void *)(v0 + 72);
      uint64_t v47 = *(void *)(v0 + 80);
      uint64_t v49 = *(void *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v47, v34, v49);
      sub_1001638B4(&qword_10026A0A8, (void (*)(uint64_t))&type metadata accessor for IntentSystemContext.Source);
      char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
      v50 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v50(v47, v49);
      sub_1000285F8(v42, (uint64_t *)&unk_10026A090);
      sub_1000285F8(v41, (uint64_t *)&unk_10026A090);
      v50(v43, v49);
      sub_1000285F8(v46, (uint64_t *)&unk_10026A090);
      goto LABEL_23;
    }
    uint64_t v44 = *(void *)(v0 + 64);
    uint64_t v45 = *(void *)(v0 + 72);
    sub_1000285F8(*(void *)(v0 + 112), (uint64_t *)&unk_10026A090);
    sub_1000285F8(v41, (uint64_t *)&unk_10026A090);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
    goto LABEL_20;
  }
  uint64_t v36 = *(void *)(v0 + 120);
  uint64_t v37 = *(void *)(v0 + 64);
  sub_1000285F8(*(void *)(v0 + 112), (uint64_t *)&unk_10026A090);
  sub_1000285F8(v36, (uint64_t *)&unk_10026A090);
  if (v35(v34, 1, v37) != 1)
  {
LABEL_20:
    sub_1000285F8(*(void *)(v0 + 96), &qword_10026A088);
    char v38 = 0;
    goto LABEL_23;
  }
  sub_1000285F8(*(void *)(v0 + 96), (uint64_t *)&unk_10026A090);
  char v38 = 1;
LABEL_23:
  v51 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v51;
  void *v51 = v0;
  v51[1] = sub_1001532CC;
  return sub_100153A30(v38 & 1, 0, 0);
}

uint64_t sub_1001532CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 264);
  uint64_t v4 = *(void *)(v2 + 256);
  if (v0) {
    uint64_t v5 = sub_10015371C;
  }
  else {
    uint64_t v5 = sub_100153408;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100153408()
{
  swift_release();
  uint64_t v1 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v2 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 40);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
      uint64_t v6 = "";
    }
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v27 = *(void *)(v0 + 208);
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v25 = *(void *)(v0 + 160);
    uint64_t v26 = *(void *)(v0 + 192);
    uint64_t v18 = *(void *)(v0 + 136);
    uint64_t v17 = *(void *)(v0 + 144);
    uint64_t v19 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272))(v16, v17, v19);
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v1, v2, v21, "ToggleRecordingStart", v6, v20, 2u);
    swift_slowDealloc();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v22(v17, v19);
    v22(v25, v19);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v27, v26);
    swift_release();
    v22(v16, v19);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v12 = *(void *)(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 128);

    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v14(v11, v13);
    v14(v10, v13);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_signpost_id_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_10015371C()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[17];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void *sub_100153880(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    unint64_t result = (void *)sub_10015E8DC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        uint64_t v5 = (const opaqueCMFormatDescription *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v5 = (const opaqueCMFormatDescription *)*(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      FourCharCode MediaSubType = CMFormatDescriptionGetMediaSubType(v5);

      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_10015E8DC(v8 > 1, v9 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      *((_DWORD *)&_swiftEmptyArrayStorage[4] + v9) = MediaSubType;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001539CC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 9; ; ++i)
  {
    uint64_t v4 = i - 7;
    if (__OFADD__(i - 8, 1)) {
      break;
    }
    BOOL v6 = *(_DWORD *)(a2 + 4 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100153A30(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 144) = a3;
  *(void *)(v4 + 152) = v3;
  *(void *)(v4 + 136) = a2;
  *(unsigned char *)(v4 + 216) = a1;
  type metadata accessor for MainActor();
  *(void *)(v4 + 160) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 168) = v6;
  *(void *)(v4 + 176) = v5;
  return _swift_task_switch(sub_100153AD0, v6, v5);
}

uint64_t sub_100153AD0()
{
  if ([*(id *)(v0 + 152) isRecording])
  {
    swift_release();
    sub_1001638FC();
    swift_allocError();
    *uint64_t v1 = 0;
    swift_willThrow();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    if (*(void *)(v0 + 144)) {
      NSString v4 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v4 = 0;
    }
    *(void *)(v0 + 184) = v4;
    uint64_t v5 = *(void **)(v0 + 152);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100153C70;
    uint64_t v6 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_100159E20;
    *(void *)(v0 + 104) = &unk_100228690;
    *(void *)(v0 + 112) = v6;
    [v5 _startCapturing:v4 completion:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
}

uint64_t sub_100153C70()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  uint64_t v2 = *(void *)(*(void *)v0 + 168);
  return _swift_task_switch(sub_100153D78, v2, v1);
}

uint64_t sub_100153D78()
{
  uint64_t v1 = *(void **)(v0 + 152);

  id v2 = [v1 audioRecorder];
  *(void *)(v0 + 192) = v2;
  if (v2)
  {
    *(void *)(v0 + 120) = &OBJC_PROTOCOL___VMAudioRecorder;
    *(void *)(v0 + 128) = &OBJC_PROTOCOL___VMRecordingController;
    uint64_t v3 = swift_dynamicCastObjCProtocolConditional();
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      swift_getObjectType();
      sub_100025F4C(0, (unint64_t *)&qword_100269240);
      if (!swift_dynamicCastMetatype()) {
        uint64_t v4 = 0;
      }
      if (v4)
      {
        char v5 = *(unsigned char *)(v0 + 216);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v7 = [v4 context];
        v7[OBJC_IVAR____TtC10VoiceMemos18VMRecordingContext_isActionButtonInitiated] = v5;

        uint64_t v8 = (void *)swift_task_alloc();
        *(void *)(v0 + 200) = v8;
        *uint64_t v8 = v0;
        v8[1] = sub_100153F38;
        return sub_100154154(ObjectType);
      }
    }
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100153F38()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 176);
  uint64_t v4 = *(void *)(v2 + 168);
  if (v0) {
    char v5 = sub_1001540E4;
  }
  else {
    char v5 = sub_100154074;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100154074()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001540E4()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100154154(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  v2[14] = type metadata accessor for MainActor();
  v2[15] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  unsigned char v2[16] = v4;
  v2[17] = v3;
  return _swift_task_switch(sub_1001541F0, v4, v3);
}

uint64_t sub_1001541F0()
{
  if ([*(id *)(v0 + 104) recording])
  {
    swift_release();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = type metadata accessor for NSObject.KeyValueObservingPublisher();
    sub_100027F14(&qword_10026A058);
    swift_getWitnessTable();
    uint64_t v45 = type metadata accessor for Publishers.Map();
    *(void *)(v0 + 144) = v45;
    *(void *)(v0 + 152) = *(void *)(v45 - 8);
    *(void *)(v0 + 160) = swift_task_alloc();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = swift_task_alloc();
    *(void *)swift_task_alloc() = v3;
    swift_getKeyPath();
    swift_task_dealloc();
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
    swift_release();
    Publisher.map<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
    swift_task_dealloc();
    sub_100027F14(&qword_10026A060);
    uint64_t v7 = type metadata accessor for NSObject.KeyValueObservingPublisher();
    swift_getWitnessTable();
    uint64_t v8 = type metadata accessor for Publishers.CompactMap();
    *(void *)(v0 + 168) = v8;
    uint64_t v9 = v8;
    *(void *)(v0 + 176) = *(void *)(v8 - 8);
    *(void *)(v0 + 184) = swift_task_alloc();
    uint64_t v10 = *(void *)(v7 - 8);
    uint64_t v11 = swift_task_alloc();
    *(void *)swift_task_alloc() = v3;
    swift_getKeyPath();
    swift_task_dealloc();
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
    swift_release();
    Publisher.compactMap<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v7);
    swift_task_dealloc();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v12 = swift_getWitnessTable();
    *(void *)(v0 + 16) = v45;
    *(void *)(v0 + 24) = v9;
    *(void *)(v0 + 32) = WitnessTable;
    *(void *)(v0 + 40) = v12;
    uint64_t v13 = type metadata accessor for Publishers.Merge();
    swift_getWitnessTable();
    uint64_t v14 = type metadata accessor for Publishers.First();
    swift_getWitnessTable();
    uint64_t v15 = type metadata accessor for Publishers.TryMap();
    uint64_t v41 = sub_100025F4C(255, &qword_10026A068);
    uint64_t v40 = swift_getWitnessTable();
    unint64_t v39 = sub_100163858();
    *(void *)(v0 + 48) = v15;
    uint64_t v16 = v15;
    uint64_t v37 = v15;
    *(void *)(v0 + 56) = v41;
    *(void *)(v0 + 64) = v40;
    *(void *)(v0 + 72) = v39;
    uint64_t v17 = type metadata accessor for Publishers.Timeout();
    swift_getWitnessTable();
    uint64_t v42 = v17;
    uint64_t v44 = type metadata accessor for AsyncThrowingPublisher();
    *(void *)(v0 + 192) = v44;
    *(void *)(v0 + 200) = *(void *)(v44 - 8);
    *(void *)(v0 + 208) = swift_task_alloc();
    uint64_t v43 = *(void *)(v17 - 8);
    uint64_t v36 = swift_task_alloc();
    uint64_t v38 = *(void *)(v16 - 8);
    uint64_t v34 = swift_task_alloc();
    uint64_t v33 = type metadata accessor for Publishers.TryMap();
    uint64_t v18 = *(void *)(v33 - 8);
    uint64_t v19 = swift_task_alloc();
    uint64_t v20 = *(void *)(v14 - 8);
    uint64_t v21 = swift_task_alloc();
    uint64_t v22 = *(void *)(v13 - 8);
    uint64_t v23 = swift_task_alloc();
    Publisher.merge<A>(with:)();
    Publisher.first()();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v13);
    swift_task_dealloc();
    Publisher.tryMap<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v14);
    swift_task_dealloc();
    Publishers.TryMap.map<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v33);
    swift_task_dealloc();
    uint64_t v24 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = swift_task_alloc();
    static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
    *(void *)(v0 + 80) = [self mainRunLoop];
    sub_100028654(&qword_10026A078);
    uint64_t v27 = swift_task_alloc();
    uint64_t v28 = type metadata accessor for NSRunLoop.SchedulerOptions();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
    Publisher.timeout<A>(_:scheduler:options:customError:)();
    sub_1000285F8(v27, &qword_10026A078);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v34, v37);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Publisher.values.getter();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v36, v42);
    swift_task_dealloc();
    uint64_t v29 = type metadata accessor for AsyncThrowingPublisher.Iterator();
    *(void *)(v0 + 216) = v29;
    *(void *)(v0 + 224) = *(void *)(v29 - 8);
    *(void *)(v0 + 232) = swift_task_alloc();
    AsyncThrowingPublisher.makeAsyncIterator()();
    uint64_t v30 = static MainActor.shared.getter();
    *(void *)(v0 + 240) = v30;
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v31;
    uint64_t v32 = swift_getWitnessTable();
    *uint64_t v31 = v0;
    v31[1] = sub_100154DA4;
    return __sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF(v0 + 256, v30, &protocol witness table for MainActor, v29, v32, v0 + 88);
  }
}

uint64_t sub_100154DA4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_1001643C8;
  }
  else {
    uint64_t v5 = sub_10016432C;
  }
  return _swift_task_switch(v5, v3, v4);
}

void sub_100154ED8(void *a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  [v2 setRecordingError:];
}

uint64_t sub_100154F40@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100156EC8(a1, a2);
}

uint64_t sub_100154F58@<X0>(uint64_t *a1@<X8>)
{
  return sub_100156F50((void (*)(void))sub_1001638FC, 1, a1);
}

id sub_100154F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result = [v3 recording];
  if (result)
  {
    uint64_t v8 = type metadata accessor for NSObject.KeyValueObservingPublisher();
    uint64_t v9 = *(void *)(v8 - 8);
    __chkstk_darwin(v8);
    uint64_t v11 = (char *)&v15 - v10;
    __chkstk_darwin(v12);
    *(&v15 - 2) = a3;
    swift_getKeyPath();
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = a2;
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1000F87EC((uint64_t)sub_100163AC0, v13, v8, WitnessTable);
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_100155130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  sub_100028654((uint64_t *)&unk_100265EB0);
  v4[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AppIntentError();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for IntentDialog();
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[18] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[19] = v8;
  v4[20] = v7;
  return _swift_task_switch(sub_1001552B4, v8, v7);
}

uint64_t sub_1001552B4()
{
  IntentParameter.wrappedValue.getter();
  if (*(unsigned char *)(v0 + 208))
  {
    IntentParameter.wrappedValue.getter();
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v1 = *(void *)(v0 + 24);
    *(void *)(v0 + 184) = v1;
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_10012E844(v2, v1);
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_1001557B0;
      uint64_t v4 = *(void *)(v0 + 72);
      return sub_10015F8D4(v2, v1, v4);
    }
    else
    {
      uint64_t v9 = *(void *)(v0 + 136);
      uint64_t v10 = *(void *)(v0 + 120);
      uint64_t v11 = *(void *)(v0 + 128);
      uint64_t v13 = *(void *)(v0 + 104);
      uint64_t v12 = *(void *)(v0 + 112);
      uint64_t v14 = *(void *)(v0 + 88);
      uint64_t v15 = *(void *)(v0 + 96);
      swift_release();
      IntentDialog.init(stringLiteral:)();
      IntentParameter.projectedValue.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v9, v10);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      IntentParameter.needsValueError(_:)();
      swift_release();
      sub_1000285F8(v14, (uint64_t *)&unk_100265EB0);
      sub_1001638B4(&qword_10026A030, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v12, v15);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v15);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1001555E8;
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 80);
    return sub_100155AA4(v8, v7);
  }
}

uint64_t sub_1001555E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  uint64_t v4 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v5 = sub_100155A18;
  }
  else {
    uint64_t v5 = sub_100155724;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100155724()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001557B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  uint64_t v4 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v5 = sub_100155980;
  }
  else {
    uint64_t v5 = sub_1001558EC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1001558EC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100155980()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100155A18()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100155AA4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100155B3C, v4, v3);
}

uint64_t sub_100155B3C()
{
  id v1 = [*(id *)(v0 + 24) mostRecentRecording];
  uint64_t v2 = v1;
  *(void *)(v0 + 56) = v1;
  if (v1 && (id v3 = [v1 uuid]) != 0)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    *(void *)(v0 + 64) = v7;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100155CA4;
    uint64_t v9 = *(void *)(v0 + 16);
    return sub_10015F8D4(v5, v7, v9);
  }
  else
  {
    swift_release();
    sub_100163758();
    swift_allocError();
    *uint64_t v11 = 0;
    swift_willThrow();

    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_100155CA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_100155E54;
  }
  else {
    uint64_t v5 = sub_100155DE0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100155DE0()
{
  id v1 = *(void **)(v0 + 56);
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100155E54()
{
  id v1 = *(void **)(v0 + 56);
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100155EC8(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  v2[14] = type metadata accessor for MainActor();
  v2[15] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  unsigned char v2[16] = v4;
  v2[17] = v3;
  return _swift_task_switch(sub_100155F64, v4, v3);
}

uint64_t sub_100155F64()
{
  if ([*(id *)(v0 + 104) playing])
  {
    swift_release();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = type metadata accessor for NSObject.KeyValueObservingPublisher();
    sub_100027F14(&qword_10026A058);
    swift_getWitnessTable();
    uint64_t v45 = type metadata accessor for Publishers.Map();
    *(void *)(v0 + 144) = v45;
    *(void *)(v0 + 152) = *(void *)(v45 - 8);
    *(void *)(v0 + 160) = swift_task_alloc();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = swift_task_alloc();
    *(void *)swift_task_alloc() = v3;
    swift_getKeyPath();
    swift_task_dealloc();
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
    swift_release();
    Publisher.map<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
    swift_task_dealloc();
    sub_100027F14(&qword_10026A060);
    uint64_t v7 = type metadata accessor for NSObject.KeyValueObservingPublisher();
    swift_getWitnessTable();
    uint64_t v8 = type metadata accessor for Publishers.CompactMap();
    *(void *)(v0 + 168) = v8;
    uint64_t v9 = v8;
    *(void *)(v0 + 176) = *(void *)(v8 - 8);
    *(void *)(v0 + 184) = swift_task_alloc();
    uint64_t v10 = *(void *)(v7 - 8);
    uint64_t v11 = swift_task_alloc();
    *(void *)swift_task_alloc() = v3;
    swift_getKeyPath();
    swift_task_dealloc();
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
    swift_release();
    Publisher.compactMap<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v7);
    swift_task_dealloc();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v12 = swift_getWitnessTable();
    *(void *)(v0 + 16) = v45;
    *(void *)(v0 + 24) = v9;
    *(void *)(v0 + 32) = WitnessTable;
    *(void *)(v0 + 40) = v12;
    uint64_t v13 = type metadata accessor for Publishers.Merge();
    swift_getWitnessTable();
    uint64_t v14 = type metadata accessor for Publishers.First();
    swift_getWitnessTable();
    uint64_t v15 = type metadata accessor for Publishers.TryMap();
    uint64_t v41 = sub_100025F4C(255, &qword_10026A068);
    uint64_t v40 = swift_getWitnessTable();
    unint64_t v39 = sub_100163858();
    *(void *)(v0 + 48) = v15;
    uint64_t v16 = v15;
    uint64_t v37 = v15;
    *(void *)(v0 + 56) = v41;
    *(void *)(v0 + 64) = v40;
    *(void *)(v0 + 72) = v39;
    uint64_t v17 = type metadata accessor for Publishers.Timeout();
    swift_getWitnessTable();
    uint64_t v42 = v17;
    uint64_t v44 = type metadata accessor for AsyncThrowingPublisher();
    *(void *)(v0 + 192) = v44;
    *(void *)(v0 + 200) = *(void *)(v44 - 8);
    *(void *)(v0 + 208) = swift_task_alloc();
    uint64_t v43 = *(void *)(v17 - 8);
    uint64_t v36 = swift_task_alloc();
    uint64_t v38 = *(void *)(v16 - 8);
    uint64_t v34 = swift_task_alloc();
    uint64_t v33 = type metadata accessor for Publishers.TryMap();
    uint64_t v18 = *(void *)(v33 - 8);
    uint64_t v19 = swift_task_alloc();
    uint64_t v20 = *(void *)(v14 - 8);
    uint64_t v21 = swift_task_alloc();
    uint64_t v22 = *(void *)(v13 - 8);
    uint64_t v23 = swift_task_alloc();
    Publisher.merge<A>(with:)();
    Publisher.first()();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v13);
    swift_task_dealloc();
    Publisher.tryMap<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v14);
    swift_task_dealloc();
    Publishers.TryMap.map<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v33);
    swift_task_dealloc();
    uint64_t v24 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = swift_task_alloc();
    static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
    *(void *)(v0 + 80) = [self mainRunLoop];
    sub_100028654(&qword_10026A078);
    uint64_t v27 = swift_task_alloc();
    uint64_t v28 = type metadata accessor for NSRunLoop.SchedulerOptions();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
    Publisher.timeout<A>(_:scheduler:options:customError:)();
    sub_1000285F8(v27, &qword_10026A078);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v34, v37);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Publisher.values.getter();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v36, v42);
    swift_task_dealloc();
    uint64_t v29 = type metadata accessor for AsyncThrowingPublisher.Iterator();
    *(void *)(v0 + 216) = v29;
    *(void *)(v0 + 224) = *(void *)(v29 - 8);
    *(void *)(v0 + 232) = swift_task_alloc();
    AsyncThrowingPublisher.makeAsyncIterator()();
    uint64_t v30 = static MainActor.shared.getter();
    *(void *)(v0 + 240) = v30;
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v31;
    uint64_t v32 = swift_getWitnessTable();
    *uint64_t v31 = v0;
    v31[1] = sub_100156B18;
    return __sScIsE4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKF(v0 + 256, v30, &protocol witness table for MainActor, v29, v32, v0 + 88);
  }
}

uint64_t sub_100156B18()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_100156D74;
  }
  else {
    uint64_t v5 = sub_100156C4C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100156C4C()
{
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v4 = v0[26];
  uint64_t v3 = v0[27];
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[25];
  uint64_t v8 = v0[22];
  uint64_t v7 = v0[23];
  uint64_t v9 = v0[19];
  uint64_t v14 = v0[20];
  uint64_t v12 = v0[21];
  uint64_t v13 = v0[18];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100156D74()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[29];
  uint64_t v4 = v0[26];
  uint64_t v3 = v0[27];
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[25];
  uint64_t v8 = v0[22];
  uint64_t v7 = v0[23];
  uint64_t v9 = v0[19];
  uint64_t v14 = v0[20];
  uint64_t v12 = v0[21];
  uint64_t v13 = v0[18];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

unsigned __int8 *sub_100156E9C@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_100156EAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  if (v2) {
    char v3 = 1;
  }
  else {
    char v3 = -1;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return swift_errorRetain();
}

uint64_t sub_100156EC8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (*(unsigned char *)(result + 8))
  {
    swift_errorRetain();
    sub_100028654((uint64_t *)&unk_1002699C0);
    return swift_willThrowTypedImpl();
  }
  else
  {
    *a2 = *(void *)result & 1;
  }
  return result;
}

uint64_t sub_100156F2C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100156F50((void (*)(void))sub_100163758, 2, a1);
}

uint64_t sub_100156F50@<X0>(void (*a1)(void)@<X0>, char a2@<W2>, uint64_t *a3@<X8>)
{
  a1();
  uint64_t result = swift_allocError();
  *a3 = result;
  *uint64_t v6 = a2;
  return result;
}

uint64_t sub_100156FA4()
{
  v1[11] = v0;
  v1[12] = type metadata accessor for MainActor();
  v1[13] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[14] = v3;
  v1[15] = v2;
  return _swift_task_switch(sub_100157040, v3, v2);
}

uint64_t sub_100157040()
{
  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 128) = v1;
  if (v1)
  {
    swift_getObjectType();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 0;
  }
  return _swift_task_switch(sub_1001570D4, v2, v4);
}

uint64_t sub_1001570D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 16;
  uint64_t v4 = *(void **)(v1 + 88);
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = sub_100157334;
  uint64_t v5 = swift_continuation_init();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  if (![v4 isRecording])
  {
    sub_100163A20();
    uint64_t v11 = swift_allocError();
    swift_willThrow();
    swift_release();
    sub_100028654((uint64_t *)&unk_1002699C0);
    swift_allocError();
    *uint64_t v12 = v11;
    swift_continuation_throwingResumeWithError();
    goto LABEL_12;
  }
  if (![*(id *)(v1 + 88) audioRecorder]) {
    goto LABEL_10;
  }
  *(void *)(v1 + 80) = &OBJC_PROTOCOL___VMAudioRecorder;
  uint64_t v7 = swift_dynamicCastObjCProtocolConditional();
  if (!v7) {
    goto LABEL_9;
  }
  uint64_t v8 = v7;
  swift_getObjectType();
  sub_100025F4C(0, (unint64_t *)&qword_100269240);
  if (!swift_dynamicCastMetatype()) {
    uint64_t v8 = 0;
  }
  if (!v8)
  {
LABEL_9:
    swift_unknownObjectRelease();
LABEL_10:
    [*(id *)(v1 + 88) performAction:4 atPosition:0 forUUID:0 sourceController:0 source:0.0];
    swift_continuation_throwingResume();
    goto LABEL_11;
  }
  uint64_t v9 = *(void **)(v1 + 88);
  uint64_t ObjectType = swift_getObjectType();
  sub_100154F7C((uint64_t)sub_100163A18, v6, ObjectType);
  [v9 performAction:4 atPosition:0 forUUID:0 sourceController:0 source:0.0];
  swift_unknownObjectRelease();
LABEL_11:
  swift_release();
LABEL_12:
  return _swift_continuation_await(v3);
}

uint64_t sub_100157334()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 136) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = *(void *)(v1 + 112);
    uint64_t v4 = *(void *)(v1 + 120);
    uint64_t v5 = sub_1001574BC;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v1 + 112);
    uint64_t v4 = *(void *)(v1 + 120);
    uint64_t v5 = sub_100157458;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100157458()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001574BC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10015752C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  uint64_t v4 = type metadata accessor for IntentSystemContext.Source();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = sub_100028654(&qword_10026A088);
  v3[11] = swift_task_alloc();
  sub_100028654((uint64_t *)&unk_10026A090);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for IntentSystemContext();
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[18] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[19] = v7;
  v3[20] = v6;
  return _swift_task_switch(sub_100157700, v7, v6);
}

uint64_t sub_100157700()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v28 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 64);
  sub_10014F2C0();
  AppIntent.systemContext.getter();
  IntentSystemContext.source.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v5, enum case for IntentSystemContext.Source.actionButton(_:), v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  uint64_t v9 = v6 + *(int *)(v28 + 48);
  sub_10002869C(v4, v6, (uint64_t *)&unk_10026A090);
  sub_10002869C(v5, v9, (uint64_t *)&unk_10026A090);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v10(v6, 1, v7) == 1)
  {
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v12 = *(void *)(v0 + 56);
    sub_1000285F8(*(void *)(v0 + 104), (uint64_t *)&unk_10026A090);
    sub_1000285F8(v11, (uint64_t *)&unk_10026A090);
    if (v10(v9, 1, v12) == 1)
    {
      sub_1000285F8(*(void *)(v0 + 88), (uint64_t *)&unk_10026A090);
      char v13 = 1;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v0 + 56);
  sub_10002869C(*(void *)(v0 + 88), *(void *)(v0 + 96), (uint64_t *)&unk_10026A090);
  unsigned int v15 = v10(v9, 1, v14);
  uint64_t v17 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v18 = *(void *)(v0 + 96);
  if (v15 == 1)
  {
    uint64_t v19 = *(void *)(v0 + 56);
    uint64_t v20 = *(void *)(v0 + 64);
    sub_1000285F8(*(void *)(v0 + 104), (uint64_t *)&unk_10026A090);
    sub_1000285F8(v16, (uint64_t *)&unk_10026A090);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
LABEL_6:
    sub_1000285F8(*(void *)(v0 + 88), &qword_10026A088);
    char v13 = 0;
    goto LABEL_8;
  }
  uint64_t v21 = *(void *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 64);
  uint64_t v22 = *(void *)(v0 + 72);
  uint64_t v24 = *(void *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v9, v24);
  sub_1001638B4(&qword_10026A0A8, (void (*)(uint64_t))&type metadata accessor for IntentSystemContext.Source);
  char v13 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v25(v22, v24);
  sub_1000285F8(v17, (uint64_t *)&unk_10026A090);
  sub_1000285F8(v16, (uint64_t *)&unk_10026A090);
  v25(v18, v24);
  sub_1000285F8(v21, (uint64_t *)&unk_10026A090);
LABEL_8:
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100157A84;
  return sub_100153A30(v13 & 1, 0, 0);
}

uint64_t sub_100157A84()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  uint64_t v4 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v5 = sub_100157BC0;
  }
  else {
    uint64_t v5 = sub_1001523A4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100157BC0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100157C70(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 288) = a1;
  *(void *)(v2 + 296) = a2;
  return _swift_task_switch(sub_100157D00, 0, 0);
}

uint64_t sub_100157D00()
{
  uint64_t v1 = (id *)(v0 + 32);
  uint64_t v2 = v0[37];
  uint64_t v3 = type metadata accessor for URL();
  v0[38] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v0[39] = v4;
  v0[40] = *(void *)(v4 + 64);
  v0[41] = swift_task_alloc();
  uint64_t v6 = self;
  v0[42] = v6;
  id v7 = [v6 defaultManager];
  sub_100028654(&qword_100269FB0);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v2 + 16);
  if (v10)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v8, v0[37] + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v3) == 1)
    {
      uint64_t v12 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v11);
      uint64_t v12 = v13;
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v8, 1, 1, v3);
    uint64_t v12 = 0;
  }
  swift_task_dealloc();
  *uint64_t v1 = 0;
  id v14 = [v7 URLForDirectory:99 inDomain:1 appropriateForURL:v12 create:1 error:v0 + 32];

  id v15 = *v1;
  if (v14)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v0[43] = swift_task_alloc();
    v0[30] = 0xD000000000000017;
    v0[31] = 0x80000001001EF6F0;
    uint64_t v16 = type metadata accessor for URL.DirectoryHint();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = swift_task_alloc();
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v18, enum case for URL.DirectoryHint.inferFromPath(_:), v16);
    sub_10002DF88();
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (v10)
    {
      uint64_t v68 = v0;
      uint64_t v19 = v0[37];
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v20 = v19 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v21 = *(void *)(v5 + 72);
      uint64_t v22 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      uint64_t v23 = (void (**)(uint64_t, uint64_t))(v5 + 8);
      do
      {
        uint64_t v24 = swift_task_alloc();
        (*v22)(v24, v20, v3);
        id v25 = objc_allocWithZone((Class)AVURLAsset);
        URL._bridgeToObjectiveC()(v26);
        uint64_t v28 = v27;
        [v25 initWithURL:v27 options:0];

        (*v23)(v24, v3);
        swift_task_dealloc();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v20 += v21;
        --v10;
      }
      while (v10);
      uint64_t v0 = v68;
    }
    v0[44] = _swiftEmptyArrayStorage;
    v0[45] = [objc_allocWithZone((Class)AVMutableComposition) init];
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      v0[46] = v38;
      if (v38) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v29 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v0[46] = v29;
      if (v29)
      {
LABEL_13:
        AVMediaType v30 = AVMediaTypeAudio;
        v0[47] = AVMediaTypeAudio;
        v0[48] = kCMTimeZero.value;
        v0[61] = *(void *)&kCMTimeZero.timescale;
        v0[49] = kCMTimeZero.epoch;
        uint64_t v31 = v0[44];
        if ((v31 & 0xC000000000000001) != 0)
        {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          AVMediaType v30 = (AVMediaType)v0[47];
        }
        else
        {
          id v32 = *(id *)(v31 + 32);
        }
        v0[50] = v32;
        v0[51] = 1;
        v0[2] = v0;
        v0[7] = v0 + 34;
        v0[3] = sub_1001586D4;
        uint64_t v37 = swift_continuation_init();
        v0[22] = _NSConcreteStackBlock;
        v0[23] = 0x40000000;
        v0[24] = sub_100159D20;
        v0[25] = &unk_100228678;
        v0[26] = v37;
        [v32 loadTracksWithMediaType:v30 completionHandler:v0 + 22];
        return _swift_continuation_await(v0 + 2);
      }
    }
    unint64_t v39 = (void *)v0[45];
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v0;
    id v40 = objc_allocWithZone((Class)AVAssetExportSession);
    id v41 = v39;
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v43 = [v40 initWithAsset:v41 presetName:v42];
    v0[58] = v43;

    if (v43)
    {
      v43;
      uint64_t v44 = (void *)swift_task_alloc();
      v0[59] = v44;
      *uint64_t v44 = v0;
      v44[1] = sub_100159640;
      uint64_t v45 = v0[43];
      return AVAssetExportSession.export(to:as:isolation:)(v45, AVFileTypeQuickTimeMovie, 0, 0);
    }
    uint64_t v46 = (void *)v0[42];
    uint64_t v47 = v0[39];
    uint64_t v48 = v0[38];
    uint64_t v49 = swift_task_alloc();
    URL.deletingPathExtension()();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    URL.appendingPathExtension(_:)();
    swift_bridgeObjectRelease();
    uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v67(v49, v48);
    swift_task_dealloc();
    id v50 = [v46 defaultManager];
    URL._bridgeToObjectiveC()(v51);
    double v53 = v52;
    URL._bridgeToObjectiveC()(v54);
    double v56 = v55;
    v0[35] = 0;
    unsigned int v57 = [v50 moveItemAtURL:v53 toURL:v55 error:v0 + 35];

    v58 = (void *)v0[35];
    uint64_t v59 = (void *)v0[58];
    uint64_t v60 = (void *)v0[45];
    uint64_t v61 = v0[43];
    uint64_t v62 = v0[41];
    uint64_t v63 = v0[38];
    if (v57)
    {
      id v64 = v58;

      v67(v61, v63);
      v67(v62, v63);
      swift_task_dealloc();
      swift_task_dealloc();
      char v35 = (uint64_t (*)(void))v0[1];
      goto LABEL_17;
    }
    uint64_t v65 = v0[36];
    uint64_t v69 = v62;
    id v66 = v58;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v67(v65, v63);
    v67(v61, v63);
    v67(v69, v63);
    swift_task_dealloc();
  }
  else
  {
    uint64_t v33 = v15;
    uint64_t v34 = v0;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  swift_task_dealloc();
  char v35 = (uint64_t (*)(void))v34[1];
LABEL_17:
  return v35();
}

uint64_t sub_1001586D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 416) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100159A2C;
  }
  else
  {
    uint64_t v2 = sub_100158818;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100158818()
{
  unint64_t v1 = *(void *)(v0 + 272);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v5 = *(void **)(v0 + 400);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_14;
  }
LABEL_3:
  unint64_t v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_34:
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v3 >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  id v4 = *(id *)(v1 + 8 * v3 + 32);
LABEL_8:
  uint64_t v5 = v4;
  *(void *)(v0 + 424) = v4;
  uint64_t v6 = *(void *)(v0 + 376);
  id v7 = *(void **)(v0 + 360);
  swift_bridgeObjectRelease();
  id v8 = [v7 addMutableTrackWithMediaType:v6 preferredTrackID:0];
  *(void *)(v0 + 432) = v8;
  if (v8)
  {
    sub_100028654(&qword_100269F98);
    uint64_t v9 = static AVPartialAsyncProperty<A>.timeRange.getter();
    *(void *)(v0 + 440) = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v10;
    void *v10 = v0;
    v10[1] = sub_100158EBC;
    return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 128, v9);
  }

LABEL_15:
  uint64_t v11 = *(void *)(v0 + 408);
  if (v11 == *(void *)(v0 + 368))
  {
    uint64_t v12 = *(void **)(v0 + 360);
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v13 = objc_allocWithZone((Class)AVAssetExportSession);
    id v14 = v12;
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v16 = [v13 initWithAsset:v14 presetName:v15];
    *(void *)(v0 + 464) = v16;

    if (v16)
    {
      v16;
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 472) = v17;
      void *v17 = v0;
      v17[1] = sub_100159640;
      uint64_t v18 = *(void *)(v0 + 344);
      return AVAssetExportSession.export(to:as:isolation:)(v18, AVFileTypeQuickTimeMovie, 0, 0);
    }
    else
    {
      uint64_t v21 = *(void **)(v0 + 336);
      uint64_t v22 = *(void *)(v0 + 312);
      uint64_t v23 = *(void *)(v0 + 304);
      uint64_t v24 = swift_task_alloc();
      URL.deletingPathExtension()();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      URL.appendingPathExtension(_:)();
      swift_bridgeObjectRelease();
      id v25 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v25(v24, v23);
      swift_task_dealloc();
      id v26 = [v21 defaultManager];
      URL._bridgeToObjectiveC()(v27);
      uint64_t v29 = v28;
      URL._bridgeToObjectiveC()(v30);
      id v32 = v31;
      *(void *)(v0 + 280) = 0;
      LODWORD(v23) = [v26 moveItemAtURL:v29 toURL:v31 error:v0 + 280];

      uint64_t v33 = *(void **)(v0 + 280);
      uint64_t v34 = *(void **)(v0 + 464);
      char v35 = *(void **)(v0 + 360);
      uint64_t v36 = *(void *)(v0 + 344);
      uint64_t v37 = *(void *)(v0 + 328);
      uint64_t v38 = *(void *)(v0 + 304);
      if (v23)
      {
        id v39 = v33;

        v25(v36, v38);
        v25(v37, v38);
      }
      else
      {
        uint64_t v46 = *(void *)(v0 + 288);
        uint64_t v47 = *(void *)(v0 + 328);
        id v44 = v33;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        v25(v46, v38);
        v25(v36, v38);
        v25(v47, v38);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      id v40 = *(uint64_t (**)(void))(v0 + 8);
      return v40();
    }
  }
  uint64_t v19 = *(void *)(v0 + 352);
  if ((v19 & 0xC000000000000001) != 0) {
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v20 = *(id *)(v19 + 8 * v11 + 32);
  }
  id v41 = v20;
  *(void *)(v0 + 400) = v20;
  *(void *)(v0 + 408) = v11 + 1;
  if (__OFADD__(v11, 1)) {
LABEL_37:
  }
    __break(1u);
  uint64_t v42 = *(void *)(v0 + 376);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 272;
  *(void *)(v0 + 24) = sub_1001586D4;
  uint64_t v43 = swift_continuation_init();
  *(void *)(v0 + 176) = _NSConcreteStackBlock;
  *(void *)(v0 + 184) = 0x40000000;
  *(void *)(v0 + 192) = sub_100159D20;
  *(void *)(v0 + 200) = &unk_100228678;
  *(void *)(v0 + 208) = v43;
  [v41 loadTracksWithMediaType:v42 completionHandler:v0 + 176];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100158EBC()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_100159B2C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100159038;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100159038()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v1 = *(void **)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 160);
  long long v8 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 264) = 0;
  *(void *)(v0 + 88) = v6;
  *(_OWORD *)(v0 + 96) = v8;
  *(void *)(v0 + 112) = v7;
  *(void *)(v0 + 120) = v5;
  *(void *)(v0 + 216) = v4;
  *(void *)(v0 + 224) = *(void *)(v0 + 488);
  *(void *)(v0 + 232) = v3;
  unsigned __int8 v9 = [v1 insertTimeRange:v0 + 80 ofTrack:v2 atTime:v0 + 216 error:v0 + 264];
  uint64_t v10 = *(void **)(v0 + 264);
  uint64_t v12 = *(void **)(v0 + 424);
  uint64_t v11 = *(void **)(v0 + 432);
  id v13 = *(void **)(v0 + 400);
  if ((v9 & 1) == 0)
  {
    uint64_t v23 = *(void *)(v0 + 344);
    double v56 = *(void **)(v0 + 360);
    uint64_t v57 = *(void *)(v0 + 328);
    uint64_t v25 = *(void *)(v0 + 304);
    uint64_t v24 = *(void *)(v0 + 312);
    id v26 = v10;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v27(v23, v25);
    v27(v57, v25);
    goto LABEL_8;
  }
  id v14 = v10;

  uint64_t v15 = *(void *)(v0 + 408);
  if (v15 == *(void *)(v0 + 368))
  {
    id v16 = *(void **)(v0 + 360);
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v17 = objc_allocWithZone((Class)AVAssetExportSession);
    id v18 = v16;
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v20 = [v17 initWithAsset:v18 presetName:v19];
    *(void *)(v0 + 464) = v20;

    if (v20)
    {
      v20;
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 472) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_100159640;
      uint64_t v22 = *(void *)(v0 + 344);
      return AVAssetExportSession.export(to:as:isolation:)(v22, AVFileTypeQuickTimeMovie, 0, 0);
    }
    uint64_t v31 = *(void **)(v0 + 336);
    uint64_t v32 = *(void *)(v0 + 312);
    uint64_t v33 = *(void *)(v0 + 304);
    uint64_t v34 = swift_task_alloc();
    URL.deletingPathExtension()();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    URL.appendingPathExtension(_:)();
    swift_bridgeObjectRelease();
    char v35 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v35(v34, v33);
    swift_task_dealloc();
    id v36 = [v31 defaultManager];
    URL._bridgeToObjectiveC()(v37);
    id v39 = v38;
    URL._bridgeToObjectiveC()(v40);
    uint64_t v42 = v41;
    *(void *)(v0 + 280) = 0;
    LODWORD(v33) = [v36 moveItemAtURL:v39 toURL:v41 error:v0 + 280];

    uint64_t v43 = *(void **)(v0 + 280);
    id v44 = *(void **)(v0 + 464);
    uint64_t v45 = *(void **)(v0 + 360);
    uint64_t v46 = *(void *)(v0 + 344);
    uint64_t v47 = *(void *)(v0 + 328);
    uint64_t v48 = *(void *)(v0 + 304);
    if (v33)
    {
      id v49 = v43;

      v35(v46, v48);
      v35(v47, v48);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_9;
    }
    uint64_t v53 = *(void *)(v0 + 288);
    uint64_t v58 = *(void *)(v0 + 328);
    id v54 = v43;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v35(v53, v48);
    v35(v46, v48);
    v35(v58, v48);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
    return v28();
  }
  uint64_t v29 = *(void *)(v0 + 352);
  if ((v29 & 0xC000000000000001) != 0) {
    id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v30 = *(id *)(v29 + 8 * v15 + 32);
  }
  id v50 = v30;
  *(void *)(v0 + 400) = v30;
  *(void *)(v0 + 408) = v15 + 1;
  if (__OFADD__(v15, 1)) {
    __break(1u);
  }
  uint64_t v51 = *(void *)(v0 + 376);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 272;
  *(void *)(v0 + 24) = sub_1001586D4;
  uint64_t v52 = swift_continuation_init();
  *(void *)(v0 + 176) = _NSConcreteStackBlock;
  *(void *)(v0 + 184) = 0x40000000;
  *(void *)(v0 + 192) = sub_100159D20;
  *(void *)(v0 + 200) = &unk_100228678;
  *(void *)(v0 + 208) = v52;
  [v50 loadTracksWithMediaType:v51 completionHandler:v0 + 176];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100159640()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 480) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_100159C30;
  }
  else {
    uint64_t v3 = sub_1001597A0;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001597A0()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[38];
  uint64_t v4 = swift_task_alloc();
  URL.deletingPathExtension()();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  URL.appendingPathExtension(_:)();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v4, v3);
  swift_task_dealloc();
  id v6 = [v1 defaultManager];
  URL._bridgeToObjectiveC()(v7);
  unsigned __int8 v9 = v8;
  URL._bridgeToObjectiveC()(v10);
  uint64_t v12 = v11;
  v0[35] = 0;
  LODWORD(v3) = [v6 moveItemAtURL:v9 toURL:v11 error:v0 + 35];

  id v13 = (void *)v0[35];
  id v14 = (void *)v0[58];
  uint64_t v15 = (void *)v0[45];
  uint64_t v16 = v0[43];
  uint64_t v17 = v0[41];
  uint64_t v18 = v0[38];
  if (v3)
  {
    id v19 = v13;

    v5(v16, v18);
    v5(v17, v18);
  }
  else
  {
    uint64_t v23 = v0[36];
    uint64_t v24 = v0[41];
    id v21 = v13;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v5(v23, v18);
    v5(v16, v18);
    v5(v24, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_100159A2C()
{
  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = (void *)v0[45];
  uint64_t v3 = v0[43];
  uint64_t v4 = v0[41];
  uint64_t v5 = v0[38];
  uint64_t v6 = v0[39];
  swift_willThrow();

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v3, v5);
  v7(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  long long v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100159B2C()
{
  uint64_t v1 = *(void **)(v0 + 432);
  uint64_t v2 = *(void **)(v0 + 400);
  uint64_t v3 = *(void **)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 304);
  uint64_t v7 = *(void *)(v0 + 312);

  long long v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v4, v6);
  v8(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100159C30()
{
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 312);

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v2, v4);
  v6(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100159D20(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100028654((uint64_t *)&unk_1002699C0);
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_100025F4C(0, (unint64_t *)&unk_100269FA0);
    **(void **)(*(void *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

uint64_t type metadata accessor for MultiTrackCompositor()
{
  return self;
}

uint64_t sub_100159E20(uint64_t a1)
{
  return _swift_continuation_resume(*(void *)(a1 + 32));
}

uint64_t sub_100159E28(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(unsigned char **)(*(void *)(v2 + 64) + 40) = a2;
  return _swift_continuation_resume(v2);
}

uint64_t sub_100159E4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v41 = a5;
  uint64_t v42 = a7;
  uint64_t v39 = a2;
  uint64_t v40 = a4;
  uint64_t v10 = sub_100028654(&qword_1002699E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v12;
  static TaskPriority.userInitiated.getter();
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __n128 v17 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  uint64_t v20 = v19(v18, a3, v14, v17);
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v22 = v18;
  v19(v18, a6, v14, v21);
  uint64_t v23 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v24 = (v23 + 40) & ~v23;
  unint64_t v25 = (v16 + 7 + v24) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (v23 + v26 + 16) & ~v23;
  unint64_t v37 = (v16 + 7 + v27) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = 0;
  *((void *)v28 + 3) = 0;
  *((void *)v28 + 4) = v39;
  uint64_t v29 = &v28[v24];
  id v30 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v30(v29, v18, v14);
  *(void *)&v28[v25] = a1;
  uint64_t v31 = &v28[v26];
  uint64_t v32 = v41;
  *(void *)uint64_t v31 = v40;
  *((void *)v31 + 1) = v32;
  v30(&v28[v27], v22, v14);
  *(void *)&v28[v37] = v42;
  id v33 = a1;
  swift_bridgeObjectRetain();
  uint64_t v34 = (uint64_t)v38;
  uint64_t v35 = sub_10015D508((uint64_t)v38, (uint64_t)&unk_100269F28, (uint64_t)v28);
  sub_1000285F8(v34, &qword_1002699E0);
  return v35;
}

uint64_t sub_10015A0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[272] = v11;
  v8[271] = a8;
  v8[270] = a7;
  v8[269] = a6;
  v8[268] = a5;
  v8[267] = a4;
  v8[266] = a1;
  return _swift_task_switch(sub_10015A1A0, 0, 0);
}

uint64_t sub_10015A1A0()
{
  uint64_t v24 = v0;
  id v1 = [objc_allocWithZone((Class)AVMutableComposition) init];
  v0[273] = v1;
  id v2 = [v1 addMutableTrackWithMediaType:AVMediaTypeAudio preferredTrackID:0];
  v0[274] = v2;
  if (v2)
  {
    uint64_t v3 = (void *)v0[269];
    uint64_t v4 = swift_allocObject();
    v0[275] = v4;
    *(void *)(v4 + 16) = v3;
    id v5 = v3;
    swift_retain();
    type metadata accessor for CMTimeRange(255);
    swift_asyncLet_begin();
    uint64_t v6 = swift_allocObject();
    v0[276] = v6;
    *(void *)(v6 + 16) = v5;
    id v7 = v5;
    swift_retain();
    sub_100027F14(&qword_100269F60);
    swift_asyncLet_begin();
    return _swift_asyncLet_get_throwing(v0 + 82, v0 + 179, sub_10015A68C, v0 + 196);
  }
  else
  {
    if (qword_100264530 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[268];
    uint64_t v9 = type metadata accessor for Logger();
    sub_10002272C(v9, (uint64_t)qword_100275340);
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v8, v10);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v22 = v0[267];
      uint64_t v15 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315650;
      v0[265] = sub_10002F3B8(0xD00000000000001BLL, 0x80000001001EF670, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2048;
      v0[227] = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 22) = 2080;
      uint64_t v16 = URL.lastPathComponent.getter();
      v0[264] = sub_10002F3B8(v16, v17, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s addMutableTrack() failed, layerIndex = %ld, recording = %s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
    }
    uint64_t v18 = v0[266];
    swift_task_dealloc();
    uint64_t v19 = _s14RecordingLayerVMa();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_10015A68C()
{
  *(void *)(v1 + 2216) = v0;
  if (v0) {
    id v2 = sub_10015C354;
  }
  else {
    id v2 = sub_10015A730;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10015A730()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0 + 16;
  id v2 = *(void **)(v0 + 2192);
  uint64_t v3 = *(void *)(v0 + 2152);
  uint64_t v4 = v0 + 1768;
  uint64_t v5 = *(void *)(v0 + 1432);
  *(void *)(v0 + 2224) = v5;
  *(void *)&long long v6 = *(void *)(v0 + 1440);
  uint64_t v7 = *(void *)(v0 + 1448);
  *(void *)(v0 + 2232) = v7;
  uint64_t v8 = *(void *)(v0 + 1456);
  *(void *)(v0 + 2240) = v8;
  uint64_t v9 = *(void *)(v0 + 1464);
  *(void *)(v0 + 1392) = v6;
  *((void *)&v6 + 1) = v9;
  *(_OWORD *)(v0 + 2368) = v6;
  uint64_t v10 = *(void *)(v0 + 1472);
  *(void *)(v0 + 2248) = v10;
  CMTimeEpoch epoch = kCMTimeZero.epoch;
  *(void *)(v0 + 2056) = 0;
  *(void *)(v0 + 1384) = v5;
  *(void *)(v0 + 1400) = v7;
  *(void *)(v0 + 1408) = v8;
  *(void *)(v0 + 1416) = v9;
  *(void *)(v0 + 1424) = v10;
  *(void *)(v0 + 1480) = kCMTimeZero.value;
  *(void *)(v0 + 1488) = *(void *)&kCMTimeZero.timescale;
  *(void *)(v0 + 1496) = epoch;
  unsigned int v12 = [v2 insertTimeRange:v0 + 1384 ofTrack:v3 atTime:v0 + 1480 error:v0 + 2056];
  uint64_t v13 = *(void **)(v0 + 2056);
  if (v12)
  {
    os_log_type_t v14 = *(void **)(v0 + 2184);
    id v15 = v13;
    id v16 = v14;
    return _swift_asyncLet_get_throwing(v0 + 16, v0 + 1768, sub_10015ABDC, v0 + 2016);
  }
  else
  {
    id v17 = v13;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100264530 != -1) {
      swift_once();
    }
    uint64_t v18 = *(void *)(v0 + 2144);
    uint64_t v19 = type metadata accessor for Logger();
    sub_10002272C(v19, (uint64_t)qword_100275340);
    uint64_t v20 = type metadata accessor for URL();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v22, v18, v20);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v31 = *(void *)(v0 + 2136);
      uint64_t v25 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315650;
      *(void *)(v0 + 2104) = sub_10002F3B8(0xD00000000000001BLL, 0x80000001001EF670, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2048;
      *(void *)(v0 + 2072) = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 22) = 2080;
      uint64_t v26 = URL.lastPathComponent.getter();
      *(void *)(v0 + 2064) = sub_10002F3B8(v26, v27, &v32);
      uint64_t v1 = v0 + 16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s insertTimeRange() failed, layerIndex = %ld, recording = %s", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v4 = v0 + 1768;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
    }
    swift_errorRelease();

    uint64_t v28 = *(void *)(v0 + 2128);
    swift_task_dealloc();
    uint64_t v29 = _s14RecordingLayerVMa();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
    return _swift_asyncLet_finish(v1, v4, sub_10015C230, v0 + 1632);
  }
}

uint64_t sub_10015ABDC()
{
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_10015C6D0;
  }
  else
  {
    uint64_t v1 = sub_10015AC84;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_10015AC84()
{
  uint64_t v1 = v0[221];
  v0[282] = v1;
  swift_bridgeObjectRetain();
  id v2 = (void *)swift_task_alloc();
  v0[283] = v2;
  *id v2 = v0;
  v2[1] = sub_10015AD64;
  uint64_t v3 = v0[273];
  return sub_100161358(v3, v1);
}

uint64_t sub_10015AD64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[193] = v2;
  v3[194] = a1;
  v3[195] = a2;
  v3[284] = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10015AEB8, 0, 0);
}

uint64_t sub_10015AEB8()
{
  uint64_t v62 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 1768;
  if (*(void *)(v0 + 2272))
  {
    uint64_t v3 = *(void **)(v0 + 2184);
    id v4 = objc_allocWithZone((Class)AVAssetExportSession);
    id v5 = v3;
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v7 = [v4 initWithAsset:v5 presetName:v6];
    *(void *)(v0 + 2280) = v7;

    if (v7)
    {
      uint64_t v8 = *(void **)(v0 + 2168);
      uint64_t v9 = *(void *)(v0 + 2160);
      uint64_t v10 = *(void *)(v0 + 2136);
      type metadata accessor for String.LocalizationValue.StringInterpolation();
      swift_task_alloc();
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v11._countAndFlagsBits = 0xD000000000000013;
      v11._object = (void *)0x80000001001EF6D0;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
      v12._countAndFlagsBits = v9;
      v12._object = v8;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v12);
      v13._countAndFlagsBits = 32;
      v13._object = (void *)0xE100000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
      *(void *)(v0 + 2008) = v10;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v14._countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
      type metadata accessor for String.LocalizationValue();
      swift_task_alloc();
      String.LocalizationValue.init(stringInterpolation:)();
      type metadata accessor for Locale();
      swift_task_alloc();
      static Locale.current.getter();
      uint64_t v15 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v17 = v16;
      *(void *)(v0 + 2288) = v15;
      *(void *)(v0 + 2296) = v16;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v18 = type metadata accessor for URL();
      *(void *)(v0 + 2304) = v18;
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = v19;
      *(void *)(v0 + 2312) = v19;
      *(void *)(v0 + 2320) = *(void *)(v19 + 64);
      uint64_t v21 = swift_task_alloc();
      *(void *)(v0 + 2328) = v21;
      uint64_t v22 = swift_task_alloc();
      *(void *)(v0 + 1608) = v15;
      *(void *)(v0 + 1616) = v17;
      uint64_t v23 = type metadata accessor for URL.DirectoryHint();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = swift_task_alloc();
      (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v25, enum case for URL.DirectoryHint.inferFromPath(_:), v23);
      sub_10002DF88();
      URL.appending<A>(path:directoryHint:)();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
      swift_task_dealloc();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      URL.appendingPathExtension(_:)();
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      *(void *)(v0 + 2336) = v26;
      *(void *)(v0 + 2344) = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v26(v22, v18);
      swift_task_dealloc();
      unint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 2352) = v27;
      *unint64_t v27 = v0;
      v27[1] = sub_10015B984;
      return AVAssetExportSession.export(to:as:isolation:)(v21, AVFileTypeAppleM4A, 0, 0);
    }
    if (qword_100264530 != -1) {
      swift_once();
    }
    uint64_t v38 = *(void *)(v0 + 2144);
    uint64_t v39 = type metadata accessor for Logger();
    sub_10002272C(v39, (uint64_t)qword_100275340);
    uint64_t v40 = type metadata accessor for URL();
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v42, v38, v40);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = *(void *)(v0 + 2136);
      uint64_t v60 = *(void **)(v0 + 2184);
      uint64_t v46 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315650;
      *(void *)(v0 + 1864) = sub_10002F3B8(0xD00000000000001BLL, 0x80000001001EF670, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 12) = 2048;
      *(void *)(v0 + 1912) = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 22) = 2080;
      uint64_t v47 = URL.lastPathComponent.getter();
      *(void *)(v0 + 1960) = sub_10002F3B8(v47, v48, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v40);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "%s exportSession failed, layerIndex = %ld, recording = %s", (uint8_t *)v46, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v1 = v0 + 16;
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v40);
    }
    uint64_t v55 = *(void *)(v0 + 2128);
    swift_task_dealloc();
    uint64_t v56 = _s14RecordingLayerVMa();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
    uint64_t v51 = sub_10015BF5C;
    uint64_t v54 = v0 + 1768;
    uint64_t v52 = v0 + 1872;
    uint64_t v53 = v1;
  }
  else
  {
    if (qword_100264530 != -1) {
      swift_once();
    }
    uint64_t v28 = *(void *)(v0 + 2144);
    uint64_t v29 = type metadata accessor for Logger();
    sub_10002272C(v29, (uint64_t)qword_100275340);
    uint64_t v30 = type metadata accessor for URL();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v32, v28, v30);
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v58 = *(void *)(v0 + 2136);
      uint64_t v59 = *(void **)(v0 + 2184);
      uint64_t v35 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315650;
      *(void *)(v0 + 1624) = sub_10002F3B8(0xD00000000000001BLL, 0x80000001001EF670, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 12) = 2048;
      *(void *)(v0 + 1672) = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v36 = URL.lastPathComponent.getter();
      *(void *)(v0 + 1720) = sub_10002F3B8(v36, v37, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v30);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s no compatible preset, layerIndex = %ld, recording = %s", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      uint64_t v2 = v0 + 1768;
      swift_slowDealloc();
      uint64_t v1 = v0 + 16;
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v30);
    }
    uint64_t v49 = *(void *)(v0 + 2128);
    swift_task_dealloc();
    uint64_t v50 = _s14RecordingLayerVMa();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
    uint64_t v51 = sub_10015C10C;
    uint64_t v52 = v0 + 1968;
    uint64_t v53 = v1;
    uint64_t v54 = v2;
  }
  return _swift_asyncLet_finish(v53, v54, v51, v52);
}

uint64_t sub_10015B984()
{
  *(void *)(*(void *)v1 + 2360) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10015CB68;
  }
  else
  {
    uint64_t v2 = sub_10015BAD4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10015BAD4()
{
  uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[292];
  uint64_t v1 = v0[291];
  uint64_t v2 = v0[289];
  uint64_t v3 = v0[288];
  uint64_t v21 = v0[286];
  uint64_t v22 = v0[287];
  uint64_t v4 = v0[281];
  uint64_t v5 = v0[280];
  uint64_t v6 = v0[279];
  uint64_t v7 = v0[278];
  uint64_t v17 = (void *)v0[273];
  uint64_t v18 = (void *)v0[285];
  uint64_t v19 = v0[267];
  uint64_t v8 = (char *)v0[266];
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = v0[296];
  uint64_t v11 = v0[297];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v1, v3);
  v0[167] = v7;
  v0[168] = v10;
  v0[169] = v6;
  v0[170] = v5;
  v0[171] = v11;
  v0[172] = v4;
  RCTimeRangeFromCMTimeRange();
  RCTimeRangeDelta();
  uint64_t v13 = v12;

  v20(v1, v3);
  *(void *)uint64_t v8 = v19;
  Swift::String v14 = (int *)_s14RecordingLayerVMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(&v8[v14[5]], v9, v3);
  *(void *)&v8[v14[6]] = v13;
  uint64_t v15 = &v8[v14[7]];
  *(void *)uint64_t v15 = v21;
  *((void *)v15 + 1) = v22;
  swift_task_dealloc();
  (*(void (**)(char *, void, uint64_t, int *))(*((void *)v14 - 1) + 56))(v8, 0, 1, v14);
  swift_task_dealloc();
  return _swift_asyncLet_finish(v0 + 2, v0 + 221, sub_10015BCF4, v0 + 188);
}

uint64_t sub_10015BCF4()
{
  return _swift_task_switch(sub_10015BD80, 0, 0);
}

uint64_t sub_10015BD80()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1432, sub_10015BE18, v0 + 1296);
}

uint64_t sub_10015BE18()
{
  return _swift_task_switch(sub_10015BEA4, 0, 0);
}

uint64_t sub_10015BEA4()
{
  uint64_t v1 = *(void **)(v0 + 2192);

  swift_release_n();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10015BF5C()
{
  return _swift_task_switch(sub_10015BFE8, 0, 0);
}

uint64_t sub_10015BFE8()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1432, sub_10015C080, v0 + 1920);
}

uint64_t sub_10015C080()
{
  return _swift_task_switch(sub_100164330, 0, 0);
}

uint64_t sub_10015C10C()
{
  return _swift_task_switch(sub_10015C198, 0, 0);
}

uint64_t sub_10015C198()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1432, sub_10015C080, v0 + 1728);
}

uint64_t sub_10015C230()
{
  return _swift_task_switch(sub_10015C2BC, 0, 0);
}

uint64_t sub_10015C2BC()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1432, sub_10015C080, v0 + 1680);
}

uint64_t sub_10015C354()
{
  uint64_t v16 = v0;
  if (qword_100264530 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[268];
  uint64_t v2 = type metadata accessor for Logger();
  sub_10002272C(v2, (uint64_t)qword_100275340);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v1, v3);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v14 = v0[267];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    v0[263] = sub_10002F3B8(0xD00000000000001BLL, 0x80000001001EF670, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2048;
    v0[259] = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2080;
    uint64_t v9 = URL.lastPathComponent.getter();
    v0[258] = sub_10002F3B8(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s insertTimeRange() failed, layerIndex = %ld, recording = %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  }
  swift_errorRelease();

  uint64_t v11 = v0[266];
  swift_task_dealloc();
  uint64_t v12 = _s14RecordingLayerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  return _swift_asyncLet_finish(v0 + 2, v0 + 221, sub_10015C230, v0 + 204);
}

uint64_t sub_10015C6D0()
{
  uint64_t v17 = v0;
  if (qword_100264530 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 2144);
  uint64_t v2 = type metadata accessor for Logger();
  sub_10002272C(v2, (uint64_t)qword_100275340);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v1, v3);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v14 = *(void *)(v0 + 2136);
    uint64_t v15 = *(void **)(v0 + 2184);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    *(void *)(v0 + 1624) = sub_10002F3B8(0xD00000000000001BLL, 0x80000001001EF670, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2048;
    *(void *)(v0 + 1672) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2080;
    uint64_t v9 = URL.lastPathComponent.getter();
    *(void *)(v0 + 1720) = sub_10002F3B8(v9, v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s no compatible preset, layerIndex = %ld, recording = %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  }

  uint64_t v11 = *(void *)(v0 + 2128);
  swift_task_dealloc();
  uint64_t v12 = _s14RecordingLayerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  return _swift_asyncLet_finish(v0 + 16, v0 + 1768, sub_10015C10C, v0 + 1968);
}

uint64_t sub_10015CA44()
{
  return _swift_task_switch(sub_10015CAD0, 0, 0);
}

uint64_t sub_10015CAD0()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1432, sub_10015C080, v0 + 1776);
}

uint64_t sub_10015CB68()
{
  uint64_t v26 = v0;
  if (qword_100264530 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[291];
  uint64_t v2 = v0[289];
  uint64_t v3 = v0[288];
  uint64_t v4 = type metadata accessor for Logger();
  sub_10002272C(v4, (uint64_t)qword_100275340);
  uint64_t v5 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v1, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[292];
  uint64_t v10 = v0[291];
  uint64_t v11 = v0[288];
  uint64_t v24 = (void *)v0[285];
  uint64_t v12 = (void *)v0[273];
  if (v8)
  {
    uint64_t v21 = v0[288];
    uint64_t v13 = swift_slowAlloc();
    os_log_type_t type = v7;
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315650;
    uint64_t v23 = v12;
    v0[260] = sub_10002F3B8(0xD00000000000001BLL, 0x80000001001EF670, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[261] = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v14 = v15;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v13 + 22) = 2080;
    uint64_t v16 = URL.lastPathComponent.getter();
    v0[262] = sub_10002F3B8(v16, v17, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v9(v5, v21);
    _os_log_impl((void *)&_mh_execute_header, v6, type, "%s export failed, exportError = %@, layer = %s", (uint8_t *)v13, 0x20u);
    sub_100028654(&qword_100265560);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v9(v10, v21);
    swift_task_dealloc();
  }
  else
  {

    v9(v5, v11);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_task_dealloc();

    v9(v10, v11);
  }
  uint64_t v18 = v0[266];
  uint64_t v19 = _s14RecordingLayerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  swift_task_dealloc();
  return _swift_asyncLet_finish(v0 + 2, v0 + 221, sub_10015CA44, v0 + 228);
}

uint64_t sub_10015CF94(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_10015CFB4, 0, 0);
}

uint64_t sub_10015CFB4()
{
  sub_100028654(&qword_100269F98);
  uint64_t v1 = static AVPartialAsyncProperty<A>.timeRange.getter();
  v0[4] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10015D06C;
  uint64_t v3 = v0[2];
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v3, v1);
}

uint64_t sub_10015D06C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10015D1A8, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10015D1A8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10015D20C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return _swift_task_switch(sub_10015D22C, 0, 0);
}

uint64_t sub_10015D22C()
{
  sub_100028654(&qword_100269F88);
  uint64_t v1 = static AVPartialAsyncProperty<A>.formatDescriptions.getter();
  *(void *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10015D2F4;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 16, v1);
}

uint64_t sub_10015D2F4()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10015D4A4;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10015D410;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10015D410()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = sub_100153880(v0[2]);
  swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10015D4A4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10015D508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100028654(&qword_1002699E0);
  __chkstk_darwin(v6 - 8);
  BOOL v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002869C(a1, (uint64_t)v8, &qword_1002699E0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000285F8((uint64_t)v8, &qword_1002699E0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  sub_100028654(&qword_100269F00);
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_10015D704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  type metadata accessor for MainActor();
  v6[15] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  unsigned char v6[16] = v8;
  v6[17] = v7;
  return _swift_task_switch(sub_10015D7A0, v8, v7);
}

uint64_t sub_10015D7A0()
{
  id v1 = [self sharedApplicationModel];
  v0[18] = v1;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 recordingWithUniqueID:v2];
  v0[19] = v3;

  if (v3)
  {
    sub_10011F918((uint64_t)(v0 + 7));
    sub_10012E73C((uint64_t)(v0 + 7), (uint64_t)(v0 + 2));
    uint64_t v4 = v0[3];
    if (v4)
    {
      uint64_t v5 = v0[2];
      uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100269EF8 + dword_100269EF8);
      uint64_t v6 = (void *)swift_task_alloc();
      v0[20] = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_10015D944;
      return v9(v5, v4);
    }
    swift_release();

    id v1 = v3;
  }
  else
  {
    swift_release();
  }

  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10015D944()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 128);
    uint64_t v4 = *(void *)(v2 + 136);
    uint64_t v5 = sub_10015DAF0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 128);
    uint64_t v4 = *(void *)(v2 + 136);
    uint64_t v5 = sub_10015DA6C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10015DA6C()
{
  uint64_t v2 = (void *)v0[18];
  id v1 = (void *)v0[19];
  swift_release();
  sub_100163030(v0 + 7);

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10015DAF0()
{
  uint64_t v2 = (void *)v0[18];
  id v1 = (void *)v0[19];
  sub_100163030(v0 + 7);

  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10015DCD0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10015DD18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100031604;
  return sub_10015D704(a1, v4, v5, v6, v7, v8);
}

char *sub_10015DDE0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1000094B4(a1, a2, a3, a4, &qword_100269FF0);
}

void *sub_10015DDF4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100028654(&qword_100269F80);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10015F7E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10015DF04(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100028654(&qword_100265F48);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10015F6E8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10015E028(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100028654(&qword_10026A010);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10015FD88(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10015E14C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100028654((uint64_t *)&unk_100269FD0);
  uint64_t v10 = *(void *)(sub_100028654(&qword_100266770) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100028654(&qword_100266770) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10015FE80(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_10015E3BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10015E534(a1, a2, a3, a4, &qword_100269FC0, type metadata accessor for TimeRangeRun, type metadata accessor for TimeRangeRun);
}

char *sub_10015E3F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100028654(&qword_100269FB8);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[32 * v8 + 32]) {
          memmove(v13, a4 + 32, 32 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10015F5FC(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10015E500(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10015E534(a1, a2, a3, a4, &qword_10026A000, type metadata accessor for TranscriptionFragment, type metadata accessor for TranscriptionFragment);
}

uint64_t sub_10015E534(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100028654(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100160414(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_10015E7B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10015E534(a1, a2, a3, a4, &qword_100269FE8, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_10015E7D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015E8FC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10015E7F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015EA80(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10015E810(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015EBEC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10015E830(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015EED0(a1, a2, a3, (void *)*v3, &qword_100269FC8, (uint64_t (*)(void))&type metadata accessor for AttributedString.Index);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10015E860(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015ED70(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10015E880(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015EED0(a1, a2, a3, (void *)*v3, &qword_100269FC0, type metadata accessor for TimeRangeRun);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10015E8BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015F118(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10015E8DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015F2A4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10015E8FC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100028654(&qword_100265F48);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015EA80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100028654(&qword_100269F80);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015EBEC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100028654(&qword_10026A010);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015ED70(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100028654(&qword_100269FB8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015EED0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100028654(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015F118(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100028654(&qword_100269F10);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_100028654(&qword_100269F18);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015F2A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100028654(&qword_100269F90);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10015F404(unint64_t a1, uint64_t a2, uint64_t (*a3)(id))
{
  unint64_t v16 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  sub_10015E8BC(0, 0, 0);
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
LABEL_3:
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  if (v16)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v5 == v6) {
        break;
      }
LABEL_7:
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v5 >= *(void *)(v4 + 16))
        {
          __break(1u);
LABEL_19:
          __break(1u);
LABEL_20:
          __break(1u);
LABEL_21:
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)sub_10015E8BC(0, 0, 0);
          if (v13 < 0)
          {
            __break(1u);
            return result;
          }
          goto LABEL_3;
        }
        id v7 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      if (__OFADD__(v5, 1)) {
        goto LABEL_19;
      }
      if (__OFADD__(a2 + v5, 1)) {
        goto LABEL_20;
      }
      uint64_t v9 = a3(v7);

      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_10015E8BC(v10 > 1, v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      _swiftEmptyArrayStorage[v11 + 4] = v9;
      ++v5;
      if (!v16) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    if (v5 != *(void *)(v4 + 16)) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

char *sub_10015F5FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    id v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015F6E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015F7E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015F8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[7] = v5;
  v3[8] = v4;
  return _swift_task_switch(sub_10015F970, v5, v4);
}

uint64_t sub_10015F970()
{
  if ([*(id *)(v0 + 40) isRecording])
  {
    swift_release();
    sub_100163758();
    swift_allocError();
    *id v1 = 1;
    swift_willThrow();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
    return v2();
  }
  uint64_t v3 = *(void **)(v0 + 40);
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 playRecordingWithUUID:v4];

  id v5 = [v3 audioPlayer];
  *(void *)(v0 + 72) = v5;
  if (!v5)
  {
    swift_release();
LABEL_13:
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_14;
  }
  *(void *)(v0 + 16) = &OBJC_PROTOCOL___VMAudioPlayer;
  uint64_t v6 = swift_dynamicCastObjCProtocolConditional();
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = v6;
  swift_getObjectType();
  sub_100025F4C(0, (unint64_t *)&qword_100269240);
  if (!swift_dynamicCastMetatype()) {
    uint64_t v7 = 0;
  }
  if (!v7)
  {
LABEL_12:
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v9;
  void *v9 = v0;
  v9[1] = sub_10015FB6C;
  return sub_100155EC8(ObjectType);
}

uint64_t sub_10015FB6C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    id v5 = sub_10015FD18;
  }
  else {
    id v5 = sub_10015FCA8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10015FCA8()
{
  swift_release();
  swift_unknownObjectRelease();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10015FD18()
{
  swift_release();
  swift_unknownObjectRelease();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10015FD88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015FE80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100028654(&qword_100266770) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10015FFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  type metadata accessor for MainActor();
  v4[16] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100160078, v6, v5);
}

uint64_t sub_100160078()
{
  uint64_t v1 = v0 + 16;
  uint64_t v24 = v0 + 56;
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 104);
  swift_release();
  Swift::Bool v4 = URL.startAccessingSecurityScopedResource()();
  id v5 = [self sharedApplicationModel];
  URL.path.getter();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = swift_task_alloc();
  Date.init()();
  v25.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
  swift_task_dealloc();
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v3, v9);
  if (v2)
  {
    unint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    v12(v11, v9);
  }
  else
  {
    uint64_t v13 = swift_task_alloc();
    URL.deletingPathExtension()();
    URL.lastPathComponent.getter();
    unint64_t v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v14(v13, v9);
    v14(v11, v9);
    uint64_t v1 = v0 + 16;
    swift_task_dealloc();
  }
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v5 insertRecordingWithAudioFile:v23 duration:v25.super.isa date:v15 customTitleBase:0 uniqueID:-1.0];

  sub_10011F918(v24);
  sub_10012E73C(v24, v1);
  uint64_t v17 = *(void *)(v0 + 24);
  if (v17)
  {
    uint64_t v18 = *(void *)(v0 + 16);
    long long v26 = *(_OWORD *)(v0 + 32);
    uint64_t v19 = *(void *)(v0 + 48);

    swift_task_dealloc();
    if (v4) {
      URL.stopAccessingSecurityScopedResource()();
    }
    uint64_t v20 = *(void *)(v0 + 96);
    *(void *)uint64_t v20 = v18;
    *(void *)(v20 + 8) = v17;
    *(_OWORD *)(v20 + 16) = v26;
    *(void *)(v20 + 32) = v19;
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    swift_task_dealloc();
    sub_10011A20C();
    swift_allocError();
    swift_willThrow();

    if (v4) {
      URL.stopAccessingSecurityScopedResource()();
    }
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v21();
}

uint64_t sub_100160414(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100160570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[18] = a5;
  v6[19] = v5;
  unsigned char v6[16] = a3;
  v6[17] = a4;
  v6[14] = a1;
  v6[15] = a2;
  type metadata accessor for MainActor();
  v6[20] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[21] = v8;
  v6[22] = v7;
  return _swift_task_switch(sub_100160610, v8, v7);
}

uint64_t sub_100160610()
{
  if ([*(id *)(v0 + 152) isRecording])
  {
    swift_release();
    sub_1001638FC();
    swift_allocError();
    *uint64_t v1 = 0;
    swift_willThrow();
LABEL_18:
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
  id v2 = [self sharedApplicationModel];
  *(void *)(v0 + 184) = v2;
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 recordingWithUniqueID:v3];
  *(void *)(v0 + 192) = v4;

  if (!v4)
  {
    swift_release();
LABEL_17:
    sub_100163AF0();
    swift_allocError();
    *uint64_t v29 = 0;
    swift_willThrow();

    goto LABEL_18;
  }
  uint64_t v5 = type metadata accessor for URL();
  *(void *)(v0 + 200) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v0 + 208) = v6;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 216) = v7;
  id v8 = [v4 url];
  sub_100028654(&qword_100269FB0);
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = v9;
  id v37 = v2;
  if (!v8)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v9, 1, 1, v5);
    goto LABEL_14;
  }
  uint64_t v36 = v7;
  uint64_t v11 = swift_task_alloc();
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v35 = *(void (**)(void))(v6 + 32);
  ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v10, v11, v5);
  unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v12(v10, 0, 1, v5);
  swift_task_dealloc();
  unint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v13(v10, 1, v5) == 1)
  {
LABEL_14:
    swift_release();

    sub_1000285F8(v10, &qword_100269FB0);
LABEL_15:
    swift_task_dealloc();
LABEL_16:
    swift_task_dealloc();
    id v2 = v37;
    goto LABEL_17;
  }
  uint64_t v32 = v13;
  uint64_t v33 = v12;
  v35();
  swift_task_dealloc();
  swift_bridgeObjectRetain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v37 recordingWithUniqueID:v14];
  *(void *)(v0 + 224) = v15;

  if (!v15)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v36, v5);

    swift_release();
    goto LABEL_16;
  }
  uint64_t v16 = swift_task_alloc();
  *(void *)(v0 + 232) = v16;
  id v17 = [v15 url];
  uint64_t v18 = swift_task_alloc();
  uint64_t v19 = v18;
  if (!v17)
  {
    v33(v18, 1, 1, v5);
    goto LABEL_23;
  }
  uint64_t v34 = v16;
  uint64_t v20 = swift_task_alloc();
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v19, v20, v5);
  v33(v19, 0, 1, v5);
  swift_task_dealloc();
  if (v32(v19, 1, v5) == 1)
  {
LABEL_23:
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v36, v5);
    sub_1000285F8(v19, &qword_100269FB0);
    swift_task_dealloc();
    goto LABEL_15;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v34, v19, v5);
  swift_task_dealloc();
  type metadata accessor for MultiTrackCompositor();
  *(void *)(v0 + 240) = swift_initStackObject();
  uint64_t v21 = swift_task_alloc();
  *(void *)(v0 + 248) = v21;
  sub_100028654(&qword_100269FE8);
  uint64_t v22 = *(void *)(v6 + 72);
  int v23 = *(_DWORD *)(v6 + 80);
  *(_DWORD *)(v0 + 280) = v23;
  unint64_t v24 = (v23 + 32) & ~(unint64_t)v23;
  uint64_t v25 = swift_allocObject();
  *(void *)(v0 + 256) = v25;
  *(_OWORD *)(v25 + 16) = xmmword_1001F0FB0;
  unint64_t v26 = v25 + v24;
  uint64_t v27 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
  v27(v26, v36, v5);
  v27(v26 + v22, v34, v5);
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_100160CA8;
  v28[36] = v21;
  v28[37] = v25;
  return _swift_task_switch(sub_100157D00, 0, 0);
}

uint64_t sub_100160CA8()
{
  id v2 = (void *)*v1;
  v2[34] = v0;
  swift_task_dealloc();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v3 = v2[22];
  uint64_t v4 = v2[21];
  if (v0) {
    uint64_t v5 = sub_100161268;
  }
  else {
    uint64_t v5 = sub_100160E4C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100160E4C()
{
  uint64_t v39 = v0 + 56;
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();
  URL.path.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  Date.init()();
  v6.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  swift_task_dealloc();
  id v7 = [v1 title];
  if (v7)
  {
    id v8 = v7;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v9 = *(void **)(v0 + 224);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = 2108192;
  v10._object = (void *)0xE300000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  id v11 = [v9 title];
  if (v11)
  {
    unint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v15 = v14;
  }
  else
  {
    id v15 = (void *)0xE600000000000000;
    uint64_t v13 = 0x646E6F636553;
  }
  uint64_t v16 = *(void *)(v0 + 208);
  id v17 = *(void **)(v0 + 184);
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v13;
  v18._object = v15;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = [v17 insertRecordingWithAudioFile:v2 duration:v6.super.isa date:v19 customTitleBase:0 uniqueID:-1.0];

  sub_10011F918(v39);
  sub_10012E73C(v39, v0 + 16);
  uint64_t v21 = *(void *)(v0 + 24);
  uint64_t v22 = (void (**)(uint64_t, uint64_t))(v16 + 8);
  uint64_t v23 = *(void *)(v0 + 248);
  unint64_t v24 = *(void **)(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 216);
  uint64_t v27 = *(void **)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 200);
  uint64_t v40 = *(void **)(v0 + 184);
  if (v21)
  {
    uint64_t v35 = *(void *)(v0 + 216);
    uint64_t v29 = *(void *)(v0 + 112);
    uint64_t v37 = *(void *)(v0 + 16);
    uint64_t v38 = *(void *)(v0 + 48);
    long long v36 = *(_OWORD *)(v0 + 32);

    swift_release();
    uint64_t v30 = *v22;
    (*v22)(v23, v28);
    v30(v25, v28);
    v30(v35, v28);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(void *)uint64_t v29 = v37;
    *(void *)(v29 + 8) = v21;
    *(_OWORD *)(v29 + 16) = v36;
    *(void *)(v29 + 32) = v38;
  }
  else
  {
    sub_100163AF0();
    swift_allocError();
    *uint64_t v32 = 1;
    swift_willThrow();

    swift_release();
    uint64_t v33 = *v22;
    (*v22)(v23, v28);
    v33(v25, v28);
    v33(v26, v28);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_100161268()
{
  NSString v2 = (void *)v0[28];
  uint64_t v1 = v0[29];
  uint64_t v4 = v0[26];
  uint64_t v3 = v0[27];
  NSDate v6 = (void *)v0[24];
  uint64_t v5 = v0[25];
  id v7 = (void *)v0[23];
  swift_release();

  swift_release();
  id v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v1, v5);
  v8(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100161358(uint64_t a1, uint64_t a2)
{
  v2[23] = a1;
  v2[24] = a2;
  type metadata accessor for MainActor();
  v2[25] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[26] = v4;
  v2[27] = v3;
  return _swift_task_switch(sub_1001613F0, v4, v3);
}

uint64_t sub_1001613F0()
{
  uint64_t v1 = v0[24];
  sub_100028654(&qword_100269F80);
  uint64_t inited = swift_initStackObject();
  v0[28] = inited;
  *(_OWORD *)(inited + 16) = xmmword_1001F0FB0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v3;
  sub_1001539CC(1634492771, v1);
  *(void *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 56) = v4;
  uint64_t v5 = self;
  v0[29] = v5;
  v0[30] = AVFileTypeAppleM4A;
  if (*(void *)(inited + 16))
  {
    uint64_t v6 = (void *)v5;
    uint64_t v10 = v0[23];
    v0[31] = *(void *)(inited + 32);
    v0[32] = *(void *)(inited + 40);
    swift_bridgeObjectRetain();
    NSString v7 = String._bridgeToObjectiveC()();
    v0[33] = v7;
    v0[2] = v0;
    v0[7] = v0 + 37;
    v0[3] = sub_1001615E4;
    uint64_t v8 = swift_continuation_init();
    v0[18] = _NSConcreteStackBlock;
    v0[19] = 0x40000000;
    v0[20] = sub_100159E28;
    v0[21] = &unk_100228660;
    v0[22] = v8;
    [v6 determineCompatibilityOfExportPreset:v7 withAsset:v10 outputFileType:AVFileTypeAppleM4A completionHandler:v0 + 18];
    uint64_t v5 = (uint64_t)(v0 + 2);
  }
  else
  {
    __break(1u);
  }
  return _swift_continuation_await(v5);
}

uint64_t sub_1001615E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 216);
  uint64_t v2 = *(void *)(*(void *)v0 + 208);
  return _swift_task_switch(sub_1001616EC, v2, v1);
}

uint64_t sub_1001616EC()
{
  int v1 = *(unsigned __int8 *)(v0 + 296);

  uint64_t v2 = *(void *)(v0 + 256);
  if (v1 == 1)
  {
    uint64_t v3 = *(void *)(v0 + 248);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v4(v3, v2);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 224);
    uint64_t v7 = swift_bridgeObjectRelease();
    if (*(void *)(v6 + 16) < 2uLL)
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = *(void **)(v0 + 232);
      uint64_t v13 = *(void *)(v0 + 240);
      uint64_t v9 = *(void *)(v0 + 224);
      uint64_t v10 = *(void *)(v0 + 184);
      *(void *)(v0 + 272) = *(void *)(v9 + 48);
      *(void *)(v0 + 280) = *(void *)(v9 + 56);
      swift_bridgeObjectRetain();
      NSString v11 = String._bridgeToObjectiveC()();
      *(void *)(v0 + 288) = v11;
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 296;
      *(void *)(v0 + 24) = sub_1001618D4;
      uint64_t v12 = swift_continuation_init();
      *(void *)(v0 + 144) = _NSConcreteStackBlock;
      *(void *)(v0 + 152) = 0x40000000;
      *(void *)(v0 + 160) = sub_100159E28;
      *(void *)(v0 + 168) = &unk_100228660;
      *(void *)(v0 + 176) = v12;
      [v8 determineCompatibilityOfExportPreset:v11 withAsset:v10 outputFileType:v13 completionHandler:v0 + 144];
      uint64_t v7 = v0 + 16;
    }
    return _swift_continuation_await(v7);
  }
}

uint64_t sub_1001618D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 216);
  uint64_t v2 = *(void *)(*(void *)v0 + 208);
  return _swift_task_switch(sub_1001619DC, v2, v1);
}

uint64_t sub_1001619DC()
{
  int v1 = *(unsigned __int8 *)(v0 + 296);

  uint64_t v2 = *(void *)(v0 + 280);
  if (v1 == 1)
  {
    uint64_t v3 = *(void *)(v0 + 272);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = 0;
    uint64_t v2 = 0;
  }
  swift_release();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v4(v3, v2);
}

uint64_t sub_100161A88(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  v2[27] = a2;
  v2[28] = ObjectType;
  v2[26] = a1;
  v2[29] = sub_100028654(&qword_100269F00);
  v2[30] = swift_task_alloc();
  uint64_t v6 = _s14RecordingLayerVMa();
  v2[31] = v6;
  v2[32] = *(void *)(v6 - 8);
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[35] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[36] = v7;
  v2[37] = v8;
  return _swift_task_switch(sub_100161C08, v7, v8);
}

uint64_t sub_100161C08()
{
  id v1 = [self sharedApplicationModel];
  v0[38] = v1;
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 compositionLoadedForSavedRecordingUUID:v2];
  v0[39] = v3;

  if (v3)
  {
    id v4 = [v3 title];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;

      v0[40] = v6;
      v0[41] = v8;
      v0[23] = 0;
      id v9 = [v3 playableAsset:v0 + 23];
      v0[42] = v9;
      uint64_t v10 = (void *)v0[23];
      if (v9)
      {
        NSString v11 = v9;
        v0[2] = v0;
        v0[7] = v0 + 22;
        v0[3] = sub_100161F24;
        uint64_t v12 = swift_continuation_init();
        v0[15] = _NSConcreteStackBlock;
        v0[16] = 0x40000000;
        v0[17] = sub_100159D20;
        v0[18] = &unk_1002285A8;
        v0[19] = v12;
        id v13 = v10;
        [v11 loadTracksWithMediaType:AVMediaTypeAudio completionHandler:v0 + 15];
        return _swift_continuation_await(v0 + 2);
      }
      id v14 = v10;
      swift_release();
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    swift_release();
  }
  id v15 = (void *)v0[38];
  sub_1001630B0();
  swift_allocError();
  unsigned char *v16 = 0;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100161F24()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 344) = v2;
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v1 + 288);
    uint64_t v4 = *(void *)(v1 + 296);
    uint64_t v5 = sub_100162F24;
  }
  else
  {
    uint64_t v3 = *(void *)(v1 + 288);
    uint64_t v4 = *(void *)(v1 + 296);
    uint64_t v5 = sub_100162070;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100162070()
{
  uint64_t v1 = *(void **)(v0 + 312);
  unint64_t v2 = *(void *)(v0 + 176);
  id v3 = [self defaultManager];
  *(void *)(v0 + 352) = v3;
  uint64_t v4 = type metadata accessor for URL();
  *(void *)(v0 + 360) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v0 + 368) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 376) = v6;
  id v7 = [v1 composedAVURL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 384) = v8;
  URL._bridgeToObjectiveC()(v9);
  NSString v11 = v10;
  *(void *)(v0 + 192) = 0;
  id v12 = [v3 URLForDirectory:99 inDomain:1 appropriateForURL:v10 create:1 error:v0 + 192];

  id v13 = *(void **)(v0 + 192);
  if (v12)
  {
    uint64_t v14 = *(void *)(v0 + 320);
    uint64_t v15 = *(void *)(v0 + 328);
    uint64_t v16 = *(void *)(v0 + 224);
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    id v17 = v13;

    Swift::String v18 = (void *)swift_task_alloc();
    v18[2] = v6;
    v18[3] = v14;
    v18[4] = v15;
    v18[5] = v8;
    v18[6] = v16;
    uint64_t v19 = sub_10015F404(v2, 1, (uint64_t (*)(id))sub_100163104);
    *(void *)(v0 + 392) = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v20 = v19[2];
    *(void *)(v0 + 400) = v20;
    if (v20)
    {
      *(void *)(v0 + 408) = 0;
      *(void *)(v0 + 416) = _swiftEmptyArrayStorage;
      uint64_t v21 = *(void *)(*(void *)(v0 + 392) + 32);
      *(void *)(v0 + 424) = v21;
      swift_retain();
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 432) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_100162540;
      uint64_t v24 = *(void *)(v0 + 232);
      uint64_t v23 = *(void *)(v0 + 240);
      return Task<>.value.getter(v23, v21, v24);
    }
    else
    {
      uint64_t v26 = *(void *)(v0 + 384);
      uint64_t v28 = *(void *)(v0 + 368);
      uint64_t v27 = *(void *)(v0 + 376);
      uint64_t v30 = *(void **)(v0 + 352);
      uint64_t v29 = *(void *)(v0 + 360);
      uint64_t v31 = *(void **)(v0 + 304);
      uint64_t v32 = *(void **)(v0 + 312);

      swift_release();
      swift_bridgeObjectRelease();

      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v33(v26, v29);
      v33(v27, v29);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v34 = *(uint64_t (**)(void *))(v0 + 8);
      return v34(_swiftEmptyArrayStorage);
    }
  }
  else
  {
    uint64_t v37 = *(void **)(v0 + 312);
    uint64_t v38 = *(void **)(v0 + 336);
    uint64_t v39 = *(void **)(v0 + 304);
    id v36 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
}

uint64_t sub_100162540()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 296);
  uint64_t v3 = *(void *)(v1 + 288);
  return _swift_task_switch(sub_100162694, v3, v2);
}

uint64_t sub_100162694()
{
  uint64_t v76 = v0;
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 256) + 48))(v2, 1, v1) == 1)
  {
    swift_release();
    sub_1000285F8(v2, &qword_100269F00);
LABEL_21:
    uint64_t v37 = *(void **)(v0 + 416);
    goto LABEL_22;
  }
  uint64_t v3 = *(void **)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 272);
  sub_100163114(v2, v4);
  URL.path.getter();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  double v6 = *(double *)(v4 + *(int *)(v1 + 24));
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = swift_task_alloc();
  Date.init()();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  v74 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v74(v9, v7);
  swift_task_dealloc();
  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v3 insertRecordingWithAudioFile:v5 duration:isa date:v11 customTitleBase:0 uniqueID:v6];

  id v13 = [v12 uuid];
  if (!v13)
  {
LABEL_15:
    if (qword_100264530 != -1) {
      swift_once();
    }
    uint64_t v45 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 272);
    uint64_t v46 = type metadata accessor for Logger();
    sub_10002272C(v46, (uint64_t)qword_100275340);
    sub_100163178(v44, v45);
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    BOOL v49 = os_log_type_enabled(v47, v48);
    uint64_t v51 = *(uint64_t **)(v0 + 264);
    uint64_t v50 = *(void *)(v0 + 272);
    if (v49)
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136315394;
      *(void *)(v52 + 4) = sub_10002F3B8(0xD00000000000001BLL, 0x80000001001EF670, &v75);
      *(_WORD *)(v52 + 12) = 2048;
      uint64_t v53 = *v51;
      sub_1001631DC((uint64_t)v51);
      *(void *)(v52 + 14) = v53;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s appEntity() failed, layerIndex = %ld", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001631DC(*(void *)(v0 + 264));
    }
    swift_release();

    sub_1001631DC(v50);
    goto LABEL_21;
  }
  uint64_t v14 = v13;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  id v18 = [v12 title];
  if (!v18)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v19 = v18;
  uint64_t v71 = v15;
  uint64_t v20 = v8;
  uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v73 = v21;

  uint64_t v22 = swift_task_alloc();
  id v23 = [v12 creationDate];
  sub_100028654(&qword_100265A20);
  uint64_t v24 = swift_task_alloc();
  uint64_t v25 = v24;
  if (!v23)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v24, 1, 1, v7);
    goto LABEL_14;
  }
  uint64_t v69 = v12;
  uint64_t v26 = v17;
  uint64_t v27 = v22;
  uint64_t v28 = swift_task_alloc();
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v29 = v20;
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
  v30(v25, v28, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v25, 0, 1, v7);
  uint64_t v31 = v27;
  uint64_t v32 = v26;
  id v12 = v69;
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v25, 1, v7) == 1)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000285F8(v25, &qword_100265A20);
    swift_task_dealloc();
    swift_task_dealloc();
    goto LABEL_15;
  }
  v30(v31, v25, v7);
  swift_task_dealloc();
  uint64_t v33 = v31;
  uint64_t v34 = (char *)swift_task_alloc();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v34, v33, v7);
  [v69 length];
  sub_1000273E0(v71, v32, *(double *)&v70, v73, v34, (void *)(v0 + 80), v35);
  v74(v33, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 80);
  sub_100027360(v0 + 160);
  swift_retain();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v37 = *(void **)(v0 + 416);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v37 = sub_10015DF04(0, v37[2] + 1, 1, *(void **)(v0 + 416));
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  if (v39 >= v38 >> 1) {
    uint64_t v37 = sub_10015DF04((void *)(v38 > 1), v39 + 1, 1, v37);
  }
  uint64_t v40 = *(void *)(v0 + 272);
  v37[2] = v39 + 1;
  uint64_t v41 = &v37[5 * v39];
  long long v42 = *(_OWORD *)(v0 + 80);
  long long v43 = *(_OWORD *)(v0 + 96);
  v41[8] = *(void *)(v0 + 112);
  *((_OWORD *)v41 + 2) = v42;
  *((_OWORD *)v41 + 3) = v43;
  swift_release();

  sub_100027334(v0 + 160);
  swift_release();
  swift_release();
  swift_release();
  sub_1001631DC(v40);
LABEL_22:
  uint64_t v54 = *(void *)(v0 + 408) + 1;
  if (v54 == *(void *)(v0 + 400))
  {
    v72 = v37;
    uint64_t v55 = *(void *)(v0 + 384);
    uint64_t v56 = *(void *)(v0 + 368);
    uint64_t v57 = *(void *)(v0 + 376);
    uint64_t v59 = *(void **)(v0 + 352);
    uint64_t v58 = *(void *)(v0 + 360);
    uint64_t v60 = *(void **)(v0 + 304);
    uint64_t v61 = *(void **)(v0 + 312);

    swift_release();
    swift_bridgeObjectRelease();

    uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v62(v55, v58);
    v62(v57, v58);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v63 = *(uint64_t (**)(void *))(v0 + 8);
    return v63(v72);
  }
  else
  {
    *(void *)(v0 + 408) = v54;
    *(void *)(v0 + 416) = v37;
    uint64_t v65 = *(void *)(*(void *)(v0 + 392) + 8 * v54 + 32);
    *(void *)(v0 + 424) = v65;
    swift_retain();
    id v66 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v66;
    *id v66 = v0;
    v66[1] = sub_100162540;
    uint64_t v68 = *(void *)(v0 + 232);
    uint64_t v67 = *(void *)(v0 + 240);
    return Task<>.value.getter(v67, v65, v68);
  }
}

uint64_t sub_100162F24()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = (void *)v0[39];
  swift_release();
  swift_willThrow();

  swift_errorRelease();
  uint64_t v3 = (void *)v0[38];
  sub_1001630B0();
  swift_allocError();
  *uint64_t v4 = 0;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  NSString v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t *sub_100163030(uint64_t *a1)
{
  return a1;
}

uint64_t _s14RecordingLayerVMa()
{
  uint64_t result = qword_10026A228;
  if (!qword_10026A228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1001630B0()
{
  unint64_t result = qword_100269F08;
  if (!qword_100269F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100269F08);
  }
  return result;
}

uint64_t sub_100163104(void *a1, uint64_t a2)
{
  return sub_100159E4C(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_100163114(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14RecordingLayerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100163178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14RecordingLayerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001631DC(uint64_t a1)
{
  uint64_t v2 = _s14RecordingLayerVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100163238()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + 7;
  unint64_t v7 = (v6 + v4) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v3 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v3;
  unint64_t v9 = ((v6 + v8) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  unint64_t v10 = v0 + v4;
  NSString v11 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v11(v10, v1);

  swift_bridgeObjectRelease();
  v11(v0 + v8, v1);

  return _swift_deallocObject(v0, v9, v5);
}

uint64_t sub_100163364(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  unint64_t v8 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = v1 + v7;
  uint64_t v12 = *(void *)(v1 + v8);
  uint64_t v13 = *(void *)(v1 + v9);
  uint64_t v14 = *(void *)(v1 + v9 + 8);
  uint64_t v15 = v1 + ((v6 + v9 + 16) & ~v6);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v16;
  void *v16 = v3;
  v16[1] = sub_100015B60;
  v16[272] = v15;
  v16[271] = v14;
  v16[270] = v13;
  v16[269] = v12;
  v16[268] = v11;
  v16[267] = v10;
  v16[266] = a1;
  return _swift_task_switch(sub_10015A1A0, 0, 0);
}

uint64_t sub_1001634D0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100163508(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100031604;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100269F30 + dword_100269F30);
  return v6(a1, v4);
}

uint64_t sub_1001635C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001635F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_100031604;
  return _swift_task_switch(sub_10015CFB4, 0, 0);
}

uint64_t sub_1001636A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100015B60;
  v5[4] = a1;
  v5[5] = v4;
  return _swift_task_switch(sub_10015D22C, 0, 0);
}

unint64_t sub_100163758()
{
  unint64_t result = qword_10026A040;
  if (!qword_10026A040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10026A040);
  }
  return result;
}

const char *sub_1001637AC()
{
  return "playing";
}

id sub_1001637B8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 playing];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1001637EC()
{
  return 8;
}

void *sub_1001637F8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

const char *sub_100163804()
{
  return "playbackError";
}

id sub_100163810@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 playbackError];
  *a2 = result;
  return result;
}

uint64_t sub_10016384C()
{
  return 8;
}

unint64_t sub_100163858()
{
  unint64_t result = qword_10026A070;
  if (!qword_10026A070)
  {
    sub_100025F4C(255, &qword_10026A068);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10026A070);
  }
  return result;
}

uint64_t sub_1001638B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001638FC()
{
  unint64_t result = qword_10026A178;
  if (!qword_10026A178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10026A178);
  }
  return result;
}

const char *sub_100163950()
{
  return "ioStarted";
}

id sub_10016395C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 ioStarted];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100163990(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIoStarted:*a1];
}

uint64_t sub_1001639A4()
{
  return 8;
}

const char *sub_1001639B0()
{
  return "recordingError";
}

id sub_1001639BC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 recordingError];
  *a2 = result;
  return result;
}

uint64_t sub_1001639FC()
{
  return 8;
}

uint64_t sub_100163A08()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100163A18()
{
  return swift_continuation_throwingResume();
}

unint64_t sub_100163A20()
{
  unint64_t result = qword_10026A198;
  if (!qword_10026A198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10026A198);
  }
  return result;
}

const char *sub_100163A74()
{
  return "recording";
}

id sub_100163A80@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 recording];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_100163AB4()
{
  return 8;
}

unsigned char *sub_100163AC0(unsigned char *result)
{
  if ((*result & 1) == 0) {
    return (unsigned char *)(*(uint64_t (**)(void))(v1 + 16))();
  }
  return result;
}

unint64_t sub_100163AF0()
{
  unint64_t result = qword_10026A1A8;
  if (!qword_10026A1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10026A1A8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for RCPlayRecordingIntentPerformer(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for RCPlayRecordingIntentPerformer(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for RCPlayRecordingIntentPerformer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for RCPlayRecordingIntentPerformer(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for RCPlayRecordingIntentPerformer()
{
  return &type metadata for RCPlayRecordingIntentPerformer;
}

ValueMetadata *type metadata accessor for RCCombineRecordingsIntentPerformer()
{
  return &type metadata for RCCombineRecordingsIntentPerformer;
}

ValueMetadata *type metadata accessor for RCImportRecordingIntentPerformer()
{
  return &type metadata for RCImportRecordingIntentPerformer;
}

ValueMetadata *type metadata accessor for RCControlCenterToggleRecordingIntentPerformer()
{
  return &type metadata for RCControlCenterToggleRecordingIntentPerformer;
}

uint64_t *sub_100163C8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    id v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v12 = (uint64_t *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100163D88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

void *sub_100163E10(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100163EBC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100163F80(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

void *sub_100164020(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001640D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001640E4);
}

uint64_t sub_1001640E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1001641AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001641C0);
}

uint64_t sub_1001641C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for URL();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100164284()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100164330()
{
  return sub_10015BEA4();
}

uint64_t sub_1001643CC(unsigned char *a1)
{
  if (*a1 == 1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    uint64_t v2 = result;
    if (*(void *)(result + 16) != UIBackgroundTaskInvalid) {
      return swift_release();
    }
    id v3 = [self sharedApplication];
    id v4 = [v3 beginBackgroundTaskWithExpirationHandler:0];
    goto LABEL_8;
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v2 = result;
  id v4 = (id)UIBackgroundTaskInvalid;
  if (*(void *)(result + 16) != UIBackgroundTaskInvalid)
  {
    id v3 = [self sharedApplication];
    [v3 endBackgroundTask:*(void *)(v2 + 16)];
LABEL_8:

    *(void *)(v2 + 16) = v4;
  }
  return swift_release();
}

uint64_t sub_1001644F8()
{
  swift_release();

  return swift_deallocClassInstance();
}

id sub_1001646B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlatterViewControllerCoordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for PlatterViewControllerCoordinator()
{
  return self;
}

void sub_10016470C()
{
  uint64_t v0 = self;
  id v1 = [v0 sharedAppDelegate];
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = [v1 dependencyContainer];

    if (v3)
    {
      swift_retain();

      id v4 = [v0 sharedAppDelegate];
      if (v4
        && (int v5 = v4,
            id v6 = [v4 dynamicIslandSceneDelegate],
            v5,
            v6)
        && (id v7 = [v6 platterViewController], v6, v7))
      {
        sub_100164894();
        if (static NSObject.== infix(_:_:)()) {
          sub_100034CB8();
        }
        swift_release();
      }
      else
      {
        swift_release();
      }
    }
  }
}

unint64_t sub_100164894()
{
  unint64_t result = qword_100269240;
  if (!qword_100269240)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100269240);
  }
  return result;
}

ValueMetadata *type metadata accessor for LockScreenSessionManager()
{
  return &type metadata for LockScreenSessionManager;
}

id sub_100164988()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Platform();
  [super dealloc];
}

uint64_t type metadata accessor for Platform()
{
  return self;
}

id sub_100164A20()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TipKitManager();
  [super dealloc];
}

uint64_t type metadata accessor for TipKitManager()
{
  return self;
}

uint64_t sub_100164A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return _swift_task_switch(sub_100164A9C, 0, 0);
}

uint64_t sub_100164A9C()
{
  if (qword_100264548 != -1) {
    swift_once();
  }
  id v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *id v1 = v0;
  v1[1] = sub_100164B6C;
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8];
  return sub_1000EDDD4(v4, v2, v3);
}

uint64_t sub_100164B6C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100164CA0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100164CA0()
{
  unint64_t v12 = v0;
  if (qword_100264530 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10002272C(v1, (uint64_t)qword_100275340);
  os_log_type_t v2 = static os_log_type_t.error.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  if (os_log_type_enabled(v3, v2))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    v0[5] = sub_10002F3B8(0xD000000000000025, 0x80000001001EF920, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    v0[7] = sub_10002F3B8(v5, v6, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v2, "%s Unable to retrieve existing transcription with error - %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[8];
  uint64_t v8 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1001650C8(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  v3[4] = v6;
  sub_100028654(&qword_100266620);
  uint64_t v8 = swift_task_alloc();
  v3[5] = v8;
  id v9 = a3;
  uint64_t v10 = (void *)swift_task_alloc();
  v3[6] = v10;
  void *v10 = v3;
  v10[1] = sub_1001651EC;
  v10[9] = v5;
  v10[10] = v7;
  v10[8] = v8;
  return _swift_task_switch(sub_100164A9C, 0, 0);
}

uint64_t sub_1001651EC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001652E8, 0, 0);
}

uint64_t sub_1001652E8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = (void *)v0[2];
  if (v4 == 1)
  {
    sub_1000285F8(v1, &qword_100266620);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    NSString v6 = 0;
  }
  else
  {
    type metadata accessor for AttributedString.CharacterView();
    swift_task_alloc();
    sub_100106F3C(&qword_100266740, (void (*)(uint64_t))&type metadata accessor for AttributedString);
    dispatch thunk of AttributedStringProtocol.characters.getter();
    sub_100106F3C((unint64_t *)&unk_1002699D0, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
    String.init<A>(_:)();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = (void (**)(void, void))v0[3];
  ((void (**)(void, NSString))v7)[2](v7, v6);

  _Block_release(v7);
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

id sub_100165548()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RCControlsActionHelper();
  return [super dealloc];
}

uint64_t type metadata accessor for RCControlsActionHelper()
{
  return self;
}

uint64_t sub_1001655A0(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_10016561C()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100165664()
{
  uint64_t v2 = v0[2];
  char v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100015B60;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_10026A480 + dword_10026A480);
  return v6(v2, v3, v4);
}

uint64_t sub_100165720()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void **assignWithCopy for RCIntentSceneConfigurator(void **a1, void **a2)
{
  char v3 = *a1;
  uint64_t v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for RCIntentSceneConfigurator(void **a1, void **a2)
{
  char v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for RCIntentSceneConfigurator(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RCIntentSceneConfigurator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RCIntentSceneConfigurator()
{
  return &type metadata for RCIntentSceneConfigurator;
}

void sub_100165880(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100028654(&qword_10026A4D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1001662F4;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D4744;
  aBlock[3] = &unk_1002289A0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  [a2 goToAllRecordingsIfNeeded:1 completion:v10];
  _Block_release(v10);
}

uint64_t sub_100165A2C(uint64_t a1)
{
  uint64_t v3 = *v1;
  v2[2] = a1;
  v2[3] = v3;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100165AC8, v5, v4);
}

uint64_t sub_100165AC8()
{
  uint64_t v1 = v0[3];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[2];
    uint64_t v3 = (void *)v0[3];
    *uint64_t v2 = v3;
    uint64_t v4 = enum case for IntentSceneConfiguration.existingScene(_:);
    uint64_t v5 = type metadata accessor for IntentSceneConfiguration();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v2, v4, v5);
  }
  else
  {
    uint64_t v6 = v0[2];
    uint64_t v7 = enum case for IntentSceneConfiguration.newScene(_:);
    uint64_t v8 = type metadata accessor for IntentSceneConfiguration();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
    uint64_t v3 = 0;
  }
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  id v9 = v3;
  return v11();
}

uint64_t sub_100165BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10026A4C0 + dword_10026A4C0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100015B60;
  return v7(a1, a2);
}

uint64_t sub_100165C9C(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  v2[10] = type metadata accessor for MainActor();
  v2[11] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[12] = v4;
  v2[13] = v3;
  return _swift_task_switch(sub_100165D38, v4, v3);
}

uint64_t sub_100165D38()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 64);
    id v4 = [v2 delegate];
    *(void *)(v0 + 112) = v4;
    if (!v4)
    {
      unint64_t v13 = *(void **)(v0 + 64);
      swift_release();

      goto LABEL_17;
    }
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (!v5)
    {
      uint64_t v14 = *(void **)(v0 + 64);
      swift_release();

      swift_unknownObjectRelease();
      goto LABEL_17;
    }
    uint64_t v6 = (void *)v5;
    sub_10002F970(*(void *)(v0 + 72), v0 + 16);
    sub_100028654(&qword_10026A4C8);
    if (swift_dynamicCast())
    {
      swift_release();
      id v7 = [v6 mainViewController];
      *(void *)(v0 + 120) = v7;
      id v8 = [v7 splitViewController];
      *(void *)(v0 + 128) = v8;
      if (!v8)
      {
        uint64_t v15 = *(void **)(v0 + 64);
        swift_unknownObjectRelease();
        swift_release();

        goto LABEL_17;
      }
      id v9 = v8;
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (v10)
      {
        if ([v10 isCollapsedAndShowingPrimary])
        {
          *(void *)(v0 + 136) = static MainActor.shared.getter();
          uint64_t v11 = swift_task_alloc();
          *(void *)(v0 + 144) = v11;
          *(void *)(v11 + 16) = v7;
          uint64_t v12 = (void *)swift_task_alloc();
          *(void *)(v0 + 152) = v12;
          *uint64_t v12 = v0;
          v12[1] = sub_100166068;
          return withCheckedContinuation<A>(isolation:function:_:)();
        }

        swift_unknownObjectRelease();
        goto LABEL_11;
      }
      uint64_t v17 = *(void **)(v0 + 64);
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      id v9 = *(void **)(v0 + 64);
      swift_unknownObjectRelease();
      swift_release();
    }

    goto LABEL_17;
  }
LABEL_11:
  swift_release();
LABEL_17:
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_100166068()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_1001661C8, v3, v2);
}

uint64_t sub_1001661C8()
{
  uint64_t v2 = *(void **)(v0 + 120);
  uint64_t v1 = *(void **)(v0 + 128);

  swift_unknownObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_100166258(uint64_t a1)
{
  sub_100165880(a1, *(void **)(v1 + 16));
}

uint64_t sub_100166260()
{
  uint64_t v1 = sub_100028654(&qword_10026A4D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001662F4()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10016635C()
{
  return swift_release();
}

id sub_1001663D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VMRecordingContext();
  return [super dealloc];
}

uint64_t type metadata accessor for VMRecordingContext()
{
  return self;
}

void *sub_10016642C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    long long v9 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 9);
    *(_WORD *)(a1 + 88) = *((_WORD *)a2 + 44);
    uint64_t v12 = (void *)a2[12];
    uint64_t v11 = a2[13];
    *(void *)(a1 + 96) = v12;
    *(void *)(a1 + 104) = v11;
    uint64_t v13 = a3[10];
    __dst = (void *)(a1 + v13);
    uint64_t v14 = (char *)a2 + v13;
    *(_OWORD *)(a1 + 72) = v10;
    uint64_t v15 = type metadata accessor for UIContentUnavailableConfiguration();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = v12;
    if (v22(v14, 1, v15))
    {
      uint64_t v18 = sub_100028654(&qword_100269258);
      memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v20 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v4 + v20) = *((unsigned char *)a2 + v20);
  }
  return v4;
}

uint64_t sub_100166624(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  __int16 v8 = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = v8;
  long long v9 = *(void **)(a2 + 96);
  long long v10 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v9;
  id v11 = v9;

  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v12 = a3[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v16 = *(void *)(v15 - 8);
  id v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_100028654(&qword_100269258);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100166848(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  uint64_t v8 = a3[10];
  long long v9 = (void *)(a1 + v8);
  long long v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v11 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100028654(&qword_100269258);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_1001669A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  uint64_t v8 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v9 = a3[10];
  long long v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100028654(&qword_100269258);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  return a1;
}

uint64_t sub_100166BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100028654(&qword_100269258);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100166C58(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100028654(&qword_100269258);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100166D04(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x656C695370696B73;
  }
  else {
    unint64_t v3 = 0xD000000000000010;
  }
  if (v2) {
    unint64_t v4 = 0x80000001001EA040;
  }
  else {
    unint64_t v4 = 0xEB0000000065636ELL;
  }
  if (a2) {
    unint64_t v5 = 0x656C695370696B73;
  }
  else {
    unint64_t v5 = 0xD000000000000010;
  }
  if (a2) {
    unint64_t v6 = 0xEB0000000065636ELL;
  }
  else {
    unint64_t v6 = 0x80000001001EA040;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100166DB8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001001EA080;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000016;
    }
    else {
      unint64_t v5 = 0x64726F6365524352;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001001EA0A0;
    }
    else {
      unint64_t v6 = 0xEF64726143676E69;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000010;
  unint64_t v6 = 0x80000001001EA080;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD000000000000016;
    }
    else {
      unint64_t v2 = 0x64726F6365524352;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x80000001001EA0A0;
    }
    else {
      unint64_t v3 = 0xEF64726143676E69;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100166ED8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6369666963657073;
  }
  else {
    uint64_t v3 = 0x6563655274736F6DLL;
  }
  if (v2) {
    unint64_t v4 = 0xEA0000000000746ELL;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6369666963657073;
  }
  else {
    uint64_t v5 = 0x6563655274736F6DLL;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEA0000000000746ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

Swift::Int sub_100166F84()
{
  return Hasher._finalize()();
}

uint64_t sub_100167038(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100028654(&qword_100267CA0);
    BOOL v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    BOOL v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = *(void **)(*(void *)(a1 + 48) + 8 * v12);
    sub_10002F4DC(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(void *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    uint64_t v38 = v40;
    *(void *)&v36[0] = v17;
    type metadata accessor for Key(0);
    id v18 = v17;
    swift_dynamicCast();
    sub_100114820((_OWORD *)((char *)v37 + 8), v31);
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_100114820(v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_100114820(v35, v36);
    sub_100114820(v36, &v32);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_100114820(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_10011BA7C();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100167400(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100028654(&qword_10026A5C8);
    uint64_t v1 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v1 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v26 = a1 + 64;
  uint64_t v2 = -1 << *(unsigned char *)(a1 + 32);
  if (-v2 < 64) {
    uint64_t v3 = ~(-1 << -(char)v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(63 - v2) >> 6;
  unint64_t v5 = v1 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v28 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v9 = v8 | (v28 << 6);
      goto LABEL_28;
    }
    int64_t v10 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v10 >= v25) {
      goto LABEL_37;
    }
    unint64_t v11 = *(void *)(v26 + 8 * v10);
    int64_t v12 = v28 + 1;
    if (!v11)
    {
      int64_t v12 = v28 + 2;
      if (v28 + 2 >= v25) {
        goto LABEL_37;
      }
      unint64_t v11 = *(void *)(v26 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v28 + 3;
        if (v28 + 3 >= v25) {
          goto LABEL_37;
        }
        unint64_t v11 = *(void *)(v26 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v28 + 4;
          if (v28 + 4 >= v25) {
            goto LABEL_37;
          }
          unint64_t v11 = *(void *)(v26 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v4 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v28 = v12;
LABEL_28:
    unint64_t v14 = *(void **)(*(void *)(a1 + 48) + 8 * v9);
    sub_1000D39B0(*(void *)(a1 + 56) + 40 * v9, (uint64_t)v34);
    long long v33 = v14;
    v30[0] = v34[0];
    v30[1] = v34[1];
    uint64_t v31 = v35;
    *(void *)&v32[0] = v14;
    id v15 = v14;
    swift_dynamicCast();
    uint64_t v16 = *(void *)&v32[0];
    sub_100114820((_OWORD *)((char *)v32 + 8), v29);
    sub_100114820(v29, v32);
    sub_100114820(v32, v30);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v17 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v18 = -1 << v1[32];
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)&v5[8 * (v19 >> 6)]) != 0)
    {
      unint64_t v7 = __clz(__rbit64((-1 << v19) & ~*(void *)&v5[8 * (v19 >> 6)])) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)&v5[8 * v20];
      }
      while (v24 == -1);
      unint64_t v7 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)&v5[(v7 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v7;
    *(void *)(*((void *)v1 + 6) + 8 * v7) = v16;
    uint64_t result = (uint64_t)sub_100114820(v30, (_OWORD *)(*((void *)v1 + 7) + 32 * v7));
    ++*((void *)v1 + 2);
  }
  int64_t v13 = v28 + 5;
  if (v28 + 5 >= v25)
  {
LABEL_37:
    swift_release();
    sub_10011BA7C();
    return (uint64_t)v1;
  }
  unint64_t v11 = *(void *)(v26 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v28 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_37;
    }
    unint64_t v11 = *(void *)(v26 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1001677B8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100028654(&qword_10026A5C8);
    uint64_t v2 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v28 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v28 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v28 + 1;
    if (!v12)
    {
      int64_t v13 = v28 + 2;
      if (v28 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v28 + 3;
        if (v28 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v28 + 4;
          if (v28 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v28 = v13;
LABEL_28:
    id v15 = *(void **)(*(void *)(a1 + 48) + 8 * v10);
    sub_10002869C(*(void *)(a1 + 56) + 32 * v10, (uint64_t)v34 + 8, &qword_100265A10);
    *(void *)&v34[0] = v15;
    v32[0] = v34[0];
    v32[1] = v34[1];
    uint64_t v33 = v35;
    *(void *)&v31[0] = v15;
    sub_1000209F8((uint64_t)v32 + 8, (uint64_t)v30, &qword_100265A10);
    id v16 = v15;
    sub_100028654(&qword_100265A10);
    swift_dynamicCast();
    uint64_t v17 = *(void *)&v31[0];
    sub_100114820((_OWORD *)((char *)v31 + 8), v29);
    sub_100114820(v29, v31);
    sub_100114820(v31, v30);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = -1 << v2[32];
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v8 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v2 + 6) + 8 * v8) = v17;
    uint64_t result = (uint64_t)sub_100114820(v30, (_OWORD *)(*((void *)v2 + 7) + 32 * v8));
    ++*((void *)v2 + 2);
  }
  int64_t v14 = v28 + 5;
  if (v28 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_10011BA7C();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v28 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100167BA0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return sub_100018514(a1[2], a2[2]);
  }
  else {
    return 0;
  }
}

uint64_t sub_100167BC8(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 16);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 16);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  }
  return result;
}

uint64_t sub_100167BF8(void *a1)
{
  uint64_t v2 = v1;
  sub_100169158();
  if (static NSObject.== infix(_:_:)()) {
    return 1;
  }
  id v4 = [a1 string];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  id v8 = [v2 string];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  if (v5 == v9 && v7 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v13 & 1) == 0) {
      return result;
    }
  }
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  if ((uint64_t)[v2 length] < 1)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  while (1)
  {
    if (__OFADD__(v15, v16))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
    }
    if (v19 >= v15 + v16)
    {
      swift_bridgeObjectRelease();
      id v22 = [v2 attributesAtIndex:v19 effectiveRange:&v30];
      type metadata accessor for Key(0);
      sub_1000338D0((unint64_t *)&qword_100264B30, type metadata accessor for Key);
      uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    if (__OFADD__(v17, v18)) {
      goto LABEL_31;
    }
    if (v19 >= v17 + v18)
    {
      swift_bridgeObjectRelease();
      id v23 = [a1 attributesAtIndex:v19 effectiveRange:&v28];
      type metadata accessor for Key(0);
      sub_1000338D0((unint64_t *)&qword_100264B30, type metadata accessor for Key);
      uint64_t v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    if (v20)
    {
      if (v21)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100167038(v20);
        swift_bridgeObjectRelease();
        id v24 = objc_allocWithZone((Class)NSDictionary);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v26 = [v24 initWithDictionary:isa];

        sub_100167038(v21);
        swift_bridgeObjectRelease();
        Class v27 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        LOBYTE(isa) = [v26 isEqualToDictionary:v27];

        if ((isa & 1) == 0) {
          break;
        }
      }
    }
    uint64_t v18 = v28;
    uint64_t v17 = v29;
    if (__OFADD__(v29, v28)) {
      goto LABEL_32;
    }
    uint64_t v16 = v30;
    uint64_t v15 = v31;
    if (__OFADD__(v31, v30)) {
      goto LABEL_33;
    }
    if (v31 + v30 >= v29 + v28) {
      uint64_t v19 = v29 + v28;
    }
    else {
      uint64_t v19 = v31 + v30;
    }
    if (v19 >= (uint64_t)[v2 length]) {
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100168018(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  return sub_100167BF8(*(void **)a2) & (v2 == v3);
}

uint64_t sub_100168058(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 == a2[2])
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    if (a1[4] == a2[4] && a1[5] == a2[5])
    {
      uint64_t v6 = a1[6];
      uint64_t v7 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v8 = sub_100018514(v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v8)
      {
        uint64_t v9 = v2 - 1;
        if (v2 == 1) {
          return 1;
        }
        uint64_t v11 = a2 + 9;
        for (uint64_t i = a1 + 9; *(i - 2) == *(v11 - 2) && *(i - 1) == *(v11 - 1); i += 3)
        {
          uint64_t v14 = *i;
          uint64_t v15 = *v11;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v16 = sub_100018514(v14, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v16 & 1) == 0) {
            break;
          }
          v11 += 3;
          uint64_t result = 1;
          if (!--v9) {
            return result;
          }
        }
      }
    }
  }
  return 0;
}

unint64_t sub_10016817C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10016854C(a1, v4);
}

unint64_t sub_1001681C0(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100168614(a1, a2, v4);
}

unint64_t sub_100168238(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();

  return sub_1001686F8(a1, v2);
}

unint64_t sub_10016827C(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_100168794(a1 & 1, v2);
}

unint64_t sub_100168330(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1001688DC(a1 & 1, v2);
}

unint64_t sub_1001683DC(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_100168A20(a1, v2);
}

unint64_t sub_1001684BC(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_100025C14(a1, v2);
}

unint64_t sub_10016854C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000D39B0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10011BA28((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_100168614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1001686F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100168794(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      unint64_t v6 = 0x656C695370696B73;
    }
    else {
      unint64_t v6 = 0xD000000000000010;
    }
    if (a1) {
      unint64_t v7 = 0xEB0000000065636ELL;
    }
    else {
      unint64_t v7 = 0x80000001001EA040;
    }
    while (1)
    {
      unint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x656C695370696B73 : 0xD000000000000010;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xEB0000000065636ELL : 0x80000001001EA040;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1001688DC(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x6369666963657073;
    }
    else {
      uint64_t v6 = 0x6563655274736F6DLL;
    }
    if (a1) {
      unint64_t v7 = 0xE800000000000000;
    }
    else {
      unint64_t v7 = 0xEA0000000000746ELL;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x6369666963657073 : 0x6563655274736F6DLL;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE800000000000000 : 0xEA0000000000746ELL;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_100168A20(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    while (1)
    {
      int v6 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v4);
      unint64_t v7 = 0xD000000000000016;
      if (v6 != 1) {
        unint64_t v7 = 0x64726F6365524352;
      }
      unint64_t v8 = 0xEF64726143676E69;
      if (v6 == 1) {
        unint64_t v8 = 0x80000001001EA0A0;
      }
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4)) {
        unint64_t v9 = v7;
      }
      else {
        unint64_t v9 = 0xD000000000000010;
      }
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4)) {
        unint64_t v10 = v8;
      }
      else {
        unint64_t v10 = 0x80000001001EA080;
      }
      if (a1)
      {
        if (a1 == 1) {
          unint64_t v11 = 0xD000000000000016;
        }
        else {
          unint64_t v11 = 0x64726F6365524352;
        }
        if (a1 == 1) {
          unint64_t v12 = 0x80000001001EA0A0;
        }
        else {
          unint64_t v12 = 0xEF64726143676E69;
        }
        if (v9 != v11) {
          goto LABEL_24;
        }
      }
      else
      {
        unint64_t v12 = 0x80000001001EA080;
        if (v9 != 0xD000000000000010) {
          goto LABEL_24;
        }
      }
      if (v10 == v12)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_24:
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

uint64_t sub_100168BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100028654(&qword_100269248);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100028654(&qword_100269258);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  BOOL v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v32 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v32 - v18;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(), LOBYTE(v21) = 0, (v20 & 1) != 0))
  {
    if ((sub_100018514(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0
      || (sub_100168058(*(void **)(a1 + 24), *(void **)(a2 + 24)) & 1) == 0)
    {
      goto LABEL_33;
    }
    if (*(unsigned char *)(a1 + 64))
    {
      if (!*(unsigned char *)(a2 + 64)) {
        goto LABEL_33;
      }
      goto LABEL_11;
    }
    LOBYTE(v21) = 0;
    if ((*(unsigned char *)(a2 + 64) & 1) == 0
      && (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 32), *(float64x2_t *)(a2 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48)))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0)
    {
LABEL_11:
      char v22 = *(unsigned char *)(a2 + 89);
      if (*(unsigned char *)(a1 + 89)) {
        goto LABEL_18;
      }
      if (*(unsigned char *)(a2 + 89)) {
        goto LABEL_33;
      }
      char v22 = *(unsigned char *)(a2 + 88);
      if (*(unsigned char *)(a1 + 88))
      {
LABEL_18:
        if ((v22 & 1) == 0) {
          goto LABEL_33;
        }
      }
      else
      {
        if (*(unsigned char *)(a2 + 88)) {
          goto LABEL_33;
        }
        LOBYTE(v21) = 0;
        if (*(void *)(a1 + 72) != *(void *)(a2 + 72) || *(void *)(a1 + 80) != *(void *)(a2 + 80)) {
          return v21 & 1;
        }
      }
      uint64_t v36 = v5;
      id v23 = *(void **)(a1 + 96);
      uint64_t v21 = *(void **)(a2 + 96);
      if (v23)
      {
        if (!v21) {
          return v21 & 1;
        }
        uint64_t v24 = *(void *)(a1 + 104);
        uint64_t v32 = *(void *)(a2 + 104);
        uint64_t v33 = v24;
        uint64_t v35 = v21;
        id v25 = v23;
        LODWORD(v34) = sub_100167BF8(v35);

        LOBYTE(v21) = 0;
        if ((v34 & 1) == 0 || v33 != v32) {
          return v21 & 1;
        }
      }
      else if (v21)
      {
        goto LABEL_33;
      }
      uint64_t v26 = type metadata accessor for TranscriptViewModel();
      sub_10002869C(a1 + *(int *)(v26 + 40), (uint64_t)v19, &qword_100269258);
      uint64_t v34 = v26;
      sub_10002869C(a2 + *(int *)(v26 + 40), (uint64_t)v17, &qword_100269258);
      Class v27 = &v10[*(int *)(v8 + 48)];
      sub_10002869C((uint64_t)v19, (uint64_t)v10, &qword_100269258);
      uint64_t v35 = v27;
      sub_10002869C((uint64_t)v17, (uint64_t)v27, &qword_100269258);
      uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      if (v28(v10, 1, v4) == 1)
      {
        sub_1000285F8((uint64_t)v17, &qword_100269258);
        sub_1000285F8((uint64_t)v19, &qword_100269258);
        if (v28(v35, 1, v4) == 1)
        {
          sub_1000285F8((uint64_t)v10, &qword_100269258);
          goto LABEL_32;
        }
        goto LABEL_30;
      }
      sub_10002869C((uint64_t)v10, (uint64_t)v14, &qword_100269258);
      if (v28(v35, 1, v4) == 1)
      {
        sub_1000285F8((uint64_t)v17, &qword_100269258);
        sub_1000285F8((uint64_t)v19, &qword_100269258);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v4);
LABEL_30:
        sub_1000285F8((uint64_t)v10, &qword_100269248);
        goto LABEL_33;
      }
      uint64_t v29 = v36;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v7, v35, v4);
      sub_1000338D0((unint64_t *)&qword_100269260, (void (*)(uint64_t))&type metadata accessor for UIContentUnavailableConfiguration);
      LODWORD(v35) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v29 + 8);
      v30(v7, v4);
      sub_1000285F8((uint64_t)v17, &qword_100269258);
      sub_1000285F8((uint64_t)v19, &qword_100269258);
      v30(v14, v4);
      sub_1000285F8((uint64_t)v10, &qword_100269258);
      if (v35)
      {
LABEL_32:
        if (*(unsigned __int8 *)(a1 + *(int *)(v34 + 44)) == *(unsigned __int8 *)(a2 + *(int *)(v34 + 44)))
        {
          LOBYTE(v21) = *(unsigned char *)(a1 + *(int *)(v34 + 48)) ^ *(unsigned char *)(a2 + *(int *)(v34 + 48)) ^ 1;
          return v21 & 1;
        }
      }
LABEL_33:
      LOBYTE(v21) = 0;
    }
  }
  return v21 & 1;
}

unint64_t sub_100169158()
{
  unint64_t result = qword_10026A5C0;
  if (!qword_10026A5C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10026A5C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TextAttachmentConfiguration()
{
  return &type metadata for TextAttachmentConfiguration;
}

uint64_t storeEnumTagSinglePayload for AutoScrollType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_1001691D8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001691F4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoScrollType()
{
  return &type metadata for AutoScrollType;
}

ValueMetadata *type metadata accessor for HighlightConfiguration()
{
  return &type metadata for HighlightConfiguration;
}

id sub_10016931C()
{
  *(void *)&v0[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_buttonHeight] = 0x4048800000000000;
  uint64_t v1 = OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_layoutHelper;
  uint64_t v2 = self;
  char v3 = v0;
  id v4 = [v2 sharedStyleProvider];
  [v4 recordingControlDiameter];
  uint64_t v6 = v5;

  unint64_t v7 = (objc_class *)type metadata accessor for RCRecordingControlLayoutHelper();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR____TtC10VoiceMemos30RCRecordingControlLayoutHelper_diameter] = v6;
  v21.receiver = v8;
  v21.super_class = v7;
  *(void *)&v0[v1] = [super init];
  uint64_t v9 = OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_styleProvider;
  *(void *)&v3[v9] = [v2 sharedStyleProvider];
  *(void *)&v3[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_minimumWidth] = 0x4034000000000000;
  *(void *)&v3[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_defaultPadding] = 0x4014000000000000;
  unint64_t v10 = (uint64_t *)&v3[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_titleString];
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  static Locale.current.getter();
  uint64_t *v10 = String.init(localized:table:bundle:locale:comment:)();
  v10[1] = v13;

  v20.receiver = v3;
  v20.super_class = (Class)type metadata accessor for RCDoneButton();
  id v14 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10016A93C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000F83D4;
  aBlock[3] = &unk_100228B80;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v14;
  swift_release();
  [v17 setConfigurationUpdateHandler:v16];
  _Block_release(v16);

  [v17 setPointerInteractionEnabled:1];
  return v17;
}

uint64_t sub_100169614(uint64_t a1)
{
  uint64_t v2 = sub_100028654((uint64_t *)&unk_100269278);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v14 = (char *)result;
    static UIButton.Configuration.filled()();
    uint64_t v15 = sub_100028654(&qword_100266620);
    BOOL v49 = &v44;
    __chkstk_darwin(v15 - 8);
    uint64_t v54 = a1;
    id v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v53 = v10;
    uint64_t v47 = *(void *)&v14[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_titleString];
    uint64_t v50 = v8;
    uint64_t v18 = type metadata accessor for AttributeContainer();
    uint64_t v46 = &v44;
    __chkstk_darwin(v18 - 8);
    sub_100028654(&qword_10026A628);
    uint64_t inited = swift_initStackObject();
    uint64_t v52 = v4;
    uint64_t v20 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1001F1BD0;
    uint64_t v48 = v5;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v45 = v12;
    uint64_t v21 = OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_styleProvider;
    uint64_t v51 = v9;
    char v22 = *(void **)&v14[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_styleProvider];
    swift_bridgeObjectRetain();
    id v23 = NSFontAttributeName;
    id v24 = [v22 recordingControlTextFont];
    *(void *)(v20 + 64) = sub_10016A5C4();
    *(void *)(v20 + 40) = v24;
    unint64_t v25 = sub_10010F32C(v20);
    sub_1001677B8(v25);
    swift_bridgeObjectRelease();
    AttributeContainer.init(_:)();
    AttributedString.init(_:attributes:)();
    uint64_t v26 = type metadata accessor for AttributedString();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v17, 0, 1, v26);
    Class v27 = v45;
    UIButton.Configuration.attributedTitle.setter();
    uint64_t v28 = *(void **)&v14[v21];
    id v29 = [v28 recordingSectionDoneAndCancelButtonTextColor];
    UIButton.Configuration.baseForegroundColor.setter();
    id v30 = [v28 recordingSectionDoneButtonInnerColor];
    UIButton.Configuration.baseBackgroundColor.setter();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v50, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v48);
    uint64_t v31 = v27;
    UIButton.Configuration.cornerStyle.setter();
    id v32 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v34 = [v32 initWithString:v33];

    [v34 size];
    sub_1001004A0();
    id v35 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = [v35 initWithString:v36];

    [v37 size];
    sub_1001004A0();
    sub_10016A1D8();
    uint64_t v38 = self;
    id v39 = [v38 sharedStyleProvider];
    [v39 recordingControlLozengeFixedWidthScaleFactor];

    sub_1001004A0();
    sub_10016A1D8();
    id v40 = [v38 sharedStyleProvider];
    [v40 recordingControlLozengeFixedWidthScaleFactor];

    sub_1001004A0();
    UIButton.Configuration.contentInsets.setter();
    uint64_t v41 = v53;
    long long v42 = v52;
    uint64_t v43 = v51;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v52, v31, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v43);
    UIButton.configuration.setter();

    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v31, v43);
  }
  return result;
}

uint64_t sub_100169DB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100028654((uint64_t *)&unk_100269278);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v21 - v6;
  uint64_t v8 = (objc_class *)type metadata accessor for RCDoneButton();
  v22.receiver = v0;
  v22.super_class = v8;
  [super updateConfiguration];
  UIButton.configuration.getter();
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
  {
    uint64_t v10 = sub_100028654(&qword_100266620);
    v21[2] = v21;
    __chkstk_darwin(v10 - 8);
    uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v21[1] = *(void *)&v1[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_titleString];
    uint64_t v13 = type metadata accessor for AttributeContainer();
    __chkstk_darwin(v13 - 8);
    sub_100028654(&qword_10026A628);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001F1BD0;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_styleProvider];
    swift_bridgeObjectRetain();
    uint64_t v16 = NSFontAttributeName;
    id v17 = [v15 recordingControlTextFont];
    *(void *)(inited + 64) = sub_10016A5C4();
    *(void *)(inited + 40) = v17;
    unint64_t v18 = sub_10010F32C(inited);
    sub_1001677B8(v18);
    swift_bridgeObjectRelease();
    AttributeContainer.init(_:)();
    AttributedString.init(_:attributes:)();
    uint64_t v19 = type metadata accessor for AttributedString();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 0, 1, v19);
    UIButton.Configuration.attributedTitle.setter();
  }
  sub_10016A604((uint64_t)v7, (uint64_t)v4);
  UIButton.configuration.setter();
  return sub_10016A66C((uint64_t)v7);
}

double sub_10016A0E0()
{
  sub_10016A1D8();
  double v2 = v1;
  double v3 = *(double *)(*(void *)(v0 + OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_layoutHelper)
                 + OBJC_IVAR____TtC10VoiceMemos30RCRecordingControlLayoutHelper_diameter);
  id v4 = [self sharedStyleProvider];
  [v4 recordingControlLozengeFixedWidthScaleFactor];
  double v6 = v5;

  if (v2 > v3 * v6) {
    double v7 = v2;
  }
  else {
    double v7 = v3 * v6;
  }
  double v8 = sub_1001004A0() + v7 - v2;
  sub_10016A1D8();
  return v9 + v8 + 10.0;
}

void sub_10016A1D8()
{
  double v1 = self;
  id v2 = [v1 mainBundle];
  v22._countAndFlagsBits = 0xD000000000000028;
  v22._object = (void *)0x80000001001EFC70;
  v3._countAndFlagsBits = 0x594C505041;
  v3._object = (void *)0xE500000000000000;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v22);

  id v5 = [v1 mainBundle];
  v23._object = (void *)0x80000001001EFCA0;
  v6._countAndFlagsBits = 1162760004;
  v6._object = (void *)0xE400000000000000;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0xD000000000000011;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v23);

  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100028654(&qword_10026A628);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001F1BD0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_styleProvider);
  uint64_t v11 = NSFontAttributeName;
  id v12 = [v10 recordingControlTextFont];
  unint64_t v13 = sub_10016A5C4();
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 40) = v12;
  unint64_t v14 = sub_10010F32C(inited);
  sub_1001677B8(v14);
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10011B968();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 sizeWithAttributes:isa];

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_1001F1BD0;
  *(void *)(v17 + 32) = v11;
  unint64_t v18 = v11;
  id v19 = [v10 recordingControlTextFont];
  *(void *)(v17 + 64) = v13;
  *(void *)(v17 + 40) = v19;
  unint64_t v20 = sub_10010F32C(v17);
  sub_1001677B8(v20);
  swift_bridgeObjectRelease();
  Class v21 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 sizeWithAttributes:v21];
}

id sub_10016A50C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RCDoneButton();
  return [super dealloc];
}

uint64_t type metadata accessor for RCDoneButton()
{
  return self;
}

unint64_t sub_10016A5C4()
{
  unint64_t result = qword_100264D60;
  if (!qword_100264D60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100264D60);
  }
  return result;
}

uint64_t sub_10016A604(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100028654((uint64_t *)&unk_100269278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10016A66C(uint64_t a1)
{
  uint64_t v2 = sub_100028654((uint64_t *)&unk_100269278);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10016A6CC()
{
  *(void *)&v0[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_buttonHeight] = 0x4048800000000000;
  uint64_t v1 = OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_layoutHelper;
  uint64_t v2 = self;
  id v3 = [v2 sharedStyleProvider];
  [v3 recordingControlDiameter];
  uint64_t v5 = v4;

  Swift::String v6 = (objc_class *)type metadata accessor for RCRecordingControlLayoutHelper();
  Swift::String v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC10VoiceMemos30RCRecordingControlLayoutHelper_diameter] = v5;
  v13.receiver = v7;
  v13.super_class = v6;
  [v0[v1] initWith];
  uint64_t v8 = OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_styleProvider;
  *(void *)&v0[v8] = [v2 sharedStyleProvider];
  *(void *)&v0[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_minimumWidth] = 0x4034000000000000;
  *(void *)&v0[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_defaultPadding] = 0x4014000000000000;
  double v9 = (uint64_t *)&v0[OBJC_IVAR____TtC10VoiceMemos12RCDoneButton_titleString];
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  static Locale.current.getter();
  uint64_t *v9 = String.init(localized:table:bundle:locale:comment:)();
  v9[1] = v12;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10016A904()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016A93C(uint64_t a1)
{
  return sub_100169614(a1);
}

uint64_t sub_10016A944()
{
  return swift_release();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_10016A970(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[RecorderAppDelegate(RCTesting) _selectFirstVoiceMemoInActiveRecordingsCollectionViewControllerWithCompletionBlock:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Failed to select first voice memo in the active collectionViewController", (uint8_t *)&v1, 0xCu);
}

void sub_10016A9F4()
{
  v1[0] = 136315394;
  sub_10004023C();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s -- AVAudioEngine inputNode threw exception - %@", (uint8_t *)v1, 0x16u);
}

void sub_10016AA74(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[VMRecordingEngine _recordTrimmedAudioBuffer:time:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%s -- could not allocate trimmed buffer", (uint8_t *)&v1, 0xCu);
}

void sub_10016AAF8()
{
  v2[0] = 136315650;
  sub_1000401F8();
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_debug_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "%s -- durationToSkip = %f, framesToSkip = %u", (uint8_t *)v2, 0x1Cu);
}

void sub_10016AB84(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[VMRecordingEngine _recordTrimmedAudioBuffer:time:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%s -- Player started outside the range of a recorded buffer.", (uint8_t *)&v1, 0xCu);
}

void sub_10016AC08()
{
  v1[0] = 136315394;
  sub_10004023C();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s -- conversionError = %@", (uint8_t *)v1, 0x16u);
}

void sub_10016AC88()
{
  sub_100040228();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- recording started at time:  %@", v2, v3, v4, v5, 2u);
}

void sub_10016AD08(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[VMRecordingEngine _writeBufferToStorage:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s -- Attempted to write audio without asset writer", (uint8_t *)&v1, 0xCu);
}

void sub_10016AD8C()
{
  sub_100040228();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- player started at time:  %@", v2, v3, v4, v5, 2u);
}

void sub_10016AE04()
{
  sub_1000401F8();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- session.outputLatency = %f seconds", v2, v3, v4, v5, 2u);
}

void sub_10016AE7C()
{
  sub_1000401F8();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- session.inputLatency = %f seconds", v2, v3, v4, v5, 2u);
}

void sub_10016AEF4()
{
  sub_1000401F8();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- voiceIsolationLatency = %f seconds", v2, v3, v4, v5, 2u);
}

void sub_10016AF6C(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[RCRecorderStyleProvider multitrackImageForLayerNumber:rounded:slash:circleFill:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s -- Unable to load multitrackImage: %@", (uint8_t *)&v2, 0x16u);
}

void sub_10016AFF8(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCShuttleBar setRecentlyDeleted:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Unexpected number of columns and rows in RCShuttleBar", (uint8_t *)&v1, 0xCu);
}

void sub_10016B07C(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCActivityWaveformProcessor processAudioBuffer:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s -- Processing buffer is too full", (uint8_t *)&v1, 0xCu);
}

void sub_10016B100()
{
  __assert_rtn("advanceWritePointer", "VMRingBuffer.h", 75, "mFill <= mCapacity");
}

void sub_10016B12C()
{
  __assert_rtn("advanceReadPointer", "VMRingBuffer.h", 84, "mFill >= 0");
}

void sub_10016B158()
{
  sub_10004023C();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- unexpected supplementary element kind - %@", v2, v3, v4, v5, 2u);
}

void sub_10016B1CC()
{
  sub_10004023C();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- Unexpected indexPath %@", v2, v3, v4, v5, 2u);
}

void sub_10016B240()
{
  sub_10004023C();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- Unexpected indexPath %@", v2, v3, v4, v5, 2u);
}

void sub_10016B2B4()
{
  sub_10004023C();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- Unexpected indexPath %@", v2, v3, v4, v5, 2u);
}

void sub_10016B328(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "+[RCRecordingCellDisplayModel recordingDisplayModelWithTitle:creationDate:duration:UUID:recentlyDeleted:represent"
       "sDownloadingFile:isFavorite:isEnhanced:hasTranscription:hasMultipleTracks:wasManuallyRenamed:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%s -- RCRecordingDisplayModel created with a nil UUID", (uint8_t *)&v1, 0xCu);
}

void sub_10016B3AC(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[VMAudioOutputRenderer _prepareAudioUnits:maxFramesPerRender:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "%s -- Failed to create time stretch audio unit with error - %@", (uint8_t *)&v2, 0x16u);
}

void sub_10016B438(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCWelcomeViewController overdubContentLabel]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s -- <+> not found in string, cannot replace with symbol", (uint8_t *)&v1, 0xCu);
}

void sub_10016B4BC(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCWaveformColorCalculator resolvedColorWithLiveWaveform:selected:muted:trimMode:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s -- ERROR: RCWaveformColorOptions as index is out of bounds for _resolvedColors", (uint8_t *)&v1, 0xCu);
}

void sub_10016B540(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCWaveformRenderer _renderTimeRangeOfSegments:withDuration:needsWaveformCalculation:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- requestedPillsToRender.length is 0. There will be nothing to render.", (uint8_t *)&v1, 0xCu);
}

void sub_10016B5C4(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCWaveformRenderer _renderTimeRangeOfSegments:withDuration:needsWaveformCalculation:]_block_invoke";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Failed to create waveform slices. Will re-attempt on the next try.", (uint8_t *)&v1, 0xCu);
}

void sub_10016B648()
{
  __assert_rtn("allocatePageAlignedMirroredMemory", "VMMemoryHelpers.m", 20, "size == round_page(size)");
}

void sub_10016B674(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016B6EC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016B764()
{
  sub_10004023C();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- WARNING: no recording matching URI: '%@'", v2, v3, v4, v5, 2u);
}

void sub_10016B7D8()
{
  sub_10004023C();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- WARNING: received invalid Spotlight URI: '%@'", v2, v3, v4, v5, 2u);
}

void sub_10016B84C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016B8C4()
{
  sub_10004023C();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- unknown activity type:  %@", v2, v3, v4, v5, 2u);
}

void sub_10016B938()
{
  sub_10004023C();
  sub_10004020C((void *)&_mh_execute_header, v0, v1, "%s -- WARNING: no recording matching URI: '%@'", v2, v3, v4, v5, 2u);
}

void sub_10016B9AC()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- error = %@", v2, v3, v4, v5, 2u);
}

void sub_10016BA20(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 recordingID];
  v4[0] = 136315394;
  sub_10004023C();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s -- Recording already started for recordingID = %@", (uint8_t *)v4, 0x16u);
}

void sub_10016BAC0()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- removeError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016BB34()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- removeError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016BBA8(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  int v4 = 136315650;
  uint64_t v5 = "-[RCStoreChangeMerger handleChange:]_block_invoke";
  __int16 v6 = 2112;
  uint64_t v7 = v3;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s -- ERROR: failed to load transaction after current token %@ (%@)", (uint8_t *)&v4, 0x20u);
}

void sub_10016BC48(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[RCStoreChangeMerger handleChange:]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s -- ERROR:  transaction is malformed:  %@", (uint8_t *)&v2, 0x16u);
}

void sub_10016BCD4(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 48);
  int v3 = 136315394;
  __int16 v4 = "-[RCRecordingsCollectionViewControllerDataCoordinator _performSearch]_block_invoke_2";
  __int16 v5 = 2112;
  uint64_t v6 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s -- Failed to query transcripts via spotlight, error = %@", (uint8_t *)&v3, 0x16u);
}

void sub_10016BD64(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[RCTimelineGenerator timelinesForDateInterval:displayedRecordingTime:timelineIdentifier:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%s -- Unable to generate timelines for a nil recording start time.", (uint8_t *)&v1, 0xCu);
}

void sub_10016BDE8(uint64_t a1, void *a2, NSObject *a3)
{
  __int16 v5 = [a2 endDate];
  int v6 = 136315650;
  uint64_t v7 = "-[RCTimelineGenerator _dateEntriesForRecordingStartTime:lastRecordingTime:elapsedTimeAtRecordingStart:recordingDu"
       "rationAtRecordingStart:timelineDateInterval:]";
  __int16 v8 = 2112;
  uint64_t v9 = a1;
  __int16 v10 = 2112;
  uint64_t v11 = v5;
  _os_log_fault_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_FAULT, "%s -- Unable to generate timeline date entries. The recordingStartTime %@ must not be later than the timelineDateInterval.endDate %@", (uint8_t *)&v6, 0x20u);
}

void sub_10016BEAC(void *a1)
{
  int v1 = [a1 endDate];
  uint64_t v2 = [v1 bls_shortLoggingString];
  sub_10004023C();
  sub_100074180((void *)&_mh_execute_header, v3, v4, "%s -- timeline end date = %@", v5, v6, v7, v8, 2u);
}

void sub_10016BF54(void *a1)
{
  int v1 = [a1 startDate];
  uint64_t v2 = [v1 bls_shortLoggingString];
  sub_10004023C();
  sub_100074180((void *)&_mh_execute_header, v3, v4, "%s -- timeline start date = %@", v5, v6, v7, v8, 2u);
}

void sub_10016BFFC()
{
  os_log_t v0 = RCDebugStringForTimeInterval();
  sub_10004023C();
  sub_100074180((void *)&_mh_execute_header, v1, v2, "%s -- recording elapsed time = %@", v3, v4, v5, v6, 2u);
}

void sub_10016C08C(void *a1)
{
  uint64_t v1 = [a1 bls_shortLoggingString];
  sub_10004023C();
  sub_100074180((void *)&_mh_execute_header, v2, v3, "%s -- recording start time = %@", v4, v5, v6, v7, 2u);
}

void sub_10016C11C(char a1, NSObject *a2)
{
  if (a1) {
    CFStringRef v2 = &stru_100228BC8;
  }
  else {
    CFStringRef v2 = @"do not ";
  }
  int v3 = 136315394;
  uint64_t v4 = "-[RCRecordingsCollectionViewController _logWhetherVisibleCellsHaveIntegrity]";
  __int16 v5 = 2112;
  CFStringRef v6 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%s -- Change type: Visible cells %@have integrity", (uint8_t *)&v3, 0x16u);
}

void sub_10016C1C0()
{
  int v2 = 136315650;
  sub_10007AF0C();
  sub_10007AF28((void *)&_mh_execute_header, v0, v1, "%s -- Integrity lost with visible UUIDS:\n%@\ndata UUIDs:\n%@\n", v2);
}

void sub_10016C234(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCRecordingsCollectionViewController selectItemWithUUID:animated:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Attempting to select a UUID with an invalid indexPath", (uint8_t *)&v1, 0xCu);
}

void sub_10016C2B8()
{
  int v2 = 136315650;
  sub_10007AF0C();
  sub_10007AF28((void *)&_mh_execute_header, v0, v1, "%s -- loadFileRepresentationForTypeIdentifier failed for url %@ - error: '%@'", v2);
}

void sub_10016C32C()
{
  v1[0] = 136315394;
  sub_10004023C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%s -- WARNING: no recording matching URI: '%@'", (uint8_t *)v1, 0x16u);
}

void sub_10016C3AC(void *a1, uint64_t a2, NSObject *a3)
{
  __int16 v5 = [a1 cellWhoseTitleIsBeingEdited];
  int v6 = 136315650;
  uint64_t v7 = "-[RCRecordingsCollectionViewController didEndEditingTitle:]";
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  __int16 v10 = 2112;
  uint64_t v11 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "%s -- prior cell being edited: %@ is the one whose editing is ending: %@", (uint8_t *)&v6, 0x20u);
}

void sub_10016C46C()
{
  v1[0] = 136315394;
  sub_10004023C();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s -- registerError = %@", (uint8_t *)v1, 0x16u);
}

void sub_10016C4EC()
{
  v1[0] = 136315394;
  sub_10004023C();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s -- recordingsCollectionViewController thinks cell %@ is being edited, but it is not", (uint8_t *)v1, 0x16u);
}

void sub_10016C56C(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCDisplayLinkManager _pauseDisplayLink]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Pausing display link", (uint8_t *)&v1, 0xCu);
}

void sub_10016C5F0(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCDisplayLinkManager _startDisplayLinkIfNeeded]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Starting display link", (uint8_t *)&v1, 0xCu);
}

void sub_10016C674(os_log_t log, float a2)
{
  int v2 = 136315394;
  int v3 = "-[RCDisplayLinkManager setPreferredFrameRateRange:]";
  __int16 v4 = 2048;
  double v5 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- preferredFrameRate = %f", (uint8_t *)&v2, 0x16u);
}

void sub_10016C708(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016C780(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016C7F8(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCPlatterWaveformView removeSliceWithType:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Unexpected slice type", (uint8_t *)&v1, 0xCu);
}

void sub_10016C87C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016C8F4(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCRecordingViewController _trackIndexForCurrentTrackState]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Unexpected multi-track state", (uint8_t *)&v1, 0xCu);
}

void sub_10016C978(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCPlatterSceneDelegate scene:willConnectToSession:options:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%s -- No recording in progress", (uint8_t *)&v1, 0xCu);
}

void sub_10016C9FC(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  int v3 = "-[RCRecordingControl _commonInit]";
  __int16 v4 = 2048;
  uint64_t v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%s -- New recording control: %p:", (uint8_t *)&v2, 0x16u);
}

void sub_10016CA88(void *a1, NSObject *a2)
{
  int v3 = [a1 localizedDescription];
  int v4 = 136315394;
  uint64_t v5 = "-[RCRecordingsModelInteractor duplicateRecordingWithUUID:]";
  __int16 v6 = 2112;
  uint64_t v7 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s -- Error duplicating file: %@", (uint8_t *)&v4, 0x16u);
}

void sub_10016CB34(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  int v3 = "-[RCRecordingsModelInteractor builtInFolderOfType:]";
  __int16 v4 = 2048;
  uint64_t v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%s -- Unexpected built-in folder type %lu", (uint8_t *)&v2, 0x16u);
}

void sub_10016CBC0(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCRecordingsModelInteractor builtInFolderOfType:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Requesting a built-in folder of type 'RCFolderTypeUserDefined' is invalid.", (uint8_t *)&v1, 0xCu);
}

void sub_10016CC44()
{
  v1[0] = 136315394;
  sub_10004023C();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s -- ERROR: fetching places of interest: %@", (uint8_t *)v1, 0x16u);
}

void sub_10016CCC4()
{
  v1[0] = 136315394;
  sub_10004023C();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s -- %@", (uint8_t *)v1, 0x16u);
}

void sub_10016CD44()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- vmPlayerError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016CDB8()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- error setting PrefersNoInterruptionsFromSystemAlerts property on AVAudioSession = %@", v2, v3, v4, v5, 2u);
}

void sub_10016CE2C()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- error setting EligibleForBTSmartRoutingConsideration property on AVAudioSession = %@", v2, v3, v4, v5, 2u);
}

void sub_10016CEA0()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- error setting preferred input orientation property on AVAudioSession = %@", v2, v3, v4, v5, 2u);
}

void sub_10016CF14(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v5 = +[NSNumber numberWithUnsignedInteger:a1];
  __int16 v6 = [a2 currentRoute];
  int v7 = 136315650;
  __int16 v8 = "-[VMAudioService _handleAudioSessionNotification:]";
  __int16 v9 = 2112;
  __int16 v10 = v5;
  __int16 v11 = 2112;
  uint64_t v12 = v6;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "%s -- reason = %@, currentRoute = %@", (uint8_t *)&v7, 0x20u);
}

void sub_10016CFF4()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- stopError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D068()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- startError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D0DC()
{
  v1[0] = 136315394;
  sub_10004023C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%s -- notification received = %@", (uint8_t *)v1, 0x16u);
}

void sub_10016D15C()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- Recording unique ID not found = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D1D0()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- accessError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D244()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- startError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D2B8()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- accessError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D32C()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- closeError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D3A0()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- Failed to update file with transcription data, error = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D414()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- Finalization of transcription failed, error = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D488()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- saveError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D4FC()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- writeFromBuffer failed, error = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D570()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- startWriting failed, error = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D5E4()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- Failed to create asset backup - error = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D658()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- accessError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D6CC()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- Failed to create asset backup - error = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D740()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- accessError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D7B4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016D82C()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- Failed to save as new - error = %@", v2, v3, v4, v5, 2u);
}

void sub_10016D8A0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10007DC68((void *)&_mh_execute_header, a1, a3, "%s -- Fetch recording returned nil", a5, a6, a7, a8, 2u);
}

void sub_10016D918(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10007DC68((void *)&_mh_execute_header, a1, a3, "%s -- Fetch recording returned nil", a5, a6, a7, a8, 2u);
}

void sub_10016D990(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016DA08()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- Failed to move composition back - error = %@", v2, v3, v4, v5, 2u);
}

void sub_10016DA7C()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- moveError = %@", v2, v3, v4, v5, 2u);
}

void sub_10016DAF0(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[RCRecordingView _displayOptionForView:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Unexpected view passed to _displayOptionForView", (uint8_t *)&v1, 0xCu);
}

void sub_10016DB74(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[RCRecordingView _updateRecordButtonStateForRecordingViewState:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Unexpected recording view state", (uint8_t *)&v1, 0xCu);
}

void sub_10016DBF8(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "+[RCSavedRecordingsModel(ImportAdditions) importFileWithURL:shouldUseMetadataTitle:completionHandler:]_block_invoke_2";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s -- removeError = %@", (uint8_t *)&v2, 0x16u);
}

void sub_10016DC84(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[RCFoldersFetchedResultsController userFolders]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s -- ERROR: FRC Unable to perform fetch (%@.)", (uint8_t *)&v2, 0x16u);
}

void sub_10016DD10(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[RCFoldersDiffableDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%s -- unexpected supplementary element kind - %@", (uint8_t *)&v2, 0x16u);
}

void sub_10016DD9C(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[RCFolderBrowsingCollectionViewController goToBuiltInFolderOfType:animated:completion:]";
  __int16 v4 = 2048;
  uint64_t v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%s -- Unable to navigate to built-in folder of type %ld", (uint8_t *)&v2, 0x16u);
}

void sub_10016DE28(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "+[RCRecordingDisplayModel recordingDisplayModelWithTitle:creationDate:duration:UUID:recentlyDeleted:representsDow"
       "nloadingFile:isFavorite:isEnhanced:hasTranscription:wasManuallyRenamed:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%s -- RCRecordingDisplayModel created with a nil UUID", (uint8_t *)&v1, 0xCu);
}

void sub_10016DEAC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016DF24(os_log_t log, double a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[RCMainViewController recordingView:didUpdateViewHeight:]";
  __int16 v4 = 2048;
  double v5 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Unexpected card sheet presentation state. Detent transition progress: %f.", (uint8_t *)&v2, 0x16u);
}

void sub_10016DFB4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10006B1AC((void *)&_mh_execute_header, a1, a3, "%s -- UUID == nil, but action requires UUID", a5, a6, a7, a8, 2u);
}

void sub_10016E02C(uint64_t a1, void *a2, NSObject *a3)
{
  double v5 = [a2 playbackSettings];
  __int16 v6 = [v5 uuid];
  int v7 = 136315650;
  __int16 v8 = "-[RCMainViewController toggleRemoveSilenceForUUID:]";
  __int16 v9 = 2112;
  uint64_t v10 = a1;
  __int16 v11 = 2112;
  uint64_t v12 = v6;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "%s -- Unable to toggle Remove Silence. UUID being displayed %@ does not match the UUID in the playbackSettings %@", (uint8_t *)&v7, 0x20u);
}

void sub_10016E100(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016E178(void *a1, NSObject *a2)
{
  int v3 = 136315394;
  __int16 v4 = "-[RCApplicationModel _recordingsControllerWithFolder:]";
  __int16 v5 = 2048;
  id v6 = [a1 folderType];
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s -- Invalid folder type %li", (uint8_t *)&v3, 0x16u);
}

void sub_10016E218(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  int v3 = "-[RCApplicationModel moveFolder:toIndexPath:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s -- existing index not found: %@", (uint8_t *)&v2, 0x16u);
}

void sub_10016E2A4(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCApplicationModel insertRecordingWithAudioFile:duration:date:customTitleBase:uniqueID:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- No locations of interest discovered near current location.", (uint8_t *)&v1, 0xCu);
}

void sub_10016E328(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[RCSplitViewController setViewController:forColumn:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Unexpected view controller type for UISplitViewControllerColumnSupplementary", (uint8_t *)&v1, 0xCu);
}

void sub_10016E3AC(void *a1)
{
  int v1 = [a1 recordingError];
  sub_10004023C();
  sub_1000C7D58((void *)&_mh_execute_header, v2, v3, "%s -- pauseError = %@", v4, v5, v6, v7, 2u);
}

void sub_10016E43C(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[RCMainControllerHelper _beginOrResumeCaptureSessionWithReplace:trackIndex:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- Cannot begin replace / resume yet - unable to acquire access token.", (uint8_t *)&v1, 0xCu);
}

void sub_10016E4C0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016E538(void *a1)
{
  int v1 = [a1 recordingError];
  sub_10004023C();
  sub_1000C7D58((void *)&_mh_execute_header, v2, v3, "%s -- recordingError = %@", v4, v5, v6, v7, 2u);
}

void sub_10016E5C8()
{
  v2[0] = 136315394;
  sub_10004023C();
  sub_1000C7D78((void *)&_mh_execute_header, v0, v1, "%s -- No RCCloudRecording exists for UUID - %@", (uint8_t *)v2);
}

void sub_10016E640()
{
  v2[0] = 136315394;
  sub_10004023C();
  sub_1000C7D78((void *)&_mh_execute_header, v0, v1, "%s -- failed to start recording error = %@", (uint8_t *)v2);
}

void sub_10016E6B8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016E730(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 uuidOfPlayingRecording];
  sub_1000C7D90();
  sub_1000C7DAC((void *)&_mh_execute_header, v3, v4, "%s -- cannot pause playback for UUID %@ that does not match the one currently in use %@", v5, v6, v7, v8, 2u);
}

void sub_10016E7D0(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 uuidOfPlayingRecording];
  sub_1000C7D90();
  sub_1000C7DAC((void *)&_mh_execute_header, v3, v4, "%s -- cannot stop playback for UUID %@ that does not match the one currently in use %@", v5, v6, v7, v8, 2u);
}

void sub_10016E870()
{
  v2[0] = 136315394;
  sub_10004023C();
  sub_1000C7D78((void *)&_mh_execute_header, v0, v1, "%s -- unable to preload recording UUID = %@", (uint8_t *)v2);
}

void sub_10016E8E8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016E960(void *a1)
{
  uint64_t v1 = [a1 recordingError];
  sub_10004023C();
  sub_1000C7D58((void *)&_mh_execute_header, v2, v3, "%s -- revertError = %@", v4, v5, v6, v7, 2u);
}

void sub_10016E9F0()
{
  v2[0] = 136315394;
  sub_10004023C();
  sub_1000C7D78((void *)&_mh_execute_header, v0, v1, "%s -- trimError = %@", (uint8_t *)v2);
}

void sub_10016EA68()
{
  v2[0] = 136315394;
  sub_10004023C();
  sub_1000C7D78((void *)&_mh_execute_header, v0, v1, "%s -- cutError = %@", (uint8_t *)v2);
}

void sub_10016EAE0()
{
  int v2 = 136315650;
  sub_10007AF0C();
  sub_10007AF28((void *)&_mh_execute_header, v0, v1, "%s -- cannot get silence removed for UUID %@ that does not match audio player UUID %@", v2);
}

void sub_10016EB54()
{
  int v2 = 136315650;
  sub_10007AF0C();
  sub_10007AF28((void *)&_mh_execute_header, v0, v1, "%s -- cannot get playback speed for UUID %@ that does not match audio player UUID %@", v2);
}

void sub_10016EBC8()
{
  int v2 = 136315650;
  sub_10007AF0C();
  sub_10007AF28((void *)&_mh_execute_header, v0, v1, "%s -- cannot get layer mix for UUID %@ that does not match audio player UUID %@", v2);
}

void sub_10016EC3C()
{
  int v2 = 136315650;
  sub_10007AF0C();
  sub_10007AF28((void *)&_mh_execute_header, v0, v1, "%s -- cannot set remove silence for UUID %@ that does not match audio player UUID %@", v2);
}

void sub_10016ECB0()
{
  int v2 = 136315650;
  sub_10007AF0C();
  sub_10007AF28((void *)&_mh_execute_header, v0, v1, "%s -- cannot set playback speed for UUID %@ that does not match audio player UUID %@", v2);
}

void sub_10016ED24()
{
  int v2 = 136315650;
  sub_10007AF0C();
  sub_10007AF28((void *)&_mh_execute_header, v0, v1, "%s -- cannot set layer mix for UUID %@ that does not match audio player UUID %@", v2);
}

void sub_10016ED98()
{
  int v2 = 136315650;
  sub_10007AF0C();
  sub_10007AF28((void *)&_mh_execute_header, v0, v1, "%s -- cannot set looping for UUID %@ that does not match audio player UUID %@", v2);
}

void sub_10016EE0C(void *a1)
{
  os_log_t v1 = [a1 recordingError];
  sub_10004023C();
  sub_1000C7D58((void *)&_mh_execute_header, v2, v3, "%s -- undoError = %@", v4, v5, v6, v7, 2u);
}

void sub_10016EE9C(void *a1)
{
  os_log_t v1 = [a1 recordingError];
  sub_10004023C();
  sub_1000C7D58((void *)&_mh_execute_header, v2, v3, "%s -- redoError = %@", v4, v5, v6, v7, 2u);
}

void sub_10016EF2C(void *a1)
{
  os_log_t v1 = [a1 uuid];
  sub_10004023C();
  sub_100074180((void *)&_mh_execute_header, v2, v3, "%s -- addObserver %@", v4, v5, v6, v7, 2u);
}

void sub_10016EFBC(void *a1)
{
  os_log_t v1 = [a1 uuid];
  sub_10004023C();
  sub_100074180((void *)&_mh_execute_header, v2, v3, "%s -- removeObserver %@", v4, v5, v6, v7, 2u);
}

void sub_10016F04C(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[RCMainControllerHelper setAllowedTimeRange:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s -- use actual time ranges for this please.", (uint8_t *)&v1, 0xCu);
}

void sub_10016F0D0(NSObject *a1, uint64_t a2, uint64_t a3)
{
  int v3 = 136315394;
  uint64_t v4 = "-[RCMainControllerHelper setRecordingError:]";
  __int16 v5 = 2112;
  uint64_t v6 = 0;
  sub_1000C7D78((void *)&_mh_execute_header, a1, a3, "%s -- recordingError = %@", (uint8_t *)&v3);
}

void sub_10016F158(uint8_t *buf, void *a2, os_log_t log)
{
  *(_DWORD *)buf = 136315138;
  *a2 = "-[RCShareableComposition _cleanUpManagedTemporaryDirectories]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s -- Failed to clean up shared file URL", buf, 0xCu);
}

void sub_10016F1A8(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 composition];
  __int16 v5 = [v4 decomposedFragments];
  uint64_t v6 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v5 count]);
  int v7 = 136315650;
  uint64_t v8 = "-[RCShareableComposition activityViewController:itemForActivityType:]";
  __int16 v9 = 2112;
  uint64_t v10 = a1;
  __int16 v11 = 2112;
  uint64_t v12 = v6;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "%s -- composition %@ is not shareable (has %@ decomposed fragments yet to be composed)", (uint8_t *)&v7, 0x20u);
}

void sub_10016F2A4()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- ERROR: Unable to fetch recordings (%@.)", v2, v3, v4, v5, 2u);
}

void sub_10016F318()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- ERROR: FRC Unable to perform fetch (%@.)", v2, v3, v4, v5, 2u);
}

void sub_10016F38C()
{
  sub_10004023C();
  sub_10006CC78((void *)&_mh_execute_header, v0, v1, "%s -- ERROR: FRC Unable to perform fetch (%@.)", v2, v3, v4, v5, 2u);
}

uint64_t static _AssistantIntentsProvider.uniqueEntities.getter()
{
  return static _AssistantIntentsProvider.uniqueEntities.getter();
}

uint64_t AppDependency.wrappedValue.getter()
{
  return AppDependency.wrappedValue.getter();
}

uint64_t AppDependency.__allocating_init(key:manager:)()
{
  return AppDependency.__allocating_init(key:manager:)();
}

uint64_t type metadata accessor for AppIntentError()
{
  return type metadata accessor for AppIntentError();
}

uint64_t AppShortcutPhrase.init(stringLiteral:)()
{
  return AppShortcutPhrase.init(stringLiteral:)();
}

uint64_t AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)()
{
  return AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
}

Swift::Void __swiftcall AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t AppShortcutPhrase.init(stringInterpolation:)()
{
  return AppShortcutPhrase.init(stringInterpolation:)();
}

uint64_t static AppShortcutsBuilder.buildBlock(_:)()
{
  return static AppShortcutsBuilder.buildBlock(_:)();
}

uint64_t static AppShortcutsBuilder.buildExpression(_:)()
{
  return static AppShortcutsBuilder.buildExpression(_:)();
}

uint64_t AppDependencyManager.add<A>(key:dependency:)()
{
  return AppDependencyManager.add<A>(key:dependency:)();
}

uint64_t static AppDependencyManager.shared.getter()
{
  return static AppDependencyManager.shared.getter();
}

uint64_t type metadata accessor for AppDependencyManager()
{
  return type metadata accessor for AppDependencyManager();
}

uint64_t type metadata accessor for AppShortcutPhraseToken()
{
  return type metadata accessor for AppShortcutPhraseToken();
}

uint64_t static AppIntent.openAppWhenRun.getter()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t static AppIntent.description.getter()
{
  return static AppIntent.description.getter();
}

uint64_t AppIntent.systemContext.getter()
{
  return AppIntent.systemContext.getter();
}

uint64_t static AppIntent.isDiscoverable.getter()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t static AppIntent.parameterSummary.getter()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t static AppIntent.authenticationPolicy.getter()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t static AppManager.sceneConfigurator.setter()
{
  return static AppManager.sceneConfigurator.setter();
}

uint64_t type metadata accessor for AppManager()
{
  return type metadata accessor for AppManager();
}

uint64_t AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)()
{
  return AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)();
}

uint64_t type metadata accessor for AppShortcut()
{
  return type metadata accessor for AppShortcut();
}

uint64_t IntentFile.fileURL.getter()
{
  return IntentFile.fileURL.getter();
}

uint64_t type metadata accessor for IntentFile()
{
  return type metadata accessor for IntentFile();
}

uint64_t IntentDialog.init(stringLiteral:)()
{
  return IntentDialog.init(stringLiteral:)();
}

uint64_t IntentDialog.init(stringInterpolation:)()
{
  return IntentDialog.init(stringInterpolation:)();
}

uint64_t type metadata accessor for IntentDialog()
{
  return type metadata accessor for IntentDialog();
}

uint64_t IntentDialog.init(_:)()
{
  return IntentDialog.init(_:)();
}

uint64_t static IntentResult.result<A>(value:dialog:)()
{
  return static IntentResult.result<A>(value:dialog:)();
}

uint64_t static IntentResult.result<A>(value:)()
{
  return static IntentResult.result<A>(value:)();
}

uint64_t static IntentResult.result<>()()
{
  return static IntentResult.result<>()();
}

uint64_t IndexedEntity.attributeSet.getter()
{
  return IndexedEntity.attributeSet.getter();
}

uint64_t EntityProperty.wrappedValue.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t EntityProperty.wrappedValue.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t EntityProperty<>.init(title:)()
{
  return EntityProperty<>.init(title:)();
}

{
  return EntityProperty<>.init(title:)();
}

{
  return EntityProperty<>.init(title:)();
}

{
  return EntityProperty<>.init(title:)();
}

uint64_t ChangeOperation.rawValue.getter()
{
  return ChangeOperation.rawValue.getter();
}

uint64_t type metadata accessor for ChangeOperation()
{
  return type metadata accessor for ChangeOperation();
}

uint64_t IntentParameter.wrappedValue.modify()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t IntentParameter.wrappedValue.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t IntentParameter.wrappedValue.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t IntentParameter.projectedValue.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t IntentParameter.needsValueError(_:)()
{
  return IntentParameter.needsValueError(_:)();
}

uint64_t IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)()
{
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
}

uint64_t IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t _AssistantIntent.IntentProjection.subscript.getter()
{
  return _AssistantIntent.IntentProjection.subscript.getter();
}

uint64_t type metadata accessor for _AssistantIntent.PhraseToken()
{
  return type metadata accessor for _AssistantIntent.PhraseToken();
}

uint64_t static _AssistantIntent.PhraseBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.PhraseBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
}

uint64_t static _AssistantIntent.StringValueBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.StringValueBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
}

uint64_t static _AssistantIntent.ParameterValueBuilder.buildBlock()()
{
  return static _AssistantIntent.ParameterValueBuilder.buildBlock()();
}

uint64_t static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
}

uint64_t _AssistantIntent.Value.init<A>(for:builder:)()
{
  return _AssistantIntent.Value.init<A>(for:builder:)();
}

uint64_t type metadata accessor for _AssistantIntent.Value()
{
  return type metadata accessor for _AssistantIntent.Value();
}

uint64_t _AssistantIntent.Phrase.init(stringLiteral:)()
{
  return _AssistantIntent.Phrase.init(stringLiteral:)();
}

uint64_t _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)()
{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

Swift::Void __swiftcall _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t _AssistantIntent.Phrase.init(stringInterpolation:)()
{
  return _AssistantIntent.Phrase.init(stringInterpolation:)();
}

uint64_t type metadata accessor for _AssistantIntent()
{
  return type metadata accessor for _AssistantIntent();
}

uint64_t _AssistantIntent.init<A>(_:phrases:parameterValues:)()
{
  return _AssistantIntent.init<A>(_:phrases:parameterValues:)();
}

uint64_t type metadata accessor for ShortcutTileColor()
{
  return type metadata accessor for ShortcutTileColor();
}

uint64_t IntentSystemContext.preciseTimestamp.getter()
{
  return IntentSystemContext.preciseTimestamp.getter();
}

uint64_t type metadata accessor for IntentSystemContext.Source()
{
  return type metadata accessor for IntentSystemContext.Source();
}

uint64_t IntentSystemContext.source.getter()
{
  return IntentSystemContext.source.getter();
}

uint64_t type metadata accessor for IntentSystemContext()
{
  return type metadata accessor for IntentSystemContext();
}

uint64_t DisplayRepresentation.init(stringLiteral:)()
{
  return DisplayRepresentation.init(stringLiteral:)();
}

uint64_t DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)()
{
  return DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
}

uint64_t type metadata accessor for DisplayRepresentation.Image()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t DisplayRepresentation.init(title:subtitle:image:)()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t type metadata accessor for DisplayRepresentation()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t static ConfirmationActionName.continue.getter()
{
  return static ConfirmationActionName.continue.getter();
}

uint64_t type metadata accessor for ConfirmationActionName()
{
  return type metadata accessor for ConfirmationActionName();
}

uint64_t type metadata accessor for ConfirmationConditions()
{
  return type metadata accessor for ConfirmationConditions();
}

uint64_t static DynamicOptionsProvider.useForParameterResolution.getter()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t IntentParameterSummary.init(_:table:)()
{
  return IntentParameterSummary.init(_:table:)();
}

uint64_t ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)()
{
  return ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
}

Swift::Void __swiftcall ParameterSummaryString.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t ParameterSummaryString.init(stringInterpolation:)()
{
  return ParameterSummaryString.init(stringInterpolation:)();
}

uint64_t type metadata accessor for InputConnectionBehavior()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t static ParameterSummaryBuilder.buildBlock<A>(_:)()
{
  return static ParameterSummaryBuilder.buildBlock<A>(_:)();
}

uint64_t static ParameterSummaryBuilder.buildExpression<A>(_:)()
{
  return static ParameterSummaryBuilder.buildExpression<A>(_:)();
}

uint64_t static PersistentlyIdentifiable.persistentIdentifier.getter()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t TypeDisplayRepresentation.init(name:numericFormat:)()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t type metadata accessor for TypeDisplayRepresentation()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t type metadata accessor for IntentAuthenticationPolicy()
{
  return type metadata accessor for IntentAuthenticationPolicy();
}

uint64_t static ParameterSummaryCaseBuilder.buildBlock<A, B, C>(_:_:_:)()
{
  return static ParameterSummaryCaseBuilder.buildBlock<A, B, C>(_:_:_:)();
}

uint64_t static ParameterSummaryCaseBuilder.buildExpression<A>(_:)()
{
  return static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
}

uint64_t ParameterSummaryCaseCondition.init(_:_:)()
{
  return ParameterSummaryCaseCondition.init(_:_:)();
}

uint64_t ParameterSummaryDefaultCaseCondition.init(_:)()
{
  return ParameterSummaryDefaultCaseCondition.init(_:)();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

uint64_t Notification.object.getter()
{
  return Notification.object.getter();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t static AttributeScope.decodingConfiguration.getter()
{
  return static AttributeScope.decodingConfiguration.getter();
}

uint64_t static AttributeScope.encodingConfiguration.getter()
{
  return static AttributeScope.encodingConfiguration.getter();
}

uint64_t LocalizedError.helpAnchor.getter()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t LocalizedError.failureReason.getter()
{
  return LocalizedError.failureReason.getter();
}

uint64_t LocalizedError.recoverySuggestion.getter()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t AttributeScopes.AccessibilityAttributes.accessibilitySpeechPhoneticNotation.getter()
{
  return AttributeScopes.AccessibilityAttributes.accessibilitySpeechPhoneticNotation.getter();
}

uint64_t AttributedString.characters.getter()
{
  return AttributedString.characters.getter();
}

uint64_t AttributedString.startIndex.getter()
{
  return AttributedString.startIndex.getter();
}

uint64_t type metadata accessor for AttributedString.CharacterView()
{
  return type metadata accessor for AttributedString.CharacterView();
}

uint64_t AttributedString.subscript.setter()
{
  return AttributedString.subscript.setter();
}

uint64_t AttributedString.init(stringLiteral:)()
{
  return AttributedString.init(stringLiteral:)();
}

uint64_t AttributedString.removeSubrange<A>(_:)()
{
  return AttributedString.removeSubrange<A>(_:)();
}

uint64_t static AttributedString.+ infix(_:_:)()
{
  return static AttributedString.+ infix(_:_:)();
}

uint64_t static AttributedString.+= infix(_:_:)()
{
  return static AttributedString.+= infix(_:_:)();
}

uint64_t AttributedString.Runs.AttributesSlice1.makeIterator()()
{
  return AttributedString.Runs.AttributesSlice1.makeIterator()();
}

uint64_t AttributedString.Runs.AttributesSlice1.Iterator.next()()
{
  return AttributedString.Runs.AttributesSlice1.Iterator.next()();
}

uint64_t type metadata accessor for AttributedString.Runs.Index()
{
  return type metadata accessor for AttributedString.Runs.Index();
}

uint64_t type metadata accessor for AttributedString.Runs()
{
  return type metadata accessor for AttributedString.Runs();
}

uint64_t AttributedString.Runs.subscript.getter()
{
  return AttributedString.Runs.subscript.getter();
}

{
  return AttributedString.Runs.subscript.getter();
}

uint64_t AttributedString.runs.getter()
{
  return AttributedString.runs.getter();
}

uint64_t static AttributedString.Index.== infix(_:_:)()
{
  return static AttributedString.Index.== infix(_:_:)();
}

uint64_t type metadata accessor for AttributedString.Index()
{
  return type metadata accessor for AttributedString.Index();
}

uint64_t AttributedString.append<A>(_:)()
{
  return AttributedString.append<A>(_:)();
}

uint64_t AttributedString.insert<A>(_:at:)()
{
  return AttributedString.insert<A>(_:at:)();
}

uint64_t AttributedString.endIndex.getter()
{
  return AttributedString.endIndex.getter();
}

uint64_t AttributedString.init()()
{
  return AttributedString.init()();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

uint64_t AttributedString.init(_:attributes:)()
{
  return AttributedString.init(_:attributes:)();
}

uint64_t AttributedString.subscript.modify()
{
  return AttributedString.subscript.modify();
}

uint64_t AttributedString.subscript.getter()
{
  return AttributedString.subscript.getter();
}

uint64_t AttributedString.init(_:)()
{
  return AttributedString.init(_:)();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t AttributeContainer.init()()
{
  return AttributeContainer.init()();
}

uint64_t type metadata accessor for AttributeContainer()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t AttributeContainer.init(_:)()
{
  return AttributeContainer.init(_:)();
}

uint64_t static AttributedStringKey.runBoundaries.getter()
{
  return static AttributedStringKey.runBoundaries.getter();
}

uint64_t static AttributedStringKey.inheritedByAddedText.getter()
{
  return static AttributedStringKey.inheritedByAddedText.getter();
}

uint64_t static AttributedStringKey.invalidationConditions.getter()
{
  return static AttributedStringKey.invalidationConditions.getter();
}

uint64_t AttributedSubstring.characters.getter()
{
  return AttributedSubstring.characters.getter();
}

uint64_t AttributedSubstring.subscript.setter()
{
  return AttributedSubstring.subscript.setter();
}

{
  return AttributedSubstring.subscript.setter();
}

uint64_t AttributedSubstring.init()()
{
  return AttributedSubstring.init()();
}

uint64_t type metadata accessor for AttributedSubstring()
{
  return type metadata accessor for AttributedSubstring();
}

uint64_t CodableConfiguration.wrappedValue.getter()
{
  return CodableConfiguration.wrappedValue.getter();
}

uint64_t CodableConfiguration<>.init(wrappedValue:from:)()
{
  return CodableConfiguration<>.init(wrappedValue:from:)();
}

uint64_t type metadata accessor for CodableConfiguration()
{
  return type metadata accessor for CodableConfiguration();
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return AttributeDynamicLookup.subscript.getter();
}

{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t LocalizedStringResource.init(stringLiteral:)()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t LocalizedStringResource.init(stringInterpolation:)()
{
  return LocalizedStringResource.init(stringInterpolation:)();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t dispatch thunk of AttributedStringProtocol.characters.getter()
{
  return dispatch thunk of AttributedStringProtocol.characters.getter();
}

uint64_t dispatch thunk of AttributedStringProtocol.runs.getter()
{
  return dispatch thunk of AttributedStringProtocol.runs.getter();
}

uint64_t AttributedStringProtocol.range<A>(of:options:locale:)()
{
  return AttributedStringProtocol.range<A>(of:options:locale:)();
}

uint64_t dispatch thunk of AttributedStringProtocol.subscript.getter()
{
  return dispatch thunk of AttributedStringProtocol.subscript.getter();
}

uint64_t _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t static DecodableAttributedStringKey<>.decode(from:)()
{
  return static DecodableAttributedStringKey<>.decode(from:)();
}

uint64_t static EncodableAttributedStringKey<>.encode(_:to:)()
{
  return static EncodableAttributedStringKey<>.encode(_:to:)();
}

uint64_t _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)()
{
  return _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t URL.lastPathComponent.getter()
{
  return URL.lastPathComponent.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.deletingPathExtension()()
{
  return URL.deletingPathExtension()();
}

uint64_t URL.appendingPathExtension(_:)()
{
  return URL.appendingPathExtension(_:)();
}

Swift::Void __swiftcall URL.stopAccessingSecurityScopedResource()()
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::Bool __swiftcall URL.startAccessingSecurityScopedResource()()
{
  return URL.startAccessingSecurityScopedResource()();
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.scheme.getter()
{
  return URL.scheme.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t URL.appending<A>(path:directoryHint:)()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t Locale.init(identifier:)()
{
  return Locale.init(identifier:)();
}

uint64_t Locale.identifier.getter()
{
  return Locale.identifier.getter();
}

uint64_t Locale.LanguageCode.identifier.getter()
{
  return Locale.LanguageCode.identifier.getter();
}

uint64_t type metadata accessor for Locale.LanguageCode()
{
  return type metadata accessor for Locale.LanguageCode();
}

uint64_t Locale.NumberingSystem.identifier.getter()
{
  return Locale.NumberingSystem.identifier.getter();
}

uint64_t type metadata accessor for Locale.NumberingSystem()
{
  return type metadata accessor for Locale.NumberingSystem();
}

uint64_t Locale.numberingSystem.getter()
{
  return Locale.numberingSystem.getter();
}

uint64_t static Locale.autoupdatingCurrent.getter()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t Locale.Language.languageCode.getter()
{
  return Locale.Language.languageCode.getter();
}

uint64_t type metadata accessor for Locale.Language()
{
  return type metadata accessor for Locale.Language();
}

uint64_t Locale.language.getter()
{
  return Locale.language.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t static Selector.== infix(_:_:)()
{
  return static Selector.== infix(_:_:)();
}

uint64_t Activity.id.getter()
{
  return Activity.id.getter();
}

uint64_t dispatch thunk of Activity.endSync(_:dismissalPolicy:)()
{
  return dispatch thunk of Activity.endSync(_:dismissalPolicy:)();
}

uint64_t static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)()
{
  return static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)();
}

uint64_t static ActivityUIDismissalPolicy.immediate.getter()
{
  return static ActivityUIDismissalPolicy.immediate.getter();
}

uint64_t type metadata accessor for ActivityUIDismissalPolicy()
{
  return type metadata accessor for ActivityUIDismissalPolicy();
}

uint64_t type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination()
{
  return type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination();
}

uint64_t ActivityPresentationOptions.init(destinations:)()
{
  return ActivityPresentationOptions.init(destinations:)();
}

uint64_t ActivityPresentationOptions.isActionButtonInitiated.setter()
{
  return ActivityPresentationOptions.isActionButtonInitiated.setter();
}

uint64_t ActivityPresentationOptions.shouldSuppressAlertContentOnLockScreen.setter()
{
  return ActivityPresentationOptions.shouldSuppressAlertContentOnLockScreen.setter();
}

uint64_t type metadata accessor for ActivityPresentationOptions()
{
  return type metadata accessor for ActivityPresentationOptions();
}

uint64_t ActivityContent.init(state:staleDate:relevanceScore:)()
{
  return ActivityContent.init(state:staleDate:relevanceScore:)();
}

uint64_t ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ObservationRegistrar.access<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.init()()
{
  return ObservationRegistrar.init()();
}

uint64_t type metadata accessor for ObservationRegistrar()
{
  return type metadata accessor for ObservationRegistrar();
}

uint64_t static AVPartialAsyncProperty<A>.formatDescriptions.getter()
{
  return static AVPartialAsyncProperty<A>.formatDescriptions.getter();
}

uint64_t static AVPartialAsyncProperty<A>.timeRange.getter()
{
  return static AVPartialAsyncProperty<A>.timeRange.getter();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)CGFloat._bridgeToObjectiveC()();
}

uint64_t static CGFloat._forceBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t SiriTipUIView.loadOnAppear.setter()
{
  return SiriTipUIView.loadOnAppear.setter();
}

uint64_t SiriTipUIView.sizeThatFits(_:)()
{
  return SiriTipUIView.sizeThatFits(_:)();
}

uint64_t SiriTipUIView.allowsDismissal.setter()
{
  return SiriTipUIView.allowsDismissal.setter();
}

uint64_t SiriTipUIView.init(style:)()
{
  return SiriTipUIView.init(style:)();
}

uint64_t SiriTipUIView.setIntent<A>(intent:)()
{
  return SiriTipUIView.setIntent<A>(intent:)();
}

uint64_t type metadata accessor for SiriTipUIView()
{
  return type metadata accessor for SiriTipUIView();
}

uint64_t UIAppEntityInteraction.init(entity:)()
{
  return UIAppEntityInteraction.init(entity:)();
}

uint64_t type metadata accessor for UIAppEntityInteraction()
{
  return type metadata accessor for UIAppEntityInteraction();
}

uint64_t UIAppIntentInteraction.init<A>(intent:perform:)()
{
  return UIAppIntentInteraction.init<A>(intent:perform:)();
}

uint64_t type metadata accessor for UIAppIntentInteraction()
{
  return type metadata accessor for UIAppIntentInteraction();
}

uint64_t type metadata accessor for IntentSceneConfiguration()
{
  return type metadata accessor for IntentSceneConfiguration();
}

uint64_t ActivitySceneMetrics.init(size:cornerRadius:)()
{
  return ActivitySceneMetrics.init(size:cornerRadius:)();
}

uint64_t type metadata accessor for ActivitySceneMetrics()
{
  return type metadata accessor for ActivitySceneMetrics();
}

uint64_t dispatch thunk of ActivityScene.resolvedMetrics.setter()
{
  return dispatch thunk of ActivityScene.resolvedMetrics.setter();
}

uint64_t dispatch thunk of ActivityScene.backgroundTintColor.setter()
{
  return dispatch thunk of ActivityScene.backgroundTintColor.setter();
}

uint64_t type metadata accessor for ActivityScene()
{
  return type metadata accessor for ActivityScene();
}

uint64_t static StoreReviewGatingController.defaultBagProfileName.getter()
{
  return static StoreReviewGatingController.defaultBagProfileName.getter();
}

uint64_t static StoreReviewGatingController.defaultBagProfileVersion.getter()
{
  return static StoreReviewGatingController.defaultBagProfileVersion.getter();
}

uint64_t StoreReviewGatingController.init(bag:)()
{
  return StoreReviewGatingController.init(bag:)();
}

uint64_t type metadata accessor for StoreReviewGatingController()
{
  return type metadata accessor for StoreReviewGatingController();
}

uint64_t static SiriTipViewStyle.automatic.getter()
{
  return static SiriTipViewStyle.automatic.getter();
}

uint64_t type metadata accessor for SiriTipViewStyle()
{
  return type metadata accessor for SiriTipViewStyle();
}

uint64_t static UTType.item.getter()
{
  return static UTType.item.getter();
}

uint64_t type metadata accessor for UTType()
{
  return type metadata accessor for UTType();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t OSSignpostID.init(log:)()
{
  return OSSignpostID.init(log:)();
}

uint64_t OSSignpostID.rawValue.getter()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t OSSignposter.init(logger:)()
{
  return OSSignposter.init(logger:)();
}

uint64_t OSSignposter.logHandle.getter()
{
  return OSSignposter.logHandle.getter();
}

uint64_t type metadata accessor for OSSignposter()
{
  return type metadata accessor for OSSignposter();
}

uint64_t type metadata accessor for OSSignpostError()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t OSSignpostIntervalState.signpostID.getter()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OSSignpostIntervalState.init(id:isOpen:)()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t type metadata accessor for OSSignpostIntervalState()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t checkForErrorAndConsumeState(state:)()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Logger.init(_:)()
{
  return Logger.init(_:)();
}

uint64_t UIContentUnavailableConfiguration.secondaryText.setter()
{
  return UIContentUnavailableConfiguration.secondaryText.setter();
}

uint64_t UIContentUnavailableConfiguration.text.setter()
{
  return UIContentUnavailableConfiguration.text.setter();
}

uint64_t static UIContentUnavailableConfiguration.empty()()
{
  return static UIContentUnavailableConfiguration.empty()();
}

uint64_t UIContentUnavailableConfiguration.image.setter()
{
  return UIContentUnavailableConfiguration.image.setter();
}

uint64_t static UIContentUnavailableConfiguration.loading()()
{
  return static UIContentUnavailableConfiguration.loading()();
}

uint64_t type metadata accessor for UIContentUnavailableConfiguration()
{
  return type metadata accessor for UIContentUnavailableConfiguration();
}

uint64_t noErr.getter()
{
  return noErr.getter();
}

uint64_t SpeechAnalyzer.__allocating_init<A>(client:inputSequence:audioFormat:modules:options:restrictedLogging:analysisContext:didChangeVolatileRange:)()
{
  return SpeechAnalyzer.__allocating_init<A>(client:inputSequence:audioFormat:modules:options:restrictedLogging:analysisContext:didChangeVolatileRange:)();
}

uint64_t type metadata accessor for SpeechAnalyzer()
{
  return type metadata accessor for SpeechAnalyzer();
}

uint64_t ClientInfo.init(identifier:)()
{
  return ClientInfo.init(identifier:)();
}

uint64_t type metadata accessor for ClientInfo()
{
  return type metadata accessor for ClientInfo();
}

uint64_t type metadata accessor for Transcriber.ModelOptions()
{
  return type metadata accessor for Transcriber.ModelOptions();
}

uint64_t type metadata accessor for Transcriber.ReportingOption()
{
  return type metadata accessor for Transcriber.ReportingOption();
}

uint64_t Transcriber.MultisegmentResult.earResultType.getter()
{
  return Transcriber.MultisegmentResult.earResultType.getter();
}

uint64_t Transcriber.MultisegmentResult.transcriptions.getter()
{
  return Transcriber.MultisegmentResult.transcriptions.getter();
}

uint64_t Transcriber.MultisegmentResult.resultsFinalToTime.getter()
{
  return Transcriber.MultisegmentResult.resultsFinalToTime.getter();
}

uint64_t Transcriber.MultisegmentResult.range.getter()
{
  return Transcriber.MultisegmentResult.range.getter();
}

uint64_t type metadata accessor for Transcriber.TranscriptionOption()
{
  return type metadata accessor for Transcriber.TranscriptionOption();
}

uint64_t Transcriber.multisegmentResults.getter()
{
  return Transcriber.multisegmentResults.getter();
}

uint64_t Transcriber.init(locale:taskHint:modelOptions:transcriptionOptions:reportingOptions:attributeOptions:)()
{
  return Transcriber.init(locale:taskHint:modelOptions:transcriptionOptions:reportingOptions:attributeOptions:)();
}

uint64_t type metadata accessor for Transcriber()
{
  return type metadata accessor for Transcriber();
}

uint64_t AnalyzerInput.init(buffer:bufferStartTime:)()
{
  return AnalyzerInput.init(buffer:bufferStartTime:)();
}

uint64_t type metadata accessor for AnalyzerInput()
{
  return type metadata accessor for AnalyzerInput();
}

uint64_t type metadata accessor for EARResultType()
{
  return type metadata accessor for EARResultType();
}

uint64_t type metadata accessor for AnalysisContext()
{
  return type metadata accessor for AnalysisContext();
}

uint64_t type metadata accessor for AnalysisOptions()
{
  return type metadata accessor for AnalysisOptions();
}

uint64_t type metadata accessor for TimeRangeAttribute()
{
  return type metadata accessor for TimeRangeAttribute();
}

uint64_t type metadata accessor for TranscriptionResultAttributeOption()
{
  return type metadata accessor for TranscriptionResultAttributeOption();
}

uint64_t type metadata accessor for TaskHint()
{
  return type metadata accessor for TaskHint();
}

uint64_t Tip.invalidate(reason:)()
{
  return Tip.invalidate(reason:)();
}

uint64_t Tip.rules.getter()
{
  return Tip.rules.getter();
}

uint64_t Tip.title.getter()
{
  return Tip.title.getter();
}

uint64_t Tip.actions.getter()
{
  return Tip.actions.getter();
}

uint64_t Tip.message.getter()
{
  return Tip.message.getter();
}

uint64_t TipView.init(_:arrowEdge:action:)()
{
  return TipView.init(_:arrowEdge:action:)();
}

uint64_t static Tips.OptionsBuilder.buildExpression<A>(_:)()
{
  return static Tips.OptionsBuilder.buildExpression<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildFinalResult<A>(_:)()
{
  return static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildPartialBlock<A>(first:)()
{
  return static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
}

uint64_t type metadata accessor for Tips.UsesConstellation()
{
  return type metadata accessor for Tips.UsesConstellation();
}

uint64_t Tips.UsesConstellation.init(_:)()
{
  return Tips.UsesConstellation.init(_:)();
}

uint64_t type metadata accessor for Tips.InvalidationReason()
{
  return type metadata accessor for Tips.InvalidationReason();
}

uint64_t static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter()
{
  return static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.DatastoreLocation()
{
  return type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
}

uint64_t static Tips.ConfigurationOption.datastoreLocation(_:)()
{
  return static Tips.ConfigurationOption.datastoreLocation(_:)();
}

uint64_t type metadata accessor for Tips.ConfigurationOption()
{
  return type metadata accessor for Tips.ConfigurationOption();
}

uint64_t static Tips.configure(_:)()
{
  return static Tips.configure(_:)();
}

uint64_t type metadata accessor for Publishers.CompactMap()
{
  return type metadata accessor for Publishers.CompactMap();
}

uint64_t type metadata accessor for Publishers.Map()
{
  return type metadata accessor for Publishers.Map();
}

uint64_t type metadata accessor for Publishers.First()
{
  return type metadata accessor for Publishers.First();
}

uint64_t type metadata accessor for Publishers.Merge()
{
  return type metadata accessor for Publishers.Merge();
}

uint64_t Publishers.TryMap.map<A>(_:)()
{
  return Publishers.TryMap.map<A>(_:)();
}

uint64_t type metadata accessor for Publishers.TryMap()
{
  return type metadata accessor for Publishers.TryMap();
}

uint64_t type metadata accessor for Publishers.Timeout()
{
  return type metadata accessor for Publishers.Timeout();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

uint64_t type metadata accessor for AnyCancellable()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t PassthroughSubject.send(_:)()
{
  return PassthroughSubject.send(_:)();
}

uint64_t PassthroughSubject.init()()
{
  return PassthroughSubject.init()();
}

uint64_t CurrentValueSubject.send(_:)()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t CurrentValueSubject.value.getter()
{
  return CurrentValueSubject.value.getter();
}

uint64_t CurrentValueSubject.value.setter()
{
  return CurrentValueSubject.value.setter();
}

uint64_t CurrentValueSubject.receive<A>(subscriber:)()
{
  return CurrentValueSubject.receive<A>(subscriber:)();
}

uint64_t CurrentValueSubject.init(_:)()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t AsyncThrowingPublisher.makeAsyncIterator()()
{
  return AsyncThrowingPublisher.makeAsyncIterator()();
}

uint64_t type metadata accessor for AsyncThrowingPublisher.Iterator()
{
  return type metadata accessor for AsyncThrowingPublisher.Iterator();
}

uint64_t type metadata accessor for AsyncThrowingPublisher()
{
  return type metadata accessor for AsyncThrowingPublisher();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t Publisher.compactMap<A>(_:)()
{
  return Publisher.compactMap<A>(_:)();
}

uint64_t Publisher.map<A>(_:)()
{
  return Publisher.map<A>(_:)();
}

uint64_t Publisher.scan<A>(_:_:)()
{
  return Publisher.scan<A>(_:_:)();
}

uint64_t Publisher.first()()
{
  return Publisher.first()();
}

uint64_t Publisher.merge<A>(with:)()
{
  return Publisher.merge<A>(with:)();
}

uint64_t Publisher.tryMap<A>(_:)()
{
  return Publisher.tryMap<A>(_:)();
}

uint64_t Publisher.values.getter()
{
  return Publisher.values.getter();
}

uint64_t Publisher.timeout<A>(_:scheduler:options:customError:)()
{
  return Publisher.timeout<A>(_:scheduler:options:customError:)();
}

uint64_t Publisher.debounce<A>(for:scheduler:options:)()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t Publisher.dropFirst(_:)()
{
  return Publisher.dropFirst(_:)();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t type metadata accessor for ColorScheme()
{
  return type metadata accessor for ColorScheme();
}

uint64_t DragGesture.init<A>(minimumDistance:coordinateSpace:)()
{
  return DragGesture.init<A>(minimumDistance:coordinateSpace:)();
}

uint64_t DragGesture.Value.location.getter()
{
  return DragGesture.Value.location.getter();
}

uint64_t type metadata accessor for DragGesture()
{
  return type metadata accessor for DragGesture();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t static GestureMask.all.getter()
{
  return static GestureMask.all.getter();
}

uint64_t StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t AnyShapeStyle.init<A>(_:)()
{
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t GeometryProxy.frame<A>(in:)()
{
  return GeometryProxy.frame<A>(in:)();
}

uint64_t KeyframeTrack.init(_:content:)()
{
  return KeyframeTrack.init(_:content:)();
}

uint64_t LinearKeyframe.init(_:duration:timingCurve:)()
{
  return LinearKeyframe.init(_:duration:timingCurve:)();
}

uint64_t dispatch thunk of _UIHostingView.invalidatesIntrinsicContentSizeOnIdealSizeChange.setter()
{
  return dispatch thunk of _UIHostingView.invalidatesIntrinsicContentSizeOnIdealSizeChange.setter();
}

uint64_t _UIHostingView.init(rootView:)()
{
  return _UIHostingView.init(rootView:)();
}

uint64_t type metadata accessor for DynamicTypeSize()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t ModifiedContent<>.accessibilityLabel(_:)()
{
  return ModifiedContent<>.accessibilityLabel(_:)();
}

uint64_t ModifiedContent<>.accessibilitySortPriority(_:)()
{
  return ModifiedContent<>.accessibilitySortPriority(_:)();
}

uint64_t static KeyframesBuilder.buildExpression<A>(_:)()
{
  return static KeyframesBuilder.buildExpression<A>(_:)();
}

uint64_t static KeyframesBuilder.buildFinalResult<A>(_:)()
{
  return static KeyframesBuilder.buildFinalResult<A>(_:)();
}

uint64_t static KeyframesBuilder.buildPartialBlock<A, B>(accumulated:next:)()
{
  return static KeyframesBuilder.buildPartialBlock<A, B>(accumulated:next:)();
}

uint64_t static KeyframesBuilder.buildPartialBlock<A>(first:)()
{
  return static KeyframesBuilder.buildPartialBlock<A>(first:)();
}

uint64_t PlainButtonStyle.init()()
{
  return PlainButtonStyle.init()();
}

uint64_t type metadata accessor for PlainButtonStyle()
{
  return type metadata accessor for PlainButtonStyle();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t EnvironmentValues.imageScale.getter()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t EnvironmentValues.imageScale.setter()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t EnvironmentValues.isEnabled.getter()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t EnvironmentValues.isEnabled.setter()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return EnvironmentValues.tintColor.getter();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t LocalizedStringKey.StringInterpolation.appendInterpolation(_:)()
{
  return LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
}

Swift::Void __swiftcall LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall LocalizedStringKey.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for LocalizedStringKey.StringInterpolation()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t LocalizedStringKey.init(stringInterpolation:)()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t static RoundedCornerStyle.== infix(_:_:)()
{
  return static RoundedCornerStyle.== infix(_:_:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t static AccessibilityTraits.startsMediaSession.getter()
{
  return static AccessibilityTraits.startsMediaSession.getter();
}

uint64_t type metadata accessor for AccessibilityTraits()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t type metadata accessor for NamedCoordinateSpace()
{
  return type metadata accessor for NamedCoordinateSpace();
}

uint64_t static CoordinateSpaceProtocol<>.named<A>(_:)()
{
  return static CoordinateSpaceProtocol<>.named<A>(_:)();
}

uint64_t static KeyframeTrackContentBuilder.buildEither<A, B>(first:)()
{
  return static KeyframeTrackContentBuilder.buildEither<A, B>(first:)();
}

uint64_t static KeyframeTrackContentBuilder.buildEither<A, B>(second:)()
{
  return static KeyframeTrackContentBuilder.buildEither<A, B>(second:)();
}

uint64_t static KeyframeTrackContentBuilder.buildExpression<A>(_:)()
{
  return static KeyframeTrackContentBuilder.buildExpression<A>(_:)();
}

uint64_t static KeyframeTrackContentBuilder.buildPartialBlock<A, B>(accumulated:next:)()
{
  return static KeyframeTrackContentBuilder.buildPartialBlock<A, B>(accumulated:next:)();
}

uint64_t static KeyframeTrackContentBuilder.buildPartialBlock<A>(first:)()
{
  return static KeyframeTrackContentBuilder.buildPartialBlock<A>(first:)();
}

uint64_t UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)()
{
  return UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)();
}

uint64_t static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)()
{
  return static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)();
}

uint64_t UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t static UIViewControllerRepresentable._layoutOptions(_:)()
{
  return static UIViewControllerRepresentable._layoutOptions(_:)();
}

uint64_t UIViewControllerRepresentable._identifiedViewTree(in:)()
{
  return UIViewControllerRepresentable._identifiedViewTree(in:)();
}

uint64_t UIViewControllerRepresentable.body.getter()
{
  return UIViewControllerRepresentable.body.getter();
}

uint64_t UIViewControllerRepresentable<>.makeCoordinator()()
{
  return UIViewControllerRepresentable<>.makeCoordinator()();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.bottom.getter()
{
  return static Edge.Set.bottom.getter();
}

uint64_t Edge.Set.init(rawValue:)()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t static Edge.Set.trailing.getter()
{
  return static Edge.Set.trailing.getter();
}

uint64_t static Font.subheadline.getter()
{
  return static Font.subheadline.getter();
}

uint64_t static Font.body.getter()
{
  return static Font.body.getter();
}

uint64_t static Font.Weight.bold.getter()
{
  return static Font.Weight.bold.getter();
}

uint64_t static Font.Weight.heavy.getter()
{
  return static Font.Weight.heavy.getter();
}

uint64_t static Font.Weight.medium.getter()
{
  return static Font.Weight.medium.getter();
}

uint64_t Font.init(_:)()
{
  return Font.init(_:)();
}

uint64_t Text.fontWeight(_:)()
{
  return Text.fontWeight(_:)();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init(_:)()
{
  return Text.init(_:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t View.tipImageSize(_:)()
{
  return View.tipImageSize(_:)();
}

uint64_t View.tipBackground<A>(_:)()
{
  return View.tipBackground<A>(_:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.fontWeight(_:)()
{
  return View.fontWeight(_:)();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.dynamicTypeSize<A>(_:)()
{
  return View.dynamicTypeSize<A>(_:)();
}

uint64_t View.keyframeAnimator<A, B, C, D>(initialValue:trigger:content:keyframes:)()
{
  return View.keyframeAnimator<A, B, C, D>(initialValue:trigger:content:keyframes:)();
}

uint64_t View.accessibilityLabel(_:)()
{
  return View.accessibilityLabel(_:)();
}

uint64_t View.accessibilityHidden(_:)()
{
  return View.accessibilityHidden(_:)();
}

uint64_t View.highPriorityGesture<A>(_:including:)()
{
  return View.highPriorityGesture<A>(_:including:)();
}

uint64_t View.accessibilityAddTraits(_:)()
{
  return View.accessibilityAddTraits(_:)();
}

uint64_t View.onChange<A>(of:initial:_:)()
{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t static Color.black.getter()
{
  return static Color.black.getter();
}

uint64_t static Color.clear.getter()
{
  return static Color.clear.getter();
}

uint64_t static Color.white.getter()
{
  return static Color.white.getter();
}

uint64_t Color.opacity(_:)()
{
  return Color.opacity(_:)();
}

uint64_t static Color.secondary.getter()
{
  return static Color.secondary.getter();
}

uint64_t Color.init(_:)()
{
  return Color.init(_:)();
}

uint64_t Image.init(systemName:)()
{
  return Image.init(systemName:)();
}

uint64_t type metadata accessor for Image.Scale()
{
  return type metadata accessor for Image.Scale();
}

uint64_t Image.init(_:bundle:)()
{
  return Image.init(_:bundle:)();
}

uint64_t State.init(wrappedValue:)()
{
  return State.init(wrappedValue:)();
}

uint64_t State.wrappedValue.getter()
{
  return State.wrappedValue.getter();
}

uint64_t State.wrappedValue.setter()
{
  return State.wrappedValue.setter();
}

uint64_t Button.init(action:label:)()
{
  return Button.init(action:label:)();
}

uint64_t type metadata accessor for Capsule()
{
  return type metadata accessor for Capsule();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t ForEach<>.init(_:content:)()
{
  return ForEach<>.init(_:content:)();
}

uint64_t Gesture<>.onChanged(_:)()
{
  return Gesture<>.onChanged(_:)();
}

uint64_t Bindable.wrappedValue.getter()
{
  return Bindable.wrappedValue.getter();
}

uint64_t Bindable<A>.init(wrappedValue:)()
{
  return Bindable<A>.init(wrappedValue:)();
}

uint64_t type metadata accessor for Bindable()
{
  return type metadata accessor for Bindable();
}

uint64_t static Material.regular.getter()
{
  return static Material.regular.getter();
}

uint64_t static Material.ultraThin.getter()
{
  return static Material.ultraThin.getter();
}

uint64_t type metadata accessor for Material()
{
  return type metadata accessor for Material();
}

uint64_t static Alignment.bottomTrailing.getter()
{
  return static Alignment.bottomTrailing.getter();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t Animation.speed(_:)()
{
  return Animation.speed(_:)();
}

uint64_t static Animation.linear(duration:)()
{
  return static Animation.linear(duration:)();
}

uint64_t static Animation.default.getter()
{
  return static Animation.default.getter();
}

uint64_t static Animation.easeOut(duration:)()
{
  return static Animation.easeOut(duration:)();
}

uint64_t AnyLayout.init<A>(_:)()
{
  return AnyLayout.init<A>(_:)();
}

uint64_t static UnitCurve.linear.getter()
{
  return static UnitCurve.linear.getter();
}

uint64_t type metadata accessor for UnitCurve()
{
  return type metadata accessor for UnitCurve();
}

uint64_t static UnitPoint.center.getter()
{
  return static UnitPoint.center.getter();
}

uint64_t static SymbolEffectOptions.default.getter()
{
  return static SymbolEffectOptions.default.getter();
}

uint64_t type metadata accessor for SymbolEffectOptions()
{
  return type metadata accessor for SymbolEffectOptions();
}

uint64_t VariableColorSymbolEffect.cumulative.getter()
{
  return VariableColorSymbolEffect.cumulative.getter();
}

uint64_t VariableColorSymbolEffect.dimInactiveLayers.getter()
{
  return VariableColorSymbolEffect.dimInactiveLayers.getter();
}

uint64_t VariableColorSymbolEffect.init()()
{
  return VariableColorSymbolEffect.init()();
}

uint64_t type metadata accessor for VariableColorSymbolEffect()
{
  return type metadata accessor for VariableColorSymbolEffect();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t DispatchQoS.init(qosClass:relativePriority:)()
{
  return DispatchQoS.init(qosClass:relativePriority:)();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t UnsafeMutableAudioBufferListPointer.unsafeMutablePointer.getter()
{
  return UnsafeMutableAudioBufferListPointer.unsafeMutablePointer.getter();
}

uint64_t UnsafeMutableAudioBufferListPointer.count.getter()
{
  return UnsafeMutableAudioBufferListPointer.count.getter();
}

uint64_t UnsafeMutableAudioBufferListPointer.count.setter()
{
  return UnsafeMutableAudioBufferListPointer.count.setter();
}

uint64_t type metadata accessor for UnsafeMutableAudioBufferListPointer()
{
  return type metadata accessor for UnsafeMutableAudioBufferListPointer();
}

uint64_t UnsafeMutableAudioBufferListPointer.init(_:)()
{
  return UnsafeMutableAudioBufferListPointer.init(_:)();
}

uint64_t UnsafeMutableAudioBufferListPointer.subscript.modify()
{
  return UnsafeMutableAudioBufferListPointer.subscript.modify();
}

uint64_t UnsafeMutableAudioBufferListPointer.subscript.read()
{
  return UnsafeMutableAudioBufferListPointer.subscript.read();
}

uint64_t _CMSampleBufferInitTrampoline.init(copying:forRange:)()
{
  return _CMSampleBufferInitTrampoline.init(copying:forRange:)();
}

uint64_t dispatch thunk of ControlCenter.reloadControls(ofKind:)()
{
  return dispatch thunk of ControlCenter.reloadControls(ofKind:)();
}

uint64_t static ControlCenter.shared.getter()
{
  return static ControlCenter.shared.getter();
}

uint64_t type metadata accessor for ControlCenter()
{
  return type metadata accessor for ControlCenter();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t Character.isWhitespace.getter()
{
  return Character.isWhitespace.getter();
}

uint64_t dispatch thunk of BidirectionalCollection.index(before:)()
{
  return dispatch thunk of BidirectionalCollection.index(before:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Comparable.<= infix(_:_:)()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t type metadata accessor for String.IntentInputOptions()
{
  return type metadata accessor for String.IntentInputOptions();
}

uint64_t type metadata accessor for String.LocalizationValue.Placeholder()
{
  return type metadata accessor for String.LocalizationValue.Placeholder();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation(placeholder:specifier:)()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation(placeholder:specifier:)();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t String.LocalizationValue.init(stringInterpolation:)()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(localized:table:bundle:locale:comment:)()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.Index.utf16Offset<A>(in:)()
{
  return String.Index.utf16Offset<A>(in:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(after:)()
{
  return String.index(after:)();
}

uint64_t String.index(_:offsetBy:)()
{
  return String.index(_:offsetBy:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::Void __swiftcall String.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t Sequence.sorted(by:)()
{
  return Sequence.sorted(by:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t type metadata accessor for Bool.IntentDisplayName()
{
  return type metadata accessor for Bool.IntentDisplayName();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t static AsyncStream.makeStream(of:bufferingPolicy:)()
{
  return static AsyncStream.makeStream(of:bufferingPolicy:)();
}

uint64_t AsyncStream.Continuation.onTermination.setter()
{
  return AsyncStream.Continuation.onTermination.setter();
}

uint64_t AsyncStream.Continuation.yield(_:)()
{
  return AsyncStream.Continuation.yield(_:)();
}

Swift::Void __swiftcall AsyncStream.Continuation.finish()()
{
}

uint64_t type metadata accessor for AsyncStream.Continuation()
{
  return type metadata accessor for AsyncStream.Continuation();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

uint64_t static Task<>.checkCancellation()()
{
  return static Task<>.checkCancellation()();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t static Int._forceBridgeFromObjectiveC(_:result:)()
{
  return static Int._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Int._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Int._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Int._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.isEmpty.getter()
{
  return dispatch thunk of Collection.isEmpty.getter();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t Range<>.init<A, B>(_:in:)()
{
  return Range<>.init<A, B>(_:in:)();
}

uint64_t type metadata accessor for Range()
{
  return type metadata accessor for Range();
}

uint64_t CMTimeRange.end.getter()
{
  return CMTimeRange.end.getter();
}

uint64_t NLTokenizer.tokens(for:)()
{
  return NLTokenizer.tokens(for:)();
}

uint64_t UIImageView.addSymbolEffect<A>(_:options:animated:completion:)()
{
  return UIImageView.addSymbolEffect<A>(_:options:animated:completion:)();
}

uint64_t CSSearchQuery.Results.Item.item.getter()
{
  return CSSearchQuery.Results.Item.item.getter();
}

uint64_t type metadata accessor for CSSearchQuery.Results()
{
  return type metadata accessor for CSSearchQuery.Results();
}

uint64_t CSSearchQuery.results.getter()
{
  return CSSearchQuery.results.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t static AudioBufferList.allocate(maximumBuffers:)()
{
  return static AudioBufferList.allocate(maximumBuffers:)();
}

uint64_t CMSampleBufferRef.numSamples.getter()
{
  return CMSampleBufferRef.numSamples.getter();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t NSManagedObjectContext.performAndWait<A>(_:)()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

uint64_t type metadata accessor for NSManagedObjectContext.ScheduledTaskType()
{
  return type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
}

uint64_t UIContentUnavailableView.configuration.setter()
{
  return UIContentUnavailableView.configuration.setter();
}

uint64_t UIContentUnavailableView.init(configuration:)()
{
  return UIContentUnavailableView.init(configuration:)();
}

uint64_t static CMTime.>= infix(_:_:)()
{
  return static CMTime.>= infix(_:_:)();
}

__C::CMTime __swiftcall CMTime.init(value:timescale:)(Swift::Int64 value, Swift::Int32 timescale)
{
  Swift::Int64 v2 = CMTime.init(value:timescale:)(value, *(void *)&timescale);
  result.CMTimeEpoch epoch = v4;
  result.timescale = v3;
  result.flags = *(__C::CMTimeFlags *)((char *)&v3 + 4);
  result.value = v2;
  return result;
}

uint64_t CMTime.seconds.getter()
{
  return CMTime.seconds.getter();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t type metadata accessor for NSObject.KeyValueObservingPublisher()
{
  return type metadata accessor for NSObject.KeyValueObservingPublisher();
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t type metadata accessor for UIButton.Configuration.CornerStyle()
{
  return type metadata accessor for UIButton.Configuration.CornerStyle();
}

uint64_t UIButton.Configuration.cornerStyle.setter()
{
  return UIButton.Configuration.cornerStyle.setter();
}

uint64_t UIButton.Configuration.contentInsets.setter()
{
  return UIButton.Configuration.contentInsets.setter();
}

uint64_t UIButton.Configuration.attributedTitle.setter()
{
  return UIButton.Configuration.attributedTitle.setter();
}

uint64_t UIButton.Configuration.baseBackgroundColor.setter()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t UIButton.Configuration.image.setter()
{
  return UIButton.Configuration.image.setter();
}

uint64_t UIButton.Configuration.title.setter()
{
  return UIButton.Configuration.title.setter();
}

uint64_t static UIButton.Configuration.filled()()
{
  return static UIButton.Configuration.filled()();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t UIButton.configuration.getter()
{
  return UIButton.configuration.getter();
}

uint64_t UIButton.configuration.setter()
{
  return UIButton.configuration.setter();
}

uint64_t _NSRange.init<A, B>(_:in:)()
{
  return _NSRange.init<A, B>(_:in:)();
}

{
  return _NSRange.init<A, B>(_:in:)();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)()
{
  return static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerTimeType.Stride()
{
  return type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
}

uint64_t OS_os_log.signpostsEnabled.getter()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t static OS_os_log.default.getter()
{
  return static OS_os_log.default.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.localizedUppercase.getter()
{
  return StringProtocol.localizedUppercase.getter();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.enumerateSubstrings<A>(in:options:_:)()
{
  return StringProtocol.enumerateSubstrings<A>(in:options:_:)();
}

uint64_t StringProtocol.compare<A>(_:options:range:locale:)()
{
  return StringProtocol.compare<A>(_:options:range:locale:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

NSObject __swiftcall AnyHashable._bridgeToObjectiveC()()
{
  return (NSObject)AnyHashable._bridgeToObjectiveC()();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t _StringGuts.foreignErrorCorrectedScalar(startingAt:)()
{
  return _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t dispatch thunk of static CaseIterable.allCases.getter()
{
  return dispatch thunk of static CaseIterable.allCases.getter();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t type metadata accessor for DecodingError()
{
  return type metadata accessor for DecodingError();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t _decodeScalar(_:startingAt:)()
{
  return _decodeScalar(_:startingAt:)();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t AsyncMapSequence.init(_:transform:)()
{
  return AsyncMapSequence.init(_:transform:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t _stringCompareInternal(_:_:_:_:expecting:)()
{
  return _stringCompareInternal(_:_:_:_:expecting:)();
}

uint64_t AsyncCompactMapSequence.init(_:transform:)()
{
  return AsyncCompactMapSequence.init(_:transform:)();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t AsyncThrowingMapSequence.init(_:transform:)()
{
  return AsyncThrowingMapSequence.init(_:transform:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t AXLocalizeDurationTime()
{
  return _AXLocalizeDurationTime();
}

AudioComponent AudioComponentFindNext(AudioComponent inComponent, const AudioComponentDescription *inDesc)
{
  return _AudioComponentFindNext(inComponent, inDesc);
}

OSStatus AudioComponentInstanceDispose(AudioComponentInstance inInstance)
{
  return _AudioComponentInstanceDispose(inInstance);
}

OSStatus AudioComponentInstanceNew(AudioComponent inComponent, AudioComponentInstance *outInstance)
{
  return _AudioComponentInstanceNew(inComponent, outInstance);
}

OSStatus AudioFormatGetProperty(AudioFormatPropertyID inPropertyID, UInt32 inSpecifierSize, const void *inSpecifier, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return _AudioFormatGetProperty(inPropertyID, inSpecifierSize, inSpecifier, ioPropertyDataSize, outPropertyData);
}

OSStatus AudioFormatGetPropertyInfo(AudioFormatPropertyID inPropertyID, UInt32 inSpecifierSize, const void *inSpecifier, UInt32 *outPropertyDataSize)
{
  return _AudioFormatGetPropertyInfo(inPropertyID, inSpecifierSize, inSpecifier, outPropertyDataSize);
}

OSStatus AudioObjectGetPropertyData(AudioObjectID inObjectID, const AudioObjectPropertyAddress *inAddress, UInt32 inQualifierDataSize, const void *inQualifierData, UInt32 *ioDataSize, void *outData)
{
  return _AudioObjectGetPropertyData(inObjectID, inAddress, inQualifierDataSize, inQualifierData, ioDataSize, outData);
}

OSStatus AudioObjectGetPropertyDataSize(AudioObjectID inObjectID, const AudioObjectPropertyAddress *inAddress, UInt32 inQualifierDataSize, const void *inQualifierData, UInt32 *outDataSize)
{
  return _AudioObjectGetPropertyDataSize(inObjectID, inAddress, inQualifierDataSize, inQualifierData, outDataSize);
}

OSStatus AudioObjectSetPropertyData(AudioObjectID inObjectID, const AudioObjectPropertyAddress *inAddress, UInt32 inQualifierDataSize, const void *inQualifierData, UInt32 inDataSize, const void *inData)
{
  return _AudioObjectSetPropertyData(inObjectID, inAddress, inQualifierDataSize, inQualifierData, inDataSize, inData);
}

void AudioServicesPlaySystemSoundWithCompletion(SystemSoundID inSystemSoundID, void *inCompletionBlock)
{
}

OSStatus AudioUnitAddPropertyListener(AudioUnit inUnit, AudioUnitPropertyID inID, AudioUnitPropertyListenerProc inProc, void *inProcUserData)
{
  return _AudioUnitAddPropertyListener(inUnit, inID, inProc, inProcUserData);
}

OSStatus AudioUnitGetParameter(AudioUnit inUnit, AudioUnitParameterID inID, AudioUnitScope inScope, AudioUnitElement inElement, AudioUnitParameterValue *outValue)
{
  return _AudioUnitGetParameter(inUnit, inID, inScope, inElement, outValue);
}

OSStatus AudioUnitGetProperty(AudioUnit inUnit, AudioUnitPropertyID inID, AudioUnitScope inScope, AudioUnitElement inElement, void *outData, UInt32 *ioDataSize)
{
  return _AudioUnitGetProperty(inUnit, inID, inScope, inElement, outData, ioDataSize);
}

OSStatus AudioUnitInitialize(AudioUnit inUnit)
{
  return _AudioUnitInitialize(inUnit);
}

OSStatus AudioUnitRender(AudioUnit inUnit, AudioUnitRenderActionFlags *ioActionFlags, const AudioTimeStamp *inTimeStamp, UInt32 inOutputBusNumber, UInt32 inNumberFrames, AudioBufferList *ioData)
{
  return _AudioUnitRender(inUnit, ioActionFlags, inTimeStamp, inOutputBusNumber, inNumberFrames, ioData);
}

OSStatus AudioUnitReset(AudioUnit inUnit, AudioUnitScope inScope, AudioUnitElement inElement)
{
  return _AudioUnitReset(inUnit, inScope, inElement);
}

OSStatus AudioUnitSetParameter(AudioUnit inUnit, AudioUnitParameterID inID, AudioUnitScope inScope, AudioUnitElement inElement, AudioUnitParameterValue inValue, UInt32 inBufferOffsetInFrames)
{
  return _AudioUnitSetParameter(inUnit, inID, inScope, inElement, inValue, inBufferOffsetInFrames);
}

OSStatus AudioUnitSetProperty(AudioUnit inUnit, AudioUnitPropertyID inID, AudioUnitScope inScope, AudioUnitElement inElement, const void *inData, UInt32 inDataSize)
{
  return _AudioUnitSetProperty(inUnit, inID, inScope, inElement, inData, inDataSize);
}

OSStatus AudioUnitUninitialize(AudioUnit inUnit)
{
  return _AudioUnitUninitialize(inUnit);
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

BOOL CAFrameRateRangeIsEqualToRange(CAFrameRateRange range, CAFrameRateRange other)
{
  return _CAFrameRateRangeIsEqualToRange(range, other);
}

CAFrameRateRange CAFrameRateRangeMake(float minimum, float maximum, float preferred)
{
  return _CAFrameRateRangeMake(minimum, maximum, preferred);
}

BOOL CATransform3DIsIdentity(CATransform3D *t)
{
  return _CATransform3DIsIdentity(t);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DMakeScale(retstr, sx, sy, sz);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

BOOL CGColorEqualToColor(CGColorRef color1, CGColorRef color2)
{
  return _CGColorEqualToColor(color1, color2);
}

void CGContextClearRect(CGContextRef c, CGRect rect)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
}

CGMutablePathRef CGPathCreateMutableCopyByTransformingPath(CGPathRef path, const CGAffineTransform *transform)
{
  return _CGPathCreateMutableCopyByTransformingPath(path, transform);
}

BOOL CGPathEqualToPath(CGPathRef path1, CGPathRef path2)
{
  return _CGPathEqualToPath(path1, path2);
}

CGRect CGPathGetBoundingBox(CGPathRef path)
{
  return _CGPathGetBoundingBox(path);
}

void CGPathRelease(CGPathRef path)
{
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  return _CGRectIntersection(r1, r2);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

BOOL CGRectIsInfinite(CGRect rect)
{
  return _CGRectIsInfinite(rect);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectOffset(rect, dx, dy);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

FourCharCode CMFormatDescriptionGetMediaSubType(CMFormatDescriptionRef desc)
{
  return _CMFormatDescriptionGetMediaSubType(desc);
}

OSStatus CMSampleBufferCopyPCMDataIntoAudioBufferList(CMSampleBufferRef sbuf, int32_t frameOffset, int32_t numFrames, AudioBufferList *bufferList)
{
  return _CMSampleBufferCopyPCMDataIntoAudioBufferList(sbuf, frameOffset, numFrames, bufferList);
}

OSStatus CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer(CMSampleBufferRef sbuf, size_t *bufferListSizeNeededOut, AudioBufferList *bufferListOut, size_t bufferListSize, CFAllocatorRef blockBufferStructureAllocator, CFAllocatorRef blockBufferBlockAllocator, uint32_t flags, CMBlockBufferRef *blockBufferOut)
{
  return _CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer(sbuf, bufferListSizeNeededOut, bufferListOut, bufferListSize, blockBufferStructureAllocator, blockBufferBlockAllocator, flags, blockBufferOut);
}

CMItemCount CMSampleBufferGetNumSamples(CMSampleBufferRef sbuf)
{
  return _CMSampleBufferGetNumSamples(sbuf);
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return _CMTimeMake(retstr, value, timescale);
}

uint64_t MobileGestalt_get_current_device()
{
  return _MobileGestalt_get_current_device();
}

uint64_t MobileGestalt_get_wapiCapability()
{
  return _MobileGestalt_get_wapiCapability();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

void NSLog(NSString *format, ...)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t NSStringFromRCTimeRange()
{
  return _NSStringFromRCTimeRange();
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t OSLogForCategory()
{
  return _OSLogForCategory();
}

uint64_t RCCatchTranscriptionDecodingError()
{
  return _RCCatchTranscriptionDecodingError();
}

uint64_t RCCloudRecordingsStoreURL()
{
  return _RCCloudRecordingsStoreURL();
}

uint64_t RCCurrentMediaTime()
{
  return _RCCurrentMediaTime();
}

uint64_t RCDebugStringForTimeInterval()
{
  return _RCDebugStringForTimeInterval();
}

uint64_t RCDeviceUnlockedSinceBoot()
{
  return _RCDeviceUnlockedSinceBoot();
}

uint64_t RCDispatchNoSoonerThan()
{
  return _RCDispatchNoSoonerThan();
}

uint64_t RCGetAudioConfiguration()
{
  return _RCGetAudioConfiguration();
}

uint64_t RCIsBeingUnitTested()
{
  return _RCIsBeingUnitTested();
}

uint64_t RCIsInternalInstall()
{
  return _RCIsInternalInstall();
}

uint64_t RCLocalizationNotNeeded()
{
  return _RCLocalizationNotNeeded();
}

uint64_t RCLocalizedDuration()
{
  return _RCLocalizedDuration();
}

uint64_t RCLocalizedDurationWithHiddenComponents()
{
  return _RCLocalizedDurationWithHiddenComponents();
}

uint64_t RCLocalizedFrameworkString()
{
  return _RCLocalizedFrameworkString();
}

uint64_t RCLocalizedPlaybackTime()
{
  return _RCLocalizedPlaybackTime();
}

uint64_t RCLocalizedPlaybackTimeWithMinimumComponents()
{
  return _RCLocalizedPlaybackTimeWithMinimumComponents();
}

uint64_t RCNormalizedDecibelValue()
{
  return _RCNormalizedDecibelValue();
}

uint64_t RCObserveChangesToKeyPath()
{
  return _RCObserveChangesToKeyPath();
}

uint64_t RCObserveChangesToKeyPaths()
{
  return _RCObserveChangesToKeyPaths();
}

uint64_t RCOverdubRecordingFeatureFlagIsEnabled()
{
  return _RCOverdubRecordingFeatureFlagIsEnabled();
}

uint64_t RCOverdubRecordingIsEnabled()
{
  return _RCOverdubRecordingIsEnabled();
}

uint64_t RCRecordingsDirectoryURL()
{
  return _RCRecordingsDirectoryURL();
}

uint64_t RCSaveAsNewFeatureFlagIsEnabled()
{
  return _RCSaveAsNewFeatureFlagIsEnabled();
}

uint64_t RCStereoRecordingIsAvailable()
{
  return _RCStereoRecordingIsAvailable();
}

uint64_t RCSupportsDebugAODLogs()
{
  return _RCSupportsDebugAODLogs();
}

uint64_t RCSupportsDebugAODOverlay()
{
  return _RCSupportsDebugAODOverlay();
}

uint64_t RCTimeRangeConstrainTime()
{
  return _RCTimeRangeConstrainTime();
}

uint64_t RCTimeRangeContainsRange()
{
  return _RCTimeRangeContainsRange();
}

uint64_t RCTimeRangeContainsTime()
{
  return _RCTimeRangeContainsTime();
}

uint64_t RCTimeRangeDelta()
{
  return _RCTimeRangeDelta();
}

uint64_t RCTimeRangeDeltaWithExactPrecision()
{
  return _RCTimeRangeDeltaWithExactPrecision();
}

uint64_t RCTimeRangeDeltaWithUIPrecision()
{
  return _RCTimeRangeDeltaWithUIPrecision();
}

uint64_t RCTimeRangeEqualToTimeRange()
{
  return _RCTimeRangeEqualToTimeRange();
}

uint64_t RCTimeRangeFromCMTimeRange()
{
  return _RCTimeRangeFromCMTimeRange();
}

uint64_t RCTimeRangeGetMidTime()
{
  return _RCTimeRangeGetMidTime();
}

uint64_t RCTimeRangeIntersectTimeRange()
{
  return _RCTimeRangeIntersectTimeRange();
}

uint64_t RCTimeRangeIntersectsRange()
{
  return _RCTimeRangeIntersectsRange();
}

uint64_t RCTimeRangeMake()
{
  return _RCTimeRangeMake();
}

uint64_t RCTranscribeAllAudioTracks()
{
  return _RCTranscribeAllAudioTracks();
}

uint64_t RCTranscriptionFeatureFlagIsEnabled()
{
  return _RCTranscriptionFeatureFlagIsEnabled();
}

uint64_t RPTGetBoundsForView()
{
  return _RPTGetBoundsForView();
}

uint64_t SBSIsSystemApertureAvailable()
{
  return _SBSIsSystemApertureAvailable();
}

uint64_t UIAXTimeStringForDuration()
{
  return _UIAXTimeStringForDuration();
}

CGRect UIAccessibilityConvertFrameToScreenCoordinates(CGRect rect, UIView *view)
{
  return _UIAccessibilityConvertFrameToScreenCoordinates(rect, view);
}

BOOL UIAccessibilityIsInvertColorsEnabled(void)
{
  return _UIAccessibilityIsInvertColorsEnabled();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return _UIAccessibilityIsVoiceOverRunning();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

uint64_t UIAnimationDragCoefficient()
{
  return _UIAnimationDragCoefficient();
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs)
{
  return _UIContentSizeCategoryCompareToCategory(lhs, rhs);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return _UIContentSizeCategoryIsAccessibilityCategory(category);
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

void UIGraphicsPopContext(void)
{
}

void UIGraphicsPushContext(CGContextRef context)
{
}

uint64_t UIRectCenteredIntegralRect()
{
  return _UIRectCenteredIntegralRect();
}

uint64_t UIRectCenteredYInRectScale()
{
  return _UIRectCenteredYInRectScale();
}

uint64_t UIRectIntegralWithScale()
{
  return _UIRectIntegralWithScale();
}

uint64_t VMAudioWriteDelay()
{
  return _VMAudioWriteDelay();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _LSVersionNumberCompare()
{
  return __LSVersionNumberCompare();
}

uint64_t _LSVersionNumberGetMajorComponent()
{
  return __LSVersionNumberGetMajorComponent();
}

uint64_t _LSVersionNumberMakeWithString()
{
  return __LSVersionNumberMakeWithString();
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

uint64_t _UISheetMinimumTopInset()
{
  return __UISheetMinimumTopInset();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return std::logic_error::logic_error(this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return std::bad_array_new_length::bad_array_new_length(this);
}

void std::terminate(void)
{
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return ___cxa_allocate_exception(thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return ___cxa_begin_catch(a1);
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return ___maskrune(a1, a2);
}

int __sprintf_chk(char *a1, int a2, size_t a3, const char *a4, ...)
{
  return ___sprintf_chk(a1, a2, a3, a4);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return _dispatch_walltime(when, delta);
}

void exit(int a1)
{
}

long double exp2(long double __x)
{
  return _exp2(__x);
}

void free(void *a1)
{
}

long double log2(long double __x)
{
  return _log2(__x);
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

char *__cdecl mach_error_string(mach_error_t error_value)
{
  return _mach_error_string(error_value);
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return _mach_timebase_info(info);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

long double modf(long double __x, long double *__y)
{
  return _modf(__x, __y);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return _os_unfair_lock_trylock(lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

long double pow(long double __x, long double __y)
{
  return _pow(__x, __y);
}

float powf(float a1, float a2)
{
  return _powf(a1, a2);
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return _pthread_mutex_destroy(a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return _pthread_mutex_init(a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return _pthread_mutex_lock(a1);
}

int pthread_mutex_trylock(pthread_mutex_t *a1)
{
  return _pthread_mutex_trylock(a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return _pthread_mutex_unlock(a1);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return _swift_continuation_throwingResumeWithError();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

void vDSP_maxv(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Length __N)
{
}

void vDSP_vabs(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

kern_return_t vm_allocate(vm_map_t target_task, vm_address_t *address, vm_size_t size, int flags)
{
  return _vm_allocate(target_task, address, size, flags);
}

kern_return_t vm_deallocate(vm_map_t target_task, vm_address_t address, vm_size_t size)
{
  return _vm_deallocate(target_task, address, size);
}

kern_return_t vm_remap(vm_map_t target_task, vm_address_t *target_address, vm_size_t size, vm_address_t mask, int flags, vm_map_t src_task, vm_address_t src_address, BOOLean_t copy, vm_prot_t *cur_protection, vm_prot_t *max_protection, vm_inherit_t inheritance)
{
  return _vm_remap(target_task, target_address, size, mask, flags, src_task, src_address, copy, cur_protection, max_protection, inheritance);
}

id objc_msgSend_AUAudioUnit(void *a1, const char *a2, ...)
{
  return _[a1 AUAudioUnit];
}

id objc_msgSend_AVFileTypeIdentifierForFileExtension_(void *a1, const char *a2, ...)
{
  return [a1 AVFileTypeIdentifierForFileExtension:];
}

id objc_msgSend_AVOutputURL(void *a1, const char *a2, ...)
{
  return _[a1 AVOutputURL];
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _[a1 CGPath];
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _[a1 CGRectValue];
}

id objc_msgSend_IOBufferDuration(void *a1, const char *a2, ...)
{
  return _[a1 IOBufferDuration];
}

id objc_msgSend_SBUISA_standardInteritemPadding(void *a1, const char *a2, ...)
{
  return [a1 SBUISA_standardInteritemPadding];
}

id objc_msgSend_SBUISA_systemApertureLegibleContentLayoutMarginsGuide(void *a1, const char *a2, ...)
{
  return [a1 SBUISA_systemApertureLegibleContentLayoutMarginsGuide];
}

id objc_msgSend_SBUISA_systemApertureObstructedAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return [a1 SBUISA_systemApertureObstructedAreaLayoutGuide];
}

id objc_msgSend_SBUISA_systemApertureTrailingConcentricContentLayoutGuide(void *a1, const char *a2, ...)
{
  return [a1 SBUISA_systemApertureTrailingConcentricContentLayoutGuide];
}

id objc_msgSend_SBUI_isHostedBySystemAperture(void *a1, const char *a2, ...)
{
  return [a1 SBUI_isHostedBySystemAperture];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:];
}

id objc_msgSend_URLContexts(void *a1, const char *a2, ...)
{
  return _[a1 URLContexts];
}

id objc_msgSend_URLForDirectory_inDomain_appropriateForURL_create_error_(void *a1, const char *a2, ...)
{
  return [a1 URLForDirectory:inDomain:appropriateForURL:create:error:];
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return [a1 URLForResource:withExtension:];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend___activateAudioSessionOnQueue_recording_overdubbing_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__activateAudioSessionOnQueue:recording:overdubbing:error:");
}

id objc_msgSend___animateRecordingCardDetentTransitionForSheetPresentationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__animateRecordingCardDetentTransitionForSheetPresentationController:");
}

id objc_msgSend___eraseSecondLayerInComposition_outputFragment_audioSettings_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 __eraseSecondLayerInComposition:outputFragment:audioSettings:completionBlock:];
}

id objc_msgSend___rc_folderType(void *a1, const char *a2, ...)
{
  return [a1 __rc_folderType];
}

id objc_msgSend___refreshRecording_composition_controller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__refreshRecording:composition:controller:");
}

id objc_msgSend___shouldDisplayBeginTimeText(void *a1, const char *a2, ...)
{
  return [a1 __shouldDisplayBeginTimeText];
}

id objc_msgSend__accessRecording_withBlock_(void *a1, const char *a2, ...)
{
  return [a1 _accessRecording:withBlock:];
}

id objc_msgSend__accessibilityCirclePathBasedOnBoundsWidth(void *a1, const char *a2, ...)
{
  return _[a1 _accessibilityCirclePathBasedOnBoundsWidth];
}

id objc_msgSend__accessibilityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _accessibilityIdentifier];
}

id objc_msgSend__accessibilityIncreaseValue_bySegment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityIncreaseValue:bySegment:");
}

id objc_msgSend__accessibilityIncreaseValue_isThreeFingerScroll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityIncreaseValue:isThreeFingerScroll:");
}

id objc_msgSend__accessibilityLabel(void *a1, const char *a2, ...)
{
  return _[a1 _accessibilityLabel];
}

id objc_msgSend__accessibilityLabelTextForState_(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityLabelTextForState:];
}

id objc_msgSend__accessibilityRemoveValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityRemoveValueForKey:];
}

id objc_msgSend__accessibilitySetInterfaceStyleIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilitySetInterfaceStyleIntent:");
}

id objc_msgSend__accessibilitySetRetainedValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilitySetRetainedValue:forKey:");
}

id objc_msgSend__accessibilityValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityValueForKey:];
}

id objc_msgSend__actionWithContentViewController_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionWithContentViewController:style:handler:");
}

id objc_msgSend__activateApplication(void *a1, const char *a2, ...)
{
  return _[a1 _activateApplication];
}

id objc_msgSend__activateAudioSessionForPlaybackWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 _activateAudioSessionForPlaybackWithCompletion:];
}

id objc_msgSend__activateAudioSessionForRecording_overdubbing_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateAudioSessionForRecording:overdubbing:completion:");
}

id objc_msgSend__activateAudioSessionForRecordingWithController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateAudioSessionForRecordingWithController:completion:");
}

id objc_msgSend__activeSliceFrame(void *a1, const char *a2, ...)
{
  return _[a1 _activeSliceFrame];
}

id objc_msgSend__addCollectionViewCellToCellsMapTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCollectionViewCellToCellsMapTable:");
}

id objc_msgSend__addCommandTarget_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCommandTarget:withHandler:");
}

id objc_msgSend__addLabelsToWaveformOverview_containerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLabelsToWaveformOverview:containerView:");
}

id objc_msgSend__addRecordingObservations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addRecordingObservations:");
}

id objc_msgSend__addSubviewsOfView_includingTopLevelView_toMutableArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubviewsOfView:includingTopLevelView:toMutableArray:");
}

id objc_msgSend__addVersionOfItemAtURL_withContentsOfURL_options_temporaryStorageIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVersionOfItemAtURL:withContentsOfURL:options:temporaryStorageIdentifier:error:");
}

id objc_msgSend__addViewsAsSubviewsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _addViewsAsSubviewsIfNeeded];
}

id objc_msgSend__addWaveformViewToHostingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addWaveformViewToHostingView:");
}

id objc_msgSend__adjustBackgroundColorForDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustBackgroundColorForDisplayStyle:");
}

id objc_msgSend__adjustCurrentTrimOperationUndoCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustCurrentTrimOperationUndoCount:");
}

id objc_msgSend__adjustForHostViewHeight(void *a1, const char *a2, ...)
{
  return _[a1 _adjustForHostViewHeight];
}

id objc_msgSend__adjustTraitOverridesForDisplayStyle_(void *a1, const char *a2, ...)
{
  return [_adjustTraitOverridesForDisplayStyle:];
}

id objc_msgSend__advanceToOverThresholdState(void *a1, const char *a2, ...)
{
  return _[a1 _advanceToOverThresholdState];
}

id objc_msgSend__alertControllerWithTitle_message_isDestructive_preferredStyle_source_handler_actionTitle_cancelHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alertControllerWithTitle:message:isDestructive:preferredStyle:source:handler:actionTitle:cancelHandler:");
}

id objc_msgSend__alignRecordingControlToCenter(void *a1, const char *a2, ...)
{
  return _[a1 _alignRecordingControlToCenter];
}

id objc_msgSend__alignRecordingControlToLeft(void *a1, const char *a2, ...)
{
  return _[a1 _alignRecordingControlToLeft];
}

id objc_msgSend__allRecordingsIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 _allRecordingsIndexPath];
}

id objc_msgSend__animateContentUnavailableUpdateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateContentUnavailableUpdateWithCompletion:");
}

id objc_msgSend__animateLabel_textColor_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateLabel:textColor:duration:");
}

id objc_msgSend__animateTextField_textColor_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateTextField:textColor:duration:");
}

id objc_msgSend__animateTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateTouch:");
}

id objc_msgSend__applyDimmingColorToProgressOverlay(void *a1, const char *a2, ...)
{
  return _[a1 _applyDimmingColorToProgressOverlay];
}

id objc_msgSend__applyFixedOverviewWaveformViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _applyFixedOverviewWaveformViewConstraints];
}

id objc_msgSend__applyLabelConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _applyLabelConfiguration];
}

id objc_msgSend__askUserForPermissionToUseCloudKit(void *a1, const char *a2, ...)
{
  return _[a1 _askUserForPermissionToUseCloudKit];
}

id objc_msgSend__assetForRecording_error_(void *a1, const char *a2, ...)
{
  return [a1 _assetForRecording:error:];
}

id objc_msgSend__assignIVarsFromStyleProvider(void *a1, const char *a2, ...)
{
  return _[a1 _assignIVarsFromStyleProvider];
}

id objc_msgSend__attributedStringForRecordingsCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedStringForRecordingsCount:");
}

id objc_msgSend__attributes(void *a1, const char *a2, ...)
{
  return _[a1 _attributes];
}

id objc_msgSend__audioContentOrDurationDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_audioContentOrDurationDidChange:");
}

id objc_msgSend__axAnnounceDidSetEnhanced_(void *a1, const char *a2, ...)
{
  return [a1 _axAnnounceDidSetEnhanced:];
}

id objc_msgSend__axIsShowingSelectionBars(void *a1, const char *a2, ...)
{
  return _[a1 _axIsShowingSelectionBars];
}

id objc_msgSend__backgroundColorAnimation(void *a1, const char *a2, ...)
{
  return _[a1 _backgroundColorAnimation];
}

id objc_msgSend__backgroundColorToUse(void *a1, const char *a2, ...)
{
  return _[a1 _backgroundColorToUse];
}

id objc_msgSend__backgroundConfigurationForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backgroundConfigurationForState:");
}

id objc_msgSend__backlightLuminance(void *a1, const char *a2, ...)
{
  return _[a1 _backlightLuminance];
}

id objc_msgSend__backlightSceneEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 _backlightSceneEnvironment];
}

id objc_msgSend__beginFileTranscriptionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _beginFileTranscriptionIfNeeded];
}

id objc_msgSend__beginOrResumeCaptureSessionWithReplace_trackIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginOrResumeCaptureSessionWithReplace:trackIndex:");
}

id objc_msgSend__beginScrubbing(void *a1, const char *a2, ...)
{
  return _[a1 _beginScrubbing];
}

id objc_msgSend__beginScrubbingWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginScrubbingWithValue:");
}

id objc_msgSend__beginSelectionEditingModeForInsertMode_(void *a1, const char *a2, ...)
{
  return [a1 _beginSelectionEditingModeForInsertMode:];
}

id objc_msgSend__beginTimeRectWithSizedTextLayer_isOffsetForThumb_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginTimeRectWithSizedTextLayer:isOffsetForThumb:");
}

id objc_msgSend__beginTracking(void *a1, const char *a2, ...)
{
  return _[a1 _beginTracking];
}

id objc_msgSend__beginTrackingSelectionBar_selectionBarType_withTouch_(void *a1, const char *a2, ...)
{
  return [a1 _beginTrackingSelectionBar:selectionBarType:withTouch:];
}

id objc_msgSend__bottomElementsToHide(void *a1, const char *a2, ...)
{
  return _[a1 _bottomElementsToHide];
}

id objc_msgSend__bottomPalette(void *a1, const char *a2, ...)
{
  return _[a1 _bottomPalette];
}

id objc_msgSend__bufferRange(void *a1, const char *a2, ...)
{
  return _[a1 _bufferRange];
}

id objc_msgSend__buildUndoStackCache(void *a1, const char *a2, ...)
{
  return _[a1 _buildUndoStackCache];
}

id objc_msgSend__builtInFolderSectionTopPadding(void *a1, const char *a2, ...)
{
  return _[a1 _builtInFolderSectionTopPadding];
}

id objc_msgSend__builtInSectionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _builtInSectionIdentifier];
}

id objc_msgSend__buttonTextForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonTextForState:");
}

id objc_msgSend__cachedItemsForActivityTypes(void *a1, const char *a2, ...)
{
  return _[a1 _cachedItemsForActivityTypes];
}

id objc_msgSend__cachedSubjectsForActivityTypes(void *a1, const char *a2, ...)
{
  return _[a1 _cachedSubjectsForActivityTypes];
}

id objc_msgSend__cachedThumbnailsForActivityTypes(void *a1, const char *a2, ...)
{
  return _[a1 _cachedThumbnailsForActivityTypes];
}

id objc_msgSend__calculateAndCommitLocation_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateAndCommitLocation:force:");
}

id objc_msgSend__canDelete(void *a1, const char *a2, ...)
{
  return _[a1 _canDelete];
}

id objc_msgSend__canDuplicate(void *a1, const char *a2, ...)
{
  return _[a1 _canDuplicate];
}

id objc_msgSend__canHandleCustomAction_withSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canHandleCustomAction:withSender:");
}

id objc_msgSend__cancelFileTranscription(void *a1, const char *a2, ...)
{
  return _[a1 _cancelFileTranscription];
}

id objc_msgSend__cancelTrim(void *a1, const char *a2, ...)
{
  return _[a1 _cancelTrim];
}

id objc_msgSend__cardDismissalRequiredForSwitchToIdleFromActivityType_subActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cardDismissalRequiredForSwitchToIdleFromActivityType:subActivityType:");
}

id objc_msgSend__cardSheetOptionsForDefaultRecordingView(void *a1, const char *a2, ...)
{
  return _[a1 _cardSheetOptionsForDefaultRecordingView];
}

id objc_msgSend__cardSheetOptionsForLargeDetentOnly(void *a1, const char *a2, ...)
{
  return _[a1 _cardSheetOptionsForLargeDetentOnly];
}

id objc_msgSend__cellAccessoriesWithSwitchState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellAccessoriesWithSwitchState:");
}

id objc_msgSend__cellForGeneralSettingsSectionAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForGeneralSettingsSectionAtIndexPath:");
}

id objc_msgSend__cellForMultitrackSettingsSectionAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForMultitrackSettingsSectionAtIndexPath:");
}

id objc_msgSend__cellForPlaybackSpeedSectionAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForPlaybackSpeedSectionAtIndexPath:");
}

id objc_msgSend__circlePath(void *a1, const char *a2, ...)
{
  return _[a1 _circlePath];
}

id objc_msgSend__classSpecificInit(void *a1, const char *a2, ...)
{
  return _[a1 _classSpecificInit];
}

id objc_msgSend__classSpecificLayout(void *a1, const char *a2, ...)
{
  return _[a1 _classSpecificLayout];
}

id objc_msgSend__classSpecificLoadView(void *a1, const char *a2, ...)
{
  return _[a1 _classSpecificLoadView];
}

id objc_msgSend__classSpecificPrepareToPresent(void *a1, const char *a2, ...)
{
  return _[a1 _classSpecificPrepareToPresent];
}

id objc_msgSend__classSpecificReset(void *a1, const char *a2, ...)
{
  return _[a1 _classSpecificReset];
}

id objc_msgSend__classSpecificSetDisplayStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_classSpecificSetDisplayStyle:");
}

id objc_msgSend__classSpecificViewWillAppear(void *a1, const char *a2, ...)
{
  return _[a1 _classSpecificViewWillAppear];
}

id objc_msgSend__classSpecificViewWillDisappear(void *a1, const char *a2, ...)
{
  return _[a1 _classSpecificViewWillDisappear];
}

id objc_msgSend__cleanUpManagedTemporaryDirectories(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpManagedTemporaryDirectories];
}

id objc_msgSend__clearPlaybackInAudioPlayer_(void *a1, const char *a2, ...)
{
  return [a1 _clearPlaybackInAudioPlayer:];
}

id objc_msgSend__clearRenderingState(void *a1, const char *a2, ...)
{
  return _[a1 _clearRenderingState];
}

id objc_msgSend__clearSecondaryAttributedText(void *a1, const char *a2, ...)
{
  return _[a1 _clearSecondaryAttributedText];
}

id objc_msgSend__clearStaleTouches(void *a1, const char *a2, ...)
{
  return _[a1 _clearStaleTouches];
}

id objc_msgSend__clearSublayers(void *a1, const char *a2, ...)
{
  return _[a1 _clearSublayers];
}

id objc_msgSend__clearTemporaryAudioFilesOnce(void *a1, const char *a2, ...)
{
  return _[a1 _clearTemporaryAudioFilesOnce];
}

id objc_msgSend__clearTranscriptView(void *a1, const char *a2, ...)
{
  return _[a1 _clearTranscriptView];
}

id objc_msgSend__clearTrimModeUndoStack(void *a1, const char *a2, ...)
{
  return _[a1 _clearTrimModeUndoStack];
}

id objc_msgSend__clearUndoStackCache(void *a1, const char *a2, ...)
{
  return _[a1 _clearUndoStackCache];
}

id objc_msgSend__closestAllowedSampleRate_allowedSampleRates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_closestAllowedSampleRate:allowedSampleRates:");
}

id objc_msgSend__cloudSyncPromptNeedsShowing(void *a1, const char *a2, ...)
{
  return _[a1 _cloudSyncPromptNeedsShowing];
}

id objc_msgSend__collapsePresentedCompactRecordingCard(void *a1, const char *a2, ...)
{
  return _[a1 _collapsePresentedCompactRecordingCard];
}

id objc_msgSend__collapseVertically(void *a1, const char *a2, ...)
{
  return _[a1 _collapseVertically];
}

id objc_msgSend__collectionViewCellClass(void *a1, const char *a2, ...)
{
  return _[a1 _collectionViewCellClass];
}

id objc_msgSend__collectionViewHeaderCellClass(void *a1, const char *a2, ...)
{
  return _[a1 _collectionViewHeaderCellClass];
}

id objc_msgSend__color_adjustedForDisplayMode_traitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_color:adjustedForDisplayMode:traitCollection:");
}

id objc_msgSend__colorSliceImageWithColor_height_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_colorSliceImageWithColor:height:");
}

id objc_msgSend__commitEditing(void *a1, const char *a2, ...)
{
  return _[a1 _commitEditing];
}

id objc_msgSend__commitValue(void *a1, const char *a2, ...)
{
  return _[a1 _commitValue];
}

id objc_msgSend__commitValue_(void *a1, const char *a2, ...)
{
  return [a1 _commitValue:];
}

id objc_msgSend__commonInit(void *a1, const char *a2, ...)
{
  return _[a1 _commonInit];
}

id objc_msgSend__commonInitWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 _commonInitWithDelegate:];
}

id objc_msgSend__commonInitWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 _commonInitWithStyle:];
}

id objc_msgSend__compactDisplayStyle(void *a1, const char *a2, ...)
{
  return _[a1 _compactDisplayStyle];
}

id objc_msgSend__configurationUpdateHandlerWithTitle_(void *a1, const char *a2, ...)
{
  return [a1 _configurationUpdateHandlerWithTitle:];
}

id objc_msgSend__configureAudioSessionForBTSmartRoutingConsideration_isRecording_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureAudioSessionForBTSmartRoutingConsideration:isRecording:");
}

id objc_msgSend__configureAudioSessionPrefersNoInterruptionsFromSystemAlerts_isRecording_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureAudioSessionPrefersNoInterruptionsFromSystemAlerts:isRecording:");
}

id objc_msgSend__configureAudioSessionStereoInput_isRecording_isOverdubbing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureAudioSessionStereoInput:isRecording:isOverdubbing:");
}

id objc_msgSend__configureAudioSettingsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _configureAudioSettingsIfNeeded];
}

id objc_msgSend__configureCell_usingDisplayModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCell:usingDisplayModel:");
}

id objc_msgSend__configureCell_withFolderDisplayModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCell:withFolderDisplayModel:");
}

id objc_msgSend__configureDSPGraphsWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 _configureDSPGraphsWithFormat:];
}

id objc_msgSend__configureToggleButton_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureToggleButton:action:");
}

id objc_msgSend__configureTranscriptViewForLiveTranscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureTranscriptViewForLiveTranscription:");
}

id objc_msgSend__configureWaveformViewWithDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureWaveformViewWithDataSource:");
}

id objc_msgSend__configureWaveformViewWithDataSources_secondTrackDataSource_overviewDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureWaveformViewWithDataSources:secondTrackDataSource:overviewDataSource:");
}

id objc_msgSend__constrainBottomControlsContainerViewToWindowIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _constrainBottomControlsContainerViewToWindowIfNeeded];
}

id objc_msgSend__constrainCenterContentContainerViewToWindowIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _constrainCenterContentContainerViewToWindowIfNeeded];
}

id objc_msgSend__constrainDescriptionContainerViewToVirtualNavigationBar(void *a1, const char *a2, ...)
{
  return _[a1 _constrainDescriptionContainerViewToVirtualNavigationBar];
}

id objc_msgSend__constrainTimeLabelTopToObstructedAreaBottomIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _constrainTimeLabelTopToObstructedAreaBottomIfNeeded];
}

id objc_msgSend__constrainVirtualNavigationToolbarToWindowIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _constrainVirtualNavigationToolbarToWindowIfNeeded];
}

id objc_msgSend__constraintsForCollapsedModeWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constraintsForCollapsedModeWithState:");
}

id objc_msgSend__constraintsForExpandedModeInBanner(void *a1, const char *a2, ...)
{
  return _[a1 _constraintsForExpandedModeInBanner];
}

id objc_msgSend__constraintsForExpandedModeInDynamicIsland(void *a1, const char *a2, ...)
{
  return _[a1 _constraintsForExpandedModeInDynamicIsland];
}

id objc_msgSend__constraintsForExpandedModeWithPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constraintsForExpandedModeWithPresentationStyle:");
}

id objc_msgSend__constraintsForMinimalModeCheckmarkState(void *a1, const char *a2, ...)
{
  return _[a1 _constraintsForMinimalModeCheckmarkState];
}

id objc_msgSend__constraintsForMinimalModeWaveformState(void *a1, const char *a2, ...)
{
  return _[a1 _constraintsForMinimalModeWaveformState];
}

id objc_msgSend__constraintsForMinimalModeWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constraintsForMinimalModeWithState:");
}

id objc_msgSend__contentControllerForId_(void *a1, const char *a2, ...)
{
  return [_contentControllerForId:];
}

id objc_msgSend__continueUserActivity_(void *a1, const char *a2, ...)
{
  return [a1 _continueUserActivity:];
}

id objc_msgSend__copyFileIntoImportFilesTemporaryDirectory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyFileIntoImportFilesTemporaryDirectory:error:");
}

id objc_msgSend__copyResourcesForRecording_toDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyResourcesForRecording:toDirectory:");
}

id objc_msgSend__countOfUserFolders(void *a1, const char *a2, ...)
{
  return _[a1 _countOfUserFolders];
}

id objc_msgSend__createAndConfigurePlayer(void *a1, const char *a2, ...)
{
  return _[a1 _createAndConfigurePlayer];
}

id objc_msgSend__createCellAccessories(void *a1, const char *a2, ...)
{
  return _[a1 _createCellAccessories];
}

id objc_msgSend__createCollectionViewLayout(void *a1, const char *a2, ...)
{
  return _[a1 _createCollectionViewLayout];
}

id objc_msgSend__createConstraintsForLayoutMode_platterState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConstraintsForLayoutMode:platterState:");
}

id objc_msgSend__createCurrentTimeLabel(void *a1, const char *a2, ...)
{
  return _[a1 _createCurrentTimeLabel];
}

id objc_msgSend__createDiffableDataSource(void *a1, const char *a2, ...)
{
  return _[a1 _createDiffableDataSource];
}

id objc_msgSend__createManagedTemporaryDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _createManagedTemporaryDirectory];
}

id objc_msgSend__createMoreOptionsMenu_shouldShowTranscriptionOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createMoreOptionsMenu:shouldShowTranscriptionOption:");
}

id objc_msgSend__createOverlayLayerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createOverlayLayerIfNeeded];
}

id objc_msgSend__createPlaybackSettingsButton(void *a1, const char *a2, ...)
{
  return _[a1 _createPlaybackSettingsButton];
}

id objc_msgSend__createPollingBlock_(void *a1, const char *a2, ...)
{
  return [a1 _createPollingBlock:];
}

id objc_msgSend__createProgressOverlay(void *a1, const char *a2, ...)
{
  return _[a1 _createProgressOverlay];
}

id objc_msgSend__createQueue_(void *a1, const char *a2, ...)
{
  return [a1 _createQueue:];
}

id objc_msgSend__createShuttleBarIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createShuttleBarIfNeeded];
}

id objc_msgSend__createSpringAnimationWithKeyPath_basedOnPropertiesFromSpringAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSpringAnimationWithKeyPath:basedOnPropertiesFromSpringAnimation:");
}

id objc_msgSend__createStopButton(void *a1, const char *a2, ...)
{
  return _[a1 _createStopButton];
}

id objc_msgSend__createSublayersIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createSublayersIfNeeded];
}

id objc_msgSend__createSwipeActionWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSwipeActionWithConfiguration:");
}

id objc_msgSend__createTemporaryDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _createTemporaryDirectory];
}

id objc_msgSend__createTickPathsForTrackRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createTickPathsForTrackRect:");
}

id objc_msgSend__createTimeStretch_maxFramesPerRender_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createTimeStretch:maxFramesPerRender:error:");
}

id objc_msgSend__createTrackPathsForTrackRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createTrackPathsForTrackRect:");
}

id objc_msgSend__createTranscriptionButton(void *a1, const char *a2, ...)
{
  return _[a1 _createTranscriptionButton];
}

id objc_msgSend__currentActiveFolder(void *a1, const char *a2, ...)
{
  return _[a1 _currentActiveFolder];
}

id objc_msgSend__currentTimeDisplayOptions(void *a1, const char *a2, ...)
{
  return _[a1 _currentTimeDisplayOptions];
}

id objc_msgSend__currentTimeDisplayOptionsIgnoringSelectionOverlayState_(void *a1, const char *a2, ...)
{
  return [_currentTimeDisplayOptionsIgnoringSelectionOverlayState:];
}

id objc_msgSend__currentTimeLabelTightFrame(void *a1, const char *a2, ...)
{
  return _[a1 _currentTimeLabelTightFrame];
}

id objc_msgSend__customBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _customBackgroundColor];
}

id objc_msgSend__customButtonConfigurationUpdateHandler(void *a1, const char *a2, ...)
{
  return _[a1 _customButtonConfigurationUpdateHandler];
}

id objc_msgSend__dataSourceSupportingStereo(void *a1, const char *a2, ...)
{
  return _[a1 _dataSourceSupportingStereo];
}

id objc_msgSend__dateEntriesForRecordingStartTime_lastRecordingTime_elapsedTimeAtRecordingStart_recordingDurationAtRecordingStart_timelineDateInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dateEntriesForRecordingStartTime:lastRecordingTime:elapsedTimeAtRecordingStart:recordingDurationAtRecordingStart:timelineDateInterval:");
}

id objc_msgSend__deactivateAudioSessionAsync_(void *a1, const char *a2, ...)
{
  return [a1 _deactivateAudioSessionAsync];
}

id objc_msgSend__defaultCellAccessories(void *a1, const char *a2, ...)
{
  return _[a1 _defaultCellAccessories];
}

id objc_msgSend__defaultDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _defaultDateFormatter];
}

id objc_msgSend__defaultStartingValue(void *a1, const char *a2, ...)
{
  return _[a1 _defaultStartingValue];
}

id objc_msgSend__delayedSelectRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delayedSelectRecordingWithUUID:");
}

id objc_msgSend__deleteRecordingsWithUUIDs_isRecover_(void *a1, const char *a2, ...)
{
  return [a1 _deleteRecordingsWithUUIDs:isRecover:];
}

id objc_msgSend__deleteSwipeActionForUUID_shouldExecuteCompletionBeforeAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteSwipeActionForUUID:shouldExecuteCompletionBeforeAction:");
}

id objc_msgSend__didFetchPlaceInferences_location_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didFetchPlaceInferences:location:error:");
}

id objc_msgSend__didToggleSwitch(void *a1, const char *a2, ...)
{
  return _[a1 _didToggleSwitch];
}

id objc_msgSend__didUpdateDisplayableTime(void *a1, const char *a2, ...)
{
  return _[a1 _didUpdateDisplayableTime];
}

id objc_msgSend__dimRecordingDescriptionView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dimRecordingDescriptionView:animated:");
}

id objc_msgSend__discardRedoVersions(void *a1, const char *a2, ...)
{
  return _[a1 _discardRedoVersions];
}

id objc_msgSend__discardSilenceFrames(void *a1, const char *a2, ...)
{
  return _[a1 _discardSilenceFrames];
}

id objc_msgSend__dismissCardView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissCardView:");
}

id objc_msgSend__dismissShareMemoVCIfNeededForDeletedUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissShareMemoVCIfNeededForDeletedUUIDs:");
}

id objc_msgSend__displayModeForPrimaryColumnVisible(void *a1, const char *a2, ...)
{
  return _[a1 _displayModeForPrimaryColumnVisible];
}

id objc_msgSend__displayOptionForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayOptionForView:");
}

id objc_msgSend__displaySize(void *a1, const char *a2, ...)
{
  return _[a1 _displaySize];
}

id objc_msgSend__doMoveToFolder_(void *a1, const char *a2, ...)
{
  return [a1 _doMoveToFolder:];
}

id objc_msgSend__doRestyle(void *a1, const char *a2, ...)
{
  return _[a1 _doRestyle];
}

id objc_msgSend__doShare_(void *a1, const char *a2, ...)
{
  return [a1 _doShare:];
}

id objc_msgSend__doShowTranscriptionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doShowTranscriptionView:");
}

id objc_msgSend__doingSomeKindOfCapture(void *a1, const char *a2, ...)
{
  return _[a1 _doingSomeKindOfCapture];
}

id objc_msgSend__doneButtonSidePadding(void *a1, const char *a2, ...)
{
  return _[a1 _doneButtonSidePadding];
}

id objc_msgSend__draw_(void *a1, const char *a2, ...)
{
  return [a1 _draw:];
}

id objc_msgSend__drawBezierPaths_tinted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_drawBezierPaths:tinted:");
}

id objc_msgSend__dropLocalRecordingsWithUUIDArray_intoDestinationFolder_fromFolderType_fromFolderUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dropLocalRecordingsWithUUIDArray:intoDestinationFolder:fromFolderType:fromFolderUUID:");
}

id objc_msgSend__dropView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dropView:");
}

id objc_msgSend__duplicateRecordingWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_duplicateRecordingWithID:");
}

id objc_msgSend__duration(void *a1, const char *a2, ...)
{
  return _[a1 _duration];
}

id objc_msgSend__dynamicLiveWaveformColorForDisplayMode_traitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dynamicLiveWaveformColorForDisplayMode:traitCollection:");
}

id objc_msgSend__edgeInsetsForChildViewController_insetsAreAbsolute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_edgeInsetsForChildViewController:insetsAreAbsolute:");
}

id objc_msgSend__editRecording_editBlock_controller_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editRecording:editBlock:controller:error:");
}

id objc_msgSend__editRecording_error_(void *a1, const char *a2, ...)
{
  return [a1 _editRecording:error:];
}

id objc_msgSend__endAccessSession(void *a1, const char *a2, ...)
{
  return _[a1 _endAccessSession];
}

id objc_msgSend__endDescriptionViewTextEditing(void *a1, const char *a2, ...)
{
  return _[a1 _endDescriptionViewTextEditing];
}

id objc_msgSend__endSelectionEditingMode(void *a1, const char *a2, ...)
{
  return _[a1 _endSelectionEditingMode];
}

id objc_msgSend__endTimeRectWithSizedTextLayer_isOffsetForThumb_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endTimeRectWithSizedTextLayer:isOffsetForThumb:");
}

id objc_msgSend__enterTrimMode(void *a1, const char *a2, ...)
{
  return _[a1 _enterTrimMode];
}

id objc_msgSend__eraseDeletedRecordingsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _eraseDeletedRecordingsIfNecessary];
}

id objc_msgSend__eraseSwipeActionForUUID_shouldExecuteCompletionBeforeAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eraseSwipeActionForUUID:shouldExecuteCompletionBeforeAction:");
}

id objc_msgSend__errorIsRecordingUnavailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorIsRecordingUnavailable:");
}

id objc_msgSend__estimateTrimDeleteButtonSizeForProposedSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_estimateTrimDeleteButtonSizeForProposedSize:");
}

id objc_msgSend__excessFrames(void *a1, const char *a2, ...)
{
  return _[a1 _excessFrames];
}

id objc_msgSend__expandPresentedCompactRecordingCard(void *a1, const char *a2, ...)
{
  return _[a1 _expandPresentedCompactRecordingCard];
}

id objc_msgSend__expandVertically(void *a1, const char *a2, ...)
{
  return _[a1 _expandVertically];
}

id objc_msgSend__expectedNumberOfItems(void *a1, const char *a2, ...)
{
  return _[a1 _expectedNumberOfItems];
}

id objc_msgSend__favoriteSwipeAction_forUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_favoriteSwipeAction:forUUID:");
}

id objc_msgSend__fetchPlaceInferencesWithFidelityPolicy_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchPlaceInferencesWithFidelityPolicy:handler:");
}

id objc_msgSend__fetchRecording_recordingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchRecording:recordingController:");
}

id objc_msgSend__fetchedObjects(void *a1, const char *a2, ...)
{
  return _[a1 _fetchedObjects];
}

id objc_msgSend__fileTypeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _fileTypeIdentifier];
}

id objc_msgSend__fillPathAnimateEndForState_fromState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fillPathAnimateEndForState:fromState:");
}

id objc_msgSend__fillPathAnimateStartForState_fromState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fillPathAnimateStartForState:fromState:");
}

id objc_msgSend__finalizeRecording_controller_finalizationStrategy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finalizeRecording:controller:finalizationStrategy:");
}

id objc_msgSend__folderImageForFolderOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_folderImageForFolderOfType:");
}

id objc_msgSend__forceRenderingForBlurredStateChange(void *a1, const char *a2, ...)
{
  return _[a1 _forceRenderingForBlurredStateChange];
}

id objc_msgSend__forceUpdateCurrentTimeAndDuration(void *a1, const char *a2, ...)
{
  return _[a1 _forceUpdateCurrentTimeAndDuration];
}

id objc_msgSend__formattedDateStringFromDate_remainingTimeValid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedDateStringFromDate:remainingTimeValid:");
}

id objc_msgSend__frameForTimeMarkerView_(void *a1, const char *a2, ...)
{
  return [a1 _frameForTimeMarkerView:];
}

id objc_msgSend__genericAmplitudes(void *a1, const char *a2, ...)
{
  return _[a1 _genericAmplitudes];
}

id objc_msgSend__getInput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getInput:");
}

id objc_msgSend__getSquarePathPosition(void *a1, const char *a2, ...)
{
  return _[a1 _getSquarePathPosition];
}

id objc_msgSend__handleEditModeFooterAndNavigationItem(void *a1, const char *a2, ...)
{
  return _[a1 _handleEditModeFooterAndNavigationItem];
}

id objc_msgSend__handleNewFolder(void *a1, const char *a2, ...)
{
  return _[a1 _handleNewFolder];
}

id objc_msgSend__handleRecordingUnavailableError_(void *a1, const char *a2, ...)
{
  return [a1 _handleRecordingUnavailableError];
}

id objc_msgSend__handleSceneConnectionActions(void *a1, const char *a2, ...)
{
  return _[a1 _handleSceneConnectionActions];
}

id objc_msgSend__handleSpotlightSearchResults_forSearchString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSpotlightSearchResults:forSearchString:");
}

id objc_msgSend__hasCustomBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _hasCustomBackgroundColor];
}

id objc_msgSend__hasOuterRingLayer(void *a1, const char *a2, ...)
{
  return _[a1 _hasOuterRingLayer];
}

id objc_msgSend__headingText(void *a1, const char *a2, ...)
{
  return _[a1 _headingText];
}

id objc_msgSend__heightForAmplitude_(void *a1, const char *a2, ...)
{
  return [a1 _heightForAmplitude:];
}

id objc_msgSend__hideDefaultSliderViews(void *a1, const char *a2, ...)
{
  return _[a1 _hideDefaultSliderViews];
}

id objc_msgSend__hideNavigationBarIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _hideNavigationBarIfNeeded];
}

id objc_msgSend__hideStopButton(void *a1, const char *a2, ...)
{
  return _[a1 _hideStopButton];
}

id objc_msgSend__hideTimeLabel(void *a1, const char *a2, ...)
{
  return _[a1 _hideTimeLabel];
}

id objc_msgSend__hitSelectionForPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hitSelectionForPoint:");
}

id objc_msgSend__horizontalSizeClassFromSplitView(void *a1, const char *a2, ...)
{
  return _[a1 _horizontalSizeClassFromSplitView];
}

id objc_msgSend__imageForState_inStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageForState:inStyle:");
}

id objc_msgSend__inactiveSliceFrame(void *a1, const char *a2, ...)
{
  return _[a1 _inactiveSliceFrame];
}

id objc_msgSend__incrementForDirection_(void *a1, const char *a2, ...)
{
  return [a1 _incrementForDirection:];
}

id objc_msgSend__indexPathForEnhancedSwitch(void *a1, const char *a2, ...)
{
  return _[a1 _indexPathForEnhancedSwitch];
}

id objc_msgSend__indexPathForLayerMixSlider(void *a1, const char *a2, ...)
{
  return _[a1 _indexPathForLayerMixSlider];
}

id objc_msgSend__indexPathForPlaybackSpeedSlider(void *a1, const char *a2, ...)
{
  return _[a1 _indexPathForPlaybackSpeedSlider];
}

id objc_msgSend__indexPathForRemoveSilenceSwitch(void *a1, const char *a2, ...)
{
  return _[a1 _indexPathForRemoveSilenceSwitch];
}

id objc_msgSend__indexPathOfRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 _indexPathOfRecordingWithUUID:];
}

id objc_msgSend__initWithRecordingID_model_(void *a1, const char *a2, ...)
{
  return [a1 _initWithRecordingID:model:];
}

id objc_msgSend__initWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithStyle:");
}

id objc_msgSend__insertSpacingBetweenElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertSpacingBetweenElements:");
}

id objc_msgSend__interactionPath(void *a1, const char *a2, ...)
{
  return _[a1 _interactionPath];
}

id objc_msgSend__internalSelectionKnobRadius(void *a1, const char *a2, ...)
{
  return _[a1 _internalSelectionKnobRadius];
}

id objc_msgSend__isActionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isActionEnabled:");
}

id objc_msgSend__isBackgroundContextTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isBackgroundContextTransaction:");
}

id objc_msgSend__isCardStyle(void *a1, const char *a2, ...)
{
  return _[a1 _isCardStyle];
}

id objc_msgSend__isCompactWidth(void *a1, const char *a2, ...)
{
  return _[a1 _isCompactWidth];
}

id objc_msgSend__isCoreDataURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCoreDataURL:");
}

id objc_msgSend__isDownloadingAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 _isDownloadingAtIndex:];
}

id objc_msgSend__isIOSMac(void *a1, const char *a2, ...)
{
  return _[a1 _isIOSMac];
}

id objc_msgSend__isInsideForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isInsideForLocation:");
}

id objc_msgSend__isIpad(void *a1, const char *a2, ...)
{
  return _[a1 _isIpad];
}

id objc_msgSend__isIpadOrIOSMac(void *a1, const char *a2, ...)
{
  return _[a1 _isIpadOrIOSMac];
}

id objc_msgSend__isPortrait(void *a1, const char *a2, ...)
{
  return _[a1 _isPortrait];
}

id objc_msgSend__isPrimaryColumnVisible(void *a1, const char *a2, ...)
{
  return _[a1 _isPrimaryColumnVisible];
}

id objc_msgSend__isRecordingOrBlockedByModal(void *a1, const char *a2, ...)
{
  return _[a1 _isRecordingOrBlockedByModal];
}

id objc_msgSend__isRelevantTransactionAuthor_(void *a1, const char *a2, ...)
{
  return [a1 _isRelevantTransactionAuthor];
}

id objc_msgSend__isScrubbingSelectionTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 _isScrubbingSelectionTimeRange];
}

id objc_msgSend__isSelectionTrimmableByDeletingRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSelectionTrimmableByDeletingRange:");
}

id objc_msgSend__isSelectionTrimmableByKeepingRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSelectionTrimmableByKeepingRange:");
}

id objc_msgSend__isSplitViewControllerTransitioningBetweenStates(void *a1, const char *a2, ...)
{
  return _[a1 _isSplitViewControllerTransitioningBetweenStates];
}

id objc_msgSend__isWatch(void *a1, const char *a2, ...)
{
  return _[a1 _isWatch];
}

id objc_msgSend__isWideIPad(void *a1, const char *a2, ...)
{
  return _[a1 _isWideIPad];
}

id objc_msgSend__isWideIpadOrIOSMac(void *a1, const char *a2, ...)
{
  return _[a1 _isWideIpadOrIOSMac];
}

id objc_msgSend__itemForActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemForActivityType:");
}

id objc_msgSend__jumpByIncrement_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 _jumpByIncrement:forUUID:];
}

id objc_msgSend__jumpToTargetTime_(void *a1, const char *a2, ...)
{
  return [a1 _jumpToTargetTime:];
}

id objc_msgSend__labelAccessoryTintColor(void *a1, const char *a2, ...)
{
  return _[a1 _labelAccessoryTintColor];
}

id objc_msgSend__labelConfigurationForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelConfigurationForState:");
}

id objc_msgSend__labelFontForState_presentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelFontForState:presentationStyle:");
}

id objc_msgSend__labelLozengePath(void *a1, const char *a2, ...)
{
  return _[a1 _labelLozengePath];
}

id objc_msgSend__labelTextColorForState_presentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelTextColorForState:presentationStyle:");
}

id objc_msgSend__labelWidth(void *a1, const char *a2, ...)
{
  return _[a1 _labelWidth];
}

id objc_msgSend__largeContentTitle(void *a1, const char *a2, ...)
{
  return _[a1 _largeContentTitle];
}

id objc_msgSend__layoutListAppearance(void *a1, const char *a2, ...)
{
  return _[a1 _layoutListAppearance];
}

id objc_msgSend__layoutTimeMarkerViewsForCurrentlyVisibleTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 _layoutTimeMarkerViewsForCurrentlyVisibleTimeRange];
}

id objc_msgSend__leadingRoundedFrame(void *a1, const char *a2, ...)
{
  return _[a1 _leadingRoundedFrame];
}

id objc_msgSend__leadingSwipeActionsConfigurationProvider(void *a1, const char *a2, ...)
{
  return _[a1 _leadingSwipeActionsConfigurationProvider];
}

id objc_msgSend__libraryIsEditing(void *a1, const char *a2, ...)
{
  return _[a1 _libraryIsEditing];
}

id objc_msgSend__loadWithColor_selectionExtentIncludingKnobs_topKnob_bottomKnob_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWithColor:selectionExtentIncludingKnobs:topKnob:bottomKnob:");
}

id objc_msgSend__mainViewController(void *a1, const char *a2, ...)
{
  return _[a1 _mainViewController];
}

id objc_msgSend__makeCutAndStartFlush(void *a1, const char *a2, ...)
{
  return _[a1 _makeCutAndStartFlush];
}

id objc_msgSend__markCurrentFileVersionIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _markCurrentFileVersionIfNecessary];
}

id objc_msgSend__maxHeightForSliceAtIndex_sliceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maxHeightForSliceAtIndex:sliceType:");
}

id objc_msgSend__maxTrackView(void *a1, const char *a2, ...)
{
  return _[a1 _maxTrackView];
}

id objc_msgSend__maxValueView(void *a1, const char *a2, ...)
{
  return _[a1 _maxValueView];
}

id objc_msgSend__maximumValue(void *a1, const char *a2, ...)
{
  return _[a1 _maximumValue];
}

id objc_msgSend__maybeSelectAllTextFieldText(void *a1, const char *a2, ...)
{
  return _[a1 _maybeSelectAllTextFieldText];
}

id objc_msgSend__mergeChangeIntoRelevantContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeChangeIntoRelevantContexts:");
}

id objc_msgSend__mergeRecording_atTime_controller_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeRecording:atTime:controller:error:");
}

id objc_msgSend__minTrackView(void *a1, const char *a2, ...)
{
  return _[a1 _minTrackView];
}

id objc_msgSend__minValueView(void *a1, const char *a2, ...)
{
  return _[a1 _minValueView];
}

id objc_msgSend__minimalModeBaseConstraintsWithHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_minimalModeBaseConstraintsWithHeight:");
}

id objc_msgSend__minimumOverlaySelectionWidth(void *a1, const char *a2, ...)
{
  return _[a1 _minimumOverlaySelectionWidth];
}

id objc_msgSend__minimumValue(void *a1, const char *a2, ...)
{
  return _[a1 _minimumValue];
}

id objc_msgSend__mixDownEditedRecording_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mixDownEditedRecording:completion:");
}

id objc_msgSend__modernThumbImageWithColor_height_includeShadow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modernThumbImageWithColor:height:includeShadow:");
}

id objc_msgSend__moreOptionsButtonAccessory(void *a1, const char *a2, ...)
{
  return _[a1 _moreOptionsButtonAccessory];
}

id objc_msgSend__moreOptionsSwipeActionForUUID_shouldExecuteCompletionBeforeAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moreOptionsSwipeActionForUUID:shouldExecuteCompletionBeforeAction:");
}

id objc_msgSend__moveToFolderSwipeActionForUUID_shouldExecuteCompletionBeforeAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveToFolderSwipeActionForUUID:shouldExecuteCompletionBeforeAction:");
}

id objc_msgSend__myPresentViewController_sourceController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_myPresentViewController:sourceController:animated:completion:");
}

id objc_msgSend__needsDisclosureAccessory(void *a1, const char *a2, ...)
{
  return _[a1 _needsDisclosureAccessory];
}

id objc_msgSend__needsWaveformRendering(void *a1, const char *a2, ...)
{
  return _[a1 _needsWaveformRendering];
}

id objc_msgSend__newFormattedDateStringFromDate_forUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newFormattedDateStringFromDate:forUUID:");
}

id objc_msgSend__newPresentedPrepareFailureAlertControllerForCompositions_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newPresentedPrepareFailureAlertControllerForCompositions:source:");
}

id objc_msgSend__newRecordingEngine(void *a1, const char *a2, ...)
{
  return _[a1 _newRecordingEngine];
}

id objc_msgSend__nextTransactionAfterToken_context_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nextTransactionAfterToken:context:error:");
}

id objc_msgSend__noiseSuppressionParameters(void *a1, const char *a2, ...)
{
  return _[a1 _noiseSuppressionParameters];
}

id objc_msgSend__nonCachedContentWidthWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nonCachedContentWidthWithDuration:");
}

id objc_msgSend__nonRepeatableKeyCommand(void *a1, const char *a2, ...)
{
  return _[a1 _nonRepeatableKeyCommand];
}

id objc_msgSend__notifyDelegatesThatSelectionChanged(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDelegatesThatSelectionChanged];
}

id objc_msgSend__observeUserDefaultsForAudioSettingsChanges(void *a1, const char *a2, ...)
{
  return _[a1 _observeUserDefaultsForAudioSettingsChanges];
}

id objc_msgSend__openForModifyRecordingWithUUID_enterTrim_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openForModifyRecordingWithUUID:enterTrim:");
}

id objc_msgSend__openURLContexts_(void *a1, const char *a2, ...)
{
  return [a1 _openURLContexts:];
}

id objc_msgSend__originalRecordingControlDiameter(void *a1, const char *a2, ...)
{
  return _[a1 _originalRecordingControlDiameter];
}

id objc_msgSend__pauseDisplayLink(void *a1, const char *a2, ...)
{
  return _[a1 _pauseDisplayLink];
}

id objc_msgSend__pauseImageForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pauseImageForStyle:");
}

id objc_msgSend__pausePath(void *a1, const char *a2, ...)
{
  return _[a1 _pausePath];
}

id objc_msgSend__performActionForShortcutItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performActionForShortcutItem:");
}

id objc_msgSend__performAsynchronousRenderSensitiveAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAsynchronousRenderSensitiveAction:");
}

id objc_msgSend__performFolderTypeUpdatesOnRecording_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performFolderTypeUpdatesOnRecording:");
}

id objc_msgSend__performOrDispatchToMainThread_(void *a1, const char *a2, ...)
{
  return [a1 _performOrDispatchToMainThread];
}

id objc_msgSend__performRecordingEndTransitionWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 _performRecordingEndTransitionWithUUID:];
}

id objc_msgSend__performScrollTest_iterations_delta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTest:iterations:delta:");
}

id objc_msgSend__performSearch(void *a1, const char *a2, ...)
{
  return _[a1 _performSearch];
}

id objc_msgSend__performTest_options_(void *a1, const char *a2, ...)
{
  return [a1 _performTest:options:];
}

id objc_msgSend__platterStateNeedsMinimalCheckmarkView(void *a1, const char *a2, ...)
{
  return _[a1 _platterStateNeedsMinimalCheckmarkView];
}

id objc_msgSend__playImageForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playImageForStyle:");
}

id objc_msgSend__playStartRecordingSoundEffectThenStartRecording_controller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playStartRecordingSoundEffectThenStartRecording:controller:");
}

id objc_msgSend__pointsPerSecond(void *a1, const char *a2, ...)
{
  return _[a1 _pointsPerSecond];
}

id objc_msgSend__predicateForURIRepresentations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForURIRepresentations:");
}

id objc_msgSend__preloadRecordingForPlayback_(void *a1, const char *a2, ...)
{
  return [a1 _preloadRecordingForPlayback];
}

id objc_msgSend__prepareAudioUnits_maxFramesPerRender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareAudioUnits:maxFramesPerRender:");
}

id objc_msgSend__prepareRenderChainIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _prepareRenderChainIfNeeded];
}

id objc_msgSend__prepareToDisplayCardViewWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareToDisplayCardViewWithCompletionBlock:");
}

id objc_msgSend__prepareToPresent(void *a1, const char *a2, ...)
{
  return _[a1 _prepareToPresent];
}

id objc_msgSend__prepareWithFormat_maxFramesPerRender_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareWithFormat:maxFramesPerRender:error:");
}

id objc_msgSend__prepareWithRecordingEngine_controller_assetWriter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareWithRecordingEngine:controller:assetWriter:");
}

id objc_msgSend__presentFolderDeletionConfirmationForFolder_source_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentFolderDeletionConfirmationForFolder:source:completionBlock:");
}

id objc_msgSend__presentMoveToFolderUIForRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 _presentMoveToFolderUIForRecordingWithUUID:];
}

id objc_msgSend__presentMoveToFolderUIForRecordingsWithUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentMoveToFolderUIForRecordingsWithUUIDs:");
}

id objc_msgSend__presentMoveToFolderUIForSelectedRecordings(void *a1, const char *a2, ...)
{
  return _[a1 _presentMoveToFolderUIForSelectedRecordings];
}

id objc_msgSend__presentNameTakenAlertWithName_sourceController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentNameTakenAlertWithName:sourceController:");
}

id objc_msgSend__presentPlaybackSettingsUIWithSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPlaybackSettingsUIWithSource:");
}

id objc_msgSend__presentViewController_fromViewController_animated_widthHeightConstraintConstant_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentViewController:fromViewController:animated:widthHeightConstraintConstant:completion:");
}

id objc_msgSend__primaryColumnWidth(void *a1, const char *a2, ...)
{
  return _[a1 _primaryColumnWidth];
}

id objc_msgSend__primeFramesOfHiddenItems(void *a1, const char *a2, ...)
{
  return _[a1 _primeFramesOfHiddenItems];
}

id objc_msgSend__processAmplitude_(void *a1, const char *a2, ...)
{
  return [a1 _processAmplitude:];
}

id objc_msgSend__progressOverlayAccessory(void *a1, const char *a2, ...)
{
  return _[a1 _progressOverlayAccessory];
}

id objc_msgSend__progressPath(void *a1, const char *a2, ...)
{
  return _[a1 _progressPath];
}

id objc_msgSend__promptForCloudKitIfLoggedInAndTCCUnset(void *a1, const char *a2, ...)
{
  return _[a1 _promptForCloudKitIfLoggedInAndTCCUnset];
}

id objc_msgSend__pushFileVersion_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushFileVersion:error:");
}

id objc_msgSend__pushViewControllerForFolderAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushViewControllerForFolderAtIndexPath:");
}

id objc_msgSend__pushViewControllerForFolderOfType_withName_folderUUID_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushViewControllerForFolderOfType:withName:folderUUID:animated:completion:");
}

id objc_msgSend__radius(void *a1, const char *a2, ...)
{
  return _[a1 _radius];
}

id objc_msgSend__rc_constraintsByNameDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rc_constraintsByNameDictionary:");
}

id objc_msgSend__rc_constraintsNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rc_constraintsNamed:");
}

id objc_msgSend__reconcileAudioStateWithApplicationState(void *a1, const char *a2, ...)
{
  return _[a1 _reconcileAudioStateWithApplicationState];
}

id objc_msgSend__recordButtonStateForRecordingControlState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordButtonStateForRecordingControlState:");
}

id objc_msgSend__recorderAppDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _recorderAppDelegate];
}

id objc_msgSend__recordingAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordingAtIndexPath:");
}

id objc_msgSend__recordingCardSheetPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 _recordingCardSheetPresentationController];
}

id objc_msgSend__recordingControlSidePadding(void *a1, const char *a2, ...)
{
  return _[a1 _recordingControlSidePadding];
}

id objc_msgSend__recordingControlStateForRecordButtonState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordingControlStateForRecordButtonState:");
}

id objc_msgSend__recordingDurationForDurationAtStartTime_currentTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordingDurationForDurationAtStartTime:currentTime:");
}

id objc_msgSend__recordingSettingsForAudioEngine_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordingSettingsForAudioEngine:error:");
}

id objc_msgSend__recordingStartTimeSyncedWithDisplayedTime(void *a1, const char *a2, ...)
{
  return _[a1 _recordingStartTimeSyncedWithDisplayedTime];
}

id objc_msgSend__recordingStarted_(void *a1, const char *a2, ...)
{
  return [a1 _recordingStarted:];
}

id objc_msgSend__recordingStopped_(void *a1, const char *a2, ...)
{
  return [a1 _recordingStopped:];
}

id objc_msgSend__recordingViewController(void *a1, const char *a2, ...)
{
  return _[a1 _recordingViewController];
}

id objc_msgSend__recordingsCollectionView(void *a1, const char *a2, ...)
{
  return _[a1 _recordingsCollectionView];
}

id objc_msgSend__recordingsControllerWithFolder_(void *a1, const char *a2, ...)
{
  return [a1 _recordingsControllerWithFolder:];
}

id objc_msgSend__recordingsControllerWithPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordingsControllerWithPredicate:");
}

id objc_msgSend__recordingsListShouldUsePlainAppearance(void *a1, const char *a2, ...)
{
  return _[a1 _recordingsListShouldUsePlainAppearance];
}

id objc_msgSend__recursiveDescriptionWithInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recursiveDescriptionWithInset:");
}

id objc_msgSend__refreshAfterEditingOperation_(void *a1, const char *a2, ...)
{
  return [a1 _refreshAfterEditingOperation:];
}

id objc_msgSend__registerAudioSessionNotificationsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _registerAudioSessionNotificationsIfNeeded];
}

id objc_msgSend__registerForSceneStateChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerForSceneStateChanges:");
}

id objc_msgSend__registerInternalAudioUnits(void *a1, const char *a2, ...)
{
  return _[a1 _registerInternalAudioUnits];
}

id objc_msgSend__registerUndoForSetFavorite_changedUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerUndoForSetFavorite:changedUUIDs:");
}

id objc_msgSend__reloadWaveformDataSourceAndPreviewAssetWithInitialTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadWaveformDataSourceAndPreviewAssetWithInitialTime:");
}

id objc_msgSend__removeCollectionViewCellFromCellsMapTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeCollectionViewCellFromCellsMapTable:");
}

id objc_msgSend__removeDefaultDocumentCommandsInBuilder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeDefaultDocumentCommandsInBuilder:");
}

id objc_msgSend__removeDefaultFindCommandsInBuilder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeDefaultFindCommandsInBuilder:");
}

id objc_msgSend__removeFromUserFolderRecordingsWithUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeFromUserFolderRecordingsWithUUIDs:");
}

id objc_msgSend__removeOverlayLayerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _removeOverlayLayerIfNeeded];
}

id objc_msgSend__removeRecordingObservations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeRecordingObservations:");
}

id objc_msgSend__removeRecordingsObservationsForUUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeRecordingsObservationsForUUIDs:");
}

id objc_msgSend__renamingTextDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_renamingTextDidChange:");
}

id objc_msgSend__renderTimeRangeOfSegments_withDuration_needsWaveformCalculation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_renderTimeRangeOfSegments:withDuration:needsWaveformCalculation:");
}

id objc_msgSend__renderVisibleTimeRangeWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_renderVisibleTimeRangeWithDuration:");
}

id objc_msgSend__reparentAfterDismiss(void *a1, const char *a2, ...)
{
  return _[a1 _reparentAfterDismiss];
}

id objc_msgSend__replaceDefaultDeleteCommandWithCustomCommandInBuilder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replaceDefaultDeleteCommandWithCustomCommandInBuilder:");
}

id objc_msgSend__requestPlaceInferences(void *a1, const char *a2, ...)
{
  return _[a1 _requestPlaceInferences];
}

id objc_msgSend__requiresUUIDForActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requiresUUIDForActivityType:");
}

id objc_msgSend__reset(void *a1, const char *a2, ...)
{
  return _[a1 _reset];
}

id objc_msgSend__resetActiveSlicesWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetActiveSlicesWithIndex:");
}

id objc_msgSend__resetRenderTimes(void *a1, const char *a2, ...)
{
  return _[a1 _resetRenderTimes];
}

id objc_msgSend__resetScrubInfo(void *a1, const char *a2, ...)
{
  return _[a1 _resetScrubInfo];
}

id objc_msgSend__resetTimeStretchAudioUnit(void *a1, const char *a2, ...)
{
  return _[a1 _resetTimeStretchAudioUnit];
}

id objc_msgSend__resolveAndCacheColorsWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveAndCacheColorsWithTraitCollection:");
}

id objc_msgSend__resolvedFillColorForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolvedFillColorForState:");
}

id objc_msgSend__resolvedRingColorForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolvedRingColorForState:");
}

id objc_msgSend__restoreOriginalRecording_andComposition_forFailedRecording_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreOriginalRecording:andComposition:forFailedRecording:");
}

id objc_msgSend__restoreRecordingsWithUUIDs_isRecover_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreRecordingsWithUUIDs:isRecover:");
}

id objc_msgSend__restoreRecordingsWithUUIDs_isRecover_source_collectionViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreRecordingsWithUUIDs:isRecover:source:collectionViewController:");
}

id objc_msgSend__restyleAllExtantCells(void *a1, const char *a2, ...)
{
  return _[a1 _restyleAllExtantCells];
}

id objc_msgSend__restyleCardViewAndReparentIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _restyleCardViewAndReparentIfNeeded];
}

id objc_msgSend__restyleRecordingCardSheetPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 _restyleRecordingCardSheetPresentationController];
}

id objc_msgSend__reverbSuppressionParameters(void *a1, const char *a2, ...)
{
  return _[a1 _reverbSuppressionParameters];
}

id objc_msgSend__ringLozengePathWithHeight_extraWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ringLozengePathWithHeight:extraWidth:");
}

id objc_msgSend__ringOpacityForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ringOpacityForState:");
}

id objc_msgSend__ringPathForState_(void *a1, const char *a2, ...)
{
  return [a1 _ringPathForState:];
}

id objc_msgSend__roundedSliceWidthPerSide(void *a1, const char *a2, ...)
{
  return _[a1 _roundedSliceWidthPerSide];
}

id objc_msgSend__saveAsNew_withAssetBackup_editedComposition_replacingOriginal_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveAsNew:withAssetBackup:editedComposition:replacingOriginal:error:");
}

id objc_msgSend__scheduleFirstBuffer(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleFirstBuffer];
}

id objc_msgSend__schedulePlayback_(void *a1, const char *a2, ...)
{
  return [a1 _schedulePlayback:];
}

id objc_msgSend__scrollDownToItemAtIndexPathIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollDownToItemAtIndexPathIfNeeded:");
}

id objc_msgSend__scrollUpToItemAtIndexPathIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollUpToItemAtIndexPathIfNeeded:");
}

id objc_msgSend__selectActiveFolderIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _selectActiveFolderIfNeeded];
}

id objc_msgSend__selectFirstVoiceMemoInActiveRecordingsCollectionViewControllerWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectFirstVoiceMemoInActiveRecordingsCollectionViewControllerWithCompletionBlock:");
}

id objc_msgSend__selectFirstVoiceMemoInCollectionViewController_errorString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectFirstVoiceMemoInCollectionViewController:errorString:");
}

id objc_msgSend__selectLargeDetentOnRecordingCardSheetPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 _selectLargeDetentOnRecordingCardSheetPresentationController];
}

id objc_msgSend__selectLargeDetentOnSheetPresentationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectLargeDetentOnSheetPresentationController:");
}

id objc_msgSend__selectRecordingWithUUID_inRecordingsCollectionViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectRecordingWithUUID:inRecordingsCollectionViewController:");
}

id objc_msgSend__selectSharedRecording_(void *a1, const char *a2, ...)
{
  return [a1 _selectSharedRecording:];
}

id objc_msgSend__selectedTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 _selectedTimeRange];
}

id objc_msgSend__selectionBoundsIncludingKnobs(void *a1, const char *a2, ...)
{
  return _[a1 _selectionBoundsIncludingKnobs];
}

id objc_msgSend__selectionBoundsIncludingKnobsUsingMultiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectionBoundsIncludingKnobsUsingMultiplier:");
}

id objc_msgSend__selectionFollowsFocus(void *a1, const char *a2, ...)
{
  return _[a1 _selectionFollowsFocus];
}

id objc_msgSend__selectionHighlightBounds(void *a1, const char *a2, ...)
{
  return _[a1 _selectionHighlightBounds];
}

id objc_msgSend__selectionOverlay(void *a1, const char *a2, ...)
{
  return _[a1 _selectionOverlay];
}

id objc_msgSend__selectionRectForSelectedTimeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectionRectForSelectedTimeRange:");
}

id objc_msgSend__setAccessibilityValueBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAccessibilityValueBlock:");
}

id objc_msgSend__setArrangedSubviewsWithTitleDateDurationStack_moreButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setArrangedSubviewsWithTitleDateDurationStack:moreButton:");
}

id objc_msgSend__setBottomPalette_(void *a1, const char *a2, ...)
{
  return [a1 _setBottomPalette:];
}

id objc_msgSend__setClipUnderlapWhileTransitioning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setClipUnderlapWhileTransitioning:");
}

id objc_msgSend__setContentViewMarginType_(void *a1, const char *a2, ...)
{
  return [a1 _setContentViewMarginType:];
}

id objc_msgSend__setCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 _setCornerRadius:];
}

id objc_msgSend__setCorrectOriginalFolderForRecordingWithUUID_folderType_userFolderName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCorrectOriginalFolderForRecordingWithUUID:folderType:userFolderName:");
}

id objc_msgSend__setDSPGraphParameter_address_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDSPGraphParameter:address:");
}

id objc_msgSend__setDrawsAsBackdropOverlayWithBlendMode_(void *a1, const char *a2, ...)
{
  return [a1 _setDrawsAsBackdropOverlayWithBlendMode:];
}

id objc_msgSend__setEditing_animated_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEditing:animated:withCompletionHandler:");
}

id objc_msgSend__setHidesShadow_(void *a1, const char *a2, ...)
{
  return [a1 _setHidesShadow:];
}

id objc_msgSend__setIgnoreBarButtonItemSiblings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIgnoreBarButtonItemSiblings:");
}

id objc_msgSend__setIsInSelectionEditingMode_forInsertMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIsInSelectionEditingMode:forInsertMode:");
}

id objc_msgSend__setLayoutPriority_(void *a1, const char *a2, ...)
{
  return [a1 _setLayoutPriority:];
}

id objc_msgSend__setMenuProvider_(void *a1, const char *a2, ...)
{
  return [a1 _setMenuProvider:];
}

id objc_msgSend__setMicaState_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMicaState:animated:");
}

id objc_msgSend__setNeedsRendering(void *a1, const char *a2, ...)
{
  return _[a1 _setNeedsRendering];
}

id objc_msgSend__setNeedsVisibleTimeRangeRendering(void *a1, const char *a2, ...)
{
  return _[a1 _setNeedsVisibleTimeRangeRendering];
}

id objc_msgSend__setNeedsVisibleTimeRangeRenderingFromFrameChange(void *a1, const char *a2, ...)
{
  return _[a1 _setNeedsVisibleTimeRangeRenderingFromFrameChange];
}

id objc_msgSend__setPreferredSplitBehaviorForViewWidth_needsRestyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPreferredSplitBehaviorForViewWidth:needsRestyle:");
}

id objc_msgSend__setPriorityToDefaultHighForConstraints_(void *a1, const char *a2, ...)
{
  return [a1 _setPriorityToDefaultHighForConstraints:];
}

id objc_msgSend__setRecordingsCountText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRecordingsCountText:");
}

id objc_msgSend__setSearchString_(void *a1, const char *a2, ...)
{
  return [a1 _setSearchString:];
}

id objc_msgSend__setSecondaryAttributedTextWithRecordingsCount_(void *a1, const char *a2, ...)
{
  return [a1 _setSecondaryAttributedTextWithRecordingsCount:];
}

id objc_msgSend__setSelectedTimeRange_updateVisibleTimeRange_updateWaveformViewContentSizeAndOffset_notifyDelegate_animationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSelectedTimeRange:updateVisibleTimeRange:updateWaveformViewContentSizeAndOffset:notifyDelegate:animationDuration:");
}

id objc_msgSend__setSelectionOverlayEnabled_(void *a1, const char *a2, ...)
{
  return [a1 _setSelectionOverlayEnabled:];
}

id objc_msgSend__setSupportsTwoLineLargeTitles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSupportsTwoLineLargeTitles:");
}

id objc_msgSend__setTimeMarkerViewsNeedInitialLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTimeMarkerViewsNeedInitialLayout:");
}

id objc_msgSend__setTouchInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTouchInsets:");
}

id objc_msgSend__setUpCloudSyncAccessManager(void *a1, const char *a2, ...)
{
  return _[a1 _setUpCloudSyncAccessManager];
}

id objc_msgSend__setUpLocationManager(void *a1, const char *a2, ...)
{
  return _[a1 _setUpLocationManager];
}

id objc_msgSend__setValueWhileTracking_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setValueWhileTracking:duration:");
}

id objc_msgSend__setWantsAnimatedLayoutDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWantsAnimatedLayoutDuration:");
}

id objc_msgSend__setWantsFullScreen_(void *a1, const char *a2, ...)
{
  return [_a1 _setWantsFullScreen:];
}

id objc_msgSend__setWaveformDataSource_initialTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWaveformDataSource:initialTime:");
}

id objc_msgSend__setupButtonsAndDescriptionContainerView(void *a1, const char *a2, ...)
{
  return _[a1 _setupButtonsAndDescriptionContainerView];
}

id objc_msgSend__setupCAPackageManager(void *a1, const char *a2, ...)
{
  return _[a1 _setupCAPackageManager];
}

id objc_msgSend__setupChildView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupChildView:");
}

id objc_msgSend__setupCollectionView(void *a1, const char *a2, ...)
{
  return _[a1 _setupCollectionView];
}

id objc_msgSend__setupConfigurationForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupConfigurationForStyle:");
}

id objc_msgSend__setupConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _setupConstraints];
}

id objc_msgSend__setupControllerAndDelegation(void *a1, const char *a2, ...)
{
  return _[a1 _setupControllerAndDelegation];
}

id objc_msgSend__setupControlsForStyle(void *a1, const char *a2, ...)
{
  return _[a1 _setupControlsForStyle];
}

id objc_msgSend__setupDeleteButton(void *a1, const char *a2, ...)
{
  return _[a1 _setupDeleteButton];
}

id objc_msgSend__setupEditButton(void *a1, const char *a2, ...)
{
  return _[a1 _setupEditButton];
}

id objc_msgSend__setupEditRecordingButton(void *a1, const char *a2, ...)
{
  return _[a1 _setupEditRecordingButton];
}

id objc_msgSend__setupForApplyTitle(void *a1, const char *a2, ...)
{
  return _[a1 _setupForApplyTitle];
}

id objc_msgSend__setupForCancelTitle(void *a1, const char *a2, ...)
{
  return _[a1 _setupForCancelTitle];
}

id objc_msgSend__setupForUndoTitle(void *a1, const char *a2, ...)
{
  return _[a1 _setupForUndoTitle];
}

id objc_msgSend__setupLongPressGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _setupLongPressGestureRecognizer];
}

id objc_msgSend__setupMoreActionsButton(void *a1, const char *a2, ...)
{
  return _[a1 _setupMoreActionsButton];
}

id objc_msgSend__setupMoreButtonIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _setupMoreButtonIfNeeded];
}

id objc_msgSend__setupNavigationBarPalette(void *a1, const char *a2, ...)
{
  return _[a1 _setupNavigationBarPalette];
}

id objc_msgSend__setupPlaybackSettingsButton(void *a1, const char *a2, ...)
{
  return _[a1 _setupPlaybackSettingsButton];
}

id objc_msgSend__setupProgressIndicator(void *a1, const char *a2, ...)
{
  return _[a1 _setupProgressIndicator];
}

id objc_msgSend__setupRecentlyDeletedToolbarItemsWithCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupRecentlyDeletedToolbarItemsWithCount:");
}

id objc_msgSend__setupRecoverButton(void *a1, const char *a2, ...)
{
  return _[a1 _setupRecoverButton];
}

id objc_msgSend__setupSearchController(void *a1, const char *a2, ...)
{
  return _[a1 _setupSearchController];
}

id objc_msgSend__setupShuttleBarConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _setupShuttleBarConstraints];
}

id objc_msgSend__setupStackForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupStackForStyle:");
}

id objc_msgSend__setupSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _setupSubviews];
}

id objc_msgSend__setupTextIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _setupTextIfNeeded];
}

id objc_msgSend__setupTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 _setupTitleLabel];
}

id objc_msgSend__setupTitleTextField(void *a1, const char *a2, ...)
{
  return _[a1 _setupTitleTextField];
}

id objc_msgSend__setupToolbarWithButtonItemsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _setupToolbarWithButtonItemsIfNeeded];
}

id objc_msgSend__setupTranscriptViewDependenciesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _setupTranscriptViewDependenciesIfNeeded];
}

id objc_msgSend__setupViews(void *a1, const char *a2, ...)
{
  return _[a1 _setupViews];
}

id objc_msgSend__setupViewsForApplicationDisplayStyle(void *a1, const char *a2, ...)
{
  return _[a1 _setupViewsForApplicationDisplayStyle];
}

id objc_msgSend__setupViewsForWaveformOnlyDisplayStyle(void *a1, const char *a2, ...)
{
  return _[a1 _setupViewsForWaveformOnlyDisplayStyle];
}

id objc_msgSend__setupVirtualNavigationBarConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _setupVirtualNavigationBarConstraints];
}

id objc_msgSend__shouldCollapseToolbarButtons(void *a1, const char *a2, ...)
{
  return _[a1 _shouldCollapseToolbarButtons];
}

id objc_msgSend__shouldConstrainCenterContentContainerToWindow(void *a1, const char *a2, ...)
{
  return _[a1 _shouldConstrainCenterContentContainerToWindow];
}

id objc_msgSend__shouldDisplaySiriTipView(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDisplaySiriTipView];
}

id objc_msgSend__shouldEnableRecordingControlForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldEnableRecordingControlForState:");
}

id objc_msgSend__shouldEnableTrimSave(void *a1, const char *a2, ...)
{
  return _[a1 _shouldEnableTrimSave];
}

id objc_msgSend__shouldHideBottomElements(void *a1, const char *a2, ...)
{
  return _[a1 _shouldHideBottomElements];
}

id objc_msgSend__shouldOffsetSelectionBarTypeForThumb_(void *a1, const char *a2, ...)
{
  return [a1 _shouldOffsetSelectionBarTypeForThumb:];
}

id objc_msgSend__shouldPresentPlaybackQuickActions(void *a1, const char *a2, ...)
{
  return _[a1 _shouldPresentPlaybackQuickActions];
}

id objc_msgSend__shouldShowProgressOverlay(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowProgressOverlay];
}

id objc_msgSend__shouldUseAccessibilityTextLayout(void *a1, const char *a2, ...)
{
  return _[a1 _shouldUseAccessibilityTextLayout];
}

id objc_msgSend__shouldUseAccompaniedSidebarStyle(void *a1, const char *a2, ...)
{
  return _[a1 _shouldUseAccompaniedSidebarStyle];
}

id objc_msgSend__showFailedNewFolderAlert(void *a1, const char *a2, ...)
{
  return _[a1 _showFailedNewFolderAlert];
}

id objc_msgSend__showGrabberOnRecordingCardSheetPresentationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showGrabberOnRecordingCardSheetPresentationController:");
}

id objc_msgSend__showGrabberOnSheetPresentationController_showGrabber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showGrabberOnSheetPresentationController:showGrabber:");
}

id objc_msgSend__showHideViewsForDisplayOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showHideViewsForDisplayOptions:");
}

id objc_msgSend__showRecordingControlOrTrimOverview(void *a1, const char *a2, ...)
{
  return _[a1 _showRecordingControlOrTrimOverview];
}

id objc_msgSend__showStopButton(void *a1, const char *a2, ...)
{
  return _[a1 _showStopButton];
}

id objc_msgSend__showTimeLabel(void *a1, const char *a2, ...)
{
  return _[a1 _showTimeLabel];
}

id objc_msgSend__showTrimDeleteSelectionButtonsIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showTrimDeleteSelectionButtonsIfNeeded:");
}

id objc_msgSend__showWelcomeScreenWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showWelcomeScreenWithCompletionBlock:");
}

id objc_msgSend__showsEditingToolbar(void *a1, const char *a2, ...)
{
  return _[a1 _showsEditingToolbar];
}

id objc_msgSend__showsSeparators(void *a1, const char *a2, ...)
{
  return _[a1 _showsSeparators];
}

id objc_msgSend__shutdownEngine(void *a1, const char *a2, ...)
{
  return _[a1 _shutdownEngine];
}

id objc_msgSend__shutdownPlaybackEngine(void *a1, const char *a2, ...)
{
  return _[a1 _shutdownPlaybackEngine];
}

id objc_msgSend__shutdownRecordingEngine(void *a1, const char *a2, ...)
{
  return _[a1 _shutdownRecordingEngine];
}

id objc_msgSend__shuttleBarWidth(void *a1, const char *a2, ...)
{
  return _[a1 _shuttleBarWidth];
}

id objc_msgSend__sidePaddingForElementHorizontallyCenteredInSupplementaryColumn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sidePaddingForElementHorizontallyCenteredInSupplementaryColumn:");
}

id objc_msgSend__signalOverdubPlaybackHasStarted(void *a1, const char *a2, ...)
{
  return _[a1 _signalOverdubPlaybackHasStarted];
}

id objc_msgSend__sliceScale(void *a1, const char *a2, ...)
{
  return _[a1 _sliceScale];
}

id objc_msgSend__sourceNodeInputBlock(void *a1, const char *a2, ...)
{
  return _[a1 _sourceNodeInputBlock];
}

id objc_msgSend__splitViewController(void *a1, const char *a2, ...)
{
  return _[a1 _splitViewController];
}

id objc_msgSend__startCapturing_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startCapturing:completion:");
}

id objc_msgSend__startDisplayLink(void *a1, const char *a2, ...)
{
  return _[a1 _startDisplayLink];
}

id objc_msgSend__startMonitoringLocation(void *a1, const char *a2, ...)
{
  return _[a1 _startMonitoringLocation];
}

id objc_msgSend__startNewRecordingQuickAction(void *a1, const char *a2, ...)
{
  return _[a1 _startNewRecordingQuickAction];
}

id objc_msgSend__startNowPlayingUpdateTimerWithPlaybackTime_playbackRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startNowPlayingUpdateTimerWithPlaybackTime:playbackRate:");
}

id objc_msgSend__startPlaybackAtRate_immediately_(void *a1, const char *a2, ...)
{
  return [a1 _startPlaybackAtRate:immediately:];
}

id objc_msgSend__startPlaybackOfUUID_atPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startPlaybackOfUUID:atPosition:");
}

id objc_msgSend__startPlaybackQuickActionForRecordingWithUniqueID_(void *a1, const char *a2, ...)
{
  return [a1 _startPlaybackQuickActionForRecordingWithUniqueID:];
}

id objc_msgSend__startRecording(void *a1, const char *a2, ...)
{
  return _[a1 _startRecording];
}

id objc_msgSend__startRecordingWithController_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startRecordingWithController:error:");
}

id objc_msgSend__startRendering(void *a1, const char *a2, ...)
{
  return _[a1 _startRendering];
}

id objc_msgSend__startUpdating(void *a1, const char *a2, ...)
{
  return _[a1 _startUpdating];
}

id objc_msgSend__stateSupportsDragGesture(void *a1, const char *a2, ...)
{
  return _[a1 _stateSupportsDragGesture];
}

id objc_msgSend__stopButtonContainsPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopButtonContainsPoint:");
}

id objc_msgSend__stopDisplayLink(void *a1, const char *a2, ...)
{
  return _[a1 _stopDisplayLink];
}

id objc_msgSend__stopForUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 _stopForUUIDs:];
}

id objc_msgSend__stopMonitoringLocation(void *a1, const char *a2, ...)
{
  return _[a1 _stopMonitoringLocation];
}

id objc_msgSend__stopPlaybackInAudioPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopPlaybackInAudioPlayer:");
}

id objc_msgSend__stopRendering(void *a1, const char *a2, ...)
{
  return _[a1 _stopRendering];
}

id objc_msgSend__stopUpdating(void *a1, const char *a2, ...)
{
  return _[a1 _stopUpdating];
}

id objc_msgSend__stringForCurrentTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringForCurrentTime:");
}

id objc_msgSend__stringForInverseCurrentTime_(void *a1, const char *a2, ...)
{
  return [a1 _stringForInverseCurrentTime:];
}

id objc_msgSend__stringForMicaState_(void *a1, const char *a2, ...)
{
  return [a1 _stringForMicaState:];
}

id objc_msgSend__stringForTime_elapsed_(void *a1, const char *a2, ...)
{
  return [a1 _stringForTime:elapsed:];
}

id objc_msgSend__styleRecordingCardSheetPresentationControllerWithOptions_customDetentHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_styleRecordingCardSheetPresentationControllerWithOptions:customDetentHeight:");
}

id objc_msgSend__styleSheetPresentationController_options_customDetentHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_styleSheetPresentationController:options:customDetentHeight:");
}

id objc_msgSend__styleTitle(void *a1, const char *a2, ...)
{
  return _[a1 _styleTitle];
}

id objc_msgSend__styleView(void *a1, const char *a2, ...)
{
  return _[a1 _styleView];
}

id objc_msgSend__subjectForActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subjectForActivityType:");
}

id objc_msgSend__supplementaryColumnMinimumCenterXPosition(void *a1, const char *a2, ...)
{
  return _[a1 _supplementaryColumnMinimumCenterXPosition];
}

id objc_msgSend__supplementaryColumnWidth(void *a1, const char *a2, ...)
{
  return _[a1 _supplementaryColumnWidth];
}

id objc_msgSend__supportsSwipeActionsForIndexPath_swipeActionsType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_supportsSwipeActionsForIndexPath:swipeActionsType:");
}

id objc_msgSend__supportsTimelineGeneration(void *a1, const char *a2, ...)
{
  return _[a1 _supportsTimelineGeneration];
}

id objc_msgSend__swapCurrentArrangedSubview_withNewArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_swapCurrentArrangedSubview:withNewArrangedSubview:");
}

id objc_msgSend__switchEngine_audioSettings_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_switchEngine:audioSettings:error:");
}

id objc_msgSend__switchToCapturingFromPreviousActivityType_displayModel_waveformDataSource_isReplaceOrAppend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_switchToCapturingFromPreviousActivityType:displayModel:waveformDataSource:isReplaceOrAppend:");
}

id objc_msgSend__switchToEditingFromPreviousActivityType_displayModel_withComposition_enterTrim_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_switchToEditingFromPreviousActivityType:displayModel:withComposition:enterTrim:");
}

id objc_msgSend__switchToFullScreen(void *a1, const char *a2, ...)
{
  return _[a1 _switchToFullScreen];
}

id objc_msgSend__switchToIdleFromPreviousActivityType_fromSubActivityType_toSubActivityType_displayModel_withUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_switchToIdleFromPreviousActivityType:fromSubActivityType:toSubActivityType:displayModel:withUUID:");
}

id objc_msgSend__switchToPlayingBackFromPreviousActivityType_withUUID_(void *a1, const char *a2, ...)
{
  return [a1 _switchToPlayingBackFromPreviousActivityType:withUUID:];
}

id objc_msgSend__switchToTitleTextField(void *a1, const char *a2, ...)
{
  return _[a1 _switchToTitleTextField];
}

id objc_msgSend__syncCenterClusterSpacing(void *a1, const char *a2, ...)
{
  return _[a1 _syncCenterClusterSpacing];
}

id objc_msgSend__syncCenterContentContainerViewState(void *a1, const char *a2, ...)
{
  return _[a1 _syncCenterContentContainerViewState];
}

id objc_msgSend__syncDurationVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _syncDurationVisibility];
}

id objc_msgSend__syncEditingInFlight(void *a1, const char *a2, ...)
{
  return _[a1 _syncEditingInFlight];
}

id objc_msgSend__syncForStyleChanges(void *a1, const char *a2, ...)
{
  return _[a1 _syncForStyleChanges];
}

id objc_msgSend__syncLongPressGestureRecognizerEnablement(void *a1, const char *a2, ...)
{
  return _[a1 _syncLongPressGestureRecognizerEnablement];
}

id objc_msgSend__syncSubviewIntrinsicHeights(void *a1, const char *a2, ...)
{
  return _[a1 _syncSubviewIntrinsicHeights];
}

id objc_msgSend__syncTapGestureRecognizerEnablement(void *a1, const char *a2, ...)
{
  return _[a1 _syncTapGestureRecognizerEnablement];
}

id objc_msgSend__syncToStyleAndPlayControlState(void *a1, const char *a2, ...)
{
  return _[a1 _syncToStyleAndPlayControlState];
}

id objc_msgSend__syncViewsToState(void *a1, const char *a2, ...)
{
  return _[a1 _syncViewsToState];
}

id objc_msgSend__syncWaveformCompactness(void *a1, const char *a2, ...)
{
  return _[a1 _syncWaveformCompactness];
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:");
}

id objc_msgSend__tearDown(void *a1, const char *a2, ...)
{
  return _[a1 _tearDown];
}

id objc_msgSend__tearDownTimeStretch(void *a1, const char *a2, ...)
{
  return _[a1 _tearDownTimeStretch];
}

id objc_msgSend__teardownRemoteControlCommands(void *a1, const char *a2, ...)
{
  return _[a1 _teardownRemoteControlCommands];
}

id objc_msgSend__textColorForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textColorForState:");
}

id objc_msgSend__thisWeekDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _thisWeekDateFormatter];
}

id objc_msgSend__tightBoundingBoxLayoutGuide(void *a1, const char *a2, ...)
{
  return _[a1 _tightBoundingBoxLayoutGuide];
}

id objc_msgSend__timeLabelAttributes(void *a1, const char *a2, ...)
{
  return _[a1 _timeLabelAttributes];
}

id objc_msgSend__title(void *a1, const char *a2, ...)
{
  return _[a1 _title];
}

id objc_msgSend__todayDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _todayDateFormatter];
}

id objc_msgSend__toggleButtonWithDefaultImage_toggleImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_toggleButtonWithDefaultImage:toggleImage:");
}

id objc_msgSend__toggleEdit(void *a1, const char *a2, ...)
{
  return _[a1 _toggleEdit];
}

id objc_msgSend__toggleFavorite(void *a1, const char *a2, ...)
{
  return _[a1 _toggleFavorite];
}

id objc_msgSend__totalSidebarWidth(void *a1, const char *a2, ...)
{
  return _[a1 _totalSidebarWidth];
}

id objc_msgSend__totalViewWidth(void *a1, const char *a2, ...)
{
  return _[a1 _totalViewWidth];
}

id objc_msgSend__touchInsets(void *a1, const char *a2, ...)
{
  return _[a1 _touchInsets];
}

id objc_msgSend__touchIsInExcludedView_(void *a1, const char *a2, ...)
{
  return [a1 _touchIsInExcludedView:];
}

id objc_msgSend__touchTrackingInfoForSelectionBarTye_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_touchTrackingInfoForSelectionBarTye:");
}

id objc_msgSend__trackIndexForCurrentTrackState(void *a1, const char *a2, ...)
{
  return _[a1 _trackIndexForCurrentTrackState];
}

id objc_msgSend__trailingRoundedFrame(void *a1, const char *a2, ...)
{
  return _[a1 _trailingRoundedFrame];
}

id objc_msgSend__trailingSwipeActionsConfigurationProvider(void *a1, const char *a2, ...)
{
  return _[a1 _trailingSwipeActionsConfigurationProvider];
}

id objc_msgSend__transitionPresentedCompactRecordingCardToTrimMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionPresentedCompactRecordingCardToTrimMode:");
}

id objc_msgSend__transitionToActivityType_toSubType_withDisplayModel_waveformDataSource_composition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionToActivityType:toSubType:withDisplayModel:waveformDataSource:composition:");
}

id objc_msgSend__transitionToBrowsing_(void *a1, const char *a2, ...)
{
  return [a1 _transitionToBrowsing:];
}

id objc_msgSend__transitionToCaptureAndModifyWithOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionToCaptureAndModifyWithOptions:completion:");
}

id objc_msgSend__transitionToIdleForItemWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 _transitionToIdleForItemWithUUID:];
}

id objc_msgSend__trimDeleteButtonHeight(void *a1, const char *a2, ...)
{
  return _[a1 _trimDeleteButtonHeight];
}

id objc_msgSend__trimDeleteButtonLeftPadding(void *a1, const char *a2, ...)
{
  return _[a1 _trimDeleteButtonLeftPadding];
}

id objc_msgSend__trimDeleteButtonWidth(void *a1, const char *a2, ...)
{
  return _[a1 _trimDeleteButtonWidth];
}

id objc_msgSend__undoActionNameForTrimMode_isUndo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_undoActionNameForTrimMode:isUndo:");
}

id objc_msgSend__unprepare(void *a1, const char *a2, ...)
{
  return _[a1 _unprepare];
}

id objc_msgSend__updateAfterSelectionChangeToSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAfterSelectionChangeToSelected:");
}

id objc_msgSend__updateAmplitudes(void *a1, const char *a2, ...)
{
  return _[a1 _updateAmplitudes];
}

id objc_msgSend__updateAnnotationViews(void *a1, const char *a2, ...)
{
  return _[a1 _updateAnnotationViews];
}

id objc_msgSend__updateBackgroundWaveformHighlight(void *a1, const char *a2, ...)
{
  return _[a1 _updateBackgroundWaveformHighlight];
}

id objc_msgSend__updateBottomLayoutForCollectionViewEditMode_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBottomLayoutForCollectionViewEditMode:delegate:");
}

id objc_msgSend__updateButtonColors(void *a1, const char *a2, ...)
{
  return _[a1 _updateButtonColors];
}

id objc_msgSend__updateButtonState_hidden_enabled_dimmedMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateButtonState:hidden:enabled:dimmedMode:");
}

id objc_msgSend__updateCellSelectionForActiveFolder(void *a1, const char *a2, ...)
{
  return _[a1 _updateCellSelectionForActiveFolder];
}

id objc_msgSend__updateCenterContentContainerViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _updateCenterContentContainerViewConstraints];
}

id objc_msgSend__updateCollectionViewContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCollectionViewContent:");
}

id objc_msgSend__updateCollectionViewWithPlaybackSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCollectionViewWithPlaybackSettings:");
}

id objc_msgSend__updateControllersToEditingInFlight_progress_forUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateControllersToEditingInFlight:progress:forUUID:");
}

id objc_msgSend__updateControlsToHidden_enabled_rightSideButtonVisible_leftSideButtonVisible_dimmedMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateControlsToHidden:enabled:rightSideButtonVisible:leftSideButtonVisible:dimmedMode:");
}

id objc_msgSend__updateCreationDateOrDownloadingLabel(void *a1, const char *a2, ...)
{
  return _[a1 _updateCreationDateOrDownloadingLabel];
}

id objc_msgSend__updateCurrentTimeDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _updateCurrentTimeDisplay];
}

id objc_msgSend__updateCurrentTimeForCapturedInputAtTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCurrentTimeForCapturedInputAtTime:");
}

id objc_msgSend__updateCurrentTimeLabelForTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCurrentTimeLabelForTime:");
}

id objc_msgSend__updateDisplayableTimesWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDisplayableTimesWithBlock:");
}

id objc_msgSend__updateEditButtonStateAndExitEditingIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateEditButtonStateAndExitEditingIfNeeded];
}

id objc_msgSend__updateEditButtonStateForRecordingsCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateEditButtonStateForRecordingsCount:");
}

id objc_msgSend__updateFitToWidthUnitsPerSecond(void *a1, const char *a2, ...)
{
  return _[a1 _updateFitToWidthUnitsPerSecond];
}

id objc_msgSend__updateForAvailableDuraton(void *a1, const char *a2, ...)
{
  return _[a1 _updateForAvailableDuraton];
}

id objc_msgSend__updateInterfaceForTimeControllerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateInterfaceForTimeControllerState:");
}

id objc_msgSend__updateIsAudioSessionActiveForInterruption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateIsAudioSessionActiveForInterruption:");
}

id objc_msgSend__updateLayers(void *a1, const char *a2, ...)
{
  return _[a1 _updateLayers];
}

id objc_msgSend__updateLibraryCollectionViewBottomConstraint(void *a1, const char *a2, ...)
{
  return _[a1 _updateLibraryCollectionViewBottomConstraint];
}

id objc_msgSend__updateMinMaxImages(void *a1, const char *a2, ...)
{
  return _[a1 _updateMinMaxImages];
}

id objc_msgSend__updateMinimalViewContainer(void *a1, const char *a2, ...)
{
  return _[a1 _updateMinimalViewContainer];
}

id objc_msgSend__updateMoreButtonMenu(void *a1, const char *a2, ...)
{
  return _[a1 _updateMoreButtonMenu];
}

id objc_msgSend__updateMoreOptionsMenu(void *a1, const char *a2, ...)
{
  return _[a1 _updateMoreOptionsMenu];
}

id objc_msgSend__updateMultitrackIndicatorViewVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateMultitrackIndicatorViewVisibility];
}

id objc_msgSend__updateNavigationBarPaletteHeightIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateNavigationBarPaletteHeightIfNeeded];
}

id objc_msgSend__updateNewVMAudioPlayer_withPropertiesForRecordingID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNewVMAudioPlayer:withPropertiesForRecordingID:");
}

id objc_msgSend__updateNowPlayingInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateNowPlayingInfo];
}

id objc_msgSend__updateParameterForAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateParameterForAddress:");
}

id objc_msgSend__updatePlatterViewElementStateForLayoutMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePlatterViewElementStateForLayoutMode:");
}

id objc_msgSend__updateRecordButtonStateForRecordingViewState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRecordButtonStateForRecordingViewState:");
}

id objc_msgSend__updateRecordButtonViewState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRecordButtonViewState:");
}

id objc_msgSend__updateRecordingDescriptionViewForDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRecordingDescriptionViewForDuration:");
}

id objc_msgSend__updateRecordingViewStatusBarHeight(void *a1, const char *a2, ...)
{
  return _[a1 _updateRecordingViewStatusBarHeight];
}

id objc_msgSend__updateRecordingWithUniqueID_updateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRecordingWithUniqueID:updateBlock:");
}

id objc_msgSend__updateRemoteControlState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRemoteControlState:");
}

id objc_msgSend__updateResetButtonState(void *a1, const char *a2, ...)
{
  return _[a1 _updateResetButtonState];
}

id objc_msgSend__updateSearchBarPlaceholder(void *a1, const char *a2, ...)
{
  return _[a1 _updateSearchBarPlaceholder];
}

id objc_msgSend__updateSearchString_(void *a1, const char *a2, ...)
{
  return [a1 _updateSearchString:];
}

id objc_msgSend__updateSelectedTimeRangeForTrackedTouchesAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSelectedTimeRangeForTrackedTouchesAnimated:");
}

id objc_msgSend__updateSelectionOverlayWithAnimationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSelectionOverlayWithAnimationDuration:");
}

id objc_msgSend__updateShuttleBarEnablement(void *a1, const char *a2, ...)
{
  return _[a1 _updateShuttleBarEnablement];
}

id objc_msgSend__updateStackIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateStackIfNeeded];
}

id objc_msgSend__updateStereoOrientationWithOverdubbing_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStereoOrientationWithOverdubbing:error:");
}

id objc_msgSend__updateTextFieldFocusabilityForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTextFieldFocusabilityForStyle:");
}

id objc_msgSend__updateTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTime:");
}

id objc_msgSend__updateTimeDisplayForTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTimeDisplayForTime:");
}

id objc_msgSend__updateTimeViewElementStateForLayoutMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTimeViewElementStateForLayoutMode:");
}

id objc_msgSend__updateToolbar(void *a1, const char *a2, ...)
{
  return _[a1 _updateToolbar];
}

id objc_msgSend__updateToolbarItems(void *a1, const char *a2, ...)
{
  return _[a1 _updateToolbarItems];
}

id objc_msgSend__updateToolbarItemsWithCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateToolbarItemsWithCount:");
}

id objc_msgSend__updateToolbarTranscriptionButtonState(void *a1, const char *a2, ...)
{
  return _[a1 _updateToolbarTranscriptionButtonState];
}

id objc_msgSend__updateToolbarsActivityMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateToolbarsActivityMode:");
}

id objc_msgSend__updateTrackInset(void *a1, const char *a2, ...)
{
  return _[a1 _updateTrackInset];
}

id objc_msgSend__updateTranscriptAvailableViewVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateTranscriptAvailableViewVisibility];
}

id objc_msgSend__updateTranscriptionButtonTint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTranscriptionButtonTint:");
}

id objc_msgSend__updateTranscriptionButtonVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateTranscriptionButtonVisibility];
}

id objc_msgSend__updateUUIDOfSelectedItem(void *a1, const char *a2, ...)
{
  return _[a1 _updateUUIDOfSelectedItem];
}

id objc_msgSend__updateViewHiddenStateForLayoutMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewHiddenStateForLayoutMode:");
}

id objc_msgSend__updateViewsForLayoutMode_platterState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewsForLayoutMode:platterState:");
}

id objc_msgSend__updateVisibilityOfNamedStateLabel_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVisibilityOfNamedStateLabel:animated:");
}

id objc_msgSend__updateVisibleAreaWithAnimationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVisibleAreaWithAnimationDuration:");
}

id objc_msgSend__updateVisualState_fromState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVisualState:fromState:");
}

id objc_msgSend__updateWaveformViewContentSizeAndOffset(void *a1, const char *a2, ...)
{
  return _[a1 _updateWaveformViewContentSizeAndOffset];
}

id objc_msgSend__updateWaveformViewContentSizeAndOffsetToSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWaveformViewContentSizeAndOffsetToSize:");
}

id objc_msgSend__updateWillMigrateFromSingleLayerToMultiLayer(void *a1, const char *a2, ...)
{
  return _[a1 _updateWillMigrateFromSingleLayerToMultiLayer];
}

id objc_msgSend__userFolderSectionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _userFolderSectionIdentifier];
}

id objc_msgSend__uuidArrayFromItemArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uuidArrayFromItemArray:");
}

id objc_msgSend__uuidForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _uuidForItemAtIndexPath:];
}

id objc_msgSend__uuidOfRecordingForPlaybackActivities(void *a1, const char *a2, ...)
{
  return _[a1 _uuidOfRecordingForPlaybackActivities];
}

id objc_msgSend__verifyVerticallyExpandedState(void *a1, const char *a2, ...)
{
  return _[a1 _verifyVerticallyExpandedState];
}

id objc_msgSend__viewClass(void *a1, const char *a2, ...)
{
  return _[a1 _viewClass];
}

id objc_msgSend__visibleTimeRangeForCurrentSelectionTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 _visibleTimeRangeForCurrentSelectionTimeRange];
}

id objc_msgSend__willSidebarExceedMaximumAllowedWidthForTotalViewWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_willSidebarExceedMaximumAllowedWidthForTotalViewWidth:");
}

id objc_msgSend__xAdjustmentAmount(void *a1, const char *a2, ...)
{
  return _[a1 _xAdjustmentAmount];
}

id objc_msgSend__xInset(void *a1, const char *a2, ...)
{
  return _[a1 _xInset];
}

id objc_msgSend__yesterdayDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 _yesterdayDateFormatter];
}

id objc_msgSend_absoluteDimension_(void *a1, const char *a2, ...)
{
  return [a1 absoluteDimension:];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_accessibilityContainer(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityContainer];
}

id objc_msgSend_accessibilityElements(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityElements];
}

id objc_msgSend_accessibilityFrame(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityFrame];
}

id objc_msgSend_accessibilityLabel(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityLabel];
}

id objc_msgSend_accessibilityLargeSizes(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityLargeSizes];
}

id objc_msgSend_accessibilityTraits(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityTraits];
}

id objc_msgSend_accessibilityValue(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityValue];
}

id objc_msgSend_accessibilityValueDidChange(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityValueDidChange];
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _[a1 action];
}

id objc_msgSend_actionActivated_(void *a1, const char *a2, ...)
{
  return [a1 actionActivated:];
}

id objc_msgSend_actionBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 actionBackgroundColor];
}

id objc_msgSend_actionButtonExtraXAxisActiveWidth(void *a1, const char *a2, ...)
{
  return _[a1 actionButtonExtraXAxisActiveWidth];
}

id objc_msgSend_actionDelegate(void *a1, const char *a2, ...)
{
  return _[a1 actionDelegate];
}

id objc_msgSend_actionHandler(void *a1, const char *a2, ...)
{
  return _[a1 actionHandler];
}

id objc_msgSend_actionImage(void *a1, const char *a2, ...)
{
  return _[a1 actionImage];
}

id objc_msgSend_actionImageAxLabel(void *a1, const char *a2, ...)
{
  return _[a1 actionImageAxLabel];
}

id objc_msgSend_actionImageView(void *a1, const char *a2, ...)
{
  return _[a1 actionImageView];
}

id objc_msgSend_actionMenuImageSize(void *a1, const char *a2, ...)
{
  return _[a1 actionMenuImageSize];
}

id objc_msgSend_actionStyle(void *a1, const char *a2, ...)
{
  return _[a1 actionStyle];
}

id objc_msgSend_actionTitle(void *a1, const char *a2, ...)
{
  return _[a1 actionTitle];
}

id objc_msgSend_actionTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 actionTitleLabel];
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:image:identifier:handler:];
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:style:handler:];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _[a1 activationState];
}

id objc_msgSend_activeAppearance(void *a1, const char *a2, ...)
{
  return _[a1 activeAppearance];
}

id objc_msgSend_activeFolderViewController(void *a1, const char *a2, ...)
{
  return _[a1 activeFolderViewController];
}

id objc_msgSend_activeLayoutMode(void *a1, const char *a2, ...)
{
  return _[a1 activeLayoutMode];
}

id objc_msgSend_activeLayoutModeDidChangeForPlatterViewController_previousActiveLayoutMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeLayoutModeDidChangeForPlatterViewController:previousActiveLayoutMode:");
}

id objc_msgSend_activeRecordingsCollectionViewController(void *a1, const char *a2, ...)
{
  return _[a1 activeRecordingsCollectionViewController];
}

id objc_msgSend_activeSliceColor(void *a1, const char *a2, ...)
{
  return _[a1 activeSliceColor];
}

id objc_msgSend_activeSliceQueue(void *a1, const char *a2, ...)
{
  return _[a1 activeSliceQueue];
}

id objc_msgSend_activeTimeController(void *a1, const char *a2, ...)
{
  return _[a1 activeTimeController];
}

id objc_msgSend_activityDidFinish_(void *a1, const char *a2, ...)
{
  return [a1 activityDidFinish:];
}

id objc_msgSend_activityItemsConfigurationWithItemProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityItemsConfigurationWithItemProviders:");
}

id objc_msgSend_activityMode(void *a1, const char *a2, ...)
{
  return _[a1 activityMode];
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _[a1 activityType];
}

id objc_msgSend_activityWaveformProcessor(void *a1, const char *a2, ...)
{
  return _[a1 activityWaveformProcessor];
}

id objc_msgSend_activityWaveformRunningAverageDuration(void *a1, const char *a2, ...)
{
  return _[a1 activityWaveformRunningAverageDuration];
}

id objc_msgSend_activityWaveformTimeWindowDuration(void *a1, const char *a2, ...)
{
  return _[a1 activityWaveformTimeWindowDuration];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return [a1 addAction:];
}

id objc_msgSend_addAction_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addAction:forControlEvents:];
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return [a1 addAnimation:forKey:];
}

id objc_msgSend_addAnimations_(void *a1, const char *a2, ...)
{
  return [a1 addAnimations:];
}

id objc_msgSend_addArcWithCenter_radius_startAngle_endAngle_clockwise_(void *a1, const char *a2, ...)
{
  return [a1 addArcWithCenter:radius:startAngle:endAngle:clockwise:];
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return [a1 addArrangedSubview:];
}

id objc_msgSend_addBlurEffect(void *a1, const char *a2, ...)
{
  return _[a1 addBlurEffect];
}

id objc_msgSend_addBottomToBottomConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addBottomToBottomConstraintWithView:padding:];
}

id objc_msgSend_addBottomToBottomMarginConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBottomToBottomMarginConstraintWithView:padding:");
}

id objc_msgSend_addBottomToTopConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addBottomToTopConstraintWithView:padding:];
}

id objc_msgSend_addBulletedListItemWithTitle_description_image_(void *a1, const char *a2, ...)
{
  return [a1 addBulletedListItemWithTitle:description:image:];
}

id objc_msgSend_addButton_(void *a1, const char *a2, ...)
{
  return [a1 addButton:];
}

id objc_msgSend_addCenterXConstraintWithView_(void *a1, const char *a2, ...)
{
  return [a1 addCenterXConstraintWithView:];
}

id objc_msgSend_addCenterXConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addCenterXConstraintWithView:padding:];
}

id objc_msgSend_addCenterYConstraintWithView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCenterYConstraintWithView:");
}

id objc_msgSend_addCenterYConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addCenterYConstraintWithView:];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addConstraint_(void *a1, const char *a2, ...)
{
  return [a1 addConstraint:];
}

id objc_msgSend_addConstraintWithAttribute_constant_(void *a1, const char *a2, ...)
{
  return [a1 addConstraintWithAttribute:];
}

id objc_msgSend_addConstraintWithView_attribute_padding_(void *a1, const char *a2, ...)
{
  return [a1 addConstraintWithView:attribute:padding:];
}

id objc_msgSend_addConstraintWithView_attribute_viewAttribute_padding_(void *a1, const char *a2, ...)
{
  return [a1 addConstraintWithView:attribute:viewAttribute:padding:];
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return [a1 addConstraints:];
}

id objc_msgSend_addContainer_(void *a1, const char *a2, ...)
{
  return [a1 addContainer:];
}

id objc_msgSend_addContentObserver_(void *a1, const char *a2, ...)
{
  return [a1 addContentObserver:];
}

id objc_msgSend_addContextToMergeChangesInto_(void *a1, const char *a2, ...)
{
  return [a1 addContextToMergeChangesInto];
}

id objc_msgSend_addControlsMenuItemsToBuilder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addControlsMenuItemsToBuilder:");
}

id objc_msgSend_addDisplayLinkObserver_(void *a1, const char *a2, ...)
{
  return [a1 addDisplayLinkObserver:];
}

id objc_msgSend_addEditMenuItemsToBuilder_(void *a1, const char *a2, ...)
{
  return [a1 addEditMenuItemsToBuilder:];
}

id objc_msgSend_addFileMenuItemsToBuilder_(void *a1, const char *a2, ...)
{
  return [a1 addFileMenuItemsToBuilder:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return [a1 addIndex:];
}

id objc_msgSend_addInteraction_(void *a1, const char *a2, ...)
{
  return [a1 addInteraction:];
}

id objc_msgSend_addLeadingToLeadingConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addLeadingToLeadingConstraintWithView:padding:];
}

id objc_msgSend_addLeadingToLeadingMarginConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addLeadingToLeadingMarginConstraintWithView:padding:];
}

id objc_msgSend_addLeadingToTrailingConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addLeadingToTrailingConstraintWithView:padding:];
}

id objc_msgSend_addLeftToCenterConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addLeftToCenterConstraintWithView:];
}

id objc_msgSend_addLeftToLeftConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addLeftToLeftConstraintWithView:padding:];
}

id objc_msgSend_addLeftToRightConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addLeftToRightConstraintWithView:padding:];
}

id objc_msgSend_addLineToPoint_(void *a1, const char *a2, ...)
{
  return [a1 addLineToPoint:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:];
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:forKeyPath:options:context:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 addObserverForName:object:queue:usingBlock:];
}

id objc_msgSend_addRecordingWithUUID_toBuiltInFolderOfType_(void *a1, const char *a2, ...)
{
  return [a1 addRecordingWithUUID:toBuiltInFolderOfType:];
}

id objc_msgSend_addRecordings_toFolder_(void *a1, const char *a2, ...)
{
  return [a1 addRecordings:toFolder:];
}

id objc_msgSend_addRecordingsWithUUIDs_toBuiltInFolderOfType_(void *a1, const char *a2, ...)
{
  return [a1 addRecordingsWithUUIDs:toBuiltInFolderOfType:];
}

id objc_msgSend_addRecordingsWithUUIDs_toUserFolderNamed_(void *a1, const char *a2, ...)
{
  return [a1 addRecordingsWithUUIDs:toUserFolderNamed:];
}

id objc_msgSend_addRecordingsWithUUIDs_toUserFolderWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 addRecordingsWithUUIDs:toUserFolderWithUUID:];
}

id objc_msgSend_addRightToCenterConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addRightToCenterConstraintWithView:padding:];
}

id objc_msgSend_addRightToLeftConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addRightToLeftConstraintWithView:padding:];
}

id objc_msgSend_addRightToRightConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addRightToRightConstraintWithView:padding:];
}

id objc_msgSend_addRowWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return [a1 addRowWithArrangedSubviews:];
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return [a1 addSublayer:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addSubviewAndCenter_(void *a1, const char *a2, ...)
{
  return [a1 addSubviewAndCenter:];
}

id objc_msgSend_addSubviewAndPinToEdges_(void *a1, const char *a2, ...)
{
  return [a1 addSubviewAndPinToEdges:];
}

id objc_msgSend_addTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:];
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forControlEvents:];
}

id objc_msgSend_addTargetWithHandler_(void *a1, const char *a2, ...)
{
  return [a1 addTargetWithHandler:];
}

id objc_msgSend_addTextFieldWithConfigurationHandler_(void *a1, const char *a2, ...)
{
  return [a1 addTextFieldWithConfigurationHandler:];
}

id objc_msgSend_addTimeObserver_(void *a1, const char *a2, ...)
{
  return [a1 addTimeObserver:];
}

id objc_msgSend_addTitleAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return [a1 addTitleAccessibilityTraits:];
}

id objc_msgSend_addToParentView(void *a1, const char *a2, ...)
{
  return _[a1 addToParentView];
}

id objc_msgSend_addToRunLoop_forMode_(void *a1, const char *a2, ...)
{
  return [a1 addToRunLoop:forMode:];
}

id objc_msgSend_addTopToBottomConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addTopToBottomConstraintWithView:padding:];
}

id objc_msgSend_addTopToTopConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addTopToTopConstraintWithView:padding:];
}

id objc_msgSend_addTopToTopMarginConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addTopToTopMarginConstraintWithView:padding:];
}

id objc_msgSend_addTrailingToLeadingConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addTrailingToLeadingConstraintWithView:padding:];
}

id objc_msgSend_addTrailingToTrailingConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addTrailingToTrailingConstraintWithView:padding:];
}

id objc_msgSend_addTrailingToTrailingMarginConstraintWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 addTrailingToTrailingMarginConstraintWithView:padding:];
}

id objc_msgSend_addTransitionSpacing(void *a1, const char *a2, ...)
{
  return _[a1 addTransitionSpacing];
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _[a1 address];
}

id objc_msgSend_adjustConstraints_forDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 adjustConstraints:forDisplayMode:];
}

id objc_msgSend_adjustConstraintsForDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 adjustConstraintsForDisplayMode:];
}

id objc_msgSend_adjustsStartTime(void *a1, const char *a2, ...)
{
  return _[a1 adjustsStartTime];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerWithTitle:message:preferredStyle:];
}

id objc_msgSend_alignCenterBottomToCenterBottomOfView_padding_(void *a1, const char *a2, ...)
{
  return [a1 alignCenterBottomToCenterBottomOfView:padding:];
}

id objc_msgSend_alignCenterBottomToCenterTopOfView_padding_(void *a1, const char *a2, ...)
{
  return [a1 alignCenterBottomToCenterTopOfView:padding:];
}

id objc_msgSend_alignCenterLeadingToCenterLeadingOfView_padding_(void *a1, const char *a2, ...)
{
  return [a1 alignCenterLeadingToCenterLeadingOfView:padding:];
}

id objc_msgSend_alignCenterToCenterOfView_(void *a1, const char *a2, ...)
{
  return [a1 alignCenterToCenterOfView:];
}

id objc_msgSend_alignCenterToCenterOfView_paddingX_paddingY_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignCenterToCenterOfView:paddingX:paddingY:");
}

id objc_msgSend_alignCenterTopToCenterBottomOfView_padding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignCenterTopToCenterBottomOfView:padding:");
}

id objc_msgSend_alignCenterTopToCenterTopOfView_padding_(void *a1, const char *a2, ...)
{
  return [a1 alignCenterTopToCenterTopOfView:padding:];
}

id objc_msgSend_alignCenterTrailingToCenterLeadingOfView_paddingX_paddingY_(void *a1, const char *a2, ...)
{
  return [a1 alignCenterTrailingToCenterLeadingOfView:paddingX:paddingY:];
}

id objc_msgSend_alignCenterTrailingToCenterTrailingMarginOfView_padding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignCenterTrailingToCenterTrailingMarginOfView:padding:");
}

id objc_msgSend_alignCenterTrailingToCenterTrailingOfView_padding_(void *a1, const char *a2, ...)
{
  return [a1 alignCenterTrailingToCenterTrailingOfView:padding:];
}

id objc_msgSend_alignTopTrailingToTopTrailingOfView_paddingX_paddingY_(void *a1, const char *a2, ...)
{
  return [a1 alignTopTrailingToTopTrailingOfView:paddingX:paddingY:];
}

id objc_msgSend_allBuiltInFolders(void *a1, const char *a2, ...)
{
  return _[a1 allBuiltInFolders];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 allUUIDs];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allowedTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 allowedTimeRange];
}

id objc_msgSend_allowsInteractiveCardSizing(void *a1, const char *a2, ...)
{
  return _[a1 allowsInteractiveCardSizing];
}

id objc_msgSend_allowsScrubbing(void *a1, const char *a2, ...)
{
  return _[a1 allowsScrubbing];
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return _[a1 alpha];
}

id objc_msgSend_alphaComponent(void *a1, const char *a2, ...)
{
  return _[a1 alphaComponent];
}

id objc_msgSend_alwaysHidesDetailNavBar(void *a1, const char *a2, ...)
{
  return _[a1 alwaysHidesDetailNavBar];
}

id objc_msgSend_alwaysShowsRecordingsCollectionViewToolbarInRecentlyDeleted(void *a1, const char *a2, ...)
{
  return _[a1 alwaysShowsRecordingsCollectionViewToolbarInRecentlyDeleted];
}

id objc_msgSend_amplitude(void *a1, const char *a2, ...)
{
  return _[a1 amplitude];
}

id objc_msgSend_amplitudeForSliceWithTimeRange_fullTimeRangeSampled_(void *a1, const char *a2, ...)
{
  return [a1 amplitudeForSliceWithTimeRange:fullTimeRangeSampled:];
}

id objc_msgSend_amplitudeNeedsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 amplitudeNeedsUpdate];
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return [a1 andPredicateWithSubpredicates:];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:completion:];
}

id objc_msgSend_animateProperty_toValue_fromValue_timing_(void *a1, const char *a2, ...)
{
  return [a1 animateProperty:toValue:fromValue:timing:];
}

id objc_msgSend_animateProperty_toValue_timing_(void *a1, const char *a2, ...)
{
  return [a1 animateProperty:toValue:timing:];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:];
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:delay:options:animations:completion:];
}

id objc_msgSend_animatesRecordingCardPresentation(void *a1, const char *a2, ...)
{
  return _[a1 animatesRecordingCardPresentation];
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _[a1 animation];
}

id objc_msgSend_animationCircleRadius(void *a1, const char *a2, ...)
{
  return _[a1 animationCircleRadius];
}

id objc_msgSend_animationDragCoefficient(void *a1, const char *a2, ...)
{
  return _[a1 animationDragCoefficient];
}

id objc_msgSend_animationDuration(void *a1, const char *a2, ...)
{
  return _[a1 animationDuration];
}

id objc_msgSend_animationForKey_(void *a1, const char *a2, ...)
{
  return [a1 animationForKey:];
}

id objc_msgSend_animationKeys(void *a1, const char *a2, ...)
{
  return _[a1 animationKeys];
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 animationWithKeyPath:];
}

id objc_msgSend_annotatedWaveformRectForLayoutBounds_(void *a1, const char *a2, ...)
{
  return [a1 annotatedWaveformRectForLayoutBounds:];
}

id objc_msgSend_annotationViewHeight(void *a1, const char *a2, ...)
{
  return _[a1 annotationViewHeight];
}

id objc_msgSend_appendAveragePowerLevelsByDigestingAudioPCMBuffer_(void *a1, const char *a2, ...)
{
  return [a1 appendAveragePowerLevelsByDigestingAudioPCMBuffer:];
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return [a1 appendFormat:];
}

id objc_msgSend_appendItemsWithIdentifiers_intoSectionWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 appendItemsWithIdentifiers:intoSectionWithIdentifier:];
}

id objc_msgSend_appendPath_(void *a1, const char *a2, ...)
{
  return [a1 appendPath:];
}

id objc_msgSend_appendSectionsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 appendSectionsWithIdentifiers:];
}

id objc_msgSend_appendSliceWithType_(void *a1, const char *a2, ...)
{
  return [a1 appendSliceWithType:];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applicationWaveformRenderer(void *a1, const char *a2, ...)
{
  return _[a1 applicationWaveformRenderer];
}

id objc_msgSend_applicationWillTerminateWithApplication_(void *a1, const char *a2, ...)
{
  return [a1 applicationWillTerminateWithApplication:];
}

id objc_msgSend_applySnapshot_animatingDifferences_(void *a1, const char *a2, ...)
{
  return [a1 applySnapshot:animatingDifferences:];
}

id objc_msgSend_applySnapshot_animatingDifferences_completion_(void *a1, const char *a2, ...)
{
  return [a1 applySnapshot:animatingDifferences:completion:];
}

id objc_msgSend_areAllColumnsVisible(void *a1, const char *a2, ...)
{
  return _[a1 areAllColumnsVisible];
}

id objc_msgSend_areAnimationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 areAnimationsEnabled];
}

id objc_msgSend_arrangedSubviews(void *a1, const char *a2, ...)
{
  return _[a1 arrangedSubviews];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObjectsFromArray:];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithArray:];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _[a1 ascender];
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return _[a1 asset];
}

id objc_msgSend_assetBackup(void *a1, const char *a2, ...)
{
  return _[a1 assetBackup];
}

id objc_msgSend_assetWithURL_(void *a1, const char *a2, ...)
{
  return [a1 assetWithURL:];
}

id objc_msgSend_assetWriter(void *a1, const char *a2, ...)
{
  return _[a1 assetWriter];
}

id objc_msgSend_assignActionOnDoneButton_(void *a1, const char *a2, ...)
{
  return [a1 assignActionOnDoneButton];
}

id objc_msgSend_assistantIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistantIsEnabled];
}

id objc_msgSend_associatedConstraints(void *a1, const char *a2, ...)
{
  return _[a1 associatedConstraints];
}

id objc_msgSend_attachNode_(void *a1, const char *a2, ...)
{
  return [a1 attachNode:];
}

id objc_msgSend_attemptSingleFragmentFinalization_recording_controller_(void *a1, const char *a2, ...)
{
  return [a1 attemptSingleFragmentFinalization:recording:controller:];
}

id objc_msgSend_attributedStringWithAttachment_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringWithAttachment:];
}

id objc_msgSend_auStrip(void *a1, const char *a2, ...)
{
  return _[a1 auStrip];
}

id objc_msgSend_audioBuffer(void *a1, const char *a2, ...)
{
  return _[a1 audioBuffer];
}

id objc_msgSend_audioEngineOutputNodeAccessQueue(void *a1, const char *a2, ...)
{
  return _[a1 audioEngineOutputNodeAccessQueue];
}

id objc_msgSend_audioFutureNeedsDownload(void *a1, const char *a2, ...)
{
  return _[a1 audioFutureNeedsDownload];
}

id objc_msgSend_audioPlayer(void *a1, const char *a2, ...)
{
  return _[a1 audioPlayer];
}

id objc_msgSend_audioProperties(void *a1, const char *a2, ...)
{
  return _[a1 audioProperties];
}

id objc_msgSend_audioRecorder(void *a1, const char *a2, ...)
{
  return _[a1 audioRecorder];
}

id objc_msgSend_audioRendererQueueEmpty(void *a1, const char *a2, ...)
{
  return _[a1 audioRendererQueueEmpty];
}

id objc_msgSend_audioRendererWasInterrupted(void *a1, const char *a2, ...)
{
  return _[a1 audioRendererWasInterrupted];
}

id objc_msgSend_audioTime(void *a1, const char *a2, ...)
{
  return _[a1 audioTime];
}

id objc_msgSend_audioUnit(void *a1, const char *a2, ...)
{
  return _[a1 audioUnit];
}

id objc_msgSend_audioWaveformControllerDidChangeAVState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioWaveformControllerDidChangeAVState:");
}

id objc_msgSend_audioWaveformControllerDidChangeAVTimes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioWaveformControllerDidChangeAVTimes:");
}

id objc_msgSend_audioWaveformControllerDidChangeWaveformDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioWaveformControllerDidChangeWaveformDataSource:");
}

id objc_msgSend_author(void *a1, const char *a2, ...)
{
  return _[a1 author];
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _[a1 authorizationStatus];
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentLocale];
}

id objc_msgSend_availableDuration(void *a1, const char *a2, ...)
{
  return _[a1 availableDuration];
}

id objc_msgSend_availableInputs(void *a1, const char *a2, ...)
{
  return _[a1 availableInputs];
}

id objc_msgSend_availableQuickActions(void *a1, const char *a2, ...)
{
  return _[a1 availableQuickActions];
}

id objc_msgSend_averagePowerLevels(void *a1, const char *a2, ...)
{
  return _[a1 averagePowerLevels];
}

id objc_msgSend_averagePowerLevelsCount(void *a1, const char *a2, ...)
{
  return _[a1 averagePowerLevelsCount];
}

id objc_msgSend_axCreationDateString(void *a1, const char *a2, ...)
{
  return _[a1 axCreationDateString];
}

id objc_msgSend_axDurationString(void *a1, const char *a2, ...)
{
  return _[a1 axDurationString];
}

id objc_msgSend_axMultiTrackIndicatorString(void *a1, const char *a2, ...)
{
  return _[a1 axMultiTrackIndicatorString];
}

id objc_msgSend_axSegment(void *a1, const char *a2, ...)
{
  return _[a1 axSegment];
}

id objc_msgSend_axTranscriptAvailableString(void *a1, const char *a2, ...)
{
  return _[a1 axTranscriptAvailableString];
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return _[a1 background];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColor];
}

id objc_msgSend_backgroundColorAnimation(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColorAnimation];
}

id objc_msgSend_backgroundContexts(void *a1, const char *a2, ...)
{
  return _[a1 backgroundContexts];
}

id objc_msgSend_backgroundView(void *a1, const char *a2, ...)
{
  return _[a1 backgroundView];
}

id objc_msgSend_backlightLuminanceDidChangeForPlatterViewController_(void *a1, const char *a2, ...)
{
  return [a1 backlightLuminanceDidChangeForPlatterViewController:];
}

id objc_msgSend_backupTimerFiredForUUID_(void *a1, const char *a2, ...)
{
  return [a1 backupTimerFiredForUUID];
}

id objc_msgSend_balanceSliderImageForLayerNumber_muted_(void *a1, const char *a2, ...)
{
  return [a1 balanceSliderImageForLayerNumber:muted:];
}

id objc_msgSend_barComponents(void *a1, const char *a2, ...)
{
  return _[a1 barComponents];
}

id objc_msgSend_barMatchesKnobRadius(void *a1, const char *a2, ...)
{
  return _[a1 barMatchesKnobRadius];
}

id objc_msgSend_barWidthMatchesKnobs(void *a1, const char *a2, ...)
{
  return _[a1 barWidthMatchesKnobs];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _[a1 begin];
}

id objc_msgSend_beginEditingTitle(void *a1, const char *a2, ...)
{
  return _[a1 beginEditingTitle];
}

id objc_msgSend_beginEndLabelsColor(void *a1, const char *a2, ...)
{
  return _[a1 beginEndLabelsColor];
}

id objc_msgSend_beginEndLabelsFont(void *a1, const char *a2, ...)
{
  return _[a1 beginEndLabelsFont];
}

id objc_msgSend_beginEndLabelsPlaybackColor(void *a1, const char *a2, ...)
{
  return _[a1 beginEndLabelsPlaybackColor];
}

id objc_msgSend_beginEndLabelsTopPadding(void *a1, const char *a2, ...)
{
  return _[a1 beginEndLabelsTopPadding];
}

id objc_msgSend_beginFileTranscriptionForRecordingUUID_(void *a1, const char *a2, ...)
{
  return [a1 beginFileTranscriptionForRecordingUUID:];
}

id objc_msgSend_beginIgnoringContentOffsetChanges(void *a1, const char *a2, ...)
{
  return _[a1 beginIgnoringContentOffsetChanges];
}

id objc_msgSend_beginLiveTranscription_(void *a1, const char *a2, ...)
{
  return [a1 beginLiveTranscription:];
}

id objc_msgSend_beginLoading(void *a1, const char *a2, ...)
{
  return _[a1 beginLoading];
}

id objc_msgSend_beginTime(void *a1, const char *a2, ...)
{
  return _[a1 beginTime];
}

id objc_msgSend_beginTimeIndicatorSelectionAffinity(void *a1, const char *a2, ...)
{
  return _[a1 beginTimeIndicatorSelectionAffinity];
}

id objc_msgSend_beginTrackingWithTouch_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 beginTrackingWithTouch:withEvent:];
}

id objc_msgSend_bezierPath(void *a1, const char *a2, ...)
{
  return _[a1 bezierPath];
}

id objc_msgSend_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:];
}

id objc_msgSend_bezierPathWithCGPath_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithCGPath:];
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithRect:];
}

id objc_msgSend_bezierPathWithRoundedRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 bezierPathWithRoundedRect:cornerRadius:];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_bls_shortLoggingString(void *a1, const char *a2, ...)
{
  return [a1 bls_shortLoggingString];
}

id objc_msgSend_boldButton(void *a1, const char *a2, ...)
{
  return _[a1 boldButton];
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 boldSystemFontOfSize:];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return [a1 BOOLForKey:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bottomAccessoryContentContainerHeight(void *a1, const char *a2, ...)
{
  return _[a1 bottomAccessoryContentContainerHeight];
}

id objc_msgSend_bottomAccessoryDescriptionHeight(void *a1, const char *a2, ...)
{
  return _[a1 bottomAccessoryDescriptionHeight];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_bottomControlsContainerView(void *a1, const char *a2, ...)
{
  return _[a1 bottomControlsContainerView];
}

id objc_msgSend_bottomControlsContainerViewBottomConstraint(void *a1, const char *a2, ...)
{
  return _[a1 bottomControlsContainerViewBottomConstraint];
}

id objc_msgSend_bottomFillerView(void *a1, const char *a2, ...)
{
  return _[a1 bottomFillerView];
}

id objc_msgSend_bounceWaveform(void *a1, const char *a2, ...)
{
  return _[a1 bounceWaveform];
}

id objc_msgSend_boundarySupplementaryItemWithLayoutSize_elementKind_alignment_(void *a1, const char *a2, ...)
{
  return [a1 boundarySupplementaryItemWithLayoutSize:elementKind:alignment:];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return [a1 bringSubviewToFront:];
}

id objc_msgSend_browseFoldersView(void *a1, const char *a2, ...)
{
  return _[a1 browseFoldersView];
}

id objc_msgSend_browseFoldersViewController(void *a1, const char *a2, ...)
{
  return _[a1 browseFoldersViewController];
}

id objc_msgSend_browsingDelegate(void *a1, const char *a2, ...)
{
  return _[a1 browsingDelegate];
}

id objc_msgSend_bufferEnumerator_startTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bufferEnumerator:startTime:error:");
}

id objc_msgSend_buildMenuWithBuilder_(void *a1, const char *a2, ...)
{
  return [a1 buildMenuWithBuilder:];
}

id objc_msgSend_builtInContentControllers(void *a1, const char *a2, ...)
{
  return _[a1 builtInContentControllers];
}

id objc_msgSend_builtInFolderOfType_(void *a1, const char *a2, ...)
{
  return [a1 builtInFolderOfType:];
}

id objc_msgSend_builtInFolderWithType_(void *a1, const char *a2, ...)
{
  return [a1 builtInFolderWithType:];
}

id objc_msgSend_builtinFolders(void *a1, const char *a2, ...)
{
  return _[a1 builtinFolders];
}

id objc_msgSend_bundle(void *a1, const char *a2, ...)
{
  return _[a1 bundle];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return [a1 bundleForClass:];
}

id objc_msgSend_buttonHeight(void *a1, const char *a2, ...)
{
  return _[a1 buttonHeight];
}

id objc_msgSend_buttonTray(void *a1, const char *a2, ...)
{
  return _[a1 buttonTray];
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return [a1 buttonWithType:];
}

id objc_msgSend_buttonsAndDescriptionContainerView(void *a1, const char *a2, ...)
{
  return _[a1 buttonsAndDescriptionContainerView];
}

id objc_msgSend_buttonsArray(void *a1, const char *a2, ...)
{
  return _[a1 buttonsArray];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_calculateAmplitude_sampleCount_channelCount_(void *a1, const char *a2, ...)
{
  return [a1 calculateAmplitude:];
}

id objc_msgSend_calculatedWidth(void *a1, const char *a2, ...)
{
  return _[a1 calculatedWidth];
}

id objc_msgSend_callCenterWithQueue_(void *a1, const char *a2, ...)
{
  return [a1 callCenterWithQueue:];
}

id objc_msgSend_canDelete(void *a1, const char *a2, ...)
{
  return _[a1 canDelete];
}

id objc_msgSend_canDuplicateRecording(void *a1, const char *a2, ...)
{
  return _[a1 canDuplicateRecording];
}

id objc_msgSend_canEditRecording(void *a1, const char *a2, ...)
{
  return _[a1 canEditRecording];
}

id objc_msgSend_canHandleCancel(void *a1, const char *a2, ...)
{
  return _[a1 canHandleCancel];
}

id objc_msgSend_canHandleCustomAction_withSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canHandleCustomAction:withSender:");
}

id objc_msgSend_canHandleDone(void *a1, const char *a2, ...)
{
  return _[a1 canHandleDone];
}

id objc_msgSend_canJumpBackward(void *a1, const char *a2, ...)
{
  return _[a1 canJumpBackward];
}

id objc_msgSend_canJumpForward(void *a1, const char *a2, ...)
{
  return _[a1 canJumpForward];
}

id objc_msgSend_canMoveRecordingsWithUUIDs_toFolderWithUUID_toFolderType_fromFolderUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canMoveRecordingsWithUUIDs:toFolderWithUUID:toFolderType:fromFolderUUID:");
}

id objc_msgSend_canMoveSelectedRecordingsFromFolderWithUUID_toFolderWithDisplayModel_excludedFolderUUIDsForSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canMoveSelectedRecordingsFromFolderWithUUID:toFolderWithDisplayModel:excludedFolderUUIDsForSelection:");
}

id objc_msgSend_canPlayRecording(void *a1, const char *a2, ...)
{
  return _[a1 canPlayRecording];
}

id objc_msgSend_canRenameRecording(void *a1, const char *a2, ...)
{
  return _[a1 canRenameRecording];
}

id objc_msgSend_canSave(void *a1, const char *a2, ...)
{
  return _[a1 canSave];
}

id objc_msgSend_canSaveTrimChanges(void *a1, const char *a2, ...)
{
  return _[a1 canSaveTrimChanges];
}

id objc_msgSend_canShareRecording(void *a1, const char *a2, ...)
{
  return _[a1 canShareRecording];
}

id objc_msgSend_canStartNewRecording(void *a1, const char *a2, ...)
{
  return _[a1 canStartNewRecording];
}

id objc_msgSend_canSwipeToNavigateBack(void *a1, const char *a2, ...)
{
  return _[a1 canSwipeToNavigateBack];
}

id objc_msgSend_canToggleEnhance(void *a1, const char *a2, ...)
{
  return _[a1 canToggleEnhance];
}

id objc_msgSend_canToggleEnhanceRecording(void *a1, const char *a2, ...)
{
  return _[a1 canToggleEnhanceRecording];
}

id objc_msgSend_canToggleFavorite(void *a1, const char *a2, ...)
{
  return _[a1 canToggleFavorite];
}

id objc_msgSend_canToggleFavoriteRecording(void *a1, const char *a2, ...)
{
  return _[a1 canToggleFavoriteRecording];
}

id objc_msgSend_canToggleRemoveSilence(void *a1, const char *a2, ...)
{
  return _[a1 canToggleRemoveSilence];
}

id objc_msgSend_canToggleSidebar(void *a1, const char *a2, ...)
{
  return _[a1 canToggleSidebar];
}

id objc_msgSend_canTrimRecording(void *a1, const char *a2, ...)
{
  return _[a1 canTrimRecording];
}

id objc_msgSend_canUndo(void *a1, const char *a2, ...)
{
  return _[a1 canUndo];
}

id objc_msgSend_cancelButton(void *a1, const char *a2, ...)
{
  return _[a1 cancelButton];
}

id objc_msgSend_cancelButtonBottomAlignmentOffset(void *a1, const char *a2, ...)
{
  return _[a1 cancelButtonBottomAlignmentOffset];
}

id objc_msgSend_cancelFileTranscriptionWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 cancelFileTranscriptionWithCompletionHandler:];
}

id objc_msgSend_cancelLoading(void *a1, const char *a2, ...)
{
  return _[a1 cancelLoading];
}

id objc_msgSend_cancelLoadingWaveformDataSource(void *a1, const char *a2, ...)
{
  return _[a1 cancelLoadingWaveformDataSource];
}

id objc_msgSend_cancelScrubbing(void *a1, const char *a2, ...)
{
  return _[a1 cancelScrubbing];
}

id objc_msgSend_cancelTextEditing(void *a1, const char *a2, ...)
{
  return _[a1 cancelTextEditing];
}

id objc_msgSend_cancelTracking(void *a1, const char *a2, ...)
{
  return _[a1 cancelTracking];
}

id objc_msgSend_cancelTrackingWithEvent_(void *a1, const char *a2, ...)
{
  return [a1 cancelTrackingWithEvent:];
}

id objc_msgSend_cancelTrimMode(void *a1, const char *a2, ...)
{
  return _[a1 cancelTrimMode];
}

id objc_msgSend_cancelTrimModeWithDismissal_(void *a1, const char *a2, ...)
{
  return [a1 cancelTrimModeWithDismissal:];
}

id objc_msgSend_captureFailedWithError_(void *a1, const char *a2, ...)
{
  return [a1 captureFailedWithError:];
}

id objc_msgSend_captureIsUnderway(void *a1, const char *a2, ...)
{
  return _[a1 captureIsUnderway];
}

id objc_msgSend_capturedOnWatchRecordingsFolder(void *a1, const char *a2, ...)
{
  return _[a1 capturedOnWatchRecordingsFolder];
}

id objc_msgSend_cardGoBackwardImage(void *a1, const char *a2, ...)
{
  return _[a1 cardGoBackwardImage];
}

id objc_msgSend_cardGoForwardImage(void *a1, const char *a2, ...)
{
  return _[a1 cardGoForwardImage];
}

id objc_msgSend_cardInsets_forDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 cardInsets:forDisplayMode:];
}

id objc_msgSend_cardPauseImage(void *a1, const char *a2, ...)
{
  return _[a1 cardPauseImage];
}

id objc_msgSend_cardPlayImage(void *a1, const char *a2, ...)
{
  return _[a1 cardPlayImage];
}

id objc_msgSend_cardPresentationDelegate(void *a1, const char *a2, ...)
{
  return _[a1 cardPresentationDelegate];
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return _[a1 category];
}

id objc_msgSend_categoryOptions(void *a1, const char *a2, ...)
{
  return _[a1 categoryOptions];
}

id objc_msgSend_cellActionsDelegate(void *a1, const char *a2, ...)
{
  return _[a1 cellActionsDelegate];
}

id objc_msgSend_cellConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 cellConfiguration];
}

id objc_msgSend_cellDelegate(void *a1, const char *a2, ...)
{
  return _[a1 cellDelegate];
}

id objc_msgSend_cellForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 cellForItemAtIndexPath:];
}

id objc_msgSend_cellForUUID_(void *a1, const char *a2, ...)
{
  return [a1 cellForUUID:];
}

id objc_msgSend_cellWhoseTitleIsBeingEdited(void *a1, const char *a2, ...)
{
  return _[a1 cellWhoseTitleIsBeingEdited];
}

id objc_msgSend_cellsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 cellsHashTable];
}

id objc_msgSend_cellsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 cellsMapTable];
}

id objc_msgSend_centerClusterControlSize(void *a1, const char *a2, ...)
{
  return _[a1 centerClusterControlSize];
}

id objc_msgSend_centerClusterControlSizeRecentlyDeleted(void *a1, const char *a2, ...)
{
  return _[a1 centerClusterControlSizeRecentlyDeleted];
}

id objc_msgSend_centerClusterStackView(void *a1, const char *a2, ...)
{
  return _[a1 centerClusterStackView];
}

id objc_msgSend_centerClusterWidthCard(void *a1, const char *a2, ...)
{
  return _[a1 centerClusterWidthCard];
}

id objc_msgSend_centerClusterWidthJumpButton(void *a1, const char *a2, ...)
{
  return _[a1 centerClusterWidthJumpButton];
}

id objc_msgSend_centerClusterWidthLibrary(void *a1, const char *a2, ...)
{
  return _[a1 centerClusterWidthLibrary];
}

id objc_msgSend_centerContentContainerTopAnchorToWindowConstraint(void *a1, const char *a2, ...)
{
  return _[a1 centerContentContainerTopAnchorToWindowConstraint];
}

id objc_msgSend_centerContentContainerView(void *a1, const char *a2, ...)
{
  return _[a1 centerContentContainerView];
}

id objc_msgSend_centerContentVerticalHuggingPriority(void *a1, const char *a2, ...)
{
  return _[a1 centerContentVerticalHuggingPriority];
}

id objc_msgSend_centerContentViewBottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 centerContentViewBottomPadding];
}

id objc_msgSend_centerContentViewState(void *a1, const char *a2, ...)
{
  return _[a1 centerContentViewState];
}

id objc_msgSend_centerContentViewTopPadding(void *a1, const char *a2, ...)
{
  return _[a1 centerContentViewTopPadding];
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerXAnchor];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerYAnchor];
}

id objc_msgSend_changeAXValue(void *a1, const char *a2, ...)
{
  return _[a1 changeAXValue];
}

id objc_msgSend_changePlaybackPositionCommand(void *a1, const char *a2, ...)
{
  return _[a1 changePlaybackPositionCommand];
}

id objc_msgSend_changeType(void *a1, const char *a2, ...)
{
  return _[a1 changeType];
}

id objc_msgSend_changedObjectID(void *a1, const char *a2, ...)
{
  return _[a1 changedObjectID];
}

id objc_msgSend_changes(void *a1, const char *a2, ...)
{
  return _[a1 changes];
}

id objc_msgSend_channelCount(void *a1, const char *a2, ...)
{
  return _[a1 channelCount];
}

id objc_msgSend_checkResourceIsReachableAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 checkResourceIsReachableAndReturnError:];
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllers];
}

id objc_msgSend_circleLayer(void *a1, const char *a2, ...)
{
  return _[a1 circleLayer];
}

id objc_msgSend_cleanupAfterDismiss(void *a1, const char *a2, ...)
{
  return _[a1 cleanupAfterDismiss];
}

id objc_msgSend_cleanupAfterExitTrim(void *a1, const char *a2, ...)
{
  return _[a1 cleanupAfterExitTrim];
}

id objc_msgSend_clear(void *a1, const char *a2, ...)
{
  return _[a1 clear];
}

id objc_msgSend_clearAndReloadSearchMetadataWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearAndReloadSearchMetadataWithCompletionBlock:");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearData(void *a1, const char *a2, ...)
{
  return _[a1 clearData];
}

id objc_msgSend_clearMutedTrackIndex(void *a1, const char *a2, ...)
{
  return _[a1 clearMutedTrackIndex];
}

id objc_msgSend_clipUnderlapWhileTransitioning(void *a1, const char *a2, ...)
{
  return _[a1 clipUnderlapWhileTransitioning];
}

id objc_msgSend_closeAudioFile_error_(void *a1, const char *a2, ...)
{
  return [a1 closeAudioFile:error:];
}

id objc_msgSend_closePath(void *a1, const char *a2, ...)
{
  return _[a1 closePath];
}

id objc_msgSend_cloudSyncIsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 cloudSyncIsAvailable];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _[a1 collectionView];
}

id objc_msgSend_collectionView_didSelectItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 collectionView:didSelectItemAtIndexPath:];
}

id objc_msgSend_collectionView_moveItemAtIndexPath_toIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 collectionView:moveItemAtIndexPath:toIndexPath:];
}

id objc_msgSend_collectionViewController(void *a1, const char *a2, ...)
{
  return _[a1 collectionViewController];
}

id objc_msgSend_collectionViewEditModeAnimationDuration(void *a1, const char *a2, ...)
{
  return _[a1 collectionViewEditModeAnimationDuration];
}

id objc_msgSend_collectionViewIfLoaded(void *a1, const char *a2, ...)
{
  return _[a1 collectionViewIfLoaded];
}

id objc_msgSend_color(void *a1, const char *a2, ...)
{
  return _[a1 color];
}

id objc_msgSend_color_byAddingColor_(void *a1, const char *a2, ...)
{
  return [a1 color:byAddingColor:];
}

id objc_msgSend_colorForSliceColor_dimmed_(void *a1, const char *a2, ...)
{
  return [a1 colorForSliceColor:dimmed:];
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return [a1 colorWithAlphaComponent:];
}

id objc_msgSend_colorWithDynamicProvider_(void *a1, const char *a2, ...)
{
  return [a1 colorWithDynamicProvider:];
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithRed:green:blue:alpha:];
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithWhite:alpha:];
}

id objc_msgSend_commandWithTitle_image_action_input_modifierFlags_propertyList_(void *a1, const char *a2, ...)
{
  return [a1 commandWithTitle:image:action:input:modifierFlags:propertyList:];
}

id objc_msgSend_commandWithTitle_image_action_propertyList_(void *a1, const char *a2, ...)
{
  return [a1 commandWithTitle:image:action:propertyList:];
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return _[a1 commit];
}

id objc_msgSend_compactStylePlayheadMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 compactStylePlayheadMultiplier];
}

id objc_msgSend_compactStyleTimeBarDefaultHeight(void *a1, const char *a2, ...)
{
  return _[a1 compactStyleTimeBarDefaultHeight];
}

id objc_msgSend_compactStyleTimeBarHeightInset(void *a1, const char *a2, ...)
{
  return _[a1 compactStyleTimeBarHeightInset];
}

id objc_msgSend_compactWaveformWaveVerticalPadding(void *a1, const char *a2, ...)
{
  return _[a1 compactWaveformWaveVerticalPadding];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return [a1 compare:];
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return [a1 compare:options:];
}

id objc_msgSend_compareDate_toDate_toUnitGranularity_(void *a1, const char *a2, ...)
{
  return [a1 compareDate:toDate:toUnitGranularity:];
}

id objc_msgSend_compareToken_error_(void *a1, const char *a2, ...)
{
  return [a1 compareToken:error:];
}

id objc_msgSend_completePresent(void *a1, const char *a2, ...)
{
  return _[a1 completePresent];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsJoinedByString:];
}

id objc_msgSend_composedAVURL(void *a1, const char *a2, ...)
{
  return _[a1 composedAVURL];
}

id objc_msgSend_composedAVURLBackup(void *a1, const char *a2, ...)
{
  return _[a1 composedAVURLBackup];
}

id objc_msgSend_composedAssetHasMultipleTracks(void *a1, const char *a2, ...)
{
  return _[a1 composedAssetHasMultipleTracks];
}

id objc_msgSend_composedDuration(void *a1, const char *a2, ...)
{
  return _[a1 composedDuration];
}

id objc_msgSend_composedFragments(void *a1, const char *a2, ...)
{
  return _[a1 composedFragments];
}

id objc_msgSend_composedTimeRangeForTrackIndex_(void *a1, const char *a2, ...)
{
  return [a1 composedTimeRangeForTrackIndex:];
}

id objc_msgSend_composedWaveformURLs(void *a1, const char *a2, ...)
{
  return _[a1 composedWaveformURLs];
}

id objc_msgSend_composition(void *a1, const char *a2, ...)
{
  return _[a1 composition];
}

id objc_msgSend_compositionByOverdubbingWithFragment_(void *a1, const char *a2, ...)
{
  return [a1 compositionByOverdubbingWithFragment:];
}

id objc_msgSend_compositionForUUID_(void *a1, const char *a2, ...)
{
  return [a1 compositionForUUID:];
}

id objc_msgSend_compositionIsShareable(void *a1, const char *a2, ...)
{
  return _[a1 compositionIsShareable];
}

id objc_msgSend_compositionLoadedForEditingSavedRecording_error_(void *a1, const char *a2, ...)
{
  return [a1 compositionLoadedForEditingSavedRecording:error:];
}

id objc_msgSend_compositionLoadedForSavedRecording_(void *a1, const char *a2, ...)
{
  return [a1 compositionLoadedForSavedRecording:];
}

id objc_msgSend_compositionLoadedForSavedRecordingUUID_(void *a1, const char *a2, ...)
{
  return [a1 compositionLoadedForSavedRecordingUUID:];
}

id objc_msgSend_compositionMetadataURLForComposedAVURL_(void *a1, const char *a2, ...)
{
  return [a1 compositionMetadataURLForComposedAVURL];
}

id objc_msgSend_compressedAudioSettings(void *a1, const char *a2, ...)
{
  return _[a1 compressedAudioSettings];
}

id objc_msgSend_configurationByApplyingConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 configurationByApplyingConfiguration:];
}

id objc_msgSend_configurationState(void *a1, const char *a2, ...)
{
  return _[a1 configurationState];
}

id objc_msgSend_configurationWithActions_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithActions:];
}

id objc_msgSend_configurationWithIdentifier_previewProvider_actionProvider_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithIdentifier:previewProvider:actionProvider:];
}

id objc_msgSend_configurationWithPaletteColors_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithPaletteColors:];
}

id objc_msgSend_configurationWithPointSize_weight_scale_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithPointSize:weight:scale:];
}

id objc_msgSend_configurationWithScale_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithScale:];
}

id objc_msgSend_configurationWithWeight_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithWeight:];
}

id objc_msgSend_configureLineBreakMode_force_(void *a1, const char *a2, ...)
{
  return [a1 configureLineBreakMode:force:];
}

id objc_msgSend_configureWithAudioSettings_error_(void *a1, const char *a2, ...)
{
  return [a1 configureWithAudioSettings:error:];
}

id objc_msgSend_configureWithFolderName_recordingsCount_iconImage_UUID_folderType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithFolderName:recordingsCount:iconImage:UUID:folderType:");
}

id objc_msgSend_confirmEraseAllWithSourceController_source_eraseAllDeleted_(void *a1, const char *a2, ...)
{
  return [a1 confirmEraseAllWithSourceController:source:eraseAllDeleted:];
}

id objc_msgSend_confirmEraseSelectedWithSourceController_source_eraseAllDeleted_(void *a1, const char *a2, ...)
{
  return [a1 confirmEraseSelectedWithSourceController:source:eraseAllDeleted:];
}

id objc_msgSend_confirmEraseWithUUIDs_sourceController_source_eraseAllDeleted_(void *a1, const char *a2, ...)
{
  return [a1 confirmEraseWithUUIDs:sourceController:source:eraseAllDeleted:];
}

id objc_msgSend_confirmRecoverAllWithSourceController_source_(void *a1, const char *a2, ...)
{
  return [a1 confirmRecoverAllWithSourceController:source:];
}

id objc_msgSend_confirmRecoverSelectedWithSourceController_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confirmRecoverSelectedWithSourceController:source:");
}

id objc_msgSend_confirmRecoverWithUUIDs_sourceController_source_force_(void *a1, const char *a2, ...)
{
  return [a1 confirmRecoverWithUUIDs:sourceController:source:force:];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return [a1 conformsToProtocol:];
}

id objc_msgSend_connect_to_format_(void *a1, const char *a2, ...)
{
  return [a1 connect:to:format:];
}

id objc_msgSend_connectedLockScreenSceneDelegate(void *a1, const char *a2, ...)
{
  return _[a1 connectedLockScreenSceneDelegate];
}

id objc_msgSend_connectedScenes(void *a1, const char *a2, ...)
{
  return _[a1 connectedScenes];
}

id objc_msgSend_constant(void *a1, const char *a2, ...)
{
  return _[a1 constant];
}

id objc_msgSend_constrainHeight_(void *a1, const char *a2, ...)
{
  return [a1 constrainHeight:];
}

id objc_msgSend_constrainSize_(void *a1, const char *a2, ...)
{
  return [a1 constrainSize:];
}

id objc_msgSend_constrainSizeAndAlignCenterToCenterOfView_(void *a1, const char *a2, ...)
{
  return [a1 constrainSizeAndAlignCenterToCenterOfView:];
}

id objc_msgSend_constrainSizeAndAlignCenterToCenterOfView_sizePaddingX_sizePaddingY_centerPaddingX_centerPaddingY_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constrainSizeAndAlignCenterToCenterOfView:sizePaddingX:sizePaddingY:centerPaddingX:centerPaddingY:");
}

id objc_msgSend_constrainSizeWithView_paddingX_paddingY_(void *a1, const char *a2, ...)
{
  return [a1 constrainSizeWithView:paddingX:paddingY:];
}

id objc_msgSend_constrainWidth_(void *a1, const char *a2, ...)
{
  return [a1 constrainWidth:];
}

id objc_msgSend_constrainWidthWithView_padding_(void *a1, const char *a2, ...)
{
  return [a1 constrainWidthWithView:padding:];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:multiplier:];
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToConstant:];
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToAnchor];
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToAnchor:constant:];
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToConstant:];
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToAnchor:constant:];
}

id objc_msgSend_constraintLessThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToConstant:];
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:];
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return _[a1 constraints];
}

id objc_msgSend_constraintsForLayoutMode_platterState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsForLayoutMode:platterState:");
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return [a1 constraintsWithVisualFormat:options:metrics:views:];
}

id objc_msgSend_consumeInput_(void *a1, const char *a2, ...)
{
  return [a1 consumeInput:];
}

id objc_msgSend_consumeRingBufferIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 consumeRingBufferIfNecessary];
}

id objc_msgSend_containersDidUpdate_(void *a1, const char *a2, ...)
{
  return [a1 containersDidUpdate:];
}

id objc_msgSend_containersWillUpdate_(void *a1, const char *a2, ...)
{
  return [a1 containersWillUpdate:];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return [a1 containsString:];
}

id objc_msgSend_containsTrait_(void *a1, const char *a2, ...)
{
  return [a1 containsTrait:];
}

id objc_msgSend_contentChangesComplete(void *a1, const char *a2, ...)
{
  return _[a1 contentChangesComplete];
}

id objc_msgSend_contentConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 contentConfiguration];
}

id objc_msgSend_contentDuration(void *a1, const char *a2, ...)
{
  return _[a1 contentDuration];
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _[a1 contentInset];
}

id objc_msgSend_contentInsets(void *a1, const char *a2, ...)
{
  return _[a1 contentInsets];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _[a1 contentOffset];
}

id objc_msgSend_contentOffsetInPresentationLayer_(void *a1, const char *a2, ...)
{
  return [a1 contentOffsetInPresentationLayer:];
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _[a1 contentSize];
}

id objc_msgSend_contentUnavailableConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 contentUnavailableConfiguration];
}

id objc_msgSend_contentUnavailableState(void *a1, const char *a2, ...)
{
  return _[a1 contentUnavailableState];
}

id objc_msgSend_contentUnavailableViewAnimationDuration(void *a1, const char *a2, ...)
{
  return _[a1 contentUnavailableViewAnimationDuration];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_contentWidth(void *a1, const char *a2, ...)
{
  return _[a1 contentWidth];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_contextName(void *a1, const char *a2, ...)
{
  return _[a1 contextName];
}

id objc_msgSend_contextualActionWithStyle_title_handler_(void *a1, const char *a2, ...)
{
  return [a1 contextualActionWithStyle:title:handler:];
}

id objc_msgSend_continueTrackingWithTouch_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 continueTrackingWithTouch:withEvent:];
}

id objc_msgSend_controlActivated_(void *a1, const char *a2, ...)
{
  return [a1 controlActivated:];
}

id objc_msgSend_controlInteractionDelegate(void *a1, const char *a2, ...)
{
  return _[a1 controlInteractionDelegate];
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return _[a1 controller];
}

id objc_msgSend_controller_didChangeContentWithSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller:didChangeContentWithSnapshot:");
}

id objc_msgSend_controller_didChangeObject_atIndexPath_forChangeType_newIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:");
}

id objc_msgSend_controllerDidChangeContent_(void *a1, const char *a2, ...)
{
  return [a1 controllerDidChangeContent:];
}

id objc_msgSend_controllerWillChangeContent_(void *a1, const char *a2, ...)
{
  return [a1 controllerWillChangeContent:];
}

id objc_msgSend_controlsAction(void *a1, const char *a2, ...)
{
  return _[a1 controlsAction];
}

id objc_msgSend_controlsActionDelegate(void *a1, const char *a2, ...)
{
  return _[a1 controlsActionDelegate];
}

id objc_msgSend_controlsColor(void *a1, const char *a2, ...)
{
  return _[a1 controlsColor];
}

id objc_msgSend_controlsMenu(void *a1, const char *a2, ...)
{
  return _[a1 controlsMenu];
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return [a1 convertPoint:toView:];
}

id objc_msgSend_convertRect_fromLayer_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromLayer:];
}

id objc_msgSend_convertRect_toView_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:toView:];
}

id objc_msgSend_convertToBuffer_error_withInputFromBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertToBuffer:error:withInputFromBlock:");
}

id objc_msgSend_convertToBuffer_fromBuffer_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertToBuffer:fromBuffer:error:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyDataSourcesFromRecordingViewController_(void *a1, const char *a2, ...)
{
  return [a1 copyDataSourcesFromRecordingViewController:];
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return [a1 copyItemAtURL:toURL:error:];
}

id objc_msgSend_copyResourcesForSharingIntoDirectory_(void *a1, const char *a2, ...)
{
  return [a1 copyResourcesForSharingIntoDirectory:];
}

id objc_msgSend_copyTranscript_(void *a1, const char *a2, ...)
{
  return [a1 copyTranscript:];
}

id objc_msgSend_copyTranscriptImageName(void *a1, const char *a2, ...)
{
  return _[a1 copyTranscriptImageName];
}

id objc_msgSend_copyWithTrackIndex_emptyCopy_(void *a1, const char *a2, ...)
{
  return [a1 copyWithTrackIndex:emptyCopy:];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return [a1 countByEnumeratingWithState:objects:count:];
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return [a1 createDirectoryAtURL:withIntermediateDirectories:attributes:error:];
}

id objc_msgSend_createMenuWithDisplayCopyTranscriptAction_hideTrimItem_hasMultipleTracks_showUndoItem_(void *a1, const char *a2, ...)
{
  return [a1 createMenuWithDisplayCopyTranscriptAction:hideTrimItem:hasMultipleTracks:showUndoItem:];
}

id objc_msgSend_createMenuWithDisplayShowTranscriptAction_displayCopyTranscriptAction_hasMultipleTracks_(void *a1, const char *a2, ...)
{
  return [a1 createMenuWithDisplayShowTranscriptAction:displayShowTranscriptAction:displayCopyTranscriptAction:hasMultipleTracks:];
}

id objc_msgSend_createNewFolderButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 createNewFolderButtonItem];
}

id objc_msgSend_createNewFolderImage(void *a1, const char *a2, ...)
{
  return _[a1 createNewFolderImage];
}

id objc_msgSend_createNewFolderSaveAction(void *a1, const char *a2, ...)
{
  return _[a1 createNewFolderSaveAction];
}

id objc_msgSend_createNewWaveformViewControllerWithDataSource_isOverview_isCompact_waveformOnly_(void *a1, const char *a2, ...)
{
  return [a1 createNewWaveformViewControllerWithDataSource:isOverview:isCompact:waveformOnly:];
}

id objc_msgSend_createRecordButton(void *a1, const char *a2, ...)
{
  return _[a1 createRecordButton];
}

id objc_msgSend_createTranscriptViewExpansionAnimator(void *a1, const char *a2, ...)
{
  return _[a1 createTranscriptViewExpansionAnimator];
}

id objc_msgSend_createUserFolderWithName_(void *a1, const char *a2, ...)
{
  return [a1 createUserFolderWithName:];
}

id objc_msgSend_creationDate(void *a1, const char *a2, ...)
{
  return _[a1 creationDate];
}

id objc_msgSend_creationDateLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 creationDateLabelFont];
}

id objc_msgSend_creationDateLabelFontForRecordingCollectionViewCell(void *a1, const char *a2, ...)
{
  return _[a1 creationDateLabelFontForRecordingCollectionViewCell];
}

id objc_msgSend_creationDateOrDownloadingLabel(void *a1, const char *a2, ...)
{
  return _[a1 creationDateOrDownloadingLabel];
}

id objc_msgSend_crossfadePauseLayer_animated_(void *a1, const char *a2, ...)
{
  return [a1 crossfadePauseLayer:animated:];
}

id objc_msgSend_crossfadeText_color_animated_(void *a1, const char *a2, ...)
{
  return [a1 crossfadeText:color:animated:];
}

id objc_msgSend_currentActiveFolderViewController(void *a1, const char *a2, ...)
{
  return _[a1 currentActiveFolderViewController];
}

id objc_msgSend_currentAudioAndVideoCallCount(void *a1, const char *a2, ...)
{
  return _[a1 currentAudioAndVideoCallCount];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentComposition(void *a1, const char *a2, ...)
{
  return _[a1 currentComposition];
}

id objc_msgSend_currentContentSize(void *a1, const char *a2, ...)
{
  return _[a1 currentContentSize];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentDuration(void *a1, const char *a2, ...)
{
  return _[a1 currentDuration];
}

id objc_msgSend_currentFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 currentFirstResponder];
}

id objc_msgSend_currentFolderViewController(void *a1, const char *a2, ...)
{
  return _[a1 currentFolderViewController];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentItem(void *a1, const char *a2, ...)
{
  return _[a1 currentItem];
}

id objc_msgSend_currentLabelAccessoryTintColor(void *a1, const char *a2, ...)
{
  return _[a1 currentLabelAccessoryTintColor];
}

id objc_msgSend_currentLocation(void *a1, const char *a2, ...)
{
  return _[a1 currentLocation];
}

id objc_msgSend_currentLocationBasedName(void *a1, const char *a2, ...)
{
  return _[a1 currentLocationBasedName];
}

id objc_msgSend_currentMode(void *a1, const char *a2, ...)
{
  return _[a1 currentMode];
}

id objc_msgSend_currentPersistentHistoryTokenFromStores_(void *a1, const char *a2, ...)
{
  return [a1 currentPersistentHistoryTokenFromStores:];
}

id objc_msgSend_currentPlayerForUUID_(void *a1, const char *a2, ...)
{
  return [a1 currentPlayerForUUID:];
}

id objc_msgSend_currentRate(void *a1, const char *a2, ...)
{
  return _[a1 currentRate];
}

id objc_msgSend_currentRecordingDisplayModel(void *a1, const char *a2, ...)
{
  return _[a1 currentRecordingDisplayModel];
}

id objc_msgSend_currentRoute(void *a1, const char *a2, ...)
{
  return _[a1 currentRoute];
}

id objc_msgSend_currentSampleTime(void *a1, const char *a2, ...)
{
  return _[a1 currentSampleTime];
}

id objc_msgSend_currentSelectedRecordingCell(void *a1, const char *a2, ...)
{
  return _[a1 currentSelectedRecordingCell];
}

id objc_msgSend_currentSelectionHasSilenceRemoved(void *a1, const char *a2, ...)
{
  return _[a1 currentSelectionHasSilenceRemoved];
}

id objc_msgSend_currentSelectionIsEnhanced(void *a1, const char *a2, ...)
{
  return _[a1 currentSelectionIsEnhanced];
}

id objc_msgSend_currentSelectionIsFavorite(void *a1, const char *a2, ...)
{
  return _[a1 currentSelectionIsFavorite];
}

id objc_msgSend_currentSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 currentSnapshot];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _[a1 currentState];
}

id objc_msgSend_currentThumbImage(void *a1, const char *a2, ...)
{
  return _[a1 currentThumbImage];
}

id objc_msgSend_currentTime(void *a1, const char *a2, ...)
{
  return _[a1 currentTime];
}

id objc_msgSend_currentTimeIndicatorCoordinate(void *a1, const char *a2, ...)
{
  return _[a1 currentTimeIndicatorCoordinate];
}

id objc_msgSend_currentTimeLabel(void *a1, const char *a2, ...)
{
  return _[a1 currentTimeLabel];
}

id objc_msgSend_currentTimeWindow(void *a1, const char *a2, ...)
{
  return _[a1 currentTimeWindow];
}

id objc_msgSend_currentTrackTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 currentTrackTimeRange];
}

id objc_msgSend_currentUserActivity(void *a1, const char *a2, ...)
{
  return _[a1 currentUserActivity];
}

id objc_msgSend_currentValue(void *a1, const char *a2, ...)
{
  return _[a1 currentValue];
}

id objc_msgSend_customActivitiesForShareableCompositions_(void *a1, const char *a2, ...)
{
  return [a1 customActivitiesForShareableCompositions];
}

id objc_msgSend_customActivityTypes(void *a1, const char *a2, ...)
{
  return _[a1 customActivityTypes];
}

id objc_msgSend_customCompletionBlock(void *a1, const char *a2, ...)
{
  return _[a1 customCompletionBlock];
}

id objc_msgSend_customDetentWithIdentifier_resolver_(void *a1, const char *a2, ...)
{
  return [a1 customDetentWithIdentifier:resolver:];
}

id objc_msgSend_customLabelSearchPredicateWithString_(void *a1, const char *a2, ...)
{
  return [a1 customLabelSearchPredicateWithString:];
}

id objc_msgSend_customSubject(void *a1, const char *a2, ...)
{
  return _[a1 customSubject];
}

id objc_msgSend_customView(void *a1, const char *a2, ...)
{
  return _[a1 customView];
}

id objc_msgSend_cutRecording_error_(void *a1, const char *a2, ...)
{
  return [a1 cutRecording:error:];
}

id objc_msgSend_cutRecording_timeRange_controller_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cutRecording:timeRange:controller:error:");
}

id objc_msgSend_damping(void *a1, const char *a2, ...)
{
  return _[a1 damping];
}

id objc_msgSend_dataArray(void *a1, const char *a2, ...)
{
  return _[a1 dataArray];
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataSources(void *a1, const char *a2, ...)
{
  return _[a1 dataSources];
}

id objc_msgSend_dataWithLength_(void *a1, const char *a2, ...)
{
  return [a1 dataWithLength:];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingDays_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingDays:];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingTimeInterval:];
}

id objc_msgSend_dateEntry(void *a1, const char *a2, ...)
{
  return _[a1 dateEntry];
}

id objc_msgSend_dateRecordingStartTime(void *a1, const char *a2, ...)
{
  return _[a1 dateRecordingStartTime];
}

id objc_msgSend_dateWithTimeInterval_sinceDate_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeInterval:sinceDate:];
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceNow:];
}

id objc_msgSend_deactivateAudioSession(void *a1, const char *a2, ...)
{
  return _[a1 deactivateAudioSession];
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 deactivateConstraints:];
}

id objc_msgSend_debounceASBD(void *a1, const char *a2, ...)
{
  return _[a1 debounceASBD];
}

id objc_msgSend_debounceMaxFrames(void *a1, const char *a2, ...)
{
  return _[a1 debounceMaxFrames];
}

id objc_msgSend_decomposedFragments(void *a1, const char *a2, ...)
{
  return _[a1 decomposedFragments];
}

id objc_msgSend_defaultBackgroundConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultBackgroundConfiguration];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultContentConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultContentConfiguration];
}

id objc_msgSend_defaultImage(void *a1, const char *a2, ...)
{
  return _[a1 defaultImage];
}

id objc_msgSend_defaultInputAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 defaultInputAndReturnError:];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultMetrics(void *a1, const char *a2, ...)
{
  return _[a1 defaultMetrics];
}

id objc_msgSend_defaultOutputAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 defaultOutputAndReturnError:];
}

id objc_msgSend_defaultSceneActivationStateDelegate(void *a1, const char *a2, ...)
{
  return _[a1 defaultSceneActivationStateDelegate];
}

id objc_msgSend_defaultSceneDelegate(void *a1, const char *a2, ...)
{
  return _[a1 defaultSceneDelegate];
}

id objc_msgSend_defaultSceneDidBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 defaultSceneDidBecomeActive];
}

id objc_msgSend_defaultSceneDidConnect_(void *a1, const char *a2, ...)
{
  return [a1 defaultSceneDidConnect:];
}

id objc_msgSend_defaultTextAttributes(void *a1, const char *a2, ...)
{
  return _[a1 defaultTextAttributes];
}

id objc_msgSend_defaultValue(void *a1, const char *a2, ...)
{
  return _[a1 defaultValue];
}

id objc_msgSend_deferredInitializationDelegate(void *a1, const char *a2, ...)
{
  return _[a1 deferredInitializationDelegate];
}

id objc_msgSend_deferredTranscriptMenuElement(void *a1, const char *a2, ...)
{
  return _[a1 deferredTranscriptMenuElement];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delete_(void *a1, const char *a2, ...)
{
  return [a1 delete:];
}

id objc_msgSend_deleteButton(void *a1, const char *a2, ...)
{
  return _[a1 deleteButton];
}

id objc_msgSend_deleteButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 deleteButtonItem];
}

id objc_msgSend_deleteContextMenuButtonImage(void *a1, const char *a2, ...)
{
  return _[a1 deleteContextMenuButtonImage];
}

id objc_msgSend_deleteFolder_(void *a1, const char *a2, ...)
{
  return [a1 deleteFolder];
}

id objc_msgSend_deleteFolder_controller_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 deleteFolder:controller:completionBlock:];
}

id objc_msgSend_deleteFolder_source_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 deleteFolder:source:completionBlock:];
}

id objc_msgSend_deleteFolderAndAllPlayableRecordings_(void *a1, const char *a2, ...)
{
  return [a1 deleteFolderAndAllPlayableRecordings];
}

id objc_msgSend_deleteFolderAndPermanentlyEraseAllPlayableRecordings_(void *a1, const char *a2, ...)
{
  return [a1 deleteFolderAndPermanentlyEraseAllPlayableRecordings];
}

id objc_msgSend_deleteFolderWithFolderName_(void *a1, const char *a2, ...)
{
  return [a1 deleteFolderWithFolderName:];
}

id objc_msgSend_deleteItemAtIndexPath_withUUID_(void *a1, const char *a2, ...)
{
  return [a1 deleteItemAtIndexPath:withUUID:];
}

id objc_msgSend_deleteRecording_(void *a1, const char *a2, ...)
{
  return [a1 deleteRecording];
}

id objc_msgSend_deleteRecordings_(void *a1, const char *a2, ...)
{
  return [a1 deleteRecordings:];
}

id objc_msgSend_deleteRecordingsWithUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 deleteRecordingsWithUUIDs:];
}

id objc_msgSend_deleteRecordingsWithUUIDs_sourceController_source_showInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRecordingsWithUUIDs:sourceController:source:showInfo:");
}

id objc_msgSend_deleteSelectedItems(void *a1, const char *a2, ...)
{
  return _[a1 deleteSelectedItems];
}

id objc_msgSend_deleteSelectionButton(void *a1, const char *a2, ...)
{
  return _[a1 deleteSelectionButton];
}

id objc_msgSend_deleteSelectionButtonTrailingConstraint(void *a1, const char *a2, ...)
{
  return _[a1 deleteSelectionButtonTrailingConstraint];
}

id objc_msgSend_deleteUserFolder_(void *a1, const char *a2, ...)
{
  return [a1 deleteUserFolder:];
}

id objc_msgSend_deleteWithUUIDs_source_showInfo_(void *a1, const char *a2, ...)
{
  return [a1 deleteWithUUIDs:showInfo:];
}

id objc_msgSend_deletedRecordingsController(void *a1, const char *a2, ...)
{
  return _[a1 deletedRecordingsController];
}

id objc_msgSend_deletedRecordingsFetchRequest(void *a1, const char *a2, ...)
{
  return _[a1 deletedRecordingsFetchRequest];
}

id objc_msgSend_deletionDate(void *a1, const char *a2, ...)
{
  return _[a1 deletionDate];
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithReuseIdentifier:forIndexPath:];
}

id objc_msgSend_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:];
}

id objc_msgSend_descender(void *a1, const char *a2, ...)
{
  return _[a1 descender];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptionCompactViewTitleToSecondaryPadding(void *a1, const char *a2, ...)
{
  return _[a1 descriptionCompactViewTitleToSecondaryPadding];
}

id objc_msgSend_descriptionContainerView(void *a1, const char *a2, ...)
{
  return _[a1 descriptionContainerView];
}

id objc_msgSend_descriptionView(void *a1, const char *a2, ...)
{
  return _[a1 descriptionView];
}

id objc_msgSend_descriptionViewScalableTitleFontForCardView(void *a1, const char *a2, ...)
{
  return _[a1 descriptionViewScalableTitleFontForCardView];
}

id objc_msgSend_descriptionViewScalableTitleFontForRecordingCollectionViewCell(void *a1, const char *a2, ...)
{
  return _[a1 descriptionViewScalableTitleFontForRecordingCollectionViewCell];
}

id objc_msgSend_descriptionViewSecondaryLabelAlpha(void *a1, const char *a2, ...)
{
  return _[a1 descriptionViewSecondaryLabelAlpha];
}

id objc_msgSend_descriptionViewShuttleBarPadding(void *a1, const char *a2, ...)
{
  return _[a1 descriptionViewShuttleBarPadding];
}

id objc_msgSend_descriptionViewTitleToSecondaryPadding(void *a1, const char *a2, ...)
{
  return _[a1 descriptionViewTitleToSecondaryPadding];
}

id objc_msgSend_descriptionViewWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 descriptionViewWithStyle:];
}

id objc_msgSend_deselectItemAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 deselectItemAtIndexPath:animated:];
}

id objc_msgSend_deselectSelectedItem(void *a1, const char *a2, ...)
{
  return _[a1 deselectSelectedItem];
}

id objc_msgSend_desiredTimeDeltaForVisibleTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 desiredTimeDeltaForVisibleTimeRange];
}

id objc_msgSend_destinationIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 destinationIndexPath];
}

id objc_msgSend_detachNode_(void *a1, const char *a2, ...)
{
  return [a1 detachNode];
}

id objc_msgSend_detailScrubController_didChangeScrubSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailScrubController:didChangeScrubSpeed:");
}

id objc_msgSend_detailScrubController_didChangeValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailScrubController:didChangeValue:");
}

id objc_msgSend_detailScrubControllerDidBeginScrubbing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailScrubControllerDidBeginScrubbing:");
}

id objc_msgSend_detailScrubControllerDidEndScrubbing_(void *a1, const char *a2, ...)
{
  return [a1 detailScrubControllerDidEndScrubbing:];
}

id objc_msgSend_detailSlider_didChangeScrubSpeed_(void *a1, const char *a2, ...)
{
  return [a1 detailSlider:didChangeScrubSpeed:];
}

id objc_msgSend_detailSlider_didChangeValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailSlider:didChangeValue:");
}

id objc_msgSend_detailSliderTrackingDidBegin_(void *a1, const char *a2, ...)
{
  return [a1 detailSliderTrackingDidBegin:];
}

id objc_msgSend_detailSliderTrackingDidCancel_(void *a1, const char *a2, ...)
{
  return [a1 detailSliderTrackingDidCancel:];
}

id objc_msgSend_detailSliderTrackingDidEnd_(void *a1, const char *a2, ...)
{
  return [a1 detailSliderTrackingDidEnd:];
}

id objc_msgSend_detailedScrubbingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 detailedScrubbingEnabled];
}

id objc_msgSend_detents(void *a1, const char *a2, ...)
{
  return _[a1 detents];
}

id objc_msgSend_determineImportabilityOfRecordingWithAudioURL_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 determineImportabilityOfRecordingWithAudioURL:completionHandler:];
}

id objc_msgSend_deviceIsSupported(void *a1, const char *a2, ...)
{
  return _[a1 deviceIsSupported];
}

id objc_msgSend_diameter(void *a1, const char *a2, ...)
{
  return _[a1 diameter];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryPListRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryPListRepresentation];
}

id objc_msgSend_dictionaryWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithContentsOfURL:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjectsAndKeys:];
}

id objc_msgSend_didBeginEditingInTextField_(void *a1, const char *a2, ...)
{
  return [a1 didBeginEditingInTextField:];
}

id objc_msgSend_didBeginEditingTitle_(void *a1, const char *a2, ...)
{
  return [a1 didBeginEditingTitle:];
}

id objc_msgSend_didCancelFolderSelection(void *a1, const char *a2, ...)
{
  return _[a1 didCancelFolderSelection];
}

id objc_msgSend_didChangeEditingState(void *a1, const char *a2, ...)
{
  return _[a1 didChangeEditingState];
}

id objc_msgSend_didChangeHostViewWidth_(void *a1, const char *a2, ...)
{
  return [a1 didChangeHostViewWidth:];
}

id objc_msgSend_didCompleteFolderSelection(void *a1, const char *a2, ...)
{
  return _[a1 didCompleteFolderSelection];
}

id objc_msgSend_didDismissTranscriptView(void *a1, const char *a2, ...)
{
  return _[a1 didDismissTranscriptView];
}

id objc_msgSend_didEndDragSession(void *a1, const char *a2, ...)
{
  return _[a1 didEndDragSession];
}

id objc_msgSend_didEndEditingInTextField(void *a1, const char *a2, ...)
{
  return _[a1 didEndEditingInTextField];
}

id objc_msgSend_didEndEditingTitle_(void *a1, const char *a2, ...)
{
  return [a1 didEndEditingTitle:];
}

id objc_msgSend_didHidePlaybackSettingsViewController(void *a1, const char *a2, ...)
{
  return _[a1 didHidePlaybackSettingsViewController];
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 didMoveToParentViewController:];
}

id objc_msgSend_didProcessUpdatesWithRemainingItemCount_(void *a1, const char *a2, ...)
{
  return [a1 didProcessUpdatesWithRemainingItemCount:];
}

id objc_msgSend_didReturnToFoldersList(void *a1, const char *a2, ...)
{
  return _[a1 didReturnToFoldersList];
}

id objc_msgSend_didSelectCellWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 didSelectCellWithUUID:];
}

id objc_msgSend_didSelectFolderOfType_(void *a1, const char *a2, ...)
{
  return [a1 didSelectFolderOfType:];
}

id objc_msgSend_didSelectForUUID_resetPosition_force_(void *a1, const char *a2, ...)
{
  return [a1 didSelectForUUID:resetPosition:force:];
}

id objc_msgSend_didSetInitialMicaState(void *a1, const char *a2, ...)
{
  return _[a1 didSetInitialMicaState];
}

id objc_msgSend_didSetupToolbarWithButtonItems(void *a1, const char *a2, ...)
{
  return _[a1 didSetupToolbarWithButtonItems];
}

id objc_msgSend_didTapOnStopButton_(void *a1, const char *a2, ...)
{
  return [a1 didTapOnStopButton:];
}

id objc_msgSend_didTapStopRecordingButton(void *a1, const char *a2, ...)
{
  return _[a1 didTapStopRecordingButton];
}

id objc_msgSend_didToggleSwitch_toState_(void *a1, const char *a2, ...)
{
  return [a1 didToggleSwitch:toState:];
}

id objc_msgSend_didTransitionWithTransitionInfo_(void *a1, const char *a2, ...)
{
  return [a1 didTransitionWithTransitionInfo:];
}

id objc_msgSend_didUpdateCurrentRecordingDisplayModel(void *a1, const char *a2, ...)
{
  return _[a1 didUpdateCurrentRecordingDisplayModel];
}

id objc_msgSend_didUpdateRecordingCenterContentViewState(void *a1, const char *a2, ...)
{
  return _[a1 didUpdateRecordingCenterContentViewState];
}

id objc_msgSend_didUpdateRecordingViewDisplayStyle(void *a1, const char *a2, ...)
{
  return _[a1 didUpdateRecordingViewDisplayStyle];
}

id objc_msgSend_didUpdateRecordingViewState(void *a1, const char *a2, ...)
{
  return _[a1 didUpdateRecordingViewState];
}

id objc_msgSend_didUpdateSlider_toValue_(void *a1, const char *a2, ...)
{
  return [a1 didUpdateSlider:toValue:];
}

id objc_msgSend_didUpdateToStatus_progress_forRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 didUpdateToStatus:progress:forRecordingWithUUID:];
}

id objc_msgSend_didUpdateWithRecordingModel_(void *a1, const char *a2, ...)
{
  return [a1 didUpdateWithRecordingModel:];
}

id objc_msgSend_diffableDataSource(void *a1, const char *a2, ...)
{
  return _[a1 diffableDataSource];
}

id objc_msgSend_dimDescriptionViewAnimationDuration(void *a1, const char *a2, ...)
{
  return _[a1 dimDescriptionViewAnimationDuration];
}

id objc_msgSend_dimmingView(void *a1, const char *a2, ...)
{
  return _[a1 dimmingView];
}

id objc_msgSend_directionalLayoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 directionalLayoutMargins];
}

id objc_msgSend_disableActions(void *a1, const char *a2, ...)
{
  return _[a1 disableActions];
}

id objc_msgSend_disableOrphanedFragmentCleanupForCompositionAVURL_error_(void *a1, const char *a2, ...)
{
  return [a1 disableOrphanedFragmentCleanupForCompositionAVURL:error:];
}

id objc_msgSend_disablesActionButtons(void *a1, const char *a2, ...)
{
  return _[a1 disablesActionButtons];
}

id objc_msgSend_disablesFocusInRecordingViewTitle(void *a1, const char *a2, ...)
{
  return _[a1 disablesFocusInRecordingViewTitle];
}

id objc_msgSend_dismiss(void *a1, const char *a2, ...)
{
  return _[a1 dismiss];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:YES completion:nil];
}

id objc_msgSend_dismissalDisplayStyle(void *a1, const char *a2, ...)
{
  return _[a1 dismissalDisplayStyle];
}

id objc_msgSend_displayIdentity(void *a1, const char *a2, ...)
{
  return _[a1 displayIdentity];
}

id objc_msgSend_displayIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 displayIfNeeded];
}

id objc_msgSend_displayLinkDidUpdate_withTimeController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayLinkDidUpdate:withTimeController:");
}

id objc_msgSend_displayLinkWithTarget_selector_(void *a1, const char *a2, ...)
{
  return [a1 displayLinkWithTarget:selector:];
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return _[a1 displayMode];
}

id objc_msgSend_displayModel(void *a1, const char *a2, ...)
{
  return _[a1 displayModel];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayScale(void *a1, const char *a2, ...)
{
  return _[a1 displayScale];
}

id objc_msgSend_displayStyle(void *a1, const char *a2, ...)
{
  return _[a1 displayStyle];
}

id objc_msgSend_distanceFromLocation_(void *a1, const char *a2, ...)
{
  return [a1 distanceFromLocation:];
}

id objc_msgSend_doesNotRecognizeSelector_(void *a1, const char *a2, ...)
{
  return [a1 doesNotRecognizeSelector:];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doneButton(void *a1, const char *a2, ...)
{
  return _[a1 doneButton];
}

id objc_msgSend_doneButtonShouldSaveAsNew_(void *a1, const char *a2, ...)
{
  return [a1 doneButtonShouldSaveAsNew];
}

id objc_msgSend_doneEditingButton(void *a1, const char *a2, ...)
{
  return _[a1 doneEditingButton];
}

id objc_msgSend_doneEditingButtonSidePadding(void *a1, const char *a2, ...)
{
  return _[a1 doneEditingButtonSidePadding];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_dragGesturePassthroughSpecs(void *a1, const char *a2, ...)
{
  return _[a1 dragGesturePassthroughSpecs];
}

id objc_msgSend_drawAtPoint_withAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawAtPoint:withAttributes:");
}

id objc_msgSend_drawViewHierarchyInRect_afterScreenUpdates_(void *a1, const char *a2, ...)
{
  return [a1 drawViewHierarchyInRect:afterScreenUpdates:];
}

id objc_msgSend_dropContextWithFolderType_folderUUID_folderIndexPath_payloadType_(void *a1, const char *a2, ...)
{
  return [a1 dropContextWithFolderType:folderType folderUUID:folderUUID folderIndexPath:folderIndexPath payloadType:payloadType];
}

id objc_msgSend_duplicateActivitySystemImageName(void *a1, const char *a2, ...)
{
  return _[a1 duplicateActivitySystemImageName];
}

id objc_msgSend_duplicateRecording(void *a1, const char *a2, ...)
{
  return _[a1 duplicateRecording];
}

id objc_msgSend_duplicateRecording_copyingResources_creationDate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duplicateRecording:copyingResources:creationDate:error:");
}

id objc_msgSend_duplicateRecording_error_(void *a1, const char *a2, ...)
{
  return [a1 duplicateRecording:error];
}

id objc_msgSend_duplicateRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 duplicateRecordingWithUUID:];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_durationAllowsForDetailedScrubbing(void *a1, const char *a2, ...)
{
  return _[a1 durationAllowsForDetailedScrubbing];
}

id objc_msgSend_durationLabel(void *a1, const char *a2, ...)
{
  return _[a1 durationLabel];
}

id objc_msgSend_durationLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 durationLabelFont];
}

id objc_msgSend_durationLabelFontForCompactRecordingView(void *a1, const char *a2, ...)
{
  return _[a1 durationLabelFontForCompactRecordingView];
}

id objc_msgSend_dynamicIslandSceneDelegate(void *a1, const char *a2, ...)
{
  return _[a1 dynamicIslandSceneDelegate];
}

id objc_msgSend_editButtonContentLeftRightPadding(void *a1, const char *a2, ...)
{
  return _[a1 editButtonContentLeftRightPadding];
}

id objc_msgSend_editButtonContentTopBottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 editButtonContentTopBottomPadding];
}

id objc_msgSend_editButtonImage(void *a1, const char *a2, ...)
{
  return _[a1 editButtonImage];
}

id objc_msgSend_editButtonImageTitlePadding(void *a1, const char *a2, ...)
{
  return _[a1 editButtonImageTitlePadding];
}

id objc_msgSend_editButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 editButtonItem];
}

id objc_msgSend_editMenu(void *a1, const char *a2, ...)
{
  return _[a1 editMenu];
}

id objc_msgSend_editMode(void *a1, const char *a2, ...)
{
  return _[a1 editMode];
}

id objc_msgSend_editRecording(void *a1, const char *a2, ...)
{
  return _[a1 editRecording];
}

id objc_msgSend_editRecordingButton(void *a1, const char *a2, ...)
{
  return _[a1 editRecordingButton];
}

id objc_msgSend_editRecordingButtonCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 editRecordingButtonCornerRadius];
}

id objc_msgSend_editRecordingViewImageSize(void *a1, const char *a2, ...)
{
  return _[a1 editRecordingViewImageSize];
}

id objc_msgSend_editRecordingViewLeadingAndTrailingImagePadding(void *a1, const char *a2, ...)
{
  return _[a1 editRecordingViewLeadingAndTrailingImagePadding];
}

id objc_msgSend_editSelectedItemTitle(void *a1, const char *a2, ...)
{
  return _[a1 editSelectedItemTitle];
}

id objc_msgSend_editStateHandler(void *a1, const char *a2, ...)
{
  return _[a1 editStateHandler];
}

id objc_msgSend_editToolbarButtonHorizontalInset(void *a1, const char *a2, ...)
{
  return _[a1 editToolbarButtonHorizontalInset];
}

id objc_msgSend_editToolbarButtonTopInset(void *a1, const char *a2, ...)
{
  return _[a1 editToolbarButtonTopInset];
}

id objc_msgSend_editToolbarCompactHeight(void *a1, const char *a2, ...)
{
  return _[a1 editToolbarCompactHeight];
}

id objc_msgSend_editToolbarHeight(void *a1, const char *a2, ...)
{
  return _[a1 editToolbarHeight];
}

id objc_msgSend_editToolbarTitleTopInset(void *a1, const char *a2, ...)
{
  return _[a1 editToolbarTitleTopInset];
}

id objc_msgSend_editingControlButtonLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 editingControlButtonLabelFont];
}

id objc_msgSend_editingInFlight(void *a1, const char *a2, ...)
{
  return _[a1 editingInFlight];
}

id objc_msgSend_editingIsInFlight_progress_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 editingIsInFlight:progress:forUUID:];
}

id objc_msgSend_editingProgressIndicatorDiameterCell(void *a1, const char *a2, ...)
{
  return _[a1 editingProgressIndicatorDiameterCell];
}

id objc_msgSend_editingProgressIndicatorDiameterPlayback(void *a1, const char *a2, ...)
{
  return _[a1 editingProgressIndicatorDiameterPlayback];
}

id objc_msgSend_editingProgressItems(void *a1, const char *a2, ...)
{
  return _[a1 editingProgressItems];
}

id objc_msgSend_editingProgressOuterRingThicknessCell(void *a1, const char *a2, ...)
{
  return _[a1 editingProgressOuterRingThicknessCell];
}

id objc_msgSend_editingProgressOuterRingThicknessPlayback(void *a1, const char *a2, ...)
{
  return _[a1 editingProgressOuterRingThicknessPlayback];
}

id objc_msgSend_editingStatusDict(void *a1, const char *a2, ...)
{
  return _[a1 editingStatusDict];
}

id objc_msgSend_editingToolbar(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbar];
}

id objc_msgSend_editingToolbarButtonDisabledTextColor(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarButtonDisabledTextColor];
}

id objc_msgSend_editingToolbarButtonTextColor(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarButtonTextColor];
}

id objc_msgSend_editingToolbarCancelButtonLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarCancelButtonLabelFont];
}

id objc_msgSend_editingToolbarCompactHeight(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarCompactHeight];
}

id objc_msgSend_editingToolbarHeight(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarHeight];
}

id objc_msgSend_editingToolbarImageSymbolConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarImageSymbolConfiguration];
}

id objc_msgSend_editingToolbarMaximumContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarMaximumContentSizeCategory];
}

id objc_msgSend_editingToolbarSaveButtonLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarSaveButtonLabelFont];
}

id objc_msgSend_editingToolbarTitleLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarTitleLabelFont];
}

id objc_msgSend_editingToolbarTitleTextColor(void *a1, const char *a2, ...)
{
  return _[a1 editingToolbarTitleTextColor];
}

id objc_msgSend_effectWithBlurRadius_(void *a1, const char *a2, ...)
{
  return [a1 effectWithBlurRadius:];
}

id objc_msgSend_effectWithPreview_(void *a1, const char *a2, ...)
{
  return [a1 effectWithPreview:];
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 effectWithStyle:];
}

id objc_msgSend_effectiveLayoutSizeFittingSize_(void *a1, const char *a2, ...)
{
  return [a1 effectiveLayoutSizeFittingSize:];
}

id objc_msgSend_elapsedRecordingTime(void *a1, const char *a2, ...)
{
  return _[a1 elapsedRecordingTime];
}

id objc_msgSend_elapsedRecordingTimeInfo(void *a1, const char *a2, ...)
{
  return _[a1 elapsedRecordingTimeInfo];
}

id objc_msgSend_elementWithUncachedProvider_(void *a1, const char *a2, ...)
{
  return [a1 elementWithUncachedProvider:];
}

id objc_msgSend_ellipsisCircleImage(void *a1, const char *a2, ...)
{
  return _[a1 ellipsisCircleImage];
}

id objc_msgSend_ellipsisImage(void *a1, const char *a2, ...)
{
  return _[a1 ellipsisImage];
}

id objc_msgSend_emptyConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 emptyConfiguration];
}

id objc_msgSend_emptyTimelineWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 emptyTimelineWithIdentifier:];
}

id objc_msgSend_enableOrphanHandlingWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableOrphanHandlingWithCompletionBlock:");
}

id objc_msgSend_enableOrphanedFragmentCleanupForCompositionAVURL_(void *a1, const char *a2, ...)
{
  return [a1 enableOrphanedFragmentCleanupForCompositionAVURL];
}

id objc_msgSend_enablePlayBarTracking(void *a1, const char *a2, ...)
{
  return _[a1 enablePlayBarTracking];
}

id objc_msgSend_enablePlaybackWithComposition_displayModel_timeController_(void *a1, const char *a2, ...)
{
  return [a1 enablePlaybackWithComposition:displayModel:timeController:];
}

id objc_msgSend_enableTimeTrackingInView(void *a1, const char *a2, ...)
{
  return _[a1 enableTimeTrackingInView];
}

id objc_msgSend_enableUndoFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 enableUndoFirstResponder];
}

id objc_msgSend_enableWaveformScrolling_(void *a1, const char *a2, ...)
{
  return [a1 enableWaveformScrolling:];
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return _[a1 enabled];
}

id objc_msgSend_endAccessSessionWithToken_error_(void *a1, const char *a2, ...)
{
  return [a1 endAccessSessionWithToken:error:];
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _[a1 endDate];
}

id objc_msgSend_endDescriptionViewTextEditing(void *a1, const char *a2, ...)
{
  return _[a1 endDescriptionViewTextEditing];
}

id objc_msgSend_endEditing(void *a1, const char *a2, ...)
{
  return _[a1 endEditing];
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return [a1 endEditing:];
}

id objc_msgSend_endEditingTitle(void *a1, const char *a2, ...)
{
  return _[a1 endEditingTitle];
}

id objc_msgSend_endIgnoringContentOffsetChanges(void *a1, const char *a2, ...)
{
  return _[a1 endIgnoringContentOffsetChanges];
}

id objc_msgSend_endRecording(void *a1, const char *a2, ...)
{
  return _[a1 endRecording];
}

id objc_msgSend_endScrubbingForUUID_atPosition_(void *a1, const char *a2, ...)
{
  return [a1 endScrubbingForUUID:atPosition:];
}

id objc_msgSend_endTimeIndicatorSelectionAffinity(void *a1, const char *a2, ...)
{
  return _[a1 endTimeIndicatorSelectionAffinity];
}

id objc_msgSend_endTrackingWithTouch_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 endTrackingWithTouch:withEvent:];
}

id objc_msgSend_endTrimReloadDataSourceBlock(void *a1, const char *a2, ...)
{
  return _[a1 endTrimReloadDataSourceBlock];
}

id objc_msgSend_enhanced(void *a1, const char *a2, ...)
{
  return _[a1 enhanced];
}

id objc_msgSend_enterTrimMode(void *a1, const char *a2, ...)
{
  return _[a1 enterTrimMode];
}

id objc_msgSend_entitiesByName(void *a1, const char *a2, ...)
{
  return _[a1 entitiesByName];
}

id objc_msgSend_entity(void *a1, const char *a2, ...)
{
  return _[a1 entity];
}

id objc_msgSend_entryForPresentationTime_withRequestedFidelity_(void *a1, const char *a2, ...)
{
  return [a1 entryForPresentationTime:withRequestedFidelity:];
}

id objc_msgSend_entrySpecifierForTimelineIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 entrySpecifierForTimelineIdentifier:];
}

id objc_msgSend_enumerateAllSlices_(void *a1, const char *a2, ...)
{
  return [a1 enumerateAllSlices:];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateKeysAndObjectsUsingBlock:];
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsUsingBlock:];
}

id objc_msgSend_eraseAllDeleted(void *a1, const char *a2, ...)
{
  return _[a1 eraseAllDeleted];
}

id objc_msgSend_eraseAllRecordingsAndConfirmWithSource_(void *a1, const char *a2, ...)
{
  return [a1 eraseAllRecordingsAndConfirmWithSource:];
}

id objc_msgSend_eraseAndConfirmWithUUIDs_source_collectionViewController_(void *a1, const char *a2, ...)
{
  return [a1 eraseAndConfirmWithUUIDs:source:collectionViewController:];
}

id objc_msgSend_eraseButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 eraseButtonItem];
}

id objc_msgSend_eraseRecording_(void *a1, const char *a2, ...)
{
  return [a1 eraseRecording:];
}

id objc_msgSend_eraseRecordings_(void *a1, const char *a2, ...)
{
  return [a1 eraseRecordings:];
}

id objc_msgSend_eraseRecordingsButton(void *a1, const char *a2, ...)
{
  return _[a1 eraseRecordingsButton];
}

id objc_msgSend_eraseRecordingsDeletedBeforeDate_(void *a1, const char *a2, ...)
{
  return [a1 eraseRecordingsDeletedBeforeDate:];
}

id objc_msgSend_eraseRecordingsWithUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 eraseRecordingsWithUUIDs:];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_executeRequest_error_(void *a1, const char *a2, ...)
{
  return [a1 executeRequest:error];
}

id objc_msgSend_existingFolderWithName_(void *a1, const char *a2, ...)
{
  return [a1 existingFolderWithName:];
}

id objc_msgSend_existingFolderWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 existingFolderWithUUID:];
}

id objc_msgSend_existingObjectWithID_error_(void *a1, const char *a2, ...)
{
  return [a1 existingObjectWithID:error:];
}

id objc_msgSend_existingUserFolderWithName_(void *a1, const char *a2, ...)
{
  return [a1 existingUserFolderWithName:];
}

id objc_msgSend_existingUserFoldersWithName_searchOption_(void *a1, const char *a2, ...)
{
  return [a1 existingUserFoldersWithName:searchOption:];
}

id objc_msgSend_exitEditMode(void *a1, const char *a2, ...)
{
  return _[a1 exitEditMode];
}

id objc_msgSend_exitTrimMode(void *a1, const char *a2, ...)
{
  return _[a1 exitTrimMode];
}

id objc_msgSend_expandCompactRecordingCardPropertyAnimator(void *a1, const char *a2, ...)
{
  return _[a1 expandCompactRecordingCardPropertyAnimator];
}

id objc_msgSend_expandsRecordingsCollectionViewItemOnSelection(void *a1, const char *a2, ...)
{
  return _[a1 expandsRecordingsCollectionViewItemOnSelection];
}

id objc_msgSend_expectsSecureRendering(void *a1, const char *a2, ...)
{
  return _[a1 expectsSecureRendering];
}

id objc_msgSend_expiration(void *a1, const char *a2, ...)
{
  return _[a1 expiration];
}

id objc_msgSend_explicitlyScrollsToRecordingsCollectionViewItemOnSelection(void *a1, const char *a2, ...)
{
  return _[a1 explicitlyScrollsToRecordingsCollectionViewItemOnSelection];
}

id objc_msgSend_fadeOutPauseAndInText_(void *a1, const char *a2, ...)
{
  return [a1 fadeOutPauseAndInText:];
}

id objc_msgSend_failedFirstRenderCalculationAttempt(void *a1, const char *a2, ...)
{
  return _[a1 failedFirstRenderCalculationAttempt];
}

id objc_msgSend_failedTest_withFailure_(void *a1, const char *a2, ...)
{
  return [a1 failedTest:withFailure:];
}

id objc_msgSend_favorite(void *a1, const char *a2, ...)
{
  return _[a1 favorite];
}

id objc_msgSend_favoriteActivitySystemImageName_(void *a1, const char *a2, ...)
{
  return [a1 favoriteActivitySystemImageName:];
}

id objc_msgSend_favoriteButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 favoriteButtonItem];
}

id objc_msgSend_favoriteImage(void *a1, const char *a2, ...)
{
  return _[a1 favoriteImage];
}

id objc_msgSend_favoriteImageName(void *a1, const char *a2, ...)
{
  return _[a1 favoriteImageName];
}

id objc_msgSend_favoritePredicate(void *a1, const char *a2, ...)
{
  return _[a1 favoritePredicate];
}

id objc_msgSend_favoriteRecordingsFolder(void *a1, const char *a2, ...)
{
  return _[a1 favoriteRecordingsFolder];
}

id objc_msgSend_fetchBatchSize(void *a1, const char *a2, ...)
{
  return _[a1 fetchBatchSize];
}

id objc_msgSend_fetchHistoryAfterToken_(void *a1, const char *a2, ...)
{
  return [a1 fetchHistoryAfterToken:];
}

id objc_msgSend_fetchRecording_(void *a1, const char *a2, ...)
{
  return [a1 fetchRecording:];
}

id objc_msgSend_fetchedObjects(void *a1, const char *a2, ...)
{
  return _[a1 fetchedObjects];
}

id objc_msgSend_fetchedRecordings(void *a1, const char *a2, ...)
{
  return _[a1 fetchedRecordings];
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return [a1 fileExistsAtPath:];
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 fileExistsAtPath:isDirectory:];
}

id objc_msgSend_fileMenu(void *a1, const char *a2, ...)
{
  return _[a1 fileMenu];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPath:];
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return _[a1 fill];
}

id objc_msgSend_fillColor(void *a1, const char *a2, ...)
{
  return _[a1 fillColor];
}

id objc_msgSend_fillNextBuffer_frameCount_(void *a1, const char *a2, ...)
{
  return [a1 fillNextBuffer:frameCount:];
}

id objc_msgSend_filledButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 filledButtonConfiguration];
}

id objc_msgSend_filledMoveToFolderImage(void *a1, const char *a2, ...)
{
  return _[a1 filledMoveToFolderImage];
}

id objc_msgSend_finalizeAndReturnTranscriptionDataWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 finalizeAndReturnTranscriptionDataWithCompletionHandler:];
}

id objc_msgSend_finalizeRecording_controller_saveAsNew_(void *a1, const char *a2, ...)
{
  return [a1 finalizeRecording:controller:saveAsNew:];
}

id objc_msgSend_finishEditing_(void *a1, const char *a2, ...)
{
  return [a1 finishEditing:];
}

id objc_msgSend_finishInitialSetup_goToAllRecordings_(void *a1, const char *a2, ...)
{
  return [a1 finishInitialSetup:goToAllRecordings:];
}

id objc_msgSend_finishLaunchTests(void *a1, const char *a2, ...)
{
  return _[a1 finishLaunchTests];
}

id objc_msgSend_finishLoadingWithCompletionTimeout_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 finishLoadingWithCompletionTimeout:completionBlock:];
}

id objc_msgSend_finishShowingWelcomeScreen(void *a1, const char *a2, ...)
{
  return _[a1 finishShowingWelcomeScreen];
}

id objc_msgSend_finishWritingAudioFile_(void *a1, const char *a2, ...)
{
  return [a1 finishWritingAudioFile:];
}

id objc_msgSend_finished(void *a1, const char *a2, ...)
{
  return _[a1 finished];
}

id objc_msgSend_finishedTransitionToEditing_(void *a1, const char *a2, ...)
{
  return [a1 finishedTransitionToEditing:];
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return _[a1 firstIndex];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_fixedOverviewWaveformContainerView(void *a1, const char *a2, ...)
{
  return _[a1 fixedOverviewWaveformContainerView];
}

id objc_msgSend_fixedOverviewWaveformView(void *a1, const char *a2, ...)
{
  return _[a1 fixedOverviewWaveformView];
}

id objc_msgSend_fixupScrollPositionToMatchIndicatorPositionTime(void *a1, const char *a2, ...)
{
  return _[a1 fixupScrollPositionToMatchIndicatorPositionTime];
}

id objc_msgSend_flexBarItem(void *a1, const char *a2, ...)
{
  return _[a1 flexBarItem];
}

id objc_msgSend_floatChannelData(void *a1, const char *a2, ...)
{
  return _[a1 floatChannelData];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return _[a1 flush];
}

id objc_msgSend_folder(void *a1, const char *a2, ...)
{
  return _[a1 folder];
}

id objc_msgSend_folderAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 folderAtIndexPath:];
}

id objc_msgSend_folderControllerID(void *a1, const char *a2, ...)
{
  return _[a1 folderControllerID];
}

id objc_msgSend_folderDisplayModelWithDisplayName_iconImage_recordingsCount_folderType_UUID_(void *a1, const char *a2, ...)
{
  return [a1 folderDisplayModelWithDisplayName:iconImage:recordingsCount:folderType:UUID:];
}

id objc_msgSend_folderDisplayModelWithFolderModel_(void *a1, const char *a2, ...)
{
  return [a1 folderDisplayModelWithFolderModel:];
}

id objc_msgSend_folderIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 folderIndexPath];
}

id objc_msgSend_folderName(void *a1, const char *a2, ...)
{
  return _[a1 folderName];
}

id objc_msgSend_folderNameForBuiltInFolderOfType_(void *a1, const char *a2, ...)
{
  return [a1 folderNameForBuiltInFolderOfType:];
}

id objc_msgSend_folderSelectionCollectionViewBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 folderSelectionCollectionViewBackgroundColor];
}

id objc_msgSend_folderSelectionCollectionViewCellColor(void *a1, const char *a2, ...)
{
  return _[a1 folderSelectionCollectionViewCellColor];
}

id objc_msgSend_folderSelectionCollectionViewHeaderCellUsesAccompaniedSidebarStyle(void *a1, const char *a2, ...)
{
  return _[a1 folderSelectionCollectionViewHeaderCellUsesAccompaniedSidebarStyle];
}

id objc_msgSend_folderSelectionCollectionViewListAppearance(void *a1, const char *a2, ...)
{
  return _[a1 folderSelectionCollectionViewListAppearance];
}

id objc_msgSend_folderSelectionCollectionViewNeedsDisclosureAccessory(void *a1, const char *a2, ...)
{
  return _[a1 folderSelectionCollectionViewNeedsDisclosureAccessory];
}

id objc_msgSend_folderSelectionCollectionViewShowsSeparators(void *a1, const char *a2, ...)
{
  return _[a1 folderSelectionCollectionViewShowsSeparators];
}

id objc_msgSend_folderSelectionCollectionViewTopPadding(void *a1, const char *a2, ...)
{
  return _[a1 folderSelectionCollectionViewTopPadding];
}

id objc_msgSend_folderSelectionDelegate(void *a1, const char *a2, ...)
{
  return _[a1 folderSelectionDelegate];
}

id objc_msgSend_folderSelectionNavBarNewFolderImageTintColor(void *a1, const char *a2, ...)
{
  return _[a1 folderSelectionNavBarNewFolderImageTintColor];
}

id objc_msgSend_folderSystemImageNameForFolderOfType_(void *a1, const char *a2, ...)
{
  return [a1 folderSystemImageNameForFolderOfType:];
}

id objc_msgSend_folderTitle(void *a1, const char *a2, ...)
{
  return _[a1 folderTitle];
}

id objc_msgSend_folderType(void *a1, const char *a2, ...)
{
  return _[a1 folderType];
}

id objc_msgSend_folderTypeOfSourceFolder(void *a1, const char *a2, ...)
{
  return _[a1 folderTypeOfSourceFolder];
}

id objc_msgSend_folderUUID(void *a1, const char *a2, ...)
{
  return _[a1 folderUUID];
}

id objc_msgSend_folderUUIDsToExcludeWhenMovingRecordingUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 folderUUIDsToExcludeWhenMovingRecordingUUIDs];
}

id objc_msgSend_folderWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 folderWithIdentifier:];
}

id objc_msgSend_folderWithName_(void *a1, const char *a2, ...)
{
  return [a1 folderWithName:];
}

id objc_msgSend_foldersController(void *a1, const char *a2, ...)
{
  return _[a1 foldersController];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_fontAttributes(void *a1, const char *a2, ...)
{
  return _[a1 fontAttributes];
}

id objc_msgSend_fontColor(void *a1, const char *a2, ...)
{
  return _[a1 fontColor];
}

id objc_msgSend_fontDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 fontDescriptor];
}

id objc_msgSend_fontDescriptorByAddingAttributes_(void *a1, const char *a2, ...)
{
  return [a1 fontDescriptorByAddingAttributes:];
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return [a1 fontWithDescriptor:];
}

id objc_msgSend_forceDisableRecordingControl(void *a1, const char *a2, ...)
{
  return _[a1 forceDisableRecordingControl];
}

id objc_msgSend_foregroundCompletionBlock(void *a1, const char *a2, ...)
{
  return _[a1 foregroundCompletionBlock];
}

id objc_msgSend_format(void *a1, const char *a2, ...)
{
  return _[a1 format];
}

id objc_msgSend_formattedDate(void *a1, const char *a2, ...)
{
  return _[a1 formattedDate];
}

id objc_msgSend_formattedDateStringFromDate_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 formattedDateStringFromDate:forUUID:];
}

id objc_msgSend_fractionalWidthDimension_(void *a1, const char *a2, ...)
{
  return [a1 fractionalWidthDimension:];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_frameCapacity(void *a1, const char *a2, ...)
{
  return _[a1 frameCapacity];
}

id objc_msgSend_frameForSlice_sliceType_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 frameForSlice:sliceType:atIndex:];
}

id objc_msgSend_frameLength(void *a1, const char *a2, ...)
{
  return _[a1 frameLength];
}

id objc_msgSend_fromActivityType(void *a1, const char *a2, ...)
{
  return _[a1 fromActivityType];
}

id objc_msgSend_fromLayoutMode(void *a1, const char *a2, ...)
{
  return _[a1 fromLayoutMode];
}

id objc_msgSend_fromSubType(void *a1, const char *a2, ...)
{
  return _[a1 fromSubType];
}

id objc_msgSend_fullScreenDescriptionHeight(void *a1, const char *a2, ...)
{
  return _[a1 fullScreenDescriptionHeight];
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return [a1 functionWithName:];
}

id objc_msgSend_generalPasteboard(void *a1, const char *a2, ...)
{
  return _[a1 generalPasteboard];
}

id objc_msgSend_getAmplitudes_count_startTime_endTime_(void *a1, const char *a2, ...)
{
  return [a1 getAmplitudes:count:startTime:endTime:];
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 getRed:green:blue:alpha:];
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return [a1 getResourceValue:forKey:error:];
}

id objc_msgSend_getValue_(void *a1, const char *a2, ...)
{
  return [a1 getValue:];
}

id objc_msgSend_glitchStartRecordNewVoiceMemoTest_(void *a1, const char *a2, ...)
{
  return [a1 glitchStartRecordNewVoiceMemoTest:];
}

id objc_msgSend_goToAllRecordingsIfNeeded_completion_(void *a1, const char *a2, ...)
{
  return [a1 goToAllRecordingsIfNeeded:completion:];
}

id objc_msgSend_goToBuiltInFolderOfType_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 goToBuiltInFolderOfType:animated:completion:];
}

id objc_msgSend_goToUserFolderWithName_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 goToUserFolderWithName:animated:completion:];
}

id objc_msgSend_graphName(void *a1, const char *a2, ...)
{
  return _[a1 graphName];
}

id objc_msgSend_group(void *a1, const char *a2, ...)
{
  return _[a1 group];
}

id objc_msgSend_groupedHeaderConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 groupedHeaderConfiguration];
}

id objc_msgSend_handleCancel(void *a1, const char *a2, ...)
{
  return _[a1 handleCancel];
}

id objc_msgSend_handleDarkmodeChange(void *a1, const char *a2, ...)
{
  return _[a1 handleDarkmodeChange];
}

id objc_msgSend_handleDeleteForUUID_(void *a1, const char *a2, ...)
{
  return [a1 handleDeleteForUUID:];
}

id objc_msgSend_handleDone(void *a1, const char *a2, ...)
{
  return _[a1 handleDone];
}

id objc_msgSend_handleEndOfWelcome(void *a1, const char *a2, ...)
{
  return _[a1 handleEndOfWelcome];
}

id objc_msgSend_handleEraseForUUID_(void *a1, const char *a2, ...)
{
  return [a1 handleEraseForUUID:];
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleFolderDeletion(void *a1, const char *a2, ...)
{
  return _[a1 handleFolderDeletion];
}

id objc_msgSend_handleRecoverForUUID_(void *a1, const char *a2, ...)
{
  return [a1 handleRecoverForUUID:];
}

id objc_msgSend_handleRemovalOfUUID_(void *a1, const char *a2, ...)
{
  return [a1 handleRemovalOfUUID:];
}

id objc_msgSend_handleRestyleRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleRestyleRequest];
}

id objc_msgSend_handleUpdateTitle_(void *a1, const char *a2, ...)
{
  return [a1 handleUpdateTitle:];
}

id objc_msgSend_hasBeenTranscribed(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenTranscribed];
}

id objc_msgSend_hasBeginAndEndTimeLabelAtOverviewWaveform(void *a1, const char *a2, ...)
{
  return _[a1 hasBeginAndEndTimeLabelAtOverviewWaveform];
}

id objc_msgSend_hasCustomizedPlaybackSettings(void *a1, const char *a2, ...)
{
  return _[a1 hasCustomizedPlaybackSettings];
}

id objc_msgSend_hasItemsConformingToTypeIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 hasItemsConformingToTypeIdentifiers:];
}

id objc_msgSend_hasMetTimeThreshold(void *a1, const char *a2, ...)
{
  return _[a1 hasMetTimeThreshold];
}

id objc_msgSend_hasMultipleTracks(void *a1, const char *a2, ...)
{
  return _[a1 hasMultipleTracks];
}

id objc_msgSend_hasPlaybackCard(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaybackCard];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hasProcessedSegments(void *a1, const char *a2, ...)
{
  return _[a1 hasProcessedSegments];
}

id objc_msgSend_hasTranscription(void *a1, const char *a2, ...)
{
  return _[a1 hasTranscription];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_headerConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 headerConfiguration];
}

id objc_msgSend_headerView(void *a1, const char *a2, ...)
{
  return _[a1 headerView];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_heightForSlice_sliceType_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 heightForSlice:sliceType:atIndex:];
}

id objc_msgSend_hidSelectionOverlayWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 hidSelectionOverlayWithCompletionBlock:];
}

id objc_msgSend_hideColumn_(void *a1, const char *a2, ...)
{
  return [a1 hideColumn:];
}

id objc_msgSend_hideNavigationTitle(void *a1, const char *a2, ...)
{
  return _[a1 hideNavigationTitle];
}

id objc_msgSend_hidePlaybackSettingsViewController(void *a1, const char *a2, ...)
{
  return _[a1 hidePlaybackSettingsViewController];
}

id objc_msgSend_hidePrimaryColumnForEnteringEditModeIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 hidePrimaryColumnForEnteringEditModeIfNeeded];
}

id objc_msgSend_hidePrimaryColumnIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 hidePrimaryColumnIfNeeded];
}

id objc_msgSend_highlightTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 highlightTimeRange];
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 hitTest:withEvent:];
}

id objc_msgSend_horizontalOffsetAtTime_(void *a1, const char *a2, ...)
{
  return [a1 horizontalOffsetAtTime:];
}

id objc_msgSend_horizontalOffsetAtTime_withVisibleTimeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalOffsetAtTime:withVisibleTimeRange:");
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 horizontalSizeClass];
}

id objc_msgSend_hostTime(void *a1, const char *a2, ...)
{
  return _[a1 hostTime];
}

id objc_msgSend_hostTimeForSeconds_(void *a1, const char *a2, ...)
{
  return [a1 hostTimeForSeconds:];
}

id objc_msgSend_hostViewHeight(void *a1, const char *a2, ...)
{
  return _[a1 hostViewHeight];
}

id objc_msgSend_hostedView(void *a1, const char *a2, ...)
{
  return _[a1 hostedView];
}

id objc_msgSend_hostsCancelButtonInBottomSection(void *a1, const char *a2, ...)
{
  return _[a1 hostsCancelButtonInBottomSection];
}

id objc_msgSend_hostsTranscriptionButtonInToolbar(void *a1, const char *a2, ...)
{
  return _[a1 hostsTranscriptionButtonInToolbar];
}

id objc_msgSend_hostsTransportAndDoneButtonInBottomSection(void *a1, const char *a2, ...)
{
  return _[a1 hostsTransportAndDoneButtonInBottomSection];
}

id objc_msgSend_hostsTrimButtonInToolbar(void *a1, const char *a2, ...)
{
  return _[a1 hostsTrimButtonInToolbar];
}

id objc_msgSend_hostsUndoButtonInToolbar(void *a1, const char *a2, ...)
{
  return _[a1 hostsUndoButtonInToolbar];
}

id objc_msgSend_hoursMinutesSecondsStringWithInterval_forAccessibility_(void *a1, const char *a2, ...)
{
  return [a1 hoursMinutesSecondsStringWithInterval:forAccessibility:];
}

id objc_msgSend_iCloudSyncConfirmationAlertController(void *a1, const char *a2, ...)
{
  return _[a1 iCloudSyncConfirmationAlertController];
}

id objc_msgSend_iconImage(void *a1, const char *a2, ...)
{
  return _[a1 iconImage];
}

id objc_msgSend_iconWithSystemImageName_(void *a1, const char *a2, ...)
{
  return [a1 iconWithSystemImageName:];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_idleDuration(void *a1, const char *a2, ...)
{
  return _[a1 idleDuration];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:];
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:inBundle:];
}

id objc_msgSend_imageProperties(void *a1, const char *a2, ...)
{
  return _[a1 imageProperties];
}

id objc_msgSend_imageSymbolConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 imageSymbolConfiguration];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_imageWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 imageWithConfiguration:];
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return [a1 imageWithRenderingMode:];
}

id objc_msgSend_imageWithSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 imageWithSymbolConfiguration:];
}

id objc_msgSend_impactOccurred(void *a1, const char *a2, ...)
{
  return _[a1 impactOccurred];
}

id objc_msgSend_importFileWithURL_shouldUseMetadataTitle_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 importFileWithURL:shouldUseMetadataTitle:completionHandler:];
}

id objc_msgSend_importRecordingWithSourceAudioURL_name_date_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importRecordingWithSourceAudioURL:name:date:completionHandler:");
}

id objc_msgSend_inButton(void *a1, const char *a2, ...)
{
  return _[a1 inButton];
}

id objc_msgSend_inDidSelect(void *a1, const char *a2, ...)
{
  return _[a1 inDidSelect];
}

id objc_msgSend_inOutButtonBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 inOutButtonBackgroundColor];
}

id objc_msgSend_inOutButtonCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 inOutButtonCornerRadius];
}

id objc_msgSend_inOutButtonTextColor(void *a1, const char *a2, ...)
{
  return _[a1 inOutButtonTextColor];
}

id objc_msgSend_includeTopLevelView(void *a1, const char *a2, ...)
{
  return _[a1 includeTopLevelView];
}

id objc_msgSend_indexForSliceStartTime_(void *a1, const char *a2, ...)
{
  return [a1 indexForSliceStartTime:];
}

id objc_msgSend_indexOfItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 indexOfItemIdentifier:];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_indexOfSectionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfSectionIdentifier:");
}

id objc_msgSend_indexOfUUID_(void *a1, const char *a2, ...)
{
  return [a1 indexOfUUID:];
}

id objc_msgSend_indexPathForCell_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForCell:];
}

id objc_msgSend_indexPathForFolder_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForFolder:];
}

id objc_msgSend_indexPathForItem_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForItem:inSection:];
}

id objc_msgSend_indexPathForItemAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForItemAtPoint:];
}

id objc_msgSend_indexPathForItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForItemIdentifier:];
}

id objc_msgSend_indexPathForObject_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForObject];
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRow:inSection:];
}

id objc_msgSend_indexPathForSelectedItem(void *a1, const char *a2, ...)
{
  return _[a1 indexPathForSelectedItem];
}

id objc_msgSend_indexPathOfSelectionDuringEditing(void *a1, const char *a2, ...)
{
  return _[a1 indexPathOfSelectionDuringEditing];
}

id objc_msgSend_indexPathsForSelectedItems(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForSelectedItems];
}

id objc_msgSend_indexPathsForVisibleItems(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForVisibleItems];
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 indexesOfObjectsPassingTest:];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_infoWithCurrentDateAndTime(void *a1, const char *a2, ...)
{
  return _[a1 infoWithCurrentDateAndTime];
}

id objc_msgSend_init_leeway_queue_block_(void *a1, const char *a2, ...)
{
  return [a1 init:leeway:queue:block:];
}

id objc_msgSend_initForRealTime_(void *a1, const char *a2, ...)
{
  return [a1 initForRealTime:];
}

id objc_msgSend_initForWriting_settings_error_(void *a1, const char *a2, ...)
{
  return [a1 initForWriting:settings:error:];
}

id objc_msgSend_initFromFormat_toFormat_(void *a1, const char *a2, ...)
{
  return [a1 initFromFormat:toFormat:];
}

id objc_msgSend_initStandardFormatWithSampleRate_channels_(void *a1, const char *a2, ...)
{
  return [a1 initStandardFormatWithSampleRate:channels:];
}

id objc_msgSend_initWith_(void *a1, const char *a2, ...)
{
  return [a1 initWith:];
}

id objc_msgSend_initWithAccessibilityContainer_(void *a1, const char *a2, ...)
{
  return [a1 initWithAccessibilityContainer:];
}

id objc_msgSend_initWithAppearance_(void *a1, const char *a2, ...)
{
  return [a1 initWithAppearance:];
}

id objc_msgSend_initWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return [a1 initWithArrangedSubviews:];
}

id objc_msgSend_initWithAsset_(void *a1, const char *a2, ...)
{
  return [a1 initWithAsset:];
}

id objc_msgSend_initWithAudioBuffer_audioTime_(void *a1, const char *a2, ...)
{
  return [a1 initWithAudioBuffer:audioTime:];
}

id objc_msgSend_initWithAudioComponentDescription_(void *a1, const char *a2, ...)
{
  return [a1 initWithAudioComponentDescription:];
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithBarButtonSystemItem:target:action:];
}

id objc_msgSend_initWithBuiltInFolderType_folderUUID_(void *a1, const char *a2, ...)
{
  return [a1 initWithBuiltInFolderType:folderUUID:];
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 initWithCapacity:];
}

id objc_msgSend_initWithCollectionView_cellProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithCollectionView:cellProvider:];
}

id objc_msgSend_initWithCollectionViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithCollectionViewController:];
}

id objc_msgSend_initWithCollectionViewLayout_(void *a1, const char *a2, ...)
{
  return [a1 initWithCollectionViewLayout:];
}

id objc_msgSend_initWithColor_selectionExtentIncludingKnobs_topKnob_bottomKnob_widthMultiplier_barWidthMatchesKnobs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithColor:selectionExtentIncludingKnobs:topKnob:bottomKnob:widthMultiplier:barWidthMatchesKnobs:");
}

id objc_msgSend_initWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithCompletionBlock:];
}

id objc_msgSend_initWithComposedAVURL_duration_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithComposedAVURL:duration:error:];
}

id objc_msgSend_initWithComposition_(void *a1, const char *a2, ...)
{
  return [a1 initWithComposition:];
}

id objc_msgSend_initWithComposition_trackIndex_(void *a1, const char *a2, ...)
{
  return [a1 initWithComposition:trackIndex:];
}

id objc_msgSend_initWithCompositions_accessTokens_(void *a1, const char *a2, ...)
{
  return [a1 initWithCompositions:accessTokens:];
}

id objc_msgSend_initWithContentView_(void *a1, const char *a2, ...)
{
  return [a1 initWithContentView:];
}

id objc_msgSend_initWithControlsAction_recordingUUID_actionTitle_(void *a1, const char *a2, ...)
{
  return [a1 initWithControlsAction:recordingUUID:actionTitle:];
}

id objc_msgSend_initWithCurrentTime_recordingDuration_(void *a1, const char *a2, ...)
{
  return [a1 initWithCurrentTime:recordingDuration:];
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return [a1 initWithCustomView:];
}

id objc_msgSend_initWithCustomView_placement_(void *a1, const char *a2, ...)
{
  return [a1 initWithCustomView:placement:];
}

id objc_msgSend_initWithDampingRatio_initialVelocity_(void *a1, const char *a2, ...)
{
  return [a1 initWithDampingRatio:initialVelocity:];
}

id objc_msgSend_initWithDataProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithDataProvider:];
}

id objc_msgSend_initWithDateEntry_updateFidelity_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithDateEntry:updateFidelity:userInfo:];
}

id objc_msgSend_initWithDateRecordingStartTime_initWithMachRecordingStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDateRecordingStartTime:initWithMachRecordingStartTime:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:];
}

id objc_msgSend_initWithDelegate_height_selectionAreaInsets_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:height:selectionAreaInsets:];
}

id objc_msgSend_initWithDestinationComposition_destinationFragment_trackIndex_(void *a1, const char *a2, ...)
{
  return [a1 initWithDestinationComposition:destinationComposition destinationFragment:destinationFragment trackIndex:trackIndex];
}

id objc_msgSend_initWithDiameter_(void *a1, const char *a2, ...)
{
  return [a1 initWithDiameter:];
}

id objc_msgSend_initWithDisplayStyle_isOverview_isCompact_duration_(void *a1, const char *a2, ...)
{
  return [a1 initWithDisplayStyle:isOverview:isCompact:duration:];
}

id objc_msgSend_initWithDropOperation_intent_(void *a1, const char *a2, ...)
{
  return [a1 initWithDropOperation:intent:];
}

id objc_msgSend_initWithDuration_timingParameters_(void *a1, const char *a2, ...)
{
  return [a1 initWithDuration:timingParameters:];
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return [a1 initWithEffect:];
}

id objc_msgSend_initWithEffectiveBundleIdentifier_delegate_onQueue_(void *a1, const char *a2, ...)
{
  return [a1 initWithEffectiveBundleIdentifier:delegate:onQueue:];
}

id objc_msgSend_initWithFetchRequest_managedObjectContext_(void *a1, const char *a2, ...)
{
  return [a1 initWithFetchRequest:managedObjectContext:];
}

id objc_msgSend_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_(void *a1, const char *a2, ...)
{
  return [a1 initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:];
}

id objc_msgSend_initWithFolder_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithFolder:delegate:];
}

id objc_msgSend_initWithFolderType_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithFolderType:delegate:];
}

id objc_msgSend_initWithFormat_renderBlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithFormat:renderBlock:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithFrame_childView_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:childView:];
}

id objc_msgSend_initWithFrame_collectionViewLayout_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:collectionViewLayout:];
}

id objc_msgSend_initWithFrame_dataProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:dataProvider:];
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:style:];
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:];
}

id objc_msgSend_initWithImage_menu_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:menu:];
}

id objc_msgSend_initWithImage_style_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:style:target:action:];
}

id objc_msgSend_initWithInternalConstructionDelayedUntilUnhidden(void *a1, const char *a2, ...)
{
  return _[a1 initWithInternalConstructionDelayedUntilUnhidden];
}

id objc_msgSend_initWithItemProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithItemProvider:];
}

id objc_msgSend_initWithLength_(void *a1, const char *a2, ...)
{
  return [a1 initWithLength:];
}

id objc_msgSend_initWithListAppearance_(void *a1, const char *a2, ...)
{
  return [a1 initWithListAppearance:];
}

id objc_msgSend_initWithMainControllerHelper_(void *a1, const char *a2, ...)
{
  return [a1 initWithMainControllerHelper:];
}

id objc_msgSend_initWithMass_stiffness_damping_initialVelocity_(void *a1, const char *a2, ...)
{
  return [a1 initWithMass:stiffness:damping:initialVelocity:];
}

id objc_msgSend_initWithName_defaultValue_min_max_internalAddress_graphName_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:defaultValue:min:max:internalAddress:graphName:];
}

id objc_msgSend_initWithName_sessionRole_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:sessionRole:];
}

id objc_msgSend_initWithName_target_selector_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:target:selector:];
}

id objc_msgSend_initWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return [a1 initWithNibName:nil bundle:nil];
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 initWithObjects:];
}

id objc_msgSend_initWithPCMFormat_frameCapacity_(void *a1, const char *a2, ...)
{
  return [a1 initWithPCMFormat:frameCapacity:];
}

id objc_msgSend_initWithPackageName_inBundle_(void *a1, const char *a2, ...)
{
  return [a1 initWithPackageName:inBundle:];
}

id objc_msgSend_initWithParentView_shouldObserveChanges_(void *a1, const char *a2, ...)
{
  return [a1 initWithParentView:shouldObserveChanges:];
}

id objc_msgSend_initWithPerceptualDuration_bounce_(void *a1, const char *a2, ...)
{
  return [a1 initWithPerceptualDuration:bounce:];
}

id objc_msgSend_initWithPersistentStore_transactionAuthorToIgnore_startingToken_viewContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersistentStore:transactionAuthorToIgnore:startingToken:viewContext:");
}

id objc_msgSend_initWithPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithPresentationStyle:];
}

id objc_msgSend_initWithRecordButtonRepository_interactionHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithRecordButtonRepository:interactionHandler:];
}

id objc_msgSend_initWithRecordingStartTimeInfo_elapsedRecordingTimeInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithRecordingStartTimeInfo:elapsedRecordingTimeInfo:];
}

id objc_msgSend_initWithRecordingUUID_actionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithRecordingUUID:actionDelegate:];
}

id objc_msgSend_initWithRecordingUUID_actionDelegate_source_(void *a1, const char *a2, ...)
{
  return [a1 initWithRecordingUUID:actionDelegate:source:];
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootViewController:];
}

id objc_msgSend_initWithSavedRecordingsModel_(void *a1, const char *a2, ...)
{
  return [a1 initWithSavedRecordingsModel:];
}

id objc_msgSend_initWithScrubbingControl_(void *a1, const char *a2, ...)
{
  return [a1 initWithScrubbingControl:];
}

id objc_msgSend_initWithSearchResultsController_(void *a1, const char *a2, ...)
{
  return [a1 initWithSearchResultsController:];
}

id objc_msgSend_initWithSectionProvider_(void *a1, const char *a2, ...)
{
  return [a1 initWithSectionProvider:];
}

id objc_msgSend_initWithSegmentFlushInterval_trackIndex_(void *a1, const char *a2, ...)
{
  return [a1 initWithSegmentFlushInterval:trackIndex:];
}

id objc_msgSend_initWithShareableCompositions_(void *a1, const char *a2, ...)
{
  return [a1 initWithShareableCompositions];
}

id objc_msgSend_initWithShuttleBarStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithShuttleBarStyle:];
}

id objc_msgSend_initWithStores_viewContext_transactionAuthorToIgnore_(void *a1, const char *a2, ...)
{
  return [a1 initWithStores:viewContext:transactionAuthorToIgnore:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:attributes:];
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithTestName_scrollBounds_scrollContentLength_direction_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithTestName:scrollBounds:scrollContentLength:direction:completionHandler:];
}

id objc_msgSend_initWithTestName_scrollView_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTestName:scrollView:completionHandler:");
}

id objc_msgSend_initWithText_(void *a1, const char *a2, ...)
{
  return [a1 initWithText:];
}

id objc_msgSend_initWithTitle_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:];
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:style:target:action:];
}

id objc_msgSend_initWithToActivityType_toSubType_fromActivityType_fromSubType_displayModel_waveformDataSource_composition_(void *a1, const char *a2, ...)
{
  return [a1 initWithToActivityType:toActivityType fromActivityType:fromActivityType displayModel:displayModel waveformDataSource:waveformDataSource composition:composition];
}

id objc_msgSend_initWithType_localizedTitle_localizedSubtitle_icon_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:localizedTitle:localizedSubtitle:icon:userInfo:];
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:];
}

id objc_msgSend_initWithUUID_enhanced_silenceRemoved_playbackSpeed_layerMix_hasMultipleTracks_(void *a1, const char *a2, ...)
{
  return [a1 initWithUUID:enhanced:silenceRemoved:playbackSpeed:layerMix:hasMultipleTracks:];
}

id objc_msgSend_initWithUndoTargetType_(void *a1, const char *a2, ...)
{
  return [a1 initWithUndoTargetType:];
}

id objc_msgSend_initWithUserFolderNamed_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserFolderNamed:delegate:];
}

id objc_msgSend_initWithUserFolderNamed_folderUUID_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserFolderNamed:folderUUID:];
}

id objc_msgSend_initWithView_(void *a1, const char *a2, ...)
{
  return [a1 initWithView:];
}

id objc_msgSend_initWithWaveformDataSource_displayStyle_isOverview_isCompact_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithWaveformDataSource:displayStyle:isOverview:isCompact:delegate:];
}

id objc_msgSend_initWithWaveformGenerator_generatedWaveformOutputURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithWaveformGenerator:generatedWaveformOutputURL:];
}

id objc_msgSend_initWithWaveformGenerator_generatedWaveformOutputURL_trackIndex_(void *a1, const char *a2, ...)
{
  return [a1 initWithWaveformGenerator:generatedWaveformOutputURL:trackIndex:];
}

id objc_msgSend_initWithWaveformProcessor_(void *a1, const char *a2, ...)
{
  return [a1 initWithWaveformProcessor:];
}

id objc_msgSend_initWithWindowScene_(void *a1, const char *a2, ...)
{
  return [a1 initWithWindowScene:];
}

id objc_msgSend_innerSquareCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 innerSquareCornerRadius];
}

id objc_msgSend_innerSquareWidth(void *a1, const char *a2, ...)
{
  return _[a1 innerSquareWidth];
}

id objc_msgSend_innerStateLayer(void *a1, const char *a2, ...)
{
  return _[a1 innerStateLayer];
}

id objc_msgSend_inputFormatForBus_(void *a1, const char *a2, ...)
{
  return [a1 inputFormatForBus:];
}

id objc_msgSend_inputLatency(void *a1, const char *a2, ...)
{
  return _[a1 inputLatency];
}

id objc_msgSend_inputNode_(void *a1, const char *a2, ...)
{
  return [a1 inputNode:];
}

id objc_msgSend_inputProvider(void *a1, const char *a2, ...)
{
  return _[a1 inputProvider];
}

id objc_msgSend_insertArrangedSubview_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertArrangedSubview:atIndex:];
}

id objc_msgSend_insertChildMenu_atStartOfMenuForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 insertChildMenu:atStartOfMenuForIdentifier:];
}

id objc_msgSend_insertItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 insertItemsAtIndexPaths:];
}

id objc_msgSend_insertRecordingWithAudioFile_duration_date_customTitleBase_uniqueID_(void *a1, const char *a2, ...)
{
  return [a1 insertRecordingWithAudioFile:duration:date:customTitleBase:uniqueID:];
}

id objc_msgSend_insertSiblingMenu_afterMenuForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 insertSiblingMenu:afterMenuForIdentifier:];
}

id objc_msgSend_insertSublayer_below_(void *a1, const char *a2, ...)
{
  return [a1 insertSublayer:below:];
}

id objc_msgSend_insertSubview_aboveSubview_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:aboveSubview:];
}

id objc_msgSend_installCACommitCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 installCACommitCompletionBlock:];
}

id objc_msgSend_installTapOnBus_bufferSize_format_block_(void *a1, const char *a2, ...)
{
  return [a1 installTapOnBus:bufferSize:format:block:];
}

id objc_msgSend_instancesRespondToSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instancesRespondToSelector:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interactivePopGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 interactivePopGestureRecognizer];
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 interfaceOrientation];
}

id objc_msgSend_interfaceOrientationDidUpdate_(void *a1, const char *a2, ...)
{
  return [a1 interfaceOrientationDidUpdate:];
}

id objc_msgSend_internalAddress(void *a1, const char *a2, ...)
{
  return _[a1 internalAddress];
}

id objc_msgSend_internalRecording(void *a1, const char *a2, ...)
{
  return _[a1 internalRecording];
}

id objc_msgSend_interval(void *a1, const char *a2, ...)
{
  return _[a1 interval];
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return _[a1 intrinsicContentSize];
}

id objc_msgSend_intrinsicHeight(void *a1, const char *a2, ...)
{
  return _[a1 intrinsicHeight];
}

id objc_msgSend_intrinsicHeightForBottomAccessoryViewAndSafeArea(void *a1, const char *a2, ...)
{
  return _[a1 intrinsicHeightForBottomAccessoryViewAndSafeArea];
}

id objc_msgSend_intrinsicHeightForCompactView(void *a1, const char *a2, ...)
{
  return _[a1 intrinsicHeightForCompactView];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateAllTimelinesForReason_(void *a1, const char *a2, ...)
{
  return [a1 invalidateAllTimelinesForReason:];
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _[a1 invalidateIntrinsicContentSize];
}

id objc_msgSend_ioStarted(void *a1, const char *a2, ...)
{
  return _[a1 ioStarted];
}

id objc_msgSend_isAccessibilityElement(void *a1, const char *a2, ...)
{
  return _[a1 isAccessibilityElement];
}

id objc_msgSend_isAccessibilityLargerTextSizeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAccessibilityLargerTextSizeEnabled];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isAlreadyFavorite(void *a1, const char *a2, ...)
{
  return _[a1 isAlreadyFavorite];
}

id objc_msgSend_isAvailableWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 isAvailableWithCompletionHandler:];
}

id objc_msgSend_isBackupEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isBackupEnabled];
}

id objc_msgSend_isBeingDismissed(void *a1, const char *a2, ...)
{
  return _[a1 isBeingDismissed];
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 isCollapsed];
}

id objc_msgSend_isCollapsedAndShowingPrimary(void *a1, const char *a2, ...)
{
  return _[a1 isCollapsedAndShowingPrimary];
}

id objc_msgSend_isCollectionViewInEditMode(void *a1, const char *a2, ...)
{
  return _[a1 isCollectionViewInEditMode];
}

id objc_msgSend_isCompactView(void *a1, const char *a2, ...)
{
  return _[a1 isCompactView];
}

id objc_msgSend_isContinuous(void *a1, const char *a2, ...)
{
  return _[a1 isContinuous];
}

id objc_msgSend_isCurrentlyTracking(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentlyTracking];
}

id objc_msgSend_isDateInToday_(void *a1, const char *a2, ...)
{
  return [a1 isDateInToday:];
}

id objc_msgSend_isDateInYesterday_(void *a1, const char *a2, ...)
{
  return [a1 isDateInYesterday:];
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return [a1 isDescendantOfView:];
}

id objc_msgSend_isDisplayingTranscriptView(void *a1, const char *a2, ...)
{
  return _[a1 isDisplayingTranscriptView];
}

id objc_msgSend_isDownloadingAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 isDownloadingAtIndexPath:];
}

id objc_msgSend_isDuringMove(void *a1, const char *a2, ...)
{
  return _[a1 isDuringMove];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEditingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEditingEnabled];
}

id objc_msgSend_isEditingInFlightForUUID_(void *a1, const char *a2, ...)
{
  return [a1 isEditingInFlightForUUID:];
}

id objc_msgSend_isEditingTitle(void *a1, const char *a2, ...)
{
  return _[a1 isEditingTitle];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEnhanced(void *a1, const char *a2, ...)
{
  return _[a1 isEnhanced];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToArray:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isFavorite(void *a1, const char *a2, ...)
{
  return _[a1 isFavorite];
}

id objc_msgSend_isFavoriteForUUID_(void *a1, const char *a2, ...)
{
  return [a1 isFavoriteForUUID:];
}

id objc_msgSend_isFavoriteForUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 isFavoriteForUUIDs:];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 isFirstResponder];
}

id objc_msgSend_isFocused(void *a1, const char *a2, ...)
{
  return _[a1 isFocused];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _[a1 isHidden];
}

id objc_msgSend_isHighlighted(void *a1, const char *a2, ...)
{
  return _[a1 isHighlighted];
}

id objc_msgSend_isInAndromeda(void *a1, const char *a2, ...)
{
  return _[a1 isInAndromeda];
}

id objc_msgSend_isInForeground(void *a1, const char *a2, ...)
{
  return _[a1 isInForeground];
}

id objc_msgSend_isInHardwareKeyboardMode(void *a1, const char *a2, ...)
{
  return _[a1 isInHardwareKeyboardMode];
}

id objc_msgSend_isInactive(void *a1, const char *a2, ...)
{
  return _[a1 isInactive];
}

id objc_msgSend_isLiveWaveform(void *a1, const char *a2, ...)
{
  return _[a1 isLiveWaveform];
}

id objc_msgSend_isLockScreenActive(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenActive];
}

id objc_msgSend_isLockScreenController(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenController];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _[a1 isMainThread];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return [a1 isMemberOfClass:];
}

id objc_msgSend_isMultiUser(void *a1, const char *a2, ...)
{
  return _[a1 isMultiUser];
}

id objc_msgSend_isMuted(void *a1, const char *a2, ...)
{
  return _[a1 isMuted];
}

id objc_msgSend_isNewRecording(void *a1, const char *a2, ...)
{
  return _[a1 isNewRecording];
}

id objc_msgSend_isOn(void *a1, const char *a2, ...)
{
  return _[a1 isOn];
}

id objc_msgSend_isOverview(void *a1, const char *a2, ...)
{
  return _[a1 isOverview];
}

id objc_msgSend_isPaused(void *a1, const char *a2, ...)
{
  return _[a1 isPaused];
}

id objc_msgSend_isPerformingLiveTranscription(void *a1, const char *a2, ...)
{
  return _[a1 isPerformingLiveTranscription];
}

id objc_msgSend_isPlayBarOnlyMode(void *a1, const char *a2, ...)
{
  return _[a1 isPlayBarOnlyMode];
}

id objc_msgSend_isPlayback(void *a1, const char *a2, ...)
{
  return _[a1 isPlayback];
}

id objc_msgSend_isPlaying(void *a1, const char *a2, ...)
{
  return _[a1 isPlaying];
}

id objc_msgSend_isPlayingForUUID_(void *a1, const char *a2, ...)
{
  return [a1 isPlayingForUUID:];
}

id objc_msgSend_isProcessingOrDisplayingFileTranscriptionForUUID_(void *a1, const char *a2, ...)
{
  return [a1 isProcessingOrDisplayingFileTranscriptionForUUID:];
}

id objc_msgSend_isQuickRecordingWorkflowDismissal(void *a1, const char *a2, ...)
{
  return _[a1 isQuickRecordingWorkflowDismissal];
}

id objc_msgSend_isReadableFileAtPath_(void *a1, const char *a2, ...)
{
  return [a1 isReadableFileAtPath:];
}

id objc_msgSend_isRecapAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isRecapAvailable];
}

id objc_msgSend_isRecentlyDeleted(void *a1, const char *a2, ...)
{
  return _[a1 isRecentlyDeleted];
}

id objc_msgSend_isRecentlyDeletedForUUID_(void *a1, const char *a2, ...)
{
  return [a1 isRecentlyDeletedForUUID:];
}

id objc_msgSend_isRecentlyDeletedShown(void *a1, const char *a2, ...)
{
  return _[a1 isRecentlyDeletedShown];
}

id objc_msgSend_isRecording(void *a1, const char *a2, ...)
{
  return _[a1 isRecording];
}

id objc_msgSend_isRecordingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 isRecordingEnabled:];
}

id objc_msgSend_isRecordingViewHidden(void *a1, const char *a2, ...)
{
  return _[a1 isRecordingViewHidden];
}

id objc_msgSend_isRunning(void *a1, const char *a2, ...)
{
  return _[a1 isRunning];
}

id objc_msgSend_isRunningTest(void *a1, const char *a2, ...)
{
  return _[a1 isRunningTest];
}

id objc_msgSend_isSearching(void *a1, const char *a2, ...)
{
  return _[a1 isSearching];
}

id objc_msgSend_isSelected(void *a1, const char *a2, ...)
{
  return _[a1 isSelected];
}

id objc_msgSend_isSelectedTimeRangeEditingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSelectedTimeRangeEditingEnabled];
}

id objc_msgSend_isSelectingCellForFocusUpdate(void *a1, const char *a2, ...)
{
  return _[a1 isSelectingCellForFocusUpdate];
}

id objc_msgSend_isSelectionOverlayCurrentlyTracking(void *a1, const char *a2, ...)
{
  return _[a1 isSelectionOverlayCurrentlyTracking];
}

id objc_msgSend_isSetup(void *a1, const char *a2, ...)
{
  return _[a1 isSetup];
}

id objc_msgSend_isShowingRecentlyDeleted(void *a1, const char *a2, ...)
{
  return _[a1 isShowingRecentlyDeleted];
}

id objc_msgSend_isSilencing(void *a1, const char *a2, ...)
{
  return _[a1 isSilencing];
}

id objc_msgSend_isStandard(void *a1, const char *a2, ...)
{
  return _[a1 isStandard];
}

id objc_msgSend_isSwiped(void *a1, const char *a2, ...)
{
  return _[a1 isSwiped];
}

id objc_msgSend_isSwitchON(void *a1, const char *a2, ...)
{
  return _[a1 isSwitchON];
}

id objc_msgSend_isSyncingViewsToState(void *a1, const char *a2, ...)
{
  return _[a1 isSyncingViewsToState];
}

id objc_msgSend_isToggled(void *a1, const char *a2, ...)
{
  return _[a1 isToggled];
}

id objc_msgSend_isToolbarHidden(void *a1, const char *a2, ...)
{
  return _[a1 isToolbarHidden];
}

id objc_msgSend_isTranscriptViewDisplayed(void *a1, const char *a2, ...)
{
  return _[a1 isTranscriptViewDisplayed];
}

id objc_msgSend_isTransitioningBetweenVisibleColumnStates(void *a1, const char *a2, ...)
{
  return _[a1 isTransitioningBetweenVisibleColumnStates];
}

id objc_msgSend_isTrim(void *a1, const char *a2, ...)
{
  return _[a1 isTrim];
}

id objc_msgSend_isTrimMode(void *a1, const char *a2, ...)
{
  return _[a1 isTrimMode];
}

id objc_msgSend_isUndoing(void *a1, const char *a2, ...)
{
  return _[a1 isUndoing];
}

id objc_msgSend_isUpdatingBottomLayoutForEditing(void *a1, const char *a2, ...)
{
  return _[a1 isUpdatingBottomLayoutForEditing];
}

id objc_msgSend_isUpdatingSearchString(void *a1, const char *a2, ...)
{
  return _[a1 isUpdatingSearchString];
}

id objc_msgSend_isUserInteractionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isUserInteractionEnabled];
}

id objc_msgSend_isUserInterfaceStyleDark(void *a1, const char *a2, ...)
{
  return _[a1 isUserInterfaceStyleDark];
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isViewLoaded];
}

id objc_msgSend_isWaveformOverview(void *a1, const char *a2, ...)
{
  return _[a1 isWaveformOverview];
}

id objc_msgSend_isZooming(void *a1, const char *a2, ...)
{
  return _[a1 isZooming];
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _[a1 item];
}

id objc_msgSend_itemIdentifierForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 itemIdentifierForIndexPath:];
}

id objc_msgSend_itemProvider(void *a1, const char *a2, ...)
{
  return _[a1 itemProvider];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_jumpBackwardButton(void *a1, const char *a2, ...)
{
  return _[a1 jumpBackwardButton];
}

id objc_msgSend_jumpBackwardForUUID_(void *a1, const char *a2, ...)
{
  return [a1 jumpBackwardForUUID:];
}

id objc_msgSend_jumpBackwardForwardButtonSpacing(void *a1, const char *a2, ...)
{
  return _[a1 jumpBackwardForwardButtonSpacing];
}

id objc_msgSend_jumpForwardButton(void *a1, const char *a2, ...)
{
  return _[a1 jumpForwardButton];
}

id objc_msgSend_jumpForwardForUUID_(void *a1, const char *a2, ...)
{
  return [a1 jumpForwardForUUID:];
}

id objc_msgSend_jumpSelectionBackward(void *a1, const char *a2, ...)
{
  return _[a1 jumpSelectionBackward];
}

id objc_msgSend_jumpSelectionForward(void *a1, const char *a2, ...)
{
  return _[a1 jumpSelectionForward];
}

id objc_msgSend_keyCommandWithInput_modifierFlags_action_(void *a1, const char *a2, ...)
{
  return [a1 keyCommandWithInput:modifierFlags:action:];
}

id objc_msgSend_knobWidthMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 knobWidthMultiplier];
}

id objc_msgSend_labelClass(void *a1, const char *a2, ...)
{
  return _[a1 labelClass];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_labelConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 labelConfiguration];
}

id objc_msgSend_labelLozengeRectWithLabelIntrinsicWidth_recordingControlCenterPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelLozengeRectWithLabelIntrinsicWidth:recordingControlCenterPoint:");
}

id objc_msgSend_labelYOffset(void *a1, const char *a2, ...)
{
  return _[a1 labelYOffset];
}

id objc_msgSend_largeDetent(void *a1, const char *a2, ...)
{
  return _[a1 largeDetent];
}

id objc_msgSend_lastBaselineAnchor(void *a1, const char *a2, ...)
{
  return _[a1 lastBaselineAnchor];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastRenderTime(void *a1, const char *a2, ...)
{
  return _[a1 lastRenderTime];
}

id objc_msgSend_latency(void *a1, const char *a2, ...)
{
  return _[a1 latency];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layerAlpha(void *a1, const char *a2, ...)
{
  return _[a1 layerAlpha];
}

id objc_msgSend_layerMix(void *a1, const char *a2, ...)
{
  return _[a1 layerMix];
}

id objc_msgSend_layoutFrame(void *a1, const char *a2, ...)
{
  return _[a1 layoutFrame];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_layoutSubviews(void *a1, const char *a2, ...)
{
  return _[a1 layoutSubviews];
}

id objc_msgSend_layoutWithLayout_(void *a1, const char *a2, ...)
{
  return [a1 layoutWithLayout:];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_leadingPlatterWaveformView(void *a1, const char *a2, ...)
{
  return _[a1 leadingPlatterWaveformView];
}

id objc_msgSend_leadingView(void *a1, const char *a2, ...)
{
  return _[a1 leadingView];
}

id objc_msgSend_leftSideButton(void *a1, const char *a2, ...)
{
  return _[a1 leftSideButton];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_libraryActionHandler(void *a1, const char *a2, ...)
{
  return _[a1 libraryActionHandler];
}

id objc_msgSend_libraryCellDescriptionHeight(void *a1, const char *a2, ...)
{
  return _[a1 libraryCellDescriptionHeight];
}

id objc_msgSend_libraryCellDescriptionViewShuttleBarPadding(void *a1, const char *a2, ...)
{
  return _[a1 libraryCellDescriptionViewShuttleBarPadding];
}

id objc_msgSend_libraryCellShuttleBarHeight(void *a1, const char *a2, ...)
{
  return _[a1 libraryCellShuttleBarHeight];
}

id objc_msgSend_libraryChangedEmptyState(void *a1, const char *a2, ...)
{
  return _[a1 libraryChangedEmptyState];
}

id objc_msgSend_libraryDidChangeEditingState(void *a1, const char *a2, ...)
{
  return _[a1 libraryDidChangeEditingState];
}

id objc_msgSend_libraryGoBackwardImage(void *a1, const char *a2, ...)
{
  return _[a1 libraryGoBackwardImage];
}

id objc_msgSend_libraryGoForwardImage(void *a1, const char *a2, ...)
{
  return _[a1 libraryGoForwardImage];
}

id objc_msgSend_libraryPauseImage(void *a1, const char *a2, ...)
{
  return _[a1 libraryPauseImage];
}

id objc_msgSend_libraryPlayImage(void *a1, const char *a2, ...)
{
  return _[a1 libraryPlayImage];
}

id objc_msgSend_librarySupportsBlueCellSelectionStyle(void *a1, const char *a2, ...)
{
  return _[a1 librarySupportsBlueCellSelectionStyle];
}

id objc_msgSend_libraryWillChangeEditingState_(void *a1, const char *a2, ...)
{
  return [a1 libraryWillChangeEditingState:];
}

id objc_msgSend_lineBreakMode(void *a1, const char *a2, ...)
{
  return _[a1 lineBreakMode];
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return _[a1 lineHeight];
}

id objc_msgSend_linkButton(void *a1, const char *a2, ...)
{
  return _[a1 linkButton];
}

id objc_msgSend_listGroupedCellConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 listGroupedCellConfiguration];
}

id objc_msgSend_liveTranscription(void *a1, const char *a2, ...)
{
  return _[a1 liveTranscription];
}

id objc_msgSend_loadFileRepresentationForTypeIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 loadFileRepresentationForTypeIdentifier:completionHandler:];
}

id objc_msgSend_localContext(void *a1, const char *a2, ...)
{
  return _[a1 localContext];
}

id objc_msgSend_localDragSession(void *a1, const char *a2, ...)
{
  return _[a1 localDragSession];
}

id objc_msgSend_localObject(void *a1, const char *a2, ...)
{
  return _[a1 localObject];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringFromNumber:numberStyle:];
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithFormat:];
}

id objc_msgSend_localizedUppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 localizedUppercaseString];
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return [a1 locationInView:];
}

id objc_msgSend_locationsOfInterest(void *a1, const char *a2, ...)
{
  return _[a1 locationsOfInterest];
}

id objc_msgSend_lockScreenRecordingViewController(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenRecordingViewController];
}

id objc_msgSend_lockScreenRecordingViewControllerWantsUnlockFromControl_(void *a1, const char *a2, ...)
{
  return [a1 lockScreenRecordingViewControllerWantsUnlockFromControl:];
}

id objc_msgSend_lockScreenRecordingViewDidTapControl(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenRecordingViewDidTapControl];
}

id objc_msgSend_lockScreenRecordingViewDidTapDone(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenRecordingViewDidTapDone];
}

id objc_msgSend_lockScreenRecordingViewWillPauseRecording(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenRecordingViewWillPauseRecording];
}

id objc_msgSend_lockScreenSceneDelegate(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenSceneDelegate];
}

id objc_msgSend_longPressRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 longPressRecognizer];
}

id objc_msgSend_losslessAudioSettings(void *a1, const char *a2, ...)
{
  return _[a1 losslessAudioSettings];
}

id objc_msgSend_machElapsedRecordingTime(void *a1, const char *a2, ...)
{
  return _[a1 machElapsedRecordingTime];
}

id objc_msgSend_machRecordingStartTime(void *a1, const char *a2, ...)
{
  return _[a1 machRecordingStartTime];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainContainerStackView(void *a1, const char *a2, ...)
{
  return _[a1 mainContainerStackView];
}

id objc_msgSend_mainControllerHelper(void *a1, const char *a2, ...)
{
  return _[a1 mainControllerHelper];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 mainRunLoop];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mainSystem(void *a1, const char *a2, ...)
{
  return _[a1 mainSystem];
}

id objc_msgSend_mainUndoManager(void *a1, const char *a2, ...)
{
  return _[a1 mainUndoManager];
}

id objc_msgSend_mainViewController(void *a1, const char *a2, ...)
{
  return _[a1 mainViewController];
}

id objc_msgSend_mainViewControllerDelegate(void *a1, const char *a2, ...)
{
  return _[a1 mainViewControllerDelegate];
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyAndVisible];
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectContext];
}

id objc_msgSend_managedObjectModel(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectModel];
}

id objc_msgSend_manuallyRenamed(void *a1, const char *a2, ...)
{
  return _[a1 manuallyRenamed];
}

id objc_msgSend_markCurrentVersion(void *a1, const char *a2, ...)
{
  return _[a1 markCurrentVersion];
}

id objc_msgSend_mass(void *a1, const char *a2, ...)
{
  return _[a1 mass];
}

id objc_msgSend_maxTrackTintColor(void *a1, const char *a2, ...)
{
  return _[a1 maxTrackTintColor];
}

id objc_msgSend_maximumDecibelDisplayRange(void *a1, const char *a2, ...)
{
  return _[a1 maximumDecibelDisplayRange];
}

id objc_msgSend_maximumFramesToRender(void *a1, const char *a2, ...)
{
  return _[a1 maximumFramesToRender];
}

id objc_msgSend_maximumPrimaryColumnWidth(void *a1, const char *a2, ...)
{
  return _[a1 maximumPrimaryColumnWidth];
}

id objc_msgSend_maximumSelectionDuration(void *a1, const char *a2, ...)
{
  return _[a1 maximumSelectionDuration];
}

id objc_msgSend_maximumSliceHeight(void *a1, const char *a2, ...)
{
  return _[a1 maximumSliceHeight];
}

id objc_msgSend_maximumSupplementaryColumnWidth(void *a1, const char *a2, ...)
{
  return _[a1 maximumSupplementaryColumnWidth];
}

id objc_msgSend_maximumValue(void *a1, const char *a2, ...)
{
  return _[a1 maximumValue];
}

id objc_msgSend_mediumDetent(void *a1, const char *a2, ...)
{
  return _[a1 mediumDetent];
}

id objc_msgSend_menuWithChildren_(void *a1, const char *a2, ...)
{
  return [a1 menuWithChildren:];
}

id objc_msgSend_menuWithTitle_children_(void *a1, const char *a2, ...)
{
  return [a1 menuWithTitle:children:];
}

id objc_msgSend_menuWithTitle_image_identifier_options_children_(void *a1, const char *a2, ...)
{
  return [a1 menuWithTitle:image:identifier:options:children:];
}

id objc_msgSend_mergeChangesFromRemoteContextSave_intoContexts_(void *a1, const char *a2, ...)
{
  return [a1 mergeChangesFromRemoteContextSave:];
}

id objc_msgSend_minTrackTintColor(void *a1, const char *a2, ...)
{
  return _[a1 minTrackTintColor];
}

id objc_msgSend_minimalAndromedaPlatterWaveformView(void *a1, const char *a2, ...)
{
  return _[a1 minimalAndromedaPlatterWaveformView];
}

id objc_msgSend_minimalCheckmarkView(void *a1, const char *a2, ...)
{
  return _[a1 minimalCheckmarkView];
}

id objc_msgSend_minimalPlatterWaveformView(void *a1, const char *a2, ...)
{
  return _[a1 minimalPlatterWaveformView];
}

id objc_msgSend_minimalView(void *a1, const char *a2, ...)
{
  return _[a1 minimalView];
}

id objc_msgSend_minimalViewContainer(void *a1, const char *a2, ...)
{
  return _[a1 minimalViewContainer];
}

id objc_msgSend_minimumDecibelDisplayRange(void *a1, const char *a2, ...)
{
  return _[a1 minimumDecibelDisplayRange];
}

id objc_msgSend_minimumLayoutSize(void *a1, const char *a2, ...)
{
  return _[a1 minimumLayoutSize];
}

id objc_msgSend_minimumPrimaryColumnWidth(void *a1, const char *a2, ...)
{
  return _[a1 minimumPrimaryColumnWidth];
}

id objc_msgSend_minimumSecondaryColumnWidth(void *a1, const char *a2, ...)
{
  return _[a1 minimumSecondaryColumnWidth];
}

id objc_msgSend_minimumSliceHeight(void *a1, const char *a2, ...)
{
  return _[a1 minimumSliceHeight];
}

id objc_msgSend_minimumSupplementaryColumnWidth(void *a1, const char *a2, ...)
{
  return _[a1 minimumSupplementaryColumnWidth];
}

id objc_msgSend_minimumValue(void *a1, const char *a2, ...)
{
  return _[a1 minimumValue];
}

id objc_msgSend_modalMustShowOrIsShowing(void *a1, const char *a2, ...)
{
  return _[a1 modalMustShowOrIsShowing];
}

id objc_msgSend_modalPresentationStyle(void *a1, const char *a2, ...)
{
  return _[a1 modalPresentationStyle];
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return _[a1 mode];
}

id objc_msgSend_modifierFlags(void *a1, const char *a2, ...)
{
  return _[a1 modifierFlags];
}

id objc_msgSend_monitorRecordingTime_duration_(void *a1, const char *a2, ...)
{
  return [a1 monitorRecordingTime:duration:];
}

id objc_msgSend_monospacedDigitSystemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return [a1 monospacedDigitSystemFontOfSize:weight:];
}

id objc_msgSend_moreActionsButton(void *a1, const char *a2, ...)
{
  return _[a1 moreActionsButton];
}

id objc_msgSend_moreButton(void *a1, const char *a2, ...)
{
  return _[a1 moreButton];
}

id objc_msgSend_moreButtonMenuCreator(void *a1, const char *a2, ...)
{
  return _[a1 moreButtonMenuCreator];
}

id objc_msgSend_moreOptionsButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 moreOptionsButtonItem];
}

id objc_msgSend_mostRecentRecording(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentRecording];
}

id objc_msgSend_mostRecentRecordingIsSelectable(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentRecordingIsSelectable];
}

id objc_msgSend_moveFolder_toDestinationIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveFolder:toDestinationIndexPath:");
}

id objc_msgSend_moveItemAtIndexPath_toIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 moveItemAtIndexPath:toIndexPath:];
}

id objc_msgSend_moveItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return [a1 moveItemAtURL:toURL:error:];
}

id objc_msgSend_moveRecordingsWithUUIDs_fromFolderOfType_toBuiltInFolderOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveRecordingsWithUUIDs:fromFolderOfType:toBuiltInFolderOfType:");
}

id objc_msgSend_moveRecordingsWithUUIDs_toBuiltInFolderOfType_source_(void *a1, const char *a2, ...)
{
  return [a1 moveRecordingsWithUUIDs:toBuiltInFolderOfType:source:];
}

id objc_msgSend_moveRecordingsWithUUIDs_toFolderWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveRecordingsWithUUIDs:toFolderWithUUID:");
}

id objc_msgSend_moveRecordingsWithUUIDs_toUserFolderNamed_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveRecordingsWithUUIDs:toUserFolderNamed:source:");
}

id objc_msgSend_moveTo_recordingID_error_(void *a1, const char *a2, ...)
{
  return [a1 moveTo:recordingID:error:];
}

id objc_msgSend_moveToFolderActivitySystemImageName(void *a1, const char *a2, ...)
{
  return _[a1 moveToFolderActivitySystemImageName];
}

id objc_msgSend_moveToFolderButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 moveToFolderButtonItem];
}

id objc_msgSend_moveToFolderContainerViewControllerWithUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 moveToFolderContainerViewControllerWithUUIDs:];
}

id objc_msgSend_moveToFolderImage(void *a1, const char *a2, ...)
{
  return _[a1 moveToFolderImage];
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return [a1 moveToPoint:];
}

id objc_msgSend_multiTrackIndicatorImage(void *a1, const char *a2, ...)
{
  return _[a1 multiTrackIndicatorImage];
}

id objc_msgSend_multiTrackIndicatorImageView(void *a1, const char *a2, ...)
{
  return _[a1 multiTrackIndicatorImageView];
}

id objc_msgSend_multiplier(void *a1, const char *a2, ...)
{
  return _[a1 multiplier];
}

id objc_msgSend_multitrackImageForLayerNumber_rounded_slash_circleFill_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multitrackImageForLayerNumber:rounded:slash:circleFill:");
}

id objc_msgSend_multitrackImageForWelcome(void *a1, const char *a2, ...)
{
  return _[a1 multitrackImageForWelcome];
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return _[a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_na_filter_(void *a1, const char *a2, ...)
{
  return [a1 na_filter:];
}

id objc_msgSend_na_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "na_firstObjectPassingTest:");
}

id objc_msgSend_na_map_(void *a1, const char *a2, ...)
{
  return [a1 na_map:];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_namedStateLabel(void *a1, const char *a2, ...)
{
  return _[a1 namedStateLabel];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _[a1 navigationBar];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_needsUpdateForBoundsChange(void *a1, const char *a2, ...)
{
  return _[a1 needsUpdateForBoundsChange];
}

id objc_msgSend_newBackgroundModel(void *a1, const char *a2, ...)
{
  return _[a1 newBackgroundModel];
}

id objc_msgSend_newChangeTrackingBackgroundModel(void *a1, const char *a2, ...)
{
  return _[a1 newChangeTrackingBackgroundModel];
}

id objc_msgSend_newContextWithConcurrencyType_(void *a1, const char *a2, ...)
{
  return [a1 newContextWithConcurrencyType:];
}

id objc_msgSend_newRandomFragmentWithInsertionTimeRangeInComposition_trackIndex_pathExtension_(void *a1, const char *a2, ...)
{
  return [a1 newRandomFragmentWithInsertionTimeRangeInComposition:trackIndex:pathExtension:];
}

id objc_msgSend_newRecorderWithTitleBase_(void *a1, const char *a2, ...)
{
  return [a1 newRecorderWithTitleBase:];
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _[a1 nextObject];
}

id objc_msgSend_nextPreviewStartTime(void *a1, const char *a2, ...)
{
  return _[a1 nextPreviewStartTime];
}

id objc_msgSend_nextRenderBlock(void *a1, const char *a2, ...)
{
  return _[a1 nextRenderBlock];
}

id objc_msgSend_nodeTimeForPlayerTime_(void *a1, const char *a2, ...)
{
  return [a1 nodeTimeForPlayerTime:];
}

id objc_msgSend_notFavoriteImage(void *a1, const char *a2, ...)
{
  return _[a1 notFavoriteImage];
}

id objc_msgSend_notFavoriteImageName(void *a1, const char *a2, ...)
{
  return _[a1 notFavoriteImageName];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_nsImplementation(void *a1, const char *a2, ...)
{
  return _[a1 nsImplementation];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberOfColumns(void *a1, const char *a2, ...)
{
  return _[a1 numberOfColumns];
}

id objc_msgSend_numberOfInactiveSlices(void *a1, const char *a2, ...)
{
  return _[a1 numberOfInactiveSlices];
}

id objc_msgSend_numberOfItems(void *a1, const char *a2, ...)
{
  return _[a1 numberOfItems];
}

id objc_msgSend_numberOfItemsInSection_(void *a1, const char *a2, ...)
{
  return [a1 numberOfItemsInSection:];
}

id objc_msgSend_numberOfRows(void *a1, const char *a2, ...)
{
  return _[a1 numberOfRows];
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return _[a1 numberOfSections];
}

id objc_msgSend_numberOfSlices(void *a1, const char *a2, ...)
{
  return _[a1 numberOfSlices];
}

id objc_msgSend_numberOfTicks(void *a1, const char *a2, ...)
{
  return _[a1 numberOfTicks];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return [a1 numberWithFloat:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInt:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedLongLong:];
}

id objc_msgSend_numberingSystem(void *a1, const char *a2, ...)
{
  return _[a1 numberingSystem];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndex:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 objectEnumerator];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_objectIDNotification(void *a1, const char *a2, ...)
{
  return _[a1 objectIDNotification];
}

id objc_msgSend_observeFinalizingRecordings_(void *a1, const char *a2, ...)
{
  return [a1 observeFinalizingRecordings:];
}

id objc_msgSend_offsetBetweenTicks(void *a1, const char *a2, ...)
{
  return _[a1 offsetBetweenTicks];
}

id objc_msgSend_oldFolderName(void *a1, const char *a2, ...)
{
  return _[a1 oldFolderName];
}

id objc_msgSend_opacity(void *a1, const char *a2, ...)
{
  return _[a1 opacity];
}

id objc_msgSend_openAudioFile_settings_metadata_error_(void *a1, const char *a2, ...)
{
  return [a1 openAudioFile:settings:metadata:error:];
}

id objc_msgSend_openCloseEditCardTest_(void *a1, const char *a2, ...)
{
  return [a1 openCloseEditCardTest:];
}

id objc_msgSend_openForModifyRecordingWithUUID_withSubActivityType_(void *a1, const char *a2, ...)
{
  return [a1 openForModifyRecordingWithUUID:withSubActivityType:];
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 openURL:options:completionHandler:];
}

id objc_msgSend_orPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return [a1 orPredicateWithSubpredicates:];
}

id objc_msgSend_orderedSetWithArray_(void *a1, const char *a2, ...)
{
  return [a1 orderedSetWithArray:];
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return _[a1 orientation];
}

id objc_msgSend_originalDuration(void *a1, const char *a2, ...)
{
  return _[a1 originalDuration];
}

id objc_msgSend_otherVersionsOfItemAtURL_(void *a1, const char *a2, ...)
{
  return [a1 otherVersionsOfItemAtURL:];
}

id objc_msgSend_outButton(void *a1, const char *a2, ...)
{
  return _[a1 outButton];
}

id objc_msgSend_outerRingGap(void *a1, const char *a2, ...)
{
  return _[a1 outerRingGap];
}

id objc_msgSend_outerRingLayer(void *a1, const char *a2, ...)
{
  return _[a1 outerRingLayer];
}

id objc_msgSend_outerRingThickness(void *a1, const char *a2, ...)
{
  return _[a1 outerRingThickness];
}

id objc_msgSend_outputFormat(void *a1, const char *a2, ...)
{
  return _[a1 outputFormat];
}

id objc_msgSend_outputLatency(void *a1, const char *a2, ...)
{
  return _[a1 outputLatency];
}

id objc_msgSend_outputNode(void *a1, const char *a2, ...)
{
  return _[a1 outputNode];
}

id objc_msgSend_overdubContentLabel(void *a1, const char *a2, ...)
{
  return _[a1 overdubContentLabel];
}

id objc_msgSend_overdubbing(void *a1, const char *a2, ...)
{
  return _[a1 overdubbing];
}

id objc_msgSend_overrideUserInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 overrideUserInterfaceStyle];
}

id objc_msgSend_overviewBeginTimeLabel(void *a1, const char *a2, ...)
{
  return _[a1 overviewBeginTimeLabel];
}

id objc_msgSend_overviewEndTimeLabel(void *a1, const char *a2, ...)
{
  return _[a1 overviewEndTimeLabel];
}

id objc_msgSend_overviewKnobWidthMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 overviewKnobWidthMultiplier];
}

id objc_msgSend_overviewPlayheadHeightInset(void *a1, const char *a2, ...)
{
  return _[a1 overviewPlayheadHeightInset];
}

id objc_msgSend_overviewPlayheadWidthMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 overviewPlayheadWidthMultiplier];
}

id objc_msgSend_overviewTrimHandleStyle(void *a1, const char *a2, ...)
{
  return _[a1 overviewTrimHandleStyle];
}

id objc_msgSend_overviewWaveformContainerBottomToWindowSafeAreaBottomConstraint(void *a1, const char *a2, ...)
{
  return _[a1 overviewWaveformContainerBottomToWindowSafeAreaBottomConstraint];
}

id objc_msgSend_overviewWaveformCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 overviewWaveformCornerRadius];
}

id objc_msgSend_overviewWaveformHeight(void *a1, const char *a2, ...)
{
  return _[a1 overviewWaveformHeight];
}

id objc_msgSend_overviewWaveformHorizontalSpacing(void *a1, const char *a2, ...)
{
  return _[a1 overviewWaveformHorizontalSpacing];
}

id objc_msgSend_overviewWaveformMinimumDurationToDisplayWhenRecording(void *a1, const char *a2, ...)
{
  return _[a1 overviewWaveformMinimumDurationToDisplayWhenRecording];
}

id objc_msgSend_overviewWaveformViewController(void *a1, const char *a2, ...)
{
  return _[a1 overviewWaveformViewController];
}

id objc_msgSend_overviewWaveformWaveVerticalPadding(void *a1, const char *a2, ...)
{
  return _[a1 overviewWaveformWaveVerticalPadding];
}

id objc_msgSend_overviewWaveformWaveWidth(void *a1, const char *a2, ...)
{
  return _[a1 overviewWaveformWaveWidth];
}

id objc_msgSend_packageManager(void *a1, const char *a2, ...)
{
  return _[a1 packageManager];
}

id objc_msgSend_packageName(void *a1, const char *a2, ...)
{
  return _[a1 packageName];
}

id objc_msgSend_packageView(void *a1, const char *a2, ...)
{
  return _[a1 packageView];
}

id objc_msgSend_paddedLabelWidthWithLabelIntrinsicWidth_(void *a1, const char *a2, ...)
{
  return [a1 paddedLabelWidthWithLabelIntrinsicWidth:];
}

id objc_msgSend_paddingBetweenButtonsAndDescriptionView(void *a1, const char *a2, ...)
{
  return _[a1 paddingBetweenButtonsAndDescriptionView];
}

id objc_msgSend_panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 panGestureRecognizer];
}

id objc_msgSend_parameterWithName_defaultValue_min_max_internalAddress_graphName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parameterWithName:defaultValue:min:max:internalAddress:graphName:");
}

id objc_msgSend_parameters(void *a1, const char *a2, ...)
{
  return _[a1 parameters];
}

id objc_msgSend_parentView(void *a1, const char *a2, ...)
{
  return _[a1 parentView];
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _[a1 parentViewController];
}

id objc_msgSend_passthroughViewsSpecWithTopLevelView_includeTopLevelView_(void *a1, const char *a2, ...)
{
  return [a1 passthroughViewsSpecWithTopLevelView:includeTopLevelView:];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return [a1 pathForResource:ofType:];
}

id objc_msgSend_pause(void *a1, const char *a2, ...)
{
  return _[a1 pause];
}

id objc_msgSend_pauseAnimations(void *a1, const char *a2, ...)
{
  return _[a1 pauseAnimations];
}

id objc_msgSend_pauseCapturing(void *a1, const char *a2, ...)
{
  return _[a1 pauseCapturing];
}

id objc_msgSend_pauseCommand(void *a1, const char *a2, ...)
{
  return _[a1 pauseCommand];
}

id objc_msgSend_pauseForUUID_(void *a1, const char *a2, ...)
{
  return [a1 pauseForUUID:];
}

id objc_msgSend_pausePlaying_(void *a1, const char *a2, ...)
{
  return [a1 pausePlaying:];
}

id objc_msgSend_pauseRecording(void *a1, const char *a2, ...)
{
  return _[a1 pauseRecording];
}

id objc_msgSend_pauseShapeLayer(void *a1, const char *a2, ...)
{
  return _[a1 pauseShapeLayer];
}

id objc_msgSend_pauseStrokeCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 pauseStrokeCornerRadius];
}

id objc_msgSend_payloadType(void *a1, const char *a2, ...)
{
  return _[a1 payloadType];
}

id objc_msgSend_performAction_atPosition_forCellWithUUID_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAction:atPosition:forCellWithUUID:source:");
}

id objc_msgSend_performAction_atPosition_forUUID_sourceController_source_(void *a1, const char *a2, ...)
{
  return [a1 performAction:atPosition:forUUID:sourceController:source:];
}

id objc_msgSend_performAction_atPosition_forUUID_sourceController_source_trackIndex_(void *a1, const char *a2, ...)
{
  return [a1 performAction:atPosition:forUUID:sourceController:source:trackIndex:];
}

id objc_msgSend_performAction_atPosition_source_(void *a1, const char *a2, ...)
{
  return [a1 performAction:atPosition:source:];
}

id objc_msgSend_performActionForMagicTap(void *a1, const char *a2, ...)
{
  return _[a1 performActionForMagicTap];
}

id objc_msgSend_performBatchUpdates_(void *a1, const char *a2, ...)
{
  return [a1 performBatchUpdates:];
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return [a1 performBlock:];
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return [a1 performBlockAndWait:];
}

id objc_msgSend_performClearAllRecentlyDeleted(void *a1, const char *a2, ...)
{
  return _[a1 performClearAllRecentlyDeleted];
}

id objc_msgSend_performControlsAction_position_source_(void *a1, const char *a2, ...)
{
  return [a1 performControlsAction:position:source:];
}

id objc_msgSend_performCornobbleScrollTestForCollectionView_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 performCornobbleScrollTestForCollectionView:withOptions:];
}

id objc_msgSend_performDeferredInitialization(void *a1, const char *a2, ...)
{
  return _[a1 performDeferredInitialization];
}

id objc_msgSend_performDeferredInitializationJustOnce(void *a1, const char *a2, ...)
{
  return _[a1 performDeferredInitializationJustOnce];
}

id objc_msgSend_performDelayedSetup(void *a1, const char *a2, ...)
{
  return _[a1 performDelayedSetup];
}

id objc_msgSend_performDropWithSession_folder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performDropWithSession:folder:");
}

id objc_msgSend_performFetch_(void *a1, const char *a2, ...)
{
  return [a1 performFetch:];
}

id objc_msgSend_performLegacyScrollTestForCollectionView_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 performLegacyScrollTestForCollectionView:withOptions:];
}

id objc_msgSend_performRenameWithNewTitle_(void *a1, const char *a2, ...)
{
  return [a1 performRenameWithNewTitle:];
}

id objc_msgSend_performRenameWithNewTitle_forCellWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRenameWithNewTitle:forCellWithUUID:");
}

id objc_msgSend_performRenameWithNewTitle_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 performRenameWithNewTitle:forUUID:];
}

id objc_msgSend_performScrollTestForCollectionView_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 performScrollTestForCollectionView:withOptions:];
}

id objc_msgSend_performTrimByDeletingSelectedRangeForRecordingWithUUID_source_(void *a1, const char *a2, ...)
{
  return [a1 performTrimByDeletingSelectedRangeForRecordingWithUUID:source:];
}

id objc_msgSend_performTrimByKeepingSelectedRangeForRecordingWithUUID_source_(void *a1, const char *a2, ...)
{
  return [a1 performTrimByKeepingSelectedRangeForRecordingWithUUID:source:];
}

id objc_msgSend_performWithSavingDisabled_(void *a1, const char *a2, ...)
{
  return [a1 performWithSavingDisabled:];
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return [a1 performWithoutAnimation:];
}

id objc_msgSend_persistentContainer(void *a1, const char *a2, ...)
{
  return _[a1 persistentContainer];
}

id objc_msgSend_persistentStoreCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 persistentStoreCoordinator];
}

id objc_msgSend_persistentStores(void *a1, const char *a2, ...)
{
  return _[a1 persistentStores];
}

id objc_msgSend_pinchGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 pinchGestureRecognizer];
}

id objc_msgSend_pinsSearchBarInLibrary(void *a1, const char *a2, ...)
{
  return _[a1 pinsSearchBarInLibrary];
}

id objc_msgSend_placemark(void *a1, const char *a2, ...)
{
  return _[a1 placemark];
}

id objc_msgSend_plainButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 plainButtonConfiguration];
}

id objc_msgSend_platterCheckmarkHeightMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 platterCheckmarkHeightMultiplier];
}

id objc_msgSend_platterCompactLeadingViewHeightMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 platterCompactLeadingViewHeightMultiplier];
}

id objc_msgSend_platterCompactViewSliceCount(void *a1, const char *a2, ...)
{
  return _[a1 platterCompactViewSliceCount];
}

id objc_msgSend_platterCustomLeadingViewHeightMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 platterCustomLeadingViewHeightMultiplier];
}

id objc_msgSend_platterCustomLeadingViewLeadingPadding(void *a1, const char *a2, ...)
{
  return _[a1 platterCustomLeadingViewLeadingPadding];
}

id objc_msgSend_platterCustomLeadingViewToTrailingViewMinimumPadding(void *a1, const char *a2, ...)
{
  return _[a1 platterCustomLeadingViewToTrailingViewMinimumPadding];
}

id objc_msgSend_platterDefaultTimeLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 platterDefaultTimeLabelColor];
}

id objc_msgSend_platterEmptyViewToCheckmarkTransitionDuration(void *a1, const char *a2, ...)
{
  return _[a1 platterEmptyViewToCheckmarkTransitionDuration];
}

id objc_msgSend_platterKeyColor(void *a1, const char *a2, ...)
{
  return _[a1 platterKeyColor];
}

id objc_msgSend_platterLayoutModeForSystemApertureLayoutMode_(void *a1, const char *a2, ...)
{
  return [a1 platterLayoutModeForSystemApertureLayoutMode:];
}

id objc_msgSend_platterMinimalViewSliceCount(void *a1, const char *a2, ...)
{
  return _[a1 platterMinimalViewSliceCount];
}

id objc_msgSend_platterMinimalViewWidth(void *a1, const char *a2, ...)
{
  return _[a1 platterMinimalViewWidth];
}

id objc_msgSend_platterMinimalWaveformViewHeight(void *a1, const char *a2, ...)
{
  return _[a1 platterMinimalWaveformViewHeight];
}

id objc_msgSend_platterState(void *a1, const char *a2, ...)
{
  return _[a1 platterState];
}

id objc_msgSend_platterStatusMessageStateTimeLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 platterStatusMessageStateTimeLabelColor];
}

id objc_msgSend_platterStopButtonHeight(void *a1, const char *a2, ...)
{
  return _[a1 platterStopButtonHeight];
}

id objc_msgSend_platterStopButtonStateTransitionDuration(void *a1, const char *a2, ...)
{
  return _[a1 platterStopButtonStateTransitionDuration];
}

id objc_msgSend_platterTimeLabelCompactModeFontForTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 platterTimeLabelCompactModeFontForTraitCollection:];
}

id objc_msgSend_platterTimeLabelCustomModeFontForTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 platterTimeLabelCustomModeFontForTraitCollection:];
}

id objc_msgSend_platterViewController(void *a1, const char *a2, ...)
{
  return _[a1 platterViewController];
}

id objc_msgSend_platterViewControllerForPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "platterViewControllerForPresentationStyle:");
}

id objc_msgSend_platterWaveformActiveSliceColor(void *a1, const char *a2, ...)
{
  return _[a1 platterWaveformActiveSliceColor];
}

id objc_msgSend_platterWaveformInactiveSliceColor(void *a1, const char *a2, ...)
{
  return _[a1 platterWaveformInactiveSliceColor];
}

id objc_msgSend_platterWaveformMinimumRoundedSliceWidthPerSide(void *a1, const char *a2, ...)
{
  return _[a1 platterWaveformMinimumRoundedSliceWidthPerSide];
}

id objc_msgSend_platterWaveformPercentageOfRoundedSlices(void *a1, const char *a2, ...)
{
  return _[a1 platterWaveformPercentageOfRoundedSlices];
}

id objc_msgSend_platterWaveformSlicePadding(void *a1, const char *a2, ...)
{
  return _[a1 platterWaveformSlicePadding];
}

id objc_msgSend_platterWaveformSliceScaleFactorForExpandedMode(void *a1, const char *a2, ...)
{
  return _[a1 platterWaveformSliceScaleFactorForExpandedMode];
}

id objc_msgSend_platterWaveformSliceWidth(void *a1, const char *a2, ...)
{
  return _[a1 platterWaveformSliceWidth];
}

id objc_msgSend_platterWaveformStatusMessageSliceColor(void *a1, const char *a2, ...)
{
  return _[a1 platterWaveformStatusMessageSliceColor];
}

id objc_msgSend_platterWaveformWidthCompact(void *a1, const char *a2, ...)
{
  return _[a1 platterWaveformWidthCompact];
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return _[a1 play];
}

id objc_msgSend_playBarOnly(void *a1, const char *a2, ...)
{
  return _[a1 playBarOnly];
}

id objc_msgSend_playCommand(void *a1, const char *a2, ...)
{
  return _[a1 playCommand];
}

id objc_msgSend_playControlState(void *a1, const char *a2, ...)
{
  return _[a1 playControlState];
}

id objc_msgSend_playPauseBusyContainerView(void *a1, const char *a2, ...)
{
  return _[a1 playPauseBusyContainerView];
}

id objc_msgSend_playPauseButton(void *a1, const char *a2, ...)
{
  return _[a1 playPauseButton];
}

id objc_msgSend_playRecording(void *a1, const char *a2, ...)
{
  return _[a1 playRecording];
}

id objc_msgSend_playRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 playRecordingWithUUID:];
}

id objc_msgSend_playStartRecordingSoundEffect_(void *a1, const char *a2, ...)
{
  return [a1 playStartRecordingSoundEffect:];
}

id objc_msgSend_playWidthMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 playWidthMultiplier];
}

id objc_msgSend_playableAsset_(void *a1, const char *a2, ...)
{
  return [a1 playableAsset:];
}

id objc_msgSend_playableCountForFolder_(void *a1, const char *a2, ...)
{
  return [a1 playableCountForFolder:];
}

id objc_msgSend_playableRange(void *a1, const char *a2, ...)
{
  return _[a1 playableRange];
}

id objc_msgSend_playableRecordingsFetchRequestWithSubPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playableRecordingsFetchRequestWithSubPredicate:");
}

id objc_msgSend_playableRecordingsInFolder_(void *a1, const char *a2, ...)
{
  return [a1 playableRecordingsInFolder:];
}

id objc_msgSend_playbackCardHasInsets(void *a1, const char *a2, ...)
{
  return _[a1 playbackCardHasInsets];
}

id objc_msgSend_playbackCardPrimaryLabelFontColor(void *a1, const char *a2, ...)
{
  return _[a1 playbackCardPrimaryLabelFontColor];
}

id objc_msgSend_playbackCardSecondaryLabelFontColor(void *a1, const char *a2, ...)
{
  return _[a1 playbackCardSecondaryLabelFontColor];
}

id objc_msgSend_playbackCardTimeLabelFontColor(void *a1, const char *a2, ...)
{
  return _[a1 playbackCardTimeLabelFontColor];
}

id objc_msgSend_playbackContainerViewController(void *a1, const char *a2, ...)
{
  return _[a1 playbackContainerViewController];
}

id objc_msgSend_playbackContentUnavailableViewBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 playbackContentUnavailableViewBackgroundColor];
}

id objc_msgSend_playbackForUUID_atPosition_(void *a1, const char *a2, ...)
{
  return [a1 playbackForUUID:atPosition:];
}

id objc_msgSend_playbackMostRecentRecordingFromIntent(void *a1, const char *a2, ...)
{
  return _[a1 playbackMostRecentRecordingFromIntent];
}

id objc_msgSend_playbackPositionBarColor(void *a1, const char *a2, ...)
{
  return _[a1 playbackPositionBarColor];
}

id objc_msgSend_playbackRate(void *a1, const char *a2, ...)
{
  return _[a1 playbackRate];
}

id objc_msgSend_playbackSettings(void *a1, const char *a2, ...)
{
  return _[a1 playbackSettings];
}

id objc_msgSend_playbackSettingsButton(void *a1, const char *a2, ...)
{
  return _[a1 playbackSettingsButton];
}

id objc_msgSend_playbackSettingsButtonExtraActivePoints(void *a1, const char *a2, ...)
{
  return _[a1 playbackSettingsButtonExtraActivePoints];
}

id objc_msgSend_playbackSettingsButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 playbackSettingsButtonItem];
}

id objc_msgSend_playbackSettingsCollectionViewCellMinHeight(void *a1, const char *a2, ...)
{
  return _[a1 playbackSettingsCollectionViewCellMinHeight];
}

id objc_msgSend_playbackSettingsCollectionViewContentInsetBottom(void *a1, const char *a2, ...)
{
  return _[a1 playbackSettingsCollectionViewContentInsetBottom];
}

id objc_msgSend_playbackSettingsCollectionViewController(void *a1, const char *a2, ...)
{
  return _[a1 playbackSettingsCollectionViewController];
}

id objc_msgSend_playbackSettingsForUUID_(void *a1, const char *a2, ...)
{
  return [a1 playbackSettingsForUUID:];
}

id objc_msgSend_playbackSettingsImage(void *a1, const char *a2, ...)
{
  return _[a1 playbackSettingsImage];
}

id objc_msgSend_playbackSettingsPopoverBottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 playbackSettingsPopoverBottomPadding];
}

id objc_msgSend_playbackSettingsViewController_contentSizeChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playbackSettingsViewController:contentSizeChanged:");
}

id objc_msgSend_playbackSpeed(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeed];
}

id objc_msgSend_playbackSpeedRegularTrackColor(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeedRegularTrackColor];
}

id objc_msgSend_playbackSpeedSliderHeight(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeedSliderHeight];
}

id objc_msgSend_playbackSpeedSliderImageColor(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeedSliderImageColor];
}

id objc_msgSend_playbackSpeedSliderMaximumValueImage(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeedSliderMaximumValueImage];
}

id objc_msgSend_playbackSpeedSliderMinimumValueImage(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeedSliderMinimumValueImage];
}

id objc_msgSend_playbackSpeedSliderTickCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeedSliderTickCornerRadius];
}

id objc_msgSend_playbackSpeedSliderTickSize(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeedSliderTickSize];
}

id objc_msgSend_playbackSpeedTintedTrackColor(void *a1, const char *a2, ...)
{
  return _[a1 playbackSpeedTintedTrackColor];
}

id objc_msgSend_playbackToken(void *a1, const char *a2, ...)
{
  return _[a1 playbackToken];
}

id objc_msgSend_playbackViewBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewBackgroundColor];
}

id objc_msgSend_playbackViewConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewConfiguration];
}

id objc_msgSend_playbackViewControlSectionHeight(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewControlSectionHeight];
}

id objc_msgSend_playbackViewController(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewController];
}

id objc_msgSend_playbackViewEdgeInsets(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewEdgeInsets];
}

id objc_msgSend_playbackViewShuttleBarWidth(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewShuttleBarWidth];
}

id objc_msgSend_playbackViewTimeLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewTimeLabelFont];
}

id objc_msgSend_playbackViewTimeSectionBottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewTimeSectionBottomPadding];
}

id objc_msgSend_playbackViewTimeSectionHeight(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewTimeSectionHeight];
}

id objc_msgSend_playbackViewTimeSectionNeedsHeightPadding(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewTimeSectionNeedsHeightPadding];
}

id objc_msgSend_playbackViewTitleTextInsets(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewTitleTextInsets];
}

id objc_msgSend_playbackViewToolbarImageSymbolConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewToolbarImageSymbolConfiguration];
}

id objc_msgSend_playbackViewTopPadding(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewTopPadding];
}

id objc_msgSend_playbackViewVerticalSpacingAboveOverviewWaveform(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewVerticalSpacingAboveOverviewWaveform];
}

id objc_msgSend_playbackViewVerticalSpacingBelowOverviewWaveform(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewVerticalSpacingBelowOverviewWaveform];
}

id objc_msgSend_playbackViewWaveformOverviewSidePadding(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewWaveformOverviewSidePadding];
}

id objc_msgSend_playbackViewWidthToCollapseToolbarButtons(void *a1, const char *a2, ...)
{
  return _[a1 playbackViewWidthToCollapseToolbarButtons];
}

id objc_msgSend_playerForRecordingID_(void *a1, const char *a2, ...)
{
  return [a1 playerForRecordingID:];
}

id objc_msgSend_playerItem(void *a1, const char *a2, ...)
{
  return _[a1 playerItem];
}

id objc_msgSend_playerTime(void *a1, const char *a2, ...)
{
  return _[a1 playerTime];
}

id objc_msgSend_playheadWidthMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 playheadWidthMultiplier];
}

id objc_msgSend_playing(void *a1, const char *a2, ...)
{
  return _[a1 playing];
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _[a1 pointSize];
}

id objc_msgSend_pointerValue(void *a1, const char *a2, ...)
{
  return _[a1 pointerValue];
}

id objc_msgSend_pointsPerSecond(void *a1, const char *a2, ...)
{
  return _[a1 pointsPerSecond];
}

id objc_msgSend_pointsPerSecondWithVisibleTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 pointsPerSecondWithVisibleTimeRange:];
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_portType(void *a1, const char *a2, ...)
{
  return _[a1 portType];
}

id objc_msgSend_position(void *a1, const char *a2, ...)
{
  return _[a1 position];
}

id objc_msgSend_positionReadoutHeight(void *a1, const char *a2, ...)
{
  return _[a1 positionReadoutHeight];
}

id objc_msgSend_positionReadoutLabelYOffset(void *a1, const char *a2, ...)
{
  return _[a1 positionReadoutLabelYOffset];
}

id objc_msgSend_positionTime(void *a1, const char *a2, ...)
{
  return _[a1 positionTime];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:];
}

id objc_msgSend_ppt_didEndCyclerRecording(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ppt_didEndCyclerRecording");
}

id objc_msgSend_ppt_didShowVoiceMemoEditor(void *a1, const char *a2, ...)
{
  return [a1 ppt_didShowVoiceMemoEditor];
}

id objc_msgSend_ppt_didShowVoiceMemosList(void *a1, const char *a2, ...)
{
  return [a1 ppt_didShowVoiceMemosList];
}

id objc_msgSend_ppt_didStartCyclerRecording(void *a1, const char *a2, ...)
{
  return [a1 ppt_didStartCyclerRecording];
}

id objc_msgSend_ppt_didStartRecording(void *a1, const char *a2, ...)
{
  return [a1 ppt_didStartRecording];
}

id objc_msgSend_ppt_didStartVoiceMemoPreviewPlayback(void *a1, const char *a2, ...)
{
  return [a1 ppt_didStartVoiceMemoPreviewPlayback];
}

id objc_msgSend_preEditingName(void *a1, const char *a2, ...)
{
  return _[a1 preEditingName];
}

id objc_msgSend_predicate(void *a1, const char *a2, ...)
{
  return _[a1 predicate];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithFormat:];
}

id objc_msgSend_predicateWithValue_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithValue:];
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_preferredDataSourceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 preferredDataSourceOrientation];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontDescriptorWithTextStyle:];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontDescriptorWithTextStyle:];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredFontForTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredFrameRateRange(void *a1, const char *a2, ...)
{
  return _[a1 preferredFrameRateRange];
}

id objc_msgSend_preferredHeight(void *a1, const char *a2, ...)
{
  return _[a1 preferredHeight];
}

id objc_msgSend_preferredInputOrientationFor_(void *a1, const char *a2, ...)
{
  return [a1 preferredInputOrientationFor:];
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguages];
}

id objc_msgSend_preferredName(void *a1, const char *a2, ...)
{
  return _[a1 preferredName];
}

id objc_msgSend_preferredSplitBehavior(void *a1, const char *a2, ...)
{
  return _[a1 preferredSplitBehavior];
}

id objc_msgSend_prepare(void *a1, const char *a2, ...)
{
  return _[a1 prepare];
}

id objc_msgSend_prepareForAdditionOfNewRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 prepareForAdditionOfNewRecordingWithUUID:];
}

id objc_msgSend_prepareForChangingContent(void *a1, const char *a2, ...)
{
  return _[a1 prepareForChangingContent];
}

id objc_msgSend_prepareForDismiss(void *a1, const char *a2, ...)
{
  return _[a1 prepareForDismiss];
}

id objc_msgSend_prepareForPlaybackForUUID_(void *a1, const char *a2, ...)
{
  return [a1 prepareForPlaybackForUUID];
}

id objc_msgSend_prepareForPlaybackForUUID_force_(void *a1, const char *a2, ...)
{
  return [a1 prepareForPlaybackForUUID:force:];
}

id objc_msgSend_prepareForPresent_(void *a1, const char *a2, ...)
{
  return [a1 prepareForPresent:];
}

id objc_msgSend_prepareItem_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareItem:withCompletionHandler:");
}

id objc_msgSend_prepareService(void *a1, const char *a2, ...)
{
  return _[a1 prepareService];
}

id objc_msgSend_prepareToCaptureToCompositionAVURL_error_(void *a1, const char *a2, ...)
{
  return [a1 prepareToCaptureToCompositionAVURL:error:];
}

id objc_msgSend_prepareToExportCompositionAVURL_accessRequestHandler_(void *a1, const char *a2, ...)
{
  return [a1 prepareToExportCompositionAVURL:accessRequestHandler:];
}

id objc_msgSend_prepareToExportCompositionAVURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareToExportCompositionAVURL:error:");
}

id objc_msgSend_prepareToPreviewCompositionAVURL_accessRequestHandler_(void *a1, const char *a2, ...)
{
  return [a1 prepareToPreviewCompositionAVURL:accessRequestHandler:];
}

id objc_msgSend_prepareToProcessWithFormat_audioTime_punchInTime_(void *a1, const char *a2, ...)
{
  return [a1 prepareToProcessWithFormat:audioTime:punchInTime:];
}

id objc_msgSend_prepareToShareCompositions_ignoringInteraction_source_isShareButton_shouldContinuePreparingBlock_preparedHandler_completionWithItemsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareToShareCompositions:ignoringInteraction:source:isShareButton:shouldContinuePreparingBlock:preparedHandler:completionWithItemsHandler:");
}

id objc_msgSend_prepareToTrimCompositionAVURL_error_(void *a1, const char *a2, ...)
{
  return [a1 prepareToTrimCompositionAVURL:error:];
}

id objc_msgSend_prepareWithFormat_maxFramesPerRender_(void *a1, const char *a2, ...)
{
  return [a1 prepareWithFormat:maxFramesPerRender:];
}

id objc_msgSend_prepareWithFrameCount_(void *a1, const char *a2, ...)
{
  return [a1 prepareWithFrameCount:];
}

id objc_msgSend_preparing(void *a1, const char *a2, ...)
{
  return _[a1 preparing];
}

id objc_msgSend_presentInView_(void *a1, const char *a2, ...)
{
  return [a1 presentInView:];
}

id objc_msgSend_presentInViewController_source_compositions_ignoringInteraction_shouldContinuePreparingBlock_preparedToPresentBlock_isShareButton_completionWithItemsHandler_(void *a1, const char *a2, ...)
{
  return [a1 presentInViewController:source:compositions:ignoringInteraction:shouldContinuePreparingBlock:preparedToPresentBlock:isShareButton:completionWithItemsHandler:];
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentViewController_sourceController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:sourceController:animated:completion:];
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _[a1 presentationController];
}

id objc_msgSend_presentationInterval(void *a1, const char *a2, ...)
{
  return _[a1 presentationInterval];
}

id objc_msgSend_presentationLayer(void *a1, const char *a2, ...)
{
  return _[a1 presentationLayer];
}

id objc_msgSend_presentationStyle(void *a1, const char *a2, ...)
{
  return _[a1 presentationStyle];
}

id objc_msgSend_presentationTime(void *a1, const char *a2, ...)
{
  return _[a1 presentationTime];
}

id objc_msgSend_presentedCardViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedCardViewController];
}

id objc_msgSend_presentedConfirmationController(void *a1, const char *a2, ...)
{
  return _[a1 presentedConfirmationController];
}

id objc_msgSend_presentedControl(void *a1, const char *a2, ...)
{
  return _[a1 presentedControl];
}

id objc_msgSend_presentedController(void *a1, const char *a2, ...)
{
  return _[a1 presentedController];
}

id objc_msgSend_presentedControlsOptions(void *a1, const char *a2, ...)
{
  return _[a1 presentedControlsOptions];
}

id objc_msgSend_presentedPlaybackSettingsViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedPlaybackSettingsViewController];
}

id objc_msgSend_presentedSelectFolderViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedSelectFolderViewController];
}

id objc_msgSend_presentedView(void *a1, const char *a2, ...)
{
  return _[a1 presentedView];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presentedViewsMinimumWidth(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewsMinimumWidth];
}

id objc_msgSend_presentingDelegate(void *a1, const char *a2, ...)
{
  return _[a1 presentingDelegate];
}

id objc_msgSend_presentingPlaybackSettingsViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingPlaybackSettingsViewController];
}

id objc_msgSend_presentsRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 presentsRecordingWithUUID:];
}

id objc_msgSend_presentsRecoverConfirmationAsAlert(void *a1, const char *a2, ...)
{
  return _[a1 presentsRecoverConfirmationAsAlert];
}

id objc_msgSend_presentsTitleAndAdditionalEditingControlsInPlaybackCard(void *a1, const char *a2, ...)
{
  return _[a1 presentsTitleAndAdditionalEditingControlsInPlaybackCard];
}

id objc_msgSend_presentsTitleAndAdditionalEditingControlsInRecordingCard(void *a1, const char *a2, ...)
{
  return _[a1 presentsTitleAndAdditionalEditingControlsInRecordingCard];
}

id objc_msgSend_pressed(void *a1, const char *a2, ...)
{
  return _[a1 pressed];
}

id objc_msgSend_primaryColumnWidth(void *a1, const char *a2, ...)
{
  return _[a1 primaryColumnWidth];
}

id objc_msgSend_processAudioBuffer_(void *a1, const char *a2, ...)
{
  return [a1 processAudioBuffer:];
}

id objc_msgSend_processingFormat(void *a1, const char *a2, ...)
{
  return _[a1 processingFormat];
}

id objc_msgSend_processor(void *a1, const char *a2, ...)
{
  return _[a1 processor];
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _[a1 progress];
}

id objc_msgSend_progressColor(void *a1, const char *a2, ...)
{
  return _[a1 progressColor];
}

id objc_msgSend_progressIndicator(void *a1, const char *a2, ...)
{
  return _[a1 progressIndicator];
}

id objc_msgSend_progressIndicatorColor(void *a1, const char *a2, ...)
{
  return _[a1 progressIndicatorColor];
}

id objc_msgSend_progressLayer(void *a1, const char *a2, ...)
{
  return _[a1 progressLayer];
}

id objc_msgSend_progressOverlay(void *a1, const char *a2, ...)
{
  return _[a1 progressOverlay];
}

id objc_msgSend_progressTextFontSize(void *a1, const char *a2, ...)
{
  return _[a1 progressTextFontSize];
}

id objc_msgSend_progressTextYSpacing(void *a1, const char *a2, ...)
{
  return _[a1 progressTextYSpacing];
}

id objc_msgSend_progressViewBackgroundColorEditingCard(void *a1, const char *a2, ...)
{
  return _[a1 progressViewBackgroundColorEditingCard];
}

id objc_msgSend_progressViewDisplayDismissTime(void *a1, const char *a2, ...)
{
  return _[a1 progressViewDisplayDismissTime];
}

id objc_msgSend_promptForRatingIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 promptForRatingIfNeeded];
}

id objc_msgSend_propertiesToFetch(void *a1, const char *a2, ...)
{
  return _[a1 propertiesToFetch];
}

id objc_msgSend_propertyStrip(void *a1, const char *a2, ...)
{
  return _[a1 propertyStrip];
}

id objc_msgSend_punchInTime(void *a1, const char *a2, ...)
{
  return _[a1 punchInTime];
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushViewController:animated:];
}

id objc_msgSend_quaternarySystemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 quaternarySystemFillColor];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return [a1 raise:format:];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfString:];
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfString:options:];
}

id objc_msgSend_rasterizeTimeRange_imageSize_afterScreenUpdates_(void *a1, const char *a2, ...)
{
  return [a1 rasterizeTimeRange:imageSize:afterScreenUpdates:];
}

id objc_msgSend_rate(void *a1, const char *a2, ...)
{
  return _[a1 rate];
}

id objc_msgSend_rc_OKAlertControllerWithTitle_message_handler_(void *a1, const char *a2, ...)
{
  return [a1 rc_OKAlertControllerWithTitle:message:handler:];
}

id objc_msgSend_rc_addChildViewWithViewController_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rc_addChildViewWithViewController:toView:");
}

id objc_msgSend_rc_adjustedBySamples_(void *a1, const char *a2, ...)
{
  return [a1 rc_adjustedBySamples:];
}

id objc_msgSend_rc_adjustedBySeconds_(void *a1, const char *a2, ...)
{
  return [a1 rc_adjustedBySeconds:];
}

id objc_msgSend_rc_applicationDidEnterBackground(void *a1, const char *a2, ...)
{
  return [a1 rc_applicationDidEnterBackground];
}

id objc_msgSend_rc_applicationWillEnterForeground(void *a1, const char *a2, ...)
{
  return [a1 rc_applicationWillEnterForeground];
}

id objc_msgSend_rc_audioQuality(void *a1, const char *a2, ...)
{
  return [a1 rc_audioQuality];
}

id objc_msgSend_rc_canAnimate(void *a1, const char *a2, ...)
{
  return [a1 rc_canAnimate];
}

id objc_msgSend_rc_cleanUpTemporaryDirectory(void *a1, const char *a2, ...)
{
  return [a1 rc_cleanUpTemporaryDirectory];
}

id objc_msgSend_rc_composedAVURL(void *a1, const char *a2, ...)
{
  return [a1 rc_composedAVURL];
}

id objc_msgSend_rc_configurePopoverControllerWithSource_(void *a1, const char *a2, ...)
{
  return [a1 rc_configurePopoverControllerWithSource:];
}

id objc_msgSend_rc_configureSession_error_(void *a1, const char *a2, ...)
{
  return [a1 rc_configureSession:error:];
}

id objc_msgSend_rc_copyFromTimeStamp(void *a1, const char *a2, ...)
{
  return [a1 rc_copyFromTimeStamp];
}

id objc_msgSend_rc_deletionIsImmediate(void *a1, const char *a2, ...)
{
  return [a1 rc_deletionIsImmediate];
}

id objc_msgSend_rc_deletionIsNever(void *a1, const char *a2, ...)
{
  return [a1 rc_deletionIsNever];
}

id objc_msgSend_rc_durationInSeconds(void *a1, const char *a2, ...)
{
  return [a1 rc_durationInSeconds];
}

id objc_msgSend_rc_ensureIsInterfaceOrientationMask_preferredOrientation_doneEnsuringBlock_(void *a1, const char *a2, ...)
{
  return [a1 rc_ensureIsInterfaceOrientationMask:preferredOrientation:doneEnsuringBlock:];
}

id objc_msgSend_rc_hostTimeInSeconds(void *a1, const char *a2, ...)
{
  return [a1 rc_hostTimeInSeconds];
}

id objc_msgSend_rc_isDescendantOfViewController_(void *a1, const char *a2, ...)
{
  return [a1 rc_isDescendantOfViewController:];
}

id objc_msgSend_rc_navigationItemForPresentingNavigationItem_forViewController_(void *a1, const char *a2, ...)
{
  return [a1 rc_navigationItemForPresentingNavigationItem:forViewController:];
}

id objc_msgSend_rc_preciseTimingAssetWithURL_(void *a1, const char *a2, ...)
{
  return [a1 rc_preciseTimingAssetWithURL:];
}

id objc_msgSend_rc_recentlyDeletedWindow(void *a1, const char *a2, ...)
{
  return [a1 rc_recentlyDeletedWindow];
}

id objc_msgSend_rc_recordingMetadata(void *a1, const char *a2, ...)
{
  return [a1 rc_recordingMetadata];
}

id objc_msgSend_rc_removeConstraintsNamed_(void *a1, const char *a2, ...)
{
  return [a1 rc_removeConstraintsNamed:];
}

id objc_msgSend_rc_runUntilNextDisplayLinkEventWithTimeout_(void *a1, const char *a2, ...)
{
  return [a1 rc_runUntilNextDisplayLinkEventWithTimeout:];
}

id objc_msgSend_rc_screenUpdatesDisabled(void *a1, const char *a2, ...)
{
  return [a1 rc_screenUpdatesDisabled];
}

id objc_msgSend_rc_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 rc_setEnabled:];
}

id objc_msgSend_rc_shouldAutoDisableUpdatesWhenInBackground(void *a1, const char *a2, ...)
{
  return [a1 rc_shouldAutoDisableUpdatesWhenInBackground];
}

id objc_msgSend_rc_showAllViewBoundsRecursively_(void *a1, const char *a2, ...)
{
  return [a1 rc_showAllViewBoundsRecursively:];
}

id objc_msgSend_rc_showInMainWindow(void *a1, const char *a2, ...)
{
  return [a1 rc_showInMainWindow];
}

id objc_msgSend_rc_supportedFileTypesRepresented(void *a1, const char *a2, ...)
{
  return [a1 rc_supportedFileTypesRepresented];
}

id objc_msgSend_rc_transcriptionDataForURL_(void *a1, const char *a2, ...)
{
  return [a1 rc_transcriptionDataForURL:];
}

id objc_msgSend_rc_uniqueFileSystemURLWithPreferredURL_(void *a1, const char *a2, ...)
{
  return [a1 rc_uniqueFileSystemURLWithPreferredURL:];
}

id objc_msgSend_rc_updateFile_withTranscriptionData_error_(void *a1, const char *a2, ...)
{
  return [a1 rc_updateFile:withTranscriptionData:error:];
}

id objc_msgSend_rc_useLocationBasedNaming(void *a1, const char *a2, ...)
{
  return [a1 rc_useLocationBasedNaming];
}

id objc_msgSend_rc_useStereoRecording(void *a1, const char *a2, ...)
{
  return [a1 rc_useStereoRecording];
}

id objc_msgSend_readFromInternalBuffer_frameCount_offset_(void *a1, const char *a2, ...)
{
  return [a1 readFromInternalBuffer:frameCount:offset:];
}

id objc_msgSend_readingAudioData(void *a1, const char *a2, ...)
{
  return _[a1 readingAudioData];
}

id objc_msgSend_readyForPlayback(void *a1, const char *a2, ...)
{
  return _[a1 readyForPlayback];
}

id objc_msgSend_reasonToShow(void *a1, const char *a2, ...)
{
  return _[a1 reasonToShow];
}

id objc_msgSend_recentlyDeleted(void *a1, const char *a2, ...)
{
  return _[a1 recentlyDeleted];
}

id objc_msgSend_recentlyDeletedCollectionViewController(void *a1, const char *a2, ...)
{
  return _[a1 recentlyDeletedCollectionViewController];
}

id objc_msgSend_recentlyDeletedNonDefaultButtonTextColor(void *a1, const char *a2, ...)
{
  return _[a1 recentlyDeletedNonDefaultButtonTextColor];
}

id objc_msgSend_recentlyDeletedRecordingsFolder(void *a1, const char *a2, ...)
{
  return _[a1 recentlyDeletedRecordingsFolder];
}

id objc_msgSend_reconcileApplicationState(void *a1, const char *a2, ...)
{
  return _[a1 reconcileApplicationState];
}

id objc_msgSend_reconfigureItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 reconfigureItemsWithIdentifiers:];
}

id objc_msgSend_recordButton(void *a1, const char *a2, ...)
{
  return _[a1 recordButton];
}

id objc_msgSend_recordButtonCenterXToLeadingConstraint(void *a1, const char *a2, ...)
{
  return _[a1 recordButtonCenterXToLeadingConstraint];
}

id objc_msgSend_recordButtonCenterXToViewCenterXConstraint(void *a1, const char *a2, ...)
{
  return _[a1 recordButtonCenterXToViewCenterXConstraint];
}

id objc_msgSend_recordButtonCenterYConstraint(void *a1, const char *a2, ...)
{
  return _[a1 recordButtonCenterYConstraint];
}

id objc_msgSend_recordButtonFactory(void *a1, const char *a2, ...)
{
  return _[a1 recordButtonFactory];
}

id objc_msgSend_recordButtonRepository(void *a1, const char *a2, ...)
{
  return _[a1 recordButtonRepository];
}

id objc_msgSend_recordNewVoiceMemoFromIntent(void *a1, const char *a2, ...)
{
  return _[a1 recordNewVoiceMemoFromIntent];
}

id objc_msgSend_recordPositionBarColor(void *a1, const char *a2, ...)
{
  return _[a1 recordPositionBarColor];
}

id objc_msgSend_recorderAppDelegate(void *a1, const char *a2, ...)
{
  return _[a1 recorderAppDelegate];
}

id objc_msgSend_recorderForRecordingID_(void *a1, const char *a2, ...)
{
  return [a1 recorderForRecordingID:];
}

id objc_msgSend_recording(void *a1, const char *a2, ...)
{
  return _[a1 recording];
}

id objc_msgSend_recordingCardBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingCardBackgroundColor];
}

id objc_msgSend_recordingCardBottomAccessoryBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingCardBottomAccessoryBackgroundColor];
}

id objc_msgSend_recordingCardDefaultBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingCardDefaultBackgroundColor];
}

id objc_msgSend_recordingCellStackViewVerticalLayoutMargin(void *a1, const char *a2, ...)
{
  return _[a1 recordingCellStackViewVerticalLayoutMargin];
}

id objc_msgSend_recordingCollectionViewCellConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 recordingCollectionViewCellConfiguration];
}

id objc_msgSend_recordingCollectionViewCellCustomBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingCollectionViewCellCustomBackgroundColor];
}

id objc_msgSend_recordingCollectionViewCellTextColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingCollectionViewCellTextColor];
}

id objc_msgSend_recordingCollectionViewSelectedCellTextColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingCollectionViewSelectedCellTextColor];
}

id objc_msgSend_recordingComposition(void *a1, const char *a2, ...)
{
  return _[a1 recordingComposition];
}

id objc_msgSend_recordingContainerView(void *a1, const char *a2, ...)
{
  return _[a1 recordingContainerView];
}

id objc_msgSend_recordingControlAlphaWhenPressed(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlAlphaWhenPressed];
}

id objc_msgSend_recordingControlAnimationDuration(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlAnimationDuration];
}

id objc_msgSend_recordingControlDiameter(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlDiameter];
}

id objc_msgSend_recordingControlExtraHitOutset(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlExtraHitOutset];
}

id objc_msgSend_recordingControlFontColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlFontColor];
}

id objc_msgSend_recordingControlFontColorResume(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlFontColorResume];
}

id objc_msgSend_recordingControlHeight(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlHeight];
}

id objc_msgSend_recordingControlHeightForDiameter_(void *a1, const char *a2, ...)
{
  return [a1 recordingControlHeightForDiameter:];
}

id objc_msgSend_recordingControlInnerColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlInnerColor];
}

id objc_msgSend_recordingControlInnerColorResume(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlInnerColorResume];
}

id objc_msgSend_recordingControlInnerSquareWidth(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlInnerSquareWidth];
}

id objc_msgSend_recordingControlOuterColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlOuterColor];
}

id objc_msgSend_recordingControlOuterColorResume(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlOuterColorResume];
}

id objc_msgSend_recordingControlOuterRingGap(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlOuterRingGap];
}

id objc_msgSend_recordingControlOuterRingThickness(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlOuterRingThickness];
}

id objc_msgSend_recordingControlPauseGap(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlPauseGap];
}

id objc_msgSend_recordingControlPauseStrokeCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlPauseStrokeCornerRadius];
}

id objc_msgSend_recordingControlSectionHeight(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlSectionHeight];
}

id objc_msgSend_recordingControlSquareCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlSquareCornerRadius];
}

id objc_msgSend_recordingControlState(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlState];
}

id objc_msgSend_recordingControlTextFont(void *a1, const char *a2, ...)
{
  return _[a1 recordingControlTextFont];
}

id objc_msgSend_recordingControlWidthWithLabelIntrinsicWidth_(void *a1, const char *a2, ...)
{
  return [a1 recordingControlWidthWithLabelIntrinsicWidth:];
}

id objc_msgSend_recordingController(void *a1, const char *a2, ...)
{
  return _[a1 recordingController];
}

id objc_msgSend_recordingDataArray(void *a1, const char *a2, ...)
{
  return _[a1 recordingDataArray];
}

id objc_msgSend_recordingDate(void *a1, const char *a2, ...)
{
  return _[a1 recordingDate];
}

id objc_msgSend_recordingDescriptionView(void *a1, const char *a2, ...)
{
  return _[a1 recordingDescriptionView];
}

id objc_msgSend_recordingDidEnd(void *a1, const char *a2, ...)
{
  return _[a1 recordingDidEnd];
}

id objc_msgSend_recordingDidStartWithInfo_(void *a1, const char *a2, ...)
{
  return [a1 recordingDidStartWithInfo:];
}

id objc_msgSend_recordingDisplayModelForUUID_(void *a1, const char *a2, ...)
{
  return [a1 recordingDisplayModelForUUID:];
}

id objc_msgSend_recordingDisplayModelWithSavedRecording_(void *a1, const char *a2, ...)
{
  return [a1 recordingDisplayModelWithSavedRecording:];
}

id objc_msgSend_recordingDisplayModelWithTitle_creationDate_duration_UUID_recentlyDeleted_representsDownloadingFile_isFavorite_isEnhanced_hasTranscription_hasMultipleTracks_wasManuallyRenamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordingDisplayModelWithTitle:creationDate:duration:UUID:recentlyDeleted:representsDownloadingFile:isFavorite:isEnhanced:hasTranscription:hasMultipleTracks:wasManuallyRenamed:");
}

id objc_msgSend_recordingDisplayModelWithTitle_creationDate_duration_UUID_recentlyDeleted_representsDownloadingFile_isFavorite_isEnhanced_hasTranscription_wasManuallyRenamed_(void *a1, const char *a2, ...)
{
  return [a1 recordingDisplayModelWithTitle:creationDate:duration:UUID:recentlyDeleted:representsDownloadingFile:isFavorite:isEnhanced:hasTranscription:wasManuallyRenamed:];
}

id objc_msgSend_recordingDuration(void *a1, const char *a2, ...)
{
  return _[a1 recordingDuration];
}

id objc_msgSend_recordingDurationAtStartTime(void *a1, const char *a2, ...)
{
  return _[a1 recordingDurationAtStartTime];
}

id objc_msgSend_recordingDurationUpdated_(void *a1, const char *a2, ...)
{
  return [a1 recordingDurationUpdated:];
}

id objc_msgSend_recordingError(void *a1, const char *a2, ...)
{
  return _[a1 recordingError];
}

id objc_msgSend_recordingForUUID_(void *a1, const char *a2, ...)
{
  return [a1 recordingForUUID:];
}

id objc_msgSend_recordingID(void *a1, const char *a2, ...)
{
  return _[a1 recordingID];
}

id objc_msgSend_recordingInProgressUUID(void *a1, const char *a2, ...)
{
  return _[a1 recordingInProgressUUID];
}

id objc_msgSend_recordingSectionCancelButtonInnerColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingSectionCancelButtonInnerColor];
}

id objc_msgSend_recordingSectionDoneAndCancelButtonTextColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingSectionDoneAndCancelButtonTextColor];
}

id objc_msgSend_recordingSectionDoneButtonDisabledOpacity(void *a1, const char *a2, ...)
{
  return _[a1 recordingSectionDoneButtonDisabledOpacity];
}

id objc_msgSend_recordingStartTime(void *a1, const char *a2, ...)
{
  return _[a1 recordingStartTime];
}

id objc_msgSend_recordingStartTimeInfo(void *a1, const char *a2, ...)
{
  return _[a1 recordingStartTimeInfo];
}

id objc_msgSend_recordingTimeAtStartTime(void *a1, const char *a2, ...)
{
  return _[a1 recordingTimeAtStartTime];
}

id objc_msgSend_recordingTitle(void *a1, const char *a2, ...)
{
  return _[a1 recordingTitle];
}

id objc_msgSend_recordingTitleEditingTintColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingTitleEditingTintColor];
}

id objc_msgSend_recordingTitleHasBeenEdited(void *a1, const char *a2, ...)
{
  return _[a1 recordingTitleHasBeenEdited];
}

id objc_msgSend_recordingTitleHasBeenEditedForUUID_(void *a1, const char *a2, ...)
{
  return [a1 recordingTitleHasBeenEditedForUUID];
}

id objc_msgSend_recordingTitleTextColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingTitleTextColor];
}

id objc_msgSend_recordingToken(void *a1, const char *a2, ...)
{
  return _[a1 recordingToken];
}

id objc_msgSend_recordingURIsForTranscriptionsContaining_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 recordingURIsForTranscriptionsContaining:completionHandler:];
}

id objc_msgSend_recordingURL(void *a1, const char *a2, ...)
{
  return _[a1 recordingURL];
}

id objc_msgSend_recordingUUID(void *a1, const char *a2, ...)
{
  return _[a1 recordingUUID];
}

id objc_msgSend_recordingUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 recordingUUIDs];
}

id objc_msgSend_recordingView(void *a1, const char *a2, ...)
{
  return _[a1 recordingView];
}

id objc_msgSend_recordingView_didUpdateViewHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordingView:didUpdateViewHeight:");
}

id objc_msgSend_recordingViewBottomConstraint(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewBottomConstraint];
}

id objc_msgSend_recordingViewConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewConfiguration];
}

id objc_msgSend_recordingViewController(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewController];
}

id objc_msgSend_recordingViewControllerDelegate(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewControllerDelegate];
}

id objc_msgSend_recordingViewExpandedTranscriptAdditionalSpaceBetweenOverviewAndTimeLabel(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewExpandedTranscriptAdditionalSpaceBetweenOverviewAndTimeLabel];
}

id objc_msgSend_recordingViewHidesBlurEffectsWhenInactive(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewHidesBlurEffectsWhenInactive];
}

id objc_msgSend_recordingViewSpaceBetweenToolbarAndDescriptionView(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewSpaceBetweenToolbarAndDescriptionView];
}

id objc_msgSend_recordingViewState(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewState];
}

id objc_msgSend_recordingViewStateDidUpdate_(void *a1, const char *a2, ...)
{
  return [a1 recordingViewStateDidUpdate:];
}

id objc_msgSend_recordingViewWaveformOverviewSidePadding(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewWaveformOverviewSidePadding];
}

id objc_msgSend_recordingViewWaveformOverviewSpaceBetweenMainWaveformAndOverview(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewWaveformOverviewSpaceBetweenMainWaveformAndOverview];
}

id objc_msgSend_recordingViewWaveformOverviewSpaceBetweenTimelabelAndOverview(void *a1, const char *a2, ...)
{
  return _[a1 recordingViewWaveformOverviewSpaceBetweenTimelabelAndOverview];
}

id objc_msgSend_recordingViewWidthDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordingViewWidthDidChange:");
}

id objc_msgSend_recordingWithURIRepresentation_(void *a1, const char *a2, ...)
{
  return [a1 recordingWithURIRepresentation];
}

id objc_msgSend_recordingWithUniqueID_(void *a1, const char *a2, ...)
{
  return [a1 recordingWithUniqueID:];
}

id objc_msgSend_recordings(void *a1, const char *a2, ...)
{
  return _[a1 recordings];
}

id objc_msgSend_recordingsCollectionViewBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingsCollectionViewBackgroundColor];
}

id objc_msgSend_recordingsCollectionViewController(void *a1, const char *a2, ...)
{
  return _[a1 recordingsCollectionViewController];
}

id objc_msgSend_recordingsCollectionViewControllerWrapperView(void *a1, const char *a2, ...)
{
  return _[a1 recordingsCollectionViewControllerWrapperView];
}

id objc_msgSend_recordingsCollectionViewEditButtonDimmedColor(void *a1, const char *a2, ...)
{
  return _[a1 recordingsCollectionViewEditButtonDimmedColor];
}

id objc_msgSend_recordingsCollectionViewLayoutListAppearance(void *a1, const char *a2, ...)
{
  return _[a1 recordingsCollectionViewLayoutListAppearance];
}

id objc_msgSend_recordingsCollectionViewSupportsListAppearanceSidebar(void *a1, const char *a2, ...)
{
  return _[a1 recordingsCollectionViewSupportsListAppearanceSidebar];
}

id objc_msgSend_recordingsContentUnavailableImage(void *a1, const char *a2, ...)
{
  return _[a1 recordingsContentUnavailableImage];
}

id objc_msgSend_recordingsController(void *a1, const char *a2, ...)
{
  return _[a1 recordingsController];
}

id objc_msgSend_recordingsControllerWithFolder_(void *a1, const char *a2, ...)
{
  return [a1 recordingsControllerWithFolder:];
}

id objc_msgSend_recordingsCount(void *a1, const char *a2, ...)
{
  return _[a1 recordingsCount];
}

id objc_msgSend_recordingsCountString(void *a1, const char *a2, ...)
{
  return _[a1 recordingsCountString];
}

id objc_msgSend_recordingsDataCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 recordingsDataCoordinator];
}

id objc_msgSend_recordingsForUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 recordingsForUUIDs:];
}

id objc_msgSend_recordingsInFolderPredicate_(void *a1, const char *a2, ...)
{
  return [a1 recordingsInFolderPredicate:];
}

id objc_msgSend_recordingsModelInteractor(void *a1, const char *a2, ...)
{
  return _[a1 recordingsModelInteractor];
}

id objc_msgSend_recoverButton(void *a1, const char *a2, ...)
{
  return _[a1 recoverButton];
}

id objc_msgSend_recoverButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 recoverButtonItem];
}

id objc_msgSend_recoverRecordingsButton(void *a1, const char *a2, ...)
{
  return _[a1 recoverRecordingsButton];
}

id objc_msgSend_redoEditing(void *a1, const char *a2, ...)
{
  return _[a1 redoEditing];
}

id objc_msgSend_refreshDisplayWithDisplayModel_(void *a1, const char *a2, ...)
{
  return [a1 refreshDisplayWithDisplayModel:];
}

id objc_msgSend_refreshRecording_controller_(void *a1, const char *a2, ...)
{
  return [a1 refreshRecording:controller:];
}

id objc_msgSend_refreshWithComposition_(void *a1, const char *a2, ...)
{
  return [a1 refreshWithComposition:];
}

id objc_msgSend_registerAppEntityInteraction(void *a1, const char *a2, ...)
{
  return _[a1 registerAppEntityInteraction];
}

id objc_msgSend_registerAppEntityInteractionForCollectionViewCell_(void *a1, const char *a2, ...)
{
  return [a1 registerAppEntityInteractionForCollectionViewCell:];
}

id objc_msgSend_registerAppIntentInteractions(void *a1, const char *a2, ...)
{
  return _[a1 registerAppIntentInteractions];
}

id objc_msgSend_registerAppIntentsInteractions(void *a1, const char *a2, ...)
{
  return _[a1 registerAppIntentsInteractions];
}

id objc_msgSend_registerAudioFileRepresentationWithItemProvider_error_(void *a1, const char *a2, ...)
{
  return [a1 registerAudioFileRepresentationWithItemProvider:error:];
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forCellWithReuseIdentifier:];
}

id objc_msgSend_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forSupplementaryViewOfKind:withReuseIdentifier:];
}

id objc_msgSend_registerDependencies(void *a1, const char *a2, ...)
{
  return _[a1 registerDependencies];
}

id objc_msgSend_registerFileRepresentationForTypeIdentifier_fileOptions_visibility_loadHandler_(void *a1, const char *a2, ...)
{
  return [a1 registerFileRepresentationForTypeIdentifier:fileOptions:visibility:loadHandler:];
}

id objc_msgSend_registerForTraitChanges_withAction_(void *a1, const char *a2, ...)
{
  return [a1 registerForTraitChanges:withAction:];
}

id objc_msgSend_registerForTraitChanges_withTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 registerForTraitChanges:withTarget:action:];
}

id objc_msgSend_registerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerNotifications];
}

id objc_msgSend_registerObject_visibility_(void *a1, const char *a2, ...)
{
  return [a1 registerObject:visibility:];
}

id objc_msgSend_registerObserver_(void *a1, const char *a2, ...)
{
  return [a1 registerObserver:];
}

id objc_msgSend_registerUndoWithTarget_handler_(void *a1, const char *a2, ...)
{
  return [a1 registerUndoWithTarget:handler:];
}

id objc_msgSend_regularTickPaths(void *a1, const char *a2, ...)
{
  return _[a1 regularTickPaths];
}

id objc_msgSend_regularTrackPaths(void *a1, const char *a2, ...)
{
  return _[a1 regularTrackPaths];
}

id objc_msgSend_reloadBuiltinFolder_(void *a1, const char *a2, ...)
{
  return [a1 reloadBuiltinFolder:];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _[a1 reloadData];
}

id objc_msgSend_reloadItemAtIndexPath_usingDisplayModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadItemAtIndexPath:usingDisplayModel:");
}

id objc_msgSend_reloadItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 reloadItemsAtIndexPaths:];
}

id objc_msgSend_reloadOverlayOffsets(void *a1, const char *a2, ...)
{
  return _[a1 reloadOverlayOffsets];
}

id objc_msgSend_reloadSelectionOffsets(void *a1, const char *a2, ...)
{
  return _[a1 reloadSelectionOffsets];
}

id objc_msgSend_reloadUserFolder_(void *a1, const char *a2, ...)
{
  return [a1 reloadUserFolder:];
}

id objc_msgSend_reloadWaveformDataSource_withActiveTimeController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadWaveformDataSource:withActiveTimeController:");
}

id objc_msgSend_reloadWaveformsFromComposition_(void *a1, const char *a2, ...)
{
  return [a1 reloadWaveformsFromComposition:];
}

id objc_msgSend_remoteToggleShouldPauseRecording(void *a1, const char *a2, ...)
{
  return _[a1 remoteToggleShouldPauseRecording];
}

id objc_msgSend_remove(void *a1, const char *a2, ...)
{
  return _[a1 remove];
}

id objc_msgSend_removeAllActionsWithTarget_(void *a1, const char *a2, ...)
{
  return [a1 removeAllActionsWithTarget:];
}

id objc_msgSend_removeAllAnimations(void *a1, const char *a2, ...)
{
  return _[a1 removeAllAnimations];
}

id objc_msgSend_removeAllConstraints(void *a1, const char *a2, ...)
{
  return _[a1 removeAllConstraints];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 removeAndReturnError:];
}

id objc_msgSend_removeAnimationForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeAnimationForKey:];
}

id objc_msgSend_removeAppEntityInteraction(void *a1, const char *a2, ...)
{
  return _[a1 removeAppEntityInteraction];
}

id objc_msgSend_removeAppEntityInteractionForCollectionViewCell_(void *a1, const char *a2, ...)
{
  return [a1 removeAppEntityInteractionForCollectionViewCell:];
}

id objc_msgSend_removeArrangedSubview_(void *a1, const char *a2, ...)
{
  return [a1 removeArrangedSubview:];
}

id objc_msgSend_removeBlurEffect(void *a1, const char *a2, ...)
{
  return _[a1 removeBlurEffect];
}

id objc_msgSend_removeConstraint_(void *a1, const char *a2, ...)
{
  return [a1 removeConstraint:];
}

id objc_msgSend_removeConstraints_(void *a1, const char *a2, ...)
{
  return [a1 removeConstraints:];
}

id objc_msgSend_removeContainerAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeContainerAtIndex:];
}

id objc_msgSend_removeDisplayLinkObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeDisplayLinkObserver:];
}

id objc_msgSend_removeFromParentView(void *a1, const char *a2, ...)
{
  return _[a1 removeFromParentView];
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 removeFromParentViewController];
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperlayer];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeIndex:];
}

id objc_msgSend_removeIndexesInRange_(void *a1, const char *a2, ...)
{
  return [a1 removeIndexesInRange:];
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return [a1 removeItemAtURL:error:];
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeMenuForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 removeMenuForIdentifier:];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectAtIndex:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsForKeys:];
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:];
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPath:];
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPath:context:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_removeOtherVersionsOfItemAtURL_error_(void *a1, const char *a2, ...)
{
  return [a1 removeOtherVersionsOfItemAtURL:error:];
}

id objc_msgSend_removeRecording_fromFolder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRecording:fromFolder:");
}

id objc_msgSend_removeRecordingWithUUID_fromUserFolderWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRecordingWithUUID:fromUserFolderWithUUID:");
}

id objc_msgSend_removeRecordingsWithUUIDs_fromUserFolderWithUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRecordingsWithUUIDs:fromUserFolderWithUUID:");
}

id objc_msgSend_removeSliceWithType_(void *a1, const char *a2, ...)
{
  return [a1 removeSliceWithType:];
}

id objc_msgSend_removeTarget_(void *a1, const char *a2, ...)
{
  return [a1 removeTarget:];
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 removeTarget:action:forControlEvents:];
}

id objc_msgSend_removeTimeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeTimeObserver:];
}

id objc_msgSend_removeTitleAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return [a1 removeTitleAccessibilityTraits:];
}

id objc_msgSend_removeTrait_(void *a1, const char *a2, ...)
{
  return [a1 removeTrait:];
}

id objc_msgSend_removeTransitionSpacing(void *a1, const char *a2, ...)
{
  return _[a1 removeTransitionSpacing];
}

id objc_msgSend_renameContextMenuButtonImage(void *a1, const char *a2, ...)
{
  return _[a1 renameContextMenuButtonImage];
}

id objc_msgSend_renameFolder_toName_(void *a1, const char *a2, ...)
{
  return [a1 renameFolder:toName:];
}

id objc_msgSend_renameFolderSaveAction(void *a1, const char *a2, ...)
{
  return _[a1 renameFolderSaveAction];
}

id objc_msgSend_renameForUUID_toNewTitle_(void *a1, const char *a2, ...)
{
  return [a1 renameForUUID:toNewTitle:];
}

id objc_msgSend_renameRecording(void *a1, const char *a2, ...)
{
  return _[a1 renameRecording];
}

id objc_msgSend_renderDimmedUnprocessedSegments(void *a1, const char *a2, ...)
{
  return _[a1 renderDimmedUnprocessedSegments];
}

id objc_msgSend_renderReadyForDraw(void *a1, const char *a2, ...)
{
  return _[a1 renderReadyForDraw];
}

id objc_msgSend_renderer(void *a1, const char *a2, ...)
{
  return _[a1 renderer];
}

id objc_msgSend_rendererDelegate(void *a1, const char *a2, ...)
{
  return _[a1 rendererDelegate];
}

id objc_msgSend_renderingQueueIsBusy(void *a1, const char *a2, ...)
{
  return _[a1 renderingQueueIsBusy];
}

id objc_msgSend_replaceArrangedSubview_inColumnAtIndex_rowAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 replaceArrangedSubview:inColumnAtIndex:rowAtIndex:];
}

id objc_msgSend_replaceCapturing_(void *a1, const char *a2, ...)
{
  return [a1 replaceCapturing:];
}

id objc_msgSend_replaceCharactersInRange_withAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 replaceCharactersInRange:withAttributedString:];
}

id objc_msgSend_replaceCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return [a1 replaceCharactersInRange:withString:];
}

id objc_msgSend_replaceCurrentItemWithPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 replaceCurrentItemWithPlayerItem:];
}

id objc_msgSend_replaceItemAtURL_options_error_(void *a1, const char *a2, ...)
{
  return [a1 replaceItemAtURL:options:error:];
}

id objc_msgSend_replaceRecording_(void *a1, const char *a2, ...)
{
  return [a1 replaceRecording];
}

id objc_msgSend_replaceRecording_atTime_controller_(void *a1, const char *a2, ...)
{
  return [a1 replaceRecording:atTime:controller:];
}

id objc_msgSend_replaceSelectionOverlayColor(void *a1, const char *a2, ...)
{
  return _[a1 replaceSelectionOverlayColor];
}

id objc_msgSend_repositoryWithObserver_(void *a1, const char *a2, ...)
{
  return [a1 repositoryWithObserver:];
}

id objc_msgSend_representsDownloadingFile(void *a1, const char *a2, ...)
{
  return _[a1 representsDownloadingFile];
}

id objc_msgSend_representsPossibleMoveDestination(void *a1, const char *a2, ...)
{
  return _[a1 representsPossibleMoveDestination];
}

id objc_msgSend_requestLocation(void *a1, const char *a2, ...)
{
  return _[a1 requestLocation];
}

id objc_msgSend_requestTransitionToPreferredLayoutMode(void *a1, const char *a2, ...)
{
  return _[a1 requestTransitionToPreferredLayoutMode];
}

id objc_msgSend_requestWhenInUseAuthorization(void *a1, const char *a2, ...)
{
  return _[a1 requestWhenInUseAuthorization];
}

id objc_msgSend_requiresDismissalAtEndOfCapture(void *a1, const char *a2, ...)
{
  return _[a1 requiresDismissalAtEndOfCapture];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_resetAssociatedConstraints(void *a1, const char *a2, ...)
{
  return _[a1 resetAssociatedConstraints];
}

id objc_msgSend_resetChangesBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 resetChangesBarButtonItem];
}

id objc_msgSend_resetDoneButtonSaveAction_(void *a1, const char *a2, ...)
{
  return [a1 resetDoneButtonSaveAction:];
}

id objc_msgSend_resetSelectedTimeRangeToFullDuration(void *a1, const char *a2, ...)
{
  return _[a1 resetSelectedTimeRangeToFullDuration];
}

id objc_msgSend_resetZoomScale(void *a1, const char *a2, ...)
{
  return _[a1 resetZoomScale];
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponder];
}

id objc_msgSend_resignFirstResponderForTitleEditing(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponderForTitleEditing];
}

id objc_msgSend_resizingDelegate(void *a1, const char *a2, ...)
{
  return _[a1 resizingDelegate];
}

id objc_msgSend_resolveColors(void *a1, const char *a2, ...)
{
  return _[a1 resolveColors];
}

id objc_msgSend_resolvedColor(void *a1, const char *a2, ...)
{
  return _[a1 resolvedColor];
}

id objc_msgSend_resolvedColorWithLiveWaveform_selected_muted_trimMode_(void *a1, const char *a2, ...)
{
  return [a1 resolvedColorWithLiveWaveform:selected:muted:trimMode:];
}

id objc_msgSend_resolvedColorWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 resolvedColorWithTraitCollection:];
}

id objc_msgSend_restoreDeletedRecording_(void *a1, const char *a2, ...)
{
  return [a1 restoreDeletedRecording];
}

id objc_msgSend_restoreMarkedVersion(void *a1, const char *a2, ...)
{
  return _[a1 restoreMarkedVersion];
}

id objc_msgSend_restoreRecordingsWithUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 restoreRecordingsWithUUIDs:];
}

id objc_msgSend_restoreRecordingsWithUUIDs_isRecover_source_force_collectionViewController_(void *a1, const char *a2, ...)
{
  return [a1 restoreRecordingsWithUUIDs:isRecover:source:force:collectionViewController:];
}

id objc_msgSend_restyle(void *a1, const char *a2, ...)
{
  return _[a1 restyle];
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return _[a1 result];
}

id objc_msgSend_resumeAnimations(void *a1, const char *a2, ...)
{
  return _[a1 resumeAnimations];
}

id objc_msgSend_resumeCapturing_(void *a1, const char *a2, ...)
{
  return [a1 resumeCapturing:];
}

id objc_msgSend_resumeRecording_(void *a1, const char *a2, ...)
{
  return [a1 resumeRecording:];
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 reuseIdentifier];
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 rightBarButtonItem];
}

id objc_msgSend_rightSideButton(void *a1, const char *a2, ...)
{
  return _[a1 rightSideButton];
}

id objc_msgSend_role(void *a1, const char *a2, ...)
{
  return _[a1 role];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_routeSharingPolicy(void *a1, const char *a2, ...)
{
  return _[a1 routeSharingPolicy];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_rowAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 rowAtIndex:];
}

id objc_msgSend_runTestWithParameters_(void *a1, const char *a2, ...)
{
  return [a1 runTestWithParameters:];
}

id objc_msgSend_runningAverage(void *a1, const char *a2, ...)
{
  return _[a1 runningAverage];
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaInsets];
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaLayoutGuide];
}

id objc_msgSend_safeValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 safeValueForKey:];
}

id objc_msgSend_sampleRate(void *a1, const char *a2, ...)
{
  return _[a1 sampleRate];
}

id objc_msgSend_sampleRates(void *a1, const char *a2, ...)
{
  return _[a1 sampleRates];
}

id objc_msgSend_sampleRecordingTime_(void *a1, const char *a2, ...)
{
  return [a1 sampleRecordingTime:];
}

id objc_msgSend_sampleTime(void *a1, const char *a2, ...)
{
  return _[a1 sampleTime];
}

id objc_msgSend_saveAsNewDoneButtonAction_(void *a1, const char *a2, ...)
{
  return [a1 saveAsNewDoneButtonAction:];
}

id objc_msgSend_saveAsNewRecordingAction_(void *a1, const char *a2, ...)
{
  return [a1 saveAsNewRecordingAction:];
}

id objc_msgSend_saveIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 saveIfNecessary];
}

id objc_msgSend_saveIfNecessary_(void *a1, const char *a2, ...)
{
  return [a1 saveIfNecessary:];
}

id objc_msgSend_saveMenuForDoneButton_(void *a1, const char *a2, ...)
{
  return [a1 saveMenuForDoneButton:];
}

id objc_msgSend_saveMetadataToDefaultLocation(void *a1, const char *a2, ...)
{
  return _[a1 saveMetadataToDefaultLocation];
}

id objc_msgSend_saveRecordingAction_(void *a1, const char *a2, ...)
{
  return [a1 saveRecordingAction:];
}

id objc_msgSend_savedRecordingUUID(void *a1, const char *a2, ...)
{
  return _[a1 savedRecordingUUID];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scaleForVerticalPosition_(void *a1, const char *a2, ...)
{
  return [a1 scaleForVerticalPosition:];
}

id objc_msgSend_scaledFontForFont_(void *a1, const char *a2, ...)
{
  return [a1 scaledFontForFont:];
}

id objc_msgSend_scaledMonospacedSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 scaledMonospacedSystemFontOfSize:];
}

id objc_msgSend_scaledSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 scaledSystemFontOfSize:];
}

id objc_msgSend_scheduleBuffer_completionCallbackType_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 scheduleBuffer:completionCallbackType:completionHandler:];
}

id objc_msgSend_scheduleBuffer_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 scheduleBuffer:completionHandler:];
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return [a1 scheduledTimerWithTimeInterval:repeats:block:];
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return _[a1 screen];
}

id objc_msgSend_scrollToItemAtIndexPath_atScrollPosition_animated_(void *a1, const char *a2, ...)
{
  return [a1 scrollToItemAtIndexPath:atScrollPosition:animated:];
}

id objc_msgSend_scrollToRevealPartiallyObscuredItemAtIndexPathIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToRevealPartiallyObscuredItemAtIndexPathIfNeeded:");
}

id objc_msgSend_scrollToTop(void *a1, const char *a2, ...)
{
  return _[a1 scrollToTop];
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _[a1 scrollView];
}

id objc_msgSend_searchBar(void *a1, const char *a2, ...)
{
  return _[a1 searchBar];
}

id objc_msgSend_searchConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 searchConfiguration];
}

id objc_msgSend_searchController(void *a1, const char *a2, ...)
{
  return _[a1 searchController];
}

id objc_msgSend_searchField(void *a1, const char *a2, ...)
{
  return _[a1 searchField];
}

id objc_msgSend_searchString(void *a1, const char *a2, ...)
{
  return _[a1 searchString];
}

id objc_msgSend_searchTextField(void *a1, const char *a2, ...)
{
  return _[a1 searchTextField];
}

id objc_msgSend_secondAttribute(void *a1, const char *a2, ...)
{
  return _[a1 secondAttribute];
}

id objc_msgSend_secondItem(void *a1, const char *a2, ...)
{
  return _[a1 secondItem];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_secondarySystemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 secondarySystemBackgroundColor];
}

id objc_msgSend_secondaryTextProperties(void *a1, const char *a2, ...)
{
  return _[a1 secondaryTextProperties];
}

id objc_msgSend_secondaryTransportControlsColorForLibrary(void *a1, const char *a2, ...)
{
  return _[a1 secondaryTransportControlsColorForLibrary];
}

id objc_msgSend_secondsForHostTime_(void *a1, const char *a2, ...)
{
  return [a1 secondsForHostTime:];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _[a1 section];
}

id objc_msgSend_sectionWithListConfiguration_layoutEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionWithListConfiguration:layoutEnvironment:");
}

id objc_msgSend_seekBackwardCommand(void *a1, const char *a2, ...)
{
  return _[a1 seekBackwardCommand];
}

id objc_msgSend_seekForwardCommand(void *a1, const char *a2, ...)
{
  return _[a1 seekForwardCommand];
}

id objc_msgSend_seekToTime_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 seekToTime:completionHandler:];
}

id objc_msgSend_seeking(void *a1, const char *a2, ...)
{
  return _[a1 seeking];
}

id objc_msgSend_selectAll_(void *a1, const char *a2, ...)
{
  return [a1 selectAll:];
}

id objc_msgSend_selectItemAtIndexPath_animated_scroll_(void *a1, const char *a2, ...)
{
  return [a1 selectItemAtIndexPath:animated:scroll:];
}

id objc_msgSend_selectItemAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return [a1 selectItemAtIndexPath:animated:scrollPosition:];
}

id objc_msgSend_selectItemWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 selectItemWithUUID:];
}

id objc_msgSend_selectItemWithUUID_animated_(void *a1, const char *a2, ...)
{
  return [a1 selectItemWithUUID:animated:];
}

id objc_msgSend_selectNewRecordingForDismiss(void *a1, const char *a2, ...)
{
  return _[a1 selectNewRecordingForDismiss];
}

id objc_msgSend_selectRecordingWithUUID_returnToBrowse_(void *a1, const char *a2, ...)
{
  return [a1 selectRecordingWithUUID:returnToBrowse:];
}

id objc_msgSend_selectedCellIsEditingTitle(void *a1, const char *a2, ...)
{
  return _[a1 selectedCellIsEditingTitle];
}

id objc_msgSend_selectedCellIsInFlightEditing(void *a1, const char *a2, ...)
{
  return _[a1 selectedCellIsInFlightEditing];
}

id objc_msgSend_selectedComposition(void *a1, const char *a2, ...)
{
  return _[a1 selectedComposition];
}

id objc_msgSend_selectedDetentIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 selectedDetentIdentifier];
}

id objc_msgSend_selectedRange(void *a1, const char *a2, ...)
{
  return _[a1 selectedRange];
}

id objc_msgSend_selectedRecording(void *a1, const char *a2, ...)
{
  return _[a1 selectedRecording];
}

id objc_msgSend_selectedTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 selectedTimeRange];
}

id objc_msgSend_selectedTimeRangeMinimumDuration(void *a1, const char *a2, ...)
{
  return _[a1 selectedTimeRangeMinimumDuration];
}

id objc_msgSend_selectedUUID(void *a1, const char *a2, ...)
{
  return _[a1 selectedUUID];
}

id objc_msgSend_selectedUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 selectedUUIDs];
}

id objc_msgSend_selectionAffinity(void *a1, const char *a2, ...)
{
  return _[a1 selectionAffinity];
}

id objc_msgSend_selectionBarType(void *a1, const char *a2, ...)
{
  return _[a1 selectionBarType];
}

id objc_msgSend_selectionBarWidth(void *a1, const char *a2, ...)
{
  return _[a1 selectionBarWidth];
}

id objc_msgSend_selectionBarWidthAX(void *a1, const char *a2, ...)
{
  return _[a1 selectionBarWidthAX];
}

id objc_msgSend_selectionChanged(void *a1, const char *a2, ...)
{
  return _[a1 selectionChanged];
}

id objc_msgSend_selectionDelegate(void *a1, const char *a2, ...)
{
  return _[a1 selectionDelegate];
}

id objc_msgSend_selectionHighlightToKnobInset(void *a1, const char *a2, ...)
{
  return _[a1 selectionHighlightToKnobInset];
}

id objc_msgSend_selectionHitTestSlop(void *a1, const char *a2, ...)
{
  return _[a1 selectionHitTestSlop];
}

id objc_msgSend_selectionKnobRadius(void *a1, const char *a2, ...)
{
  return _[a1 selectionKnobRadius];
}

id objc_msgSend_selectionKnobRadiusAX(void *a1, const char *a2, ...)
{
  return _[a1 selectionKnobRadiusAX];
}

id objc_msgSend_selectionMiddleTimeBaselineInset(void *a1, const char *a2, ...)
{
  return _[a1 selectionMiddleTimeBaselineInset];
}

id objc_msgSend_selectionOverlayAlpha(void *a1, const char *a2, ...)
{
  return _[a1 selectionOverlayAlpha];
}

id objc_msgSend_selectionOverlayBorderWidth(void *a1, const char *a2, ...)
{
  return _[a1 selectionOverlayBorderWidth];
}

id objc_msgSend_selectionOverlayColor(void *a1, const char *a2, ...)
{
  return _[a1 selectionOverlayColor];
}

id objc_msgSend_selectionOverlayEndpointBarColor(void *a1, const char *a2, ...)
{
  return _[a1 selectionOverlayEndpointBarColor];
}

id objc_msgSend_selectionOverlayShouldUseInsertMode(void *a1, const char *a2, ...)
{
  return _[a1 selectionOverlayShouldUseInsertMode];
}

id objc_msgSend_selectionRect(void *a1, const char *a2, ...)
{
  return _[a1 selectionRect];
}

id objc_msgSend_selectionTimeBaseLineOffset(void *a1, const char *a2, ...)
{
  return _[a1 selectionTimeBaseLineOffset];
}

id objc_msgSend_selectionTimeInsetNormal(void *a1, const char *a2, ...)
{
  return _[a1 selectionTimeInsetNormal];
}

id objc_msgSend_selectionTimeInsetWhenSelected(void *a1, const char *a2, ...)
{
  return _[a1 selectionTimeInsetWhenSelected];
}

id objc_msgSend_sendAction_to_from_forEvent_(void *a1, const char *a2, ...)
{
  return [a1 sendAction:to:from:forEvent:];
}

id objc_msgSend_sendActionsForControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 sendActionsForControlEvents:];
}

id objc_msgSend_sendDidCaptureModifyExistingRecording(void *a1, const char *a2, ...)
{
  return _[a1 sendDidCaptureModifyExistingRecording];
}

id objc_msgSend_sendDidCaptureNewRecording(void *a1, const char *a2, ...)
{
  return _[a1 sendDidCaptureNewRecording];
}

id objc_msgSend_sendDidOpenShareMemoController(void *a1, const char *a2, ...)
{
  return _[a1 sendDidOpenShareMemoController];
}

id objc_msgSend_sendDidPlaybackVoiceMemo(void *a1, const char *a2, ...)
{
  return _[a1 sendDidPlaybackVoiceMemo];
}

id objc_msgSend_sendDidShareRecording(void *a1, const char *a2, ...)
{
  return _[a1 sendDidShareRecording];
}

id objc_msgSend_sendDidTrimVoiceMemo(void *a1, const char *a2, ...)
{
  return _[a1 sendDidTrimVoiceMemo];
}

id objc_msgSend_sendEmptyQueueSignal(void *a1, const char *a2, ...)
{
  return _[a1 sendEmptyQueueSignal];
}

id objc_msgSend_sendNewRecordingDuration_(void *a1, const char *a2, ...)
{
  return [a1 sendNewRecordingDuration:];
}

id objc_msgSend_sendReceivedSharedRecording(void *a1, const char *a2, ...)
{
  return _[a1 sendReceivedSharedRecording];
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return [a1 sendSubviewToBack:];
}

id objc_msgSend_sender(void *a1, const char *a2, ...)
{
  return _[a1 sender];
}

id objc_msgSend_separateRecordingLayers_(void *a1, const char *a2, ...)
{
  return [a1 separateRecordingLayers:];
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _[a1 separatorColor];
}

id objc_msgSend_service(void *a1, const char *a2, ...)
{
  return _[a1 service];
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _[a1 session];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessibilityAttributedLabel_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityAttributedLabel:];
}

id objc_msgSend_setAccessibilityElements_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityElements:];
}

id objc_msgSend_setAccessibilityElementsHidden_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityElementsHidden:];
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityIdentifier:];
}

id objc_msgSend_setAccessibilityIgnoresInvertColors_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityIgnoresInvertColors:];
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityLabel:];
}

id objc_msgSend_setAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityTraits:];
}

id objc_msgSend_setAccessibilityValue_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityValue:];
}

id objc_msgSend_setAccessibilityViewIsModal_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityViewIsModal:];
}

id objc_msgSend_setAccessories_(void *a1, const char *a2, ...)
{
  return [a1 setAccessories:];
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return [a1 setAction:];
}

id objc_msgSend_setActionBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setActionBackgroundColor:];
}

id objc_msgSend_setActionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setActionDelegate:];
}

id objc_msgSend_setActionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setActionHandler:];
}

id objc_msgSend_setActionImage_(void *a1, const char *a2, ...)
{
  return [a1 setActionImage:];
}

id objc_msgSend_setActionImageAxLabel_(void *a1, const char *a2, ...)
{
  return [a1 setActionImageAxLabel:];
}

id objc_msgSend_setActionName_(void *a1, const char *a2, ...)
{
  return [a1 setActionName:];
}

id objc_msgSend_setActionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setActionStyle:];
}

id objc_msgSend_setActionTitle_(void *a1, const char *a2, ...)
{
  return [a1 setActionTitle:];
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return [a1 setActive:];
}

id objc_msgSend_setActive_error_(void *a1, const char *a2, ...)
{
  return [a1 setActive:error:];
}

id objc_msgSend_setActive_withOptions_error_(void *a1, const char *a2, ...)
{
  return [a1 setActive:withOptions:error:];
}

id objc_msgSend_setActiveLayoutMode_(void *a1, const char *a2, ...)
{
  return [a1 setActiveLayoutMode:];
}

id objc_msgSend_setActiveSliceColor_(void *a1, const char *a2, ...)
{
  return [a1 setActiveSliceColor:];
}

id objc_msgSend_setActiveSliceQueue_(void *a1, const char *a2, ...)
{
  return [a1 setActiveSliceQueue:];
}

id objc_msgSend_setActiveTimeController_(void *a1, const char *a2, ...)
{
  return [a1 setActiveTimeController:];
}

id objc_msgSend_setActivityMode_(void *a1, const char *a2, ...)
{
  return [a1 setActivityMode:];
}

id objc_msgSend_setActivityType_(void *a1, const char *a2, ...)
{
  return [a1 setActivityType:];
}

id objc_msgSend_setActivityTypeOrder_(void *a1, const char *a2, ...)
{
  return [a1 setActivityTypeOrder:];
}

id objc_msgSend_setActivityWaveformProcessor_(void *a1, const char *a2, ...)
{
  return [a1 setActivityWaveformProcessor:];
}

id objc_msgSend_setAddress_(void *a1, const char *a2, ...)
{
  return [a1 setAddress:];
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontForContentSizeCategory:];
}

id objc_msgSend_setAdjustsStartTime_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsStartTime:];
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setAlignment:];
}

id objc_msgSend_setAlignment_forView_inAxis_(void *a1, const char *a2, ...)
{
  return [a1 setAlignment:forView:inAxis:];
}

id objc_msgSend_setAlignmentMode_(void *a1, const char *a2, ...)
{
  return [a1 setAlignmentMode:];
}

id objc_msgSend_setAllowFullWidthIcon_(void *a1, const char *a2, ...)
{
  return [a1 setAllowFullWidthIcon:];
}

id objc_msgSend_setAllowedTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 setAllowedTimeRange:];
}

id objc_msgSend_setAllowedUnits_(void *a1, const char *a2, ...)
{
  return [a1 setAllowedUnits:];
}

id objc_msgSend_setAllowsAutomaticMirroring_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsAutomaticMirroring:];
}

id objc_msgSend_setAllowsEdgeAntialiasing_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsEdgeAntialiasing:];
}

id objc_msgSend_setAllowsGroupOpacity_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsGroupOpacity:];
}

id objc_msgSend_setAllowsHitTesting_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsHitTesting:];
}

id objc_msgSend_setAllowsMultipleSelectionDuringEditing_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsMultipleSelectionDuringEditing:];
}

id objc_msgSend_setAllowsNewRecordings_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsNewRecordings:];
}

id objc_msgSend_setAllowsSelection_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsSelection:];
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAlpha:];
}

id objc_msgSend_setAlwaysBounceHorizontal_(void *a1, const char *a2, ...)
{
  return [a1 setAlwaysBounceHorizontal:];
}

id objc_msgSend_setAmplitude_(void *a1, const char *a2, ...)
{
  return [a1 setAmplitude:];
}

id objc_msgSend_setAmplitudeNeedsUpdate_(void *a1, const char *a2, ...)
{
  return [a1 setAmplitudeNeedsUpdate:];
}

id objc_msgSend_setAnchorPoint_(void *a1, const char *a2, ...)
{
  return [a1 setAnchorPoint:];
}

id objc_msgSend_setAnimationCircleColor_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationCircleColor:];
}

id objc_msgSend_setAnimationCircleRadius_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationCircleRadius:];
}

id objc_msgSend_setAnimationDuration_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationDuration:];
}

id objc_msgSend_setAnimations_(void *a1, const char *a2, ...)
{
  return [a1 setAnimations:];
}

id objc_msgSend_setAnimationsEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationsEnabled:];
}

id objc_msgSend_setArrangedSubviewRemovalPolicy_(void *a1, const char *a2, ...)
{
  return [a1 setArrangedSubviewRemovalPolicy:];
}

id objc_msgSend_setArrangedSubviews_(void *a1, const char *a2, ...)
{
  return [a1 setArrangedSubviews:];
}

id objc_msgSend_setAssetBackup_(void *a1, const char *a2, ...)
{
  return [a1 setAssetBackup:];
}

id objc_msgSend_setAssetCurrentTime_(void *a1, const char *a2, ...)
{
  return [a1 setAssetCurrentTime:];
}

id objc_msgSend_setAssetDuration_(void *a1, const char *a2, ...)
{
  return [a1 setAssetDuration:];
}

id objc_msgSend_setAssetWriter_(void *a1, const char *a2, ...)
{
  return [a1 setAssetWriter:];
}

id objc_msgSend_setAssociatedConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setAssociatedConstraints:];
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedText:];
}

id objc_msgSend_setAttributes_(void *a1, const char *a2, ...)
{
  return [a1 setAttributes:];
}

id objc_msgSend_setAttributes_range_(void *a1, const char *a2, ...)
{
  return [a1 setAttributes:range:];
}

id objc_msgSend_setAudioPlayer_(void *a1, const char *a2, ...)
{
  return [a1 setAudioPlayer:];
}

id objc_msgSend_setAudioRecorder_(void *a1, const char *a2, ...)
{
  return [a1 setAudioRecorder:];
}

id objc_msgSend_setAutocapitalizationType_(void *a1, const char *a2, ...)
{
  return [a1 setAutocapitalizationType:];
}

id objc_msgSend_setAutomaticallyMergesChangesFromParent_(void *a1, const char *a2, ...)
{
  return [a1 setAutomaticallyMergesChangesFromParent:];
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return [a1 setAutoresizingMask:];
}

id objc_msgSend_setAutoreverses_(void *a1, const char *a2, ...)
{
  return [a1 setAutoreverses:];
}

id objc_msgSend_setAvailableDuration_(void *a1, const char *a2, ...)
{
  return [a1 setAvailableDuration:];
}

id objc_msgSend_setAxSegment_(void *a1, const char *a2, ...)
{
  return [a1 setAxSegment:];
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return [a1 setAxis:];
}

id objc_msgSend_setBackButtonTitle_(void *a1, const char *a2, ...)
{
  return [a1 setBackButtonTitle:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setBackgroundConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundConfiguration:];
}

id objc_msgSend_setBackgroundImage_forToolbarPosition_barMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundImage:forToolbarPosition:barMetrics:];
}

id objc_msgSend_setBackgroundTintColorForScene_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundTintColorForScene];
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setBarButtonItem:];
}

id objc_msgSend_setBarGlyph_(void *a1, const char *a2, ...)
{
  return [a1 setBarGlyph:];
}

id objc_msgSend_setBarMatchesKnobRadius_(void *a1, const char *a2, ...)
{
  return [a1 setBarMatchesKnobRadius:];
}

id objc_msgSend_setBarStyle_(void *a1, const char *a2, ...)
{
  return [a1 setBarStyle:];
}

id objc_msgSend_setBarTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setBarTintColor:];
}

id objc_msgSend_setBaseBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBaseBackgroundColor:];
}

id objc_msgSend_setBaseForegroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBaseForegroundColor:];
}

id objc_msgSend_setBeginTime_(void *a1, const char *a2, ...)
{
  return [a1 setBeginTime:];
}

id objc_msgSend_setBlurThroughEffectsActive_(void *a1, const char *a2, ...)
{
  return [a1 setBlurThroughEffectsActive:];
}

id objc_msgSend_setBlurred_(void *a1, const char *a2, ...)
{
  return [a1 setBlurred:];
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setBool:forKey:];
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return [a1 setBorderColor:];
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return [a1 setBorderWidth:];
}

id objc_msgSend_setBottomControlsContainerView_(void *a1, const char *a2, ...)
{
  return [a1 setBottomControlsContainerView:];
}

id objc_msgSend_setBottomControlsContainerViewBottomConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setBottomControlsContainerViewBottomConstraint:];
}

id objc_msgSend_setBottomFillerView_(void *a1, const char *a2, ...)
{
  return [a1 setBottomFillerView:];
}

id objc_msgSend_setBounces_(void *a1, const char *a2, ...)
{
  return [a1 setBounces:];
}

id objc_msgSend_setBouncesZoom_(void *a1, const char *a2, ...)
{
  return [a1 setBouncesZoom:];
}

id objc_msgSend_setBoundarySupplementaryItems_(void *a1, const char *a2, ...)
{
  return [a1 setBoundarySupplementaryItems:];
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return [a1 setBounds:];
}

id objc_msgSend_setBrowseFoldersView_(void *a1, const char *a2, ...)
{
  return [a1 setBrowseFoldersView:];
}

id objc_msgSend_setBrowseFoldersViewController_(void *a1, const char *a2, ...)
{
  return [a1 setBrowseFoldersViewController:];
}

id objc_msgSend_setBrowsingDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setBrowsingDelegate:];
}

id objc_msgSend_setBundle_(void *a1, const char *a2, ...)
{
  return [a1 setBundle:];
}

id objc_msgSend_setButtonsAndDescriptionContainerView_(void *a1, const char *a2, ...)
{
  return [a1 setButtonsAndDescriptionContainerView:];
}

id objc_msgSend_setButtonsArray_(void *a1, const char *a2, ...)
{
  return [a1 setButtonsArray:];
}

id objc_msgSend_setCalcBlockShouldRefreshAllSlices_(void *a1, const char *a2, ...)
{
  return [a1 setCalcBlockShouldRefreshAllSlices:];
}

id objc_msgSend_setCanCancel_(void *a1, const char *a2, ...)
{
  return [a1 setCanCancel:];
}

id objc_msgSend_setCanSave_(void *a1, const char *a2, ...)
{
  return [a1 setCanSave:];
}

id objc_msgSend_setCanUndo_(void *a1, const char *a2, ...)
{
  return [a1 setCanUndo:];
}

id objc_msgSend_setCancelButton_(void *a1, const char *a2, ...)
{
  return [a1 setCancelButton:];
}

id objc_msgSend_setCaptureIsUnderway_(void *a1, const char *a2, ...)
{
  return [a1 setCaptureIsUnderway:];
}

id objc_msgSend_setCapturing_(void *a1, const char *a2, ...)
{
  return [a1 setCapturing:];
}

id objc_msgSend_setCardPresentationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setCardPresentationDelegate:];
}

id objc_msgSend_setCellActionsDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setCellActionsDelegate:];
}

id objc_msgSend_setCellDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setCellDelegate:];
}

id objc_msgSend_setCellWhoseTitleIsBeingEdited_(void *a1, const char *a2, ...)
{
  return [a1 setCellWhoseTitleIsBeingEdited];
}

id objc_msgSend_setCellsHashTable_(void *a1, const char *a2, ...)
{
  return [a1 setCellsHashTable:];
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return [a1 setCenter:];
}

id objc_msgSend_setCenterClusterStackView_(void *a1, const char *a2, ...)
{
  return [a1 setCenterClusterStackView:];
}

id objc_msgSend_setCenterClusterWidthCard_(void *a1, const char *a2, ...)
{
  return [a1 setCenterClusterWidthCard:];
}

id objc_msgSend_setCenterContentContainerTopAnchorToWindowConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setCenterContentContainerTopAnchorToWindowConstraint:];
}

id objc_msgSend_setCenterContentContainerView_(void *a1, const char *a2, ...)
{
  return [a1 setCenterContentContainerView:];
}

id objc_msgSend_setCenterContentViewState_(void *a1, const char *a2, ...)
{
  return [a1 setCenterContentViewState:];
}

id objc_msgSend_setChannelMap_(void *a1, const char *a2, ...)
{
  return [a1 setChannelMap:];
}

id objc_msgSend_setChildView_(void *a1, const char *a2, ...)
{
  return [a1 setChildView:];
}

id objc_msgSend_setCircleLayer_(void *a1, const char *a2, ...)
{
  return [a1 setCircleLayer:];
}

id objc_msgSend_setClearsSelectionOnViewWillAppear_(void *a1, const char *a2, ...)
{
  return [a1 setClearsSelectionOnViewWillAppear:];
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setClipsToBounds:];
}

id objc_msgSend_setCollectionView_(void *a1, const char *a2, ...)
{
  return [a1 setCollectionView:];
}

id objc_msgSend_setCollectionViewEditingShouldDisableActionButtons_(void *a1, const char *a2, ...)
{
  return [a1 setCollectionViewEditingShouldDisableActionButtons:];
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return [a1 setColor:];
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionBlock:];
}

id objc_msgSend_setCompletionWithItemsHandler_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionWithItemsHandler:];
}

id objc_msgSend_setComposition_(void *a1, const char *a2, ...)
{
  return [a1 setComposition:];
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setConfiguration:];
}

id objc_msgSend_setConfigurationUpdateHandler_(void *a1, const char *a2, ...)
{
  return [a1 setConfigurationUpdateHandler:];
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return [a1 setConstant:];
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentCompressionResistancePriority:forAxis:];
}

id objc_msgSend_setContentConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setContentConfiguration:];
}

id objc_msgSend_setContentDuration_(void *a1, const char *a2, ...)
{
  return [a1 setContentDuration:];
}

id objc_msgSend_setContentHorizontalAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setContentHorizontalAlignment:];
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentHuggingPriority:forAxis:];
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return [a1 setContentInset:];
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return [a1 setContentInsets:];
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return [a1 setContentMode:];
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:];
}

id objc_msgSend_setContentOffset_animated_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:animated:];
}

id objc_msgSend_setContentScrollView_forEdge_(void *a1, const char *a2, ...)
{
  return [a1 setContentScrollView:forEdge:];
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setContentSize:];
}

id objc_msgSend_setContentUnavailableConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setContentUnavailableConfiguration:];
}

id objc_msgSend_setContentUnavailableState_(void *a1, const char *a2, ...)
{
  return [a1 setContentUnavailableState:];
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return [a1 setContents:];
}

id objc_msgSend_setContentsGravity_(void *a1, const char *a2, ...)
{
  return [a1 setContentsGravity:];
}

id objc_msgSend_setContentsScale_(void *a1, const char *a2, ...)
{
  return [a1 setContentsScale:];
}

id objc_msgSend_setContinuous_(void *a1, const char *a2, ...)
{
  return [a1 setContinuous:];
}

id objc_msgSend_setControlInteractionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setControlInteractionDelegate:];
}

id objc_msgSend_setController_(void *a1, const char *a2, ...)
{
  return [a1 setController:];
}

id objc_msgSend_setControlsActionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setControlsActionDelegate:];
}

id objc_msgSend_setControlsAnimationColor_(void *a1, const char *a2, ...)
{
  return [a1 setControlsAnimationColor:];
}

id objc_msgSend_setControlsColor_(void *a1, const char *a2, ...)
{
  return [a1 setControlsColor:];
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 setCornerRadius:];
}

id objc_msgSend_setCornerStyle_(void *a1, const char *a2, ...)
{
  return [a1 setCornerStyle:];
}

id objc_msgSend_setCreateNewFolderSaveAction_(void *a1, const char *a2, ...)
{
  return [a1 setCreateNewFolderSaveAction:];
}

id objc_msgSend_setCreationDate_(void *a1, const char *a2, ...)
{
  return [a1 setCreationDate:];
}

id objc_msgSend_setCreationDateOrDownloadingLabel_(void *a1, const char *a2, ...)
{
  return [a1 setCreationDateOrDownloadingLabel:];
}

id objc_msgSend_setCurrentComposition_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentComposition];
}

id objc_msgSend_setCurrentContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentContentSize:];
}

id objc_msgSend_setCurrentDuration_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentDuration:];
}

id objc_msgSend_setCurrentFolderViewController_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentFolderViewController:];
}

id objc_msgSend_setCurrentLabelAccessoryTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentLabelAccessoryTintColor:];
}

id objc_msgSend_setCurrentRate_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentRate:];
}

id objc_msgSend_setCurrentRecordingDisplayModel_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentRecordingDisplayModel:];
}

id objc_msgSend_setCurrentState_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentState:];
}

id objc_msgSend_setCurrentTime_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTime:];
}

id objc_msgSend_setCurrentTime_forItemWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTime:forItemWithUUID:];
}

id objc_msgSend_setCurrentTime_withUUID_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTime:withUUID:];
}

id objc_msgSend_setCurrentTimeDisplayOptions_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTimeDisplayOptions:];
}

id objc_msgSend_setCurrentTimeLabel_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTimeLabel:];
}

id objc_msgSend_setCurrentTimeWindow_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTimeWindow:];
}

id objc_msgSend_setCurrentTrackTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTrackTimeRange:];
}

id objc_msgSend_setCurrentUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentUserInterfaceStyle:];
}

id objc_msgSend_setCustomAlignmentRectInsets_(void *a1, const char *a2, ...)
{
  return [a1 setCustomAlignmentRectInsets:];
}

id objc_msgSend_setCustomCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setCustomCompletionBlock:];
}

id objc_msgSend_setCustomSpacing_afterView_(void *a1, const char *a2, ...)
{
  return [a1 setCustomSpacing:afterView:];
}

id objc_msgSend_setCustomSubject_(void *a1, const char *a2, ...)
{
  return [a1 setCustomSubject:];
}

id objc_msgSend_setDamping_(void *a1, const char *a2, ...)
{
  return [a1 setDamping:];
}

id objc_msgSend_setDataProvider_(void *a1, const char *a2, ...)
{
  return [a1 setDataProvider:];
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setDataSource:];
}

id objc_msgSend_setDateAndDurationEmptySpacerView_(void *a1, const char *a2, ...)
{
  return [a1 setDateAndDurationEmptySpacerView:];
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return [a1 setDateFormat:];
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDateStyle:];
}

id objc_msgSend_setDebounceASBD_(void *a1, const char *a2, ...)
{
  return [a1 setDebounceASBD:];
}

id objc_msgSend_setDebounceMaxFrames_(void *a1, const char *a2, ...)
{
  return [a1 setDebounceMaxFrames:];
}

id objc_msgSend_setDebugID_(void *a1, const char *a2, ...)
{
  return [a1 setDebugID];
}

id objc_msgSend_setDecomposedFragments_(void *a1, const char *a2, ...)
{
  return [a1 setDecomposedFragments:];
}

id objc_msgSend_setDefaultDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultDelegate:];
}

id objc_msgSend_setDefaultImage_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultImage:];
}

id objc_msgSend_setDefaultSceneActivationStateDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultSceneActivationStateDelegate:];
}

id objc_msgSend_setDefaultTextAttributes_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultTextAttributes:];
}

id objc_msgSend_setDeferredInitializationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDeferredInitializationDelegate:];
}

id objc_msgSend_setDefinesPresentationContext_(void *a1, const char *a2, ...)
{
  return [a1 setDefinesPresentationContext:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDelegateClass_(void *a1, const char *a2, ...)
{
  return [a1 setDelegateClass:];
}

id objc_msgSend_setDeleteButton_(void *a1, const char *a2, ...)
{
  return [a1 setDeleteButton:];
}

id objc_msgSend_setDeleteButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setDeleteButtonItem:];
}

id objc_msgSend_setDeleteSelectionButton_(void *a1, const char *a2, ...)
{
  return [a1 setDeleteSelectionButton:];
}

id objc_msgSend_setDeleteSelectionButtonTrailingConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setDeleteSelectionButtonTrailingConstraint:];
}

id objc_msgSend_setDeliversTouchesForGesturesToSuperview_(void *a1, const char *a2, ...)
{
  return [a1 setDeliversTouchesForGesturesToSuperview:];
}

id objc_msgSend_setDescriptionContainerView_(void *a1, const char *a2, ...)
{
  return [a1 setDescriptionContainerView:];
}

id objc_msgSend_setDescriptionView_(void *a1, const char *a2, ...)
{
  return [a1 setDescriptionView:];
}

id objc_msgSend_setDesiredTimeDeltaForVisibleTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 setDesiredTimeDeltaForVisibleTimeRange:];
}

id objc_msgSend_setDetailedScrubbingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setDetailedScrubbingEnabled:];
}

id objc_msgSend_setDetents_(void *a1, const char *a2, ...)
{
  return [a1 setDetents:];
}

id objc_msgSend_setDiameter_(void *a1, const char *a2, ...)
{
  return [a1 setDiameter:];
}

id objc_msgSend_setDidSetInitialMicaState_(void *a1, const char *a2, ...)
{
  return [a1 setDidSetInitialMicaState:];
}

id objc_msgSend_setDidSetupToolbarWithButtonItems_(void *a1, const char *a2, ...)
{
  return [a1 setDidSetupToolbarWithButtonItems:];
}

id objc_msgSend_setDidTrimPlayback_(void *a1, const char *a2, ...)
{
  return [a1 setDidTrimPlayback];
}

id objc_msgSend_setDiffableDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setDiffableDataSource:];
}

id objc_msgSend_setDimmingBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setDimmingBackgroundColor:];
}

id objc_msgSend_setDimmingView_(void *a1, const char *a2, ...)
{
  return [a1 setDimmingView:];
}

id objc_msgSend_setDirectionalLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setDirectionalLayoutMargins:];
}

id objc_msgSend_setDirectionalLockEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setDirectionalLockEnabled:];
}

id objc_msgSend_setDisableActions_(void *a1, const char *a2, ...)
{
  return [a1 setDisableActions:];
}

id objc_msgSend_setDisableTrackSwitch_(void *a1, const char *a2, ...)
{
  return [a1 setDisableTrackSwitch:];
}

id objc_msgSend_setDisablesActionButtons_(void *a1, const char *a2, ...)
{
  return [a1 setDisablesActionButtons:];
}

id objc_msgSend_setDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayMode:];
}

id objc_msgSend_setDisplayModel_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayModel:];
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayName:];
}

id objc_msgSend_setDisplayStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayStyle:];
}

id objc_msgSend_setDisplayTranscriptAvailableIcon_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayTranscriptAvailableIcon:];
}

id objc_msgSend_setDisplayedState_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayedState:];
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return [a1 setDistribution:];
}

id objc_msgSend_setDoesRelativeDateFormatting_(void *a1, const char *a2, ...)
{
  return [a1 setDoesRelativeDateFormatting:];
}

id objc_msgSend_setDoneButton_(void *a1, const char *a2, ...)
{
  return [a1 setDoneButton:];
}

id objc_msgSend_setDoneButtonEnabledState_(void *a1, const char *a2, ...)
{
  return [a1 setDoneButtonEnabledState:];
}

id objc_msgSend_setDoneEditingButton_(void *a1, const char *a2, ...)
{
  return [a1 setDoneEditingButton:];
}

id objc_msgSend_setDragDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDragDelegate:];
}

id objc_msgSend_setDragGesturePassthroughSpecs_(void *a1, const char *a2, ...)
{
  return [a1 setDragGesturePassthroughSpecs:];
}

id objc_msgSend_setDropDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDropDelegate:];
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return [a1 setDuration:];
}

id objc_msgSend_setDurationLabel_(void *a1, const char *a2, ...)
{
  return [a1 setDurationLabel:];
}

id objc_msgSend_setDurationLabelAccessible_(void *a1, const char *a2, ...)
{
  return [a1 setDurationLabelAccessible:];
}

id objc_msgSend_setDurationPerWaveformSlice_(void *a1, const char *a2, ...)
{
  return [a1 setDurationPerWaveformSlice:];
}

id objc_msgSend_setEditButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setEditButtonItem:];
}

id objc_msgSend_setEditMode_(void *a1, const char *a2, ...)
{
  return [a1 setEditMode:];
}

id objc_msgSend_setEditRecordingButton_(void *a1, const char *a2, ...)
{
  return [a1 setEditRecordingButton:];
}

id objc_msgSend_setEditStateHandler_(void *a1, const char *a2, ...)
{
  return [a1 setEditStateHandler:];
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return [a1 setEditing:];
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return [a1 setEditing:animated:];
}

id objc_msgSend_setEditingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEditingEnabled:];
}

id objc_msgSend_setEditingInFlight_(void *a1, const char *a2, ...)
{
  return [a1 setEditingInFlight:];
}

id objc_msgSend_setEditingProgress_(void *a1, const char *a2, ...)
{
  return [a1 setEditingProgress:];
}

id objc_msgSend_setEditingStatus_(void *a1, const char *a2, ...)
{
  return [a1 setEditingStatus:];
}

id objc_msgSend_setEditingStatusDict_(void *a1, const char *a2, ...)
{
  return [a1 setEditingStatusDict:];
}

id objc_msgSend_setEditingToolbar_(void *a1, const char *a2, ...)
{
  return [a1 setEditingToolbar:];
}

id objc_msgSend_setEffect_(void *a1, const char *a2, ...)
{
  return [a1 setEffect:];
}

id objc_msgSend_setElapsedRecordingTime_(void *a1, const char *a2, ...)
{
  return [a1 setElapsedRecordingTime:];
}

id objc_msgSend_setElapsedRecordingTimeInfo_(void *a1, const char *a2, ...)
{
  return [a1 setElapsedRecordingTimeInfo:];
}

id objc_msgSend_setElementNeedsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 setElementNeedsUpdate];
}

id objc_msgSend_setElementNeedsUpdateWithCoordinatedAnimations_(void *a1, const char *a2, ...)
{
  return [a1 setElementNeedsUpdateWithCoordinatedAnimations:];
}

id objc_msgSend_setEligibleForBTSmartRoutingConsideration_error_(void *a1, const char *a2, ...)
{
  return [a1 setEligibleForBTSmartRoutingConsideration:error:];
}

id objc_msgSend_setEnableTimeTrackingInView_(void *a1, const char *a2, ...)
{
  return [a1 setEnableTimeTrackingInView:];
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:];
}

id objc_msgSend_setEnabled_isHidden_userInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:isHidden:userInteractionEnabled:];
}

id objc_msgSend_setEnabledState_(void *a1, const char *a2, ...)
{
  return [a1 setEnabledState:];
}

id objc_msgSend_setEnhanced_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 setEnhanced:forUUID:];
}

id objc_msgSend_setEnhanced_ofRecording_(void *a1, const char *a2, ...)
{
  return [a1 setEnhanced:ofRecording:];
}

id objc_msgSend_setEntity_(void *a1, const char *a2, ...)
{
  return [a1 setEntity:];
}

id objc_msgSend_setEraseButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setEraseButtonItem:];
}

id objc_msgSend_setEraseRecordingsButton_(void *a1, const char *a2, ...)
{
  return [a1 setEraseRecordingsButton:];
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return [a1 setExcludedActivityTypes:];
}

id objc_msgSend_setExpiration_(void *a1, const char *a2, ...)
{
  return [a1 setExpiration:];
}

id objc_msgSend_setFailedFirstRenderCalculationAttempt_(void *a1, const char *a2, ...)
{
  return [a1 setFailedFirstRenderCalculationAttempt:];
}

id objc_msgSend_setFavorite_forRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 setFavorite:forRecordingWithUUID:];
}

id objc_msgSend_setFavorite_forRecordingsWithUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 setFavorite:forRecordingsWithUUIDs:];
}

id objc_msgSend_setFavorite_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 setFavorite:forUUID:];
}

id objc_msgSend_setFavorite_forUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 setFavorite:forUUIDs:];
}

id objc_msgSend_setFavorite_ofRecording_(void *a1, const char *a2, ...)
{
  return [a1 setFavorite:ofRecording:];
}

id objc_msgSend_setFavoriteButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setFavoriteButtonItem:];
}

id objc_msgSend_setFetchBatchSize_(void *a1, const char *a2, ...)
{
  return [a1 setFetchBatchSize:];
}

id objc_msgSend_setFileName_(void *a1, const char *a2, ...)
{
  return [a1 setFileName:];
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return _[a1 setFill];
}

id objc_msgSend_setFillColor_(void *a1, const char *a2, ...)
{
  return [a1 setFillColor:];
}

id objc_msgSend_setFillColor_animated_(void *a1, const char *a2, ...)
{
  return [a1 setFillColor:animated:];
}

id objc_msgSend_setFixedOverviewWaveformContainerView_(void *a1, const char *a2, ...)
{
  return [a1 setFixedOverviewWaveformContainerView:];
}

id objc_msgSend_setFixedOverviewWaveformView_(void *a1, const char *a2, ...)
{
  return [a1 setFixedOverviewWaveformView:];
}

id objc_msgSend_setFlexBarItem_(void *a1, const char *a2, ...)
{
  return [a1 setFlexBarItem:];
}

id objc_msgSend_setFocusDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setFocusDisabled:];
}

id objc_msgSend_setFolder_(void *a1, const char *a2, ...)
{
  return [a1 setFolder:];
}

id objc_msgSend_setFolderIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 setFolderIndexPath:];
}

id objc_msgSend_setFolderName_(void *a1, const char *a2, ...)
{
  return [a1 setFolderName:];
}

id objc_msgSend_setFolderSelectionContainerViewController_(void *a1, const char *a2, ...)
{
  return [a1 setFolderSelectionContainerViewController:];
}

id objc_msgSend_setFolderSelectionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setFolderSelectionDelegate:];
}

id objc_msgSend_setFolderTitle_(void *a1, const char *a2, ...)
{
  return [a1 setFolderTitle:];
}

id objc_msgSend_setFolderType_(void *a1, const char *a2, ...)
{
  return [a1 setFolderType:];
}

id objc_msgSend_setFolderTypeOfSourceFolder_(void *a1, const char *a2, ...)
{
  return [a1 setFolderTypeOfSourceFolder:];
}

id objc_msgSend_setFolderUUID_(void *a1, const char *a2, ...)
{
  return [a1 setFolderUUID:];
}

id objc_msgSend_setFoldersController_(void *a1, const char *a2, ...)
{
  return [a1 setFoldersController:];
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return [a1 setFont:];
}

id objc_msgSend_setFontColor_(void *a1, const char *a2, ...)
{
  return [a1 setFontColor:];
}

id objc_msgSend_setFontSize_(void *a1, const char *a2, ...)
{
  return [a1 setFontSize:];
}

id objc_msgSend_setForceDisableRecordingControl_(void *a1, const char *a2, ...)
{
  return [a1 setForceDisableRecordingControl:];
}

id objc_msgSend_setForegroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setForegroundColor:];
}

id objc_msgSend_setForegroundCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setForegroundCompletionBlock:];
}

id objc_msgSend_setFormattedDate_(void *a1, const char *a2, ...)
{
  return [a1 setFormattedDate:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setFrameLength_(void *a1, const char *a2, ...)
{
  return [a1 setFrameLength:];
}

id objc_msgSend_setFrameStallSkipRequest_(void *a1, const char *a2, ...)
{
  return [a1 setFrameStallSkipRequest:];
}

id objc_msgSend_setFrequentUpdatesSegmentUpdatesExpectedHint_(void *a1, const char *a2, ...)
{
  return [a1 setFrequentUpdatesSegmentUpdatesExpectedHint:];
}

id objc_msgSend_setFromActivityType_(void *a1, const char *a2, ...)
{
  return [a1 setFromActivityType:];
}

id objc_msgSend_setFromSubType_(void *a1, const char *a2, ...)
{
  return [a1 setFromSubType:];
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return [a1 setFromValue:];
}

id objc_msgSend_setFullScreenWaveFormHeight_(void *a1, const char *a2, ...)
{
  return [a1 setFullScreenWaveFormHeight:];
}

id objc_msgSend_setGutterWidth_(void *a1, const char *a2, ...)
{
  return [a1 setGutterWidth:];
}

id objc_msgSend_setHasCustomizedPlaybackSettings_(void *a1, const char *a2, ...)
{
  return [a1 setHasCustomizedPlaybackSettings:];
}

id objc_msgSend_setHasMetTimeThreshold_(void *a1, const char *a2, ...)
{
  return [a1 setHasMetTimeThreshold:];
}

id objc_msgSend_setHasMultipleTracks_(void *a1, const char *a2, ...)
{
  return [a1 setHasMultipleTracks:];
}

id objc_msgSend_setHasProcessedSegments_(void *a1, const char *a2, ...)
{
  return [a1 setHasProcessedSegments:];
}

id objc_msgSend_setHasTranscription_(void *a1, const char *a2, ...)
{
  return [a1 setHasTranscription:];
}

id objc_msgSend_setHeaderMode_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderMode:];
}

id objc_msgSend_setHeight_(void *a1, const char *a2, ...)
{
  return [a1 setHeight:];
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return [a1 setHidden:];
}

id objc_msgSend_setHideBackButton_(void *a1, const char *a2, ...)
{
  return [a1 setHideBackButton:];
}

id objc_msgSend_setHideLeadingBarButtons_(void *a1, const char *a2, ...)
{
  return [a1 setHideLeadingBarButtons:];
}

id objc_msgSend_setHideNavigationTitle_(void *a1, const char *a2, ...)
{
  return [a1 setHideNavigationTitle:];
}

id objc_msgSend_setHideStandardTitle_(void *a1, const char *a2, ...)
{
  return [a1 setHideStandardTitle:];
}

id objc_msgSend_setHideTrackSwitch_(void *a1, const char *a2, ...)
{
  return [a1 setHideTrackSwitch:];
}

id objc_msgSend_setHideTrailingBarButtons_(void *a1, const char *a2, ...)
{
  return [a1 setHideTrailingBarButtons:];
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return [a1 setHidesBackButton:];
}

id objc_msgSend_setHidesSearchBarWhenScrolling_(void *a1, const char *a2, ...)
{
  return [a1 setHidesSearchBarWhenScrolling:];
}

id objc_msgSend_setHitTestsAsOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setHitTestsAsOpaque:];
}

id objc_msgSend_setHorizontalDistribution_(void *a1, const char *a2, ...)
{
  return [a1 setHorizontalDistribution:];
}

id objc_msgSend_setHostViewHeight_(void *a1, const char *a2, ...)
{
  return [a1 setHostViewHeight:];
}

id objc_msgSend_setHostedView_(void *a1, const char *a2, ...)
{
  return [a1 setHostedView:];
}

id objc_msgSend_setHostedViewController_(void *a1, const char *a2, ...)
{
  return [a1 setHostedViewController:];
}

id objc_msgSend_setICloudSyncConfirmationAlertController_(void *a1, const char *a2, ...)
{
  return [a1 setICloudSyncConfirmationAlertController:];
}

id objc_msgSend_setIcon_(void *a1, const char *a2, ...)
{
  return [a1 setIcon:];
}

id objc_msgSend_setIconImage_(void *a1, const char *a2, ...)
{
  return [a1 setIconImage:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return [a1 setImage:forState:];
}

id objc_msgSend_setImagePadding_(void *a1, const char *a2, ...)
{
  return [a1 setImagePadding:];
}

id objc_msgSend_setImageSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setImageSymbolConfiguration:];
}

id objc_msgSend_setInDidSelect_(void *a1, const char *a2, ...)
{
  return [a1 setInDidSelect:];
}

id objc_msgSend_setInPointToCurrentTime(void *a1, const char *a2, ...)
{
  return _[a1 setInPointToCurrentTime];
}

id objc_msgSend_setInactiveSliceStack_(void *a1, const char *a2, ...)
{
  return [a1 setInactiveSliceStack];
}

id objc_msgSend_setIncludeTopLevelView_(void *a1, const char *a2, ...)
{
  return [a1 setIncludeTopLevelView:];
}

id objc_msgSend_setIndexPathOfSelectionDuringEditing_(void *a1, const char *a2, ...)
{
  return [a1 setIndexPathOfSelectionDuringEditing:];
}

id objc_msgSend_setInnerColor_(void *a1, const char *a2, ...)
{
  return [a1 setInnerColor:];
}

id objc_msgSend_setInnerStateLayer_(void *a1, const char *a2, ...)
{
  return [a1 setInnerStateLayer:];
}

id objc_msgSend_setInsertMode_(void *a1, const char *a2, ...)
{
  return [a1 setInsertMode:];
}

id objc_msgSend_setInternalRecording_(void *a1, const char *a2, ...)
{
  return [a1 setInternalRecording:];
}

id objc_msgSend_setIntrinsicHeight_(void *a1, const char *a2, ...)
{
  return [a1 setIntrinsicHeight:];
}

id objc_msgSend_setIoStarted_(void *a1, const char *a2, ...)
{
  return [a1 setIoStarted:];
}

id objc_msgSend_setIsAccessibilityElement_(void *a1, const char *a2, ...)
{
  return [a1 setIsAccessibilityElement:];
}

id objc_msgSend_setIsActionButtonInitiated_(void *a1, const char *a2, ...)
{
  return [a1 setIsActionButtonInitiated:];
}

id objc_msgSend_setIsCollectionViewInEditMode_(void *a1, const char *a2, ...)
{
  return [a1 setIsCollectionViewInEditMode:];
}

id objc_msgSend_setIsCompactView_(void *a1, const char *a2, ...)
{
  return [a1 setIsCompactView:];
}

id objc_msgSend_setIsDuringMove_(void *a1, const char *a2, ...)
{
  return [a1 setIsDuringMove:];
}

id objc_msgSend_setIsEditMode_(void *a1, const char *a2, ...)
{
  return [a1 setIsEditMode:];
}

id objc_msgSend_setIsEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setIsEnabled:];
}

id objc_msgSend_setIsEnhanced_(void *a1, const char *a2, ...)
{
  return [a1 setIsEnhanced:];
}

id objc_msgSend_setIsFavorite_(void *a1, const char *a2, ...)
{
  return [a1 setIsFavorite:];
}

id objc_msgSend_setIsInForeground_(void *a1, const char *a2, ...)
{
  return [a1 setIsInForeground:];
}

id objc_msgSend_setIsInactive_(void *a1, const char *a2, ...)
{
  return [a1 setIsInactive:];
}

id objc_msgSend_setIsLiveWaveform_(void *a1, const char *a2, ...)
{
  return [a1 setIsLiveWaveform:];
}

id objc_msgSend_setIsNewRecording_(void *a1, const char *a2, ...)
{
  return [a1 setIsNewRecording:];
}

id objc_msgSend_setIsOverview_(void *a1, const char *a2, ...)
{
  return [a1 setIsOverview:];
}

id objc_msgSend_setIsPlayBarOnlyMode_(void *a1, const char *a2, ...)
{
  return [a1 setIsPlayBarOnlyMode:];
}

id objc_msgSend_setIsPlayback_(void *a1, const char *a2, ...)
{
  return [a1 setIsPlayback:];
}

id objc_msgSend_setIsPlaying_(void *a1, const char *a2, ...)
{
  return [a1 setIsPlaying:];
}

id objc_msgSend_setIsRecentlyDeleted_(void *a1, const char *a2, ...)
{
  return [a1 setIsRecentlyDeleted:];
}

id objc_msgSend_setIsRecording_(void *a1, const char *a2, ...)
{
  return [a1 setIsRecording:];
}

id objc_msgSend_setIsRecordingViewHidden_(void *a1, const char *a2, ...)
{
  return [a1 setIsRecordingViewHidden:];
}

id objc_msgSend_setIsReversed_(void *a1, const char *a2, ...)
{
  return [a1 setIsReversed:];
}

id objc_msgSend_setIsSelectingCellForFocusUpdate_(void *a1, const char *a2, ...)
{
  return [a1 setIsSelectingCellForFocusUpdate:];
}

id objc_msgSend_setIsSetup_(void *a1, const char *a2, ...)
{
  return [a1 setIsSetup:];
}

id objc_msgSend_setIsSyncingViewsToState_(void *a1, const char *a2, ...)
{
  return [a1 setIsSyncingViewsToState:];
}

id objc_msgSend_setIsToggled_(void *a1, const char *a2, ...)
{
  return [a1 setIsToggled:];
}

id objc_msgSend_setIsTranscriptViewDisplayed_(void *a1, const char *a2, ...)
{
  return [a1 setIsTranscriptViewDisplayed:];
}

id objc_msgSend_setIsTransitioningBetweenVisibleColumnStates_(void *a1, const char *a2, ...)
{
  return [a1 setIsTransitioningBetweenVisibleColumnStates:];
}

id objc_msgSend_setIsUpdatingSearchString_(void *a1, const char *a2, ...)
{
  return [a1 setIsUpdatingSearchString:];
}

id objc_msgSend_setItemSeparatorHandler_(void *a1, const char *a2, ...)
{
  return [a1 setItemSeparatorHandler:];
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return [a1 setItems:];
}

id objc_msgSend_setKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 setKeyPath:];
}

id objc_msgSend_setKnobWidthMultiplier_(void *a1, const char *a2, ...)
{
  return [a1 setKnobWidthMultiplier:];
}

id objc_msgSend_setLabelConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setLabelConfiguration:];
}

id objc_msgSend_setLabelYOffset_(void *a1, const char *a2, ...)
{
  return [a1 setLabelYOffset:];
}

id objc_msgSend_setLargeContentTitle_(void *a1, const char *a2, ...)
{
  return [a1 setLargeContentTitle:];
}

id objc_msgSend_setLargeTitleDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setLargeTitleDisplayMode:];
}

id objc_msgSend_setLayerMix_(void *a1, const char *a2, ...)
{
  return [a1 setLayerMix:];
}

id objc_msgSend_setLayerMix_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 setLayerMix:forUUID:];
}

id objc_msgSend_setLayoutMarginsRelativeArrangement_(void *a1, const char *a2, ...)
{
  return [a1 setLayoutMarginsRelativeArrangement:];
}

id objc_msgSend_setLayoutSize_withContentPriority_(void *a1, const char *a2, ...)
{
  return [a1 setLayoutSize:withContentPriority:];
}

id objc_msgSend_setLeadingPlatterWaveformView_(void *a1, const char *a2, ...)
{
  return [a1 setLeadingPlatterWaveformView:];
}

id objc_msgSend_setLeadingSwipeActionsConfigurationProvider_(void *a1, const char *a2, ...)
{
  return [a1 setLeadingSwipeActionsConfigurationProvider:];
}

id objc_msgSend_setLeftBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setLeftBarButtonItem:];
}

id objc_msgSend_setLength_(void *a1, const char *a2, ...)
{
  return [a1 setLength:];
}

id objc_msgSend_setLibraryActionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setLibraryActionHandler:];
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return [a1 setLineBreakMode:];
}

id objc_msgSend_setLineWidth_(void *a1, const char *a2, ...)
{
  return [a1 setLineWidth:];
}

id objc_msgSend_setLiveTranscription_(void *a1, const char *a2, ...)
{
  return [a1 setLiveTranscription:];
}

id objc_msgSend_setLocalContext_(void *a1, const char *a2, ...)
{
  return [a1 setLocalContext:];
}

id objc_msgSend_setLocalObject_(void *a1, const char *a2, ...)
{
  return [a1 setLocalObject:];
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return [a1 setLocale:];
}

id objc_msgSend_setLongPressRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 setLongPressRecognizer:];
}

id objc_msgSend_setLookToDictateEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setLookToDictateEnabled:];
}

id objc_msgSend_setLooping_(void *a1, const char *a2, ...)
{
  return [a1 setLooping:];
}

id objc_msgSend_setLooping_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 setLooping:forUUID:];
}

id objc_msgSend_setMachElapsedRecordingTime_(void *a1, const char *a2, ...)
{
  return [a1 setMachElapsedRecordingTime:];
}

id objc_msgSend_setMainContainerStackView_(void *a1, const char *a2, ...)
{
  return [a1 setMainContainerStackView:];
}

id objc_msgSend_setMainUndoManager_(void *a1, const char *a2, ...)
{
  return [a1 setMainUndoManager:];
}

id objc_msgSend_setMainViewController_(void *a1, const char *a2, ...)
{
  return [a1 setMainViewController:];
}

id objc_msgSend_setMainViewControllerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setMainViewControllerDelegate:];
}

id objc_msgSend_setMarkerClippingRange_(void *a1, const char *a2, ...)
{
  return [a1 setMarkerClippingRange:];
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setMasksToBounds:];
}

id objc_msgSend_setMass_(void *a1, const char *a2, ...)
{
  return [a1 setMass:];
}

id objc_msgSend_setMaximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumContentSizeCategory:];
}

id objc_msgSend_setMaximumLayoutSize_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumLayoutSize:];
}

id objc_msgSend_setMaximumPrimaryColumnWidth_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumPrimaryColumnWidth:];
}

id objc_msgSend_setMaximumSupplementaryColumnWidth_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumSupplementaryColumnWidth:];
}

id objc_msgSend_setMaximumTrackImage_forState_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumTrackImage:forState:];
}

id objc_msgSend_setMaximumValue_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumValue:];
}

id objc_msgSend_setMaximumValueImage_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumValueImage:];
}

id objc_msgSend_setMaximumZoomScale_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumZoomScale:];
}

id objc_msgSend_setMenu_(void *a1, const char *a2, ...)
{
  return [a1 setMenu:];
}

id objc_msgSend_setMicaState_(void *a1, const char *a2, ...)
{
  return [a1 setMicaState:];
}

id objc_msgSend_setMinTimeLabelWidth_(void *a1, const char *a2, ...)
{
  return [a1 setMinTimeLabelWidth:];
}

id objc_msgSend_setMinimalAndromedaPlatterWaveformView_(void *a1, const char *a2, ...)
{
  return [a1 setMinimalAndromedaPlatterWaveformView:];
}

id objc_msgSend_setMinimalCheckmarkView_(void *a1, const char *a2, ...)
{
  return [a1 setMinimalCheckmarkView:];
}

id objc_msgSend_setMinimalPlatterWaveformView_(void *a1, const char *a2, ...)
{
  return [a1 setMinimalPlatterWaveformView:];
}

id objc_msgSend_setMinimalViewContainer_(void *a1, const char *a2, ...)
{
  return [a1 setMinimalViewContainer:];
}

id objc_msgSend_setMinimumHeight_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumHeight:];
}

id objc_msgSend_setMinimumLayoutSize_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumLayoutSize:];
}

id objc_msgSend_setMinimumPressDuration_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumPressDuration:];
}

id objc_msgSend_setMinimumPrimaryColumnWidth_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumPrimaryColumnWidth:];
}

id objc_msgSend_setMinimumSupplementaryColumnWidth_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumSupplementaryColumnWidth:];
}

id objc_msgSend_setMinimumTrackImage_forState_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumTrackImage:forState:];
}

id objc_msgSend_setMinimumValue_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumValue:];
}

id objc_msgSend_setMinimumValueImage_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumValueImage:];
}

id objc_msgSend_setMinimumZoomScale_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumZoomScale:];
}

id objc_msgSend_setModalInPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setModalInPresentation:];
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationStyle:];
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return [a1 setMode:];
}

id objc_msgSend_setMoreActionsAndPlaybackSettingsButtonsHidden_(void *a1, const char *a2, ...)
{
  return [a1 setMoreActionsAndPlaybackSettingsButtonsHidden:];
}

id objc_msgSend_setMoreActionsButton_(void *a1, const char *a2, ...)
{
  return [a1 setMoreActionsButton:];
}

id objc_msgSend_setMoreButton_(void *a1, const char *a2, ...)
{
  return [a1 setMoreButton:];
}

id objc_msgSend_setMoreButtonMenuCreator_(void *a1, const char *a2, ...)
{
  return [a1 setMoreButtonMenuCreator:];
}

id objc_msgSend_setMoreOptionsButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setMoreOptionsButtonItem:];
}

id objc_msgSend_setMoveToFolderButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setMoveToFolderButtonItem:];
}

id objc_msgSend_setMultiTrackIndicatorImageView_(void *a1, const char *a2, ...)
{
  return [a1 setMultiTrackIndicatorImageView:];
}

id objc_msgSend_setMultipleTouchEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setMultipleTouchEnabled:];
}

id objc_msgSend_setMuted_(void *a1, const char *a2, ...)
{
  return [a1 setMuted:];
}

id objc_msgSend_setMutedTrackIndexWithMutedIndex_(void *a1, const char *a2, ...)
{
  return [a1 setMutedTrackIndexWithMutedIndex:];
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return [a1 setName:];
}

id objc_msgSend_setNamedStateLabel_(void *a1, const char *a2, ...)
{
  return [a1 setNamedStateLabel:];
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:];
}

id objc_msgSend_setNeedsCloseButton_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsCloseButton:];
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsDisplay];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsStatusBarAppearanceUpdate(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsStatusBarAppearanceUpdate];
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateConstraints];
}

id objc_msgSend_setNeedsUpdateContentUnavailableConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateContentUnavailableConfiguration];
}

id objc_msgSend_setNeedsUpdateOfSupportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateOfSupportedInterfaceOrientations];
}

id objc_msgSend_setNextRenderBlock_(void *a1, const char *a2, ...)
{
  return [a1 setNextRenderBlock:];
}

id objc_msgSend_setNowPlayingInfo_(void *a1, const char *a2, ...)
{
  return [a1 setNowPlayingInfo:];
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfLines:];
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:atIndexedSubscript:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setObscuresBackgroundDuringPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setObscuresBackgroundDuringPresentation:];
}

id objc_msgSend_setOldFolderName_(void *a1, const char *a2, ...)
{
  return [a1 setOldFolderName:];
}

id objc_msgSend_setOn_(void *a1, const char *a2, ...)
{
  return [a1 setOn:];
}

id objc_msgSend_setOpacity_(void *a1, const char *a2, ...)
{
  return [a1 setOpacity:];
}

id objc_msgSend_setOpacity_animated_(void *a1, const char *a2, ...)
{
  return [a1 setOpacity:animated:];
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setOpaque:];
}

id objc_msgSend_setOrientation_animated_(void *a1, const char *a2, ...)
{
  return [a1 setOrientation:animated:];
}

id objc_msgSend_setOutPointToCurrentTime(void *a1, const char *a2, ...)
{
  return _[a1 setOutPointToCurrentTime];
}

id objc_msgSend_setOuterColor_(void *a1, const char *a2, ...)
{
  return [a1 setOuterColor:];
}

id objc_msgSend_setOuterRingLayer_(void *a1, const char *a2, ...)
{
  return [a1 setOuterRingLayer:];
}

id objc_msgSend_setOuterRingThickness_(void *a1, const char *a2, ...)
{
  return [a1 setOuterRingThickness:];
}

id objc_msgSend_setOverdubbing_(void *a1, const char *a2, ...)
{
  return [a1 setOverdubbing:];
}

id objc_msgSend_setOverrideUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 setOverrideUserInterfaceStyle:];
}

id objc_msgSend_setOverviewBeginTimeLabel_(void *a1, const char *a2, ...)
{
  return [a1 setOverviewBeginTimeLabel:];
}

id objc_msgSend_setOverviewEndTimeLabel_(void *a1, const char *a2, ...)
{
  return [a1 setOverviewEndTimeLabel:];
}

id objc_msgSend_setOverviewTrimHandleStyle_(void *a1, const char *a2, ...)
{
  return [a1 setOverviewTrimHandleStyle:];
}

id objc_msgSend_setOverviewUnitsPerSecond_(void *a1, const char *a2, ...)
{
  return [a1 setOverviewUnitsPerSecond:];
}

id objc_msgSend_setOverviewWaveformContainerBottomToWindowSafeAreaBottomConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setOverviewWaveformContainerBottomToWindowSafeAreaBottomConstraint:];
}

id objc_msgSend_setOverviewWaveformViewController_(void *a1, const char *a2, ...)
{
  return [a1 setOverviewWaveformViewController:];
}

id objc_msgSend_setPackageManager_(void *a1, const char *a2, ...)
{
  return [a1 setPackageManager:];
}

id objc_msgSend_setPackageName_(void *a1, const char *a2, ...)
{
  return [a1 setPackageName:];
}

id objc_msgSend_setPackageView_(void *a1, const char *a2, ...)
{
  return [a1 setPackageView:];
}

id objc_msgSend_setParentSplitViewController_(void *a1, const char *a2, ...)
{
  return [a1 setParentSplitViewController:];
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return [a1 setPath:];
}

id objc_msgSend_setPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 setPath:animated:];
}

id objc_msgSend_setPath_fromPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 setPath:fromPath:animated:];
}

id objc_msgSend_setPauseShapeLayer_(void *a1, const char *a2, ...)
{
  return [a1 setPauseShapeLayer:];
}

id objc_msgSend_setPaused_(void *a1, const char *a2, ...)
{
  return [a1 setPaused:];
}

id objc_msgSend_setPayloadType_(void *a1, const char *a2, ...)
{
  return [a1 setPayloadType:];
}

id objc_msgSend_setPerItemMetadataProvider_(void *a1, const char *a2, ...)
{
  return [a1 setPerItemMetadataProvider:];
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholder:];
}

id objc_msgSend_setPlatterState_(void *a1, const char *a2, ...)
{
  return [a1 setPlatterState:];
}

id objc_msgSend_setPlayBarOnly_(void *a1, const char *a2, ...)
{
  return [a1 setPlayBarOnly];
}

id objc_msgSend_setPlayControlState_(void *a1, const char *a2, ...)
{
  return [a1 setPlayControlState:];
}

id objc_msgSend_setPlayPauseBusyContainerView_(void *a1, const char *a2, ...)
{
  return [a1 setPlayPauseBusyContainerView:];
}

id objc_msgSend_setPlayWidthMultiplier_(void *a1, const char *a2, ...)
{
  return [a1 setPlayWidthMultiplier:];
}

id objc_msgSend_setPlayable_(void *a1, const char *a2, ...)
{
  return [a1 setPlayable:];
}

id objc_msgSend_setPlayableRange_(void *a1, const char *a2, ...)
{
  return [a1 setPlayableRange:];
}

id objc_msgSend_setPlayableRangeEndTime_(void *a1, const char *a2, ...)
{
  return [a1 setPlayableRangeEndTime:];
}

id objc_msgSend_setPlaybackContainerViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackContainerViewController:];
}

id objc_msgSend_setPlaybackError_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackError:];
}

id objc_msgSend_setPlaybackSettings_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackSettings:];
}

id objc_msgSend_setPlaybackSettingsButton_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackSettingsButton:];
}

id objc_msgSend_setPlaybackSettingsButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackSettingsButtonItem:];
}

id objc_msgSend_setPlaybackSettingsCollectionViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackSettingsCollectionViewController:];
}

id objc_msgSend_setPlaybackSpeed_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackSpeed:forUUID:];
}

id objc_msgSend_setPlaybackState_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackState:];
}

id objc_msgSend_setPlaybackToken_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackToken:];
}

id objc_msgSend_setPlaybackViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackViewController:];
}

id objc_msgSend_setPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 setPlayerItem:];
}

id objc_msgSend_setPlayerTime_(void *a1, const char *a2, ...)
{
  return [a1 setPlayerTime:];
}

id objc_msgSend_setPlaying_(void *a1, const char *a2, ...)
{
  return [a1 setPlaying:];
}

id objc_msgSend_setPointerInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setPointerInteractionEnabled:];
}

id objc_msgSend_setPosition_(void *a1, const char *a2, ...)
{
  return [a1 setPosition:];
}

id objc_msgSend_setPossibleTitles_(void *a1, const char *a2, ...)
{
  return [a1 setPossibleTitles:];
}

id objc_msgSend_setPreEditingName_(void *a1, const char *a2, ...)
{
  return [a1 setPreEditingName:];
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setPredicate:];
}

id objc_msgSend_setPreferredContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredContentSize:];
}

id objc_msgSend_setPreferredDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredDisplayMode:];
}

id objc_msgSend_setPreferredFrameRateRange_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredFrameRateRange:];
}

id objc_msgSend_setPreferredHeight_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredHeight:];
}

id objc_msgSend_setPreferredInputOrientation_error_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredInputOrientation:error:];
}

id objc_msgSend_setPreferredIntervals_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredIntervals:];
}

id objc_msgSend_setPreferredPolarPattern_error_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredPolarPattern:error:];
}

id objc_msgSend_setPreferredSplitBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredSplitBehavior:];
}

id objc_msgSend_setPreferredSymbolConfiguration_forImageInState_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredSymbolConfiguration:forImageInState:];
}

id objc_msgSend_setPreferredSymbolConfigurationForImage_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredSymbolConfigurationForImage:];
}

id objc_msgSend_setPrefersGrabberVisible_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersGrabberVisible:];
}

id objc_msgSend_setPrefersLargeTitles_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersLargeTitles:];
}

id objc_msgSend_setPrefersNoInterruptionsFromSystemAlerts_error_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersNoInterruptionsFromSystemAlerts:error:];
}

id objc_msgSend_setPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationStyle:];
}

id objc_msgSend_setPresentedCardViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedCardViewController:];
}

id objc_msgSend_setPresentedConfirmationController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedConfirmationController:];
}

id objc_msgSend_setPresentedControl_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedControl:];
}

id objc_msgSend_setPresentedController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedController:];
}

id objc_msgSend_setPresentedControlsOptions_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedControlsOptions:];
}

id objc_msgSend_setPresentedPlaybackSettingsViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedPlaybackSettingsViewController:];
}

id objc_msgSend_setPresentedSelectFolderViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedSelectFolderViewController:];
}

id objc_msgSend_setPresentingDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setPresentingDelegate:];
}

id objc_msgSend_setPresentingPlaybackSettingsViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentingPlaybackSettingsViewController:];
}

id objc_msgSend_setPresentsWithGesture_(void *a1, const char *a2, ...)
{
  return [a1 setPresentsWithGesture:];
}

id objc_msgSend_setPreservesSuperviewLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setPreservesSuperviewLayoutMargins:];
}

id objc_msgSend_setPressed_(void *a1, const char *a2, ...)
{
  return [a1 setPressed:];
}

id objc_msgSend_setPrimaryBackgroundStyle_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryBackgroundStyle:];
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return [a1 setPriority:];
}

id objc_msgSend_setProcessingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setProcessingEnabled:];
}

id objc_msgSend_setProcessor_(void *a1, const char *a2, ...)
{
  return [a1 setProcessor:];
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return [a1 setProgress:];
}

id objc_msgSend_setProgressColor_(void *a1, const char *a2, ...)
{
  return [a1 setProgressColor:];
}

id objc_msgSend_setProgressIndicatorColor_(void *a1, const char *a2, ...)
{
  return [a1 setProgressIndicatorColor:];
}

id objc_msgSend_setProgressLayer_(void *a1, const char *a2, ...)
{
  return [a1 setProgressLayer:];
}

id objc_msgSend_setProgressOverlay_(void *a1, const char *a2, ...)
{
  return [a1 setProgressOverlay:];
}

id objc_msgSend_setPropertiesToFetch_(void *a1, const char *a2, ...)
{
  return [a1 setPropertiesToFetch:];
}

id objc_msgSend_setPunchInTime_(void *a1, const char *a2, ...)
{
  return [a1 setPunchInTime:];
}

id objc_msgSend_setRank_(void *a1, const char *a2, ...)
{
  return [a1 setRank:];
}

id objc_msgSend_setRasterizationScale_(void *a1, const char *a2, ...)
{
  return [a1 setRasterizationScale:];
}

id objc_msgSend_setRate_(void *a1, const char *a2, ...)
{
  return [a1 setRate:];
}

id objc_msgSend_setRecentlyDeleted_(void *a1, const char *a2, ...)
{
  return [a1 setRecentlyDeleted:];
}

id objc_msgSend_setRecordAccessibilityLabel(void *a1, const char *a2, ...)
{
  return _[a1 setRecordAccessibilityLabel];
}

id objc_msgSend_setRecordButton_(void *a1, const char *a2, ...)
{
  return [a1 setRecordButton:];
}

id objc_msgSend_setRecordButtonCenterXToLeadingConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setRecordButtonCenterXToLeadingConstraint:];
}

id objc_msgSend_setRecordButtonCenterXToViewCenterXConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setRecordButtonCenterXToViewCenterXConstraint:];
}

id objc_msgSend_setRecordButtonCenterYConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setRecordButtonCenterYConstraint:];
}

id objc_msgSend_setRecordButtonFactory_(void *a1, const char *a2, ...)
{
  return [a1 setRecordButtonFactory:];
}

id objc_msgSend_setRecordButtonRepository_(void *a1, const char *a2, ...)
{
  return [a1 setRecordButtonRepository:];
}

id objc_msgSend_setRecording_(void *a1, const char *a2, ...)
{
  return [a1 setRecording:];
}

id objc_msgSend_setRecordingComposition_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingComposition:];
}

id objc_msgSend_setRecordingControlState_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingControlState:];
}

id objc_msgSend_setRecordingControlState_animated_force_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingControlState:animated:force:];
}

id objc_msgSend_setRecordingDate_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingDate:];
}

id objc_msgSend_setRecordingDescriptionViewDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingDescriptionViewDelegate:];
}

id objc_msgSend_setRecordingDuration_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingDuration:];
}

id objc_msgSend_setRecordingDuration_withHiddenLabel_withHiddenSubcomponents_isDurationLabelAX_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingDuration:withHiddenLabel:withHiddenSubcomponents:isDurationLabelAX:];
}

id objc_msgSend_setRecordingDurationAtStartTime_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingDurationAtStartTime:];
}

id objc_msgSend_setRecordingError_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingError:];
}

id objc_msgSend_setRecordingErrorHandler_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingErrorHandler:];
}

id objc_msgSend_setRecordingID_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingID:];
}

id objc_msgSend_setRecordingStartTimeInfo_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingStartTimeInfo:];
}

id objc_msgSend_setRecordingTimeAtStartTime_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingTimeAtStartTime:];
}

id objc_msgSend_setRecordingTitle_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingTitle:];
}

id objc_msgSend_setRecordingTitleEditingTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingTitleEditingTintColor:];
}

id objc_msgSend_setRecordingTitleTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingTitleTextColor:];
}

id objc_msgSend_setRecordingToken_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingToken:];
}

id objc_msgSend_setRecordingURL_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingURL:];
}

id objc_msgSend_setRecordingUUID_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingUUID:];
}

id objc_msgSend_setRecordingView_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingView:];
}

id objc_msgSend_setRecordingViewBottomConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingViewBottomConstraint:];
}

id objc_msgSend_setRecordingViewController_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingViewController:];
}

id objc_msgSend_setRecordingViewControllerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingViewControllerDelegate:];
}

id objc_msgSend_setRecordingViewState_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingViewState:];
}

id objc_msgSend_setRecordingViewState_animated_force_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingViewState:animated:force:];
}

id objc_msgSend_setRecordingsCollectionViewController_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingsCollectionViewController:];
}

id objc_msgSend_setRecordingsCollectionViewControllerWrapperView_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingsCollectionViewControllerWrapperView:];
}

id objc_msgSend_setRecordingsCount_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingsCount:];
}

id objc_msgSend_setRecordingsDataCoordinator_(void *a1, const char *a2, ...)
{
  return [a1 setRecordingsDataCoordinator:];
}

id objc_msgSend_setRecoverButton_(void *a1, const char *a2, ...)
{
  return [a1 setRecoverButton:];
}

id objc_msgSend_setRecoverButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setRecoverButtonItem:];
}

id objc_msgSend_setRecoverRecordingsButton_(void *a1, const char *a2, ...)
{
  return [a1 setRecoverRecordingsButton:];
}

id objc_msgSend_setRegularTickPaths_(void *a1, const char *a2, ...)
{
  return [a1 setRegularTickPaths:];
}

id objc_msgSend_setRegularTrackPaths_(void *a1, const char *a2, ...)
{
  return [a1 setRegularTrackPaths:];
}

id objc_msgSend_setRemoveSilence_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 setRemoveSilence:forUUID:];
}

id objc_msgSend_setRemovedOnCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setRemovedOnCompletion:];
}

id objc_msgSend_setRenameFolderSaveAction_(void *a1, const char *a2, ...)
{
  return [a1 setRenameFolderSaveAction:];
}

id objc_msgSend_setRenderReadyForDraw_(void *a1, const char *a2, ...)
{
  return [a1 setRenderReadyForDraw:];
}

id objc_msgSend_setRenderer_(void *a1, const char *a2, ...)
{
  return [a1 setRenderer:];
}

id objc_msgSend_setRendererDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setRendererDelegate:];
}

id objc_msgSend_setRenderingQueueIsBusy_(void *a1, const char *a2, ...)
{
  return [a1 setRenderingQueueIsBusy:];
}

id objc_msgSend_setRepeatCount_(void *a1, const char *a2, ...)
{
  return [a1 setRepeatCount:];
}

id objc_msgSend_setRepresentsDownloadingFile_(void *a1, const char *a2, ...)
{
  return [a1 setRepresentsDownloadingFile:];
}

id objc_msgSend_setResetChangesBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setResetChangesBarButtonItem:];
}

id objc_msgSend_setResizingDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setResizingDelegate:];
}

id objc_msgSend_setResolvedHighlightColor_(void *a1, const char *a2, ...)
{
  return [a1 setResolvedHighlightColor:];
}

id objc_msgSend_setResolvedMainColor_(void *a1, const char *a2, ...)
{
  return [a1 setResolvedMainColor:];
}

id objc_msgSend_setResolvedMetricsForScene_(void *a1, const char *a2, ...)
{
  return [a1 setResolvedMetricsForScene:];
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItem:];
}

id objc_msgSend_setRightBarButtonItem_animated_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItem:animated:];
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 setRootViewController:];
}

id objc_msgSend_setRowSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setRowSpacing:];
}

id objc_msgSend_setSampleRate_error_(void *a1, const char *a2, ...)
{
  return [a1 setSampleRate:error:];
}

id objc_msgSend_setSampleRateConverterQuality_(void *a1, const char *a2, ...)
{
  return [a1 setSampleRateConverterQuality:];
}

id objc_msgSend_setSaveRecordingAction_(void *a1, const char *a2, ...)
{
  return [a1 setSaveRecordingAction:];
}

id objc_msgSend_setScale_(void *a1, const char *a2, ...)
{
  return [a1 setScale:];
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setScrollEnabled:];
}

id objc_msgSend_setScrubbingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setScrubbingEnabled:];
}

id objc_msgSend_setSearchController_(void *a1, const char *a2, ...)
{
  return [a1 setSearchController:];
}

id objc_msgSend_setSearchResultsUpdater_(void *a1, const char *a2, ...)
{
  return [a1 setSearchResultsUpdater:];
}

id objc_msgSend_setSearchString_(void *a1, const char *a2, ...)
{
  return [a1 setSearchString];
}

id objc_msgSend_setSearchText_(void *a1, const char *a2, ...)
{
  return [a1 setSearchText:];
}

id objc_msgSend_setSecondaryAttributedText_(void *a1, const char *a2, ...)
{
  return [a1 setSecondaryAttributedText:];
}

id objc_msgSend_setSecondaryControlsColor_(void *a1, const char *a2, ...)
{
  return [a1 setSecondaryControlsColor:];
}

id objc_msgSend_setSecondaryText_(void *a1, const char *a2, ...)
{
  return [a1 setSecondaryText:];
}

id objc_msgSend_setSelected_(void *a1, const char *a2, ...)
{
  return [a1 setSelected:];
}

id objc_msgSend_setSelectedDetentIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedDetentIdentifier:];
}

id objc_msgSend_setSelectedTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedTimeRange:];
}

id objc_msgSend_setSelectedTimeRange_animationDuration_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedTimeRange:animationDuration:];
}

id objc_msgSend_setSelectedTimeRange_withAnimationDuration_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedTimeRange:withAnimationDuration:];
}

id objc_msgSend_setSelectedTimeRangeEditingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedTimeRangeEditingEnabled:];
}

id objc_msgSend_setSelectedTimeRangeMinimumDuration_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedTimeRangeMinimumDuration:];
}

id objc_msgSend_setSelectionBackgroundView_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionBackgroundView:];
}

id objc_msgSend_setSelectionBarType_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionBarType:];
}

id objc_msgSend_setSelectionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionDelegate:];
}

id objc_msgSend_setSelectionFollowsFocus_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionFollowsFocus:];
}

id objc_msgSend_setSelectionMode_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionMode:];
}

id objc_msgSend_setSelectionOverlayShouldUseInsertMode_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionOverlayShouldUseInsertMode:];
}

id objc_msgSend_setSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return [a1 setSemanticContentAttribute:];
}

id objc_msgSend_setService_(void *a1, const char *a2, ...)
{
  return [a1 setService:];
}

id objc_msgSend_setSetupBlock_(void *a1, const char *a2, ...)
{
  return [a1 setSetupBlock:];
}

id objc_msgSend_setShadowImage_(void *a1, const char *a2, ...)
{
  return [a1 setShadowImage:];
}

id objc_msgSend_setShadowImage_forToolbarPosition_(void *a1, const char *a2, ...)
{
  return [a1 setShadowImage:forToolbarPosition:];
}

id objc_msgSend_setShareButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setShareButtonItem:];
}

id objc_msgSend_setShareableCompositions_(void *a1, const char *a2, ...)
{
  return [a1 setShareableCompositions:];
}

id objc_msgSend_setSharingStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSharingStyle:];
}

id objc_msgSend_setSheetPresentationState_(void *a1, const char *a2, ...)
{
  return [a1 setSheetPresentationState:];
}

id objc_msgSend_setShortcutItems_(void *a1, const char *a2, ...)
{
  return [a1 setShortcutItems:];
}

id objc_msgSend_setShouldAnimateOnTap_(void *a1, const char *a2, ...)
{
  return [a1 setShouldAnimateOnTap:];
}

id objc_msgSend_setShouldDisplaySiriTipView_(void *a1, const char *a2, ...)
{
  return [a1 setShouldDisplaySiriTipView:];
}

id objc_msgSend_setShouldEnableSave_(void *a1, const char *a2, ...)
{
  return [a1 setShouldEnableSave:];
}

id objc_msgSend_setShouldExecuteCompletionBeforeAction_(void *a1, const char *a2, ...)
{
  return [a1 setShouldExecuteCompletionBeforeAction:];
}

id objc_msgSend_setShouldHideSubseconds_(void *a1, const char *a2, ...)
{
  return [a1 setShouldHideSubseconds:];
}

id objc_msgSend_setShouldOnlyRenderOnScreenTimeLabels_(void *a1, const char *a2, ...)
{
  return [a1 setShouldOnlyRenderOnScreenTimeLabels:];
}

id objc_msgSend_setShouldSaveAsNew_(void *a1, const char *a2, ...)
{
  return [a1 setShouldSaveAsNew:];
}

id objc_msgSend_setShowDownloading_(void *a1, const char *a2, ...)
{
  return [a1 setShowDownloading:];
}

id objc_msgSend_setShowKeyboardAutomatically_(void *a1, const char *a2, ...)
{
  return [a1 setShowKeyboardAutomatically:];
}

id objc_msgSend_setShowPlayBarOnly_(void *a1, const char *a2, ...)
{
  return [a1 setShowPlayBarOnly:];
}

id objc_msgSend_setShowSaving_(void *a1, const char *a2, ...)
{
  return [a1 setShowSaving:];
}

id objc_msgSend_setShowsDoneButton_(void *a1, const char *a2, ...)
{
  return [a1 setShowsDoneButton:];
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsHorizontalScrollIndicator:];
}

id objc_msgSend_setShowsLargeContentViewer_(void *a1, const char *a2, ...)
{
  return [a1 setShowsLargeContentViewer:];
}

id objc_msgSend_setShowsMenuAsPrimaryAction_(void *a1, const char *a2, ...)
{
  return [a1 setShowsMenuAsPrimaryAction:];
}

id objc_msgSend_setShowsSeparators_(void *a1, const char *a2, ...)
{
  return [a1 setShowsSeparators:];
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsVerticalScrollIndicator:];
}

id objc_msgSend_setShuttleBar_(void *a1, const char *a2, ...)
{
  return [a1 setShuttleBar:];
}

id objc_msgSend_setSilenceRemoverEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setSilenceRemoverEnabled:];
}

id objc_msgSend_setSilencing_(void *a1, const char *a2, ...)
{
  return [a1 setSilencing:];
}

id objc_msgSend_setSingleReadLimitInSeconds_(void *a1, const char *a2, ...)
{
  return [a1 setSingleReadLimitInSeconds:];
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return [a1 setSize:];
}

id objc_msgSend_setSizeOfUndoStack_(void *a1, const char *a2, ...)
{
  return [a1 setSizeOfUndoStack:];
}

id objc_msgSend_setSliceColor_(void *a1, const char *a2, ...)
{
  return [a1 setSliceColor:];
}

id objc_msgSend_setSliceIndex_(void *a1, const char *a2, ...)
{
  return [a1 setSliceIndex:];
}

id objc_msgSend_setSliceLayer_(void *a1, const char *a2, ...)
{
  return [a1 setSliceLayer:];
}

id objc_msgSend_setSliceRecyclerStack_(void *a1, const char *a2, ...)
{
  return [a1 setSliceRecyclerStack:];
}

id objc_msgSend_setSliderValue_(void *a1, const char *a2, ...)
{
  return [a1 setSliderValue:];
}

id objc_msgSend_setSnapThresholdPercentage_(void *a1, const char *a2, ...)
{
  return [a1 setSnapThresholdPercentage:];
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 setSortDescriptors:];
}

id objc_msgSend_setSourceFrame_(void *a1, const char *a2, ...)
{
  return [a1 setSourceFrame:];
}

id objc_msgSend_setSourceItem_(void *a1, const char *a2, ...)
{
  return [a1 setSourceItem:];
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return [a1 setSourceRect:];
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return [a1 setSourceView:];
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setSpacing:];
}

id objc_msgSend_setSpecialization_(void *a1, const char *a2, ...)
{
  return [a1 setSpecialization:];
}

id objc_msgSend_setSpeed_(void *a1, const char *a2, ...)
{
  return [a1 setSpeed:];
}

id objc_msgSend_setSplitViewHorizontalSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 setSplitViewHorizontalSizeClass:];
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return [a1 setState:];
}

id objc_msgSend_setState_animated_transitionSpeed_completion_(void *a1, const char *a2, ...)
{
  return [a1 setState:animated:transitionSpeed:completion:];
}

id objc_msgSend_setState_withOptions_completion_(void *a1, const char *a2, ...)
{
  return [a1 setState:withOptions:completion:];
}

id objc_msgSend_setStatusBarHeight_(void *a1, const char *a2, ...)
{
  return [a1 setStatusBarHeight:];
}

id objc_msgSend_setStiffness_(void *a1, const char *a2, ...)
{
  return [a1 setStiffness:];
}

id objc_msgSend_setStopButton_(void *a1, const char *a2, ...)
{
  return [a1 setStopButton:];
}

id objc_msgSend_setStopButtonHeightConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setStopButtonHeightConstraint:];
}

id objc_msgSend_setStopButtonToLeadingConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setStopButtonToLeadingConstraint:];
}

id objc_msgSend_setStopButtonWidthConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setStopButtonWidthConstraint:];
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return [a1 setString:];
}

id objc_msgSend_setStrokeColor_(void *a1, const char *a2, ...)
{
  return [a1 setStrokeColor:];
}

id objc_msgSend_setStrokeColor_animated_(void *a1, const char *a2, ...)
{
  return [a1 setStrokeColor:animated:];
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return [a1 setStyle:];
}

id objc_msgSend_setSubActivityType_(void *a1, const char *a2, ...)
{
  return [a1 setSubActivityType:];
}

id objc_msgSend_setSubPredicate_performingFetch_(void *a1, const char *a2, ...)
{
  return [a1 setSubPredicate:performingFetch:];
}

id objc_msgSend_setSubtitleTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setSubtitleTextColor:];
}

id objc_msgSend_setSuggestedName_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestedName:];
}

id objc_msgSend_setSupportsMove_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsMove:];
}

id objc_msgSend_setSwitchState_(void *a1, const char *a2, ...)
{
  return [a1 setSwitchState:];
}

id objc_msgSend_setSyncRenderOnMainThread_(void *a1, const char *a2, ...)
{
  return [a1 setSyncRenderOnMainThread:];
}

id objc_msgSend_setSystemApertureElementViewControllerProvider_(void *a1, const char *a2, ...)
{
  return [a1 setSystemApertureElementViewControllerProvider:];
}

id objc_msgSend_setTag_(void *a1, const char *a2, ...)
{
  return [a1 setTag:];
}

id objc_msgSend_setTapGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 setTapGestureRecognizer:];
}

id objc_msgSend_setTargetRate_(void *a1, const char *a2, ...)
{
  return [a1 setTargetRate:];
}

id objc_msgSend_setTargetState_(void *a1, const char *a2, ...)
{
  return [a1 setTargetState:];
}

id objc_msgSend_setTargetTime_(void *a1, const char *a2, ...)
{
  return [a1 setTargetTime:];
}

id objc_msgSend_setTargetTrackIndex_(void *a1, const char *a2, ...)
{
  return [a1 setTargetTrackIndex:];
}

id objc_msgSend_setTargetView_(void *a1, const char *a2, ...)
{
  return [a1 setTargetView:];
}

id objc_msgSend_setTccCloudAccess_(void *a1, const char *a2, ...)
{
  return [a1 setTccCloudAccess:];
}

id objc_msgSend_setTeardownBlock_(void *a1, const char *a2, ...)
{
  return [a1 setTeardownBlock:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setTextAlignment:];
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setTextColor:];
}

id objc_msgSend_setTextFieldBeingEdited_(void *a1, const char *a2, ...)
{
  return [a1 setTextFieldBeingEdited:];
}

id objc_msgSend_setTextLabel_(void *a1, const char *a2, ...)
{
  return [a1 setTextLabel:];
}

id objc_msgSend_setThumbImage_forState_(void *a1, const char *a2, ...)
{
  return [a1 setThumbImage:forState:];
}

id objc_msgSend_setTimeController_(void *a1, const char *a2, ...)
{
  return [a1 setTimeController:];
}

id objc_msgSend_setTimeLabelCenterYConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setTimeLabelCenterYConstraint:];
}

id objc_msgSend_setTimeLabelToLeadingConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setTimeLabelToLeadingConstraint:];
}

id objc_msgSend_setTimeLabelToStopButtonConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setTimeLabelToStopButtonConstraint:];
}

id objc_msgSend_setTimeLabelTopToObstructedAreaBottomConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setTimeLabelTopToObstructedAreaBottomConstraint:];
}

id objc_msgSend_setTimeLabelTopToTopConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setTimeLabelTopToTopConstraint:];
}

id objc_msgSend_setTimeRangeInComposition_(void *a1, const char *a2, ...)
{
  return [a1 setTimeRangeInComposition:];
}

id objc_msgSend_setTimeRangeInContentToUse_(void *a1, const char *a2, ...)
{
  return [a1 setTimeRangeInContentToUse:];
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return [a1 setTimeStyle:];
}

id objc_msgSend_setTimeView_(void *a1, const char *a2, ...)
{
  return [a1 setTimeView:];
}

id objc_msgSend_setTimelineGenerator_(void *a1, const char *a2, ...)
{
  return [a1 setTimelineGenerator:];
}

id objc_msgSend_setTimelineSlider_(void *a1, const char *a2, ...)
{
  return [a1 setTimelineSlider:];
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return [a1 setTimingFunction:];
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setTintColor:];
}

id objc_msgSend_setTintedTickPaths_(void *a1, const char *a2, ...)
{
  return [a1 setTintedTickPaths:];
}

id objc_msgSend_setTintedTrackPaths_(void *a1, const char *a2, ...)
{
  return [a1 setTintedTrackPaths:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:forState:];
}

id objc_msgSend_setTitle_ofRecording_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:ofRecording:];
}

id objc_msgSend_setTitleAccessible_(void *a1, const char *a2, ...)
{
  return [a1 setTitleAccessible:];
}

id objc_msgSend_setTitleBase_(void *a1, const char *a2, ...)
{
  return [a1 setTitleBase];
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitleColor:forState:];
}

id objc_msgSend_setTitleEditingAllowed_(void *a1, const char *a2, ...)
{
  return [a1 setTitleEditingAllowed:];
}

id objc_msgSend_setTitleFieldAccessible_(void *a1, const char *a2, ...)
{
  return [a1 setTitleFieldAccessible:];
}

id objc_msgSend_setTitleLabel_(void *a1, const char *a2, ...)
{
  return [a1 setTitleLabel:];
}

id objc_msgSend_setTitleTextAttributes_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitleTextAttributes:forState:];
}

id objc_msgSend_setTitleTextAttributesTransformer_(void *a1, const char *a2, ...)
{
  return [a1 setTitleTextAttributesTransformer:];
}

id objc_msgSend_setTitleTextField_(void *a1, const char *a2, ...)
{
  return [a1 setTitleTextField:];
}

id objc_msgSend_setTitleView_(void *a1, const char *a2, ...)
{
  return [a1 setTitleView:];
}

id objc_msgSend_setToActivityType_(void *a1, const char *a2, ...)
{
  return [a1 setToActivityType:];
}

id objc_msgSend_setToSubType_(void *a1, const char *a2, ...)
{
  return [a1 setToSubType:];
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return [a1 setToValue:];
}

id objc_msgSend_setToggleImage_(void *a1, const char *a2, ...)
{
  return [a1 setToggleImage:];
}

id objc_msgSend_setToolbarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarHidden:];
}

id objc_msgSend_setToolbarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarHidden:animated:];
}

id objc_msgSend_setToolbarItems_animated_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarItems:animated:];
}

id objc_msgSend_setTopCardSpacerView_(void *a1, const char *a2, ...)
{
  return [a1 setTopCardSpacerView:];
}

id objc_msgSend_setTopFullScreenSpacerView_(void *a1, const char *a2, ...)
{
  return [a1 setTopFullScreenSpacerView:];
}

id objc_msgSend_setTopLevelView_(void *a1, const char *a2, ...)
{
  return [a1 setTopLevelView:];
}

id objc_msgSend_setTopSeparatorVisibility_(void *a1, const char *a2, ...)
{
  return [a1 setTopSeparatorVisibility:];
}

id objc_msgSend_setTouch_(void *a1, const char *a2, ...)
{
  return [a1 setTouch:];
}

id objc_msgSend_setTrackInfoRepository_(void *a1, const char *a2, ...)
{
  return [a1 setTrackInfoRepository:];
}

id objc_msgSend_setTrackState_(void *a1, const char *a2, ...)
{
  return [a1 setTrackState:];
}

id objc_msgSend_setTrackVolumes_(void *a1, const char *a2, ...)
{
  return [a1 setTrackVolumes:];
}

id objc_msgSend_setTrackedAssetCurrentTime_(void *a1, const char *a2, ...)
{
  return [a1 setTrackedAssetCurrentTime:];
}

id objc_msgSend_setTrackingOffset_(void *a1, const char *a2, ...)
{
  return [a1 setTrackingOffset:];
}

id objc_msgSend_setTrailingSwipeActionsConfigurationProvider_(void *a1, const char *a2, ...)
{
  return [a1 setTrailingSwipeActionsConfigurationProvider:];
}

id objc_msgSend_setTranscriptAvailableImageView_(void *a1, const char *a2, ...)
{
  return [a1 setTranscriptAvailableImageView:];
}

id objc_msgSend_setTranscriptView_(void *a1, const char *a2, ...)
{
  return [a1 setTranscriptView:];
}

id objc_msgSend_setTranscriptViewCoordinator_(void *a1, const char *a2, ...)
{
  return [a1 setTranscriptViewCoordinator:];
}

id objc_msgSend_setTranscriptViewHost_(void *a1, const char *a2, ...)
{
  return [a1 setTranscriptViewHost:];
}

id objc_msgSend_setTranscriptViewState_(void *a1, const char *a2, ...)
{
  return [a1 setTranscriptViewState:];
}

id objc_msgSend_setTranscriptionButton_(void *a1, const char *a2, ...)
{
  return [a1 setTranscriptionButton:];
}

id objc_msgSend_setTranscriptionButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setTranscriptionButtonItem:];
}

id objc_msgSend_setTranscriptionIsSupported_(void *a1, const char *a2, ...)
{
  return [a1 setTranscriptionIsSupported:];
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return [a1 setTransform:];
}

id objc_msgSend_setTransitioningDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setTransitioningDelegate:];
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTranslatesAutoresizingMaskIntoConstraints:];
}

id objc_msgSend_setTrimButton_(void *a1, const char *a2, ...)
{
  return [a1 setTrimButton:];
}

id objc_msgSend_setTrimButtonsEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setTrimButtonsEnabled:];
}

id objc_msgSend_setTrimDeleteButtonLeftConstantConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setTrimDeleteButtonLeftConstantConstraint:];
}

id objc_msgSend_setTrimEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setTrimEnabled:];
}

id objc_msgSend_setTrimMode_(void *a1, const char *a2, ...)
{
  return [a1 setTrimMode:];
}

id objc_msgSend_setTrimOverviewWaveformContainerView_(void *a1, const char *a2, ...)
{
  return [a1 setTrimOverviewWaveformContainerView:];
}

id objc_msgSend_setTrimOverviewWaveformView_(void *a1, const char *a2, ...)
{
  return [a1 setTrimOverviewWaveformView:];
}

id objc_msgSend_setTrimToSelectionButton_(void *a1, const char *a2, ...)
{
  return [a1 setTrimToSelectionButton:];
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return [a1 setType:];
}

id objc_msgSend_setUUID_(void *a1, const char *a2, ...)
{
  return [a1 setUUID:];
}

id objc_msgSend_setUUIDToSelectAfterDismiss_(void *a1, const char *a2, ...)
{
  return [a1 setUUIDToSelectAfterDismiss];
}

id objc_msgSend_setUndoDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setUndoDisabled:];
}

id objc_msgSend_setUndoManager_(void *a1, const char *a2, ...)
{
  return [a1 setUndoManager:];
}

id objc_msgSend_setUnitsStyle_(void *a1, const char *a2, ...)
{
  return [a1 setUnitsStyle:];
}

id objc_msgSend_setUserFolderName_(void *a1, const char *a2, ...)
{
  return [a1 setUserFolderName:];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractionEnabled:];
}

id objc_msgSend_setUserInterfaceLevel_(void *a1, const char *a2, ...)
{
  return [a1 setUserInterfaceLevel:];
}

id objc_msgSend_setUserObject_(void *a1, const char *a2, ...)
{
  return [a1 setUserObject:];
}

id objc_msgSend_setUsesIntrinsicHeightSetting_(void *a1, const char *a2, ...)
{
  return [a1 setUsesIntrinsicHeightSetting:];
}

id objc_msgSend_setUuidOfNewestRecording_(void *a1, const char *a2, ...)
{
  return [a1 setUuidOfNewestRecording];
}

id objc_msgSend_setUuidOfPlayingRecording_(void *a1, const char *a2, ...)
{
  return [a1 setUuidOfPlayingRecording:];
}

id objc_msgSend_setUuidOfSelectedItem_(void *a1, const char *a2, ...)
{
  return [a1 setUuidOfSelectedItem:];
}

id objc_msgSend_setUuidOfSourceFolder_(void *a1, const char *a2, ...)
{
  return [a1 setUuidOfSourceFolder];
}

id objc_msgSend_setUuidToSelectAfterDismiss_(void *a1, const char *a2, ...)
{
  return [a1 setUuidToSelectAfterDismiss];
}

id objc_msgSend_setUuidsToMove_(void *a1, const char *a2, ...)
{
  return [a1 setUuidsToMove:];
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return [a1 setValue:];
}

id objc_msgSend_setValue_animated_(void *a1, const char *a2, ...)
{
  return [a1 setValue:animated:];
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKey:];
}

id objc_msgSend_setValue_forKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKeyPath:];
}

id objc_msgSend_setVerticalAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setVerticalAlignment:];
}

id objc_msgSend_setVerticallyExpanded_(void *a1, const char *a2, ...)
{
  return [a1 setVerticallyExpanded:];
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return [a1 setView:];
}

id objc_msgSend_setViewController_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:];
}

id objc_msgSend_setViewController_forColumn_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:forColumn:];
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllers:animated:];
}

id objc_msgSend_setViewDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setViewDelegate:];
}

id objc_msgSend_setViewDidAppearCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setViewDidAppearCompletionBlock:];
}

id objc_msgSend_setViewWillDisappearBlock_(void *a1, const char *a2, ...)
{
  return [a1 setViewWillDisappearBlock:];
}

id objc_msgSend_setVirtualNavigationToolbar_(void *a1, const char *a2, ...)
{
  return [a1 setVirtualNavigationToolbar:];
}

id objc_msgSend_setVirtualNavigationToolbarTopConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setVirtualNavigationToolbarTopConstraint:];
}

id objc_msgSend_setVisiblePath_(void *a1, const char *a2, ...)
{
  return [a1 setVisiblePath:];
}

id objc_msgSend_setVisibleTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 setVisibleTimeRange:];
}

id objc_msgSend_setVisibleTimeRange_animationDuration_(void *a1, const char *a2, ...)
{
  return [a1 setVisibleTimeRange:animationDuration:];
}

id objc_msgSend_setVisualAmplitudeHeight_(void *a1, const char *a2, ...)
{
  return [a1 setVisualAmplitudeHeight:];
}

id objc_msgSend_setVisualAmplitudeHeightInterpolatingFrames_(void *a1, const char *a2, ...)
{
  return [a1 setVisualAmplitudeHeightInterpolatingFrames:];
}

id objc_msgSend_setWaitForFinalCalc_(void *a1, const char *a2, ...)
{
  return [a1 setWaitForFinalCalc:];
}

id objc_msgSend_setWasManuallyRenamed_(void *a1, const char *a2, ...)
{
  return [a1 setWasManuallyRenamed:];
}

id objc_msgSend_setWaveformAmpSlicesForRendering_(void *a1, const char *a2, ...)
{
  return [a1 setWaveformAmpSlicesForRendering:];
}

id objc_msgSend_setWaveformColorCalculator_(void *a1, const char *a2, ...)
{
  return [a1 setWaveformColorCalculator:];
}

id objc_msgSend_setWaveformDataProvider_(void *a1, const char *a2, ...)
{
  return [a1 setWaveformDataProvider:];
}

id objc_msgSend_setWaveformDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setWaveformDataSource:];
}

id objc_msgSend_setWaveformSliceIndexes_(void *a1, const char *a2, ...)
{
  return [a1 setWaveformSliceIndexes:];
}

id objc_msgSend_setWaveformSlices_(void *a1, const char *a2, ...)
{
  return [a1 setWaveformSlices:];
}

id objc_msgSend_setWaveformView_(void *a1, const char *a2, ...)
{
  return [a1 setWaveformView:];
}

id objc_msgSend_setWelcomeScreenHasContinued_(void *a1, const char *a2, ...)
{
  return [a1 setWelcomeScreenHasContinued:];
}

id objc_msgSend_setWelcomeViewController_(void *a1, const char *a2, ...)
{
  return [a1 setWelcomeViewController:];
}

id objc_msgSend_setWidth_(void *a1, const char *a2, ...)
{
  return [a1 setWidth:];
}

id objc_msgSend_setWillMigrateFromSingleLayerToMultiLayer_(void *a1, const char *a2, ...)
{
  return [a1 setWillMigrateFromSingleLayerToMultiLayer:];
}

id objc_msgSend_setWillSelectRecordingAfterExitingEditMode_(void *a1, const char *a2, ...)
{
  return [a1 setWillSelectRecordingAfterExitingEditMode:];
}

id objc_msgSend_setWindow_(void *a1, const char *a2, ...)
{
  return [a1 setWindow:];
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 setWithObjects:];
}

id objc_msgSend_setWrapped_(void *a1, const char *a2, ...)
{
  return [a1 setWrapped:];
}

id objc_msgSend_setWrapperViewBottomConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setWrapperViewBottomConstraint:];
}

id objc_msgSend_setZPosition_(void *a1, const char *a2, ...)
{
  return [a1 setZPosition:];
}

id objc_msgSend_setZeroFormattingBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setZeroFormattingBehavior:];
}

id objc_msgSend_setZoomScale_(void *a1, const char *a2, ...)
{
  return [a1 setZoomScale:];
}

id objc_msgSend_set_horizontalSizeClassFromSplitView_(void *a1, const char *a2, ...)
{
  return [a1 set_horizontalSizeClassFromSplitView:];
}

id objc_msgSend_setupBlock(void *a1, const char *a2, ...)
{
  return _[a1 setupBlock];
}

id objc_msgSend_setupConstraints(void *a1, const char *a2, ...)
{
  return _[a1 setupConstraints];
}

id objc_msgSend_setupIntentSceneConfiguratorWithWindowScene_(void *a1, const char *a2, ...)
{
  return [a1 setupIntentSceneConfiguratorWithWindowScene:];
}

id objc_msgSend_setupSubviewsForDefaultScreen(void *a1, const char *a2, ...)
{
  return _[a1 setupSubviewsForDefaultScreen];
}

id objc_msgSend_setupSubviewsForOverdubScreen(void *a1, const char *a2, ...)
{
  return _[a1 setupSubviewsForOverdubScreen];
}

id objc_msgSend_setupTips(void *a1, const char *a2, ...)
{
  return _[a1 setupTips];
}

id objc_msgSend_setupView(void *a1, const char *a2, ...)
{
  return _[a1 setupView];
}

id objc_msgSend_shareButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 shareButtonItem];
}

id objc_msgSend_shareCurrentRecording_(void *a1, const char *a2, ...)
{
  return [a1 shareCurrentRecording];
}

id objc_msgSend_shareRecording_(void *a1, const char *a2, ...)
{
  return [a1 shareRecording:];
}

id objc_msgSend_shareRecordingsWithUUIDs_inViewController_source_isShareButton_completionWithItemsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareRecordingsWithUUIDs:inViewController:source:isShareButton:completionWithItemsHandler:");
}

id objc_msgSend_shareToolbarMenuImage(void *a1, const char *a2, ...)
{
  return _[a1 shareToolbarMenuImage];
}

id objc_msgSend_shareableCompositions(void *a1, const char *a2, ...)
{
  return _[a1 shareableCompositions];
}

id objc_msgSend_shareableCompositionsFromCompositions_(void *a1, const char *a2, ...)
{
  return [a1 shareableCompositionsFromCompositions:];
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedAppDelegate(void *a1, const char *a2, ...)
{
  return _[a1 sharedAppDelegate];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedApplicationModel(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplicationModel];
}

id objc_msgSend_sharedCommandCenter(void *a1, const char *a2, ...)
{
  return _[a1 sharedCommandCenter];
}

id objc_msgSend_sharedContainer(void *a1, const char *a2, ...)
{
  return _[a1 sharedContainer];
}

id objc_msgSend_sharedDateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 sharedDateFormatter];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedMenuBarManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedMenuBarManager];
}

id objc_msgSend_sharedNoAnimationHelper(void *a1, const char *a2, ...)
{
  return _[a1 sharedNoAnimationHelper];
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_sharedRecordingsModelInteractor(void *a1, const char *a2, ...)
{
  return _[a1 sharedRecordingsModelInteractor];
}

id objc_msgSend_sharedService(void *a1, const char *a2, ...)
{
  return _[a1 sharedService];
}

id objc_msgSend_sharedSettingsUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 sharedSettingsUserDefaults];
}

id objc_msgSend_sharedStyleProvider(void *a1, const char *a2, ...)
{
  return _[a1 sharedStyleProvider];
}

id objc_msgSend_sheetPresentationState(void *a1, const char *a2, ...)
{
  return _[a1 sheetPresentationState];
}

id objc_msgSend_shortcutItem(void *a1, const char *a2, ...)
{
  return _[a1 shortcutItem];
}

id objc_msgSend_shouldDisplaySiriTipView(void *a1, const char *a2, ...)
{
  return _[a1 shouldDisplaySiriTipView];
}

id objc_msgSend_shouldEnableDoneButtonWhileRecording(void *a1, const char *a2, ...)
{
  return _[a1 shouldEnableDoneButtonWhileRecording];
}

id objc_msgSend_shouldEnableTrimSave_(void *a1, const char *a2, ...)
{
  return [a1 shouldEnableTrimSave:];
}

id objc_msgSend_shouldExecuteCompletionBeforeAction(void *a1, const char *a2, ...)
{
  return _[a1 shouldExecuteCompletionBeforeAction];
}

id objc_msgSend_shouldHidePrimaryColumnInEditView(void *a1, const char *a2, ...)
{
  return _[a1 shouldHidePrimaryColumnInEditView];
}

id objc_msgSend_shouldHideSubseconds(void *a1, const char *a2, ...)
{
  return _[a1 shouldHideSubseconds];
}

id objc_msgSend_shouldMakeUIForDefaultPNG(void *a1, const char *a2, ...)
{
  return _[a1 shouldMakeUIForDefaultPNG];
}

id objc_msgSend_shouldOnlyRenderOnScreenTimeLabels(void *a1, const char *a2, ...)
{
  return _[a1 shouldOnlyRenderOnScreenTimeLabels];
}

id objc_msgSend_shouldSaveAsNew(void *a1, const char *a2, ...)
{
  return _[a1 shouldSaveAsNew];
}

id objc_msgSend_shouldSelectFullTitleAtBeginEditing(void *a1, const char *a2, ...)
{
  return _[a1 shouldSelectFullTitleAtBeginEditing];
}

id objc_msgSend_shouldShowOverviewWaveform(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowOverviewWaveform];
}

id objc_msgSend_shouldShowTranscriptionActivity(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowTranscriptionActivity];
}

id objc_msgSend_shouldWaitForAccessToken(void *a1, const char *a2, ...)
{
  return _[a1 shouldWaitForAccessToken];
}

id objc_msgSend_shouldWaitForAccessTokenBeforeStartingRecording_(void *a1, const char *a2, ...)
{
  return [a1 shouldWaitForAccessTokenBeforeStartingRecording];
}

id objc_msgSend_showColumn_(void *a1, const char *a2, ...)
{
  return [a1 showColumn:];
}

id objc_msgSend_showDownloading(void *a1, const char *a2, ...)
{
  return _[a1 showDownloading];
}

id objc_msgSend_showIdleForItemWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 showIdleForItemWithUUID:];
}

id objc_msgSend_showIdleForUUID_(void *a1, const char *a2, ...)
{
  return [a1 showIdleForUUID:];
}

id objc_msgSend_showNewFolderUIFromController_(void *a1, const char *a2, ...)
{
  return [a1 showNewFolderUIFromController];
}

id objc_msgSend_showOnboardingScreensIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 showOnboardingScreensIfNeeded];
}

id objc_msgSend_showPlayBarOnly(void *a1, const char *a2, ...)
{
  return _[a1 showPlayBarOnly];
}

id objc_msgSend_showPlayingForItemWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 showPlayingForItemWithUUID:];
}

id objc_msgSend_showPlayingForUUID_(void *a1, const char *a2, ...)
{
  return [a1 showPlayingForUUID:];
}

id objc_msgSend_showPrimaryColumnForExitingEditModeIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 showPrimaryColumnForExitingEditModeIfNeeded];
}

id objc_msgSend_showRenamingControllerWithFolderName_(void *a1, const char *a2, ...)
{
  return [a1 showRenamingControllerWithFolderName:];
}

id objc_msgSend_showRenamingControllerWithFolderName_controller_(void *a1, const char *a2, ...)
{
  return [a1 showRenamingControllerWithFolderName:controller:];
}

id objc_msgSend_showSaving(void *a1, const char *a2, ...)
{
  return _[a1 showSaving];
}

id objc_msgSend_showSelectionOverlayAndEnableInsertMode_(void *a1, const char *a2, ...)
{
  return [a1 showSelectionOverlayAndEnableInsertMode:];
}

id objc_msgSend_showTranscriptMenuElement(void *a1, const char *a2, ...)
{
  return _[a1 showTranscriptMenuElement];
}

id objc_msgSend_showsDescriptionViewInLineWithTrimAndPlaybackSettingsButtons(void *a1, const char *a2, ...)
{
  return _[a1 showsDescriptionViewInLineWithTrimAndPlaybackSettingsButtons];
}

id objc_msgSend_showsMoreActionsContextMenu(void *a1, const char *a2, ...)
{
  return _[a1 showsMoreActionsContextMenu];
}

id objc_msgSend_showsProgressInRecordingCollectionViewCell(void *a1, const char *a2, ...)
{
  return _[a1 showsProgressInRecordingCollectionViewCell];
}

id objc_msgSend_showsRecordingViewInFullScreen(void *a1, const char *a2, ...)
{
  return _[a1 showsRecordingViewInFullScreen];
}

id objc_msgSend_showsVirtualNavBarInPlaybackView(void *a1, const char *a2, ...)
{
  return _[a1 showsVirtualNavBarInPlaybackView];
}

id objc_msgSend_shutdown(void *a1, const char *a2, ...)
{
  return _[a1 shutdown];
}

id objc_msgSend_shuttleBar(void *a1, const char *a2, ...)
{
  return _[a1 shuttleBar];
}

id objc_msgSend_shuttleBarAdditionalSliderSpacingLibrary(void *a1, const char *a2, ...)
{
  return _[a1 shuttleBarAdditionalSliderSpacingLibrary];
}

id objc_msgSend_shuttleBarButtonContainerHeightCard(void *a1, const char *a2, ...)
{
  return _[a1 shuttleBarButtonContainerHeightCard];
}

id objc_msgSend_shuttleBarButtonContainerHeightLibrary(void *a1, const char *a2, ...)
{
  return _[a1 shuttleBarButtonContainerHeightLibrary];
}

id objc_msgSend_shuttleBarHeight(void *a1, const char *a2, ...)
{
  return _[a1 shuttleBarHeight];
}

id objc_msgSend_shuttleBarImageSymbolConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 shuttleBarImageSymbolConfiguration];
}

id objc_msgSend_shuttleBarShouldForceProportionalDistribution(void *a1, const char *a2, ...)
{
  return _[a1 shuttleBarShouldForceProportionalDistribution];
}

id objc_msgSend_sidebarCollectionViewBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 sidebarCollectionViewBackgroundColor];
}

id objc_msgSend_sidebarCollectionViewCellAXHyphenationFactor(void *a1, const char *a2, ...)
{
  return _[a1 sidebarCollectionViewCellAXHyphenationFactor];
}

id objc_msgSend_sidebarCollectionViewCellDropTargetBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 sidebarCollectionViewCellDropTargetBackgroundColor];
}

id objc_msgSend_sidebarCollectionViewHeaderCellUsesAccompaniedSidebarStyle(void *a1, const char *a2, ...)
{
  return _[a1 sidebarCollectionViewHeaderCellUsesAccompaniedSidebarStyle];
}

id objc_msgSend_sidebarCollectionViewListAppearance(void *a1, const char *a2, ...)
{
  return _[a1 sidebarCollectionViewListAppearance];
}

id objc_msgSend_sidebarCollectionViewNeedsDisclosureAccessory(void *a1, const char *a2, ...)
{
  return _[a1 sidebarCollectionViewNeedsDisclosureAccessory];
}

id objc_msgSend_sidebarCollectionViewShowsSeparators(void *a1, const char *a2, ...)
{
  return _[a1 sidebarCollectionViewShowsSeparators];
}

id objc_msgSend_sidebarCollectionViewTopPadding(void *a1, const char *a2, ...)
{
  return _[a1 sidebarCollectionViewTopPadding];
}

id objc_msgSend_sidebarHasTransparentNavigationBar(void *a1, const char *a2, ...)
{
  return _[a1 sidebarHasTransparentNavigationBar];
}

id objc_msgSend_sidebarHeaderConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 sidebarHeaderConfiguration];
}

id objc_msgSend_sidebarNavBarNewFolderImageTintColor(void *a1, const char *a2, ...)
{
  return _[a1 sidebarNavBarNewFolderImageTintColor];
}

id objc_msgSend_sidebarPresentsWithGesture(void *a1, const char *a2, ...)
{
  return _[a1 sidebarPresentsWithGesture];
}

id objc_msgSend_sidebarSelectionFollowsFocus(void *a1, const char *a2, ...)
{
  return _[a1 sidebarSelectionFollowsFocus];
}

id objc_msgSend_silenceRemoved(void *a1, const char *a2, ...)
{
  return _[a1 silenceRemoved];
}

id objc_msgSend_silenceRemoverEnabled(void *a1, const char *a2, ...)
{
  return _[a1 silenceRemoverEnabled];
}

id objc_msgSend_silencing(void *a1, const char *a2, ...)
{
  return _[a1 silencing];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeOfUndoStack(void *a1, const char *a2, ...)
{
  return _[a1 sizeOfUndoStack];
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return [a1 sizeThatFits:];
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return [a1 sizeWithAttributes:];
}

id objc_msgSend_sizeWithWidthDimension_heightDimension_(void *a1, const char *a2, ...)
{
  return [a1 sizeWithWidthDimension:heightDimension:];
}

id objc_msgSend_skipBackwardCommand(void *a1, const char *a2, ...)
{
  return _[a1 skipBackwardCommand];
}

id objc_msgSend_skipForwardCommand(void *a1, const char *a2, ...)
{
  return _[a1 skipForwardCommand];
}

id objc_msgSend_sliceDuration(void *a1, const char *a2, ...)
{
  return _[a1 sliceDuration];
}

id objc_msgSend_sliceIndex(void *a1, const char *a2, ...)
{
  return _[a1 sliceIndex];
}

id objc_msgSend_sliceLayer(void *a1, const char *a2, ...)
{
  return _[a1 sliceLayer];
}

id objc_msgSend_slicePadding(void *a1, const char *a2, ...)
{
  return _[a1 slicePadding];
}

id objc_msgSend_sliceTimeRangeForIndex_(void *a1, const char *a2, ...)
{
  return [a1 sliceTimeRangeForIndex:];
}

id objc_msgSend_sliceViewContainer(void *a1, const char *a2, ...)
{
  return _[a1 sliceViewContainer];
}

id objc_msgSend_sliceWidth(void *a1, const char *a2, ...)
{
  return _[a1 sliceWidth];
}

id objc_msgSend_sliceWithType_(void *a1, const char *a2, ...)
{
  return [a1 sliceWithType:];
}

id objc_msgSend_sliderClass(void *a1, const char *a2, ...)
{
  return _[a1 sliderClass];
}

id objc_msgSend_sliderThumbTintColor(void *a1, const char *a2, ...)
{
  return _[a1 sliderThumbTintColor];
}

id objc_msgSend_sliderValue(void *a1, const char *a2, ...)
{
  return _[a1 sliderValue];
}

id objc_msgSend_snapValueForValue_(void *a1, const char *a2, ...)
{
  return [a1 snapValueForValue:];
}

id objc_msgSend_snapshot(void *a1, const char *a2, ...)
{
  return _[a1 snapshot];
}

id objc_msgSend_snapshotForComposition_size_(void *a1, const char *a2, ...)
{
  return [a1 snapshotForComposition:size:];
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorWithKey:ascending:];
}

id objc_msgSend_sortDescriptorWithKey_ascending_comparator_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorWithKey:ascending:comparator:];
}

id objc_msgSend_sortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 sortDescriptors];
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingDescriptors:];
}

id objc_msgSend_sourceItem(void *a1, const char *a2, ...)
{
  return _[a1 sourceItem];
}

id objc_msgSend_splitBehavior(void *a1, const char *a2, ...)
{
  return _[a1 splitBehavior];
}

id objc_msgSend_splitViewController(void *a1, const char *a2, ...)
{
  return _[a1 splitViewController];
}

id objc_msgSend_splitViewController_willTransitionFromHorizontalSizeClass_toHorizontalSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 splitViewController:willTransitionFromHorizontalSizeClass:toHorizontalSizeClass:];
}

id objc_msgSend_splitViewSeparatorColor(void *a1, const char *a2, ...)
{
  return _[a1 splitViewSeparatorColor];
}

id objc_msgSend_splitViewSeparatorWidth(void *a1, const char *a2, ...)
{
  return _[a1 splitViewSeparatorWidth];
}

id objc_msgSend_standardInteractionTintColor(void *a1, const char *a2, ...)
{
  return _[a1 standardInteractionTintColor];
}

id objc_msgSend_standardPathForRecordingWithCreationDate_uniqueID_fileExtension_(void *a1, const char *a2, ...)
{
  return [a1 standardPathForRecordingWithCreationDate:uniqueID:fileExtension:];
}

id objc_msgSend_standardURLForRecordingWithCreationDate_fileExtension_(void *a1, const char *a2, ...)
{
  return [a1 standardURLForRecordingWithCreationDate:fileExtension:];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 startAndReturnError:];
}

id objc_msgSend_startAnimation(void *a1, const char *a2, ...)
{
  return _[a1 startAnimation];
}

id objc_msgSend_startCapturing_(void *a1, const char *a2, ...)
{
  return [a1 startCapturing:];
}

id objc_msgSend_startCornobbleScrollAllRecordingsTest_(void *a1, const char *a2, ...)
{
  return [a1 startCornobbleScrollAllRecordingsTest:];
}

id objc_msgSend_startCyclerEndRecordingTest_(void *a1, const char *a2, ...)
{
  return [a1 startCyclerEndRecordingTest:];
}

id objc_msgSend_startCyclerRecordNewVoiceMemoTest_(void *a1, const char *a2, ...)
{
  return [a1 startCyclerRecordNewVoiceMemoTest:];
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startEditWithComposition_displayModel_(void *a1, const char *a2, ...)
{
  return [a1 startEditWithComposition:displayModel:];
}

id objc_msgSend_startMonitoringFinalizingRecordings(void *a1, const char *a2, ...)
{
  return _[a1 startMonitoringFinalizingRecordings];
}

id objc_msgSend_startMonitoringSignificantLocationChanges(void *a1, const char *a2, ...)
{
  return _[a1 startMonitoringSignificantLocationChanges];
}

id objc_msgSend_startNewRecordingAction(void *a1, const char *a2, ...)
{
  return _[a1 startNewRecordingAction];
}

id objc_msgSend_startOfDayForDate_(void *a1, const char *a2, ...)
{
  return [a1 startOfDayForDate:];
}

id objc_msgSend_startOpenFoldersSidebarTest_(void *a1, const char *a2, ...)
{
  return [a1 startOpenFoldersSidebarTest:];
}

id objc_msgSend_startPagingScrollPlaybackCardWaveformTest_(void *a1, const char *a2, ...)
{
  return [a1 startPagingScrollPlaybackCardWaveformTest:];
}

id objc_msgSend_startPlaySelectedVoiceMemoTest_(void *a1, const char *a2, ...)
{
  return [a1 startPlaySelectedVoiceMemoTest:];
}

id objc_msgSend_startPlaying(void *a1, const char *a2, ...)
{
  return _[a1 startPlaying];
}

id objc_msgSend_startPlaying_(void *a1, const char *a2, ...)
{
  return [a1 startPlaying:];
}

id objc_msgSend_startPollingTimer_(void *a1, const char *a2, ...)
{
  return [a1 startPollingTimer:];
}

id objc_msgSend_startRecordNewVoiceMemoTest_(void *a1, const char *a2, ...)
{
  return [a1 startRecordNewVoiceMemoTest:];
}

id objc_msgSend_startRecording(void *a1, const char *a2, ...)
{
  return _[a1 startRecording];
}

id objc_msgSend_startRecordingWithController_(void *a1, const char *a2, ...)
{
  return [a1 startRecordingWithController:];
}

id objc_msgSend_startScrollVoiceMemosEditListTest_(void *a1, const char *a2, ...)
{
  return [a1 startScrollVoiceMemosEditListTest:];
}

id objc_msgSend_startScrollVoiceMemosListTest_(void *a1, const char *a2, ...)
{
  return [a1 startScrollVoiceMemosListTest:];
}

id objc_msgSend_startScrubbingForUUID_atPosition_(void *a1, const char *a2, ...)
{
  return [a1 startScrubbingForUUID:atPosition:];
}

id objc_msgSend_startTranscriptionFor_(void *a1, const char *a2, ...)
{
  return [a1 startTranscriptionFor:];
}

id objc_msgSend_startWritingAudioFile_(void *a1, const char *a2, ...)
{
  return [a1 startWritingAudioFile:];
}

id objc_msgSend_startedTest_(void *a1, const char *a2, ...)
{
  return [a1 startedTest:];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateAndLayoutModeToConstraints(void *a1, const char *a2, ...)
{
  return _[a1 stateAndLayoutModeToConstraints];
}

id objc_msgSend_statusBarHeight(void *a1, const char *a2, ...)
{
  return _[a1 statusBarHeight];
}

id objc_msgSend_stereoChannels(void *a1, const char *a2, ...)
{
  return _[a1 stereoChannels];
}

id objc_msgSend_stiffness(void *a1, const char *a2, ...)
{
  return _[a1 stiffness];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopButton(void *a1, const char *a2, ...)
{
  return _[a1 stopButton];
}

id objc_msgSend_stopButtonHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 stopButtonHeightConstraint];
}

id objc_msgSend_stopButtonPackageManager(void *a1, const char *a2, ...)
{
  return _[a1 stopButtonPackageManager];
}

id objc_msgSend_stopButtonToLeadingConstraint(void *a1, const char *a2, ...)
{
  return _[a1 stopButtonToLeadingConstraint];
}

id objc_msgSend_stopButtonWidthConstraint(void *a1, const char *a2, ...)
{
  return _[a1 stopButtonWidthConstraint];
}

id objc_msgSend_stopCapturing(void *a1, const char *a2, ...)
{
  return _[a1 stopCapturing];
}

id objc_msgSend_stopCapturingForPlatterViewController_(void *a1, const char *a2, ...)
{
  return [a1 stopCapturingForPlatterViewController:];
}

id objc_msgSend_stopForUUID_(void *a1, const char *a2, ...)
{
  return [a1 stopForUUID:];
}

id objc_msgSend_stopMonitoringSignificantLocationChanges(void *a1, const char *a2, ...)
{
  return _[a1 stopMonitoringSignificantLocationChanges];
}

id objc_msgSend_stopPlayback(void *a1, const char *a2, ...)
{
  return _[a1 stopPlayback];
}

id objc_msgSend_stopPlaying(void *a1, const char *a2, ...)
{
  return _[a1 stopPlaying];
}

id objc_msgSend_stopPlaying_(void *a1, const char *a2, ...)
{
  return [a1 stopPlaying:];
}

id objc_msgSend_stopPollingTimer(void *a1, const char *a2, ...)
{
  return _[a1 stopPollingTimer];
}

id objc_msgSend_stopRecording(void *a1, const char *a2, ...)
{
  return _[a1 stopRecording];
}

id objc_msgSend_stopRecording_atTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopRecording:atTime:error:");
}

id objc_msgSend_stopRecording_error_(void *a1, const char *a2, ...)
{
  return [a1 stopRecording:error:];
}

id objc_msgSend_stopRecordingAtTime_completion_(void *a1, const char *a2, ...)
{
  return [a1 stopRecordingAtTime:completion:];
}

id objc_msgSend_stopRecordingWithController_atTime_error_(void *a1, const char *a2, ...)
{
  return [a1 stopRecordingWithController:atTime:error:];
}

id objc_msgSend_stopRecordingWithController_error_(void *a1, const char *a2, ...)
{
  return [a1 stopRecordingWithController:error:];
}

id objc_msgSend_stopScrolling(void *a1, const char *a2, ...)
{
  return _[a1 stopScrolling];
}

id objc_msgSend_streamDescription(void *a1, const char *a2, ...)
{
  return _[a1 streamDescription];
}

id objc_msgSend_stretchableImageWithLeftCapWidth_topCapHeight_(void *a1, const char *a2, ...)
{
  return [a1 stretchableImageWithLeftCapWidth:topCapHeight:];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingPathComponent:];
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingPathExtension:];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingPathExtension];
}

id objc_msgSend_stringByRemovingPercentEncoding(void *a1, const char *a2, ...)
{
  return _[a1 stringByRemovingPercentEncoding];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return [a1 stringByReplacingOccurrencesOfString:withString:];
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return [a1 stringByTrimmingCharactersInSet:];
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return [a1 stringForKey:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:];
}

id objc_msgSend_stringFromTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 stringFromTimeInterval:];
}

id objc_msgSend_stringWithContentsOfFile_encoding_error_(void *a1, const char *a2, ...)
{
  return [a1 stringWithContentsOfFile:encoding:error:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}

id objc_msgSend_strokeColor(void *a1, const char *a2, ...)
{
  return _[a1 strokeColor];
}

id objc_msgSend_strongToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 strongToWeakObjectsMapTable];
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return _[a1 style];
}

id objc_msgSend_styleWithEffect_shape_(void *a1, const char *a2, ...)
{
  return [a1 styleWithEffect:shape:];
}

id objc_msgSend_subActivityType(void *a1, const char *a2, ...)
{
  return _[a1 subActivityType];
}

id objc_msgSend_subThoroughfare(void *a1, const char *a2, ...)
{
  return _[a1 subThoroughfare];
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return [a1 subarrayWithRange:];
}

id objc_msgSend_subjectForActivityType_(void *a1, const char *a2, ...)
{
  return [a1 subjectForActivityType:];
}

id objc_msgSend_sublayers(void *a1, const char *a2, ...)
{
  return _[a1 sublayers];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringFromIndex:];
}

id objc_msgSend_subtitleTextColor(void *a1, const char *a2, ...)
{
  return _[a1 subtitleTextColor];
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _[a1 subviews];
}

id objc_msgSend_superlayer(void *a1, const char *a2, ...)
{
  return _[a1 superlayer];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supplementaryColumnWidth(void *a1, const char *a2, ...)
{
  return _[a1 supplementaryColumnWidth];
}

id objc_msgSend_supportedFileTypeIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 supportedFileTypeIdentifiers];
}

id objc_msgSend_supportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _[a1 supportedInterfaceOrientations];
}

id objc_msgSend_supportedPolarPatterns(void *a1, const char *a2, ...)
{
  return _[a1 supportedPolarPatterns];
}

id objc_msgSend_supportsAccompaniedSidebarStyle(void *a1, const char *a2, ...)
{
  return _[a1 supportsAccompaniedSidebarStyle];
}

id objc_msgSend_supportsAppEntityInteraction(void *a1, const char *a2, ...)
{
  return _[a1 supportsAppEntityInteraction];
}

id objc_msgSend_supportsCompactRecordingCard(void *a1, const char *a2, ...)
{
  return _[a1 supportsCompactRecordingCard];
}

id objc_msgSend_supportsDisplaceSplitBehavior(void *a1, const char *a2, ...)
{
  return _[a1 supportsDisplaceSplitBehavior];
}

id objc_msgSend_supportsLiveInput(void *a1, const char *a2, ...)
{
  return _[a1 supportsLiveInput];
}

id objc_msgSend_supportsLockScreenRotation(void *a1, const char *a2, ...)
{
  return _[a1 supportsLockScreenRotation];
}

id objc_msgSend_supportsMainViewControllerUndo(void *a1, const char *a2, ...)
{
  return _[a1 supportsMainViewControllerUndo];
}

id objc_msgSend_supportsMove(void *a1, const char *a2, ...)
{
  return _[a1 supportsMove];
}

id objc_msgSend_supportsPointerInteractions(void *a1, const char *a2, ...)
{
  return _[a1 supportsPointerInteractions];
}

id objc_msgSend_supportsPopoverPlaybackSettingsPresentation(void *a1, const char *a2, ...)
{
  return _[a1 supportsPopoverPlaybackSettingsPresentation];
}

id objc_msgSend_supportsRecording(void *a1, const char *a2, ...)
{
  return _[a1 supportsRecording];
}

id objc_msgSend_supportsRecordingViewElevatedUserInterfaceLevelOverride(void *a1, const char *a2, ...)
{
  return _[a1 supportsRecordingViewElevatedUserInterfaceLevelOverride];
}

id objc_msgSend_supportsRotationButNotOtherResizing(void *a1, const char *a2, ...)
{
  return _[a1 supportsRotationButNotOtherResizing];
}

id objc_msgSend_supportsSheetPresentationSPI(void *a1, const char *a2, ...)
{
  return _[a1 supportsSheetPresentationSPI];
}

id objc_msgSend_swipeTrashImage(void *a1, const char *a2, ...)
{
  return _[a1 swipeTrashImage];
}

id objc_msgSend_system(void *a1, const char *a2, ...)
{
  return _[a1 system];
}

id objc_msgSend_systemApertureElementContext(void *a1, const char *a2, ...)
{
  return _[a1 systemApertureElementContext];
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemBlackColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlackColor];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlueColor];
}

id objc_msgSend_systemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 systemFillColor];
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:];
}

id objc_msgSend_systemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:weight:];
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGrayColor];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:];
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:withConfiguration:];
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _[a1 systemRedColor];
}

id objc_msgSend_systemWhiteColor(void *a1, const char *a2, ...)
{
  return _[a1 systemWhiteColor];
}

id objc_msgSend_systemYellowColor(void *a1, const char *a2, ...)
{
  return _[a1 systemYellowColor];
}

id objc_msgSend_tag(void *a1, const char *a2, ...)
{
  return _[a1 tag];
}

id objc_msgSend_tapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 tapGestureRecognizer];
}

id objc_msgSend_targetRate(void *a1, const char *a2, ...)
{
  return _[a1 targetRate];
}

id objc_msgSend_targetState(void *a1, const char *a2, ...)
{
  return _[a1 targetState];
}

id objc_msgSend_targetTime(void *a1, const char *a2, ...)
{
  return _[a1 targetTime];
}

id objc_msgSend_targetTrackIndex(void *a1, const char *a2, ...)
{
  return _[a1 targetTrackIndex];
}

id objc_msgSend_tccCloudAccess(void *a1, const char *a2, ...)
{
  return _[a1 tccCloudAccess];
}

id objc_msgSend_teardownBlock(void *a1, const char *a2, ...)
{
  return _[a1 teardownBlock];
}

id objc_msgSend_temporaryDirectoryURL(void *a1, const char *a2, ...)
{
  return _[a1 temporaryDirectoryURL];
}

id objc_msgSend_tertiarySystemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 tertiarySystemFillColor];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textAlignment(void *a1, const char *a2, ...)
{
  return _[a1 textAlignment];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _[a1 textColor];
}

id objc_msgSend_textFieldBeingEdited(void *a1, const char *a2, ...)
{
  return _[a1 textFieldBeingEdited];
}

id objc_msgSend_textFieldIsBeingEdited(void *a1, const char *a2, ...)
{
  return _[a1 textFieldIsBeingEdited];
}

id objc_msgSend_textFields(void *a1, const char *a2, ...)
{
  return _[a1 textFields];
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _[a1 textLabel];
}

id objc_msgSend_textProperties(void *a1, const char *a2, ...)
{
  return _[a1 textProperties];
}

id objc_msgSend_textRectWithAlignment_inLayoutBounds_(void *a1, const char *a2, ...)
{
  return [a1 textRectWithAlignment:inLayoutBounds:];
}

id objc_msgSend_thoroughfare(void *a1, const char *a2, ...)
{
  return _[a1 thoroughfare];
}

id objc_msgSend_thumbHitRect(void *a1, const char *a2, ...)
{
  return _[a1 thumbHitRect];
}

id objc_msgSend_thumbRectForBounds_trackRect_value_(void *a1, const char *a2, ...)
{
  return [a1 thumbRectForBounds:trackRect:value:];
}

id objc_msgSend_tickMarksForMajorInterval_(void *a1, const char *a2, ...)
{
  return [a1 tickMarksForMajorInterval:];
}

id objc_msgSend_tickNumberForDefaultValue(void *a1, const char *a2, ...)
{
  return _[a1 tickNumberForDefaultValue];
}

id objc_msgSend_tickNumberForSelectedValue(void *a1, const char *a2, ...)
{
  return _[a1 tickNumberForSelectedValue];
}

id objc_msgSend_tickNumberForValue_(void *a1, const char *a2, ...)
{
  return [a1 tickNumberForValue:];
}

id objc_msgSend_timeAtHorizontalOffset_(void *a1, const char *a2, ...)
{
  return [a1 timeAtHorizontalOffset:];
}

id objc_msgSend_timeController(void *a1, const char *a2, ...)
{
  return _[a1 timeController];
}

id objc_msgSend_timeController_didChangeCurrentTime_(void *a1, const char *a2, ...)
{
  return [a1 timeController:didChangeCurrentTime:];
}

id objc_msgSend_timeController_didChangeCurrentTime_didChangeDuration_(void *a1, const char *a2, ...)
{
  return [a1 timeController:didChangeCurrentTime:didChangeDuration:];
}

id objc_msgSend_timeController_didChangeRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeController:didChangeRate:");
}

id objc_msgSend_timeController_didChangeState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeController:didChangeState:");
}

id objc_msgSend_timeControllerState(void *a1, const char *a2, ...)
{
  return _[a1 timeControllerState];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceDate:];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeLabelCenterYConstraint(void *a1, const char *a2, ...)
{
  return _[a1 timeLabelCenterYConstraint];
}

id objc_msgSend_timeLabelFontForStyle_(void *a1, const char *a2, ...)
{
  return [a1 timeLabelFontForStyle:];
}

id objc_msgSend_timeLabelTextColorForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeLabelTextColorForStyle:");
}

id objc_msgSend_timeLabelToLeadingConstraint(void *a1, const char *a2, ...)
{
  return _[a1 timeLabelToLeadingConstraint];
}

id objc_msgSend_timeLabelToStopButtonConstraint(void *a1, const char *a2, ...)
{
  return _[a1 timeLabelToStopButtonConstraint];
}

id objc_msgSend_timeLabelTopToObstructedAreaBottomConstraint(void *a1, const char *a2, ...)
{
  return _[a1 timeLabelTopToObstructedAreaBottomConstraint];
}

id objc_msgSend_timeLabelTopToTopConstraint(void *a1, const char *a2, ...)
{
  return _[a1 timeLabelTopToTopConstraint];
}

id objc_msgSend_timeLabelsMajorInterval(void *a1, const char *a2, ...)
{
  return _[a1 timeLabelsMajorInterval];
}

id objc_msgSend_timeLineLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 timeLineLabelFont];
}

id objc_msgSend_timeLineMajorPlaybackMarkerColor(void *a1, const char *a2, ...)
{
  return _[a1 timeLineMajorPlaybackMarkerColor];
}

id objc_msgSend_timeLineMajorTickHeight(void *a1, const char *a2, ...)
{
  return _[a1 timeLineMajorTickHeight];
}

id objc_msgSend_timeLineMinorPlaybackMarkerColor(void *a1, const char *a2, ...)
{
  return _[a1 timeLineMinorPlaybackMarkerColor];
}

id objc_msgSend_timeLineMinorTickHeight(void *a1, const char *a2, ...)
{
  return _[a1 timeLineMinorTickHeight];
}

id objc_msgSend_timeLineTickWidth(void *a1, const char *a2, ...)
{
  return _[a1 timeLineTickWidth];
}

id objc_msgSend_timeObservers(void *a1, const char *a2, ...)
{
  return _[a1 timeObservers];
}

id objc_msgSend_timeRange(void *a1, const char *a2, ...)
{
  return _[a1 timeRange];
}

id objc_msgSend_timeRangeInComposition(void *a1, const char *a2, ...)
{
  return _[a1 timeRangeInComposition];
}

id objc_msgSend_timeRangeInContentToUse(void *a1, const char *a2, ...)
{
  return _[a1 timeRangeInContentToUse];
}

id objc_msgSend_timeRangeToHighlight(void *a1, const char *a2, ...)
{
  return _[a1 timeRangeToHighlight];
}

id objc_msgSend_timeView(void *a1, const char *a2, ...)
{
  return _[a1 timeView];
}

id objc_msgSend_timeWindow(void *a1, const char *a2, ...)
{
  return _[a1 timeWindow];
}

id objc_msgSend_timeWithHostTime_sampleTime_atRate_(void *a1, const char *a2, ...)
{
  return [a1 timeWithHostTime:sampleTime:atRate:];
}

id objc_msgSend_timeWithSampleTime_atRate_(void *a1, const char *a2, ...)
{
  return [a1 timeWithSampleTime:atRate:];
}

id objc_msgSend_timelineEntry(void *a1, const char *a2, ...)
{
  return _[a1 timelineEntry];
}

id objc_msgSend_timelineGenerator(void *a1, const char *a2, ...)
{
  return _[a1 timelineGenerator];
}

id objc_msgSend_timelinePlaybackBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 timelinePlaybackBackgroundColor];
}

id objc_msgSend_timelinePlaybackTimeColor(void *a1, const char *a2, ...)
{
  return _[a1 timelinePlaybackTimeColor];
}

id objc_msgSend_timelineSlider(void *a1, const char *a2, ...)
{
  return _[a1 timelineSlider];
}

id objc_msgSend_timelineWithEntries_identifier_configure_(void *a1, const char *a2, ...)
{
  return [a1 timelineWithEntries:identifier:configure:];
}

id objc_msgSend_timelinesForDateInterval_displayedRecordingTime_timelineIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timelinesForDateInterval:displayedRecordingTime:timelineIdentifier:");
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _[a1 timestamp];
}

id objc_msgSend_timingFunction(void *a1, const char *a2, ...)
{
  return _[a1 timingFunction];
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_tintedButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 tintedButtonConfiguration];
}

id objc_msgSend_tintedTickPaths(void *a1, const char *a2, ...)
{
  return _[a1 tintedTickPaths];
}

id objc_msgSend_tintedTrackPaths(void *a1, const char *a2, ...)
{
  return _[a1 tintedTrackPaths];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleBase(void *a1, const char *a2, ...)
{
  return _[a1 titleBase];
}

id objc_msgSend_titleEditingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 titleEditingAllowed];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_titleTextField(void *a1, const char *a2, ...)
{
  return _[a1 titleTextField];
}

id objc_msgSend_toActivityType(void *a1, const char *a2, ...)
{
  return _[a1 toActivityType];
}

id objc_msgSend_toSubType(void *a1, const char *a2, ...)
{
  return _[a1 toSubType];
}

id objc_msgSend_toggleButtonContentInsets(void *a1, const char *a2, ...)
{
  return _[a1 toggleButtonContentInsets];
}

id objc_msgSend_toggleButtonCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 toggleButtonCornerRadius];
}

id objc_msgSend_toggleEnhanceRecording(void *a1, const char *a2, ...)
{
  return _[a1 toggleEnhanceRecording];
}

id objc_msgSend_toggleEnhanceRecordingForUUID_(void *a1, const char *a2, ...)
{
  return [a1 toggleEnhanceRecordingForUUID:];
}

id objc_msgSend_toggleFavoriteForUUID_(void *a1, const char *a2, ...)
{
  return [a1 toggleFavoriteForUUID:];
}

id objc_msgSend_toggleFavoriteRecording(void *a1, const char *a2, ...)
{
  return _[a1 toggleFavoriteRecording];
}

id objc_msgSend_toggleForUUID_(void *a1, const char *a2, ...)
{
  return [a1 toggleForUUID:];
}

id objc_msgSend_toggleFullCompact(void *a1, const char *a2, ...)
{
  return _[a1 toggleFullCompact];
}

id objc_msgSend_toggleImage(void *a1, const char *a2, ...)
{
  return _[a1 toggleImage];
}

id objc_msgSend_togglePlayPauseCommand(void *a1, const char *a2, ...)
{
  return _[a1 togglePlayPauseCommand];
}

id objc_msgSend_togglePlayback(void *a1, const char *a2, ...)
{
  return _[a1 togglePlayback];
}

id objc_msgSend_toggleRemoveSilence(void *a1, const char *a2, ...)
{
  return _[a1 toggleRemoveSilence];
}

id objc_msgSend_toggleRemoveSilenceForUUID_(void *a1, const char *a2, ...)
{
  return [a1 toggleRemoveSilenceForUUID:];
}

id objc_msgSend_toggleTranscriptView(void *a1, const char *a2, ...)
{
  return _[a1 toggleTranscriptView];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_toolbar(void *a1, const char *a2, ...)
{
  return _[a1 toolbar];
}

id objc_msgSend_toolbarButtonsShouldHaveNonDefaultColor(void *a1, const char *a2, ...)
{
  return _[a1 toolbarButtonsShouldHaveNonDefaultColor];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topCardSpacerView(void *a1, const char *a2, ...)
{
  return _[a1 topCardSpacerView];
}

id objc_msgSend_topFullScreenSpacerView(void *a1, const char *a2, ...)
{
  return _[a1 topFullScreenSpacerView];
}

id objc_msgSend_topLevelView(void *a1, const char *a2, ...)
{
  return _[a1 topLevelView];
}

id objc_msgSend_topMarginForCardView(void *a1, const char *a2, ...)
{
  return _[a1 topMarginForCardView];
}

id objc_msgSend_topMarginMinSafeAreaTopInsetForCardView(void *a1, const char *a2, ...)
{
  return _[a1 topMarginMinSafeAreaTopInsetForCardView];
}

id objc_msgSend_topScreenSpacerHeight(void *a1, const char *a2, ...)
{
  return _[a1 topScreenSpacerHeight];
}

id objc_msgSend_touch(void *a1, const char *a2, ...)
{
  return _[a1 touch];
}

id objc_msgSend_touchInsetsButton(void *a1, const char *a2, ...)
{
  return _[a1 touchInsetsButton];
}

id objc_msgSend_trackInfoRepository(void *a1, const char *a2, ...)
{
  return _[a1 trackInfoRepository];
}

id objc_msgSend_trackRect(void *a1, const char *a2, ...)
{
  return _[a1 trackRect];
}

id objc_msgSend_trackRectForBounds_(void *a1, const char *a2, ...)
{
  return [a1 trackRectForBounds:];
}

id objc_msgSend_trackState(void *a1, const char *a2, ...)
{
  return _[a1 trackState];
}

id objc_msgSend_trackingOffset(void *a1, const char *a2, ...)
{
  return _[a1 trackingOffset];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_trailingCustomConcentricLayoutAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingCustomConcentricLayoutAnchor];
}

id objc_msgSend_trailingView(void *a1, const char *a2, ...)
{
  return _[a1 trailingView];
}

id objc_msgSend_traitChangeObservable(void *a1, const char *a2, ...)
{
  return _[a1 traitChangeObservable];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_traitCollectionWithPreferredContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionWithPreferredContentSizeCategory:];
}

id objc_msgSend_traitEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 traitEnvironment];
}

id objc_msgSend_traitOverrides(void *a1, const char *a2, ...)
{
  return _[a1 traitOverrides];
}

id objc_msgSend_transactionAuthor(void *a1, const char *a2, ...)
{
  return _[a1 transactionAuthor];
}

id objc_msgSend_transcriptAvailableImageView(void *a1, const char *a2, ...)
{
  return _[a1 transcriptAvailableImageView];
}

id objc_msgSend_transcriptView(void *a1, const char *a2, ...)
{
  return _[a1 transcriptView];
}

id objc_msgSend_transcriptViewCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 transcriptViewCoordinator];
}

id objc_msgSend_transcriptViewState(void *a1, const char *a2, ...)
{
  return _[a1 transcriptViewState];
}

id objc_msgSend_transcriptionButton(void *a1, const char *a2, ...)
{
  return _[a1 transcriptionButton];
}

id objc_msgSend_transcriptionButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 transcriptionButtonItem];
}

id objc_msgSend_transcriptionButtonSidePadding(void *a1, const char *a2, ...)
{
  return _[a1 transcriptionButtonSidePadding];
}

id objc_msgSend_transcriptionContentExists(void *a1, const char *a2, ...)
{
  return _[a1 transcriptionContentExists];
}

id objc_msgSend_transcriptionImage(void *a1, const char *a2, ...)
{
  return _[a1 transcriptionImage];
}

id objc_msgSend_transcriptionIsSupported(void *a1, const char *a2, ...)
{
  return _[a1 transcriptionIsSupported];
}

id objc_msgSend_transcriptionStringForRecordingUUID_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 transcriptionStringForRecordingUUID:completionHandler:];
}

id objc_msgSend_transcriptionToggleImage(void *a1, const char *a2, ...)
{
  return _[a1 transcriptionToggleImage];
}

id objc_msgSend_transform(void *a1, const char *a2, ...)
{
  return _[a1 transform];
}

id objc_msgSend_transitionContext(void *a1, const char *a2, ...)
{
  return _[a1 transitionContext];
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 transitionCoordinator];
}

id objc_msgSend_transitionToActivityType_subType_withDisplayModel_(void *a1, const char *a2, ...)
{
  return [a1 transitionToActivityType:subType:withDisplayModel:];
}

id objc_msgSend_transitionToState_viaState_transitionDuration_(void *a1, const char *a2, ...)
{
  return [a1 transitionToState:viaState:transitionDuration:];
}

id objc_msgSend_transitionWithView_duration_options_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 transitionWithView:duration:options:animations:completion:];
}

id objc_msgSend_transportButtonAnimationCircleColor(void *a1, const char *a2, ...)
{
  return _[a1 transportButtonAnimationCircleColor];
}

id objc_msgSend_transportButtonAnimationDuration(void *a1, const char *a2, ...)
{
  return _[a1 transportButtonAnimationDuration];
}

id objc_msgSend_transportButtonAnimationJumpCircleRadius(void *a1, const char *a2, ...)
{
  return _[a1 transportButtonAnimationJumpCircleRadius];
}

id objc_msgSend_transportButtonAnimationPlayCircleRadius(void *a1, const char *a2, ...)
{
  return _[a1 transportButtonAnimationPlayCircleRadius];
}

id objc_msgSend_transportButtonAnimationShrinkFactor(void *a1, const char *a2, ...)
{
  return _[a1 transportButtonAnimationShrinkFactor];
}

id objc_msgSend_transportButtonsAnimateWithCircle(void *a1, const char *a2, ...)
{
  return _[a1 transportButtonsAnimateWithCircle];
}

id objc_msgSend_transportControlsColorForLibrary(void *a1, const char *a2, ...)
{
  return _[a1 transportControlsColorForLibrary];
}

id objc_msgSend_transportControlsColorForPlaybackCard(void *a1, const char *a2, ...)
{
  return _[a1 transportControlsColorForPlaybackCard];
}

id objc_msgSend_transportControlsColorForRecordingCard(void *a1, const char *a2, ...)
{
  return _[a1 transportControlsColorForRecordingCard];
}

id objc_msgSend_trashBottomToolbarImage(void *a1, const char *a2, ...)
{
  return _[a1 trashBottomToolbarImage];
}

id objc_msgSend_trashImage(void *a1, const char *a2, ...)
{
  return _[a1 trashImage];
}

id objc_msgSend_trimButton(void *a1, const char *a2, ...)
{
  return _[a1 trimButton];
}

id objc_msgSend_trimButtonTintColor(void *a1, const char *a2, ...)
{
  return _[a1 trimButtonTintColor];
}

id objc_msgSend_trimDeleteButtonBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 trimDeleteButtonBackgroundColor];
}

id objc_msgSend_trimDeleteButtonCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 trimDeleteButtonCornerRadius];
}

id objc_msgSend_trimDeleteButtonFont(void *a1, const char *a2, ...)
{
  return _[a1 trimDeleteButtonFont];
}

id objc_msgSend_trimDeleteButtonLeftConstantConstraint(void *a1, const char *a2, ...)
{
  return _[a1 trimDeleteButtonLeftConstantConstraint];
}

id objc_msgSend_trimDeleteButtonLeftPaddingDistance(void *a1, const char *a2, ...)
{
  return _[a1 trimDeleteButtonLeftPaddingDistance];
}

id objc_msgSend_trimDeleteButtonLeftSize(void *a1, const char *a2, ...)
{
  return _[a1 trimDeleteButtonLeftSize];
}

id objc_msgSend_trimDeleteButtonTextColor(void *a1, const char *a2, ...)
{
  return _[a1 trimDeleteButtonTextColor];
}

id objc_msgSend_trimEnabled(void *a1, const char *a2, ...)
{
  return _[a1 trimEnabled];
}

id objc_msgSend_trimImage(void *a1, const char *a2, ...)
{
  return _[a1 trimImage];
}

id objc_msgSend_trimOverviewWaveformContainerView(void *a1, const char *a2, ...)
{
  return _[a1 trimOverviewWaveformContainerView];
}

id objc_msgSend_trimRecording(void *a1, const char *a2, ...)
{
  return _[a1 trimRecording];
}

id objc_msgSend_trimRecording_error_(void *a1, const char *a2, ...)
{
  return [a1 trimRecording:error:];
}

id objc_msgSend_trimRecording_timeRange_controller_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trimRecording:timeRange:controller:error:");
}

id objc_msgSend_trimSaveStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 trimSaveStateChanged:];
}

id objc_msgSend_trimToSelectionButton(void *a1, const char *a2, ...)
{
  return _[a1 trimToSelectionButton];
}

id objc_msgSend_trimmedBuffer_(void *a1, const char *a2, ...)
{
  return [a1 trimmedBuffer:];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uiColor(void *a1, const char *a2, ...)
{
  return _[a1 uiColor];
}

id objc_msgSend_uiColorDimmed(void *a1, const char *a2, ...)
{
  return _[a1 uiColorDimmed];
}

id objc_msgSend_undo(void *a1, const char *a2, ...)
{
  return _[a1 undo];
}

id objc_msgSend_undoDisabled(void *a1, const char *a2, ...)
{
  return _[a1 undoDisabled];
}

id objc_msgSend_undoEditing(void *a1, const char *a2, ...)
{
  return _[a1 undoEditing];
}

id objc_msgSend_undoManager(void *a1, const char *a2, ...)
{
  return _[a1 undoManager];
}

id objc_msgSend_undoStateChanged_isNewRecording_(void *a1, const char *a2, ...)
{
  return [a1 undoStateChanged:isNewRecording:];
}

id objc_msgSend_unprepare(void *a1, const char *a2, ...)
{
  return _[a1 unprepare];
}

id objc_msgSend_unroundedTickNumberForValue_(void *a1, const char *a2, ...)
{
  return [a1 unroundedTickNumberForValue:];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongLongValue];
}

id objc_msgSend_unsupportedActivityTypes(void *a1, const char *a2, ...)
{
  return _[a1 unsupportedActivityTypes];
}

id objc_msgSend_updateAccessibilityForRecordingViewState_(void *a1, const char *a2, ...)
{
  return [a1 updateAccessibilityForRecordingViewState:];
}

id objc_msgSend_updateAccessories(void *a1, const char *a2, ...)
{
  return _[a1 updateAccessories];
}

id objc_msgSend_updateActiveSlicesForTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 updateActiveSlicesForTimeRange:];
}

id objc_msgSend_updateBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 updateBackgroundColor];
}

id objc_msgSend_updateBottomLayoutForEditing_delegate_(void *a1, const char *a2, ...)
{
  return [a1 updateBottomLayoutForEditing:delegate:];
}

id objc_msgSend_updateColors(void *a1, const char *a2, ...)
{
  return _[a1 updateColors];
}

id objc_msgSend_updateContentUnavailableViewState_(void *a1, const char *a2, ...)
{
  return [a1 updateContentUnavailableViewState:];
}

id objc_msgSend_updateContiguousThreshold(void *a1, const char *a2, ...)
{
  return _[a1 updateContiguousThreshold];
}

id objc_msgSend_updateCurrentTimeForUUID_toTime_(void *a1, const char *a2, ...)
{
  return [a1 updateCurrentTimeForUUID:toTime:];
}

id objc_msgSend_updateCurrentTrackTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 updateCurrentTrackTimeRange];
}

id objc_msgSend_updateDeviceIsSupported(void *a1, const char *a2, ...)
{
  return _[a1 updateDeviceIsSupported];
}

id objc_msgSend_updateFidelity(void *a1, const char *a2, ...)
{
  return _[a1 updateFidelity];
}

id objc_msgSend_updateForDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 updateForDisplayMode:];
}

id objc_msgSend_updateForEditingStart(void *a1, const char *a2, ...)
{
  return _[a1 updateForEditingStart];
}

id objc_msgSend_updateForRecordingEnd_(void *a1, const char *a2, ...)
{
  return [a1 updateForRecordingEnd:];
}

id objc_msgSend_updateForRecordingStart(void *a1, const char *a2, ...)
{
  return _[a1 updateForRecordingStart];
}

id objc_msgSend_updateForRecordingStart_(void *a1, const char *a2, ...)
{
  return [a1 updateForRecordingStart:];
}

id objc_msgSend_updateForSizeChange(void *a1, const char *a2, ...)
{
  return _[a1 updateForSizeChange];
}

id objc_msgSend_updateForTrimMode(void *a1, const char *a2, ...)
{
  return _[a1 updateForTrimMode];
}

id objc_msgSend_updateInactiveSlicesForTimeRange_inactiveSliceCount_(void *a1, const char *a2, ...)
{
  return [a1 updateInactiveSlicesForTimeRange:inactiveSliceCount:];
}

id objc_msgSend_updateLayerAlphaIfVisible_(void *a1, const char *a2, ...)
{
  return [a1 updateLayerAlphaIfVisible:];
}

id objc_msgSend_updateMoreActionsAndPlaybackSettingButtonVisibility(void *a1, const char *a2, ...)
{
  return _[a1 updateMoreActionsAndPlaybackSettingButtonVisibility];
}

id objc_msgSend_updateNavBarTitleAndDeleteButtonForRecordingsCount_isEditMode_(void *a1, const char *a2, ...)
{
  return [a1 updateNavBarTitleAndDeleteButtonForRecordingsCount:isEditMode:];
}

id objc_msgSend_updateOverlayLayerStringWithPresentationTime_presentationInterval_elapsedRecordingTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateOverlayLayerStringWithPresentationTime:presentationInterval:elapsedRecordingTime:");
}

id objc_msgSend_updatePlaybackContentUnavailableViewIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updatePlaybackContentUnavailableViewIfNeeded];
}

id objc_msgSend_updatePlaybackSettings(void *a1, const char *a2, ...)
{
  return _[a1 updatePlaybackSettings];
}

id objc_msgSend_updateQuickActions(void *a1, const char *a2, ...)
{
  return _[a1 updateQuickActions];
}

id objc_msgSend_updateRecordButtonViewStateWithCurrentTime_(void *a1, const char *a2, ...)
{
  return [a1 updateRecordButtonViewStateWithCurrentTime:];
}

id objc_msgSend_updateScrubbingForUUID_atPosition_(void *a1, const char *a2, ...)
{
  return [a1 updateScrubbingForUUID:atPosition:];
}

id objc_msgSend_updateShuttleBarControlsColor(void *a1, const char *a2, ...)
{
  return _[a1 updateShuttleBarControlsColor];
}

id objc_msgSend_updateSliceFramesForRecordingTime_(void *a1, const char *a2, ...)
{
  return [a1 updateSliceFramesForRecordingTime:];
}

id objc_msgSend_updateSlicesAndFrames(void *a1, const char *a2, ...)
{
  return _[a1 updateSlicesAndFrames];
}

id objc_msgSend_updateTime_(void *a1, const char *a2, ...)
{
  return [a1 updateTime:];
}

id objc_msgSend_updateToEditingInFlight_progress_forUUID_(void *a1, const char *a2, ...)
{
  return [a1 updateToEditingInFlight:progress:forUUID:];
}

id objc_msgSend_updateToolbarAndFooterView(void *a1, const char *a2, ...)
{
  return _[a1 updateToolbarAndFooterView];
}

id objc_msgSend_updateToolbarWithLeadingItems_trailingItems_(void *a1, const char *a2, ...)
{
  return [a1 updateToolbarWithLeadingItems:trailingItems:];
}

id objc_msgSend_updateTrackState_(void *a1, const char *a2, ...)
{
  return [a1 updateTrackState:];
}

id objc_msgSend_updateTrackingInfo(void *a1, const char *a2, ...)
{
  return _[a1 updateTrackingInfo];
}

id objc_msgSend_updateTraitsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateTraitsIfNeeded];
}

id objc_msgSend_updateTrimSaveState_(void *a1, const char *a2, ...)
{
  return [a1 updateTrimSaveState:];
}

id objc_msgSend_updateUIForContentUnavailable_(void *a1, const char *a2, ...)
{
  return [a1 updateUIForContentUnavailable:];
}

id objc_msgSend_updateUndoButtonStateFromUndoManager(void *a1, const char *a2, ...)
{
  return _[a1 updateUndoButtonStateFromUndoManager];
}

id objc_msgSend_updateUndoState_isNewRecording_(void *a1, const char *a2, ...)
{
  return [a1 updateUndoState:isNewRecording:];
}

id objc_msgSend_updateVisibleTimeRangeToFullDuration(void *a1, const char *a2, ...)
{
  return _[a1 updateVisibleTimeRangeToFullDuration];
}

id objc_msgSend_updateWidthOnSizeChange(void *a1, const char *a2, ...)
{
  return _[a1 updateWidthOnSizeChange];
}

id objc_msgSend_updateWithPlaybackSettings_(void *a1, const char *a2, ...)
{
  return [a1 updateWithPlaybackSettings:];
}

id objc_msgSend_updateWithRecordingModel_(void *a1, const char *a2, ...)
{
  return [a1 updateWithRecordingModel:];
}

id objc_msgSend_updateWithRecordingModel_requireMatchingUUID_(void *a1, const char *a2, ...)
{
  return [a1 updateWithRecordingModel:requireMatchingUUID:];
}

id objc_msgSend_updatedConfigurationForState_(void *a1, const char *a2, ...)
{
  return [a1 updatedConfigurationForState:];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_useCenteredStyleColoring(void *a1, const char *a2, ...)
{
  return _[a1 useCenteredStyleColoring];
}

id objc_msgSend_userActivities(void *a1, const char *a2, ...)
{
  return _[a1 userActivities];
}

id objc_msgSend_userContentControllers(void *a1, const char *a2, ...)
{
  return _[a1 userContentControllers];
}

id objc_msgSend_userDefinedFoldersFetchRequest(void *a1, const char *a2, ...)
{
  return _[a1 userDefinedFoldersFetchRequest];
}

id objc_msgSend_userDidCancelDeleteRecording(void *a1, const char *a2, ...)
{
  return _[a1 userDidCancelDeleteRecording];
}

id objc_msgSend_userDidDeleteRecordingsWithUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 userDidDeleteRecordingsWithUUIDs];
}

id objc_msgSend_userDidEraseRecordingsWithUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 userDidEraseRecordingsWithUUIDs:];
}

id objc_msgSend_userDidRecoverRecordingsWithUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 userDidRecoverRecordingsWithUUIDs:];
}

id objc_msgSend_userFolderExistsWithName_(void *a1, const char *a2, ...)
{
  return [a1 userFolderExistsWithName:];
}

id objc_msgSend_userFolderName(void *a1, const char *a2, ...)
{
  return _[a1 userFolderName];
}

id objc_msgSend_userFolderUUID(void *a1, const char *a2, ...)
{
  return _[a1 userFolderUUID];
}

id objc_msgSend_userFolders(void *a1, const char *a2, ...)
{
  return _[a1 userFolders];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceLayoutDirection];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_userObject(void *a1, const char *a2, ...)
{
  return _[a1 userObject];
}

id objc_msgSend_userType(void *a1, const char *a2, ...)
{
  return _[a1 userType];
}

id objc_msgSend_usesIntrinsicHeightSetting(void *a1, const char *a2, ...)
{
  return _[a1 usesIntrinsicHeightSetting];
}

id objc_msgSend_usesLargeTitles(void *a1, const char *a2, ...)
{
  return _[a1 usesLargeTitles];
}

id objc_msgSend_usesSplitBehavior(void *a1, const char *a2, ...)
{
  return _[a1 usesSplitBehavior];
}

id objc_msgSend_usesTitleLabelPerfOptimization(void *a1, const char *a2, ...)
{
  return _[a1 usesTitleLabelPerfOptimization];
}

id objc_msgSend_usesVectorGlyph(void *a1, const char *a2, ...)
{
  return _[a1 usesVectorGlyph];
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _[a1 uuid];
}

id objc_msgSend_uuidAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 uuidAtIndexPath:];
}

id objc_msgSend_uuidBeingDisplayed(void *a1, const char *a2, ...)
{
  return _[a1 uuidBeingDisplayed];
}

id objc_msgSend_uuidForAction(void *a1, const char *a2, ...)
{
  return _[a1 uuidForAction];
}

id objc_msgSend_uuidOfNewestRecording(void *a1, const char *a2, ...)
{
  return _[a1 uuidOfNewestRecording];
}

id objc_msgSend_uuidOfPlayingOrSelectedRecording(void *a1, const char *a2, ...)
{
  return _[a1 uuidOfPlayingOrSelectedRecording];
}

id objc_msgSend_uuidOfPlayingRecording(void *a1, const char *a2, ...)
{
  return _[a1 uuidOfPlayingRecording];
}

id objc_msgSend_uuidOfSelectedItem(void *a1, const char *a2, ...)
{
  return _[a1 uuidOfSelectedItem];
}

id objc_msgSend_uuidOfSelectedRecording(void *a1, const char *a2, ...)
{
  return _[a1 uuidOfSelectedRecording];
}

id objc_msgSend_uuidOfSourceFolder(void *a1, const char *a2, ...)
{
  return _[a1 uuidOfSourceFolder];
}

id objc_msgSend_uuidOfUserFolderForRecordingWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 uuidOfUserFolderForRecordingWithUUID:];
}

id objc_msgSend_uuidToSelectAfterDismiss(void *a1, const char *a2, ...)
{
  return _[a1 uuidToSelectAfterDismiss];
}

id objc_msgSend_uuidsToMove(void *a1, const char *a2, ...)
{
  return _[a1 uuidsToMove];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:];
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 valueForKeyPath:];
}

id objc_msgSend_valueForTickNumber_(void *a1, const char *a2, ...)
{
  return [a1 valueForTickNumber:];
}

id objc_msgSend_valueWithBytes_objCType_(void *a1, const char *a2, ...)
{
  return [a1 valueWithBytes:objCType:];
}

id objc_msgSend_valueWithCGPoint_(void *a1, const char *a2, ...)
{
  return [a1 valueWithCGPoint:];
}

id objc_msgSend_valueWithPointer_(void *a1, const char *a2, ...)
{
  return [a1 valueWithPointer:];
}

id objc_msgSend_versions(void *a1, const char *a2, ...)
{
  return _[a1 versions];
}

id objc_msgSend_verticalWaveformPadding(void *a1, const char *a2, ...)
{
  return _[a1 verticalWaveformPadding];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewContext(void *a1, const char *a2, ...)
{
  return _[a1 viewContext];
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _[a1 viewController];
}

id objc_msgSend_viewControllerForColumn_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForColumn:];
}

id objc_msgSend_viewControllerWithWaveformContainers_trackInfoRepository_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerWithWaveformContainers:trackInfoRepository:];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_viewDelegate(void *a1, const char *a2, ...)
{
  return _[a1 viewDelegate];
}

id objc_msgSend_viewDidAppearCompletionBlock(void *a1, const char *a2, ...)
{
  return _[a1 viewDidAppearCompletionBlock];
}

id objc_msgSend_viewIfLoaded(void *a1, const char *a2, ...)
{
  return _[a1 viewIfLoaded];
}

id objc_msgSend_viewWillDisappearBlock(void *a1, const char *a2, ...)
{
  return _[a1 viewWillDisappearBlock];
}

id objc_msgSend_viewWithTag_(void *a1, const char *a2, ...)
{
  return [a1 viewWithTag:];
}

id objc_msgSend_virtualNavBarButtonItemSpacing(void *a1, const char *a2, ...)
{
  return _[a1 virtualNavBarButtonItemSpacing];
}

id objc_msgSend_virtualNavigationToolbar(void *a1, const char *a2, ...)
{
  return _[a1 virtualNavigationToolbar];
}

id objc_msgSend_virtualNavigationToolbarTopConstraint(void *a1, const char *a2, ...)
{
  return _[a1 virtualNavigationToolbarTopConstraint];
}

id objc_msgSend_visibleBounds(void *a1, const char *a2, ...)
{
  return _[a1 visibleBounds];
}

id objc_msgSend_visibleBuiltInFolders(void *a1, const char *a2, ...)
{
  return _[a1 visibleBuiltInFolders];
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return _[a1 visibleCells];
}

id objc_msgSend_visibleTimeRange(void *a1, const char *a2, ...)
{
  return _[a1 visibleTimeRange];
}

id objc_msgSend_visualAmplitudeHeight(void *a1, const char *a2, ...)
{
  return _[a1 visualAmplitudeHeight];
}

id objc_msgSend_visualStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 visualStateChanged];
}

id objc_msgSend_voiceMemosRecordingsFolder(void *a1, const char *a2, ...)
{
  return _[a1 voiceMemosRecordingsFolder];
}

id objc_msgSend_waitForFinalCalc(void *a1, const char *a2, ...)
{
  return _[a1 waitForFinalCalc];
}

id objc_msgSend_waitUntilFinished(void *a1, const char *a2, ...)
{
  return _[a1 waitUntilFinished];
}

id objc_msgSend_wasDeselectedForCellWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 wasDeselectedForCellWithUUID:];
}

id objc_msgSend_wasDeselectedForUUID_(void *a1, const char *a2, ...)
{
  return [a1 wasDeselectedForUUID:];
}

id objc_msgSend_wasManuallyRenamed(void *a1, const char *a2, ...)
{
  return _[a1 wasManuallyRenamed];
}

id objc_msgSend_watchOSPredicate(void *a1, const char *a2, ...)
{
  return _[a1 watchOSPredicate];
}

id objc_msgSend_waveformAmpSlicesForRendering(void *a1, const char *a2, ...)
{
  return _[a1 waveformAmpSlicesForRendering];
}

id objc_msgSend_waveformColorCalculator(void *a1, const char *a2, ...)
{
  return _[a1 waveformColorCalculator];
}

id objc_msgSend_waveformColorForSelected_muted_trimMode_(void *a1, const char *a2, ...)
{
  return [a1 waveformColorForSelected:muted:trimMode:];
}

id objc_msgSend_waveformCompactBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 waveformCompactBackgroundColor];
}

id objc_msgSend_waveformCompactHighlightedBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 waveformCompactHighlightedBackgroundColor];
}

id objc_msgSend_waveformContainerViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 waveformContainerViewControllers];
}

id objc_msgSend_waveformDataProvider(void *a1, const char *a2, ...)
{
  return _[a1 waveformDataProvider];
}

id objc_msgSend_waveformDataSource(void *a1, const char *a2, ...)
{
  return _[a1 waveformDataSource];
}

id objc_msgSend_waveformDisplayMode(void *a1, const char *a2, ...)
{
  return _[a1 waveformDisplayMode];
}

id objc_msgSend_waveformExtraBlurEffectRadius(void *a1, const char *a2, ...)
{
  return _[a1 waveformExtraBlurEffectRadius];
}

id objc_msgSend_waveformGenerator(void *a1, const char *a2, ...)
{
  return _[a1 waveformGenerator];
}

id objc_msgSend_waveformHorizontalSpacing(void *a1, const char *a2, ...)
{
  return _[a1 waveformHorizontalSpacing];
}

id objc_msgSend_waveformLayer(void *a1, const char *a2, ...)
{
  return _[a1 waveformLayer];
}

id objc_msgSend_waveformPlaybackBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 waveformPlaybackBackgroundColor];
}

id objc_msgSend_waveformPlaybackHighlightedBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 waveformPlaybackHighlightedBackgroundColor];
}

id objc_msgSend_waveformRecordingColor(void *a1, const char *a2, ...)
{
  return _[a1 waveformRecordingColor];
}

id objc_msgSend_waveformRectForLayoutBounds_(void *a1, const char *a2, ...)
{
  return [a1 waveformRectForLayoutBounds:];
}

id objc_msgSend_waveformRenderer_contentWidthDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waveformRenderer:contentWidthDidChange:");
}

id objc_msgSend_waveformSegmentsIntersectingTimeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waveformSegmentsIntersectingTimeRange:");
}

id objc_msgSend_waveformSelectionOverlay_didFinishTrackingSelectionBeginTime_endTime_assetCurrentTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waveformSelectionOverlay:didFinishTrackingSelectionBeginTime:endTime:assetCurrentTime:");
}

id objc_msgSend_waveformSelectionOverlay_offsetForTime_(void *a1, const char *a2, ...)
{
  return [a1 waveformSelectionOverlay:offsetForTime:];
}

id objc_msgSend_waveformSelectionOverlay_timeForOffset_(void *a1, const char *a2, ...)
{
  return [a1 waveformSelectionOverlay:timeForOffset:];
}

id objc_msgSend_waveformSelectionOverlay_willBeginTrackingSelectionBeginTime_endTime_assetCurrentTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waveformSelectionOverlay:willBeginTrackingSelectionBeginTime:endTime:assetCurrentTime:");
}

id objc_msgSend_waveformSelectionOverlay_willChangeAssetCurrentTime_isTracking_(void *a1, const char *a2, ...)
{
  return [a1 waveformSelectionOverlay:willChangeAssetCurrentTime:isTracking:];
}

id objc_msgSend_waveformSelectionOverlay_willChangeSelectedTimeRange_isTrackingMin_isTrackingMax_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waveformSelectionOverlay:willChangeSelectedTimeRange:isTrackingMin:isTrackingMax:");
}

id objc_msgSend_waveformSelectionOverlayGetCurrentTime_(void *a1, const char *a2, ...)
{
  return [a1 waveformSelectionOverlayGetCurrentTime];
}

id objc_msgSend_waveformSelectionOverlayNeedsExplicitAnimations(void *a1, const char *a2, ...)
{
  return _[a1 waveformSelectionOverlayNeedsExplicitAnimations];
}

id objc_msgSend_waveformSliceIndexes(void *a1, const char *a2, ...)
{
  return _[a1 waveformSliceIndexes];
}

id objc_msgSend_waveformSlices(void *a1, const char *a2, ...)
{
  return _[a1 waveformSlices];
}

id objc_msgSend_waveformTimeUpdated_(void *a1, const char *a2, ...)
{
  return [a1 waveformTimeUpdated:];
}

id objc_msgSend_waveformURLForAVURL_trackIndex_(void *a1, const char *a2, ...)
{
  return [a1 waveformURLForAVURL:trackIndex:];
}

id objc_msgSend_waveformView(void *a1, const char *a2, ...)
{
  return _[a1 waveformView];
}

id objc_msgSend_waveformViewBlurEffectRadius(void *a1, const char *a2, ...)
{
  return _[a1 waveformViewBlurEffectRadius];
}

id objc_msgSend_waveformViewController(void *a1, const char *a2, ...)
{
  return _[a1 waveformViewController];
}

id objc_msgSend_waveformViewController_didChangeToSelectedTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 waveformViewController:didChangeToSelectedTimeRange:];
}

id objc_msgSend_waveformViewController_didChangeToVisibleTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 waveformViewController:didChangeToVisibleTimeRange:];
}

id objc_msgSend_waveformViewController_didScrubToTime_finished_(void *a1, const char *a2, ...)
{
  return [a1 waveformViewController:didScrubToTime:finished:];
}

id objc_msgSend_waveformViewControllerDidEndEditingSelectedTimeRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waveformViewControllerDidEndEditingSelectedTimeRange:");
}

id objc_msgSend_waveformViewControllerWillBeginEditingSelectedTimeRange_(void *a1, const char *a2, ...)
{
  return [a1 waveformViewControllerWillBeginEditingSelectedTimeRange:];
}

id objc_msgSend_waveformViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 waveformViewControllers];
}

id objc_msgSend_waveformWaveVerticalPadding(void *a1, const char *a2, ...)
{
  return _[a1 waveformWaveVerticalPadding];
}

id objc_msgSend_waveformWaveWidth(void *a1, const char *a2, ...)
{
  return _[a1 waveformWaveWidth];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_weakToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 weakToStrongObjectsMapTable];
}

id objc_msgSend_welcomeMustShowOrIsShowing(void *a1, const char *a2, ...)
{
  return _[a1 welcomeMustShowOrIsShowing];
}

id objc_msgSend_welcomeScreenHasContinued(void *a1, const char *a2, ...)
{
  return _[a1 welcomeScreenHasContinued];
}

id objc_msgSend_welcomeViewController(void *a1, const char *a2, ...)
{
  return _[a1 welcomeViewController];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_width(void *a1, const char *a2, ...)
{
  return _[a1 width];
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _[a1 widthAnchor];
}

id objc_msgSend_willBeginDragSession(void *a1, const char *a2, ...)
{
  return _[a1 willBeginDragSession];
}

id objc_msgSend_willCollapseTranscriptView(void *a1, const char *a2, ...)
{
  return _[a1 willCollapseTranscriptView];
}

id objc_msgSend_willDisplayTranscriptView(void *a1, const char *a2, ...)
{
  return _[a1 willDisplayTranscriptView];
}

id objc_msgSend_willExpandTranscriptView(void *a1, const char *a2, ...)
{
  return _[a1 willExpandTranscriptView];
}

id objc_msgSend_willMigrateFromM4aToQta(void *a1, const char *a2, ...)
{
  return _[a1 willMigrateFromM4aToQta];
}

id objc_msgSend_willMigrateFromSingleLayerToMultiLayer(void *a1, const char *a2, ...)
{
  return _[a1 willMigrateFromSingleLayerToMultiLayer];
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 willMoveToParentViewController:];
}

id objc_msgSend_willPlayPendingPreparation(void *a1, const char *a2, ...)
{
  return _[a1 willPlayPendingPreparation];
}

id objc_msgSend_willRecordIntoTrackTwo(void *a1, const char *a2, ...)
{
  return _[a1 willRecordIntoTrackTwo];
}

id objc_msgSend_willSelectItemWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 willSelectItemWithUUID:];
}

id objc_msgSend_willSelectRecordingAfterExitingEditMode(void *a1, const char *a2, ...)
{
  return _[a1 willSelectRecordingAfterExitingEditMode];
}

id objc_msgSend_willUpdateBottomLayoutForEditing(void *a1, const char *a2, ...)
{
  return _[a1 willUpdateBottomLayoutForEditing];
}

id objc_msgSend_willUpdateRecordingCenterContentViewState_(void *a1, const char *a2, ...)
{
  return [a1 willUpdateRecordingCenterContentViewState:];
}

id objc_msgSend_willUpdateRecordingViewTranscriptState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willUpdateRecordingViewTranscriptState:");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _[a1 windowScene];
}

id objc_msgSend_windowSceneDidEnterBackground(void *a1, const char *a2, ...)
{
  return _[a1 windowSceneDidEnterBackground];
}

id objc_msgSend_windowSceneWillEnterForeground(void *a1, const char *a2, ...)
{
  return _[a1 windowSceneWillEnterForeground];
}

id objc_msgSend_wrapperViewBottomConstraint(void *a1, const char *a2, ...)
{
  return _[a1 wrapperViewBottomConstraint];
}

id objc_msgSend_writeAudioFile_buffer_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 writeAudioFile:buffer:completionBlock:];
}

id objc_msgSend_writeFromBuffer_error_(void *a1, const char *a2, ...)
{
  return [a1 writeFromBuffer:error:];
}

id objc_msgSend_writeGraphTextToFile_samplerate_bufferSize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeGraphTextToFile:samplerate:bufferSize:error:");
}

id objc_msgSend_writeToFile_atomically_encoding_error_(void *a1, const char *a2, ...)
{
  return [a1 writeToFile:atomically:encoding:error:];
}

id objc_msgSend_xPositionForSliceAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 xPositionForSliceAtIndex:];
}

id objc_msgSend_xPositionWithSelectedTickValue_forTrackRect_(void *a1, const char *a2, ...)
{
  return [a1 xPositionWithSelectedTickValue:forTrackRect:];
}

id objc_msgSend_zoomScale(void *a1, const char *a2, ...)
{
  return _[a1 zoomScale];
}